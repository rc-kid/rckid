#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_e0)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_e0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // E0 0000
        gbc.setState(0xa616, 0xed39, 0xa700, 0xe1f8, 0xb9dc, 0xf821, 0x0, 0x1);
        gbc.writeMem(0xa616, { 0xe0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xed39);
        EXPECT(gbc.pc(), 0xa618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa616), 0xe0);
        EXPECT(gbc.readMem(0xa617), 0xc8);
        EXPECT(gbc.readMem(0xffc8), 0xa7);
        // E0 0001
        gbc.setState(0xaf55, 0x5d56, 0xa4a0, 0x8871, 0xb991, 0x2566, 0x0, 0x1);
        gbc.writeMem(0xaf55, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5d56);
        EXPECT(gbc.pc(), 0xaf57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf55), 0xe0);
        EXPECT(gbc.readMem(0xaf56), 0x3f);
        EXPECT(gbc.readMem(0xff3f), 0xa4);
        // E0 0002
        gbc.setState(0x5050, 0xa765, 0x9110, 0xcc6, 0xca5a, 0x9555, 0x0, 0x1);
        gbc.writeMem(0x5050, { 0xe0, 0xe0 });
        gbc.writeMem(0xffe0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa765);
        EXPECT(gbc.pc(), 0x5052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe0), 0x91);
        // E0 0003
        gbc.setState(0xad9, 0xae68, 0x30d0, 0x96a0, 0x123b, 0x4edd, 0x0, 0x0);
        gbc.writeMem(0xad9, { 0xe0, 0x22 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xae68);
        EXPECT(gbc.pc(), 0xadb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff22), 0x30);
        // E0 0004
        gbc.setState(0x1f38, 0x91bc, 0x2030, 0x2745, 0xa945, 0x9f02, 0x0, 0x0);
        gbc.writeMem(0x1f38, { 0xe0, 0x96 });
        gbc.writeMem(0xff96, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x91bc);
        EXPECT(gbc.pc(), 0x1f3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff96), 0x20);
        // E0 0005
        gbc.setState(0x3e45, 0x44fa, 0xb130, 0x3e5d, 0xe3bb, 0xd314, 0x1, 0x0);
        gbc.writeMem(0x3e45, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x44fa);
        EXPECT(gbc.pc(), 0x3e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2a), 0xb1);
        // E0 0006
        gbc.setState(0x3fe6, 0x6eca, 0xc700, 0x672a, 0x68a4, 0x6954, 0x1, 0x0);
        gbc.writeMem(0x3fe6, { 0xe0, 0x18 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6eca);
        EXPECT(gbc.pc(), 0x3fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff18), 0xc7);
        // E0 0007
        gbc.setState(0xa391, 0xa54a, 0xbca0, 0x13cc, 0xc23c, 0x6f20, 0x1, 0x0);
        gbc.writeMem(0xa391, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa54a);
        EXPECT(gbc.pc(), 0xa393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa391), 0xe0);
        EXPECT(gbc.readMem(0xa392), 0xea);
        EXPECT(gbc.readMem(0xffea), 0xbc);
        // E0 0008
        gbc.setState(0x95c7, 0x6702, 0x9d0, 0x4b9f, 0x3691, 0xd684, 0x1, 0x0);
        gbc.writeMem(0x95c7, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6702);
        EXPECT(gbc.pc(), 0x95c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95c7), 0xe0);
        EXPECT(gbc.readMem(0x95c8), 0xc0);
        EXPECT(gbc.readMem(0xffc0), 0x9);
        // E0 0009
        gbc.setState(0xda00, 0x126e, 0x52f0, 0x88da, 0x5577, 0x84f6, 0x1, 0x1);
        gbc.writeMem(0xda00, { 0xe0, 0x8b });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x126e);
        EXPECT(gbc.pc(), 0xda02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda00), 0xe0);
        EXPECT(gbc.readMem(0xda01), 0x8b);
        EXPECT(gbc.readMem(0xff8b), 0x52);
        // E0 000A
        gbc.setState(0xef7f, 0xffb0, 0xb3d0, 0xb9f7, 0xa5a9, 0xd8ba, 0x0, 0x0);
        gbc.writeMem(0xef7f, { 0xe0, 0x8c });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xffb0);
        EXPECT(gbc.pc(), 0xef81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7f), 0xe0);
        EXPECT(gbc.readMem(0xef80), 0x8c);
        EXPECT(gbc.readMem(0xff8c), 0xb3);
        // E0 000B
        gbc.setState(0xb5a8, 0x105b, 0x8450, 0x2d91, 0xb1cd, 0x61c2, 0x0, 0x0);
        gbc.writeMem(0xb5a8, { 0xe0, 0x3e });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x105b);
        EXPECT(gbc.pc(), 0xb5aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5a8), 0xe0);
        EXPECT(gbc.readMem(0xb5a9), 0x3e);
        EXPECT(gbc.readMem(0xff3e), 0x84);
        // E0 000C
        gbc.setState(0x14f9, 0xf6f1, 0xbd80, 0x8719, 0xff91, 0x3010, 0x1, 0x1);
        gbc.writeMem(0x14f9, { 0xe0, 0x6d });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf6f1);
        EXPECT(gbc.pc(), 0x14fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6d), 0xbd);
        // E0 000D
        gbc.setState(0x92db, 0xeeeb, 0xb9b0, 0x3720, 0x644a, 0x5854, 0x0, 0x0);
        gbc.writeMem(0x92db, { 0xe0, 0x53 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xeeeb);
        EXPECT(gbc.pc(), 0x92dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92db), 0xe0);
        EXPECT(gbc.readMem(0x92dc), 0x53);
        EXPECT(gbc.readMem(0xff53), 0xb9);
        // E0 000E
        gbc.setState(0xc803, 0x8400, 0x9560, 0xb5f6, 0x26a9, 0xee5d, 0x1, 0x1);
        gbc.writeMem(0xc803, { 0xe0, 0x56 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8400);
        EXPECT(gbc.pc(), 0xc805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc803), 0xe0);
        EXPECT(gbc.readMem(0xc804), 0x56);
        EXPECT(gbc.readMem(0xff56), 0x95);
        // E0 000F
        gbc.setState(0x106, 0x5fbf, 0xa4b0, 0x5980, 0xe1b9, 0xd09c, 0x1, 0x0);
        gbc.writeMem(0x106, { 0xe0, 0x8f });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5fbf);
        EXPECT(gbc.pc(), 0x108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8f), 0xa4);
        // E0 0010
        gbc.setState(0xb20c, 0xdd34, 0x4aa0, 0xb687, 0x1b25, 0x2b11, 0x0, 0x0);
        gbc.writeMem(0xb20c, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xdd34);
        EXPECT(gbc.pc(), 0xb20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20c), 0xe0);
        EXPECT(gbc.readMem(0xb20d), 0xdc);
        EXPECT(gbc.readMem(0xffdc), 0x4a);
        // E0 0011
        gbc.setState(0xa573, 0x97d0, 0x1400, 0xbe46, 0x2eea, 0xbb91, 0x0, 0x0);
        gbc.writeMem(0xa573, { 0xe0, 0x90 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x97d0);
        EXPECT(gbc.pc(), 0xa575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa573), 0xe0);
        EXPECT(gbc.readMem(0xa574), 0x90);
        EXPECT(gbc.readMem(0xff90), 0x14);
        // E0 0012
        gbc.setState(0xad52, 0x1f4d, 0x92b0, 0xf0bf, 0xe661, 0xd8ae, 0x1, 0x0);
        gbc.writeMem(0xad52, { 0xe0, 0x8b });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1f4d);
        EXPECT(gbc.pc(), 0xad54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad52), 0xe0);
        EXPECT(gbc.readMem(0xad53), 0x8b);
        EXPECT(gbc.readMem(0xff8b), 0x92);
        // E0 0013
        gbc.setState(0xa3c9, 0x84ad, 0xf660, 0x672a, 0xe37e, 0x2eb8, 0x0, 0x0);
        gbc.writeMem(0xa3c9, { 0xe0, 0xd5 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x84ad);
        EXPECT(gbc.pc(), 0xa3cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c9), 0xe0);
        EXPECT(gbc.readMem(0xa3ca), 0xd5);
        EXPECT(gbc.readMem(0xffd5), 0xf6);
        // E0 0014
        gbc.setState(0x9057, 0xc50c, 0xb9b0, 0x2ae, 0x2a12, 0xf61e, 0x1, 0x0);
        gbc.writeMem(0x9057, { 0xe0, 0xb4 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc50c);
        EXPECT(gbc.pc(), 0x9059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9057), 0xe0);
        EXPECT(gbc.readMem(0x9058), 0xb4);
        EXPECT(gbc.readMem(0xffb4), 0xb9);
        // E0 0015
        gbc.setState(0x86ff, 0xd245, 0xf5e0, 0xd2f, 0x42d6, 0x6609, 0x1, 0x0);
        gbc.writeMem(0x86ff, { 0xe0, 0x98 });
        gbc.writeMem(0xff98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd245);
        EXPECT(gbc.pc(), 0x8701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ff), 0xe0);
        EXPECT(gbc.readMem(0x8700), 0x98);
        EXPECT(gbc.readMem(0xff98), 0xf5);
        // E0 0016
        gbc.setState(0x6e21, 0x45c6, 0x5f0, 0xcd66, 0x3176, 0xbad2, 0x1, 0x0);
        gbc.writeMem(0x6e21, { 0xe0, 0x11 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x45c6);
        EXPECT(gbc.pc(), 0x6e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff11), 0x5);
        // E0 0017
        gbc.setState(0x1f57, 0x3d0e, 0x6a90, 0x17eb, 0xed3e, 0xbd5, 0x1, 0x0);
        gbc.writeMem(0x1f57, { 0xe0, 0xc1 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3d0e);
        EXPECT(gbc.pc(), 0x1f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc1), 0x6a);
        // E0 0018
        gbc.setState(0x9e69, 0xd733, 0xdf30, 0x16fa, 0x400, 0x599f, 0x1, 0x1);
        gbc.writeMem(0x9e69, { 0xe0, 0x7f });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd733);
        EXPECT(gbc.pc(), 0x9e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e69), 0xe0);
        EXPECT(gbc.readMem(0x9e6a), 0x7f);
        EXPECT(gbc.readMem(0xff7f), 0xdf);
        // E0 0019
        gbc.setState(0x9665, 0xbe05, 0x1580, 0x17ee, 0xd97e, 0x5425, 0x1, 0x1);
        gbc.writeMem(0x9665, { 0xe0, 0x5b });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbe05);
        EXPECT(gbc.pc(), 0x9667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9665), 0xe0);
        EXPECT(gbc.readMem(0x9666), 0x5b);
        EXPECT(gbc.readMem(0xff5b), 0x15);
        // E0 001A
        gbc.setState(0xcb99, 0x6bdf, 0xad40, 0x7250, 0xa30b, 0xe52f, 0x0, 0x0);
        gbc.writeMem(0xcb99, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6bdf);
        EXPECT(gbc.pc(), 0xcb9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb99), 0xe0);
        EXPECT(gbc.readMem(0xcb9a), 0x48);
        EXPECT(gbc.readMem(0xff48), 0xad);
        // E0 001B
        gbc.setState(0xadeb, 0x9bd3, 0x89a0, 0xb316, 0x575b, 0x4f5c, 0x1, 0x0);
        gbc.writeMem(0xadeb, { 0xe0, 0xc1 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9bd3);
        EXPECT(gbc.pc(), 0xaded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadeb), 0xe0);
        EXPECT(gbc.readMem(0xadec), 0xc1);
        EXPECT(gbc.readMem(0xffc1), 0x89);
        // E0 001C
        gbc.setState(0x3745, 0xa2c8, 0xbcf0, 0x3c1c, 0xb6b8, 0xbc72, 0x1, 0x0);
        gbc.writeMem(0x3745, { 0xe0, 0x4d });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa2c8);
        EXPECT(gbc.pc(), 0x3747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4d), 0xbc);
        // E0 001D
        gbc.setState(0xa009, 0x4bf8, 0xeae0, 0xd84, 0xb689, 0x9855, 0x0, 0x1);
        gbc.writeMem(0xa009, { 0xe0, 0xb6 });
        gbc.writeMem(0xffb6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4bf8);
        EXPECT(gbc.pc(), 0xa00b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa009), 0xe0);
        EXPECT(gbc.readMem(0xa00a), 0xb6);
        EXPECT(gbc.readMem(0xffb6), 0xea);
        // E0 001E
        gbc.setState(0x4dc5, 0xc9f2, 0x29e0, 0x5bc8, 0xd178, 0xa2df, 0x1, 0x1);
        gbc.writeMem(0x4dc5, { 0xe0, 0x10 });
        gbc.writeMem(0xff10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc9f2);
        EXPECT(gbc.pc(), 0x4dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff10), 0x29);
        // E0 001F
        gbc.setState(0x673a, 0x5ce5, 0xfa40, 0x8737, 0xddee, 0xd287, 0x0, 0x1);
        gbc.writeMem(0x673a, { 0xe0, 0xbc });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5ce5);
        EXPECT(gbc.pc(), 0x673c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffbc), 0xfa);
        // E0 0020
        gbc.setState(0x5ec5, 0xe3a1, 0x110, 0x45cf, 0x6ec0, 0x9bf1, 0x0, 0x1);
        gbc.writeMem(0x5ec5, { 0xe0, 0xc7 });
        gbc.writeMem(0xffc7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe3a1);
        EXPECT(gbc.pc(), 0x5ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc7), 0x1);
        // E0 0021
        gbc.setState(0xa4e3, 0xb142, 0x7b70, 0x37d0, 0xcae7, 0x9afc, 0x1, 0x0);
        gbc.writeMem(0xa4e3, { 0xe0, 0x67 });
        gbc.writeMem(0xff67, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb142);
        EXPECT(gbc.pc(), 0xa4e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e3), 0xe0);
        EXPECT(gbc.readMem(0xa4e4), 0x67);
        EXPECT(gbc.readMem(0xff67), 0x7b);
        // E0 0022
        gbc.setState(0x6c29, 0x34d, 0x56e0, 0xb6fc, 0x19b1, 0xb888, 0x1, 0x0);
        gbc.writeMem(0x6c29, { 0xe0, 0x8b });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x34d);
        EXPECT(gbc.pc(), 0x6c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8b), 0x56);
        // E0 0023
        gbc.setState(0xab74, 0x897e, 0xea50, 0xb378, 0xf499, 0x3059, 0x0, 0x1);
        gbc.writeMem(0xab74, { 0xe0, 0x41 });
        gbc.writeMem(0xff41, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x897e);
        EXPECT(gbc.pc(), 0xab76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab74), 0xe0);
        EXPECT(gbc.readMem(0xab75), 0x41);
        EXPECT(gbc.readMem(0xff41), 0xea);
        // E0 0024
        gbc.setState(0x906, 0x55ae, 0x76e0, 0xbcd6, 0x1e97, 0x60db, 0x1, 0x0);
        gbc.writeMem(0x906, { 0xe0, 0xa7 });
        gbc.writeMem(0xffa7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x55ae);
        EXPECT(gbc.pc(), 0x908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa7), 0x76);
        // E0 0026
        gbc.setState(0x4d42, 0x51cb, 0xa030, 0x8e25, 0xf7a4, 0x4b3d, 0x1, 0x0);
        gbc.writeMem(0x4d42, { 0xe0, 0xec });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x51cb);
        EXPECT(gbc.pc(), 0x4d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffec), 0xa0);
        // E0 0027
        gbc.setState(0x6527, 0xf92, 0xb670, 0x966, 0xf17d, 0xd573, 0x1, 0x0);
        gbc.writeMem(0x6527, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf92);
        EXPECT(gbc.pc(), 0x6529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffcb), 0xb6);
        // E0 0028
        gbc.setState(0x2d59, 0x4047, 0x6480, 0x673b, 0x2fd9, 0x122, 0x0, 0x1);
        gbc.writeMem(0x2d59, { 0xe0, 0x9c });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4047);
        EXPECT(gbc.pc(), 0x2d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9c), 0x64);
        // E0 0029
        gbc.setState(0x767e, 0x565c, 0xf730, 0x7a27, 0x6aa, 0xee36, 0x1, 0x1);
        gbc.writeMem(0x767e, { 0xe0, 0xc4 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x565c);
        EXPECT(gbc.pc(), 0x7680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc4), 0xf7);
        // E0 002A
        gbc.setState(0x9e54, 0xdfb8, 0x9b40, 0x641b, 0xdcbf, 0x9b0, 0x1, 0x1);
        gbc.writeMem(0x9e54, { 0xe0, 0x60 });
        gbc.writeMem(0xff60, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdfb8);
        EXPECT(gbc.pc(), 0x9e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e54), 0xe0);
        EXPECT(gbc.readMem(0x9e55), 0x60);
        EXPECT(gbc.readMem(0xff60), 0x9b);
        // E0 002B
        gbc.setState(0x9b19, 0xc92b, 0x1f10, 0xb47d, 0x1da, 0x33e2, 0x1, 0x0);
        gbc.writeMem(0x9b19, { 0xe0, 0xa4 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc92b);
        EXPECT(gbc.pc(), 0x9b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b19), 0xe0);
        EXPECT(gbc.readMem(0x9b1a), 0xa4);
        EXPECT(gbc.readMem(0xffa4), 0x1f);
        // E0 002C
        gbc.setState(0x6671, 0x2470, 0xc930, 0x579d, 0x68f0, 0xef18, 0x1, 0x0);
        gbc.writeMem(0x6671, { 0xe0, 0x15 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2470);
        EXPECT(gbc.pc(), 0x6673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff15), 0xc9);
        // E0 002D
        gbc.setState(0x53e4, 0xa006, 0xac90, 0xa911, 0x52c7, 0xa24e, 0x1, 0x0);
        gbc.writeMem(0x53e4, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa006);
        EXPECT(gbc.pc(), 0x53e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2a), 0xac);
        // E0 002E
        gbc.setState(0x1042, 0xb0f2, 0x9890, 0x26ff, 0x15c, 0xb038, 0x1, 0x0);
        gbc.writeMem(0x1042, { 0xe0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb0f2);
        EXPECT(gbc.pc(), 0x1044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe6), 0x98);
        // E0 002F
        gbc.setState(0xd1f7, 0x1e54, 0x6960, 0x9650, 0x2f41, 0xf277, 0x0, 0x0);
        gbc.writeMem(0xd1f7, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1e54);
        EXPECT(gbc.pc(), 0xd1f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f7), 0xe0);
        EXPECT(gbc.readMem(0xd1f8), 0x52);
        EXPECT(gbc.readMem(0xff52), 0x69);
        // E0 0030
        gbc.setState(0x1ec7, 0x85cf, 0x7eb0, 0x4db, 0x53bb, 0x808d, 0x0, 0x1);
        gbc.writeMem(0x1ec7, { 0xe0, 0xd });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x85cf);
        EXPECT(gbc.pc(), 0x1ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0d), 0x7e);
        // E0 0031
        gbc.setState(0x1083, 0x7fac, 0x1370, 0x83ed, 0xde29, 0x297a, 0x0, 0x1);
        gbc.writeMem(0x1083, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7fac);
        EXPECT(gbc.pc(), 0x1085);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffaf), 0x13);
        // E0 0032
        gbc.setState(0x5d4d, 0x405f, 0x5e20, 0xce8a, 0x898f, 0x69be, 0x1, 0x0);
        gbc.writeMem(0x5d4d, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x405f);
        EXPECT(gbc.pc(), 0x5d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffaf), 0x5e);
        // E0 0033
        gbc.setState(0x9984, 0x59e1, 0x24e0, 0x3022, 0x13e7, 0x949d, 0x0, 0x0);
        gbc.writeMem(0x9984, { 0xe0, 0x3c });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x59e1);
        EXPECT(gbc.pc(), 0x9986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9984), 0xe0);
        EXPECT(gbc.readMem(0x9985), 0x3c);
        EXPECT(gbc.readMem(0xff3c), 0x24);
        // E0 0034
        gbc.setState(0x48d3, 0x7c33, 0xcce0, 0x4b51, 0x51b7, 0x537e, 0x0, 0x0);
        gbc.writeMem(0x48d3, { 0xe0, 0x1f });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7c33);
        EXPECT(gbc.pc(), 0x48d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff1f), 0xcc);
        // E0 0035
        gbc.setState(0x4e1d, 0x9352, 0xb4e0, 0xd5f8, 0x424e, 0xa56d, 0x0, 0x0);
        gbc.writeMem(0x4e1d, { 0xe0, 0x21 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9352);
        EXPECT(gbc.pc(), 0x4e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff21), 0xb4);
        // E0 0036
        gbc.setState(0xe0ca, 0x75f7, 0x47c0, 0x56ae, 0x31a5, 0xeae5, 0x0, 0x0);
        gbc.writeMem(0xe0ca, { 0xe0, 0x20 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x75f7);
        EXPECT(gbc.pc(), 0xe0cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ca), 0xe0);
        EXPECT(gbc.readMem(0xe0cb), 0x20);
        EXPECT(gbc.readMem(0xff20), 0x47);
        // E0 0037
        gbc.setState(0x5af0, 0x7f83, 0x31c0, 0x29f6, 0x5144, 0xcc6e, 0x1, 0x0);
        gbc.writeMem(0x5af0, { 0xe0, 0xe5 });
        gbc.writeMem(0xffe5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7f83);
        EXPECT(gbc.pc(), 0x5af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe5), 0x31);
        // E0 0039
        gbc.setState(0x4e97, 0x200e, 0x2d70, 0xa590, 0x4dfa, 0x5f8f, 0x0, 0x1);
        gbc.writeMem(0x4e97, { 0xe0, 0xd6 });
        gbc.writeMem(0xffd6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x200e);
        EXPECT(gbc.pc(), 0x4e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd6), 0x2d);
        // E0 003A
        gbc.setState(0x6565, 0x2df3, 0xd1d0, 0xca91, 0x1337, 0x5bb3, 0x0, 0x1);
        gbc.writeMem(0x6565, { 0xe0, 0x9b });
        gbc.writeMem(0xff9b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2df3);
        EXPECT(gbc.pc(), 0x6567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9b), 0xd1);
        // E0 003B
        gbc.setState(0x4903, 0x37e3, 0x8c60, 0x84e8, 0x351c, 0xe679, 0x0, 0x0);
        gbc.writeMem(0x4903, { 0xe0, 0x6e });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x37e3);
        EXPECT(gbc.pc(), 0x4905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6e), 0x8c);
        // E0 003C
        gbc.setState(0x356b, 0xe8ed, 0xbd30, 0xd408, 0x213c, 0xfa36, 0x1, 0x0);
        gbc.writeMem(0x356b, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe8ed);
        EXPECT(gbc.pc(), 0x356d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffa2), 0xbd);
        // E0 003D
        gbc.setState(0xd632, 0xebf6, 0xfcc0, 0x2930, 0x63be, 0x2f78, 0x1, 0x0);
        gbc.writeMem(0xd632, { 0xe0, 0x82 });
        gbc.writeMem(0xff82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xebf6);
        EXPECT(gbc.pc(), 0xd634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd632), 0xe0);
        EXPECT(gbc.readMem(0xd633), 0x82);
        EXPECT(gbc.readMem(0xff82), 0xfc);
        // E0 003E
        gbc.setState(0xdf01, 0x1dce, 0x8a30, 0x9b55, 0x43bc, 0x3ff3, 0x0, 0x0);
        gbc.writeMem(0xdf01, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1dce);
        EXPECT(gbc.pc(), 0xdf03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf01), 0xe0);
        EXPECT(gbc.readMem(0xdf02), 0x48);
        EXPECT(gbc.readMem(0xff48), 0x8a);
        // E0 003F
        gbc.setState(0x3b0a, 0xb594, 0x3280, 0xa053, 0xd34c, 0x16a1, 0x1, 0x0);
        gbc.writeMem(0x3b0a, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb594);
        EXPECT(gbc.pc(), 0x3b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffad), 0x32);
        // E0 0040
        gbc.setState(0x4212, 0xedac, 0x5c80, 0x945c, 0x604f, 0x5e8c, 0x0, 0x0);
        gbc.writeMem(0x4212, { 0xe0, 0x8d });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xedac);
        EXPECT(gbc.pc(), 0x4214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8d), 0x5c);
        // E0 0041
        gbc.setState(0x702a, 0x2e6, 0xdea0, 0xcb3b, 0xc19, 0x13d2, 0x1, 0x0);
        gbc.writeMem(0x702a, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2e6);
        EXPECT(gbc.pc(), 0x702c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4c), 0xde);
        // E0 0042
        gbc.setState(0xb52e, 0xeac, 0x69f0, 0xb61a, 0xec31, 0x893, 0x0, 0x0);
        gbc.writeMem(0xb52e, { 0xe0, 0x77 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xeac);
        EXPECT(gbc.pc(), 0xb530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52e), 0xe0);
        EXPECT(gbc.readMem(0xb52f), 0x77);
        EXPECT(gbc.readMem(0xff77), 0x69);
        // E0 0043
        gbc.setState(0xb6d2, 0x6200, 0x2190, 0x2d93, 0xdb2f, 0xb45f, 0x0, 0x1);
        gbc.writeMem(0xb6d2, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6200);
        EXPECT(gbc.pc(), 0xb6d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d2), 0xe0);
        EXPECT(gbc.readMem(0xb6d3), 0xdc);
        EXPECT(gbc.readMem(0xffdc), 0x21);
        // E0 0044
        gbc.setState(0x1fa0, 0x5fdf, 0x2130, 0xf167, 0x569b, 0x1c46, 0x1, 0x0);
        gbc.writeMem(0x1fa0, { 0xe0, 0xbe });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5fdf);
        EXPECT(gbc.pc(), 0x1fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffbe), 0x21);
        // E0 0045
        gbc.setState(0x9d50, 0x9f3a, 0x4c80, 0x39b1, 0x351e, 0x2528, 0x0, 0x0);
        gbc.writeMem(0x9d50, { 0xe0, 0x1f });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9f3a);
        EXPECT(gbc.pc(), 0x9d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d50), 0xe0);
        EXPECT(gbc.readMem(0x9d51), 0x1f);
        EXPECT(gbc.readMem(0xff1f), 0x4c);
        // E0 0046
        gbc.setState(0x46c3, 0x1a43, 0x44d0, 0x941, 0xee10, 0x666c, 0x0, 0x0);
        gbc.writeMem(0x46c3, { 0xe0, 0x74 });
        gbc.writeMem(0xff74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1a43);
        EXPECT(gbc.pc(), 0x46c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff74), 0x44);
        // E0 0047
        gbc.setState(0x8cb7, 0x8ff6, 0x9020, 0x76e6, 0xc0b6, 0x2315, 0x1, 0x0);
        gbc.writeMem(0x8cb7, { 0xe0, 0xf2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8ff6);
        EXPECT(gbc.pc(), 0x8cb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb7), 0xe0);
        EXPECT(gbc.readMem(0x8cb8), 0xf2);
        EXPECT(gbc.readMem(0xfff2), 0x90);
        // E0 0048
        gbc.setState(0x3aa, 0x8cf7, 0xb0, 0x5ac6, 0x5cca, 0x62f4, 0x1, 0x0);
        gbc.writeMem(0x3aa, { 0xe0, 0x0 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8cf7);
        EXPECT(gbc.pc(), 0x3ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff00), 0x0);
        // E0 0049
        gbc.setState(0x78c5, 0xfb44, 0xb3b0, 0xb1c2, 0x1f95, 0x20a3, 0x0, 0x1);
        gbc.writeMem(0x78c5, { 0xe0, 0xd1 });
        gbc.writeMem(0xffd1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfb44);
        EXPECT(gbc.pc(), 0x78c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd1), 0xb3);
        // E0 004A
        gbc.setState(0x7c1b, 0xff08, 0x6e0, 0x6c63, 0x787f, 0xcc8d, 0x0, 0x1);
        gbc.writeMem(0x7c1b, { 0xe0, 0x19 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xff08);
        EXPECT(gbc.pc(), 0x7c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff19), 0x6);
        // E0 004C
        gbc.setState(0x7f84, 0x5542, 0xe0a0, 0x1331, 0x63a, 0xccbf, 0x0, 0x0);
        gbc.writeMem(0x7f84, { 0xe0, 0x8f });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5542);
        EXPECT(gbc.pc(), 0x7f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8f), 0xe0);
        // E0 004D
        gbc.setState(0x57fa, 0x317e, 0x8c00, 0xec93, 0xf80a, 0xd36e, 0x1, 0x0);
        gbc.writeMem(0x57fa, { 0xe0, 0xde });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x317e);
        EXPECT(gbc.pc(), 0x57fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffde), 0x8c);
        // E0 004E
        gbc.setState(0x28f0, 0x665e, 0x1c10, 0x6553, 0xedea, 0x601c, 0x1, 0x0);
        gbc.writeMem(0x28f0, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x665e);
        EXPECT(gbc.pc(), 0x28f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5e), 0x1c);
        // E0 004F
        gbc.setState(0x246e, 0x591c, 0xcb00, 0x8ac2, 0x2871, 0xb7f9, 0x0, 0x1);
        gbc.writeMem(0x246e, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x591c);
        EXPECT(gbc.pc(), 0x2470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa2), 0xcb);
        // E0 0050
        gbc.setState(0x9f45, 0xbc0d, 0x3800, 0x9fe2, 0x7c8, 0x1ea2, 0x1, 0x0);
        gbc.writeMem(0x9f45, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbc0d);
        EXPECT(gbc.pc(), 0x9f47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f45), 0xe0);
        EXPECT(gbc.readMem(0x9f46), 0xa2);
        EXPECT(gbc.readMem(0xffa2), 0x38);
        // E0 0051
        gbc.setState(0x2610, 0xf3ca, 0x4e90, 0x27af, 0x7962, 0x7cbe, 0x1, 0x0);
        gbc.writeMem(0x2610, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf3ca);
        EXPECT(gbc.pc(), 0x2612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9a), 0x4e);
        // E0 0052
        gbc.setState(0xbdb3, 0x489c, 0x6810, 0x7490, 0x87a4, 0x7d2a, 0x0, 0x1);
        gbc.writeMem(0xbdb3, { 0xe0, 0xe8 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x489c);
        EXPECT(gbc.pc(), 0xbdb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb3), 0xe0);
        EXPECT(gbc.readMem(0xbdb4), 0xe8);
        EXPECT(gbc.readMem(0xffe8), 0x68);
        // E0 0053
        gbc.setState(0xe2e1, 0x47a2, 0xfa40, 0x6e03, 0xab46, 0x649b, 0x1, 0x1);
        gbc.writeMem(0xe2e1, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x47a2);
        EXPECT(gbc.pc(), 0xe2e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e1), 0xe0);
        EXPECT(gbc.readMem(0xe2e2), 0xca);
        EXPECT(gbc.readMem(0xffca), 0xfa);
        // E0 0054
        gbc.setState(0xa707, 0x4c0b, 0xec10, 0x2bea, 0x7986, 0x454a, 0x1, 0x0);
        gbc.writeMem(0xa707, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4c0b);
        EXPECT(gbc.pc(), 0xa709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa707), 0xe0);
        EXPECT(gbc.readMem(0xa708), 0xaf);
        EXPECT(gbc.readMem(0xffaf), 0xec);
        // E0 0055
        gbc.setState(0x4c94, 0xd36a, 0x6060, 0x7e1b, 0x9897, 0xa172, 0x0, 0x0);
        gbc.writeMem(0x4c94, { 0xe0, 0xe1 });
        gbc.writeMem(0xffe1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd36a);
        EXPECT(gbc.pc(), 0x4c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe1), 0x60);
        // E0 0056
        gbc.setState(0x22db, 0xb36f, 0xfaf0, 0xccfd, 0x2fd0, 0xa13d, 0x1, 0x0);
        gbc.writeMem(0x22db, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb36f);
        EXPECT(gbc.pc(), 0x22dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2a), 0xfa);
        // E0 0057
        gbc.setState(0xd9ed, 0xcba9, 0xa6f0, 0x2123, 0x30d0, 0x6304, 0x0, 0x1);
        gbc.writeMem(0xd9ed, { 0xe0, 0x4 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xcba9);
        EXPECT(gbc.pc(), 0xd9ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ed), 0xe0);
        EXPECT(gbc.readMem(0xd9ee), 0x4);
        EXPECT(gbc.readMem(0xff04), 0xa6);
        // E0 0058
        gbc.setState(0xc44e, 0xe5fd, 0x4af0, 0xe811, 0xd1a2, 0x718f, 0x1, 0x0);
        gbc.writeMem(0xc44e, { 0xe0, 0xed });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe5fd);
        EXPECT(gbc.pc(), 0xc450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc44e), 0xe0);
        EXPECT(gbc.readMem(0xc44f), 0xed);
        EXPECT(gbc.readMem(0xffed), 0x4a);
        // E0 0059
        gbc.setState(0x6a63, 0x387a, 0x6c40, 0xff84, 0x47f6, 0x6b31, 0x0, 0x1);
        gbc.writeMem(0x6a63, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x387a);
        EXPECT(gbc.pc(), 0x6a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5f), 0x6c);
        // E0 005A
        gbc.setState(0xc1b1, 0xbdaf, 0xec90, 0x3a2d, 0xce29, 0x9a93, 0x0, 0x0);
        gbc.writeMem(0xc1b1, { 0xe0, 0xa6 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbdaf);
        EXPECT(gbc.pc(), 0xc1b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b1), 0xe0);
        EXPECT(gbc.readMem(0xc1b2), 0xa6);
        EXPECT(gbc.readMem(0xffa6), 0xec);
        // E0 005B
        gbc.setState(0x9f96, 0x39a2, 0xa1c0, 0x7a16, 0xb2bc, 0x3e8f, 0x0, 0x0);
        gbc.writeMem(0x9f96, { 0xe0, 0x15 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x39a2);
        EXPECT(gbc.pc(), 0x9f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f96), 0xe0);
        EXPECT(gbc.readMem(0x9f97), 0x15);
        EXPECT(gbc.readMem(0xff15), 0xa1);
        // E0 005C
        gbc.setState(0xb5f4, 0x3f21, 0xa490, 0xf0ca, 0x8bf1, 0x8001, 0x1, 0x1);
        gbc.writeMem(0xb5f4, { 0xe0, 0x61 });
        gbc.writeMem(0xff61, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3f21);
        EXPECT(gbc.pc(), 0xb5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f4), 0xe0);
        EXPECT(gbc.readMem(0xb5f5), 0x61);
        EXPECT(gbc.readMem(0xff61), 0xa4);
        // E0 005D
        gbc.setState(0xe764, 0xfdfb, 0xae10, 0x487f, 0xcda8, 0x62de, 0x1, 0x0);
        gbc.writeMem(0xe764, { 0xe0, 0x8b });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfdfb);
        EXPECT(gbc.pc(), 0xe766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe764), 0xe0);
        EXPECT(gbc.readMem(0xe765), 0x8b);
        EXPECT(gbc.readMem(0xff8b), 0xae);
        // E0 005E
        gbc.setState(0x9c33, 0xda13, 0x9200, 0xef96, 0x9206, 0xb707, 0x0, 0x1);
        gbc.writeMem(0x9c33, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xda13);
        EXPECT(gbc.pc(), 0x9c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c33), 0xe0);
        EXPECT(gbc.readMem(0x9c34), 0xa2);
        EXPECT(gbc.readMem(0xffa2), 0x92);
        // E0 005F
        gbc.setState(0xa632, 0xf8ce, 0x8980, 0x2e15, 0x7158, 0x36af, 0x0, 0x1);
        gbc.writeMem(0xa632, { 0xe0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf8ce);
        EXPECT(gbc.pc(), 0xa634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa632), 0xe0);
        EXPECT(gbc.readMem(0xa633), 0xb1);
        EXPECT(gbc.readMem(0xffb1), 0x89);
        // E0 0060
        gbc.setState(0x4829, 0xeef2, 0x1bd0, 0x1c8c, 0x5949, 0x8b02, 0x1, 0x1);
        gbc.writeMem(0x4829, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xeef2);
        EXPECT(gbc.pc(), 0x482b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff51), 0x1b);
        // E0 0062
        gbc.setState(0xad5, 0x17bf, 0xae20, 0x8531, 0x96f0, 0x9ea1, 0x1, 0x1);
        gbc.writeMem(0xad5, { 0xe0, 0x7a });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x17bf);
        EXPECT(gbc.pc(), 0xad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff7a), 0xae);
        // E0 0063
        gbc.setState(0x64c8, 0x4df3, 0x6d30, 0x655c, 0xe074, 0xc360, 0x1, 0x0);
        gbc.writeMem(0x64c8, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4df3);
        EXPECT(gbc.pc(), 0x64ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffad), 0x6d);
        // E0 0064
        gbc.setState(0x82cb, 0xae65, 0xb0b0, 0x9654, 0x21dc, 0x6061, 0x0, 0x1);
        gbc.writeMem(0x82cb, { 0xe0, 0x77 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xae65);
        EXPECT(gbc.pc(), 0x82cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cb), 0xe0);
        EXPECT(gbc.readMem(0x82cc), 0x77);
        EXPECT(gbc.readMem(0xff77), 0xb0);
        // E0 0065
        gbc.setState(0xc728, 0x9564, 0x6290, 0x30f1, 0x7ff2, 0x8672, 0x1, 0x0);
        gbc.writeMem(0xc728, { 0xe0, 0xbb });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9564);
        EXPECT(gbc.pc(), 0xc72a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc728), 0xe0);
        EXPECT(gbc.readMem(0xc729), 0xbb);
        EXPECT(gbc.readMem(0xffbb), 0x62);
        // E0 0066
        gbc.setState(0x295f, 0x1e58, 0x49e0, 0xa8a, 0xf9b6, 0x920a, 0x0, 0x1);
        gbc.writeMem(0x295f, { 0xe0, 0xfe });
        gbc.writeMem(0xfffe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1e58);
        EXPECT(gbc.pc(), 0x2961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfffe), 0x49);
        // E0 0067
        gbc.setState(0x8180, 0x385d, 0x4400, 0xe8dc, 0x7c45, 0x24e3, 0x1, 0x1);
        gbc.writeMem(0x8180, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x385d);
        EXPECT(gbc.pc(), 0x8182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8180), 0xe0);
        EXPECT(gbc.readMem(0x8181), 0x51);
        EXPECT(gbc.readMem(0xff51), 0x44);
        // E0 0068
        gbc.setState(0xe0b6, 0x2c21, 0xa310, 0x9322, 0x1831, 0xde28, 0x0, 0x0);
        gbc.writeMem(0xe0b6, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2c21);
        EXPECT(gbc.pc(), 0xe0b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b6), 0xe0);
        EXPECT(gbc.readMem(0xe0b7), 0x2f);
        EXPECT(gbc.readMem(0xff2f), 0xa3);
        // E0 006A
        gbc.setState(0xc5ec, 0xa1e7, 0x1620, 0xc500, 0xd679, 0x4e79, 0x1, 0x0);
        gbc.writeMem(0xc5ec, { 0xe0, 0x4 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa1e7);
        EXPECT(gbc.pc(), 0xc5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ec), 0xe0);
        EXPECT(gbc.readMem(0xc5ed), 0x4);
        EXPECT(gbc.readMem(0xff04), 0x16);
        // E0 006B
        gbc.setState(0xd17a, 0x4ea1, 0x68e0, 0x9f1d, 0x681b, 0x381a, 0x0, 0x0);
        gbc.writeMem(0xd17a, { 0xe0, 0x75 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4ea1);
        EXPECT(gbc.pc(), 0xd17c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd17a), 0xe0);
        EXPECT(gbc.readMem(0xd17b), 0x75);
        EXPECT(gbc.readMem(0xff75), 0x68);
        // E0 006C
        gbc.setState(0xa9e1, 0x5b2a, 0xf5f0, 0x9bb3, 0xf2e4, 0x7bbe, 0x1, 0x0);
        gbc.writeMem(0xa9e1, { 0xe0, 0x18 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5b2a);
        EXPECT(gbc.pc(), 0xa9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9e1), 0xe0);
        EXPECT(gbc.readMem(0xa9e2), 0x18);
        EXPECT(gbc.readMem(0xff18), 0xf5);
        // E0 006D
        gbc.setState(0xf1, 0x263a, 0x8920, 0xaf73, 0x8a3, 0xf2af, 0x1, 0x0);
        gbc.writeMem(0xf1, { 0xe0, 0xd4 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x263a);
        EXPECT(gbc.pc(), 0xf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd4), 0x89);
        // E0 006E
        gbc.setState(0x22b6, 0x11dd, 0x2500, 0x12bc, 0xb0c7, 0x8652, 0x0, 0x0);
        gbc.writeMem(0x22b6, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x11dd);
        EXPECT(gbc.pc(), 0x22b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff31), 0x25);
        // E0 006F
        gbc.setState(0xdb85, 0xc016, 0x7d40, 0xc23a, 0x55be, 0x13c3, 0x1, 0x0);
        gbc.writeMem(0xdb85, { 0xe0, 0x1a });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc016);
        EXPECT(gbc.pc(), 0xdb87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb85), 0xe0);
        EXPECT(gbc.readMem(0xdb86), 0x1a);
        EXPECT(gbc.readMem(0xff1a), 0x7d);
        // E0 0070
        gbc.setState(0x378d, 0xc6f6, 0x68d0, 0x51c1, 0x7ac2, 0x175, 0x1, 0x1);
        gbc.writeMem(0x378d, { 0xe0, 0x87 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc6f6);
        EXPECT(gbc.pc(), 0x378f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff87), 0x68);
        // E0 0071
        gbc.setState(0xce18, 0xed41, 0x8ee0, 0xbe24, 0x110c, 0xf4ef, 0x1, 0x0);
        gbc.writeMem(0xce18, { 0xe0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xed41);
        EXPECT(gbc.pc(), 0xce1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce18), 0xe0);
        EXPECT(gbc.readMem(0xce19), 0xc6);
        EXPECT(gbc.readMem(0xffc6), 0x8e);
        // E0 0072
        gbc.setState(0x9bd3, 0xfe5a, 0xdc00, 0xa386, 0xd6c, 0xb945, 0x0, 0x0);
        gbc.writeMem(0x9bd3, { 0xe0, 0x74 });
        gbc.writeMem(0xff74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfe5a);
        EXPECT(gbc.pc(), 0x9bd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bd3), 0xe0);
        EXPECT(gbc.readMem(0x9bd4), 0x74);
        EXPECT(gbc.readMem(0xff74), 0xdc);
        // E0 0073
        gbc.setState(0xd0a4, 0xb61d, 0x5580, 0x4064, 0x26b3, 0x5715, 0x1, 0x0);
        gbc.writeMem(0xd0a4, { 0xe0, 0x4e });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb61d);
        EXPECT(gbc.pc(), 0xd0a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a4), 0xe0);
        EXPECT(gbc.readMem(0xd0a5), 0x4e);
        EXPECT(gbc.readMem(0xff4e), 0x55);
        // E0 0074
        gbc.setState(0xc620, 0xc42f, 0xee0, 0xc7ee, 0xa1de, 0x8a93, 0x0, 0x0);
        gbc.writeMem(0xc620, { 0xe0, 0x65 });
        gbc.writeMem(0xff65, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc42f);
        EXPECT(gbc.pc(), 0xc622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc620), 0xe0);
        EXPECT(gbc.readMem(0xc621), 0x65);
        EXPECT(gbc.readMem(0xff65), 0xe);
        // E0 0075
        gbc.setState(0x284b, 0x768f, 0x4570, 0xd30e, 0x962f, 0xdf16, 0x0, 0x1);
        gbc.writeMem(0x284b, { 0xe0, 0x8 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x768f);
        EXPECT(gbc.pc(), 0x284d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff08), 0x45);
        // E0 0076
        gbc.setState(0xb2e4, 0xcdf, 0xfd00, 0x92f6, 0xcf3d, 0x498a, 0x0, 0x0);
        gbc.writeMem(0xb2e4, { 0xe0, 0xf1 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xcdf);
        EXPECT(gbc.pc(), 0xb2e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e4), 0xe0);
        EXPECT(gbc.readMem(0xb2e5), 0xf1);
        EXPECT(gbc.readMem(0xfff1), 0xfd);
        // E0 0077
        gbc.setState(0x20fa, 0x919, 0xf320, 0xdc6e, 0xbe46, 0x8c72, 0x1, 0x0);
        gbc.writeMem(0x20fa, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x919);
        EXPECT(gbc.pc(), 0x20fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff07), 0xf3);
        // E0 0078
        gbc.setState(0xc1ec, 0xada3, 0x8430, 0xf9fb, 0xc0f, 0xd55d, 0x0, 0x0);
        gbc.writeMem(0xc1ec, { 0xe0, 0xc5 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xada3);
        EXPECT(gbc.pc(), 0xc1ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ec), 0xe0);
        EXPECT(gbc.readMem(0xc1ed), 0xc5);
        EXPECT(gbc.readMem(0xffc5), 0x84);
        // E0 0079
        gbc.setState(0x2dc1, 0x101f, 0x75e0, 0xd70f, 0x6c3e, 0x403e, 0x0, 0x0);
        gbc.writeMem(0x2dc1, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x101f);
        EXPECT(gbc.pc(), 0x2dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3f), 0x75);
        // E0 007A
        gbc.setState(0xfc6, 0x6b74, 0xfc10, 0xa5f4, 0x9a7c, 0x3858, 0x0, 0x1);
        gbc.writeMem(0xfc6, { 0xe0, 0x6e });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6b74);
        EXPECT(gbc.pc(), 0xfc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff6e), 0xfc);
        // E0 007B
        gbc.setState(0xb33c, 0x8db6, 0x5bc0, 0x4b6d, 0x9686, 0x9858, 0x0, 0x1);
        gbc.writeMem(0xb33c, { 0xe0, 0x3d });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8db6);
        EXPECT(gbc.pc(), 0xb33e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33c), 0xe0);
        EXPECT(gbc.readMem(0xb33d), 0x3d);
        EXPECT(gbc.readMem(0xff3d), 0x5b);
        // E0 007C
        gbc.setState(0xe95a, 0xdb36, 0xcee0, 0x463b, 0xf9b5, 0xc82e, 0x0, 0x1);
        gbc.writeMem(0xe95a, { 0xe0, 0x2e });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdb36);
        EXPECT(gbc.pc(), 0xe95c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe95a), 0xe0);
        EXPECT(gbc.readMem(0xe95b), 0x2e);
        EXPECT(gbc.readMem(0xff2e), 0xce);
        // E0 007D
        gbc.setState(0xdc40, 0x1de0, 0xa9e0, 0xfef6, 0x2522, 0x7c5c, 0x0, 0x1);
        gbc.writeMem(0xdc40, { 0xe0, 0x91 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1de0);
        EXPECT(gbc.pc(), 0xdc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc40), 0xe0);
        EXPECT(gbc.readMem(0xdc41), 0x91);
        EXPECT(gbc.readMem(0xff91), 0xa9);
        // E0 007E
        gbc.setState(0x9e97, 0xc068, 0xa110, 0xd592, 0xdae0, 0x24, 0x0, 0x1);
        gbc.writeMem(0x9e97, { 0xe0, 0x42 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc068);
        EXPECT(gbc.pc(), 0x9e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e97), 0xe0);
        EXPECT(gbc.readMem(0x9e98), 0x42);
        EXPECT(gbc.readMem(0xff42), 0xa1);
        // E0 007F
        gbc.setState(0x9abe, 0xaee4, 0x1f50, 0x52a3, 0xab25, 0xbb75, 0x0, 0x0);
        gbc.writeMem(0x9abe, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xaee4);
        EXPECT(gbc.pc(), 0x9ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9abe), 0xe0);
        EXPECT(gbc.readMem(0x9abf), 0x27);
        EXPECT(gbc.readMem(0xff27), 0x1f);
        // E0 0080
        gbc.setState(0x697a, 0x27ac, 0xf330, 0x7255, 0xac10, 0x5cd6, 0x1, 0x0);
        gbc.writeMem(0x697a, { 0xe0, 0x2e });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x27ac);
        EXPECT(gbc.pc(), 0x697c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2e), 0xf3);
        // E0 0081
        gbc.setState(0xeda, 0x3a90, 0xa150, 0xf396, 0x3657, 0x166c, 0x0, 0x1);
        gbc.writeMem(0xeda, { 0xe0, 0x65 });
        gbc.writeMem(0xff65, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3a90);
        EXPECT(gbc.pc(), 0xedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff65), 0xa1);
        // E0 0082
        gbc.setState(0x13e0, 0x241, 0x77d0, 0xaf1, 0xfd85, 0x60e6, 0x0, 0x1);
        gbc.writeMem(0x13e0, { 0xe0, 0x4f });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x241);
        EXPECT(gbc.pc(), 0x13e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4f), 0x77);
        // E0 0083
        gbc.setState(0x45a0, 0x2f10, 0xc1a0, 0x355d, 0x3b27, 0x80c, 0x0, 0x1);
        gbc.writeMem(0x45a0, { 0xe0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2f10);
        EXPECT(gbc.pc(), 0x45a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd7), 0xc1);
        // E0 0084
        gbc.setState(0xd740, 0xce3e, 0xa0, 0x3d43, 0x6d02, 0xdf42, 0x0, 0x1);
        gbc.writeMem(0xd740, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xce3e);
        EXPECT(gbc.pc(), 0xd742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd740), 0xe0);
        EXPECT(gbc.readMem(0xd741), 0x4c);
        EXPECT(gbc.readMem(0xff4c), 0x0);
        // E0 0085
        gbc.setState(0xca0, 0x8b51, 0xfb0, 0x5f47, 0x4b1a, 0x41d2, 0x1, 0x1);
        gbc.writeMem(0xca0, { 0xe0, 0x59 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8b51);
        EXPECT(gbc.pc(), 0xca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff59), 0xf);
        // E0 0086
        gbc.setState(0x17c0, 0xad01, 0x62b0, 0xbc3e, 0x2b6f, 0xd641, 0x1, 0x0);
        gbc.writeMem(0x17c0, { 0xe0, 0xf3 });
        gbc.writeMem(0xfff3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xad01);
        EXPECT(gbc.pc(), 0x17c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff3), 0x62);
        // E0 0087
        gbc.setState(0x852a, 0x2baf, 0xeb50, 0x60d3, 0xa329, 0x24e6, 0x0, 0x0);
        gbc.writeMem(0x852a, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2baf);
        EXPECT(gbc.pc(), 0x852c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x852a), 0xe0);
        EXPECT(gbc.readMem(0x852b), 0x2a);
        EXPECT(gbc.readMem(0xff2a), 0xeb);
        // E0 0088
        gbc.setState(0x6bdf, 0xf78c, 0x0, 0xba6f, 0xec18, 0x464e, 0x1, 0x1);
        gbc.writeMem(0x6bdf, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf78c);
        EXPECT(gbc.pc(), 0x6be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0e), 0x0);
        // E0 0089
        gbc.setState(0x3b7f, 0x77d, 0x5380, 0x15d0, 0x164, 0xcb2b, 0x0, 0x0);
        gbc.writeMem(0x3b7f, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x77d);
        EXPECT(gbc.pc(), 0x3b81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff48), 0x53);
        // E0 008A
        gbc.setState(0x9f09, 0xc117, 0x6760, 0x311d, 0x3302, 0xfca5, 0x0, 0x0);
        gbc.writeMem(0x9f09, { 0xe0, 0xd5 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc117);
        EXPECT(gbc.pc(), 0x9f0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f09), 0xe0);
        EXPECT(gbc.readMem(0x9f0a), 0xd5);
        EXPECT(gbc.readMem(0xffd5), 0x67);
        // E0 008B
        gbc.setState(0x3a58, 0xcaee, 0xa590, 0x4b8a, 0x55c8, 0x8dc9, 0x1, 0x1);
        gbc.writeMem(0x3a58, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xcaee);
        EXPECT(gbc.pc(), 0x3a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb8), 0xa5);
        // E0 008C
        gbc.setState(0xf2f, 0xb64a, 0x8ae0, 0xe5e7, 0xfa86, 0xb8fa, 0x0, 0x0);
        gbc.writeMem(0xf2f, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb64a);
        EXPECT(gbc.pc(), 0xf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff51), 0x8a);
        // E0 008D
        gbc.setState(0xd808, 0xea75, 0xf550, 0x535b, 0x467f, 0x6692, 0x1, 0x1);
        gbc.writeMem(0xd808, { 0xe0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xea75);
        EXPECT(gbc.pc(), 0xd80a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd808), 0xe0);
        EXPECT(gbc.readMem(0xd809), 0xd7);
        EXPECT(gbc.readMem(0xffd7), 0xf5);
        // E0 008E
        gbc.setState(0x62ec, 0x5550, 0xa360, 0x6681, 0x6896, 0x73d2, 0x1, 0x0);
        gbc.writeMem(0x62ec, { 0xe0, 0x90 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5550);
        EXPECT(gbc.pc(), 0x62ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff90), 0xa3);
        // E0 008F
        gbc.setState(0xed92, 0x229f, 0x14d0, 0x71fb, 0xc31c, 0xa45, 0x1, 0x0);
        gbc.writeMem(0xed92, { 0xe0, 0x3b });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x229f);
        EXPECT(gbc.pc(), 0xed94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed92), 0xe0);
        EXPECT(gbc.readMem(0xed93), 0x3b);
        EXPECT(gbc.readMem(0xff3b), 0x14);
        // E0 0090
        gbc.setState(0xc511, 0xace0, 0x4810, 0x7f8f, 0x9ddd, 0xfb52, 0x1, 0x0);
        gbc.writeMem(0xc511, { 0xe0, 0x4d });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xace0);
        EXPECT(gbc.pc(), 0xc513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc511), 0xe0);
        EXPECT(gbc.readMem(0xc512), 0x4d);
        EXPECT(gbc.readMem(0xff4d), 0x48);
        // E0 0091
        gbc.setState(0x98d, 0x2741, 0xd7e0, 0x7fe3, 0x7086, 0x6a83, 0x1, 0x0);
        gbc.writeMem(0x98d, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2741);
        EXPECT(gbc.pc(), 0x98f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff80), 0xd7);
        // E0 0092
        gbc.setState(0x524b, 0x859e, 0xcf0, 0xa2ee, 0x1dab, 0x87d2, 0x0, 0x1);
        gbc.writeMem(0x524b, { 0xe0, 0xe4 });
        gbc.writeMem(0xffe4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x859e);
        EXPECT(gbc.pc(), 0x524d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe4), 0xc);
        // E0 0093
        gbc.setState(0x366e, 0x9e, 0xbdf0, 0xedd1, 0x809d, 0x5b58, 0x1, 0x0);
        gbc.writeMem(0x366e, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9e);
        EXPECT(gbc.pc(), 0x3670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4c), 0xbd);
        // E0 0094
        gbc.setState(0xa788, 0xb6ff, 0x7380, 0xb989, 0x5f0, 0x3fb3, 0x1, 0x1);
        gbc.writeMem(0xa788, { 0xe0, 0x92 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb6ff);
        EXPECT(gbc.pc(), 0xa78a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa788), 0xe0);
        EXPECT(gbc.readMem(0xa789), 0x92);
        EXPECT(gbc.readMem(0xff92), 0x73);
        // E0 0095
        gbc.setState(0x8c8, 0xc7cb, 0xd340, 0x4978, 0xeac3, 0x3836, 0x1, 0x1);
        gbc.writeMem(0x8c8, { 0xe0, 0x97 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc7cb);
        EXPECT(gbc.pc(), 0x8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff97), 0xd3);
        // E0 0096
        gbc.setState(0x152a, 0xa1e8, 0xb260, 0x32cd, 0x9b0c, 0xb513, 0x1, 0x0);
        gbc.writeMem(0x152a, { 0xe0, 0x2d });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa1e8);
        EXPECT(gbc.pc(), 0x152c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff2d), 0xb2);
        // E0 0097
        gbc.setState(0xa847, 0x1b00, 0xbdc0, 0x3c41, 0x823a, 0xd64b, 0x0, 0x1);
        gbc.writeMem(0xa847, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1b00);
        EXPECT(gbc.pc(), 0xa849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa847), 0xe0);
        EXPECT(gbc.readMem(0xa848), 0x2a);
        EXPECT(gbc.readMem(0xff2a), 0xbd);
        // E0 0098
        gbc.setState(0x87ac, 0xd0c2, 0xbc60, 0x3e06, 0xd559, 0xd37d, 0x0, 0x0);
        gbc.writeMem(0x87ac, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd0c2);
        EXPECT(gbc.pc(), 0x87ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ac), 0xe0);
        EXPECT(gbc.readMem(0x87ad), 0xcb);
        EXPECT(gbc.readMem(0xffcb), 0xbc);
        // E0 0099
        gbc.setState(0x2abf, 0x739c, 0x860, 0x65bd, 0x41cd, 0xefab, 0x1, 0x0);
        gbc.writeMem(0x2abf, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x739c);
        EXPECT(gbc.pc(), 0x2ac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffad), 0x8);
        // E0 009A
        gbc.setState(0x702f, 0x67de, 0x9b90, 0xeda3, 0xee63, 0x894b, 0x0, 0x0);
        gbc.writeMem(0x702f, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x67de);
        EXPECT(gbc.pc(), 0x7031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9e), 0x9b);
        // E0 009B
        gbc.setState(0xc886, 0x567e, 0x9f30, 0x4459, 0x75c8, 0x2aac, 0x0, 0x0);
        gbc.writeMem(0xc886, { 0xe0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x567e);
        EXPECT(gbc.pc(), 0xc888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc886), 0xe0);
        EXPECT(gbc.readMem(0xc887), 0xb5);
        EXPECT(gbc.readMem(0xffb5), 0x9f);
        // E0 009C
        gbc.setState(0x82e1, 0x9a43, 0x6360, 0xc0de, 0x72db, 0xef4a, 0x0, 0x0);
        gbc.writeMem(0x82e1, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9a43);
        EXPECT(gbc.pc(), 0x82e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e1), 0xe0);
        EXPECT(gbc.readMem(0x82e2), 0x5f);
        EXPECT(gbc.readMem(0xff5f), 0x63);
        // E0 009D
        gbc.setState(0x1822, 0xc087, 0x540, 0x7448, 0x585e, 0xf693, 0x1, 0x0);
        gbc.writeMem(0x1822, { 0xe0, 0x42 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc087);
        EXPECT(gbc.pc(), 0x1824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff42), 0x5);
        // E0 009F
        gbc.setState(0x83, 0x39d4, 0xd780, 0xbe6, 0x3cef, 0xfd02, 0x0, 0x1);
        gbc.writeMem(0x83, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x39d4);
        EXPECT(gbc.pc(), 0x85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff23), 0xd7);
        // E0 00A0
        gbc.setState(0x1132, 0x15fa, 0xcd60, 0x46a1, 0x520d, 0x3042, 0x1, 0x0);
        gbc.writeMem(0x1132, { 0xe0, 0x43 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x15fa);
        EXPECT(gbc.pc(), 0x1134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff43), 0xcd);
        // E0 00A1
        gbc.setState(0x8ee, 0x7460, 0xcba0, 0x6a, 0x9fb6, 0x19a7, 0x0, 0x1);
        gbc.writeMem(0x8ee, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7460);
        EXPECT(gbc.pc(), 0x8f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4c), 0xcb);
        // E0 00A2
        gbc.setState(0x465d, 0xdfc0, 0x6ec0, 0x36f6, 0x7b3e, 0x2406, 0x0, 0x0);
        gbc.writeMem(0x465d, { 0xe0, 0xac });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdfc0);
        EXPECT(gbc.pc(), 0x465f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffac), 0x6e);
        // E0 00A3
        gbc.setState(0x4777, 0xa5c2, 0x7d20, 0xf0fe, 0xbed3, 0xf70, 0x1, 0x0);
        gbc.writeMem(0x4777, { 0xe0, 0x58 });
        gbc.writeMem(0xff58, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa5c2);
        EXPECT(gbc.pc(), 0x4779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff58), 0x7d);
        // E0 00A4
        gbc.setState(0xaf0d, 0xeff0, 0x55e0, 0x7bda, 0x810c, 0x7e0, 0x0, 0x1);
        gbc.writeMem(0xaf0d, { 0xe0, 0x86 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xeff0);
        EXPECT(gbc.pc(), 0xaf0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0d), 0xe0);
        EXPECT(gbc.readMem(0xaf0e), 0x86);
        EXPECT(gbc.readMem(0xff86), 0x55);
        // E0 00A5
        gbc.setState(0x342a, 0x8902, 0x5a0, 0xac7c, 0x5d1c, 0xa12c, 0x0, 0x0);
        gbc.writeMem(0x342a, { 0xe0, 0xa6 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8902);
        EXPECT(gbc.pc(), 0x342c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa6), 0x5);
        // E0 00A6
        gbc.setState(0x2591, 0x5c0, 0x4f50, 0x23de, 0x91df, 0x3e74, 0x0, 0x1);
        gbc.writeMem(0x2591, { 0xe0, 0x6d });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5c0);
        EXPECT(gbc.pc(), 0x2593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff6d), 0x4f);
        // E0 00A7
        gbc.setState(0x902f, 0x2883, 0x6db0, 0x631b, 0x4edf, 0x1f00, 0x0, 0x0);
        gbc.writeMem(0x902f, { 0xe0, 0xb6 });
        gbc.writeMem(0xffb6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2883);
        EXPECT(gbc.pc(), 0x9031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x902f), 0xe0);
        EXPECT(gbc.readMem(0x9030), 0xb6);
        EXPECT(gbc.readMem(0xffb6), 0x6d);
        // E0 00A8
        gbc.setState(0x99dc, 0xb206, 0x29b0, 0x174d, 0x576d, 0x7bdd, 0x1, 0x1);
        gbc.writeMem(0x99dc, { 0xe0, 0x6f });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb206);
        EXPECT(gbc.pc(), 0x99de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99dc), 0xe0);
        EXPECT(gbc.readMem(0x99dd), 0x6f);
        EXPECT(gbc.readMem(0xff6f), 0x29);
        // E0 00AB
        gbc.setState(0x40fb, 0xc08d, 0xda10, 0x594f, 0xfde, 0xaf2e, 0x1, 0x1);
        gbc.writeMem(0x40fb, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc08d);
        EXPECT(gbc.pc(), 0x40fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff03), 0xda);
        // E0 00AC
        gbc.setState(0x4efe, 0x2592, 0x25b0, 0xa53e, 0xe3a3, 0x2ecf, 0x1, 0x0);
        gbc.writeMem(0x4efe, { 0xe0, 0x67 });
        gbc.writeMem(0xff67, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2592);
        EXPECT(gbc.pc(), 0x4f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff67), 0x25);
        // E0 00AD
        gbc.setState(0x5c1, 0x3561, 0xedb0, 0x2cfb, 0x1517, 0x600c, 0x0, 0x0);
        gbc.writeMem(0x5c1, { 0xe0, 0x24 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3561);
        EXPECT(gbc.pc(), 0x5c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff24), 0xed);
        // E0 00AE
        gbc.setState(0x1f9d, 0xa81d, 0xaf20, 0xa4dc, 0xeda2, 0x32b1, 0x0, 0x0);
        gbc.writeMem(0x1f9d, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa81d);
        EXPECT(gbc.pc(), 0x1f9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd0), 0xaf);
        // E0 00AF
        gbc.setState(0xcd8d, 0xd28c, 0x4b90, 0x1399, 0x73ce, 0xd374, 0x0, 0x1);
        gbc.writeMem(0xcd8d, { 0xe0, 0xfd });
        gbc.writeMem(0xfffd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd28c);
        EXPECT(gbc.pc(), 0xcd8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd8d), 0xe0);
        EXPECT(gbc.readMem(0xcd8e), 0xfd);
        EXPECT(gbc.readMem(0xfffd), 0x4b);
        // E0 00B0
        gbc.setState(0x6972, 0x8f4e, 0x4370, 0x94f6, 0xdcb, 0x3bee, 0x1, 0x1);
        gbc.writeMem(0x6972, { 0xe0, 0x60 });
        gbc.writeMem(0xff60, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8f4e);
        EXPECT(gbc.pc(), 0x6974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff60), 0x43);
        // E0 00B2
        gbc.setState(0x8a0f, 0xd418, 0xaa80, 0x9f7b, 0xc853, 0x9473, 0x0, 0x1);
        gbc.writeMem(0x8a0f, { 0xe0, 0x75 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd418);
        EXPECT(gbc.pc(), 0x8a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a0f), 0xe0);
        EXPECT(gbc.readMem(0x8a10), 0x75);
        EXPECT(gbc.readMem(0xff75), 0xaa);
        // E0 00B3
        gbc.setState(0xee3b, 0xfbab, 0x2ad0, 0xfde2, 0xd910, 0x1342, 0x0, 0x1);
        gbc.writeMem(0xee3b, { 0xe0, 0x7b });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfbab);
        EXPECT(gbc.pc(), 0xee3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3b), 0xe0);
        EXPECT(gbc.readMem(0xee3c), 0x7b);
        EXPECT(gbc.readMem(0xff7b), 0x2a);
        // E0 00B4
        gbc.setState(0xd512, 0x5443, 0x81b0, 0x4d6, 0xfd4b, 0xc83d, 0x1, 0x1);
        gbc.writeMem(0xd512, { 0xe0, 0xce });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5443);
        EXPECT(gbc.pc(), 0xd514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd512), 0xe0);
        EXPECT(gbc.readMem(0xd513), 0xce);
        EXPECT(gbc.readMem(0xffce), 0x81);
        // E0 00B5
        gbc.setState(0xc9eb, 0x3370, 0xb4c0, 0xbccc, 0x69c4, 0x4aab, 0x0, 0x0);
        gbc.writeMem(0xc9eb, { 0xe0, 0x6d });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3370);
        EXPECT(gbc.pc(), 0xc9ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9eb), 0xe0);
        EXPECT(gbc.readMem(0xc9ec), 0x6d);
        EXPECT(gbc.readMem(0xff6d), 0xb4);
        // E0 00B6
        gbc.setState(0x290f, 0x8929, 0x7690, 0x2b5f, 0x32b7, 0x8b2a, 0x1, 0x1);
        gbc.writeMem(0x290f, { 0xe0, 0xc2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8929);
        EXPECT(gbc.pc(), 0x2911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc2), 0x76);
        // E0 00B7
        gbc.setState(0x7862, 0x1eb8, 0x43d0, 0xdf45, 0x86f8, 0xa43e, 0x0, 0x0);
        gbc.writeMem(0x7862, { 0xe0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1eb8);
        EXPECT(gbc.pc(), 0x7864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb1), 0x43);
        // E0 00B8
        gbc.setState(0x5392, 0x2d9a, 0x7700, 0x5f3d, 0x6261, 0xaf56, 0x0, 0x0);
        gbc.writeMem(0x5392, { 0xe0, 0xf6 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2d9a);
        EXPECT(gbc.pc(), 0x5394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff6), 0x77);
        // E0 00B9
        gbc.setState(0x7597, 0x69ad, 0x3330, 0xc73f, 0x11b9, 0x1ae1, 0x1, 0x0);
        gbc.writeMem(0x7597, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x69ad);
        EXPECT(gbc.pc(), 0x7599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff07), 0x33);
        // E0 00BA
        gbc.setState(0xaddc, 0x9038, 0xa730, 0xbb41, 0xce26, 0x1fdd, 0x0, 0x0);
        gbc.writeMem(0xaddc, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9038);
        EXPECT(gbc.pc(), 0xadde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaddc), 0xe0);
        EXPECT(gbc.readMem(0xaddd), 0x9a);
        EXPECT(gbc.readMem(0xff9a), 0xa7);
        // E0 00BB
        gbc.setState(0xbd98, 0x2285, 0x250, 0x3eb8, 0x5e6c, 0x66a9, 0x1, 0x0);
        gbc.writeMem(0xbd98, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2285);
        EXPECT(gbc.pc(), 0xbd9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd98), 0xe0);
        EXPECT(gbc.readMem(0xbd99), 0x9e);
        EXPECT(gbc.readMem(0xff9e), 0x2);
        // E0 00BC
        gbc.setState(0x3948, 0xd437, 0xfba0, 0x1d3d, 0xe647, 0x5af0, 0x0, 0x0);
        gbc.writeMem(0x3948, { 0xe0, 0x3a });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd437);
        EXPECT(gbc.pc(), 0x394a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3a), 0xfb);
        // E0 00BD
        gbc.setState(0x1f36, 0xc8b7, 0xcf0, 0xa55a, 0x552, 0x911d, 0x1, 0x0);
        gbc.writeMem(0x1f36, { 0xe0, 0x2 });
        gbc.writeMem(0xff02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc8b7);
        EXPECT(gbc.pc(), 0x1f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff02), 0xc);
        // E0 00BF
        gbc.setState(0x2b29, 0xabc9, 0x2990, 0x75a8, 0xa99f, 0x2981, 0x1, 0x1);
        gbc.writeMem(0x2b29, { 0xe0, 0x18 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xabc9);
        EXPECT(gbc.pc(), 0x2b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff18), 0x29);
        // E0 00C0
        gbc.setState(0x8da5, 0x91c6, 0xada0, 0x7802, 0xbd1b, 0x2e0b, 0x0, 0x1);
        gbc.writeMem(0x8da5, { 0xe0, 0x32 });
        gbc.writeMem(0xff32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x91c6);
        EXPECT(gbc.pc(), 0x8da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da5), 0xe0);
        EXPECT(gbc.readMem(0x8da6), 0x32);
        EXPECT(gbc.readMem(0xff32), 0xad);
        // E0 00C1
        gbc.setState(0x25e1, 0x5f36, 0x57a0, 0xca40, 0x1a98, 0x2cee, 0x1, 0x1);
        gbc.writeMem(0x25e1, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5f36);
        EXPECT(gbc.pc(), 0x25e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff07), 0x57);
        // E0 00C2
        gbc.setState(0x6c47, 0x7522, 0x9de0, 0x249a, 0x9ab9, 0x4638, 0x1, 0x0);
        gbc.writeMem(0x6c47, { 0xe0, 0xe9 });
        gbc.writeMem(0xffe9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7522);
        EXPECT(gbc.pc(), 0x6c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe9), 0x9d);
        // E0 00C3
        gbc.setState(0x54b6, 0xdffc, 0xafd0, 0x185b, 0x1d04, 0xb861, 0x0, 0x1);
        gbc.writeMem(0x54b6, { 0xe0, 0xb3 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdffc);
        EXPECT(gbc.pc(), 0x54b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb3), 0xaf);
        // E0 00C4
        gbc.setState(0x5ffa, 0x1f66, 0xe7c0, 0xb1f, 0x94a1, 0xa434, 0x1, 0x1);
        gbc.writeMem(0x5ffa, { 0xe0, 0x57 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1f66);
        EXPECT(gbc.pc(), 0x5ffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff57), 0xe7);
        // E0 00C5
        gbc.setState(0xd61c, 0x2038, 0xe8e0, 0x6145, 0xef91, 0x959e, 0x0, 0x0);
        gbc.writeMem(0xd61c, { 0xe0, 0x5d });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2038);
        EXPECT(gbc.pc(), 0xd61e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd61c), 0xe0);
        EXPECT(gbc.readMem(0xd61d), 0x5d);
        EXPECT(gbc.readMem(0xff5d), 0xe8);
        // E0 00C6
        gbc.setState(0x68dc, 0xc078, 0xf990, 0x1862, 0x7414, 0x3f22, 0x0, 0x0);
        gbc.writeMem(0x68dc, { 0xe0, 0x87 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc078);
        EXPECT(gbc.pc(), 0x68de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff87), 0xf9);
        // E0 00C8
        gbc.setState(0xc3cf, 0x2d7, 0xf330, 0x297c, 0x3696, 0xb2ab, 0x0, 0x1);
        gbc.writeMem(0xc3cf, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2d7);
        EXPECT(gbc.pc(), 0xc3d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3cf), 0xe0);
        EXPECT(gbc.readMem(0xc3d0), 0x3);
        EXPECT(gbc.readMem(0xff03), 0xf3);
        // E0 00C9
        gbc.setState(0xee56, 0xfc25, 0x15f0, 0x2636, 0x29c5, 0xe8fc, 0x1, 0x0);
        gbc.writeMem(0xee56, { 0xe0, 0x9c });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xfc25);
        EXPECT(gbc.pc(), 0xee58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee56), 0xe0);
        EXPECT(gbc.readMem(0xee57), 0x9c);
        EXPECT(gbc.readMem(0xff9c), 0x15);
        // E0 00CA
        gbc.setState(0xcab5, 0xf345, 0x4c80, 0xb9b2, 0x792c, 0xf66d, 0x1, 0x1);
        gbc.writeMem(0xcab5, { 0xe0, 0x42 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf345);
        EXPECT(gbc.pc(), 0xcab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab5), 0xe0);
        EXPECT(gbc.readMem(0xcab6), 0x42);
        EXPECT(gbc.readMem(0xff42), 0x4c);
        // E0 00CB
        gbc.setState(0x3ced, 0x3aac, 0x1580, 0xbff8, 0x76ad, 0x9fff, 0x0, 0x1);
        gbc.writeMem(0x3ced, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3aac);
        EXPECT(gbc.pc(), 0x3cef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb2), 0x15);
        // E0 00CD
        gbc.setState(0xb250, 0xe8ad, 0x2930, 0xb50b, 0xd920, 0xea76, 0x0, 0x1);
        gbc.writeMem(0xb250, { 0xe0, 0x6d });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe8ad);
        EXPECT(gbc.pc(), 0xb252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb250), 0xe0);
        EXPECT(gbc.readMem(0xb251), 0x6d);
        EXPECT(gbc.readMem(0xff6d), 0x29);
        // E0 00CF
        gbc.setState(0x10d7, 0x8dd, 0x89f0, 0xde0d, 0x8925, 0x80e7, 0x1, 0x0);
        gbc.writeMem(0x10d7, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8dd);
        EXPECT(gbc.pc(), 0x10d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8a), 0x89);
        // E0 00D0
        gbc.setState(0x242c, 0x3cfb, 0x8850, 0x8e0, 0x1bb2, 0xd8fb, 0x1, 0x0);
        gbc.writeMem(0x242c, { 0xe0, 0x9 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3cfb);
        EXPECT(gbc.pc(), 0x242e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff09), 0x88);
        // E0 00D2
        gbc.setState(0x50f5, 0xbce6, 0x9a60, 0x537d, 0x528c, 0x630b, 0x1, 0x0);
        gbc.writeMem(0x50f5, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbce6);
        EXPECT(gbc.pc(), 0x50f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffab), 0x9a);
        // E0 00D3
        gbc.setState(0xe0f5, 0x97e2, 0x9f50, 0x3200, 0xf7c7, 0xb041, 0x1, 0x1);
        gbc.writeMem(0xe0f5, { 0xe0, 0xed });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x97e2);
        EXPECT(gbc.pc(), 0xe0f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0f5), 0xe0);
        EXPECT(gbc.readMem(0xe0f6), 0xed);
        EXPECT(gbc.readMem(0xffed), 0x9f);
        // E0 00D4
        gbc.setState(0xd97c, 0x57ad, 0x7ca0, 0x16e0, 0xfcf1, 0xfa3a, 0x1, 0x1);
        gbc.writeMem(0xd97c, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x57ad);
        EXPECT(gbc.pc(), 0xd97e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97c), 0xe0);
        EXPECT(gbc.readMem(0xd97d), 0x8a);
        EXPECT(gbc.readMem(0xff8a), 0x7c);
        // E0 00D5
        gbc.setState(0x52be, 0xa8ac, 0xe670, 0x1b76, 0x7ec3, 0xb773, 0x0, 0x0);
        gbc.writeMem(0x52be, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa8ac);
        EXPECT(gbc.pc(), 0x52c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9a), 0xe6);
        // E0 00D6
        gbc.setState(0x1f2d, 0x3074, 0x66b0, 0x590c, 0xc87a, 0xd5b8, 0x0, 0x0);
        gbc.writeMem(0x1f2d, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3074);
        EXPECT(gbc.pc(), 0x1f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff23), 0x66);
        // E0 00D7
        gbc.setState(0xe582, 0x8b68, 0x11a0, 0xee3f, 0x78fb, 0x1c54, 0x1, 0x0);
        gbc.writeMem(0xe582, { 0xe0, 0x8f });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8b68);
        EXPECT(gbc.pc(), 0xe584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe582), 0xe0);
        EXPECT(gbc.readMem(0xe583), 0x8f);
        EXPECT(gbc.readMem(0xff8f), 0x11);
        // E0 00D8
        gbc.setState(0x60f3, 0x54cc, 0x30b0, 0xef1f, 0x9f47, 0xa880, 0x0, 0x0);
        gbc.writeMem(0x60f3, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x54cc);
        EXPECT(gbc.pc(), 0x60f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffab), 0x30);
        // E0 00D9
        gbc.setState(0x7c19, 0x66f1, 0xef50, 0x64d7, 0xf910, 0x5b45, 0x1, 0x1);
        gbc.writeMem(0x7c19, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x66f1);
        EXPECT(gbc.pc(), 0x7c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2f), 0xef);
        // E0 00DA
        gbc.setState(0x3473, 0x81ce, 0xcec0, 0x438f, 0x8f49, 0x7469, 0x1, 0x1);
        gbc.writeMem(0x3473, { 0xe0, 0x63 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x81ce);
        EXPECT(gbc.pc(), 0x3475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff63), 0xce);
        // E0 00DB
        gbc.setState(0xba8d, 0x33a9, 0xcb30, 0x73c8, 0x787f, 0xc4ae, 0x1, 0x1);
        gbc.writeMem(0xba8d, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x33a9);
        EXPECT(gbc.pc(), 0xba8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8d), 0xe0);
        EXPECT(gbc.readMem(0xba8e), 0x27);
        EXPECT(gbc.readMem(0xff27), 0xcb);
        // E0 00DC
        gbc.setState(0xef51, 0x386b, 0xf550, 0xdef4, 0x5faa, 0xead7, 0x0, 0x1);
        gbc.writeMem(0xef51, { 0xe0, 0x63 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x386b);
        EXPECT(gbc.pc(), 0xef53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef51), 0xe0);
        EXPECT(gbc.readMem(0xef52), 0x63);
        EXPECT(gbc.readMem(0xff63), 0xf5);
        // E0 00DD
        gbc.setState(0x62a1, 0xc600, 0xb5f0, 0xa12, 0xa940, 0xe4b3, 0x1, 0x0);
        gbc.writeMem(0x62a1, { 0xe0, 0xec });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc600);
        EXPECT(gbc.pc(), 0x62a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffec), 0xb5);
        // E0 00DE
        gbc.setState(0xb2d3, 0xa3c8, 0xd8b0, 0x63d, 0x9154, 0xef19, 0x0, 0x0);
        gbc.writeMem(0xb2d3, { 0xe0, 0x17 });
        gbc.writeMem(0xff17, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa3c8);
        EXPECT(gbc.pc(), 0xb2d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d3), 0xe0);
        EXPECT(gbc.readMem(0xb2d4), 0x17);
        EXPECT(gbc.readMem(0xff17), 0xd8);
        // E0 00DF
        gbc.setState(0x9fde, 0x763c, 0xcde0, 0xe7e8, 0xf154, 0x390d, 0x1, 0x0);
        gbc.writeMem(0x9fde, { 0xe0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x763c);
        EXPECT(gbc.pc(), 0x9fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fde), 0xe0);
        EXPECT(gbc.readMem(0x9fdf), 0xc6);
        EXPECT(gbc.readMem(0xffc6), 0xcd);
        // E0 00E0
        gbc.setState(0x3203, 0x23dd, 0x2be0, 0x2b33, 0x658f, 0x87a6, 0x1, 0x0);
        gbc.writeMem(0x3203, { 0xe0, 0xb0 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x23dd);
        EXPECT(gbc.pc(), 0x3205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb0), 0x2b);
        // E0 00E1
        gbc.setState(0xee5, 0xa568, 0xb620, 0x8d55, 0x3f2e, 0xb676, 0x0, 0x1);
        gbc.writeMem(0xee5, { 0xe0, 0xa4 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa568);
        EXPECT(gbc.pc(), 0xee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa4), 0xb6);
        // E0 00E2
        gbc.setState(0xb2d9, 0xe117, 0x5490, 0x47f4, 0x8cd, 0x4ed, 0x1, 0x0);
        gbc.writeMem(0xb2d9, { 0xe0, 0x9 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe117);
        EXPECT(gbc.pc(), 0xb2db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d9), 0xe0);
        EXPECT(gbc.readMem(0xb2da), 0x9);
        EXPECT(gbc.readMem(0xff09), 0x54);
        // E0 00E3
        gbc.setState(0x4cb0, 0xe9f, 0x2120, 0xc9f9, 0x51d3, 0x2409, 0x1, 0x0);
        gbc.writeMem(0x4cb0, { 0xe0, 0xdb });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe9f);
        EXPECT(gbc.pc(), 0x4cb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffdb), 0x21);
        // E0 00E4
        gbc.setState(0x90d5, 0x8b83, 0x9740, 0xe4d4, 0xcc4a, 0x31e9, 0x0, 0x1);
        gbc.writeMem(0x90d5, { 0xe0, 0xa9 });
        gbc.writeMem(0xffa9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8b83);
        EXPECT(gbc.pc(), 0x90d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d5), 0xe0);
        EXPECT(gbc.readMem(0x90d6), 0xa9);
        EXPECT(gbc.readMem(0xffa9), 0x97);
        // E0 00E5
        gbc.setState(0x8b5e, 0x14ab, 0x1020, 0x3672, 0xa99b, 0x2913, 0x1, 0x0);
        gbc.writeMem(0x8b5e, { 0xe0, 0xc5 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x14ab);
        EXPECT(gbc.pc(), 0x8b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b5e), 0xe0);
        EXPECT(gbc.readMem(0x8b5f), 0xc5);
        EXPECT(gbc.readMem(0xffc5), 0x10);
        // E0 00E6
        gbc.setState(0x92fa, 0xbbd2, 0xfc30, 0x9168, 0x89ce, 0xa9eb, 0x1, 0x0);
        gbc.writeMem(0x92fa, { 0xe0, 0xf });
        gbc.writeMem(0xff0f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbbd2);
        EXPECT(gbc.pc(), 0x92fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92fa), 0xe0);
        EXPECT(gbc.readMem(0x92fb), 0xf);
        EXPECT(gbc.readMem(0xff0f), 0xfc);
        // E0 00E7
        gbc.setState(0x865c, 0x9018, 0x8100, 0xbd69, 0x1308, 0x1a3a, 0x0, 0x1);
        gbc.writeMem(0x865c, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9018);
        EXPECT(gbc.pc(), 0x865e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x865c), 0xe0);
        EXPECT(gbc.readMem(0x865d), 0x9f);
        EXPECT(gbc.readMem(0xff9f), 0x81);
        // E0 00E9
        gbc.setState(0x8424, 0xeb05, 0x7790, 0x4120, 0x76d, 0x718e, 0x0, 0x1);
        gbc.writeMem(0x8424, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xeb05);
        EXPECT(gbc.pc(), 0x8426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8424), 0xe0);
        EXPECT(gbc.readMem(0x8425), 0x35);
        EXPECT(gbc.readMem(0xff35), 0x77);
        // E0 00EA
        gbc.setState(0x120e, 0xc07a, 0x32d0, 0x1a4, 0xf235, 0xa1aa, 0x0, 0x0);
        gbc.writeMem(0x120e, { 0xe0, 0x94 });
        gbc.writeMem(0xff94, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc07a);
        EXPECT(gbc.pc(), 0x1210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff94), 0x32);
        // E0 00EB
        gbc.setState(0x2d3f, 0xe290, 0xaa30, 0x585c, 0xbd9, 0x1458, 0x1, 0x1);
        gbc.writeMem(0x2d3f, { 0xe0, 0xe9 });
        gbc.writeMem(0xffe9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe290);
        EXPECT(gbc.pc(), 0x2d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe9), 0xaa);
        // E0 00EC
        gbc.setState(0xbf0d, 0xd5f, 0x60d0, 0x29f5, 0x2ed2, 0xdb5c, 0x1, 0x0);
        gbc.writeMem(0xbf0d, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd5f);
        EXPECT(gbc.pc(), 0xbf0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf0d), 0xe0);
        EXPECT(gbc.readMem(0xbf0e), 0xea);
        EXPECT(gbc.readMem(0xffea), 0x60);
        // E0 00ED
        gbc.setState(0xbdc4, 0x370b, 0xbf60, 0x1016, 0x6e4c, 0x86e5, 0x1, 0x1);
        gbc.writeMem(0xbdc4, { 0xe0, 0x59 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x370b);
        EXPECT(gbc.pc(), 0xbdc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc4), 0xe0);
        EXPECT(gbc.readMem(0xbdc5), 0x59);
        EXPECT(gbc.readMem(0xff59), 0xbf);
        // E0 00EE
        gbc.setState(0xc734, 0xc0c5, 0xf5d0, 0x508d, 0x6572, 0x838e, 0x1, 0x1);
        gbc.writeMem(0xc734, { 0xe0, 0xa8 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc0c5);
        EXPECT(gbc.pc(), 0xc736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc734), 0xe0);
        EXPECT(gbc.readMem(0xc735), 0xa8);
        EXPECT(gbc.readMem(0xffa8), 0xf5);
        // E0 00EF
        gbc.setState(0x3621, 0x1120, 0xf610, 0x14fc, 0xbbcc, 0x7ec0, 0x1, 0x1);
        gbc.writeMem(0x3621, { 0xe0, 0x60 });
        gbc.writeMem(0xff60, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1120);
        EXPECT(gbc.pc(), 0x3623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff60), 0xf6);
        // E0 00F0
        gbc.setState(0xa2de, 0x9ea5, 0x5bd0, 0x3c4f, 0x37dd, 0x83b4, 0x1, 0x1);
        gbc.writeMem(0xa2de, { 0xe0, 0x58 });
        gbc.writeMem(0xff58, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9ea5);
        EXPECT(gbc.pc(), 0xa2e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2de), 0xe0);
        EXPECT(gbc.readMem(0xa2df), 0x58);
        EXPECT(gbc.readMem(0xff58), 0x5b);
        // E0 00F1
        gbc.setState(0x474d, 0x894, 0x35b0, 0x710d, 0xe988, 0xab13, 0x1, 0x0);
        gbc.writeMem(0x474d, { 0xe0, 0x19 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x894);
        EXPECT(gbc.pc(), 0x474f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff19), 0x35);
        // E0 00F2
        gbc.setState(0x82bc, 0x330a, 0xea10, 0x3953, 0xbb88, 0xa77, 0x1, 0x0);
        gbc.writeMem(0x82bc, { 0xe0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x330a);
        EXPECT(gbc.pc(), 0x82be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82bc), 0xe0);
        EXPECT(gbc.readMem(0x82bd), 0xb7);
        EXPECT(gbc.readMem(0xffb7), 0xea);
        // E0 00F3
        gbc.setState(0x70f8, 0x791c, 0x40e0, 0x26ba, 0x9ef4, 0xb4da, 0x0, 0x0);
        gbc.writeMem(0x70f8, { 0xe0, 0x41 });
        gbc.writeMem(0xff41, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x791c);
        EXPECT(gbc.pc(), 0x70fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff41), 0x40);
        // E0 00F4
        gbc.setState(0xb7b5, 0xe81a, 0x8cb0, 0xc5a2, 0x2465, 0xd5ff, 0x1, 0x1);
        gbc.writeMem(0xb7b5, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe81a);
        EXPECT(gbc.pc(), 0xb7b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b5), 0xe0);
        EXPECT(gbc.readMem(0xb7b6), 0xd0);
        EXPECT(gbc.readMem(0xffd0), 0x8c);
        // E0 00F6
        gbc.setState(0x1452, 0x8477, 0x3840, 0x31cd, 0x429b, 0xf856, 0x1, 0x0);
        gbc.writeMem(0x1452, { 0xe0, 0x57 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8477);
        EXPECT(gbc.pc(), 0x1454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff57), 0x38);
        // E0 00F7
        gbc.setState(0x2746, 0x64c, 0xc0f0, 0xc0d, 0x16fb, 0x7ed2, 0x0, 0x0);
        gbc.writeMem(0x2746, { 0xe0, 0x61 });
        gbc.writeMem(0xff61, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x64c);
        EXPECT(gbc.pc(), 0x2748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff61), 0xc0);
        // E0 00F8
        gbc.setState(0x3afe, 0x98ef, 0x68a0, 0x4040, 0x5a0e, 0x8c5, 0x0, 0x1);
        gbc.writeMem(0x3afe, { 0xe0, 0x16 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x98ef);
        EXPECT(gbc.pc(), 0x3b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff16), 0x68);
        // E0 00F9
        gbc.setState(0x5c42, 0x33fc, 0xac80, 0x2ea3, 0xfd6f, 0x7d1, 0x0, 0x0);
        gbc.writeMem(0x5c42, { 0xe0, 0x5d });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x33fc);
        EXPECT(gbc.pc(), 0x5c44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5d), 0xac);
        // E0 00FB
        gbc.setState(0x402f, 0xd4cd, 0xc840, 0xf7f2, 0x6a12, 0x443, 0x0, 0x0);
        gbc.writeMem(0x402f, { 0xe0, 0x42 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd4cd);
        EXPECT(gbc.pc(), 0x4031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff42), 0xc8);
        // E0 00FC
        gbc.setState(0x8f48, 0x2a9e, 0x74a0, 0x292, 0xb224, 0xd243, 0x0, 0x0);
        gbc.writeMem(0x8f48, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2a9e);
        EXPECT(gbc.pc(), 0x8f4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f48), 0xe0);
        EXPECT(gbc.readMem(0x8f49), 0x5e);
        EXPECT(gbc.readMem(0xff5e), 0x74);
        // E0 00FD
        gbc.setState(0x2b81, 0xe9b4, 0xd8a0, 0xd858, 0xaae1, 0x1a7b, 0x1, 0x1);
        gbc.writeMem(0x2b81, { 0xe0, 0xc2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe9b4);
        EXPECT(gbc.pc(), 0x2b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc2), 0xd8);
        // E0 00FE
        gbc.setState(0xae04, 0x2e52, 0x18c0, 0xd39e, 0x3e42, 0x1a28, 0x0, 0x0);
        gbc.writeMem(0xae04, { 0xe0, 0xfe });
        gbc.writeMem(0xfffe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2e52);
        EXPECT(gbc.pc(), 0xae06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae04), 0xe0);
        EXPECT(gbc.readMem(0xae05), 0xfe);
        EXPECT(gbc.readMem(0xfffe), 0x18);
        // E0 00FF
        gbc.setState(0xafe3, 0x9de6, 0xec30, 0xd875, 0x7881, 0xee2f, 0x0, 0x0);
        gbc.writeMem(0xafe3, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9de6);
        EXPECT(gbc.pc(), 0xafe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe3), 0xe0);
        EXPECT(gbc.readMem(0xafe4), 0xa2);
        EXPECT(gbc.readMem(0xffa2), 0xec);
        // E0 0100
        gbc.setState(0x4e70, 0xabac, 0x450, 0xe3f0, 0x78ab, 0x71f5, 0x0, 0x1);
        gbc.writeMem(0x4e70, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xabac);
        EXPECT(gbc.pc(), 0x4e72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0e), 0x4);
        // E0 0101
        gbc.setState(0xee68, 0x5ffd, 0xd390, 0x6992, 0xb436, 0x2ff1, 0x1, 0x1);
        gbc.writeMem(0xee68, { 0xe0, 0x4e });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5ffd);
        EXPECT(gbc.pc(), 0xee6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee68), 0xe0);
        EXPECT(gbc.readMem(0xee69), 0x4e);
        EXPECT(gbc.readMem(0xff4e), 0xd3);
        // E0 0102
        gbc.setState(0xd004, 0x2849, 0x3c40, 0xefeb, 0x97de, 0xc6cc, 0x1, 0x0);
        gbc.writeMem(0xd004, { 0xe0, 0xcd });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2849);
        EXPECT(gbc.pc(), 0xd006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd004), 0xe0);
        EXPECT(gbc.readMem(0xd005), 0xcd);
        EXPECT(gbc.readMem(0xffcd), 0x3c);
        // E0 0103
        gbc.setState(0x6ba2, 0xa26a, 0xe960, 0x1577, 0xb0c7, 0xfdf7, 0x1, 0x0);
        gbc.writeMem(0x6ba2, { 0xe0, 0x43 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa26a);
        EXPECT(gbc.pc(), 0x6ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff43), 0xe9);
        // E0 0105
        gbc.setState(0x453e, 0xdf59, 0xa880, 0x7945, 0x7654, 0x5b03, 0x0, 0x1);
        gbc.writeMem(0x453e, { 0xe0, 0x8 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdf59);
        EXPECT(gbc.pc(), 0x4540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff08), 0xa8);
        // E0 0106
        gbc.setState(0xb962, 0x26e1, 0xb8d0, 0x2874, 0x327a, 0x215e, 0x0, 0x0);
        gbc.writeMem(0xb962, { 0xe0, 0x71 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x26e1);
        EXPECT(gbc.pc(), 0xb964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb962), 0xe0);
        EXPECT(gbc.readMem(0xb963), 0x71);
        EXPECT(gbc.readMem(0xff71), 0xb8);
        // E0 0107
        gbc.setState(0x11f0, 0xf937, 0x4250, 0x653d, 0x18c1, 0x49e, 0x0, 0x1);
        gbc.writeMem(0x11f0, { 0xe0, 0x9d });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf937);
        EXPECT(gbc.pc(), 0x11f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9d), 0x42);
        // E0 0108
        gbc.setState(0xe3a9, 0x29ca, 0x4180, 0xcef7, 0x907a, 0x42e, 0x0, 0x0);
        gbc.writeMem(0xe3a9, { 0xe0, 0x38 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x29ca);
        EXPECT(gbc.pc(), 0xe3ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a9), 0xe0);
        EXPECT(gbc.readMem(0xe3aa), 0x38);
        EXPECT(gbc.readMem(0xff38), 0x41);
        // E0 0109
        gbc.setState(0x8952, 0xcfa1, 0x23c0, 0x4ebf, 0x862c, 0xc04d, 0x1, 0x1);
        gbc.writeMem(0x8952, { 0xe0, 0x3e });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcfa1);
        EXPECT(gbc.pc(), 0x8954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8952), 0xe0);
        EXPECT(gbc.readMem(0x8953), 0x3e);
        EXPECT(gbc.readMem(0xff3e), 0x23);
        // E0 010A
        gbc.setState(0x895f, 0x5176, 0x61a0, 0xadf3, 0x8b8e, 0xbc31, 0x1, 0x1);
        gbc.writeMem(0x895f, { 0xe0, 0x86 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5176);
        EXPECT(gbc.pc(), 0x8961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x895f), 0xe0);
        EXPECT(gbc.readMem(0x8960), 0x86);
        EXPECT(gbc.readMem(0xff86), 0x61);
        // E0 010B
        gbc.setState(0x8e49, 0xf5da, 0xd720, 0x2366, 0xdb1b, 0xa2f7, 0x0, 0x0);
        gbc.writeMem(0x8e49, { 0xe0, 0x77 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf5da);
        EXPECT(gbc.pc(), 0x8e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e49), 0xe0);
        EXPECT(gbc.readMem(0x8e4a), 0x77);
        EXPECT(gbc.readMem(0xff77), 0xd7);
        // E0 010C
        gbc.setState(0xd5e, 0xc098, 0xabb0, 0x512d, 0xea1a, 0xb2b3, 0x1, 0x1);
        gbc.writeMem(0xd5e, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc098);
        EXPECT(gbc.pc(), 0xd60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5f), 0xab);
        // E0 010D
        gbc.setState(0x46e7, 0xb8a5, 0x78b0, 0x53ca, 0x1a79, 0xd1af, 0x0, 0x1);
        gbc.writeMem(0x46e7, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb8a5);
        EXPECT(gbc.pc(), 0x46e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff52), 0x78);
        // E0 010E
        gbc.setState(0x367c, 0xacbd, 0x9550, 0x5771, 0xb74e, 0x2cc6, 0x1, 0x0);
        gbc.writeMem(0x367c, { 0xe0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xacbd);
        EXPECT(gbc.pc(), 0x367e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff9), 0x95);
        // E0 010F
        gbc.setState(0xda5e, 0x3e31, 0xf040, 0x4154, 0xab66, 0x20fb, 0x1, 0x1);
        gbc.writeMem(0xda5e, { 0xe0, 0x6c });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3e31);
        EXPECT(gbc.pc(), 0xda60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda5e), 0xe0);
        EXPECT(gbc.readMem(0xda5f), 0x6c);
        EXPECT(gbc.readMem(0xff6c), 0xf0);
        // E0 0110
        gbc.setState(0x3a0e, 0x87cd, 0x9580, 0xa4ca, 0x5fd8, 0x67eb, 0x0, 0x1);
        gbc.writeMem(0x3a0e, { 0xe0, 0xc1 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x87cd);
        EXPECT(gbc.pc(), 0x3a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc1), 0x95);
        // E0 0111
        gbc.setState(0x9728, 0x7418, 0x9a20, 0xd924, 0x5b3, 0xc354, 0x0, 0x0);
        gbc.writeMem(0x9728, { 0xe0, 0xc1 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7418);
        EXPECT(gbc.pc(), 0x972a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9728), 0xe0);
        EXPECT(gbc.readMem(0x9729), 0xc1);
        EXPECT(gbc.readMem(0xffc1), 0x9a);
        // E0 0112
        gbc.setState(0x6804, 0x8f91, 0x9670, 0xea3b, 0xb660, 0x3906, 0x1, 0x0);
        gbc.writeMem(0x6804, { 0xe0, 0x12 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8f91);
        EXPECT(gbc.pc(), 0x6806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff12), 0x96);
        // E0 0113
        gbc.setState(0xe50c, 0xc23d, 0x7010, 0xe63c, 0xb940, 0x63ea, 0x0, 0x1);
        gbc.writeMem(0xe50c, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc23d);
        EXPECT(gbc.pc(), 0xe50e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe50c), 0xe0);
        EXPECT(gbc.readMem(0xe50d), 0xcb);
        EXPECT(gbc.readMem(0xffcb), 0x70);
        // E0 0114
        gbc.setState(0xca7, 0x923a, 0x95e0, 0xf64b, 0xb4a1, 0xde04, 0x1, 0x1);
        gbc.writeMem(0xca7, { 0xe0, 0x2d });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x923a);
        EXPECT(gbc.pc(), 0xca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff2d), 0x95);
        // E0 0115
        gbc.setState(0x11ee, 0x882, 0x37e0, 0xa98, 0xb473, 0x4551, 0x0, 0x0);
        gbc.writeMem(0x11ee, { 0xe0, 0xe3 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x882);
        EXPECT(gbc.pc(), 0x11f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe3), 0x37);
        // E0 0116
        gbc.setState(0x8472, 0x80d6, 0x3f40, 0x3247, 0xdf97, 0xcab3, 0x1, 0x0);
        gbc.writeMem(0x8472, { 0xe0, 0x5d });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x80d6);
        EXPECT(gbc.pc(), 0x8474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8472), 0xe0);
        EXPECT(gbc.readMem(0x8473), 0x5d);
        EXPECT(gbc.readMem(0xff5d), 0x3f);
        // E0 0117
        gbc.setState(0xba00, 0x8452, 0x900, 0xf28b, 0xa226, 0x33c2, 0x1, 0x0);
        gbc.writeMem(0xba00, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8452);
        EXPECT(gbc.pc(), 0xba02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba00), 0xe0);
        EXPECT(gbc.readMem(0xba01), 0x5e);
        EXPECT(gbc.readMem(0xff5e), 0x9);
        // E0 0118
        gbc.setState(0x1adc, 0x2473, 0xf260, 0x39da, 0x25c3, 0x5653, 0x1, 0x0);
        gbc.writeMem(0x1adc, { 0xe0, 0xa3 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2473);
        EXPECT(gbc.pc(), 0x1ade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa3), 0xf2);
        // E0 0119
        gbc.setState(0xacf0, 0x482c, 0x10b0, 0xc741, 0x4cf4, 0xc0a2, 0x0, 0x0);
        gbc.writeMem(0xacf0, { 0xe0, 0x59 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x482c);
        EXPECT(gbc.pc(), 0xacf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf0), 0xe0);
        EXPECT(gbc.readMem(0xacf1), 0x59);
        EXPECT(gbc.readMem(0xff59), 0x10);
        // E0 011A
        gbc.setState(0x64f, 0x11d4, 0x7390, 0xb937, 0x39dd, 0x8207, 0x0, 0x1);
        gbc.writeMem(0x64f, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x11d4);
        EXPECT(gbc.pc(), 0x651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2f), 0x73);
        // E0 011B
        gbc.setState(0x163a, 0x2f8b, 0xc50, 0xf6c, 0x92ba, 0xc1f2, 0x0, 0x0);
        gbc.writeMem(0x163a, { 0xe0, 0x3e });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2f8b);
        EXPECT(gbc.pc(), 0x163c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff3e), 0xc);
        // E0 011C
        gbc.setState(0xd605, 0x7991, 0x86a0, 0xe154, 0x17a0, 0x60a5, 0x0, 0x0);
        gbc.writeMem(0xd605, { 0xe0, 0x70 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7991);
        EXPECT(gbc.pc(), 0xd607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd605), 0xe0);
        EXPECT(gbc.readMem(0xd606), 0x70);
        EXPECT(gbc.readMem(0xff70), 0x86);
        // E0 011D
        gbc.setState(0x41dc, 0xcc89, 0x4820, 0x7099, 0x7db0, 0xf2e2, 0x1, 0x1);
        gbc.writeMem(0x41dc, { 0xe0, 0x24 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xcc89);
        EXPECT(gbc.pc(), 0x41de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff24), 0x48);
        // E0 011E
        gbc.setState(0x1612, 0x2fe3, 0x4480, 0x3116, 0x2afa, 0xcf4c, 0x1, 0x0);
        gbc.writeMem(0x1612, { 0xe0, 0xba });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2fe3);
        EXPECT(gbc.pc(), 0x1614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffba), 0x44);
        // E0 011F
        gbc.setState(0x4cf8, 0x3709, 0x83e0, 0xd65e, 0x5bbb, 0xb779, 0x0, 0x0);
        gbc.writeMem(0x4cf8, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3709);
        EXPECT(gbc.pc(), 0x4cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9f), 0x83);
        // E0 0120
        gbc.setState(0x1e06, 0xa9a9, 0x24d0, 0xe69, 0x5a77, 0xdb63, 0x0, 0x0);
        gbc.writeMem(0x1e06, { 0xe0, 0x75 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa9a9);
        EXPECT(gbc.pc(), 0x1e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff75), 0x24);
        // E0 0121
        gbc.setState(0x808a, 0x2453, 0xf610, 0xc047, 0xc2eb, 0x2c85, 0x1, 0x0);
        gbc.writeMem(0x808a, { 0xe0, 0x16 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2453);
        EXPECT(gbc.pc(), 0x808c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808a), 0xe0);
        EXPECT(gbc.readMem(0x808b), 0x16);
        EXPECT(gbc.readMem(0xff16), 0xf6);
        // E0 0122
        gbc.setState(0x9cb0, 0xa957, 0xedc0, 0xe903, 0xd37, 0xc717, 0x1, 0x0);
        gbc.writeMem(0x9cb0, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa957);
        EXPECT(gbc.pc(), 0x9cb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb0), 0xe0);
        EXPECT(gbc.readMem(0x9cb1), 0x31);
        EXPECT(gbc.readMem(0xff31), 0xed);
        // E0 0124
        gbc.setState(0x2455, 0x8ac6, 0xde20, 0x9fa3, 0x6fd2, 0x9642, 0x1, 0x1);
        gbc.writeMem(0x2455, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8ac6);
        EXPECT(gbc.pc(), 0x2457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff83), 0xde);
        // E0 0125
        gbc.setState(0x2490, 0x5a68, 0x23a0, 0x43d1, 0xa28f, 0xa9d1, 0x0, 0x1);
        gbc.writeMem(0x2490, { 0xe0, 0xeb });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5a68);
        EXPECT(gbc.pc(), 0x2492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffeb), 0x23);
        // E0 0126
        gbc.setState(0xd01b, 0x66e3, 0x4870, 0x958e, 0xb6ec, 0xe323, 0x0, 0x1);
        gbc.writeMem(0xd01b, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x66e3);
        EXPECT(gbc.pc(), 0xd01d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd01b), 0xe0);
        EXPECT(gbc.readMem(0xd01c), 0xad);
        EXPECT(gbc.readMem(0xffad), 0x48);
        // E0 0127
        gbc.setState(0x84c, 0xa27f, 0x51b0, 0x432, 0x5e85, 0x6ea3, 0x0, 0x0);
        gbc.writeMem(0x84c, { 0xe0, 0xd2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa27f);
        EXPECT(gbc.pc(), 0x84e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd2), 0x51);
        // E0 0128
        gbc.setState(0xc75d, 0x98ea, 0x5db0, 0xdddb, 0x8b85, 0x3797, 0x0, 0x1);
        gbc.writeMem(0xc75d, { 0xe0, 0x9 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x98ea);
        EXPECT(gbc.pc(), 0xc75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc75d), 0xe0);
        EXPECT(gbc.readMem(0xc75e), 0x9);
        EXPECT(gbc.readMem(0xff09), 0x5d);
        // E0 0129
        gbc.setState(0x5dcd, 0x2d3e, 0x59d0, 0x60d8, 0x75e8, 0xc8f0, 0x0, 0x0);
        gbc.writeMem(0x5dcd, { 0xe0, 0xc4 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2d3e);
        EXPECT(gbc.pc(), 0x5dcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc4), 0x59);
        // E0 012A
        gbc.setState(0x598, 0xe3d1, 0x7180, 0x271b, 0xdcb3, 0x99fe, 0x0, 0x1);
        gbc.writeMem(0x598, { 0xe0, 0xeb });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe3d1);
        EXPECT(gbc.pc(), 0x59a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffeb), 0x71);
        // E0 012B
        gbc.setState(0x89aa, 0x5a83, 0xfc70, 0xea7, 0x1ede, 0x9e45, 0x0, 0x0);
        gbc.writeMem(0x89aa, { 0xe0, 0x96 });
        gbc.writeMem(0xff96, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5a83);
        EXPECT(gbc.pc(), 0x89ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89aa), 0xe0);
        EXPECT(gbc.readMem(0x89ab), 0x96);
        EXPECT(gbc.readMem(0xff96), 0xfc);
        // E0 012C
        gbc.setState(0xecb, 0x9580, 0x10e0, 0x77d3, 0xebe8, 0x3eba, 0x0, 0x1);
        gbc.writeMem(0xecb, { 0xe0, 0x6e });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9580);
        EXPECT(gbc.pc(), 0xecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6e), 0x10);
        // E0 012D
        gbc.setState(0x6261, 0x2f00, 0x3ca0, 0xe402, 0xd34, 0xfe58, 0x0, 0x0);
        gbc.writeMem(0x6261, { 0xe0, 0x26 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2f00);
        EXPECT(gbc.pc(), 0x6263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff26), 0x3c);
        // E0 012F
        gbc.setState(0xb34b, 0x9665, 0x5f90, 0x675a, 0x8185, 0x2e5d, 0x0, 0x0);
        gbc.writeMem(0xb34b, { 0xe0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9665);
        EXPECT(gbc.pc(), 0xb34d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb34b), 0xe0);
        EXPECT(gbc.readMem(0xb34c), 0xc9);
        EXPECT(gbc.readMem(0xffc9), 0x5f);
        // E0 0130
        gbc.setState(0x1aed, 0x1582, 0x6250, 0x3e02, 0x1ded, 0xb0c3, 0x1, 0x0);
        gbc.writeMem(0x1aed, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1582);
        EXPECT(gbc.pc(), 0x1aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffcb), 0x62);
        // E0 0131
        gbc.setState(0x256c, 0x7b36, 0x1df0, 0x9c5c, 0xf992, 0x9930, 0x0, 0x0);
        gbc.writeMem(0x256c, { 0xe0, 0x1e });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7b36);
        EXPECT(gbc.pc(), 0x256e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1e), 0x1d);
        // E0 0132
        gbc.setState(0x6b0b, 0xbe63, 0x22e0, 0x5b96, 0x4f4d, 0xdcf7, 0x1, 0x0);
        gbc.writeMem(0x6b0b, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbe63);
        EXPECT(gbc.pc(), 0x6b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffca), 0x22);
        // E0 0133
        gbc.setState(0xa6d4, 0x75fc, 0xd920, 0x6763, 0x7a90, 0x1c27, 0x1, 0x1);
        gbc.writeMem(0xa6d4, { 0xe0, 0x39 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x75fc);
        EXPECT(gbc.pc(), 0xa6d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d4), 0xe0);
        EXPECT(gbc.readMem(0xa6d5), 0x39);
        EXPECT(gbc.readMem(0xff39), 0xd9);
        // E0 0134
        gbc.setState(0xefb4, 0xafcd, 0x130, 0xa209, 0xb4d4, 0x6aa5, 0x1, 0x1);
        gbc.writeMem(0xefb4, { 0xe0, 0x29 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xafcd);
        EXPECT(gbc.pc(), 0xefb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb4), 0xe0);
        EXPECT(gbc.readMem(0xefb5), 0x29);
        EXPECT(gbc.readMem(0xff29), 0x1);
        // E0 0135
        gbc.setState(0x2635, 0xd59d, 0xf450, 0xaa93, 0x80b4, 0xd9e7, 0x0, 0x0);
        gbc.writeMem(0x2635, { 0xe0, 0x9 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd59d);
        EXPECT(gbc.pc(), 0x2637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff09), 0xf4);
        // E0 0136
        gbc.setState(0x5392, 0xf3, 0x3f30, 0x66cf, 0x1850, 0x4d8d, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0xe0, 0xf6 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf3);
        EXPECT(gbc.pc(), 0x5394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff6), 0x3f);
        // E0 0137
        gbc.setState(0x3e99, 0x4dac, 0x9b50, 0xec3c, 0x9ea5, 0x6770, 0x0, 0x0);
        gbc.writeMem(0x3e99, { 0xe0, 0xe4 });
        gbc.writeMem(0xffe4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4dac);
        EXPECT(gbc.pc(), 0x3e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe4), 0x9b);
        // E0 0138
        gbc.setState(0xbe9f, 0x6e4e, 0xe270, 0xbffe, 0xd22a, 0x919d, 0x0, 0x1);
        gbc.writeMem(0xbe9f, { 0xe0, 0x6c });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6e4e);
        EXPECT(gbc.pc(), 0xbea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe9f), 0xe0);
        EXPECT(gbc.readMem(0xbea0), 0x6c);
        EXPECT(gbc.readMem(0xff6c), 0xe2);
        // E0 0139
        gbc.setState(0xd0c1, 0x7033, 0x3f20, 0x910c, 0x99c1, 0x3bf2, 0x1, 0x0);
        gbc.writeMem(0xd0c1, { 0xe0, 0xbf });
        gbc.writeMem(0xffbf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7033);
        EXPECT(gbc.pc(), 0xd0c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c1), 0xe0);
        EXPECT(gbc.readMem(0xd0c2), 0xbf);
        EXPECT(gbc.readMem(0xffbf), 0x3f);
        // E0 013A
        gbc.setState(0xb66, 0xd60e, 0xf470, 0x67fa, 0xbaad, 0x24e0, 0x0, 0x1);
        gbc.writeMem(0xb66, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd60e);
        EXPECT(gbc.pc(), 0xb68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2f), 0xf4);
        // E0 013B
        gbc.setState(0x4c87, 0x7bb1, 0x2f80, 0x3965, 0x533e, 0x4272, 0x0, 0x0);
        gbc.writeMem(0x4c87, { 0xe0, 0x33 });
        gbc.writeMem(0xff33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7bb1);
        EXPECT(gbc.pc(), 0x4c89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff33), 0x2f);
        // E0 013C
        gbc.setState(0x94, 0xc441, 0x8260, 0xd449, 0x9002, 0xda2a, 0x0, 0x0);
        gbc.writeMem(0x94, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc441);
        EXPECT(gbc.pc(), 0x96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4c), 0x82);
        // E0 013D
        gbc.setState(0xad0a, 0x132a, 0x620, 0x47d5, 0xfb8, 0x5dbf, 0x1, 0x0);
        gbc.writeMem(0xad0a, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x132a);
        EXPECT(gbc.pc(), 0xad0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad0a), 0xe0);
        EXPECT(gbc.readMem(0xad0b), 0x35);
        EXPECT(gbc.readMem(0xff35), 0x6);
        // E0 013E
        gbc.setState(0xb998, 0x4ef3, 0x65c0, 0x7b60, 0x2ff7, 0x5694, 0x1, 0x0);
        gbc.writeMem(0xb998, { 0xe0, 0xb3 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4ef3);
        EXPECT(gbc.pc(), 0xb99a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb998), 0xe0);
        EXPECT(gbc.readMem(0xb999), 0xb3);
        EXPECT(gbc.readMem(0xffb3), 0x65);
        // E0 013F
        gbc.setState(0x8d22, 0xbbe6, 0xd8b0, 0xdd55, 0x8ccb, 0xc17d, 0x0, 0x1);
        gbc.writeMem(0x8d22, { 0xe0, 0xd2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbbe6);
        EXPECT(gbc.pc(), 0x8d24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d22), 0xe0);
        EXPECT(gbc.readMem(0x8d23), 0xd2);
        EXPECT(gbc.readMem(0xffd2), 0xd8);
        // E0 0140
        gbc.setState(0xf91, 0xfa2d, 0x72f0, 0x6d44, 0x59a9, 0xd985, 0x0, 0x0);
        gbc.writeMem(0xf91, { 0xe0, 0xe8 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xfa2d);
        EXPECT(gbc.pc(), 0xf93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe8), 0x72);
        // E0 0141
        gbc.setState(0xd01e, 0xe561, 0x5680, 0x418c, 0xeec, 0x795e, 0x1, 0x1);
        gbc.writeMem(0xd01e, { 0xe0, 0xff });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe561);
        EXPECT(gbc.pc(), 0xd020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd01e), 0xe0);
        EXPECT(gbc.readMem(0xd01f), 0xff);
        EXPECT(gbc.readMem(0xffff), 0x56);
        // E0 0142
        gbc.setState(0x46a4, 0xa753, 0xdf20, 0xb6d2, 0x64a, 0x4aa0, 0x1, 0x0);
        gbc.writeMem(0x46a4, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa753);
        EXPECT(gbc.pc(), 0x46a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb8), 0xdf);
        // E0 0143
        gbc.setState(0x3c1a, 0xd574, 0xced0, 0x495f, 0x79b7, 0x4bb0, 0x1, 0x1);
        gbc.writeMem(0x3c1a, { 0xe0, 0x73 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd574);
        EXPECT(gbc.pc(), 0x3c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff73), 0xce);
        // E0 0144
        gbc.setState(0x9a4e, 0x9e30, 0x3510, 0x77b8, 0xf8d4, 0x436f, 0x1, 0x0);
        gbc.writeMem(0x9a4e, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9e30);
        EXPECT(gbc.pc(), 0x9a50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4e), 0xe0);
        EXPECT(gbc.readMem(0x9a4f), 0xad);
        EXPECT(gbc.readMem(0xffad), 0x35);
        // E0 0145
        gbc.setState(0x75a1, 0x7716, 0xc580, 0x5500, 0x76dc, 0xd403, 0x0, 0x1);
        gbc.writeMem(0x75a1, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7716);
        EXPECT(gbc.pc(), 0x75a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff83), 0xc5);
        // E0 0147
        gbc.setState(0xaf74, 0xebcb, 0xb370, 0xbd72, 0x3854, 0x6e69, 0x0, 0x1);
        gbc.writeMem(0xaf74, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xebcb);
        EXPECT(gbc.pc(), 0xaf76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf74), 0xe0);
        EXPECT(gbc.readMem(0xaf75), 0x3);
        EXPECT(gbc.readMem(0xff03), 0xb3);
        // E0 0149
        gbc.setState(0x4268, 0x3619, 0x65b0, 0xb286, 0xcf02, 0x4698, 0x1, 0x0);
        gbc.writeMem(0x4268, { 0xe0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3619);
        EXPECT(gbc.pc(), 0x426a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff7), 0x65);
        // E0 014A
        gbc.setState(0x4a7d, 0x8aab, 0xae0, 0x25ea, 0xf650, 0xe4c5, 0x0, 0x0);
        gbc.writeMem(0x4a7d, { 0xe0, 0x70 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8aab);
        EXPECT(gbc.pc(), 0x4a7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff70), 0xa);
        // E0 014B
        gbc.setState(0xd384, 0xcb38, 0x7310, 0x3e8e, 0x5472, 0x89cc, 0x0, 0x1);
        gbc.writeMem(0xd384, { 0xe0, 0xb3 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcb38);
        EXPECT(gbc.pc(), 0xd386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd384), 0xe0);
        EXPECT(gbc.readMem(0xd385), 0xb3);
        EXPECT(gbc.readMem(0xffb3), 0x73);
        // E0 014C
        gbc.setState(0x77be, 0xdcc2, 0x1cb0, 0x7dc, 0x3f12, 0xfab1, 0x1, 0x1);
        gbc.writeMem(0x77be, { 0xe0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdcc2);
        EXPECT(gbc.pc(), 0x77c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff7), 0x1c);
        // E0 014D
        gbc.setState(0xde62, 0xfbbf, 0x6b00, 0x539b, 0xb379, 0x9df1, 0x0, 0x0);
        gbc.writeMem(0xde62, { 0xe0, 0xd9 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfbbf);
        EXPECT(gbc.pc(), 0xde64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde62), 0xe0);
        EXPECT(gbc.readMem(0xde63), 0xd9);
        EXPECT(gbc.readMem(0xffd9), 0x6b);
        // E0 014F
        gbc.setState(0x3807, 0xb5f5, 0xd9e0, 0x4275, 0x924e, 0x8eb6, 0x1, 0x0);
        gbc.writeMem(0x3807, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb5f5);
        EXPECT(gbc.pc(), 0x3809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0e), 0xd9);
        // E0 0151
        gbc.setState(0xb45c, 0x9afd, 0xd350, 0x5897, 0x8dd2, 0xc0, 0x1, 0x0);
        gbc.writeMem(0xb45c, { 0xe0, 0x3b });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9afd);
        EXPECT(gbc.pc(), 0xb45e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45c), 0xe0);
        EXPECT(gbc.readMem(0xb45d), 0x3b);
        EXPECT(gbc.readMem(0xff3b), 0xd3);
        // E0 0153
        gbc.setState(0x8d88, 0x3fbf, 0xe5c0, 0x26cc, 0x54da, 0x35f5, 0x1, 0x1);
        gbc.writeMem(0x8d88, { 0xe0, 0x99 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3fbf);
        EXPECT(gbc.pc(), 0x8d8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d88), 0xe0);
        EXPECT(gbc.readMem(0x8d89), 0x99);
        EXPECT(gbc.readMem(0xff99), 0xe5);
        // E0 0154
        gbc.setState(0x220e, 0x89c3, 0x5950, 0x28db, 0x19c3, 0xe0e2, 0x0, 0x0);
        gbc.writeMem(0x220e, { 0xe0, 0x29 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x89c3);
        EXPECT(gbc.pc(), 0x2210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff29), 0x59);
        // E0 0155
        gbc.setState(0x9bf7, 0x20c, 0x9440, 0x4e71, 0x9ef6, 0x10a7, 0x0, 0x0);
        gbc.writeMem(0x9bf7, { 0xe0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x20c);
        EXPECT(gbc.pc(), 0x9bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf7), 0xe0);
        EXPECT(gbc.readMem(0x9bf8), 0xb7);
        EXPECT(gbc.readMem(0xffb7), 0x94);
        // E0 0156
        gbc.setState(0x6e8b, 0x2e54, 0xac30, 0x372c, 0xa15e, 0xb230, 0x1, 0x1);
        gbc.writeMem(0x6e8b, { 0xe0, 0xfc });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2e54);
        EXPECT(gbc.pc(), 0x6e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfffc), 0xac);
        // E0 0158
        gbc.setState(0x17f, 0xf752, 0x8f90, 0xf120, 0xdb31, 0xa216, 0x0, 0x0);
        gbc.writeMem(0x17f, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf752);
        EXPECT(gbc.pc(), 0x181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5e), 0x8f);
        // E0 0159
        gbc.setState(0x54e5, 0xf18a, 0xd020, 0x7c17, 0x9188, 0xb4d3, 0x1, 0x1);
        gbc.writeMem(0x54e5, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf18a);
        EXPECT(gbc.pc(), 0x54e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff07), 0xd0);
        // E0 015A
        gbc.setState(0xa67a, 0xeef9, 0x97e0, 0x564b, 0x982, 0x80e5, 0x1, 0x0);
        gbc.writeMem(0xa67a, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xeef9);
        EXPECT(gbc.pc(), 0xa67c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa67a), 0xe0);
        EXPECT(gbc.readMem(0xa67b), 0xd0);
        EXPECT(gbc.readMem(0xffd0), 0x97);
        // E0 015B
        gbc.setState(0x6da4, 0x3030, 0xffd0, 0xe5a6, 0x8d70, 0xa1e1, 0x0, 0x0);
        gbc.writeMem(0x6da4, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3030);
        EXPECT(gbc.pc(), 0x6da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff76), 0xff);
        // E0 015C
        gbc.setState(0xbd93, 0xb98b, 0x1630, 0x926c, 0xa4d8, 0xa38a, 0x1, 0x0);
        gbc.writeMem(0xbd93, { 0xe0, 0xa6 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb98b);
        EXPECT(gbc.pc(), 0xbd95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd93), 0xe0);
        EXPECT(gbc.readMem(0xbd94), 0xa6);
        EXPECT(gbc.readMem(0xffa6), 0x16);
        // E0 015D
        gbc.setState(0x7a9, 0xd037, 0x35a0, 0xa152, 0x93ea, 0xb9b4, 0x1, 0x1);
        gbc.writeMem(0x7a9, { 0xe0, 0x25 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd037);
        EXPECT(gbc.pc(), 0x7ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff25), 0x35);
        // E0 015E
        gbc.setState(0x3bbf, 0x9838, 0xff0, 0xe3c4, 0x81a4, 0x2c5c, 0x0, 0x1);
        gbc.writeMem(0x3bbf, { 0xe0, 0x5b });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9838);
        EXPECT(gbc.pc(), 0x3bc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5b), 0xf);
        // E0 015F
        gbc.setState(0x321e, 0xf409, 0x32c0, 0x9b4f, 0xa65b, 0x6599, 0x1, 0x1);
        gbc.writeMem(0x321e, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf409);
        EXPECT(gbc.pc(), 0x3220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffca), 0x32);
        // E0 0160
        gbc.setState(0xdcf2, 0x65e, 0x9550, 0x8c74, 0x4a0, 0x12ad, 0x1, 0x0);
        gbc.writeMem(0xdcf2, { 0xe0, 0x34 });
        gbc.writeMem(0xff34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x65e);
        EXPECT(gbc.pc(), 0xdcf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf2), 0xe0);
        EXPECT(gbc.readMem(0xdcf3), 0x34);
        EXPECT(gbc.readMem(0xff34), 0x95);
        // E0 0161
        gbc.setState(0xdb7b, 0xe13e, 0x2f70, 0x9aa8, 0x9efa, 0xe9d9, 0x1, 0x1);
        gbc.writeMem(0xdb7b, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe13e);
        EXPECT(gbc.pc(), 0xdb7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7b), 0xe0);
        EXPECT(gbc.readMem(0xdb7c), 0xb8);
        EXPECT(gbc.readMem(0xffb8), 0x2f);
        // E0 0162
        gbc.setState(0x92a7, 0x477c, 0x6d30, 0xa361, 0xf25c, 0x1897, 0x1, 0x0);
        gbc.writeMem(0x92a7, { 0xe0, 0x25 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x477c);
        EXPECT(gbc.pc(), 0x92a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a7), 0xe0);
        EXPECT(gbc.readMem(0x92a8), 0x25);
        EXPECT(gbc.readMem(0xff25), 0x6d);
        // E0 0163
        gbc.setState(0xa6cc, 0xd72c, 0xbef0, 0x4230, 0xdd2e, 0x4443, 0x1, 0x1);
        gbc.writeMem(0xa6cc, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd72c);
        EXPECT(gbc.pc(), 0xa6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6cc), 0xe0);
        EXPECT(gbc.readMem(0xa6cd), 0x68);
        EXPECT(gbc.readMem(0xff68), 0xbe);
        // E0 0164
        gbc.setState(0xe4e9, 0x5e2d, 0x13f0, 0xd2ca, 0x26c5, 0x41b7, 0x1, 0x1);
        gbc.writeMem(0xe4e9, { 0xe0, 0xbf });
        gbc.writeMem(0xffbf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5e2d);
        EXPECT(gbc.pc(), 0xe4eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4e9), 0xe0);
        EXPECT(gbc.readMem(0xe4ea), 0xbf);
        EXPECT(gbc.readMem(0xffbf), 0x13);
        // E0 0165
        gbc.setState(0xba2, 0xabf9, 0xb30, 0xc329, 0x1e2e, 0xe069, 0x1, 0x1);
        gbc.writeMem(0xba2, { 0xe0, 0x6a });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xabf9);
        EXPECT(gbc.pc(), 0xba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff6a), 0xb);
        // E0 0166
        gbc.setState(0x2779, 0x8371, 0x28f0, 0xc295, 0xbedf, 0x9dc5, 0x1, 0x1);
        gbc.writeMem(0x2779, { 0xe0, 0x53 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8371);
        EXPECT(gbc.pc(), 0x277b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff53), 0x28);
        // E0 0167
        gbc.setState(0x8efd, 0x272e, 0xdf80, 0x2a3f, 0x5347, 0xaf17, 0x0, 0x0);
        gbc.writeMem(0x8efd, { 0xe0, 0x64 });
        gbc.writeMem(0xff64, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x272e);
        EXPECT(gbc.pc(), 0x8eff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8efd), 0xe0);
        EXPECT(gbc.readMem(0x8efe), 0x64);
        EXPECT(gbc.readMem(0xff64), 0xdf);
        // E0 0168
        gbc.setState(0xe862, 0x58c7, 0xc240, 0x666d, 0x6df, 0xb15c, 0x0, 0x1);
        gbc.writeMem(0xe862, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x58c7);
        EXPECT(gbc.pc(), 0xe864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe862), 0xe0);
        EXPECT(gbc.readMem(0xe863), 0xc0);
        EXPECT(gbc.readMem(0xffc0), 0xc2);
        // E0 0169
        gbc.setState(0xcd67, 0x5e39, 0x3af0, 0xd84b, 0x9777, 0x361c, 0x1, 0x1);
        gbc.writeMem(0xcd67, { 0xe0, 0xa3 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5e39);
        EXPECT(gbc.pc(), 0xcd69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd67), 0xe0);
        EXPECT(gbc.readMem(0xcd68), 0xa3);
        EXPECT(gbc.readMem(0xffa3), 0x3a);
        // E0 016A
        gbc.setState(0xc748, 0xecca, 0x7b90, 0x23c2, 0x90b, 0x978f, 0x1, 0x0);
        gbc.writeMem(0xc748, { 0xe0, 0x95 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xecca);
        EXPECT(gbc.pc(), 0xc74a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc748), 0xe0);
        EXPECT(gbc.readMem(0xc749), 0x95);
        EXPECT(gbc.readMem(0xff95), 0x7b);
        // E0 016B
        gbc.setState(0xde27, 0x9618, 0x6860, 0x8bf5, 0x49de, 0x2fc8, 0x0, 0x1);
        gbc.writeMem(0xde27, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9618);
        EXPECT(gbc.pc(), 0xde29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde27), 0xe0);
        EXPECT(gbc.readMem(0xde28), 0x2f);
        EXPECT(gbc.readMem(0xff2f), 0x68);
        // E0 016C
        gbc.setState(0xaba9, 0x3a71, 0x54c0, 0x91dd, 0xc1d9, 0x8572, 0x0, 0x1);
        gbc.writeMem(0xaba9, { 0xe0, 0xee });
        gbc.writeMem(0xffee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3a71);
        EXPECT(gbc.pc(), 0xabab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba9), 0xe0);
        EXPECT(gbc.readMem(0xabaa), 0xee);
        EXPECT(gbc.readMem(0xffee), 0x54);
        // E0 016D
        gbc.setState(0xdd60, 0xeb21, 0x8f50, 0x73b2, 0xe888, 0xfdca, 0x0, 0x1);
        gbc.writeMem(0xdd60, { 0xe0, 0xc7 });
        gbc.writeMem(0xffc7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xeb21);
        EXPECT(gbc.pc(), 0xdd62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd60), 0xe0);
        EXPECT(gbc.readMem(0xdd61), 0xc7);
        EXPECT(gbc.readMem(0xffc7), 0x8f);
        // E0 016E
        gbc.setState(0xdd14, 0xe3b2, 0x2b70, 0x5a9a, 0x78d4, 0x6840, 0x0, 0x1);
        gbc.writeMem(0xdd14, { 0xe0, 0x92 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe3b2);
        EXPECT(gbc.pc(), 0xdd16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd14), 0xe0);
        EXPECT(gbc.readMem(0xdd15), 0x92);
        EXPECT(gbc.readMem(0xff92), 0x2b);
        // E0 016F
        gbc.setState(0x859, 0xfaf7, 0xb0b0, 0x346d, 0xb932, 0xf85c, 0x1, 0x1);
        gbc.writeMem(0x859, { 0xe0, 0xfb });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xfaf7);
        EXPECT(gbc.pc(), 0x85b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfffb), 0xb0);
        // E0 0170
        gbc.setState(0x177d, 0x945f, 0xc610, 0xd44e, 0x6daa, 0x642d, 0x0, 0x0);
        gbc.writeMem(0x177d, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x945f);
        EXPECT(gbc.pc(), 0x177f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffdc), 0xc6);
        // E0 0171
        gbc.setState(0xde98, 0x5fe, 0xcc30, 0x156b, 0xc756, 0x58, 0x0, 0x1);
        gbc.writeMem(0xde98, { 0xe0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5fe);
        EXPECT(gbc.pc(), 0xde9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde98), 0xe0);
        EXPECT(gbc.readMem(0xde99), 0xf9);
        EXPECT(gbc.readMem(0xfff9), 0xcc);
        // E0 0172
        gbc.setState(0xb15d, 0xb4d8, 0x47d0, 0xe279, 0x2ff5, 0x1010, 0x0, 0x1);
        gbc.writeMem(0xb15d, { 0xe0, 0xf6 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb4d8);
        EXPECT(gbc.pc(), 0xb15f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb15d), 0xe0);
        EXPECT(gbc.readMem(0xb15e), 0xf6);
        EXPECT(gbc.readMem(0xfff6), 0x47);
        // E0 0173
        gbc.setState(0x922a, 0xf9e, 0x71f0, 0x7433, 0x9813, 0xba3a, 0x0, 0x1);
        gbc.writeMem(0x922a, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf9e);
        EXPECT(gbc.pc(), 0x922c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922a), 0xe0);
        EXPECT(gbc.readMem(0x922b), 0xab);
        EXPECT(gbc.readMem(0xffab), 0x71);
        // E0 0174
        gbc.setState(0x875d, 0x5391, 0xa780, 0x39c1, 0x3cf0, 0xf5b6, 0x0, 0x1);
        gbc.writeMem(0x875d, { 0xe0, 0xbd });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5391);
        EXPECT(gbc.pc(), 0x875f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x875d), 0xe0);
        EXPECT(gbc.readMem(0x875e), 0xbd);
        EXPECT(gbc.readMem(0xffbd), 0xa7);
        // E0 0175
        gbc.setState(0x3d77, 0xd381, 0xc0d0, 0x95da, 0x8134, 0x14ee, 0x0, 0x0);
        gbc.writeMem(0x3d77, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd381);
        EXPECT(gbc.pc(), 0x3d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb2), 0xc0);
        // E0 0176
        gbc.setState(0x5057, 0x96de, 0x5a40, 0x1d12, 0x1145, 0x66f1, 0x1, 0x0);
        gbc.writeMem(0x5057, { 0xe0, 0x53 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x96de);
        EXPECT(gbc.pc(), 0x5059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff53), 0x5a);
        // E0 0177
        gbc.setState(0xed12, 0xd91f, 0x99f0, 0xc675, 0x496d, 0xfd0b, 0x1, 0x0);
        gbc.writeMem(0xed12, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd91f);
        EXPECT(gbc.pc(), 0xed14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed12), 0xe0);
        EXPECT(gbc.readMem(0xed13), 0x27);
        EXPECT(gbc.readMem(0xff27), 0x99);
        // E0 0178
        gbc.setState(0x367d, 0x114a, 0x5eb0, 0x7812, 0x2350, 0x57ab, 0x1, 0x1);
        gbc.writeMem(0x367d, { 0xe0, 0x0 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x114a);
        EXPECT(gbc.pc(), 0x367f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff00), 0x5e);
        // E0 0179
        gbc.setState(0xcd53, 0xe826, 0xbf20, 0x8aa1, 0x4829, 0xa8a4, 0x0, 0x1);
        gbc.writeMem(0xcd53, { 0xe0, 0x5a });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe826);
        EXPECT(gbc.pc(), 0xcd55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd53), 0xe0);
        EXPECT(gbc.readMem(0xcd54), 0x5a);
        EXPECT(gbc.readMem(0xff5a), 0xbf);
        // E0 017A
        gbc.setState(0x5890, 0x5f15, 0xf0b0, 0xa4fe, 0x5d76, 0x1321, 0x1, 0x0);
        gbc.writeMem(0x5890, { 0xe0, 0x5a });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5f15);
        EXPECT(gbc.pc(), 0x5892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5a), 0xf0);
        // E0 017B
        gbc.setState(0x2e5c, 0x216f, 0x6ec0, 0x338, 0xefa0, 0x810d, 0x1, 0x1);
        gbc.writeMem(0x2e5c, { 0xe0, 0xf3 });
        gbc.writeMem(0xfff3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x216f);
        EXPECT(gbc.pc(), 0x2e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff3), 0x6e);
        // E0 017C
        gbc.setState(0x4bef, 0x40e3, 0x70, 0x1ebc, 0xeef8, 0xb911, 0x0, 0x1);
        gbc.writeMem(0x4bef, { 0xe0, 0x5a });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x40e3);
        EXPECT(gbc.pc(), 0x4bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5a), 0x0);
        // E0 017D
        gbc.setState(0x5085, 0xbc35, 0x8090, 0xc33c, 0x3ded, 0x95c8, 0x0, 0x1);
        gbc.writeMem(0x5085, { 0xe0, 0x19 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xbc35);
        EXPECT(gbc.pc(), 0x5087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff19), 0x80);
        // E0 017E
        gbc.setState(0xa8bd, 0xa919, 0x5a60, 0xd013, 0x49f4, 0x8e11, 0x1, 0x1);
        gbc.writeMem(0xa8bd, { 0xe0, 0x39 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa919);
        EXPECT(gbc.pc(), 0xa8bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8bd), 0xe0);
        EXPECT(gbc.readMem(0xa8be), 0x39);
        EXPECT(gbc.readMem(0xff39), 0x5a);
        // E0 017F
        gbc.setState(0xd43d, 0x6671, 0x7710, 0x82f2, 0xd33, 0x9cec, 0x0, 0x1);
        gbc.writeMem(0xd43d, { 0xe0, 0x4 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6671);
        EXPECT(gbc.pc(), 0xd43f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43d), 0xe0);
        EXPECT(gbc.readMem(0xd43e), 0x4);
        EXPECT(gbc.readMem(0xff04), 0x77);
        // E0 0180
        gbc.setState(0xc05c, 0x2565, 0x11d0, 0x33a3, 0x97bb, 0xb6db, 0x0, 0x1);
        gbc.writeMem(0xc05c, { 0xe0, 0x42 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2565);
        EXPECT(gbc.pc(), 0xc05e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc05c), 0xe0);
        EXPECT(gbc.readMem(0xc05d), 0x42);
        EXPECT(gbc.readMem(0xff42), 0x11);
        // E0 0181
        gbc.setState(0x87f8, 0xfd83, 0x72e0, 0xe4b, 0xe6fc, 0x5100, 0x0, 0x0);
        gbc.writeMem(0x87f8, { 0xe0, 0x3b });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfd83);
        EXPECT(gbc.pc(), 0x87fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f8), 0xe0);
        EXPECT(gbc.readMem(0x87f9), 0x3b);
        EXPECT(gbc.readMem(0xff3b), 0x72);
        // E0 0182
        gbc.setState(0xa207, 0xdf19, 0x2390, 0x821f, 0xcd01, 0x96fc, 0x0, 0x0);
        gbc.writeMem(0xa207, { 0xe0, 0x82 });
        gbc.writeMem(0xff82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdf19);
        EXPECT(gbc.pc(), 0xa209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa207), 0xe0);
        EXPECT(gbc.readMem(0xa208), 0x82);
        EXPECT(gbc.readMem(0xff82), 0x23);
        // E0 0183
        gbc.setState(0xa51, 0xeb29, 0x3130, 0x9d4c, 0x4d0d, 0x7ea1, 0x0, 0x0);
        gbc.writeMem(0xa51, { 0xe0, 0x7a });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xeb29);
        EXPECT(gbc.pc(), 0xa53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7a), 0x31);
        // E0 0184
        gbc.setState(0x1be7, 0xe438, 0x5380, 0xdb32, 0xb15e, 0x7bf8, 0x0, 0x1);
        gbc.writeMem(0x1be7, { 0xe0, 0xfb });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe438);
        EXPECT(gbc.pc(), 0x1be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfffb), 0x53);
        // E0 0186
        gbc.setState(0xce6, 0xf401, 0x64e0, 0x88c0, 0x231e, 0x3c9d, 0x0, 0x0);
        gbc.writeMem(0xce6, { 0xe0, 0x81 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf401);
        EXPECT(gbc.pc(), 0xce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff81), 0x64);
        // E0 0187
        gbc.setState(0x9129, 0xe60b, 0x1b90, 0x3e90, 0xb98e, 0x7183, 0x1, 0x0);
        gbc.writeMem(0x9129, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe60b);
        EXPECT(gbc.pc(), 0x912b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9129), 0xe0);
        EXPECT(gbc.readMem(0x912a), 0xc0);
        EXPECT(gbc.readMem(0xffc0), 0x1b);
        // E0 0188
        gbc.setState(0xc0a4, 0xb246, 0x58a0, 0xcee0, 0x4937, 0x15ca, 0x1, 0x0);
        gbc.writeMem(0xc0a4, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb246);
        EXPECT(gbc.pc(), 0xc0a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a4), 0xe0);
        EXPECT(gbc.readMem(0xc0a5), 0x51);
        EXPECT(gbc.readMem(0xff51), 0x58);
        // E0 0189
        gbc.setState(0x83eb, 0xfe73, 0x2670, 0x7d8e, 0x6c8, 0x1757, 0x1, 0x1);
        gbc.writeMem(0x83eb, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfe73);
        EXPECT(gbc.pc(), 0x83ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83eb), 0xe0);
        EXPECT(gbc.readMem(0x83ec), 0x80);
        EXPECT(gbc.readMem(0xff80), 0x26);
        // E0 018A
        gbc.setState(0xdb36, 0x68ce, 0x8d60, 0x64de, 0x5a12, 0x9bbe, 0x0, 0x1);
        gbc.writeMem(0xdb36, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x68ce);
        EXPECT(gbc.pc(), 0xdb38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb36), 0xe0);
        EXPECT(gbc.readMem(0xdb37), 0xad);
        EXPECT(gbc.readMem(0xffad), 0x8d);
        // E0 018B
        gbc.setState(0xae43, 0xa8fa, 0x59a0, 0xb671, 0xb8cb, 0xb56c, 0x0, 0x0);
        gbc.writeMem(0xae43, { 0xe0, 0x56 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa8fa);
        EXPECT(gbc.pc(), 0xae45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae43), 0xe0);
        EXPECT(gbc.readMem(0xae44), 0x56);
        EXPECT(gbc.readMem(0xff56), 0x59);
        // E0 018C
        gbc.setState(0x5143, 0xc277, 0x2250, 0xb1aa, 0xaa48, 0x438e, 0x0, 0x1);
        gbc.writeMem(0x5143, { 0xe0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc277);
        EXPECT(gbc.pc(), 0x5145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc6), 0x22);
        // E0 018D
        gbc.setState(0x9492, 0xff78, 0xb40, 0xec27, 0xae1f, 0x537a, 0x1, 0x1);
        gbc.writeMem(0x9492, { 0xe0, 0x2e });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xff78);
        EXPECT(gbc.pc(), 0x9494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9492), 0xe0);
        EXPECT(gbc.readMem(0x9493), 0x2e);
        EXPECT(gbc.readMem(0xff2e), 0xb);
        // E0 018E
        gbc.setState(0xbd77, 0xc478, 0x7f90, 0xec24, 0xf71a, 0x90ac, 0x1, 0x0);
        gbc.writeMem(0xbd77, { 0xe0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc478);
        EXPECT(gbc.pc(), 0xbd79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd77), 0xe0);
        EXPECT(gbc.readMem(0xbd78), 0xf7);
        EXPECT(gbc.readMem(0xfff7), 0x7f);
        // E0 018F
        gbc.setState(0xd91e, 0x6f68, 0xb1a0, 0x3868, 0x381c, 0x2301, 0x1, 0x0);
        gbc.writeMem(0xd91e, { 0xe0, 0xec });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6f68);
        EXPECT(gbc.pc(), 0xd920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd91e), 0xe0);
        EXPECT(gbc.readMem(0xd91f), 0xec);
        EXPECT(gbc.readMem(0xffec), 0xb1);
        // E0 0190
        gbc.setState(0x98c2, 0x4211, 0xed0, 0x34eb, 0xc767, 0x7ec0, 0x0, 0x0);
        gbc.writeMem(0x98c2, { 0xe0, 0x77 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4211);
        EXPECT(gbc.pc(), 0x98c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c2), 0xe0);
        EXPECT(gbc.readMem(0x98c3), 0x77);
        EXPECT(gbc.readMem(0xff77), 0xe);
        // E0 0191
        gbc.setState(0xae3e, 0x3532, 0xa680, 0x69e6, 0xa903, 0x4490, 0x1, 0x1);
        gbc.writeMem(0xae3e, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3532);
        EXPECT(gbc.pc(), 0xae40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae3e), 0xe0);
        EXPECT(gbc.readMem(0xae3f), 0x5e);
        EXPECT(gbc.readMem(0xff5e), 0xa6);
        // E0 0192
        gbc.setState(0x660, 0x460b, 0xed30, 0x4080, 0xdf03, 0x5d7, 0x0, 0x1);
        gbc.writeMem(0x660, { 0xe0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x460b);
        EXPECT(gbc.pc(), 0x662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb5), 0xed);
        // E0 0193
        gbc.setState(0x5e2d, 0x2fc6, 0x3970, 0x8020, 0xd7e5, 0x61ca, 0x0, 0x0);
        gbc.writeMem(0x5e2d, { 0xe0, 0x8d });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2fc6);
        EXPECT(gbc.pc(), 0x5e2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8d), 0x39);
        // E0 0194
        gbc.setState(0x6133, 0x37fb, 0x5e70, 0x439b, 0xf591, 0xd2ea, 0x1, 0x0);
        gbc.writeMem(0x6133, { 0xe0, 0x4b });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x37fb);
        EXPECT(gbc.pc(), 0x6135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4b), 0x5e);
        // E0 0195
        gbc.setState(0x9980, 0x9fdd, 0x5f80, 0x7724, 0x70e5, 0xf66b, 0x1, 0x0);
        gbc.writeMem(0x9980, { 0xe0, 0x7d });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9fdd);
        EXPECT(gbc.pc(), 0x9982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9980), 0xe0);
        EXPECT(gbc.readMem(0x9981), 0x7d);
        EXPECT(gbc.readMem(0xff7d), 0x5f);
        // E0 0196
        gbc.setState(0x18b8, 0xa677, 0xe7a0, 0xe638, 0x9dc3, 0x54ac, 0x1, 0x1);
        gbc.writeMem(0x18b8, { 0xe0, 0x4a });
        gbc.writeMem(0xff4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa677);
        EXPECT(gbc.pc(), 0x18ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4a), 0xe7);
        // E0 0197
        gbc.setState(0x4a96, 0xb18f, 0xd0a0, 0x38b9, 0x4352, 0x9d1e, 0x1, 0x0);
        gbc.writeMem(0x4a96, { 0xe0, 0x55 });
        gbc.writeMem(0xff55, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb18f);
        EXPECT(gbc.pc(), 0x4a98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff55), 0xd0);
        // E0 0198
        gbc.setState(0xbdb0, 0x5286, 0x9020, 0xef6b, 0xd203, 0x6f5, 0x0, 0x0);
        gbc.writeMem(0xbdb0, { 0xe0, 0x1f });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5286);
        EXPECT(gbc.pc(), 0xbdb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb0), 0xe0);
        EXPECT(gbc.readMem(0xbdb1), 0x1f);
        EXPECT(gbc.readMem(0xff1f), 0x90);
        // E0 0199
        gbc.setState(0x1b0b, 0xe615, 0x2630, 0xe96, 0x99a7, 0xcf28, 0x1, 0x1);
        gbc.writeMem(0x1b0b, { 0xe0, 0xef });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe615);
        EXPECT(gbc.pc(), 0x1b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffef), 0x26);
        // E0 019A
        gbc.setState(0xbd4a, 0x5e86, 0x7880, 0x8cb2, 0x814, 0xaf85, 0x1, 0x0);
        gbc.writeMem(0xbd4a, { 0xe0, 0x3c });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5e86);
        EXPECT(gbc.pc(), 0xbd4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4a), 0xe0);
        EXPECT(gbc.readMem(0xbd4b), 0x3c);
        EXPECT(gbc.readMem(0xff3c), 0x78);
        // E0 019B
        gbc.setState(0x1efb, 0xcf26, 0xcab0, 0xdec0, 0x1d34, 0x44d, 0x0, 0x0);
        gbc.writeMem(0x1efb, { 0xe0, 0xdd });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcf26);
        EXPECT(gbc.pc(), 0x1efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffdd), 0xca);
        // E0 019C
        gbc.setState(0x1793, 0xa673, 0x2c70, 0xf964, 0x1c31, 0x82dd, 0x0, 0x1);
        gbc.writeMem(0x1793, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa673);
        EXPECT(gbc.pc(), 0x1795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff03), 0x2c);
        // E0 019D
        gbc.setState(0x6403, 0x78ea, 0x98b0, 0x5628, 0x6f08, 0x2c71, 0x0, 0x0);
        gbc.writeMem(0x6403, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x78ea);
        EXPECT(gbc.pc(), 0x6405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffcb), 0x98);
        // E0 019E
        gbc.setState(0x7fd5, 0x4b1e, 0x110, 0xfab9, 0x7da5, 0x6222, 0x1, 0x1);
        gbc.writeMem(0x7fd5, { 0xe0, 0x19 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4b1e);
        EXPECT(gbc.pc(), 0x7fd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff19), 0x1);
        // E0 019F
        gbc.setState(0x7fc0, 0x8a3a, 0xcd90, 0x2ab7, 0x2581, 0x13a4, 0x1, 0x0);
        gbc.writeMem(0x7fc0, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8a3a);
        EXPECT(gbc.pc(), 0x7fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff80), 0xcd);
        // E0 01A0
        gbc.setState(0xbebd, 0x9b51, 0xa00, 0x8a0a, 0xa594, 0x8323, 0x1, 0x0);
        gbc.writeMem(0xbebd, { 0xe0, 0x9d });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9b51);
        EXPECT(gbc.pc(), 0xbebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebd), 0xe0);
        EXPECT(gbc.readMem(0xbebe), 0x9d);
        EXPECT(gbc.readMem(0xff9d), 0xa);
        // E0 01A1
        gbc.setState(0x1e00, 0x4b2f, 0xf990, 0x6da2, 0x2851, 0x2a99, 0x0, 0x0);
        gbc.writeMem(0x1e00, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4b2f);
        EXPECT(gbc.pc(), 0x1e02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff83), 0xf9);
        // E0 01A2
        gbc.setState(0xaa21, 0x61af, 0xf040, 0x2487, 0xf79e, 0x66e7, 0x0, 0x0);
        gbc.writeMem(0xaa21, { 0xe0, 0xa8 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x61af);
        EXPECT(gbc.pc(), 0xaa23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa21), 0xe0);
        EXPECT(gbc.readMem(0xaa22), 0xa8);
        EXPECT(gbc.readMem(0xffa8), 0xf0);
        // E0 01A3
        gbc.setState(0x1a8f, 0xe281, 0x10d0, 0x9c97, 0x3e52, 0x29a8, 0x0, 0x0);
        gbc.writeMem(0x1a8f, { 0xe0, 0x4 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe281);
        EXPECT(gbc.pc(), 0x1a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff04), 0x10);
        // E0 01A4
        gbc.setState(0x3d47, 0x2019, 0x6af0, 0xbc46, 0x4032, 0x92e5, 0x1, 0x0);
        gbc.writeMem(0x3d47, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2019);
        EXPECT(gbc.pc(), 0x3d49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffca), 0x6a);
        // E0 01A5
        gbc.setState(0xa802, 0x7b9c, 0xb910, 0x752e, 0x2a2d, 0xee60, 0x1, 0x0);
        gbc.writeMem(0xa802, { 0xe0, 0xee });
        gbc.writeMem(0xffee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7b9c);
        EXPECT(gbc.pc(), 0xa804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa802), 0xe0);
        EXPECT(gbc.readMem(0xa803), 0xee);
        EXPECT(gbc.readMem(0xffee), 0xb9);
        // E0 01A6
        gbc.setState(0xdd8a, 0x9439, 0xd590, 0x5db4, 0xf55b, 0x82ff, 0x0, 0x0);
        gbc.writeMem(0xdd8a, { 0xe0, 0x7a });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9439);
        EXPECT(gbc.pc(), 0xdd8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd8a), 0xe0);
        EXPECT(gbc.readMem(0xdd8b), 0x7a);
        EXPECT(gbc.readMem(0xff7a), 0xd5);
        // E0 01A7
        gbc.setState(0xe606, 0xa683, 0xc980, 0xb7a3, 0xf4b0, 0xc2c2, 0x1, 0x1);
        gbc.writeMem(0xe606, { 0xe0, 0xfb });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa683);
        EXPECT(gbc.pc(), 0xe608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe606), 0xe0);
        EXPECT(gbc.readMem(0xe607), 0xfb);
        EXPECT(gbc.readMem(0xfffb), 0xc9);
        // E0 01A8
        gbc.setState(0x3832, 0xcf56, 0x63e0, 0x20c, 0xde86, 0x1ad1, 0x0, 0x1);
        gbc.writeMem(0x3832, { 0xe0, 0xf });
        gbc.writeMem(0xff0f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcf56);
        EXPECT(gbc.pc(), 0x3834);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0f), 0x63);
        // E0 01A9
        gbc.setState(0xb59c, 0xfce5, 0x4460, 0x6edd, 0xcc2b, 0xeac9, 0x1, 0x1);
        gbc.writeMem(0xb59c, { 0xe0, 0xbd });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfce5);
        EXPECT(gbc.pc(), 0xb59e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb59c), 0xe0);
        EXPECT(gbc.readMem(0xb59d), 0xbd);
        EXPECT(gbc.readMem(0xffbd), 0x44);
        // E0 01AA
        gbc.setState(0x646e, 0xd9cd, 0x9940, 0xf6c4, 0xb024, 0x8a31, 0x1, 0x0);
        gbc.writeMem(0x646e, { 0xe0, 0x66 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd9cd);
        EXPECT(gbc.pc(), 0x6470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff66), 0x99);
        // E0 01AB
        gbc.setState(0x2801, 0xc93f, 0x29a0, 0xe4fb, 0x147c, 0xb03d, 0x1, 0x1);
        gbc.writeMem(0x2801, { 0xe0, 0x9c });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc93f);
        EXPECT(gbc.pc(), 0x2803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9c), 0x29);
        // E0 01AC
        gbc.setState(0x3d0e, 0x1c36, 0x9070, 0xcf71, 0x65db, 0x87fd, 0x1, 0x0);
        gbc.writeMem(0x3d0e, { 0xe0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1c36);
        EXPECT(gbc.pc(), 0x3d10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff9), 0x90);
        // E0 01AD
        gbc.setState(0x78fc, 0x4cca, 0x3a0, 0xcf3d, 0x8c1d, 0x95e2, 0x0, 0x0);
        gbc.writeMem(0x78fc, { 0xe0, 0x74 });
        gbc.writeMem(0xff74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4cca);
        EXPECT(gbc.pc(), 0x78fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff74), 0x3);
        // E0 01AE
        gbc.setState(0x37d1, 0x2c30, 0xbd0, 0x913a, 0xcd1c, 0x922e, 0x0, 0x0);
        gbc.writeMem(0x37d1, { 0xe0, 0x8e });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2c30);
        EXPECT(gbc.pc(), 0x37d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8e), 0xb);
        // E0 01AF
        gbc.setState(0xe326, 0x4767, 0xa400, 0xa48b, 0xda46, 0x520e, 0x0, 0x0);
        gbc.writeMem(0xe326, { 0xe0, 0x3a });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4767);
        EXPECT(gbc.pc(), 0xe328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe326), 0xe0);
        EXPECT(gbc.readMem(0xe327), 0x3a);
        EXPECT(gbc.readMem(0xff3a), 0xa4);
        // E0 01B1
        gbc.setState(0x2121, 0xa8eb, 0x71e0, 0xe8bc, 0xacaf, 0x4904, 0x1, 0x1);
        gbc.writeMem(0x2121, { 0xe0, 0x62 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa8eb);
        EXPECT(gbc.pc(), 0x2123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff62), 0x71);
        // E0 01B2
        gbc.setState(0x7f1e, 0x1d22, 0x6330, 0x822a, 0x7c06, 0xaa60, 0x0, 0x1);
        gbc.writeMem(0x7f1e, { 0xe0, 0xbf });
        gbc.writeMem(0xffbf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1d22);
        EXPECT(gbc.pc(), 0x7f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffbf), 0x63);
        // E0 01B3
        gbc.setState(0x4e75, 0x5846, 0xecb0, 0xf58f, 0xeca3, 0x7995, 0x0, 0x1);
        gbc.writeMem(0x4e75, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5846);
        EXPECT(gbc.pc(), 0x4e77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffaf), 0xec);
        // E0 01B4
        gbc.setState(0xe68b, 0x2dd6, 0x7c30, 0x7013, 0x232b, 0xf02a, 0x1, 0x1);
        gbc.writeMem(0xe68b, { 0xe0, 0xd4 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2dd6);
        EXPECT(gbc.pc(), 0xe68d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68b), 0xe0);
        EXPECT(gbc.readMem(0xe68c), 0xd4);
        EXPECT(gbc.readMem(0xffd4), 0x7c);
        // E0 01B5
        gbc.setState(0xe58b, 0x6249, 0x7f20, 0x5944, 0xda58, 0xbb6c, 0x0, 0x1);
        gbc.writeMem(0xe58b, { 0xe0, 0x3c });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6249);
        EXPECT(gbc.pc(), 0xe58d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe58b), 0xe0);
        EXPECT(gbc.readMem(0xe58c), 0x3c);
        EXPECT(gbc.readMem(0xff3c), 0x7f);
        // E0 01B7
        gbc.setState(0x8225, 0x2a60, 0x8440, 0x332d, 0x33d8, 0x3030, 0x0, 0x0);
        gbc.writeMem(0x8225, { 0xe0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2a60);
        EXPECT(gbc.pc(), 0x8227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8225), 0xe0);
        EXPECT(gbc.readMem(0x8226), 0xb1);
        EXPECT(gbc.readMem(0xffb1), 0x84);
        // E0 01B8
        gbc.setState(0x7601, 0x1e3a, 0xb200, 0xdde9, 0xe5e0, 0xf5cb, 0x0, 0x0);
        gbc.writeMem(0x7601, { 0xe0, 0xe3 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1e3a);
        EXPECT(gbc.pc(), 0x7603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe3), 0xb2);
        // E0 01B9
        gbc.setState(0x520a, 0xceed, 0x92d0, 0x2e7d, 0x942e, 0xff62, 0x1, 0x1);
        gbc.writeMem(0x520a, { 0xe0, 0x72 });
        gbc.writeMem(0xff72, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xceed);
        EXPECT(gbc.pc(), 0x520c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff72), 0x92);
        // E0 01BA
        gbc.setState(0xce5a, 0xdec2, 0x6ef0, 0xade1, 0x6416, 0x5e20, 0x0, 0x0);
        gbc.writeMem(0xce5a, { 0xe0, 0x36 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xdec2);
        EXPECT(gbc.pc(), 0xce5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce5a), 0xe0);
        EXPECT(gbc.readMem(0xce5b), 0x36);
        EXPECT(gbc.readMem(0xff36), 0x6e);
        // E0 01BB
        gbc.setState(0xb6b9, 0x32ab, 0xaed0, 0x1c5a, 0x7cf2, 0xedd1, 0x0, 0x0);
        gbc.writeMem(0xb6b9, { 0xe0, 0xa9 });
        gbc.writeMem(0xffa9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x32ab);
        EXPECT(gbc.pc(), 0xb6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b9), 0xe0);
        EXPECT(gbc.readMem(0xb6ba), 0xa9);
        EXPECT(gbc.readMem(0xffa9), 0xae);
        // E0 01BC
        gbc.setState(0xbcec, 0x9bef, 0xd970, 0x5417, 0x123f, 0x8342, 0x0, 0x1);
        gbc.writeMem(0xbcec, { 0xe0, 0xbb });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9bef);
        EXPECT(gbc.pc(), 0xbcee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcec), 0xe0);
        EXPECT(gbc.readMem(0xbced), 0xbb);
        EXPECT(gbc.readMem(0xffbb), 0xd9);
        // E0 01BD
        gbc.setState(0xe1, 0x5d62, 0xd420, 0xe1a0, 0x8727, 0x2ca, 0x1, 0x1);
        gbc.writeMem(0xe1, { 0xe0, 0xc7 });
        gbc.writeMem(0xffc7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5d62);
        EXPECT(gbc.pc(), 0xe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc7), 0xd4);
        // E0 01BE
        gbc.setState(0xa51e, 0x9fdb, 0x840, 0xc5f2, 0x6aee, 0xca5b, 0x0, 0x1);
        gbc.writeMem(0xa51e, { 0xe0, 0x3c });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9fdb);
        EXPECT(gbc.pc(), 0xa520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51e), 0xe0);
        EXPECT(gbc.readMem(0xa51f), 0x3c);
        EXPECT(gbc.readMem(0xff3c), 0x8);
        // E0 01BF
        gbc.setState(0xb8b9, 0xbacf, 0x79b0, 0xc85e, 0x4422, 0xc828, 0x1, 0x1);
        gbc.writeMem(0xb8b9, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbacf);
        EXPECT(gbc.pc(), 0xb8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b9), 0xe0);
        EXPECT(gbc.readMem(0xb8ba), 0xdc);
        EXPECT(gbc.readMem(0xffdc), 0x79);
        // E0 01C0
        gbc.setState(0x16f2, 0x167b, 0xd2c0, 0xf510, 0xc593, 0xf131, 0x1, 0x1);
        gbc.writeMem(0x16f2, { 0xe0, 0x22 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x167b);
        EXPECT(gbc.pc(), 0x16f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff22), 0xd2);
        // E0 01C1
        gbc.setState(0xea01, 0x768f, 0x2180, 0xf659, 0x38a, 0x3d98, 0x0, 0x1);
        gbc.writeMem(0xea01, { 0xe0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x768f);
        EXPECT(gbc.pc(), 0xea03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea01), 0xe0);
        EXPECT(gbc.readMem(0xea02), 0xe6);
        EXPECT(gbc.readMem(0xffe6), 0x21);
        // E0 01C2
        gbc.setState(0x818d, 0x388, 0xffd0, 0x10e2, 0x8ab8, 0x85bc, 0x1, 0x0);
        gbc.writeMem(0x818d, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x388);
        EXPECT(gbc.pc(), 0x818f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x818d), 0xe0);
        EXPECT(gbc.readMem(0x818e), 0xea);
        EXPECT(gbc.readMem(0xffea), 0xff);
        // E0 01C3
        gbc.setState(0xd314, 0x2f36, 0xe970, 0x52b0, 0xebab, 0x53b6, 0x0, 0x1);
        gbc.writeMem(0xd314, { 0xe0, 0xf1 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2f36);
        EXPECT(gbc.pc(), 0xd316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd314), 0xe0);
        EXPECT(gbc.readMem(0xd315), 0xf1);
        EXPECT(gbc.readMem(0xfff1), 0xe9);
        // E0 01C4
        gbc.setState(0xd40, 0x72be, 0x570, 0x3937, 0x398f, 0xdc66, 0x1, 0x1);
        gbc.writeMem(0xd40, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x72be);
        EXPECT(gbc.pc(), 0xd42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffdc), 0x5);
        // E0 01C5
        gbc.setState(0xb7cc, 0x6216, 0xc2e0, 0xc37, 0x60fa, 0x1e61, 0x1, 0x1);
        gbc.writeMem(0xb7cc, { 0xe0, 0xd2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6216);
        EXPECT(gbc.pc(), 0xb7ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7cc), 0xe0);
        EXPECT(gbc.readMem(0xb7cd), 0xd2);
        EXPECT(gbc.readMem(0xffd2), 0xc2);
        // E0 01C6
        gbc.setState(0xe066, 0x1121, 0xbf0, 0xf15c, 0x379c, 0x4adf, 0x0, 0x0);
        gbc.writeMem(0xe066, { 0xe0, 0x7a });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1121);
        EXPECT(gbc.pc(), 0xe068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe066), 0xe0);
        EXPECT(gbc.readMem(0xe067), 0x7a);
        EXPECT(gbc.readMem(0xff7a), 0xb);
        // E0 01C7
        gbc.setState(0x82e6, 0x5e9b, 0x7c30, 0xdfa7, 0xa653, 0x98dd, 0x1, 0x1);
        gbc.writeMem(0x82e6, { 0xe0, 0x39 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5e9b);
        EXPECT(gbc.pc(), 0x82e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e6), 0xe0);
        EXPECT(gbc.readMem(0x82e7), 0x39);
        EXPECT(gbc.readMem(0xff39), 0x7c);
        // E0 01C8
        gbc.setState(0x63fb, 0x368b, 0x8bd0, 0xc059, 0x1c56, 0x2348, 0x0, 0x0);
        gbc.writeMem(0x63fb, { 0xe0, 0x8c });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x368b);
        EXPECT(gbc.pc(), 0x63fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8c), 0x8b);
        // E0 01C9
        gbc.setState(0xd805, 0xa604, 0xeed0, 0x65aa, 0x2c9e, 0x5ac9, 0x0, 0x1);
        gbc.writeMem(0xd805, { 0xe0, 0x78 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa604);
        EXPECT(gbc.pc(), 0xd807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd805), 0xe0);
        EXPECT(gbc.readMem(0xd806), 0x78);
        EXPECT(gbc.readMem(0xff78), 0xee);
        // E0 01CA
        gbc.setState(0x2ea5, 0xc63c, 0x7a90, 0x6c98, 0x431e, 0x28e6, 0x1, 0x0);
        gbc.writeMem(0x2ea5, { 0xe0, 0x14 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc63c);
        EXPECT(gbc.pc(), 0x2ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff14), 0x7a);
        // E0 01CB
        gbc.setState(0x9174, 0xf55c, 0x92f0, 0xcd64, 0xf648, 0xb168, 0x1, 0x0);
        gbc.writeMem(0x9174, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf55c);
        EXPECT(gbc.pc(), 0x9176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9174), 0xe0);
        EXPECT(gbc.readMem(0x9175), 0x5f);
        EXPECT(gbc.readMem(0xff5f), 0x92);
        // E0 01CC
        gbc.setState(0x9a1f, 0x73e9, 0xc7c0, 0xb51f, 0x1cc5, 0x282c, 0x1, 0x1);
        gbc.writeMem(0x9a1f, { 0xe0, 0x4b });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x73e9);
        EXPECT(gbc.pc(), 0x9a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1f), 0xe0);
        EXPECT(gbc.readMem(0x9a20), 0x4b);
        EXPECT(gbc.readMem(0xff4b), 0xc7);
        // E0 01CD
        gbc.setState(0x680b, 0xe984, 0x8170, 0x61a1, 0xbfd6, 0x996b, 0x1, 0x0);
        gbc.writeMem(0x680b, { 0xe0, 0x3b });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe984);
        EXPECT(gbc.pc(), 0x680d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff3b), 0x81);
        // E0 01CE
        gbc.setState(0x2cee, 0xe860, 0x5ce0, 0x1dcb, 0xb022, 0x62da, 0x1, 0x1);
        gbc.writeMem(0x2cee, { 0xe0, 0x19 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe860);
        EXPECT(gbc.pc(), 0x2cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff19), 0x5c);
        // E0 01CF
        gbc.setState(0xca39, 0x66d6, 0xd3d0, 0xe52a, 0xd1b2, 0xba4d, 0x0, 0x0);
        gbc.writeMem(0xca39, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x66d6);
        EXPECT(gbc.pc(), 0xca3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca39), 0xe0);
        EXPECT(gbc.readMem(0xca3a), 0xea);
        EXPECT(gbc.readMem(0xffea), 0xd3);
        // E0 01D0
        gbc.setState(0x3be8, 0x5ec2, 0xc30, 0x6bca, 0xcff8, 0xdd14, 0x0, 0x0);
        gbc.writeMem(0x3be8, { 0xe0, 0xfa });
        gbc.writeMem(0xfffa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5ec2);
        EXPECT(gbc.pc(), 0x3bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfffa), 0xc);
        // E0 01D1
        gbc.setState(0x6cd9, 0x8f2e, 0x2c60, 0x1456, 0xa709, 0x75b7, 0x1, 0x0);
        gbc.writeMem(0x6cd9, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8f2e);
        EXPECT(gbc.pc(), 0x6cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3f), 0x2c);
        // E0 01D2
        gbc.setState(0x9f1d, 0xc3d3, 0xa680, 0x881c, 0x4ea6, 0x2e13, 0x1, 0x0);
        gbc.writeMem(0x9f1d, { 0xe0, 0xbb });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc3d3);
        EXPECT(gbc.pc(), 0x9f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f1d), 0xe0);
        EXPECT(gbc.readMem(0x9f1e), 0xbb);
        EXPECT(gbc.readMem(0xffbb), 0xa6);
        // E0 01D3
        gbc.setState(0xe92c, 0xa24b, 0xbd10, 0x583, 0xac01, 0xdd66, 0x0, 0x0);
        gbc.writeMem(0xe92c, { 0xe0, 0xa4 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa24b);
        EXPECT(gbc.pc(), 0xe92e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe92c), 0xe0);
        EXPECT(gbc.readMem(0xe92d), 0xa4);
        EXPECT(gbc.readMem(0xffa4), 0xbd);
        // E0 01D4
        gbc.setState(0x352c, 0xfca8, 0x2480, 0x4a4c, 0x7d21, 0x1230, 0x1, 0x0);
        gbc.writeMem(0x352c, { 0xe0, 0x43 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfca8);
        EXPECT(gbc.pc(), 0x352e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff43), 0x24);
        // E0 01D5
        gbc.setState(0xfc0, 0xfa4a, 0xeae0, 0xbb2f, 0xb6bf, 0xb969, 0x1, 0x1);
        gbc.writeMem(0xfc0, { 0xe0, 0xae });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xfa4a);
        EXPECT(gbc.pc(), 0xfc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffae), 0xea);
        // E0 01D6
        gbc.setState(0x9897, 0x2d4c, 0x1250, 0xb265, 0x5c15, 0xc8b, 0x0, 0x0);
        gbc.writeMem(0x9897, { 0xe0, 0xb3 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2d4c);
        EXPECT(gbc.pc(), 0x9899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9897), 0xe0);
        EXPECT(gbc.readMem(0x9898), 0xb3);
        EXPECT(gbc.readMem(0xffb3), 0x12);
        // E0 01D7
        gbc.setState(0x6a92, 0xbb2b, 0xeec0, 0xbebc, 0x8dc0, 0x6a33, 0x1, 0x1);
        gbc.writeMem(0x6a92, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbb2b);
        EXPECT(gbc.pc(), 0x6a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff80), 0xee);
        // E0 01D8
        gbc.setState(0xd74b, 0x69d7, 0x65f0, 0x4099, 0x407, 0x4ec, 0x0, 0x1);
        gbc.writeMem(0xd74b, { 0xe0, 0xa7 });
        gbc.writeMem(0xffa7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x69d7);
        EXPECT(gbc.pc(), 0xd74d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd74b), 0xe0);
        EXPECT(gbc.readMem(0xd74c), 0xa7);
        EXPECT(gbc.readMem(0xffa7), 0x65);
        // E0 01D9
        gbc.setState(0xc2d8, 0xf944, 0x9290, 0x408, 0xde27, 0x967d, 0x0, 0x1);
        gbc.writeMem(0xc2d8, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf944);
        EXPECT(gbc.pc(), 0xc2da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d8), 0xe0);
        EXPECT(gbc.readMem(0xc2d9), 0xdc);
        EXPECT(gbc.readMem(0xffdc), 0x92);
        // E0 01DA
        gbc.setState(0x1804, 0x8cb7, 0x9ba0, 0xf2a, 0x5eb9, 0x83c, 0x1, 0x1);
        gbc.writeMem(0x1804, { 0xe0, 0xa1 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8cb7);
        EXPECT(gbc.pc(), 0x1806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa1), 0x9b);
        // E0 01DB
        gbc.setState(0x2ce7, 0x272d, 0xd30, 0xb336, 0x79c0, 0xf401, 0x0, 0x0);
        gbc.writeMem(0x2ce7, { 0xe0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x272d);
        EXPECT(gbc.pc(), 0x2ce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd7), 0xd);
        // E0 01DC
        gbc.setState(0x894d, 0xb757, 0x1f0, 0xba56, 0xd45a, 0x130e, 0x0, 0x1);
        gbc.writeMem(0x894d, { 0xe0, 0xa0 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb757);
        EXPECT(gbc.pc(), 0x894f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x894d), 0xe0);
        EXPECT(gbc.readMem(0x894e), 0xa0);
        EXPECT(gbc.readMem(0xffa0), 0x1);
        // E0 01DD
        gbc.setState(0x4bb1, 0xaf0, 0xd8c0, 0x9a21, 0x997a, 0xb6ad, 0x1, 0x1);
        gbc.writeMem(0x4bb1, { 0xe0, 0xd5 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xaf0);
        EXPECT(gbc.pc(), 0x4bb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd5), 0xd8);
        // E0 01DF
        gbc.setState(0x8f93, 0xdef6, 0xc3f0, 0x9e63, 0x8d89, 0xbf41, 0x1, 0x1);
        gbc.writeMem(0x8f93, { 0xe0, 0xfa });
        gbc.writeMem(0xfffa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdef6);
        EXPECT(gbc.pc(), 0x8f95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f93), 0xe0);
        EXPECT(gbc.readMem(0x8f94), 0xfa);
        EXPECT(gbc.readMem(0xfffa), 0xc3);
        // E0 01E0
        gbc.setState(0xb7a7, 0xe684, 0x3070, 0x6e2b, 0xabc, 0x21bd, 0x1, 0x1);
        gbc.writeMem(0xb7a7, { 0xe0, 0xee });
        gbc.writeMem(0xffee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe684);
        EXPECT(gbc.pc(), 0xb7a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a7), 0xe0);
        EXPECT(gbc.readMem(0xb7a8), 0xee);
        EXPECT(gbc.readMem(0xffee), 0x30);
        // E0 01E1
        gbc.setState(0x8d25, 0x3fce, 0xe700, 0xf55a, 0x3c0b, 0x1d96, 0x0, 0x0);
        gbc.writeMem(0x8d25, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3fce);
        EXPECT(gbc.pc(), 0x8d27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d25), 0xe0);
        EXPECT(gbc.readMem(0x8d26), 0xe);
        EXPECT(gbc.readMem(0xff0e), 0xe7);
        // E0 01E2
        gbc.setState(0x2a9c, 0x3301, 0x4440, 0x7edc, 0xf5cf, 0x5a, 0x0, 0x0);
        gbc.writeMem(0x2a9c, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3301);
        EXPECT(gbc.pc(), 0x2a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffdc), 0x44);
        // E0 01E3
        gbc.setState(0xdd5d, 0x42b6, 0x1c90, 0xde3e, 0x3244, 0x5a1c, 0x0, 0x1);
        gbc.writeMem(0xdd5d, { 0xe0, 0xd });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x42b6);
        EXPECT(gbc.pc(), 0xdd5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd5d), 0xe0);
        EXPECT(gbc.readMem(0xdd5e), 0xd);
        EXPECT(gbc.readMem(0xff0d), 0x1c);
        // E0 01E5
        gbc.setState(0xa8fa, 0x3010, 0xec30, 0x4fed, 0x4eeb, 0x3538, 0x0, 0x0);
        gbc.writeMem(0xa8fa, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3010);
        EXPECT(gbc.pc(), 0xa8fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8fa), 0xe0);
        EXPECT(gbc.readMem(0xa8fb), 0x76);
        EXPECT(gbc.readMem(0xff76), 0xec);
        // E0 01E6
        gbc.setState(0x4016, 0xa170, 0x5870, 0x39b7, 0x6671, 0x3ca, 0x0, 0x0);
        gbc.writeMem(0x4016, { 0xe0, 0x95 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa170);
        EXPECT(gbc.pc(), 0x4018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff95), 0x58);
        // E0 01E7
        gbc.setState(0xebbb, 0x9054, 0x2230, 0x3e96, 0x2d4f, 0x3486, 0x1, 0x1);
        gbc.writeMem(0xebbb, { 0xe0, 0x21 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9054);
        EXPECT(gbc.pc(), 0xebbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebbb), 0xe0);
        EXPECT(gbc.readMem(0xebbc), 0x21);
        EXPECT(gbc.readMem(0xff21), 0x22);
        // E0 01E8
        gbc.setState(0xc7f, 0xb70b, 0x4a60, 0xec53, 0x35be, 0x585a, 0x1, 0x0);
        gbc.writeMem(0xc7f, { 0xe0, 0x8e });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb70b);
        EXPECT(gbc.pc(), 0xc81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8e), 0x4a);
        // E0 01EA
        gbc.setState(0x6782, 0xe1fb, 0x5790, 0x7926, 0x9b69, 0x56e6, 0x0, 0x1);
        gbc.writeMem(0x6782, { 0xe0, 0x5d });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe1fb);
        EXPECT(gbc.pc(), 0x6784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5d), 0x57);
        // E0 01EB
        gbc.setState(0x33d5, 0x61a0, 0x9e10, 0xfe1d, 0x8fd1, 0x15e2, 0x0, 0x1);
        gbc.writeMem(0x33d5, { 0xe0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x61a0);
        EXPECT(gbc.pc(), 0x33d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc9), 0x9e);
        // E0 01EC
        gbc.setState(0x5167, 0x121d, 0x6490, 0xc5a2, 0x9ab7, 0x44b3, 0x0, 0x0);
        gbc.writeMem(0x5167, { 0xe0, 0xf8 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x121d);
        EXPECT(gbc.pc(), 0x5169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff8), 0x64);
        // E0 01ED
        gbc.setState(0xe374, 0x7085, 0xd900, 0x17b6, 0xda2a, 0x742c, 0x1, 0x1);
        gbc.writeMem(0xe374, { 0xe0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7085);
        EXPECT(gbc.pc(), 0xe376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe374), 0xe0);
        EXPECT(gbc.readMem(0xe375), 0xe6);
        EXPECT(gbc.readMem(0xffe6), 0xd9);
        // E0 01EE
        gbc.setState(0x2433, 0x3373, 0x8630, 0x2c3e, 0x37f5, 0xf8, 0x0, 0x1);
        gbc.writeMem(0x2433, { 0xe0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3373);
        EXPECT(gbc.pc(), 0x2435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb7), 0x86);
        // E0 01EF
        gbc.setState(0x7c32, 0x938c, 0x4e90, 0x8ff9, 0xfc59, 0xfef0, 0x0, 0x1);
        gbc.writeMem(0x7c32, { 0xe0, 0x79 });
        gbc.writeMem(0xff79, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x938c);
        EXPECT(gbc.pc(), 0x7c34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff79), 0x4e);
        // E0 01F0
        gbc.setState(0xc4dd, 0xc788, 0xf190, 0xd85, 0x650, 0x1de1, 0x1, 0x0);
        gbc.writeMem(0xc4dd, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc788);
        EXPECT(gbc.pc(), 0xc4df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4dd), 0xe0);
        EXPECT(gbc.readMem(0xc4de), 0xca);
        EXPECT(gbc.readMem(0xffca), 0xf1);
        // E0 01F1
        gbc.setState(0xe15e, 0x8e7f, 0x7970, 0xc1dd, 0xd667, 0xfc4c, 0x0, 0x0);
        gbc.writeMem(0xe15e, { 0xe0, 0x66 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8e7f);
        EXPECT(gbc.pc(), 0xe160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe15e), 0xe0);
        EXPECT(gbc.readMem(0xe15f), 0x66);
        EXPECT(gbc.readMem(0xff66), 0x79);
        // E0 01F2
        gbc.setState(0x1905, 0x3cc2, 0xfaa0, 0xc509, 0x4561, 0xe04, 0x1, 0x1);
        gbc.writeMem(0x1905, { 0xe0, 0xda });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3cc2);
        EXPECT(gbc.pc(), 0x1907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffda), 0xfa);
        // E0 01F3
        gbc.setState(0x382d, 0x9020, 0x7800, 0x14f2, 0x3aa1, 0x66bd, 0x1, 0x0);
        gbc.writeMem(0x382d, { 0xe0, 0x93 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9020);
        EXPECT(gbc.pc(), 0x382f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff93), 0x78);
        // E0 01F4
        gbc.setState(0x6ec9, 0x988b, 0xba80, 0xdfdd, 0xd966, 0x1f86, 0x0, 0x0);
        gbc.writeMem(0x6ec9, { 0xe0, 0xd8 });
        gbc.writeMem(0xffd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x988b);
        EXPECT(gbc.pc(), 0x6ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd8), 0xba);
        // E0 01F5
        gbc.setState(0xc79, 0xd71a, 0x5740, 0x550, 0x8a78, 0xc7ac, 0x0, 0x0);
        gbc.writeMem(0xc79, { 0xe0, 0x44 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd71a);
        EXPECT(gbc.pc(), 0xc7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff44), 0x57);
        // E0 01F6
        gbc.setState(0x1707, 0x92d2, 0x5000, 0x73ae, 0x8157, 0x18d9, 0x1, 0x0);
        gbc.writeMem(0x1707, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x92d2);
        EXPECT(gbc.pc(), 0x1709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb8), 0x50);
        // E0 01F7
        gbc.setState(0x44c6, 0xd7e8, 0x3d70, 0xe6b7, 0x1ba6, 0xd5a3, 0x1, 0x1);
        gbc.writeMem(0x44c6, { 0xe0, 0x6 });
        gbc.writeMem(0xff06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd7e8);
        EXPECT(gbc.pc(), 0x44c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff06), 0x3d);
        // E0 01F8
        gbc.setState(0x3a53, 0xf532, 0x3250, 0xdcd7, 0x4710, 0x5527, 0x0, 0x1);
        gbc.writeMem(0x3a53, { 0xe0, 0xe1 });
        gbc.writeMem(0xffe1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf532);
        EXPECT(gbc.pc(), 0x3a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe1), 0x32);
        // E0 01F9
        gbc.setState(0x19d5, 0x49d8, 0xf1a0, 0x7ca, 0x4b9f, 0xd396, 0x1, 0x0);
        gbc.writeMem(0x19d5, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x49d8);
        EXPECT(gbc.pc(), 0x19d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff48), 0xf1);
        // E0 01FA
        gbc.setState(0x6984, 0x92eb, 0x9c60, 0x1e40, 0xd5bc, 0x1007, 0x0, 0x1);
        gbc.writeMem(0x6984, { 0xe0, 0x54 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x92eb);
        EXPECT(gbc.pc(), 0x6986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff54), 0x9c);
        // E0 01FB
        gbc.setState(0x3b28, 0x711a, 0xd310, 0xb7da, 0xda5b, 0x4349, 0x1, 0x1);
        gbc.writeMem(0x3b28, { 0xe0, 0x91 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x711a);
        EXPECT(gbc.pc(), 0x3b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff91), 0xd3);
        // E0 01FC
        gbc.setState(0x3b03, 0x52dc, 0x14c0, 0xdb16, 0x9cd8, 0x819e, 0x0, 0x1);
        gbc.writeMem(0x3b03, { 0xe0, 0x1 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x52dc);
        EXPECT(gbc.pc(), 0x3b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff01), 0x14);
        // E0 01FD
        gbc.setState(0x9a14, 0xa7c1, 0xd940, 0x4930, 0x4a5e, 0xaaa4, 0x1, 0x1);
        gbc.writeMem(0x9a14, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa7c1);
        EXPECT(gbc.pc(), 0x9a16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a14), 0xe0);
        EXPECT(gbc.readMem(0x9a15), 0xd0);
        EXPECT(gbc.readMem(0xffd0), 0xd9);
        // E0 01FE
        gbc.setState(0x5397, 0x466e, 0xc460, 0x4e48, 0xaa9f, 0xa83f, 0x1, 0x1);
        gbc.writeMem(0x5397, { 0xe0, 0xce });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x466e);
        EXPECT(gbc.pc(), 0x5399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffce), 0xc4);
        // E0 01FF
        gbc.setState(0xbdf8, 0x8c47, 0x4ac0, 0x154b, 0x7572, 0x3fc3, 0x0, 0x1);
        gbc.writeMem(0xbdf8, { 0xe0, 0xb });
        gbc.writeMem(0xff0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8c47);
        EXPECT(gbc.pc(), 0xbdfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf8), 0xe0);
        EXPECT(gbc.readMem(0xbdf9), 0xb);
        EXPECT(gbc.readMem(0xff0b), 0x4a);
        // E0 0200
        gbc.setState(0x9df1, 0x78b0, 0x4c10, 0x5c72, 0x85e1, 0x98cc, 0x1, 0x1);
        gbc.writeMem(0x9df1, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x78b0);
        EXPECT(gbc.pc(), 0x9df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df1), 0xe0);
        EXPECT(gbc.readMem(0x9df2), 0x8a);
        EXPECT(gbc.readMem(0xff8a), 0x4c);
        // E0 0202
        gbc.setState(0x8e57, 0xaf47, 0xc620, 0x1ea8, 0xa7e, 0xbe43, 0x0, 0x1);
        gbc.writeMem(0x8e57, { 0xe0, 0x10 });
        gbc.writeMem(0xff10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xaf47);
        EXPECT(gbc.pc(), 0x8e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e57), 0xe0);
        EXPECT(gbc.readMem(0x8e58), 0x10);
        EXPECT(gbc.readMem(0xff10), 0xc6);
        // E0 0203
        gbc.setState(0xe374, 0x5b0, 0xfde0, 0x60db, 0xfe28, 0xb574, 0x1, 0x1);
        gbc.writeMem(0xe374, { 0xe0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5b0);
        EXPECT(gbc.pc(), 0xe376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe374), 0xe0);
        EXPECT(gbc.readMem(0xe375), 0xe6);
        EXPECT(gbc.readMem(0xffe6), 0xfd);
        // E0 0204
        gbc.setState(0xc179, 0x5cfd, 0x9ba0, 0xf099, 0xe7f, 0xf951, 0x0, 0x1);
        gbc.writeMem(0xc179, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5cfd);
        EXPECT(gbc.pc(), 0xc17b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc179), 0xe0);
        EXPECT(gbc.readMem(0xc17a), 0x9f);
        EXPECT(gbc.readMem(0xff9f), 0x9b);
        // E0 0205
        gbc.setState(0xd800, 0x55e3, 0x110, 0x8adb, 0xcc6f, 0x4923, 0x1, 0x0);
        gbc.writeMem(0xd800, { 0xe0, 0x29 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x55e3);
        EXPECT(gbc.pc(), 0xd802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd800), 0xe0);
        EXPECT(gbc.readMem(0xd801), 0x29);
        EXPECT(gbc.readMem(0xff29), 0x1);
        // E0 0206
        gbc.setState(0x694e, 0x3b80, 0xd3c0, 0x99dd, 0xf2e6, 0xa64a, 0x0, 0x0);
        gbc.writeMem(0x694e, { 0xe0, 0x96 });
        gbc.writeMem(0xff96, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3b80);
        EXPECT(gbc.pc(), 0x6950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff96), 0xd3);
        // E0 0207
        gbc.setState(0xed3e, 0x686d, 0x3680, 0xbcfb, 0x8110, 0xd098, 0x1, 0x0);
        gbc.writeMem(0xed3e, { 0xe0, 0xae });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x686d);
        EXPECT(gbc.pc(), 0xed40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3e), 0xe0);
        EXPECT(gbc.readMem(0xed3f), 0xae);
        EXPECT(gbc.readMem(0xffae), 0x36);
        // E0 0208
        gbc.setState(0x7bc8, 0xe49a, 0xcb40, 0x388b, 0xe225, 0xf69, 0x0, 0x0);
        gbc.writeMem(0x7bc8, { 0xe0, 0x21 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe49a);
        EXPECT(gbc.pc(), 0x7bca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff21), 0xcb);
        // E0 0209
        gbc.setState(0x7c15, 0xe65e, 0x72c0, 0x90ec, 0x4022, 0x2e4e, 0x1, 0x0);
        gbc.writeMem(0x7c15, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe65e);
        EXPECT(gbc.pc(), 0x7c17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffab), 0x72);
        // E0 020A
        gbc.setState(0xa69c, 0x5e5a, 0x86a0, 0xe62d, 0xc4f5, 0xfd5a, 0x1, 0x0);
        gbc.writeMem(0xa69c, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5e5a);
        EXPECT(gbc.pc(), 0xa69e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa69c), 0xe0);
        EXPECT(gbc.readMem(0xa69d), 0x51);
        EXPECT(gbc.readMem(0xff51), 0x86);
        // E0 020B
        gbc.setState(0xef4, 0xa263, 0x9290, 0x1228, 0x39c0, 0xc252, 0x0, 0x1);
        gbc.writeMem(0xef4, { 0xe0, 0xeb });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa263);
        EXPECT(gbc.pc(), 0xef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffeb), 0x92);
        // E0 020C
        gbc.setState(0x72be, 0x7098, 0x9920, 0xc57f, 0x4138, 0x898b, 0x0, 0x0);
        gbc.writeMem(0x72be, { 0xe0, 0xac });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7098);
        EXPECT(gbc.pc(), 0x72c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffac), 0x99);
        // E0 020D
        gbc.setState(0xbeec, 0x7a15, 0x4910, 0x515f, 0xb5fb, 0xcfeb, 0x1, 0x0);
        gbc.writeMem(0xbeec, { 0xe0, 0xa3 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7a15);
        EXPECT(gbc.pc(), 0xbeee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeec), 0xe0);
        EXPECT(gbc.readMem(0xbeed), 0xa3);
        EXPECT(gbc.readMem(0xffa3), 0x49);
        // E0 020E
        gbc.setState(0xc57f, 0xbd18, 0x38e0, 0x460f, 0x9d96, 0xe1a2, 0x1, 0x1);
        gbc.writeMem(0xc57f, { 0xe0, 0xe0 });
        gbc.writeMem(0xffe0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbd18);
        EXPECT(gbc.pc(), 0xc581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc57f), 0xe0);
        EXPECT(gbc.readMem(0xc580), 0xe0);
        EXPECT(gbc.readMem(0xffe0), 0x38);
        // E0 020F
        gbc.setState(0xcedf, 0x2a23, 0x18a0, 0x315d, 0xbba9, 0x9ec7, 0x1, 0x1);
        gbc.writeMem(0xcedf, { 0xe0, 0xd1 });
        gbc.writeMem(0xffd1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2a23);
        EXPECT(gbc.pc(), 0xcee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcedf), 0xe0);
        EXPECT(gbc.readMem(0xcee0), 0xd1);
        EXPECT(gbc.readMem(0xffd1), 0x18);
        // E0 0211
        gbc.setState(0xd6ff, 0xebe8, 0xf410, 0xf666, 0x125e, 0x4f7a, 0x0, 0x1);
        gbc.writeMem(0xd6ff, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xebe8);
        EXPECT(gbc.pc(), 0xd701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ff), 0xe0);
        EXPECT(gbc.readMem(0xd700), 0x48);
        EXPECT(gbc.readMem(0xff48), 0xf4);
        // E0 0213
        gbc.setState(0x5260, 0xed3b, 0x970, 0x4b23, 0xa94e, 0x92c5, 0x1, 0x1);
        gbc.writeMem(0x5260, { 0xe0, 0xd8 });
        gbc.writeMem(0xffd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xed3b);
        EXPECT(gbc.pc(), 0x5262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd8), 0x9);
        // E0 0214
        gbc.setState(0xd1a6, 0x776a, 0xe250, 0x152, 0x9ad3, 0x565, 0x0, 0x1);
        gbc.writeMem(0xd1a6, { 0xe0, 0xb9 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x776a);
        EXPECT(gbc.pc(), 0xd1a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a6), 0xe0);
        EXPECT(gbc.readMem(0xd1a7), 0xb9);
        EXPECT(gbc.readMem(0xffb9), 0xe2);
        // E0 0215
        gbc.setState(0x7a9f, 0x6df, 0x7410, 0xe654, 0xe20a, 0x2360, 0x0, 0x1);
        gbc.writeMem(0x7a9f, { 0xe0, 0x94 });
        gbc.writeMem(0xff94, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6df);
        EXPECT(gbc.pc(), 0x7aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff94), 0x74);
        // E0 0216
        gbc.setState(0x40f6, 0x64ac, 0x6d30, 0x1ff9, 0x7185, 0xc63f, 0x1, 0x0);
        gbc.writeMem(0x40f6, { 0xe0, 0x2b });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x64ac);
        EXPECT(gbc.pc(), 0x40f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2b), 0x6d);
        // E0 0217
        gbc.setState(0x6d6d, 0xad5c, 0x8480, 0x76c0, 0xe359, 0x3ef0, 0x0, 0x1);
        gbc.writeMem(0x6d6d, { 0xe0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xad5c);
        EXPECT(gbc.pc(), 0x6d6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa5), 0x84);
        // E0 0218
        gbc.setState(0x519d, 0xa5c6, 0x3970, 0x941f, 0x640c, 0xb6de, 0x0, 0x0);
        gbc.writeMem(0x519d, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa5c6);
        EXPECT(gbc.pc(), 0x519f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff23), 0x39);
        // E0 0219
        gbc.setState(0xedf1, 0x2948, 0xbf30, 0x42c1, 0x7e14, 0x9237, 0x0, 0x1);
        gbc.writeMem(0xedf1, { 0xe0, 0x71 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2948);
        EXPECT(gbc.pc(), 0xedf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf1), 0xe0);
        EXPECT(gbc.readMem(0xedf2), 0x71);
        EXPECT(gbc.readMem(0xff71), 0xbf);
        // E0 021A
        gbc.setState(0xac38, 0x28ed, 0x900, 0xcffe, 0xfdc6, 0x2a80, 0x0, 0x1);
        gbc.writeMem(0xac38, { 0xe0, 0x6d });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x28ed);
        EXPECT(gbc.pc(), 0xac3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac38), 0xe0);
        EXPECT(gbc.readMem(0xac39), 0x6d);
        EXPECT(gbc.readMem(0xff6d), 0x9);
        // E0 021B
        gbc.setState(0x2f98, 0x5428, 0xacf0, 0x3592, 0xab2b, 0xf4b1, 0x0, 0x1);
        gbc.writeMem(0x2f98, { 0xe0, 0x1a });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5428);
        EXPECT(gbc.pc(), 0x2f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1a), 0xac);
        // E0 021C
        gbc.setState(0x2456, 0x11d7, 0x38b0, 0xe4f9, 0x8ee9, 0x44b5, 0x0, 0x0);
        gbc.writeMem(0x2456, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x11d7);
        EXPECT(gbc.pc(), 0x2458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0e), 0x38);
        // E0 021D
        gbc.setState(0x4b45, 0x62f, 0x9470, 0x1946, 0x8302, 0x185, 0x1, 0x1);
        gbc.writeMem(0x4b45, { 0xe0, 0x13 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x62f);
        EXPECT(gbc.pc(), 0x4b47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff13), 0x94);
        // E0 021E
        gbc.setState(0x885c, 0x23e4, 0xe4e0, 0x8068, 0x3e3c, 0xaef4, 0x0, 0x0);
        gbc.writeMem(0x885c, { 0xe0, 0x11 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x23e4);
        EXPECT(gbc.pc(), 0x885e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x885c), 0xe0);
        EXPECT(gbc.readMem(0x885d), 0x11);
        EXPECT(gbc.readMem(0xff11), 0xe4);
        // E0 0220
        gbc.setState(0x27ca, 0x3ed4, 0x2f10, 0xdc0c, 0xde8d, 0x50ca, 0x1, 0x1);
        gbc.writeMem(0x27ca, { 0xe0, 0xc4 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3ed4);
        EXPECT(gbc.pc(), 0x27cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc4), 0x2f);
        // E0 0221
        gbc.setState(0xef67, 0xbf6e, 0x89a0, 0x7c1a, 0x23c5, 0x2da4, 0x0, 0x1);
        gbc.writeMem(0xef67, { 0xe0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbf6e);
        EXPECT(gbc.pc(), 0xef69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef67), 0xe0);
        EXPECT(gbc.readMem(0xef68), 0xa5);
        EXPECT(gbc.readMem(0xffa5), 0x89);
        // E0 0222
        gbc.setState(0xdd13, 0x99bc, 0xde20, 0x9d51, 0x4f59, 0x80d9, 0x1, 0x0);
        gbc.writeMem(0xdd13, { 0xe0, 0x99 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x99bc);
        EXPECT(gbc.pc(), 0xdd15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd13), 0xe0);
        EXPECT(gbc.readMem(0xdd14), 0x99);
        EXPECT(gbc.readMem(0xff99), 0xde);
        // E0 0223
        gbc.setState(0x21bd, 0x1759, 0xbef0, 0x7529, 0xd545, 0x29d0, 0x0, 0x0);
        gbc.writeMem(0x21bd, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1759);
        EXPECT(gbc.pc(), 0x21bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8a), 0xbe);
        // E0 0224
        gbc.setState(0x663f, 0x33bd, 0x7290, 0xb937, 0xb54c, 0x9d8, 0x1, 0x0);
        gbc.writeMem(0x663f, { 0xe0, 0x3d });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x33bd);
        EXPECT(gbc.pc(), 0x6641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff3d), 0x72);
        // E0 0225
        gbc.setState(0x1e03, 0xbc6c, 0xaba0, 0xd026, 0x58bf, 0x84cf, 0x0, 0x1);
        gbc.writeMem(0x1e03, { 0xe0, 0x6f });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbc6c);
        EXPECT(gbc.pc(), 0x1e05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6f), 0xab);
        // E0 0226
        gbc.setState(0x2cec, 0xc156, 0x32f0, 0xae8b, 0xbf81, 0x3383, 0x1, 0x1);
        gbc.writeMem(0x2cec, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc156);
        EXPECT(gbc.pc(), 0x2cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4c), 0x32);
        // E0 0227
        gbc.setState(0x3263, 0x76c3, 0xe150, 0xc88a, 0xcb3c, 0x7a34, 0x1, 0x0);
        gbc.writeMem(0x3263, { 0xe0, 0xa1 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x76c3);
        EXPECT(gbc.pc(), 0x3265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffa1), 0xe1);
        // E0 0229
        gbc.setState(0xd64f, 0x7972, 0xcd90, 0x93d9, 0x371b, 0xee18, 0x0, 0x1);
        gbc.writeMem(0xd64f, { 0xe0, 0xb });
        gbc.writeMem(0xff0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7972);
        EXPECT(gbc.pc(), 0xd651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd64f), 0xe0);
        EXPECT(gbc.readMem(0xd650), 0xb);
        EXPECT(gbc.readMem(0xff0b), 0xcd);
        // E0 022A
        gbc.setState(0x3f23, 0x44a1, 0xe860, 0x46c4, 0x9558, 0xa49a, 0x0, 0x1);
        gbc.writeMem(0x3f23, { 0xe0, 0x1e });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x44a1);
        EXPECT(gbc.pc(), 0x3f25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff1e), 0xe8);
        // E0 022B
        gbc.setState(0xd92f, 0x69dd, 0xada0, 0x4d5a, 0xbffc, 0xafb9, 0x1, 0x1);
        gbc.writeMem(0xd92f, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x69dd);
        EXPECT(gbc.pc(), 0xd931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd92f), 0xe0);
        EXPECT(gbc.readMem(0xd930), 0x48);
        EXPECT(gbc.readMem(0xff48), 0xad);
        // E0 022C
        gbc.setState(0x1ced, 0xf8ef, 0xcd90, 0x6ff, 0x28d1, 0xfaa1, 0x1, 0x1);
        gbc.writeMem(0x1ced, { 0xe0, 0x72 });
        gbc.writeMem(0xff72, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf8ef);
        EXPECT(gbc.pc(), 0x1cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff72), 0xcd);
        // E0 022D
        gbc.setState(0x16c3, 0xd495, 0xc430, 0x31b0, 0x29f4, 0x4b0d, 0x0, 0x0);
        gbc.writeMem(0x16c3, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd495);
        EXPECT(gbc.pc(), 0x16c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9a), 0xc4);
        // E0 022E
        gbc.setState(0x6f6, 0xeb4e, 0xd770, 0x1ab8, 0x6a4a, 0x8ead, 0x0, 0x1);
        gbc.writeMem(0x6f6, { 0xe0, 0x54 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xeb4e);
        EXPECT(gbc.pc(), 0x6f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff54), 0xd7);
        // E0 022F
        gbc.setState(0x2a78, 0xf4f5, 0x3a0, 0x3063, 0x1b9c, 0xd178, 0x0, 0x0);
        gbc.writeMem(0x2a78, { 0xe0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf4f5);
        EXPECT(gbc.pc(), 0x2a7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd7), 0x3);
        // E0 0230
        gbc.setState(0xab68, 0xcbca, 0x42e0, 0x76d2, 0x8f43, 0x1928, 0x0, 0x0);
        gbc.writeMem(0xab68, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcbca);
        EXPECT(gbc.pc(), 0xab6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab68), 0xe0);
        EXPECT(gbc.readMem(0xab69), 0x4c);
        EXPECT(gbc.readMem(0xff4c), 0x42);
        // E0 0231
        gbc.setState(0xd72c, 0x2f7a, 0xf50, 0x5e0, 0xfc7c, 0xe704, 0x0, 0x0);
        gbc.writeMem(0xd72c, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2f7a);
        EXPECT(gbc.pc(), 0xd72e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd72c), 0xe0);
        EXPECT(gbc.readMem(0xd72d), 0xab);
        EXPECT(gbc.readMem(0xffab), 0xf);
        // E0 0232
        gbc.setState(0xa64d, 0x6779, 0x4a40, 0x70a0, 0xd46a, 0x53a1, 0x0, 0x1);
        gbc.writeMem(0xa64d, { 0xe0, 0x1a });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6779);
        EXPECT(gbc.pc(), 0xa64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa64d), 0xe0);
        EXPECT(gbc.readMem(0xa64e), 0x1a);
        EXPECT(gbc.readMem(0xff1a), 0x4a);
        // E0 0234
        gbc.setState(0x78c0, 0x3928, 0xfe20, 0x6e38, 0x961b, 0xf3f7, 0x0, 0x0);
        gbc.writeMem(0x78c0, { 0xe0, 0x92 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3928);
        EXPECT(gbc.pc(), 0x78c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff92), 0xfe);
        // E0 0235
        gbc.setState(0xa9b9, 0x8d90, 0xa460, 0x9c03, 0xaeaa, 0x23a0, 0x1, 0x0);
        gbc.writeMem(0xa9b9, { 0xe0, 0x9d });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8d90);
        EXPECT(gbc.pc(), 0xa9bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b9), 0xe0);
        EXPECT(gbc.readMem(0xa9ba), 0x9d);
        EXPECT(gbc.readMem(0xff9d), 0xa4);
        // E0 0236
        gbc.setState(0x2d84, 0x6d7a, 0x9390, 0x7910, 0x2940, 0xfa54, 0x0, 0x1);
        gbc.writeMem(0x2d84, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6d7a);
        EXPECT(gbc.pc(), 0x2d86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0e), 0x93);
        // E0 0239
        gbc.setState(0x4c8e, 0x7c9d, 0xeea0, 0xc8ad, 0xc5db, 0x781a, 0x1, 0x0);
        gbc.writeMem(0x4c8e, { 0xe0, 0xf0 });
        gbc.writeMem(0xfff0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7c9d);
        EXPECT(gbc.pc(), 0x4c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff0), 0xee);
        // E0 023A
        gbc.setState(0x75f8, 0x8a68, 0xf0, 0x254d, 0xd4e6, 0x1b8c, 0x0, 0x1);
        gbc.writeMem(0x75f8, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8a68);
        EXPECT(gbc.pc(), 0x75fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffcb), 0x0);
        // E0 023B
        gbc.setState(0x1c56, 0xd860, 0xef30, 0x6ee3, 0x8f09, 0x37b1, 0x0, 0x1);
        gbc.writeMem(0x1c56, { 0xe0, 0x45 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd860);
        EXPECT(gbc.pc(), 0x1c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff45), 0xef);
        // E0 023C
        gbc.setState(0x5ef4, 0xbc2b, 0xf210, 0x23c4, 0x40dc, 0xe78f, 0x0, 0x1);
        gbc.writeMem(0x5ef4, { 0xe0, 0x89 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xbc2b);
        EXPECT(gbc.pc(), 0x5ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff89), 0xf2);
        // E0 023E
        gbc.setState(0xb91b, 0x7e10, 0xb510, 0xf9bc, 0xf340, 0x9aca, 0x1, 0x1);
        gbc.writeMem(0xb91b, { 0xe0, 0x17 });
        gbc.writeMem(0xff17, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7e10);
        EXPECT(gbc.pc(), 0xb91d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb91b), 0xe0);
        EXPECT(gbc.readMem(0xb91c), 0x17);
        EXPECT(gbc.readMem(0xff17), 0xb5);
        // E0 023F
        gbc.setState(0x6bfa, 0xa80e, 0x78c0, 0xbe56, 0x6307, 0x117a, 0x0, 0x1);
        gbc.writeMem(0x6bfa, { 0xe0, 0x6a });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa80e);
        EXPECT(gbc.pc(), 0x6bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6a), 0x78);
        // E0 0240
        gbc.setState(0xb9f4, 0x6a38, 0x84c0, 0x25c4, 0x6aa0, 0x9b4d, 0x0, 0x0);
        gbc.writeMem(0xb9f4, { 0xe0, 0x6b });
        gbc.writeMem(0xff6b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6a38);
        EXPECT(gbc.pc(), 0xb9f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f4), 0xe0);
        EXPECT(gbc.readMem(0xb9f5), 0x6b);
        EXPECT(gbc.readMem(0xff6b), 0x84);
        // E0 0241
        gbc.setState(0x30ae, 0xd8bc, 0x6e20, 0x8c17, 0xddf5, 0x1b10, 0x1, 0x1);
        gbc.writeMem(0x30ae, { 0xe0, 0xda });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd8bc);
        EXPECT(gbc.pc(), 0x30b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffda), 0x6e);
        // E0 0242
        gbc.setState(0x552c, 0x57f5, 0x1f90, 0xd155, 0x7637, 0x5852, 0x0, 0x1);
        gbc.writeMem(0x552c, { 0xe0, 0xe9 });
        gbc.writeMem(0xffe9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x57f5);
        EXPECT(gbc.pc(), 0x552e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe9), 0x1f);
        // E0 0243
        gbc.setState(0x411e, 0x1602, 0x6420, 0x1adc, 0x1928, 0x9006, 0x0, 0x1);
        gbc.writeMem(0x411e, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1602);
        EXPECT(gbc.pc(), 0x4120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff80), 0x64);
        // E0 0244
        gbc.setState(0xd700, 0xac12, 0x4b00, 0xdba1, 0xec4a, 0x1384, 0x1, 0x1);
        gbc.writeMem(0xd700, { 0xe0, 0xcf });
        gbc.writeMem(0xffcf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xac12);
        EXPECT(gbc.pc(), 0xd702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd700), 0xe0);
        EXPECT(gbc.readMem(0xd701), 0xcf);
        EXPECT(gbc.readMem(0xffcf), 0x4b);
        // E0 0245
        gbc.setState(0x4534, 0x1ec, 0xfb40, 0x2f4c, 0x3b88, 0xb0a2, 0x0, 0x0);
        gbc.writeMem(0x4534, { 0xe0, 0x5b });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1ec);
        EXPECT(gbc.pc(), 0x4536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5b), 0xfb);
        // E0 0246
        gbc.setState(0x5f26, 0xdb06, 0xa380, 0x79c, 0x9d81, 0x6fc, 0x1, 0x1);
        gbc.writeMem(0x5f26, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdb06);
        EXPECT(gbc.pc(), 0x5f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb2), 0xa3);
        // E0 0247
        gbc.setState(0xa25f, 0x7c93, 0x3cb0, 0xbe7, 0x379e, 0x89fb, 0x1, 0x1);
        gbc.writeMem(0xa25f, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7c93);
        EXPECT(gbc.pc(), 0xa261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa25f), 0xe0);
        EXPECT(gbc.readMem(0xa260), 0xcb);
        EXPECT(gbc.readMem(0xffcb), 0x3c);
        // E0 0248
        gbc.setState(0x9d10, 0xd871, 0x65a0, 0xff7f, 0x5f49, 0xce8d, 0x1, 0x1);
        gbc.writeMem(0x9d10, { 0xe0, 0x97 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd871);
        EXPECT(gbc.pc(), 0x9d12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d10), 0xe0);
        EXPECT(gbc.readMem(0x9d11), 0x97);
        EXPECT(gbc.readMem(0xff97), 0x65);
        // E0 0249
        gbc.setState(0xdd6d, 0x6759, 0xa5c0, 0xe17, 0x62b8, 0xe19b, 0x0, 0x0);
        gbc.writeMem(0xdd6d, { 0xe0, 0x5a });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6759);
        EXPECT(gbc.pc(), 0xdd6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd6d), 0xe0);
        EXPECT(gbc.readMem(0xdd6e), 0x5a);
        EXPECT(gbc.readMem(0xff5a), 0xa5);
        // E0 024A
        gbc.setState(0x6c34, 0x396b, 0x4ea0, 0xf960, 0x980b, 0xfd57, 0x1, 0x1);
        gbc.writeMem(0x6c34, { 0xe0, 0x6 });
        gbc.writeMem(0xff06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x396b);
        EXPECT(gbc.pc(), 0x6c36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff06), 0x4e);
        // E0 024B
        gbc.setState(0x4de6, 0xaa8c, 0x4d30, 0x9e2d, 0xabdc, 0x171b, 0x0, 0x0);
        gbc.writeMem(0x4de6, { 0xe0, 0x78 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xaa8c);
        EXPECT(gbc.pc(), 0x4de8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff78), 0x4d);
        // E0 024C
        gbc.setState(0x2145, 0x4e4f, 0xea00, 0x6f5d, 0x6b02, 0xf81c, 0x0, 0x1);
        gbc.writeMem(0x2145, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4e4f);
        EXPECT(gbc.pc(), 0x2147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff07), 0xea);
        // E0 024D
        gbc.setState(0x3cd5, 0x1b1, 0x5060, 0xba3e, 0x6fd8, 0xe341, 0x1, 0x1);
        gbc.writeMem(0x3cd5, { 0xe0, 0x75 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1b1);
        EXPECT(gbc.pc(), 0x3cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff75), 0x50);
        // E0 024E
        gbc.setState(0x6e1e, 0x3798, 0x2c40, 0x7caf, 0x3557, 0x3815, 0x1, 0x0);
        gbc.writeMem(0x6e1e, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3798);
        EXPECT(gbc.pc(), 0x6e20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc0), 0x2c);
        // E0 024F
        gbc.setState(0xc42a, 0x12e2, 0xd810, 0xf342, 0x50d8, 0x7cb4, 0x1, 0x1);
        gbc.writeMem(0xc42a, { 0xe0, 0x97 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x12e2);
        EXPECT(gbc.pc(), 0xc42c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc42a), 0xe0);
        EXPECT(gbc.readMem(0xc42b), 0x97);
        EXPECT(gbc.readMem(0xff97), 0xd8);
        // E0 0250
        gbc.setState(0xa841, 0xcb5, 0x1200, 0x8f99, 0x95e6, 0xca2b, 0x0, 0x0);
        gbc.writeMem(0xa841, { 0xe0, 0xba });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcb5);
        EXPECT(gbc.pc(), 0xa843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa841), 0xe0);
        EXPECT(gbc.readMem(0xa842), 0xba);
        EXPECT(gbc.readMem(0xffba), 0x12);
        // E0 0251
        gbc.setState(0xc4ae, 0x622, 0x1f30, 0x33de, 0xb733, 0xc720, 0x1, 0x0);
        gbc.writeMem(0xc4ae, { 0xe0, 0x1 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x622);
        EXPECT(gbc.pc(), 0xc4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ae), 0xe0);
        EXPECT(gbc.readMem(0xc4af), 0x1);
        EXPECT(gbc.readMem(0xff01), 0x1f);
        // E0 0252
        gbc.setState(0xb3c8, 0x8fdf, 0x82f0, 0x8305, 0x89a, 0x8ee, 0x0, 0x1);
        gbc.writeMem(0xb3c8, { 0xe0, 0x88 });
        gbc.writeMem(0xff88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8fdf);
        EXPECT(gbc.pc(), 0xb3ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c8), 0xe0);
        EXPECT(gbc.readMem(0xb3c9), 0x88);
        EXPECT(gbc.readMem(0xff88), 0x82);
        // E0 0253
        gbc.setState(0x8c4b, 0x82f, 0x50, 0x7112, 0xc0a1, 0x7cfa, 0x0, 0x0);
        gbc.writeMem(0x8c4b, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x82f);
        EXPECT(gbc.pc(), 0x8c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4b), 0xe0);
        EXPECT(gbc.readMem(0x8c4c), 0x80);
        EXPECT(gbc.readMem(0xff80), 0x0);
        // E0 0254
        gbc.setState(0x937c, 0x8347, 0xba00, 0xa941, 0xd541, 0x52b9, 0x0, 0x1);
        gbc.writeMem(0x937c, { 0xe0, 0xec });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8347);
        EXPECT(gbc.pc(), 0x937e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x937c), 0xe0);
        EXPECT(gbc.readMem(0x937d), 0xec);
        EXPECT(gbc.readMem(0xffec), 0xba);
        // E0 0255
        gbc.setState(0x339b, 0xe4a7, 0x5600, 0xa79b, 0x7401, 0xf345, 0x1, 0x0);
        gbc.writeMem(0x339b, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe4a7);
        EXPECT(gbc.pc(), 0x339d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc0), 0x56);
        // E0 0256
        gbc.setState(0xae1a, 0xbb11, 0x5e50, 0x9ee2, 0x4390, 0xb05, 0x0, 0x0);
        gbc.writeMem(0xae1a, { 0xe0, 0xaa });
        gbc.writeMem(0xffaa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbb11);
        EXPECT(gbc.pc(), 0xae1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1a), 0xe0);
        EXPECT(gbc.readMem(0xae1b), 0xaa);
        EXPECT(gbc.readMem(0xffaa), 0x5e);
        // E0 0258
        gbc.setState(0xae5, 0xc884, 0x48f0, 0x9b37, 0xca06, 0x137f, 0x1, 0x1);
        gbc.writeMem(0xae5, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc884);
        EXPECT(gbc.pc(), 0xae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff68), 0x48);
        // E0 0259
        gbc.setState(0x8a16, 0x40a1, 0x4ad0, 0x594e, 0x418e, 0x47d7, 0x1, 0x0);
        gbc.writeMem(0x8a16, { 0xe0, 0x78 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x40a1);
        EXPECT(gbc.pc(), 0x8a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a16), 0xe0);
        EXPECT(gbc.readMem(0x8a17), 0x78);
        EXPECT(gbc.readMem(0xff78), 0x4a);
        // E0 025B
        gbc.setState(0x371b, 0x9906, 0xe210, 0xf44e, 0xab79, 0xc51d, 0x1, 0x0);
        gbc.writeMem(0x371b, { 0xe0, 0xf5 });
        gbc.writeMem(0xfff5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9906);
        EXPECT(gbc.pc(), 0x371d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff5), 0xe2);
        // E0 025C
        gbc.setState(0x91f6, 0xe02a, 0xeb90, 0xeda, 0x49f5, 0xd199, 0x1, 0x1);
        gbc.writeMem(0x91f6, { 0xe0, 0x1c });
        gbc.writeMem(0xff1c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe02a);
        EXPECT(gbc.pc(), 0x91f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f6), 0xe0);
        EXPECT(gbc.readMem(0x91f7), 0x1c);
        EXPECT(gbc.readMem(0xff1c), 0xeb);
        // E0 025D
        gbc.setState(0xa239, 0x83e8, 0xfb0, 0xf7ef, 0xa30f, 0x1132, 0x0, 0x0);
        gbc.writeMem(0xa239, { 0xe0, 0xa6 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x83e8);
        EXPECT(gbc.pc(), 0xa23b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa239), 0xe0);
        EXPECT(gbc.readMem(0xa23a), 0xa6);
        EXPECT(gbc.readMem(0xffa6), 0xf);
        // E0 025E
        gbc.setState(0xc3cc, 0xbf4d, 0xd020, 0x866a, 0x9f16, 0xa2b4, 0x1, 0x0);
        gbc.writeMem(0xc3cc, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbf4d);
        EXPECT(gbc.pc(), 0xc3ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3cc), 0xe0);
        EXPECT(gbc.readMem(0xc3cd), 0x9e);
        EXPECT(gbc.readMem(0xff9e), 0xd0);
        // E0 025F
        gbc.setState(0xab70, 0xa053, 0x45e0, 0x93bd, 0x7933, 0xb67e, 0x1, 0x1);
        gbc.writeMem(0xab70, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa053);
        EXPECT(gbc.pc(), 0xab72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab70), 0xe0);
        EXPECT(gbc.readMem(0xab71), 0xb2);
        EXPECT(gbc.readMem(0xffb2), 0x45);
        // E0 0260
        gbc.setState(0xd38c, 0x361f, 0xa570, 0x3788, 0xf00e, 0x6b25, 0x1, 0x1);
        gbc.writeMem(0xd38c, { 0xe0, 0x39 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x361f);
        EXPECT(gbc.pc(), 0xd38e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd38c), 0xe0);
        EXPECT(gbc.readMem(0xd38d), 0x39);
        EXPECT(gbc.readMem(0xff39), 0xa5);
        // E0 0261
        gbc.setState(0xdf10, 0x862f, 0xced0, 0x1d75, 0xc87f, 0x3c21, 0x1, 0x1);
        gbc.writeMem(0xdf10, { 0xe0, 0xd6 });
        gbc.writeMem(0xffd6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x862f);
        EXPECT(gbc.pc(), 0xdf12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf10), 0xe0);
        EXPECT(gbc.readMem(0xdf11), 0xd6);
        EXPECT(gbc.readMem(0xffd6), 0xce);
        // E0 0262
        gbc.setState(0xae2f, 0xae8a, 0xdc70, 0x92d0, 0xc063, 0x5b30, 0x0, 0x1);
        gbc.writeMem(0xae2f, { 0xe0, 0x98 });
        gbc.writeMem(0xff98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xae8a);
        EXPECT(gbc.pc(), 0xae31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae2f), 0xe0);
        EXPECT(gbc.readMem(0xae30), 0x98);
        EXPECT(gbc.readMem(0xff98), 0xdc);
        // E0 0263
        gbc.setState(0xc720, 0x91b1, 0xc080, 0xee45, 0x5081, 0x759c, 0x0, 0x0);
        gbc.writeMem(0xc720, { 0xe0, 0x30 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x91b1);
        EXPECT(gbc.pc(), 0xc722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc720), 0xe0);
        EXPECT(gbc.readMem(0xc721), 0x30);
        EXPECT(gbc.readMem(0xff30), 0xc0);
        // E0 0264
        gbc.setState(0xc319, 0x2473, 0xab0, 0xfb0a, 0x914, 0xc4b1, 0x0, 0x0);
        gbc.writeMem(0xc319, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2473);
        EXPECT(gbc.pc(), 0xc31b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc319), 0xe0);
        EXPECT(gbc.readMem(0xc31a), 0x3f);
        EXPECT(gbc.readMem(0xff3f), 0xa);
        // E0 0265
        gbc.setState(0x4de8, 0xa6e4, 0x4a90, 0xb1a9, 0x21e1, 0x3251, 0x0, 0x1);
        gbc.writeMem(0x4de8, { 0xe0, 0xda });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa6e4);
        EXPECT(gbc.pc(), 0x4dea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffda), 0x4a);
        // E0 0266
        gbc.setState(0xc241, 0x81c5, 0x7ba0, 0xf78f, 0x2e7a, 0xe6d, 0x1, 0x1);
        gbc.writeMem(0xc241, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x81c5);
        EXPECT(gbc.pc(), 0xc243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc241), 0xe0);
        EXPECT(gbc.readMem(0xc242), 0xab);
        EXPECT(gbc.readMem(0xffab), 0x7b);
        // E0 0267
        gbc.setState(0xaed2, 0x5331, 0x6150, 0x1df2, 0xc0, 0xe293, 0x1, 0x1);
        gbc.writeMem(0xaed2, { 0xe0, 0x13 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5331);
        EXPECT(gbc.pc(), 0xaed4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed2), 0xe0);
        EXPECT(gbc.readMem(0xaed3), 0x13);
        EXPECT(gbc.readMem(0xff13), 0x61);
        // E0 0268
        gbc.setState(0x6ed1, 0xbfab, 0xa7f0, 0x67f1, 0x69db, 0x8e01, 0x0, 0x0);
        gbc.writeMem(0x6ed1, { 0xe0, 0x64 });
        gbc.writeMem(0xff64, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbfab);
        EXPECT(gbc.pc(), 0x6ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff64), 0xa7);
        // E0 0269
        gbc.setState(0x426a, 0xe071, 0xbdc0, 0x5a6d, 0x8601, 0xa180, 0x0, 0x1);
        gbc.writeMem(0x426a, { 0xe0, 0x46 });
        gbc.writeMem(0xff46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe071);
        EXPECT(gbc.pc(), 0x426c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff46), 0xbd);
        // E0 026A
        gbc.setState(0xdfbb, 0x5176, 0x8380, 0x406b, 0x7e4b, 0x5b59, 0x1, 0x0);
        gbc.writeMem(0xdfbb, { 0xe0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5176);
        EXPECT(gbc.pc(), 0xdfbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfbb), 0xe0);
        EXPECT(gbc.readMem(0xdfbc), 0xa5);
        EXPECT(gbc.readMem(0xffa5), 0x83);
        // E0 026C
        gbc.setState(0xa9f6, 0x2e69, 0x7120, 0x7f54, 0x44ae, 0x6887, 0x1, 0x1);
        gbc.writeMem(0xa9f6, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2e69);
        EXPECT(gbc.pc(), 0xa9f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f6), 0xe0);
        EXPECT(gbc.readMem(0xa9f7), 0x52);
        EXPECT(gbc.readMem(0xff52), 0x71);
        // E0 026D
        gbc.setState(0xbbf2, 0xea22, 0xef40, 0x53e1, 0xf49b, 0x7f59, 0x0, 0x1);
        gbc.writeMem(0xbbf2, { 0xe0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xea22);
        EXPECT(gbc.pc(), 0xbbf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf2), 0xe0);
        EXPECT(gbc.readMem(0xbbf3), 0xc9);
        EXPECT(gbc.readMem(0xffc9), 0xef);
        // E0 026E
        gbc.setState(0x54d, 0x3c2c, 0x2430, 0xc173, 0xc30, 0xa763, 0x1, 0x1);
        gbc.writeMem(0x54d, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3c2c);
        EXPECT(gbc.pc(), 0x54f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff68), 0x24);
        // E0 026F
        gbc.setState(0xe960, 0xe08b, 0xf140, 0x1fe7, 0x25e7, 0xa78f, 0x0, 0x1);
        gbc.writeMem(0xe960, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe08b);
        EXPECT(gbc.pc(), 0xe962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe960), 0xe0);
        EXPECT(gbc.readMem(0xe961), 0x9a);
        EXPECT(gbc.readMem(0xff9a), 0xf1);
        // E0 0271
        gbc.setState(0x5f50, 0x9b4a, 0xa060, 0x357d, 0xadf3, 0xaab2, 0x0, 0x1);
        gbc.writeMem(0x5f50, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9b4a);
        EXPECT(gbc.pc(), 0x5f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5e), 0xa0);
        // E0 0272
        gbc.setState(0x1b94, 0xe5a8, 0xfcf0, 0x7baa, 0xa0c7, 0xa65f, 0x0, 0x1);
        gbc.writeMem(0x1b94, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe5a8);
        EXPECT(gbc.pc(), 0x1b96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2a), 0xfc);
        // E0 0273
        gbc.setState(0xd86d, 0x8432, 0x7c60, 0x8c3, 0xe718, 0x6572, 0x0, 0x1);
        gbc.writeMem(0xd86d, { 0xe0, 0xfb });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8432);
        EXPECT(gbc.pc(), 0xd86f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd86d), 0xe0);
        EXPECT(gbc.readMem(0xd86e), 0xfb);
        EXPECT(gbc.readMem(0xfffb), 0x7c);
        // E0 0274
        gbc.setState(0x145f, 0xab4f, 0xe310, 0x50e0, 0x5601, 0x9dbd, 0x0, 0x0);
        gbc.writeMem(0x145f, { 0xe0, 0x34 });
        gbc.writeMem(0xff34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xab4f);
        EXPECT(gbc.pc(), 0x1461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff34), 0xe3);
        // E0 0275
        gbc.setState(0x8505, 0x5533, 0x4ba0, 0x2cf0, 0x6b70, 0xbc40, 0x1, 0x1);
        gbc.writeMem(0x8505, { 0xe0, 0xbe });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5533);
        EXPECT(gbc.pc(), 0x8507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8505), 0xe0);
        EXPECT(gbc.readMem(0x8506), 0xbe);
        EXPECT(gbc.readMem(0xffbe), 0x4b);
        // E0 0276
        gbc.setState(0xbfd, 0xbf5b, 0x1ea0, 0xffdd, 0xd29e, 0x194f, 0x1, 0x0);
        gbc.writeMem(0xbfd, { 0xe0, 0xd3 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xbf5b);
        EXPECT(gbc.pc(), 0xbff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd3), 0x1e);
        // E0 0277
        gbc.setState(0x5962, 0xca2f, 0x3800, 0xa832, 0xe3df, 0xba5a, 0x0, 0x1);
        gbc.writeMem(0x5962, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xca2f);
        EXPECT(gbc.pc(), 0x5964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9f), 0x38);
        // E0 0278
        gbc.setState(0x9c50, 0xa92, 0xbe30, 0x19bf, 0xbd83, 0x1099, 0x1, 0x0);
        gbc.writeMem(0x9c50, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa92);
        EXPECT(gbc.pc(), 0x9c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c50), 0xe0);
        EXPECT(gbc.readMem(0x9c51), 0x51);
        EXPECT(gbc.readMem(0xff51), 0xbe);
        // E0 027A
        gbc.setState(0xd37f, 0x2680, 0xb500, 0x2c2e, 0x603b, 0x211f, 0x0, 0x1);
        gbc.writeMem(0xd37f, { 0xe0, 0xa9 });
        gbc.writeMem(0xffa9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2680);
        EXPECT(gbc.pc(), 0xd381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd37f), 0xe0);
        EXPECT(gbc.readMem(0xd380), 0xa9);
        EXPECT(gbc.readMem(0xffa9), 0xb5);
        // E0 027C
        gbc.setState(0xe46b, 0xd0af, 0xc290, 0x8879, 0x659b, 0x5c49, 0x1, 0x1);
        gbc.writeMem(0xe46b, { 0xe0, 0x71 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd0af);
        EXPECT(gbc.pc(), 0xe46d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe46b), 0xe0);
        EXPECT(gbc.readMem(0xe46c), 0x71);
        EXPECT(gbc.readMem(0xff71), 0xc2);
        // E0 027D
        gbc.setState(0xd1ee, 0x9abe, 0x6930, 0xd771, 0x40d0, 0x6d39, 0x0, 0x0);
        gbc.writeMem(0xd1ee, { 0xe0, 0x86 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9abe);
        EXPECT(gbc.pc(), 0xd1f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ee), 0xe0);
        EXPECT(gbc.readMem(0xd1ef), 0x86);
        EXPECT(gbc.readMem(0xff86), 0x69);
        // E0 027E
        gbc.setState(0xa8fe, 0xa94c, 0x39f0, 0x6d32, 0x2c69, 0x4d5d, 0x1, 0x0);
        gbc.writeMem(0xa8fe, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa94c);
        EXPECT(gbc.pc(), 0xa900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8fe), 0xe0);
        EXPECT(gbc.readMem(0xa8ff), 0x68);
        EXPECT(gbc.readMem(0xff68), 0x39);
        // E0 027F
        gbc.setState(0x28fe, 0x1c4e, 0x7650, 0xc51e, 0xd2dd, 0xfcc, 0x1, 0x0);
        gbc.writeMem(0x28fe, { 0xe0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1c4e);
        EXPECT(gbc.pc(), 0x2900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd7), 0x76);
        // E0 0280
        gbc.setState(0x2e45, 0xc564, 0xa0e0, 0xa7f9, 0xde42, 0xe102, 0x1, 0x0);
        gbc.writeMem(0x2e45, { 0xe0, 0x4a });
        gbc.writeMem(0xff4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc564);
        EXPECT(gbc.pc(), 0x2e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4a), 0xa0);
        // E0 0281
        gbc.setState(0x743e, 0x15c4, 0x5620, 0x61c9, 0x1112, 0xe703, 0x0, 0x0);
        gbc.writeMem(0x743e, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x15c4);
        EXPECT(gbc.pc(), 0x7440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa2), 0x56);
        // E0 0282
        gbc.setState(0x7ae9, 0x1f35, 0xb410, 0x2b64, 0x9fe0, 0x24c2, 0x1, 0x1);
        gbc.writeMem(0x7ae9, { 0xe0, 0x6f });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1f35);
        EXPECT(gbc.pc(), 0x7aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff6f), 0xb4);
        // E0 0283
        gbc.setState(0x81e1, 0x4f2b, 0x91b0, 0x88ad, 0xa6b5, 0xe598, 0x0, 0x0);
        gbc.writeMem(0x81e1, { 0xe0, 0xa3 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4f2b);
        EXPECT(gbc.pc(), 0x81e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e1), 0xe0);
        EXPECT(gbc.readMem(0x81e2), 0xa3);
        EXPECT(gbc.readMem(0xffa3), 0x91);
        // E0 0284
        gbc.setState(0xc23f, 0x53e6, 0x2810, 0x336b, 0x26cd, 0xdce7, 0x1, 0x0);
        gbc.writeMem(0xc23f, { 0xe0, 0x8d });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x53e6);
        EXPECT(gbc.pc(), 0xc241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc23f), 0xe0);
        EXPECT(gbc.readMem(0xc240), 0x8d);
        EXPECT(gbc.readMem(0xff8d), 0x28);
        // E0 0285
        gbc.setState(0x1b03, 0x3eb6, 0x38d0, 0xf37a, 0x9b5, 0x797d, 0x0, 0x1);
        gbc.writeMem(0x1b03, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3eb6);
        EXPECT(gbc.pc(), 0x1b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2f), 0x38);
        // E0 0286
        gbc.setState(0x897f, 0x7fd5, 0x7580, 0x3697, 0x59ac, 0x29de, 0x0, 0x0);
        gbc.writeMem(0x897f, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7fd5);
        EXPECT(gbc.pc(), 0x8981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x897f), 0xe0);
        EXPECT(gbc.readMem(0x8980), 0x8a);
        EXPECT(gbc.readMem(0xff8a), 0x75);
        // E0 0287
        gbc.setState(0xc555, 0xd7e6, 0x7910, 0xe402, 0xe8e7, 0x7f34, 0x0, 0x0);
        gbc.writeMem(0xc555, { 0xe0, 0xe8 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd7e6);
        EXPECT(gbc.pc(), 0xc557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc555), 0xe0);
        EXPECT(gbc.readMem(0xc556), 0xe8);
        EXPECT(gbc.readMem(0xffe8), 0x79);
        // E0 0288
        gbc.setState(0x9a9d, 0x3370, 0x6370, 0xba2c, 0x69c7, 0xaf9b, 0x0, 0x1);
        gbc.writeMem(0x9a9d, { 0xe0, 0x73 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3370);
        EXPECT(gbc.pc(), 0x9a9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a9d), 0xe0);
        EXPECT(gbc.readMem(0x9a9e), 0x73);
        EXPECT(gbc.readMem(0xff73), 0x63);
        // E0 0289
        gbc.setState(0x19c2, 0x490d, 0xac00, 0x3997, 0xb751, 0x62c7, 0x0, 0x1);
        gbc.writeMem(0x19c2, { 0xe0, 0xde });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x490d);
        EXPECT(gbc.pc(), 0x19c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffde), 0xac);
        // E0 028B
        gbc.setState(0xeb7, 0xadfd, 0x7320, 0x3369, 0x80a1, 0xd8d3, 0x1, 0x0);
        gbc.writeMem(0xeb7, { 0xe0, 0x3a });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xadfd);
        EXPECT(gbc.pc(), 0xeb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3a), 0x73);
        // E0 028C
        gbc.setState(0xebf0, 0xa925, 0x4e70, 0x6aaf, 0xa6a5, 0x303e, 0x0, 0x1);
        gbc.writeMem(0xebf0, { 0xe0, 0xc });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa925);
        EXPECT(gbc.pc(), 0xebf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf0), 0xe0);
        EXPECT(gbc.readMem(0xebf1), 0xc);
        EXPECT(gbc.readMem(0xff0c), 0x4e);
        // E0 028D
        gbc.setState(0x5689, 0x82ed, 0x3a90, 0x675a, 0xfabb, 0xf8b2, 0x0, 0x0);
        gbc.writeMem(0x5689, { 0xe0, 0xb4 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x82ed);
        EXPECT(gbc.pc(), 0x568b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb4), 0x3a);
        // E0 028E
        gbc.setState(0x63c0, 0xc2a7, 0x92a0, 0x263b, 0x4c29, 0xe830, 0x0, 0x1);
        gbc.writeMem(0x63c0, { 0xe0, 0x13 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc2a7);
        EXPECT(gbc.pc(), 0x63c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff13), 0x92);
        // E0 028F
        gbc.setState(0x9c0f, 0xf1af, 0xe4e0, 0x4b92, 0x58ec, 0x1cca, 0x1, 0x0);
        gbc.writeMem(0x9c0f, { 0xe0, 0x8b });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf1af);
        EXPECT(gbc.pc(), 0x9c11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0f), 0xe0);
        EXPECT(gbc.readMem(0x9c10), 0x8b);
        EXPECT(gbc.readMem(0xff8b), 0xe4);
        // E0 0290
        gbc.setState(0xeef1, 0xd212, 0x3e70, 0x8108, 0x3a58, 0x770c, 0x1, 0x1);
        gbc.writeMem(0xeef1, { 0xe0, 0x93 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd212);
        EXPECT(gbc.pc(), 0xeef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef1), 0xe0);
        EXPECT(gbc.readMem(0xeef2), 0x93);
        EXPECT(gbc.readMem(0xff93), 0x3e);
        // E0 0291
        gbc.setState(0x1a1b, 0x1815, 0x7b00, 0x46, 0x8e0f, 0x9683, 0x1, 0x0);
        gbc.writeMem(0x1a1b, { 0xe0, 0x40 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1815);
        EXPECT(gbc.pc(), 0x1a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff40), 0x7b);
        // E0 0292
        gbc.setState(0x413a, 0xb41c, 0x6970, 0x4b65, 0xc043, 0x6bd5, 0x1, 0x0);
        gbc.writeMem(0x413a, { 0xe0, 0x8 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb41c);
        EXPECT(gbc.pc(), 0x413c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff08), 0x69);
        // E0 0293
        gbc.setState(0x6f00, 0xc52b, 0x36b0, 0xb783, 0xce62, 0x367b, 0x0, 0x0);
        gbc.writeMem(0x6f00, { 0xe0, 0xfc });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc52b);
        EXPECT(gbc.pc(), 0x6f02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfffc), 0x36);
        // E0 0295
        gbc.setState(0x1860, 0xd8da, 0x2410, 0x4586, 0x8666, 0xc494, 0x1, 0x0);
        gbc.writeMem(0x1860, { 0xe0, 0x4a });
        gbc.writeMem(0xff4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd8da);
        EXPECT(gbc.pc(), 0x1862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4a), 0x24);
        // E0 0296
        gbc.setState(0x9c97, 0xdd0d, 0x8480, 0x51b2, 0xd985, 0x56f2, 0x0, 0x1);
        gbc.writeMem(0x9c97, { 0xe0, 0xa1 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xdd0d);
        EXPECT(gbc.pc(), 0x9c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c97), 0xe0);
        EXPECT(gbc.readMem(0x9c98), 0xa1);
        EXPECT(gbc.readMem(0xffa1), 0x84);
        // E0 0297
        gbc.setState(0x1acb, 0xd971, 0xabb0, 0xd937, 0xa288, 0xaa78, 0x0, 0x1);
        gbc.writeMem(0x1acb, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd971);
        EXPECT(gbc.pc(), 0x1acd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff35), 0xab);
        // E0 0298
        gbc.setState(0xc17b, 0x2664, 0xde70, 0x8df3, 0xf788, 0x153c, 0x1, 0x1);
        gbc.writeMem(0xc17b, { 0xe0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2664);
        EXPECT(gbc.pc(), 0xc17d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc17b), 0xe0);
        EXPECT(gbc.readMem(0xc17c), 0xe6);
        EXPECT(gbc.readMem(0xffe6), 0xde);
        // E0 0299
        gbc.setState(0x9946, 0x2857, 0xa830, 0xacc0, 0xef30, 0xb04e, 0x0, 0x1);
        gbc.writeMem(0x9946, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2857);
        EXPECT(gbc.pc(), 0x9948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9946), 0xe0);
        EXPECT(gbc.readMem(0x9947), 0xb8);
        EXPECT(gbc.readMem(0xffb8), 0xa8);
        // E0 029A
        gbc.setState(0xa0a8, 0xe7c9, 0x8160, 0x10ef, 0xdaa8, 0x78ca, 0x1, 0x1);
        gbc.writeMem(0xa0a8, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe7c9);
        EXPECT(gbc.pc(), 0xa0aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a8), 0xe0);
        EXPECT(gbc.readMem(0xa0a9), 0xea);
        EXPECT(gbc.readMem(0xffea), 0x81);
        // E0 029B
        gbc.setState(0x3a4a, 0x3da9, 0xa7e0, 0x324b, 0x8c08, 0x8948, 0x0, 0x1);
        gbc.writeMem(0x3a4a, { 0xe0, 0x4 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3da9);
        EXPECT(gbc.pc(), 0x3a4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff04), 0xa7);
        // E0 029D
        gbc.setState(0xa38d, 0xc850, 0x59d0, 0xa0bf, 0xd393, 0xd31a, 0x1, 0x0);
        gbc.writeMem(0xa38d, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc850);
        EXPECT(gbc.pc(), 0xa38f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa38d), 0xe0);
        EXPECT(gbc.readMem(0xa38e), 0x27);
        EXPECT(gbc.readMem(0xff27), 0x59);
        // E0 029E
        gbc.setState(0xefbe, 0x9cfd, 0xc7f0, 0x8a51, 0x846d, 0xdd01, 0x1, 0x1);
        gbc.writeMem(0xefbe, { 0xe0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9cfd);
        EXPECT(gbc.pc(), 0xefc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefbe), 0xe0);
        EXPECT(gbc.readMem(0xefbf), 0xa5);
        EXPECT(gbc.readMem(0xffa5), 0xc7);
        // E0 029F
        gbc.setState(0x88b8, 0x9ed1, 0xd100, 0x7e6b, 0xc4dc, 0xb347, 0x0, 0x0);
        gbc.writeMem(0x88b8, { 0xe0, 0x69 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9ed1);
        EXPECT(gbc.pc(), 0x88ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b8), 0xe0);
        EXPECT(gbc.readMem(0x88b9), 0x69);
        EXPECT(gbc.readMem(0xff69), 0xd1);
        // E0 02A0
        gbc.setState(0xd136, 0x85ab, 0x4430, 0xeae5, 0xb7b, 0x51b8, 0x1, 0x1);
        gbc.writeMem(0xd136, { 0xe0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x85ab);
        EXPECT(gbc.pc(), 0xd138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd136), 0xe0);
        EXPECT(gbc.readMem(0xd137), 0xc9);
        EXPECT(gbc.readMem(0xffc9), 0x44);
        // E0 02A1
        gbc.setState(0x597a, 0xe382, 0x4de0, 0x56ae, 0xd566, 0x39b6, 0x1, 0x0);
        gbc.writeMem(0x597a, { 0xe0, 0x55 });
        gbc.writeMem(0xff55, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe382);
        EXPECT(gbc.pc(), 0x597c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff55), 0x4d);
        // E0 02A2
        gbc.setState(0xb106, 0xec01, 0x7a50, 0x8aa3, 0x8e83, 0x6fa3, 0x1, 0x1);
        gbc.writeMem(0xb106, { 0xe0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xec01);
        EXPECT(gbc.pc(), 0xb108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb106), 0xe0);
        EXPECT(gbc.readMem(0xb107), 0xa5);
        EXPECT(gbc.readMem(0xffa5), 0x7a);
        // E0 02A3
        gbc.setState(0xa757, 0x8b35, 0x4040, 0x6cdb, 0x2f5, 0x1905, 0x0, 0x0);
        gbc.writeMem(0xa757, { 0xe0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8b35);
        EXPECT(gbc.pc(), 0xa759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa757), 0xe0);
        EXPECT(gbc.readMem(0xa758), 0xf9);
        EXPECT(gbc.readMem(0xfff9), 0x40);
        // E0 02A4
        gbc.setState(0xdcd4, 0xdadf, 0x8590, 0xacfd, 0xff77, 0x66b8, 0x0, 0x1);
        gbc.writeMem(0xdcd4, { 0xe0, 0x37 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xdadf);
        EXPECT(gbc.pc(), 0xdcd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd4), 0xe0);
        EXPECT(gbc.readMem(0xdcd5), 0x37);
        EXPECT(gbc.readMem(0xff37), 0x85);
        // E0 02A5
        gbc.setState(0xca83, 0xf91b, 0x2dc0, 0xfd54, 0xd41a, 0xaeac, 0x0, 0x1);
        gbc.writeMem(0xca83, { 0xe0, 0x22 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf91b);
        EXPECT(gbc.pc(), 0xca85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca83), 0xe0);
        EXPECT(gbc.readMem(0xca84), 0x22);
        EXPECT(gbc.readMem(0xff22), 0x2d);
        // E0 02A7
        gbc.setState(0x55ef, 0xa94f, 0x630, 0x12a2, 0x23d9, 0xb557, 0x1, 0x1);
        gbc.writeMem(0x55ef, { 0xe0, 0x47 });
        gbc.writeMem(0xff47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa94f);
        EXPECT(gbc.pc(), 0x55f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff47), 0x6);
        // E0 02A8
        gbc.setState(0x7364, 0xe273, 0xa2f0, 0x133d, 0x73a, 0x8c88, 0x1, 0x0);
        gbc.writeMem(0x7364, { 0xe0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe273);
        EXPECT(gbc.pc(), 0x7366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb5), 0xa2);
        // E0 02A9
        gbc.setState(0xc2fb, 0x390f, 0x7680, 0x54f9, 0x3647, 0x474f, 0x0, 0x0);
        gbc.writeMem(0xc2fb, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x390f);
        EXPECT(gbc.pc(), 0xc2fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2fb), 0xe0);
        EXPECT(gbc.readMem(0xc2fc), 0xb2);
        EXPECT(gbc.readMem(0xffb2), 0x76);
        // E0 02AA
        gbc.setState(0xcd30, 0x6da, 0x5430, 0xc961, 0x4718, 0x5410, 0x1, 0x1);
        gbc.writeMem(0xcd30, { 0xe0, 0x32 });
        gbc.writeMem(0xff32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6da);
        EXPECT(gbc.pc(), 0xcd32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd30), 0xe0);
        EXPECT(gbc.readMem(0xcd31), 0x32);
        EXPECT(gbc.readMem(0xff32), 0x54);
        // E0 02AC
        gbc.setState(0xcbe, 0x3db, 0x71a0, 0x4cb0, 0x76f5, 0xa8bb, 0x0, 0x1);
        gbc.writeMem(0xcbe, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3db);
        EXPECT(gbc.pc(), 0xcc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff83), 0x71);
        // E0 02AD
        gbc.setState(0xcf0c, 0x3558, 0x9d10, 0xec8d, 0x69cc, 0x516e, 0x0, 0x1);
        gbc.writeMem(0xcf0c, { 0xe0, 0x63 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3558);
        EXPECT(gbc.pc(), 0xcf0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf0c), 0xe0);
        EXPECT(gbc.readMem(0xcf0d), 0x63);
        EXPECT(gbc.readMem(0xff63), 0x9d);
        // E0 02AE
        gbc.setState(0x8a1b, 0xc497, 0xb1f0, 0xa40d, 0x421b, 0xb81f, 0x1, 0x0);
        gbc.writeMem(0x8a1b, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc497);
        EXPECT(gbc.pc(), 0x8a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1b), 0xe0);
        EXPECT(gbc.readMem(0x8a1c), 0xcb);
        EXPECT(gbc.readMem(0xffcb), 0xb1);
        // E0 02AF
        gbc.setState(0xa1b2, 0x3cd4, 0x4c60, 0xa8a8, 0x6e8c, 0x6722, 0x0, 0x1);
        gbc.writeMem(0xa1b2, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3cd4);
        EXPECT(gbc.pc(), 0xa1b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b2), 0xe0);
        EXPECT(gbc.readMem(0xa1b3), 0x8a);
        EXPECT(gbc.readMem(0xff8a), 0x4c);
        // E0 02B0
        gbc.setState(0x9626, 0x69fe, 0xd3c0, 0x2542, 0xa6e5, 0x4d90, 0x0, 0x0);
        gbc.writeMem(0x9626, { 0xe0, 0x7d });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x69fe);
        EXPECT(gbc.pc(), 0x9628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9626), 0xe0);
        EXPECT(gbc.readMem(0x9627), 0x7d);
        EXPECT(gbc.readMem(0xff7d), 0xd3);
        // E0 02B1
        gbc.setState(0xa789, 0x2454, 0x38c0, 0xc132, 0x6c30, 0xcbf3, 0x1, 0x1);
        gbc.writeMem(0xa789, { 0xe0, 0x3e });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2454);
        EXPECT(gbc.pc(), 0xa78b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa789), 0xe0);
        EXPECT(gbc.readMem(0xa78a), 0x3e);
        EXPECT(gbc.readMem(0xff3e), 0x38);
        // E0 02B2
        gbc.setState(0x1f91, 0x5f22, 0x4ce0, 0x992b, 0xda96, 0xed2a, 0x1, 0x0);
        gbc.writeMem(0x1f91, { 0xe0, 0xd9 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5f22);
        EXPECT(gbc.pc(), 0x1f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd9), 0x4c);
        // E0 02B3
        gbc.setState(0x4797, 0xc7bd, 0xd7b0, 0x3aeb, 0xca5f, 0x7e38, 0x1, 0x1);
        gbc.writeMem(0x4797, { 0xe0, 0x81 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc7bd);
        EXPECT(gbc.pc(), 0x4799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff81), 0xd7);
        // E0 02B4
        gbc.setState(0x63d5, 0xa284, 0xd900, 0x5362, 0x6a4b, 0x468c, 0x1, 0x0);
        gbc.writeMem(0x63d5, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa284);
        EXPECT(gbc.pc(), 0x63d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3f), 0xd9);
        // E0 02B5
        gbc.setState(0x1d91, 0x92e1, 0xa2a0, 0x5123, 0x208, 0xe93c, 0x1, 0x1);
        gbc.writeMem(0x1d91, { 0xe0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x92e1);
        EXPECT(gbc.pc(), 0x1d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb5), 0xa2);
        // E0 02B6
        gbc.setState(0xacb6, 0x6978, 0xfd80, 0x4bce, 0x668e, 0x27a4, 0x1, 0x1);
        gbc.writeMem(0xacb6, { 0xe0, 0x77 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6978);
        EXPECT(gbc.pc(), 0xacb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacb6), 0xe0);
        EXPECT(gbc.readMem(0xacb7), 0x77);
        EXPECT(gbc.readMem(0xff77), 0xfd);
        // E0 02B7
        gbc.setState(0x62fd, 0x880c, 0xab70, 0x5189, 0x5c1d, 0x6d12, 0x0, 0x0);
        gbc.writeMem(0x62fd, { 0xe0, 0x4f });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x880c);
        EXPECT(gbc.pc(), 0x62ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4f), 0xab);
        // E0 02B8
        gbc.setState(0x6556, 0x1d5c, 0x12f0, 0x8e20, 0x256c, 0xb921, 0x0, 0x1);
        gbc.writeMem(0x6556, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1d5c);
        EXPECT(gbc.pc(), 0x6558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd0), 0x12);
        // E0 02B9
        gbc.setState(0x6eb7, 0xf2c0, 0x26d0, 0x1571, 0x74b0, 0xd6f8, 0x1, 0x0);
        gbc.writeMem(0x6eb7, { 0xe0, 0xeb });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf2c0);
        EXPECT(gbc.pc(), 0x6eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffeb), 0x26);
        // E0 02BA
        gbc.setState(0xde6c, 0xfc61, 0xe440, 0x5f31, 0x1cc6, 0x7d3d, 0x0, 0x1);
        gbc.writeMem(0xde6c, { 0xe0, 0xdb });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfc61);
        EXPECT(gbc.pc(), 0xde6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde6c), 0xe0);
        EXPECT(gbc.readMem(0xde6d), 0xdb);
        EXPECT(gbc.readMem(0xffdb), 0xe4);
        // E0 02BB
        gbc.setState(0x711, 0x793c, 0x92b0, 0x5a0d, 0x5bfc, 0xb7b9, 0x0, 0x1);
        gbc.writeMem(0x711, { 0xe0, 0x4e });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x793c);
        EXPECT(gbc.pc(), 0x713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4e), 0x92);
        // E0 02BC
        gbc.setState(0xd584, 0xf747, 0x3a0, 0xd587, 0xc1fc, 0x81b4, 0x1, 0x1);
        gbc.writeMem(0xd584, { 0xe0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf747);
        EXPECT(gbc.pc(), 0xd586);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd584), 0xe0);
        EXPECT(gbc.readMem(0xd585), 0xb5);
        EXPECT(gbc.readMem(0xffb5), 0x3);
        // E0 02BD
        gbc.setState(0xe9f9, 0xa7bc, 0x9b80, 0xa01a, 0x232a, 0x9f59, 0x0, 0x1);
        gbc.writeMem(0xe9f9, { 0xe0, 0xe0 });
        gbc.writeMem(0xffe0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa7bc);
        EXPECT(gbc.pc(), 0xe9fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9f9), 0xe0);
        EXPECT(gbc.readMem(0xe9fa), 0xe0);
        EXPECT(gbc.readMem(0xffe0), 0x9b);
        // E0 02BE
        gbc.setState(0x1bef, 0x6f36, 0x4680, 0xe90f, 0x36cd, 0xdd63, 0x1, 0x1);
        gbc.writeMem(0x1bef, { 0xe0, 0x91 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6f36);
        EXPECT(gbc.pc(), 0x1bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff91), 0x46);
        // E0 02BF
        gbc.setState(0xb578, 0x368f, 0x2250, 0x58d8, 0xceb9, 0xc9c, 0x0, 0x1);
        gbc.writeMem(0xb578, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x368f);
        EXPECT(gbc.pc(), 0xb57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb578), 0xe0);
        EXPECT(gbc.readMem(0xb579), 0x76);
        EXPECT(gbc.readMem(0xff76), 0x22);
        // E0 02C0
        gbc.setState(0x1a05, 0x8a95, 0x5950, 0x37b3, 0xfca5, 0x9e48, 0x1, 0x1);
        gbc.writeMem(0x1a05, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8a95);
        EXPECT(gbc.pc(), 0x1a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff3f), 0x59);
        // E0 02C1
        gbc.setState(0x4114, 0xaae8, 0xde10, 0x8b3d, 0xcf6e, 0xe475, 0x1, 0x1);
        gbc.writeMem(0x4114, { 0xe0, 0xfa });
        gbc.writeMem(0xfffa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xaae8);
        EXPECT(gbc.pc(), 0x4116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfffa), 0xde);
        // E0 02C2
        gbc.setState(0x36e8, 0x66d1, 0x92d0, 0x8578, 0x51d2, 0x1bf1, 0x1, 0x1);
        gbc.writeMem(0x36e8, { 0xe0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x66d1);
        EXPECT(gbc.pc(), 0x36ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff9), 0x92);
        // E0 02C3
        gbc.setState(0x950e, 0x71f6, 0x3960, 0x2bb2, 0xcc5, 0x4279, 0x0, 0x0);
        gbc.writeMem(0x950e, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x71f6);
        EXPECT(gbc.pc(), 0x9510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950e), 0xe0);
        EXPECT(gbc.readMem(0x950f), 0xca);
        EXPECT(gbc.readMem(0xffca), 0x39);
        // E0 02C4
        gbc.setState(0x558b, 0x8734, 0xbae0, 0x9012, 0x9a53, 0xd2e8, 0x1, 0x1);
        gbc.writeMem(0x558b, { 0xe0, 0x4f });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8734);
        EXPECT(gbc.pc(), 0x558d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4f), 0xba);
        // E0 02C6
        gbc.setState(0x820d, 0xa14a, 0xb720, 0x5a9e, 0x938, 0xeca6, 0x1, 0x1);
        gbc.writeMem(0x820d, { 0xe0, 0xfc });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa14a);
        EXPECT(gbc.pc(), 0x820f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x820d), 0xe0);
        EXPECT(gbc.readMem(0x820e), 0xfc);
        EXPECT(gbc.readMem(0xfffc), 0xb7);
        // E0 02C7
        gbc.setState(0x51ca, 0xc87b, 0x2a70, 0xe1e4, 0x7e2e, 0x2f68, 0x0, 0x0);
        gbc.writeMem(0x51ca, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc87b);
        EXPECT(gbc.pc(), 0x51cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff31), 0x2a);
        // E0 02C8
        gbc.setState(0xdf40, 0x6ca8, 0xcc20, 0x60a, 0xddf0, 0xaeb8, 0x1, 0x0);
        gbc.writeMem(0xdf40, { 0xe0, 0x14 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6ca8);
        EXPECT(gbc.pc(), 0xdf42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf40), 0xe0);
        EXPECT(gbc.readMem(0xdf41), 0x14);
        EXPECT(gbc.readMem(0xff14), 0xcc);
        // E0 02C9
        gbc.setState(0xa16e, 0xccd2, 0x70f0, 0x110b, 0xce2d, 0x2f8a, 0x0, 0x0);
        gbc.writeMem(0xa16e, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xccd2);
        EXPECT(gbc.pc(), 0xa170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa16e), 0xe0);
        EXPECT(gbc.readMem(0xa16f), 0x7);
        EXPECT(gbc.readMem(0xff07), 0x70);
        // E0 02CA
        gbc.setState(0x12d2, 0x8dc7, 0xa930, 0x5117, 0xffcf, 0x1e5b, 0x0, 0x0);
        gbc.writeMem(0x12d2, { 0xe0, 0x89 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8dc7);
        EXPECT(gbc.pc(), 0x12d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff89), 0xa9);
        // E0 02CB
        gbc.setState(0xc363, 0x9e7e, 0xff70, 0x4630, 0x184f, 0x67d7, 0x1, 0x0);
        gbc.writeMem(0xc363, { 0xe0, 0x7c });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9e7e);
        EXPECT(gbc.pc(), 0xc365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc363), 0xe0);
        EXPECT(gbc.readMem(0xc364), 0x7c);
        EXPECT(gbc.readMem(0xff7c), 0xff);
        // E0 02CC
        gbc.setState(0x3e4, 0xf7d1, 0xa080, 0x9f4a, 0x213e, 0x5c26, 0x1, 0x1);
        gbc.writeMem(0x3e4, { 0xe0, 0x7d });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf7d1);
        EXPECT(gbc.pc(), 0x3e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff7d), 0xa0);
        // E0 02CD
        gbc.setState(0x4a02, 0x970d, 0xdc70, 0xe490, 0x1275, 0x74b2, 0x0, 0x1);
        gbc.writeMem(0x4a02, { 0xe0, 0x5b });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x970d);
        EXPECT(gbc.pc(), 0x4a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5b), 0xdc);
        // E0 02CE
        gbc.setState(0x2b05, 0xdd93, 0x4620, 0x7590, 0xce5d, 0x2a4f, 0x1, 0x0);
        gbc.writeMem(0x2b05, { 0xe0, 0x1 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdd93);
        EXPECT(gbc.pc(), 0x2b07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff01), 0x46);
        // E0 02CF
        gbc.setState(0x8a2d, 0xae4c, 0x5550, 0x906b, 0xa6e1, 0xda6c, 0x0, 0x0);
        gbc.writeMem(0x8a2d, { 0xe0, 0xd3 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xae4c);
        EXPECT(gbc.pc(), 0x8a2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2d), 0xe0);
        EXPECT(gbc.readMem(0x8a2e), 0xd3);
        EXPECT(gbc.readMem(0xffd3), 0x55);
        // E0 02D0
        gbc.setState(0xc4a4, 0x1e47, 0xe9e0, 0x39a9, 0xb352, 0xec9c, 0x0, 0x0);
        gbc.writeMem(0xc4a4, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1e47);
        EXPECT(gbc.pc(), 0xc4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a4), 0xe0);
        EXPECT(gbc.readMem(0xc4a5), 0x76);
        EXPECT(gbc.readMem(0xff76), 0xe9);
        // E0 02D1
        gbc.setState(0x4999, 0x751b, 0x5be0, 0x614a, 0x7f8f, 0xe27a, 0x0, 0x0);
        gbc.writeMem(0x4999, { 0xe0, 0xa0 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x751b);
        EXPECT(gbc.pc(), 0x499b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa0), 0x5b);
        // E0 02D2
        gbc.setState(0xe25e, 0x3e51, 0xb1f0, 0xfb0f, 0xc802, 0xfc5, 0x1, 0x0);
        gbc.writeMem(0xe25e, { 0xe0, 0xbc });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3e51);
        EXPECT(gbc.pc(), 0xe260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25e), 0xe0);
        EXPECT(gbc.readMem(0xe25f), 0xbc);
        EXPECT(gbc.readMem(0xffbc), 0xb1);
        // E0 02D3
        gbc.setState(0x695d, 0xffac, 0x5340, 0xc26a, 0x6a9, 0x7c06, 0x1, 0x0);
        gbc.writeMem(0x695d, { 0xe0, 0x54 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xffac);
        EXPECT(gbc.pc(), 0x695f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff54), 0x53);
        // E0 02D6
        gbc.setState(0x662f, 0xb860, 0x7070, 0xca77, 0xf710, 0xd477, 0x1, 0x1);
        gbc.writeMem(0x662f, { 0xe0, 0xce });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb860);
        EXPECT(gbc.pc(), 0x6631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffce), 0x70);
        // E0 02D7
        gbc.setState(0x613, 0x9802, 0xa870, 0x20fd, 0xfecd, 0x50ab, 0x0, 0x1);
        gbc.writeMem(0x613, { 0xe0, 0x33 });
        gbc.writeMem(0xff33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9802);
        EXPECT(gbc.pc(), 0x615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff33), 0xa8);
        // E0 02D8
        gbc.setState(0xd7af, 0x9bc1, 0x15d0, 0xe748, 0xaca5, 0xb92f, 0x0, 0x1);
        gbc.writeMem(0xd7af, { 0xe0, 0x40 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9bc1);
        EXPECT(gbc.pc(), 0xd7b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7af), 0xe0);
        EXPECT(gbc.readMem(0xd7b0), 0x40);
        EXPECT(gbc.readMem(0xff40), 0x15);
        // E0 02D9
        gbc.setState(0x3797, 0x91c3, 0xd940, 0x8950, 0x74fd, 0x5632, 0x0, 0x1);
        gbc.writeMem(0x3797, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x91c3);
        EXPECT(gbc.pc(), 0x3799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffea), 0xd9);
        // E0 02DA
        gbc.setState(0x918d, 0xa9a1, 0x5e00, 0x42af, 0x5d12, 0xfbd2, 0x0, 0x0);
        gbc.writeMem(0x918d, { 0xe0, 0x57 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa9a1);
        EXPECT(gbc.pc(), 0x918f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918d), 0xe0);
        EXPECT(gbc.readMem(0x918e), 0x57);
        EXPECT(gbc.readMem(0xff57), 0x5e);
        // E0 02DB
        gbc.setState(0x6b13, 0x6e19, 0x8940, 0x498f, 0x1c7a, 0xd5fd, 0x1, 0x1);
        gbc.writeMem(0x6b13, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6e19);
        EXPECT(gbc.pc(), 0x6b15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff27), 0x89);
        // E0 02DC
        gbc.setState(0x413a, 0xc247, 0x8b80, 0x79f1, 0xd5c, 0x2e1, 0x0, 0x0);
        gbc.writeMem(0x413a, { 0xe0, 0x8 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc247);
        EXPECT(gbc.pc(), 0x413c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff08), 0x8b);
        // E0 02DD
        gbc.setState(0x1229, 0xbfd0, 0x1950, 0x1a23, 0xf858, 0xb546, 0x0, 0x0);
        gbc.writeMem(0x1229, { 0xe0, 0x26 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbfd0);
        EXPECT(gbc.pc(), 0x122b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff26), 0x19);
        // E0 02DE
        gbc.setState(0x9eda, 0xcab6, 0x79a0, 0x3039, 0x778d, 0xa7c0, 0x0, 0x0);
        gbc.writeMem(0x9eda, { 0xe0, 0x14 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xcab6);
        EXPECT(gbc.pc(), 0x9edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eda), 0xe0);
        EXPECT(gbc.readMem(0x9edb), 0x14);
        EXPECT(gbc.readMem(0xff14), 0x79);
        // E0 02DF
        gbc.setState(0xa9d3, 0xc4ef, 0xcde0, 0xdcce, 0xeaf0, 0x7441, 0x0, 0x1);
        gbc.writeMem(0xa9d3, { 0xe0, 0x69 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc4ef);
        EXPECT(gbc.pc(), 0xa9d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9d3), 0xe0);
        EXPECT(gbc.readMem(0xa9d4), 0x69);
        EXPECT(gbc.readMem(0xff69), 0xcd);
        // E0 02E0
        gbc.setState(0x29ec, 0x9d21, 0xeb90, 0x6141, 0x3024, 0xebd3, 0x0, 0x0);
        gbc.writeMem(0x29ec, { 0xe0, 0x90 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9d21);
        EXPECT(gbc.pc(), 0x29ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff90), 0xeb);
        // E0 02E1
        gbc.setState(0x5b76, 0xab27, 0x83c0, 0x2f9a, 0x9a1c, 0x8555, 0x0, 0x1);
        gbc.writeMem(0x5b76, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xab27);
        EXPECT(gbc.pc(), 0x5b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff23), 0x83);
        // E0 02E2
        gbc.setState(0x5df4, 0x3345, 0xedd0, 0x6a8c, 0x4a02, 0x809f, 0x1, 0x1);
        gbc.writeMem(0x5df4, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3345);
        EXPECT(gbc.pc(), 0x5df6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9a), 0xed);
        // E0 02E3
        gbc.setState(0xe7d5, 0x291a, 0x23e0, 0xbce5, 0x5713, 0xb3f, 0x1, 0x1);
        gbc.writeMem(0xe7d5, { 0xe0, 0x61 });
        gbc.writeMem(0xff61, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x291a);
        EXPECT(gbc.pc(), 0xe7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d5), 0xe0);
        EXPECT(gbc.readMem(0xe7d6), 0x61);
        EXPECT(gbc.readMem(0xff61), 0x23);
        // E0 02E4
        gbc.setState(0xa576, 0xd100, 0xf3f0, 0xd526, 0x9972, 0x2fbf, 0x1, 0x0);
        gbc.writeMem(0xa576, { 0xe0, 0xfb });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd100);
        EXPECT(gbc.pc(), 0xa578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa576), 0xe0);
        EXPECT(gbc.readMem(0xa577), 0xfb);
        EXPECT(gbc.readMem(0xfffb), 0xf3);
        // E0 02E5
        gbc.setState(0x41aa, 0xa58c, 0x33c0, 0x5e3c, 0xf5ef, 0xe19d, 0x0, 0x1);
        gbc.writeMem(0x41aa, { 0xe0, 0x6c });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa58c);
        EXPECT(gbc.pc(), 0x41ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6c), 0x33);
        // E0 02E6
        gbc.setState(0x21bb, 0x6dbd, 0xead0, 0x858, 0x1603, 0x2675, 0x0, 0x0);
        gbc.writeMem(0x21bb, { 0xe0, 0xe2 });
        gbc.writeMem(0xffe2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6dbd);
        EXPECT(gbc.pc(), 0x21bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe2), 0xea);
        // E0 02E8
        gbc.setState(0xd3, 0xdb3e, 0x30c0, 0x5890, 0xf203, 0x8005, 0x1, 0x0);
        gbc.writeMem(0xd3, { 0xe0, 0xda });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xdb3e);
        EXPECT(gbc.pc(), 0xd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffda), 0x30);
        // E0 02E9
        gbc.setState(0x3daa, 0xe9da, 0xccc0, 0x3f7a, 0x5510, 0xaaff, 0x1, 0x0);
        gbc.writeMem(0x3daa, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe9da);
        EXPECT(gbc.pc(), 0x3dac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff35), 0xcc);
        // E0 02EA
        gbc.setState(0x747c, 0x816b, 0xfe20, 0x5645, 0x66ae, 0x73d, 0x0, 0x0);
        gbc.writeMem(0x747c, { 0xe0, 0x93 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x816b);
        EXPECT(gbc.pc(), 0x747e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff93), 0xfe);
        // E0 02EC
        gbc.setState(0xd9fb, 0xc51b, 0x5e10, 0x6f8e, 0x19be, 0xb655, 0x1, 0x0);
        gbc.writeMem(0xd9fb, { 0xe0, 0x54 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc51b);
        EXPECT(gbc.pc(), 0xd9fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9fb), 0xe0);
        EXPECT(gbc.readMem(0xd9fc), 0x54);
        EXPECT(gbc.readMem(0xff54), 0x5e);
        // E0 02ED
        gbc.setState(0x3278, 0x200f, 0x2fa0, 0x7305, 0x4bb0, 0x9f86, 0x1, 0x1);
        gbc.writeMem(0x3278, { 0xe0, 0x40 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x200f);
        EXPECT(gbc.pc(), 0x327a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff40), 0x2f);
        // E0 02EE
        gbc.setState(0xb5f5, 0xc617, 0x51f0, 0xe5d3, 0x36c8, 0xf689, 0x1, 0x0);
        gbc.writeMem(0xb5f5, { 0xe0, 0xd5 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc617);
        EXPECT(gbc.pc(), 0xb5f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f5), 0xe0);
        EXPECT(gbc.readMem(0xb5f6), 0xd5);
        EXPECT(gbc.readMem(0xffd5), 0x51);
        // E0 02EF
        gbc.setState(0x8c7a, 0xc0b4, 0xc2a0, 0x7f81, 0x7765, 0x8783, 0x1, 0x1);
        gbc.writeMem(0x8c7a, { 0xe0, 0x70 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc0b4);
        EXPECT(gbc.pc(), 0x8c7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7a), 0xe0);
        EXPECT(gbc.readMem(0x8c7b), 0x70);
        EXPECT(gbc.readMem(0xff70), 0xc2);
        // E0 02F0
        gbc.setState(0x5034, 0x182b, 0x7440, 0x5627, 0x5816, 0xe7a7, 0x1, 0x1);
        gbc.writeMem(0x5034, { 0xe0, 0xd3 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x182b);
        EXPECT(gbc.pc(), 0x5036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd3), 0x74);
        // E0 02F1
        gbc.setState(0xc448, 0xd712, 0xf360, 0x18f1, 0x9611, 0x1117, 0x1, 0x1);
        gbc.writeMem(0xc448, { 0xe0, 0xcc });
        gbc.writeMem(0xffcc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd712);
        EXPECT(gbc.pc(), 0xc44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc448), 0xe0);
        EXPECT(gbc.readMem(0xc449), 0xcc);
        EXPECT(gbc.readMem(0xffcc), 0xf3);
        // E0 02F2
        gbc.setState(0xa5a4, 0x1ae, 0x8560, 0x5f98, 0xe57a, 0xa3fb, 0x1, 0x1);
        gbc.writeMem(0xa5a4, { 0xe0, 0x73 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1ae);
        EXPECT(gbc.pc(), 0xa5a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a4), 0xe0);
        EXPECT(gbc.readMem(0xa5a5), 0x73);
        EXPECT(gbc.readMem(0xff73), 0x85);
        // E0 02F3
        gbc.setState(0x5587, 0xd7b5, 0x74a0, 0x4c5e, 0xb674, 0xc6fc, 0x1, 0x0);
        gbc.writeMem(0x5587, { 0xe0, 0xfd });
        gbc.writeMem(0xfffd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd7b5);
        EXPECT(gbc.pc(), 0x5589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfffd), 0x74);
        // E0 02F4
        gbc.setState(0xeb41, 0x9787, 0xfd80, 0xd22c, 0x2eee, 0xc7e6, 0x0, 0x1);
        gbc.writeMem(0xeb41, { 0xe0, 0xf8 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9787);
        EXPECT(gbc.pc(), 0xeb43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb41), 0xe0);
        EXPECT(gbc.readMem(0xeb42), 0xf8);
        EXPECT(gbc.readMem(0xfff8), 0xfd);
        // E0 02F5
        gbc.setState(0xc5aa, 0x5131, 0x8b30, 0xa674, 0x16a7, 0xf01f, 0x0, 0x0);
        gbc.writeMem(0xc5aa, { 0xe0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5131);
        EXPECT(gbc.pc(), 0xc5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5aa), 0xe0);
        EXPECT(gbc.readMem(0xc5ab), 0xc6);
        EXPECT(gbc.readMem(0xffc6), 0x8b);
        // E0 02F6
        gbc.setState(0x9bb, 0xd232, 0xa120, 0x8f15, 0x8004, 0x44ce, 0x0, 0x0);
        gbc.writeMem(0x9bb, { 0xe0, 0x90 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd232);
        EXPECT(gbc.pc(), 0x9bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff90), 0xa1);
        // E0 02F7
        gbc.setState(0x9e90, 0xb3f3, 0x3c40, 0xc8fe, 0x8abd, 0xb3b0, 0x1, 0x0);
        gbc.writeMem(0x9e90, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb3f3);
        EXPECT(gbc.pc(), 0x9e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e90), 0xe0);
        EXPECT(gbc.readMem(0x9e91), 0x31);
        EXPECT(gbc.readMem(0xff31), 0x3c);
        // E0 02F8
        gbc.setState(0x63b6, 0x7408, 0xf2c0, 0xdc66, 0x9341, 0xb1bf, 0x1, 0x1);
        gbc.writeMem(0x63b6, { 0xe0, 0x38 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7408);
        EXPECT(gbc.pc(), 0x63b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff38), 0xf2);
        // E0 02F9
        gbc.setState(0x5e67, 0x9e04, 0x58c0, 0xc05d, 0x6718, 0xe396, 0x0, 0x0);
        gbc.writeMem(0x5e67, { 0xe0, 0xe7 });
        gbc.writeMem(0xffe7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9e04);
        EXPECT(gbc.pc(), 0x5e69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe7), 0x58);
        // E0 02FA
        gbc.setState(0xe865, 0xc9d8, 0x2fc0, 0x9361, 0x932c, 0xf391, 0x0, 0x1);
        gbc.writeMem(0xe865, { 0xe0, 0x2b });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc9d8);
        EXPECT(gbc.pc(), 0xe867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe865), 0xe0);
        EXPECT(gbc.readMem(0xe866), 0x2b);
        EXPECT(gbc.readMem(0xff2b), 0x2f);
        // E0 02FB
        gbc.setState(0x43a2, 0x4cc6, 0x1890, 0xd0bd, 0xfec5, 0x880b, 0x1, 0x1);
        gbc.writeMem(0x43a2, { 0xe0, 0x69 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4cc6);
        EXPECT(gbc.pc(), 0x43a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff69), 0x18);
        // E0 02FC
        gbc.setState(0x7796, 0xcb82, 0x7230, 0xba2e, 0x3fff, 0xa661, 0x0, 0x0);
        gbc.writeMem(0x7796, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xcb82);
        EXPECT(gbc.pc(), 0x7798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff31), 0x72);
        // E0 02FD
        gbc.setState(0x38e3, 0xd983, 0xd920, 0x98, 0xc644, 0xb582, 0x1, 0x1);
        gbc.writeMem(0x38e3, { 0xe0, 0x1b });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd983);
        EXPECT(gbc.pc(), 0x38e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff1b), 0xd9);
        // E0 02FE
        gbc.setState(0x521c, 0x3206, 0x8bf0, 0x226b, 0x100f, 0x22a5, 0x1, 0x1);
        gbc.writeMem(0x521c, { 0xe0, 0xc });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3206);
        EXPECT(gbc.pc(), 0x521e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0c), 0x8b);
        // E0 02FF
        gbc.setState(0x42cc, 0x45c2, 0xb960, 0x82bf, 0x3edc, 0x23ff, 0x1, 0x0);
        gbc.writeMem(0x42cc, { 0xe0, 0x8c });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x45c2);
        EXPECT(gbc.pc(), 0x42ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8c), 0xb9);
        // E0 0300
        gbc.setState(0x109f, 0xf8e0, 0xbbd0, 0x6b5b, 0xed12, 0x3231, 0x0, 0x0);
        gbc.writeMem(0x109f, { 0xe0, 0x7c });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf8e0);
        EXPECT(gbc.pc(), 0x10a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7c), 0xbb);
        // E0 0301
        gbc.setState(0xe695, 0xbf02, 0x91d0, 0x875a, 0x2b39, 0xdcfb, 0x0, 0x1);
        gbc.writeMem(0xe695, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbf02);
        EXPECT(gbc.pc(), 0xe697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe695), 0xe0);
        EXPECT(gbc.readMem(0xe696), 0x76);
        EXPECT(gbc.readMem(0xff76), 0x91);
        // E0 0302
        gbc.setState(0xd87b, 0x7946, 0x6560, 0x9ea0, 0x28ee, 0x31ab, 0x0, 0x0);
        gbc.writeMem(0xd87b, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7946);
        EXPECT(gbc.pc(), 0xd87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd87b), 0xe0);
        EXPECT(gbc.readMem(0xd87c), 0x52);
        EXPECT(gbc.readMem(0xff52), 0x65);
        // E0 0303
        gbc.setState(0xc0a5, 0x44d8, 0xb840, 0x2424, 0x1854, 0xe09e, 0x1, 0x1);
        gbc.writeMem(0xc0a5, { 0xe0, 0x69 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x44d8);
        EXPECT(gbc.pc(), 0xc0a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a5), 0xe0);
        EXPECT(gbc.readMem(0xc0a6), 0x69);
        EXPECT(gbc.readMem(0xff69), 0xb8);
        // E0 0304
        gbc.setState(0x446e, 0x1798, 0x87f0, 0x49ae, 0x8395, 0x5e1f, 0x1, 0x0);
        gbc.writeMem(0x446e, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1798);
        EXPECT(gbc.pc(), 0x4470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff80), 0x87);
        // E0 0305
        gbc.setState(0x6133, 0x98b8, 0x240, 0x1b0c, 0xb3e5, 0x535, 0x1, 0x1);
        gbc.writeMem(0x6133, { 0xe0, 0x4b });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x98b8);
        EXPECT(gbc.pc(), 0x6135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4b), 0x2);
        // E0 0306
        gbc.setState(0x73f1, 0xe18f, 0x3050, 0xd7fa, 0xc74d, 0xe9eb, 0x0, 0x1);
        gbc.writeMem(0x73f1, { 0xe0, 0x74 });
        gbc.writeMem(0xff74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe18f);
        EXPECT(gbc.pc(), 0x73f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff74), 0x30);
        // E0 0307
        gbc.setState(0xed5c, 0xf1da, 0x2d40, 0xb336, 0xb535, 0x2ed6, 0x1, 0x0);
        gbc.writeMem(0xed5c, { 0xe0, 0xc3 });
        gbc.writeMem(0xffc3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf1da);
        EXPECT(gbc.pc(), 0xed5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed5c), 0xe0);
        EXPECT(gbc.readMem(0xed5d), 0xc3);
        EXPECT(gbc.readMem(0xffc3), 0x2d);
        // E0 0308
        gbc.setState(0x4b71, 0x9bed, 0xdaa0, 0xeccd, 0xd340, 0x27e8, 0x1, 0x0);
        gbc.writeMem(0x4b71, { 0xe0, 0x18 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9bed);
        EXPECT(gbc.pc(), 0x4b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff18), 0xda);
        // E0 0309
        gbc.setState(0xa698, 0xe827, 0x9a20, 0xa4d9, 0x282e, 0x6f9a, 0x0, 0x1);
        gbc.writeMem(0xa698, { 0xe0, 0xbb });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe827);
        EXPECT(gbc.pc(), 0xa69a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa698), 0xe0);
        EXPECT(gbc.readMem(0xa699), 0xbb);
        EXPECT(gbc.readMem(0xffbb), 0x9a);
        // E0 030A
        gbc.setState(0xb909, 0xf170, 0x45c0, 0x9fa4, 0x59a3, 0xee1, 0x1, 0x1);
        gbc.writeMem(0xb909, { 0xe0, 0x5 });
        gbc.writeMem(0xff05, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf170);
        EXPECT(gbc.pc(), 0xb90b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb909), 0xe0);
        EXPECT(gbc.readMem(0xb90a), 0x5);
        EXPECT(gbc.readMem(0xff05), 0x45);
        // E0 030B
        gbc.setState(0x87d6, 0x717a, 0x8d40, 0xc8c1, 0xeeb3, 0x3920, 0x0, 0x0);
        gbc.writeMem(0x87d6, { 0xe0, 0x4a });
        gbc.writeMem(0xff4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x717a);
        EXPECT(gbc.pc(), 0x87d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d6), 0xe0);
        EXPECT(gbc.readMem(0x87d7), 0x4a);
        EXPECT(gbc.readMem(0xff4a), 0x8d);
        // E0 030C
        gbc.setState(0x65ed, 0x6e71, 0xcf00, 0xfd23, 0xd73e, 0x605a, 0x1, 0x0);
        gbc.writeMem(0x65ed, { 0xe0, 0x6f });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6e71);
        EXPECT(gbc.pc(), 0x65ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6f), 0xcf);
        // E0 030D
        gbc.setState(0xf6f, 0xa47d, 0x6420, 0x7109, 0xae7c, 0xd2dd, 0x1, 0x1);
        gbc.writeMem(0xf6f, { 0xe0, 0xc });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa47d);
        EXPECT(gbc.pc(), 0xf71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0c), 0x64);
        // E0 030E
        gbc.setState(0x7cfa, 0x302c, 0x5320, 0x5211, 0x8cb4, 0xc968, 0x1, 0x0);
        gbc.writeMem(0x7cfa, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x302c);
        EXPECT(gbc.pc(), 0x7cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff07), 0x53);
        // E0 030F
        gbc.setState(0xcf56, 0x2498, 0x9810, 0x3fec, 0xf51e, 0x4b5d, 0x1, 0x0);
        gbc.writeMem(0xcf56, { 0xe0, 0x85 });
        gbc.writeMem(0xff85, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2498);
        EXPECT(gbc.pc(), 0xcf58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf56), 0xe0);
        EXPECT(gbc.readMem(0xcf57), 0x85);
        EXPECT(gbc.readMem(0xff85), 0x98);
        // E0 0310
        gbc.setState(0x9690, 0xc680, 0xcf30, 0x665e, 0x142e, 0xf962, 0x0, 0x1);
        gbc.writeMem(0x9690, { 0xe0, 0x8d });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc680);
        EXPECT(gbc.pc(), 0x9692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9690), 0xe0);
        EXPECT(gbc.readMem(0x9691), 0x8d);
        EXPECT(gbc.readMem(0xff8d), 0xcf);
        // E0 0311
        gbc.setState(0x2d0, 0xec4, 0x6cf0, 0x4569, 0xc977, 0x547e, 0x1, 0x1);
        gbc.writeMem(0x2d0, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xec4);
        EXPECT(gbc.pc(), 0x2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffaf), 0x6c);
        // E0 0312
        gbc.setState(0x8aee, 0x7fea, 0x9ee0, 0xfff7, 0xa1a5, 0x8129, 0x1, 0x1);
        gbc.writeMem(0x8aee, { 0xe0, 0xe3 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7fea);
        EXPECT(gbc.pc(), 0x8af0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aee), 0xe0);
        EXPECT(gbc.readMem(0x8aef), 0xe3);
        EXPECT(gbc.readMem(0xffe3), 0x9e);
        // E0 0313
        gbc.setState(0xe4f3, 0x3da6, 0x2320, 0xf7ec, 0xc437, 0x17a7, 0x1, 0x0);
        gbc.writeMem(0xe4f3, { 0xe0, 0x1f });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3da6);
        EXPECT(gbc.pc(), 0xe4f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f3), 0xe0);
        EXPECT(gbc.readMem(0xe4f4), 0x1f);
        EXPECT(gbc.readMem(0xff1f), 0x23);
        // E0 0314
        gbc.setState(0xef6c, 0x972a, 0x73d0, 0x177f, 0x6553, 0xe7bf, 0x0, 0x1);
        gbc.writeMem(0xef6c, { 0xe0, 0x71 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x972a);
        EXPECT(gbc.pc(), 0xef6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef6c), 0xe0);
        EXPECT(gbc.readMem(0xef6d), 0x71);
        EXPECT(gbc.readMem(0xff71), 0x73);
        // E0 0315
        gbc.setState(0x77c0, 0x28c3, 0xa90, 0xf86b, 0x816a, 0x9f4b, 0x1, 0x0);
        gbc.writeMem(0x77c0, { 0xe0, 0x97 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x28c3);
        EXPECT(gbc.pc(), 0x77c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff97), 0xa);
        // E0 0316
        gbc.setState(0xe7a3, 0x8a44, 0xb540, 0x3020, 0x8d8f, 0xd580, 0x1, 0x1);
        gbc.writeMem(0xe7a3, { 0xe0, 0x2e });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8a44);
        EXPECT(gbc.pc(), 0xe7a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a3), 0xe0);
        EXPECT(gbc.readMem(0xe7a4), 0x2e);
        EXPECT(gbc.readMem(0xff2e), 0xb5);
        // E0 0317
        gbc.setState(0xa770, 0xc927, 0xb530, 0x8f68, 0x32c1, 0x5dd9, 0x0, 0x0);
        gbc.writeMem(0xa770, { 0xe0, 0xfc });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc927);
        EXPECT(gbc.pc(), 0xa772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa770), 0xe0);
        EXPECT(gbc.readMem(0xa771), 0xfc);
        EXPECT(gbc.readMem(0xfffc), 0xb5);
        // E0 0318
        gbc.setState(0xa0b0, 0xf2ad, 0x14e0, 0xaef2, 0xae30, 0x9d60, 0x0, 0x1);
        gbc.writeMem(0xa0b0, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf2ad);
        EXPECT(gbc.pc(), 0xa0b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0b0), 0xe0);
        EXPECT(gbc.readMem(0xa0b1), 0x8a);
        EXPECT(gbc.readMem(0xff8a), 0x14);
        // E0 0319
        gbc.setState(0xdb7a, 0x4eee, 0x280, 0xb63e, 0x2d57, 0x7970, 0x1, 0x0);
        gbc.writeMem(0xdb7a, { 0xe0, 0xe0 });
        gbc.writeMem(0xffe0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4eee);
        EXPECT(gbc.pc(), 0xdb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb7a), 0xe0);
        EXPECT(gbc.readMem(0xdb7b), 0xe0);
        EXPECT(gbc.readMem(0xffe0), 0x2);
        // E0 031A
        gbc.setState(0xe5a, 0xd451, 0xa690, 0x2aa9, 0x62f2, 0x9780, 0x0, 0x0);
        gbc.writeMem(0xe5a, { 0xe0, 0x1b });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd451);
        EXPECT(gbc.pc(), 0xe5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1b), 0xa6);
        // E0 031B
        gbc.setState(0x1d5a, 0xd18e, 0x5990, 0xbfc5, 0xe6db, 0x5a0f, 0x1, 0x0);
        gbc.writeMem(0x1d5a, { 0xe0, 0x15 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd18e);
        EXPECT(gbc.pc(), 0x1d5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff15), 0x59);
        // E0 031C
        gbc.setState(0x7df7, 0xd2d5, 0x32f0, 0xbaa, 0x9416, 0x6df2, 0x0, 0x0);
        gbc.writeMem(0x7df7, { 0xe0, 0x53 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd2d5);
        EXPECT(gbc.pc(), 0x7df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff53), 0x32);
        // E0 031D
        gbc.setState(0xa4b1, 0x70b4, 0x40c0, 0xef5, 0x43ef, 0x3b1c, 0x1, 0x1);
        gbc.writeMem(0xa4b1, { 0xe0, 0x22 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x70b4);
        EXPECT(gbc.pc(), 0xa4b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b1), 0xe0);
        EXPECT(gbc.readMem(0xa4b2), 0x22);
        EXPECT(gbc.readMem(0xff22), 0x40);
        // E0 031E
        gbc.setState(0x3fed, 0x90e8, 0xaf50, 0x3c, 0x355f, 0x888d, 0x1, 0x1);
        gbc.writeMem(0x3fed, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x90e8);
        EXPECT(gbc.pc(), 0x3fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc0), 0xaf);
        // E0 031F
        gbc.setState(0xce66, 0xe628, 0xf280, 0x8759, 0x30c6, 0x7a12, 0x1, 0x1);
        gbc.writeMem(0xce66, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe628);
        EXPECT(gbc.pc(), 0xce68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce66), 0xe0);
        EXPECT(gbc.readMem(0xce67), 0xad);
        EXPECT(gbc.readMem(0xffad), 0xf2);
        // E0 0320
        gbc.setState(0x5d37, 0x147, 0xb6f0, 0x19e8, 0x628d, 0x41d2, 0x0, 0x0);
        gbc.writeMem(0x5d37, { 0xe0, 0xde });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x147);
        EXPECT(gbc.pc(), 0x5d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffde), 0xb6);
        // E0 0321
        gbc.setState(0x7972, 0x3b22, 0xfd70, 0x9767, 0x4e9d, 0x7ecf, 0x1, 0x1);
        gbc.writeMem(0x7972, { 0xe0, 0xa1 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3b22);
        EXPECT(gbc.pc(), 0x7974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffa1), 0xfd);
        // E0 0322
        gbc.setState(0xd073, 0xfbc7, 0xce90, 0x65, 0xaa28, 0xb952, 0x0, 0x0);
        gbc.writeMem(0xd073, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfbc7);
        EXPECT(gbc.pc(), 0xd075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd073), 0xe0);
        EXPECT(gbc.readMem(0xd074), 0x9e);
        EXPECT(gbc.readMem(0xff9e), 0xce);
        // E0 0324
        gbc.setState(0x76c4, 0xe5f7, 0xcde0, 0x138d, 0xa169, 0xdc0, 0x1, 0x0);
        gbc.writeMem(0x76c4, { 0xe0, 0xd6 });
        gbc.writeMem(0xffd6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe5f7);
        EXPECT(gbc.pc(), 0x76c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd6), 0xcd);
        // E0 0325
        gbc.setState(0x867c, 0xb452, 0xb070, 0xa5cc, 0x7272, 0xc612, 0x1, 0x0);
        gbc.writeMem(0x867c, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb452);
        EXPECT(gbc.pc(), 0x867e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x867c), 0xe0);
        EXPECT(gbc.readMem(0x867d), 0x9a);
        EXPECT(gbc.readMem(0xff9a), 0xb0);
        // E0 0326
        gbc.setState(0x47d3, 0x4315, 0x1510, 0x4389, 0xc2c7, 0x4cd6, 0x1, 0x1);
        gbc.writeMem(0x47d3, { 0xe0, 0xc1 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4315);
        EXPECT(gbc.pc(), 0x47d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc1), 0x15);
        // E0 0327
        gbc.setState(0x6c3, 0x9c13, 0xf140, 0xb9a8, 0x150f, 0x2327, 0x0, 0x1);
        gbc.writeMem(0x6c3, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9c13);
        EXPECT(gbc.pc(), 0x6c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb8), 0xf1);
        // E0 0328
        gbc.setState(0x5f51, 0x44c8, 0x2e70, 0x7d3, 0x6f8e, 0xa918, 0x1, 0x1);
        gbc.writeMem(0x5f51, { 0xe0, 0xbb });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x44c8);
        EXPECT(gbc.pc(), 0x5f53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffbb), 0x2e);
        // E0 0329
        gbc.setState(0x70e6, 0x5ef1, 0x2160, 0xf7fe, 0xb39c, 0x8d33, 0x0, 0x0);
        gbc.writeMem(0x70e6, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5ef1);
        EXPECT(gbc.pc(), 0x70e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb2), 0x21);
        // E0 032A
        gbc.setState(0x9912, 0xf7ca, 0xe710, 0xfaf0, 0xe046, 0xc037, 0x0, 0x1);
        gbc.writeMem(0x9912, { 0xe0, 0x21 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf7ca);
        EXPECT(gbc.pc(), 0x9914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9912), 0xe0);
        EXPECT(gbc.readMem(0x9913), 0x21);
        EXPECT(gbc.readMem(0xff21), 0xe7);
        // E0 032B
        gbc.setState(0x9b24, 0x84d9, 0xa1d0, 0x22f3, 0x8396, 0x4e34, 0x1, 0x1);
        gbc.writeMem(0x9b24, { 0xe0, 0x7f });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x84d9);
        EXPECT(gbc.pc(), 0x9b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b24), 0xe0);
        EXPECT(gbc.readMem(0x9b25), 0x7f);
        EXPECT(gbc.readMem(0xff7f), 0xa1);
        // E0 032C
        gbc.setState(0x20c6, 0xd35c, 0xd2a0, 0x25df, 0xa6db, 0x302b, 0x1, 0x0);
        gbc.writeMem(0x20c6, { 0xe0, 0x21 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd35c);
        EXPECT(gbc.pc(), 0x20c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff21), 0xd2);
        // E0 032D
        gbc.setState(0x3ce, 0x7928, 0x2cc0, 0xec51, 0xde55, 0x1b2c, 0x1, 0x0);
        gbc.writeMem(0x3ce, { 0xe0, 0x45 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7928);
        EXPECT(gbc.pc(), 0x3d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff45), 0x2c);
        // E0 032E
        gbc.setState(0x3501, 0xdc70, 0xa8f0, 0xbcba, 0xe7f, 0xbec8, 0x0, 0x1);
        gbc.writeMem(0x3501, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdc70);
        EXPECT(gbc.pc(), 0x3503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff03), 0xa8);
        // E0 032F
        gbc.setState(0xb2a5, 0xe52e, 0x3bb0, 0x447, 0xc87a, 0x2aab, 0x1, 0x1);
        gbc.writeMem(0xb2a5, { 0xe0, 0x62 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe52e);
        EXPECT(gbc.pc(), 0xb2a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a5), 0xe0);
        EXPECT(gbc.readMem(0xb2a6), 0x62);
        EXPECT(gbc.readMem(0xff62), 0x3b);
        // E0 0330
        gbc.setState(0xae8c, 0x25bc, 0xf70, 0xd349, 0x176a, 0x11e4, 0x0, 0x1);
        gbc.writeMem(0xae8c, { 0xe0, 0xaa });
        gbc.writeMem(0xffaa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x25bc);
        EXPECT(gbc.pc(), 0xae8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae8c), 0xe0);
        EXPECT(gbc.readMem(0xae8d), 0xaa);
        EXPECT(gbc.readMem(0xffaa), 0xf);
        // E0 0331
        gbc.setState(0x9807, 0x8faa, 0x1ac0, 0xf573, 0x6727, 0x6f03, 0x0, 0x1);
        gbc.writeMem(0x9807, { 0xe0, 0x46 });
        gbc.writeMem(0xff46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8faa);
        EXPECT(gbc.pc(), 0x9809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9807), 0xe0);
        EXPECT(gbc.readMem(0x9808), 0x46);
        EXPECT(gbc.readMem(0xff46), 0x1a);
        // E0 0332
        gbc.setState(0x547b, 0xdd97, 0xa970, 0xe888, 0x7c02, 0x9bfa, 0x1, 0x0);
        gbc.writeMem(0x547b, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xdd97);
        EXPECT(gbc.pc(), 0x547d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff76), 0xa9);
        // E0 0333
        gbc.setState(0xe791, 0x12ee, 0xad60, 0x1720, 0x91e9, 0x450, 0x1, 0x0);
        gbc.writeMem(0xe791, { 0xe0, 0x73 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x12ee);
        EXPECT(gbc.pc(), 0xe793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe791), 0xe0);
        EXPECT(gbc.readMem(0xe792), 0x73);
        EXPECT(gbc.readMem(0xff73), 0xad);
        // E0 0334
        gbc.setState(0x57c7, 0xe4e2, 0xc980, 0xc192, 0xc1a5, 0x1527, 0x1, 0x1);
        gbc.writeMem(0x57c7, { 0xe0, 0xa1 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe4e2);
        EXPECT(gbc.pc(), 0x57c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa1), 0xc9);
        // E0 0336
        gbc.setState(0x350c, 0x8680, 0xa3b0, 0x4708, 0xf04d, 0xed3b, 0x0, 0x1);
        gbc.writeMem(0x350c, { 0xe0, 0x1e });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8680);
        EXPECT(gbc.pc(), 0x350e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1e), 0xa3);
        // E0 0337
        gbc.setState(0x7abc, 0x6ed9, 0x210, 0xaebe, 0xc49d, 0xc24, 0x1, 0x1);
        gbc.writeMem(0x7abc, { 0xe0, 0xa0 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6ed9);
        EXPECT(gbc.pc(), 0x7abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffa0), 0x2);
        // E0 0338
        gbc.setState(0x90d3, 0x68ea, 0xc550, 0xe580, 0xbb83, 0x2e8a, 0x0, 0x0);
        gbc.writeMem(0x90d3, { 0xe0, 0x58 });
        gbc.writeMem(0xff58, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x68ea);
        EXPECT(gbc.pc(), 0x90d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d3), 0xe0);
        EXPECT(gbc.readMem(0x90d4), 0x58);
        EXPECT(gbc.readMem(0xff58), 0xc5);
        // E0 0339
        gbc.setState(0xa328, 0xf3f4, 0x3040, 0x9a2c, 0x5eae, 0xa352, 0x0, 0x1);
        gbc.writeMem(0xa328, { 0xe0, 0xa6 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf3f4);
        EXPECT(gbc.pc(), 0xa32a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa328), 0xe0);
        EXPECT(gbc.readMem(0xa329), 0xa6);
        EXPECT(gbc.readMem(0xffa6), 0x30);
        // E0 033A
        gbc.setState(0xe0cd, 0x10dc, 0xf420, 0xffea, 0x42ce, 0x485a, 0x0, 0x0);
        gbc.writeMem(0xe0cd, { 0xe0, 0x7c });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x10dc);
        EXPECT(gbc.pc(), 0xe0cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0cd), 0xe0);
        EXPECT(gbc.readMem(0xe0ce), 0x7c);
        EXPECT(gbc.readMem(0xff7c), 0xf4);
        // E0 033B
        gbc.setState(0xe21, 0xade7, 0x8a70, 0xbe3d, 0xe492, 0x1422, 0x1, 0x0);
        gbc.writeMem(0xe21, { 0xe0, 0x37 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xade7);
        EXPECT(gbc.pc(), 0xe23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff37), 0x8a);
        // E0 033C
        gbc.setState(0x43cf, 0xc3af, 0xe740, 0x46c9, 0x7470, 0x76e4, 0x0, 0x0);
        gbc.writeMem(0x43cf, { 0xe0, 0x18 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc3af);
        EXPECT(gbc.pc(), 0x43d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff18), 0xe7);
        // E0 033D
        gbc.setState(0x2372, 0xc329, 0x2a0, 0xe33f, 0x6a74, 0x79bb, 0x0, 0x0);
        gbc.writeMem(0x2372, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc329);
        EXPECT(gbc.pc(), 0x2374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9f), 0x2);
        // E0 033E
        gbc.setState(0x5f9f, 0xc83f, 0xc1a0, 0x7d32, 0xf776, 0x4ce1, 0x1, 0x0);
        gbc.writeMem(0x5f9f, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc83f);
        EXPECT(gbc.pc(), 0x5fa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffea), 0xc1);
        // E0 033F
        gbc.setState(0x6726, 0xaf61, 0x4180, 0x6853, 0xf508, 0xd577, 0x0, 0x1);
        gbc.writeMem(0x6726, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xaf61);
        EXPECT(gbc.pc(), 0x6728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4c), 0x41);
        // E0 0340
        gbc.setState(0x9673, 0xe755, 0x590, 0x32e9, 0xb330, 0x2005, 0x0, 0x1);
        gbc.writeMem(0x9673, { 0xe0, 0xce });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe755);
        EXPECT(gbc.pc(), 0x9675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9673), 0xe0);
        EXPECT(gbc.readMem(0x9674), 0xce);
        EXPECT(gbc.readMem(0xffce), 0x5);
        // E0 0341
        gbc.setState(0x1b1e, 0x4977, 0xd780, 0x1c8a, 0x2a28, 0xecb7, 0x1, 0x1);
        gbc.writeMem(0x1b1e, { 0xe0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4977);
        EXPECT(gbc.pc(), 0x1b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff7), 0xd7);
        // E0 0343
        gbc.setState(0x168d, 0x50d6, 0x9f10, 0x7100, 0x2b57, 0x22ba, 0x1, 0x0);
        gbc.writeMem(0x168d, { 0xe0, 0x0 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x50d6);
        EXPECT(gbc.pc(), 0x168f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff00), 0x9f);
        // E0 0344
        gbc.setState(0x24fa, 0xdfec, 0x16c0, 0x7ce7, 0xbf2b, 0xd84b, 0x0, 0x1);
        gbc.writeMem(0x24fa, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xdfec);
        EXPECT(gbc.pc(), 0x24fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0e), 0x16);
        // E0 0345
        gbc.setState(0xe11e, 0xfeef, 0x7fd0, 0x934a, 0x57a, 0x602a, 0x0, 0x1);
        gbc.writeMem(0xe11e, { 0xe0, 0x3c });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfeef);
        EXPECT(gbc.pc(), 0xe120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe11e), 0xe0);
        EXPECT(gbc.readMem(0xe11f), 0x3c);
        EXPECT(gbc.readMem(0xff3c), 0x7f);
        // E0 0346
        gbc.setState(0x595f, 0x65d2, 0x1070, 0xf6e8, 0x8526, 0x39fe, 0x0, 0x1);
        gbc.writeMem(0x595f, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x65d2);
        EXPECT(gbc.pc(), 0x5961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff27), 0x10);
        // E0 0347
        gbc.setState(0x9e4f, 0x7c, 0x64b0, 0x1b8c, 0x1d15, 0xd5f, 0x0, 0x0);
        gbc.writeMem(0x9e4f, { 0xe0, 0xb9 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7c);
        EXPECT(gbc.pc(), 0x9e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e4f), 0xe0);
        EXPECT(gbc.readMem(0x9e50), 0xb9);
        EXPECT(gbc.readMem(0xffb9), 0x64);
        // E0 0349
        gbc.setState(0x2ee5, 0xefcd, 0xd0c0, 0x3dd4, 0x93b2, 0x50a, 0x0, 0x1);
        gbc.writeMem(0x2ee5, { 0xe0, 0xff });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xefcd);
        EXPECT(gbc.pc(), 0x2ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffff), 0xd0);
        // E0 034A
        gbc.setState(0x1d8c, 0xbb7b, 0xcf20, 0x6130, 0xb4bd, 0xae25, 0x0, 0x0);
        gbc.writeMem(0x1d8c, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbb7b);
        EXPECT(gbc.pc(), 0x1d8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffaf), 0xcf);
        // E0 034B
        gbc.setState(0x214, 0x8e32, 0x1a10, 0xee77, 0x50da, 0x5259, 0x1, 0x0);
        gbc.writeMem(0x214, { 0xe0, 0xbe });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8e32);
        EXPECT(gbc.pc(), 0x216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffbe), 0x1a);
        // E0 034C
        gbc.setState(0x7ccb, 0x750a, 0xfec0, 0x53e6, 0xd4b4, 0xa2cd, 0x1, 0x1);
        gbc.writeMem(0x7ccb, { 0xe0, 0xaa });
        gbc.writeMem(0xffaa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x750a);
        EXPECT(gbc.pc(), 0x7ccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffaa), 0xfe);
        // E0 034D
        gbc.setState(0x6253, 0x7a9, 0x6c30, 0xd46c, 0x5766, 0x463a, 0x1, 0x0);
        gbc.writeMem(0x6253, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7a9);
        EXPECT(gbc.pc(), 0x6255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffca), 0x6c);
        // E0 034E
        gbc.setState(0x5ada, 0xa393, 0x81b0, 0xcff2, 0x2ce4, 0x928, 0x0, 0x0);
        gbc.writeMem(0x5ada, { 0xe0, 0xa3 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa393);
        EXPECT(gbc.pc(), 0x5adc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffa3), 0x81);
        // E0 034F
        gbc.setState(0x6439, 0x2cb7, 0x9e60, 0x3fb6, 0x69f0, 0xc11, 0x0, 0x0);
        gbc.writeMem(0x6439, { 0xe0, 0x58 });
        gbc.writeMem(0xff58, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2cb7);
        EXPECT(gbc.pc(), 0x643b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff58), 0x9e);
        // E0 0350
        gbc.setState(0x4ccc, 0x8abf, 0x1d90, 0xacd, 0x78af, 0xd42c, 0x1, 0x0);
        gbc.writeMem(0x4ccc, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8abf);
        EXPECT(gbc.pc(), 0x4cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff51), 0x1d);
        // E0 0351
        gbc.setState(0x5277, 0xba0a, 0x3e0, 0xc7d6, 0xa987, 0x4d7f, 0x1, 0x1);
        gbc.writeMem(0x5277, { 0xe0, 0xeb });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xba0a);
        EXPECT(gbc.pc(), 0x5279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffeb), 0x3);
        // E0 0352
        gbc.setState(0x2659, 0x9dce, 0xd7f0, 0x8ba9, 0x217, 0xea64, 0x0, 0x1);
        gbc.writeMem(0x2659, { 0xe0, 0xda });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9dce);
        EXPECT(gbc.pc(), 0x265b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffda), 0xd7);
        // E0 0353
        gbc.setState(0xbdc7, 0x13cd, 0xc010, 0x7671, 0x4610, 0x8d51, 0x1, 0x0);
        gbc.writeMem(0xbdc7, { 0xe0, 0xb6 });
        gbc.writeMem(0xffb6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x13cd);
        EXPECT(gbc.pc(), 0xbdc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc7), 0xe0);
        EXPECT(gbc.readMem(0xbdc8), 0xb6);
        EXPECT(gbc.readMem(0xffb6), 0xc0);
        // E0 0354
        gbc.setState(0x48b6, 0x1eaf, 0x6890, 0x7ad9, 0xbd77, 0xf9b0, 0x1, 0x1);
        gbc.writeMem(0x48b6, { 0xe0, 0x0 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1eaf);
        EXPECT(gbc.pc(), 0x48b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff00), 0x68);
        // E0 0355
        gbc.setState(0xc319, 0xd49c, 0x7de0, 0xa85a, 0x75d3, 0xd9f4, 0x1, 0x0);
        gbc.writeMem(0xc319, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd49c);
        EXPECT(gbc.pc(), 0xc31b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc319), 0xe0);
        EXPECT(gbc.readMem(0xc31a), 0x3f);
        EXPECT(gbc.readMem(0xff3f), 0x7d);
        // E0 0356
        gbc.setState(0xb7f, 0xae0d, 0x1560, 0xfa63, 0xac89, 0x43bf, 0x0, 0x1);
        gbc.writeMem(0xb7f, { 0xe0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xae0d);
        EXPECT(gbc.pc(), 0xb81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb1), 0x15);
        // E0 0357
        gbc.setState(0xacee, 0x7854, 0x7840, 0x8c4, 0x32b1, 0x3d52, 0x1, 0x0);
        gbc.writeMem(0xacee, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7854);
        EXPECT(gbc.pc(), 0xacf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacee), 0xe0);
        EXPECT(gbc.readMem(0xacef), 0x52);
        EXPECT(gbc.readMem(0xff52), 0x78);
        // E0 0358
        gbc.setState(0x1f59, 0xb5b0, 0xc2c0, 0x3ee9, 0xae49, 0x856b, 0x1, 0x0);
        gbc.writeMem(0x1f59, { 0xe0, 0x11 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb5b0);
        EXPECT(gbc.pc(), 0x1f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff11), 0xc2);
        // E0 0359
        gbc.setState(0xb7a5, 0x8260, 0x9b30, 0xf995, 0x6835, 0xf419, 0x0, 0x0);
        gbc.writeMem(0xb7a5, { 0xe0, 0xec });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8260);
        EXPECT(gbc.pc(), 0xb7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a5), 0xe0);
        EXPECT(gbc.readMem(0xb7a6), 0xec);
        EXPECT(gbc.readMem(0xffec), 0x9b);
        // E0 035A
        gbc.setState(0x29c7, 0xdc64, 0x48f0, 0x40eb, 0xc99d, 0x2692, 0x0, 0x0);
        gbc.writeMem(0x29c7, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xdc64);
        EXPECT(gbc.pc(), 0x29c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc0), 0x48);
        // E0 035B
        gbc.setState(0x7823, 0xe2c3, 0x4fb0, 0x211c, 0xbf12, 0xa777, 0x1, 0x1);
        gbc.writeMem(0x7823, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe2c3);
        EXPECT(gbc.pc(), 0x7825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff23), 0x4f);
        // E0 035C
        gbc.setState(0x22cf, 0x299e, 0x7420, 0x1b93, 0x737f, 0xdf6d, 0x1, 0x1);
        gbc.writeMem(0x22cf, { 0xe0, 0x8f });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x299e);
        EXPECT(gbc.pc(), 0x22d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8f), 0x74);
        // E0 035D
        gbc.setState(0xdc49, 0x9ccf, 0xd5f0, 0x9943, 0x9ff8, 0xefaa, 0x0, 0x1);
        gbc.writeMem(0xdc49, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9ccf);
        EXPECT(gbc.pc(), 0xdc4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc49), 0xe0);
        EXPECT(gbc.readMem(0xdc4a), 0x35);
        EXPECT(gbc.readMem(0xff35), 0xd5);
        // E0 035E
        gbc.setState(0xdc28, 0xdd12, 0xf540, 0x1fe5, 0x3842, 0x1959, 0x0, 0x0);
        gbc.writeMem(0xdc28, { 0xe0, 0x88 });
        gbc.writeMem(0xff88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdd12);
        EXPECT(gbc.pc(), 0xdc2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc28), 0xe0);
        EXPECT(gbc.readMem(0xdc29), 0x88);
        EXPECT(gbc.readMem(0xff88), 0xf5);
        // E0 035F
        gbc.setState(0xe9e2, 0xca5c, 0xa0d0, 0x2baa, 0x74f5, 0xdb8a, 0x1, 0x1);
        gbc.writeMem(0xe9e2, { 0xe0, 0x3b });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xca5c);
        EXPECT(gbc.pc(), 0xe9e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e2), 0xe0);
        EXPECT(gbc.readMem(0xe9e3), 0x3b);
        EXPECT(gbc.readMem(0xff3b), 0xa0);
        // E0 0360
        gbc.setState(0xe877, 0xff16, 0x19e0, 0x1b8b, 0xc177, 0x920, 0x0, 0x0);
        gbc.writeMem(0xe877, { 0xe0, 0x6e });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xff16);
        EXPECT(gbc.pc(), 0xe879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe877), 0xe0);
        EXPECT(gbc.readMem(0xe878), 0x6e);
        EXPECT(gbc.readMem(0xff6e), 0x19);
        // E0 0361
        gbc.setState(0x8591, 0xf42e, 0x92d0, 0x67c9, 0xc7b7, 0xb629, 0x0, 0x1);
        gbc.writeMem(0x8591, { 0xe0, 0x24 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf42e);
        EXPECT(gbc.pc(), 0x8593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8591), 0xe0);
        EXPECT(gbc.readMem(0x8592), 0x24);
        EXPECT(gbc.readMem(0xff24), 0x92);
        // E0 0362
        gbc.setState(0xc975, 0xab7a, 0xcdb0, 0x9ae6, 0x22d1, 0xf3b4, 0x0, 0x1);
        gbc.writeMem(0xc975, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xab7a);
        EXPECT(gbc.pc(), 0xc977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc975), 0xe0);
        EXPECT(gbc.readMem(0xc976), 0x5f);
        EXPECT(gbc.readMem(0xff5f), 0xcd);
        // E0 0363
        gbc.setState(0x2fcc, 0x432e, 0x7820, 0xf78e, 0x44bd, 0x3e4a, 0x1, 0x0);
        gbc.writeMem(0x2fcc, { 0xe0, 0x8d });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x432e);
        EXPECT(gbc.pc(), 0x2fce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8d), 0x78);
        // E0 0364
        gbc.setState(0x456b, 0x99e2, 0x6630, 0x7f80, 0x39ee, 0xc8c3, 0x1, 0x1);
        gbc.writeMem(0x456b, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x99e2);
        EXPECT(gbc.pc(), 0x456d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff48), 0x66);
        // E0 0365
        gbc.setState(0x67cb, 0xae4e, 0xdf30, 0x8022, 0x9e95, 0x1d17, 0x1, 0x0);
        gbc.writeMem(0x67cb, { 0xe0, 0x4f });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xae4e);
        EXPECT(gbc.pc(), 0x67cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4f), 0xdf);
        // E0 0366
        gbc.setState(0x7d42, 0x9f0c, 0x6990, 0xf597, 0xb669, 0x58ea, 0x1, 0x1);
        gbc.writeMem(0x7d42, { 0xe0, 0xf3 });
        gbc.writeMem(0xfff3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9f0c);
        EXPECT(gbc.pc(), 0x7d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff3), 0x69);
        // E0 0367
        gbc.setState(0x3a20, 0xa0e4, 0xd000, 0xd00f, 0x7c68, 0x7556, 0x0, 0x1);
        gbc.writeMem(0x3a20, { 0xe0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa0e4);
        EXPECT(gbc.pc(), 0x3a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc8), 0xd0);
        // E0 0368
        gbc.setState(0x4ea, 0x76eb, 0x9560, 0x449f, 0x34ea, 0x78bd, 0x0, 0x0);
        gbc.writeMem(0x4ea, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x76eb);
        EXPECT(gbc.pc(), 0x4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff68), 0x95);
        // E0 0369
        gbc.setState(0x273f, 0x85b, 0xd90, 0xd922, 0x3523, 0x2513, 0x0, 0x0);
        gbc.writeMem(0x273f, { 0xe0, 0x63 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x85b);
        EXPECT(gbc.pc(), 0x2741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff63), 0xd);
        // E0 036A
        gbc.setState(0xd48b, 0x8a77, 0x81d0, 0xc43e, 0xa082, 0x95e0, 0x0, 0x1);
        gbc.writeMem(0xd48b, { 0xe0, 0xe8 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8a77);
        EXPECT(gbc.pc(), 0xd48d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd48b), 0xe0);
        EXPECT(gbc.readMem(0xd48c), 0xe8);
        EXPECT(gbc.readMem(0xffe8), 0x81);
        // E0 036B
        gbc.setState(0xea13, 0x28b3, 0x7b50, 0x7a8a, 0x2084, 0xd13f, 0x1, 0x1);
        gbc.writeMem(0xea13, { 0xe0, 0x43 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x28b3);
        EXPECT(gbc.pc(), 0xea15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea13), 0xe0);
        EXPECT(gbc.readMem(0xea14), 0x43);
        EXPECT(gbc.readMem(0xff43), 0x7b);
        // E0 036C
        gbc.setState(0x36b9, 0x9ac9, 0x1f10, 0x2ccf, 0x7cbc, 0x46f7, 0x1, 0x0);
        gbc.writeMem(0x36b9, { 0xe0, 0x1 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9ac9);
        EXPECT(gbc.pc(), 0x36bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff01), 0x1f);
        // E0 036D
        gbc.setState(0xd18b, 0xe33e, 0x8b90, 0xba3, 0xaa3b, 0xa76b, 0x0, 0x0);
        gbc.writeMem(0xd18b, { 0xe0, 0xb9 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe33e);
        EXPECT(gbc.pc(), 0xd18d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd18b), 0xe0);
        EXPECT(gbc.readMem(0xd18c), 0xb9);
        EXPECT(gbc.readMem(0xffb9), 0x8b);
        // E0 036E
        gbc.setState(0x7d3c, 0x14f, 0x1ec0, 0x6ff6, 0x32ae, 0x55f3, 0x0, 0x0);
        gbc.writeMem(0x7d3c, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x14f);
        EXPECT(gbc.pc(), 0x7d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff52), 0x1e);
        // E0 036F
        gbc.setState(0x6be5, 0xc24e, 0xf680, 0xc70e, 0x2e25, 0x4f8d, 0x0, 0x1);
        gbc.writeMem(0x6be5, { 0xe0, 0x66 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc24e);
        EXPECT(gbc.pc(), 0x6be7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff66), 0xf6);
        // E0 0370
        gbc.setState(0x3fb3, 0x6f62, 0x9570, 0xbe07, 0x4297, 0x849c, 0x1, 0x0);
        gbc.writeMem(0x3fb3, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6f62);
        EXPECT(gbc.pc(), 0x3fb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5f), 0x95);
        // E0 0371
        gbc.setState(0xc2e7, 0xfc2e, 0xf8b0, 0x3d17, 0x7d13, 0x2827, 0x0, 0x0);
        gbc.writeMem(0xc2e7, { 0xe0, 0x62 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfc2e);
        EXPECT(gbc.pc(), 0xc2e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e7), 0xe0);
        EXPECT(gbc.readMem(0xc2e8), 0x62);
        EXPECT(gbc.readMem(0xff62), 0xf8);
        // E0 0372
        gbc.setState(0x988, 0xfdb2, 0x4f20, 0x4e2a, 0xd4c9, 0xa22e, 0x0, 0x1);
        gbc.writeMem(0x988, { 0xe0, 0xd9 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xfdb2);
        EXPECT(gbc.pc(), 0x98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd9), 0x4f);
        // E0 0373
        gbc.setState(0x10d5, 0x78f4, 0x4330, 0xbf33, 0x2f34, 0xd142, 0x1, 0x1);
        gbc.writeMem(0x10d5, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x78f4);
        EXPECT(gbc.pc(), 0x10d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff48), 0x43);
        // E0 0374
        gbc.setState(0x5ae5, 0x272, 0xc60, 0x61d0, 0x66bc, 0xffe9, 0x0, 0x1);
        gbc.writeMem(0x5ae5, { 0xe0, 0x5 });
        gbc.writeMem(0xff05, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x272);
        EXPECT(gbc.pc(), 0x5ae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff05), 0xc);
        // E0 0375
        gbc.setState(0x340d, 0xb415, 0xb700, 0xb91f, 0x54d1, 0x5d5a, 0x1, 0x0);
        gbc.writeMem(0x340d, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb415);
        EXPECT(gbc.pc(), 0x340f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff31), 0xb7);
        // E0 0376
        gbc.setState(0x51de, 0x5fe, 0xe0a0, 0xf354, 0x3b5a, 0xc562, 0x1, 0x1);
        gbc.writeMem(0x51de, { 0xe0, 0xce });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5fe);
        EXPECT(gbc.pc(), 0x51e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffce), 0xe0);
        // E0 0378
        gbc.setState(0xff4, 0x97c7, 0x1b40, 0xee16, 0xa60d, 0x42c7, 0x0, 0x1);
        gbc.writeMem(0xff4, { 0xe0, 0xf5 });
        gbc.writeMem(0xfff5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x97c7);
        EXPECT(gbc.pc(), 0xff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff5), 0x1b);
        // E0 0379
        gbc.setState(0xec4d, 0xa6e8, 0x8e00, 0x40c, 0x8473, 0x2f00, 0x0, 0x1);
        gbc.writeMem(0xec4d, { 0xe0, 0xdf });
        gbc.writeMem(0xffdf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa6e8);
        EXPECT(gbc.pc(), 0xec4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4d), 0xe0);
        EXPECT(gbc.readMem(0xec4e), 0xdf);
        EXPECT(gbc.readMem(0xffdf), 0x8e);
        // E0 037A
        gbc.setState(0xda97, 0xf627, 0x2e00, 0x43d2, 0x3d4d, 0xfa2e, 0x1, 0x0);
        gbc.writeMem(0xda97, { 0xe0, 0x16 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf627);
        EXPECT(gbc.pc(), 0xda99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda97), 0xe0);
        EXPECT(gbc.readMem(0xda98), 0x16);
        EXPECT(gbc.readMem(0xff16), 0x2e);
        // E0 037B
        gbc.setState(0xa1c3, 0x8b9, 0xa360, 0xe04b, 0x1bd3, 0x84a3, 0x1, 0x1);
        gbc.writeMem(0xa1c3, { 0xe0, 0xbe });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8b9);
        EXPECT(gbc.pc(), 0xa1c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1c3), 0xe0);
        EXPECT(gbc.readMem(0xa1c4), 0xbe);
        EXPECT(gbc.readMem(0xffbe), 0xa3);
        // E0 037C
        gbc.setState(0xa2e9, 0xf480, 0x2e10, 0x9662, 0x3cbf, 0x5907, 0x1, 0x1);
        gbc.writeMem(0xa2e9, { 0xe0, 0x37 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf480);
        EXPECT(gbc.pc(), 0xa2eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e9), 0xe0);
        EXPECT(gbc.readMem(0xa2ea), 0x37);
        EXPECT(gbc.readMem(0xff37), 0x2e);
        // E0 037D
        gbc.setState(0xb5e7, 0xd883, 0xa650, 0xd352, 0x7b5e, 0xf6ee, 0x1, 0x0);
        gbc.writeMem(0xb5e7, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd883);
        EXPECT(gbc.pc(), 0xb5e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5e7), 0xe0);
        EXPECT(gbc.readMem(0xb5e8), 0x27);
        EXPECT(gbc.readMem(0xff27), 0xa6);
        // E0 037E
        gbc.setState(0x36d1, 0x8cc6, 0x4480, 0xc6a, 0x5268, 0xced4, 0x1, 0x1);
        gbc.writeMem(0x36d1, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8cc6);
        EXPECT(gbc.pc(), 0x36d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9f), 0x44);
        // E0 037F
        gbc.setState(0x3bea, 0xfe90, 0xc800, 0x7884, 0xbbea, 0xca3f, 0x0, 0x0);
        gbc.writeMem(0x3bea, { 0xe0, 0x3d });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xfe90);
        EXPECT(gbc.pc(), 0x3bec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3d), 0xc8);
        // E0 0380
        gbc.setState(0xc60d, 0x450f, 0x2170, 0x5edb, 0xb743, 0x67ac, 0x1, 0x0);
        gbc.writeMem(0xc60d, { 0xe0, 0x95 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x450f);
        EXPECT(gbc.pc(), 0xc60f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc60d), 0xe0);
        EXPECT(gbc.readMem(0xc60e), 0x95);
        EXPECT(gbc.readMem(0xff95), 0x21);
        // E0 0381
        gbc.setState(0x1547, 0x1c62, 0xef40, 0x7366, 0xd60e, 0x2d89, 0x0, 0x1);
        gbc.writeMem(0x1547, { 0xe0, 0x39 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1c62);
        EXPECT(gbc.pc(), 0x1549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff39), 0xef);
        // E0 0382
        gbc.setState(0x2dcb, 0x657a, 0x6040, 0x8711, 0x16b0, 0x30ea, 0x0, 0x1);
        gbc.writeMem(0x2dcb, { 0xe0, 0xef });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x657a);
        EXPECT(gbc.pc(), 0x2dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffef), 0x60);
        // E0 0383
        gbc.setState(0xb463, 0x79ad, 0x3970, 0xa879, 0x3efa, 0x557a, 0x0, 0x1);
        gbc.writeMem(0xb463, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x79ad);
        EXPECT(gbc.pc(), 0xb465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb463), 0xe0);
        EXPECT(gbc.readMem(0xb464), 0xc0);
        EXPECT(gbc.readMem(0xffc0), 0x39);
        // E0 0384
        gbc.setState(0x3fff, 0xe0df, 0x1b90, 0x64e9, 0x83f9, 0x23d7, 0x1, 0x1);
        gbc.writeMem(0x3fff, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe0df);
        EXPECT(gbc.pc(), 0x4001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb8), 0x1b);
        // E0 0385
        gbc.setState(0xb21a, 0x9cb, 0x8140, 0x536d, 0x1fcf, 0x231, 0x1, 0x0);
        gbc.writeMem(0xb21a, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9cb);
        EXPECT(gbc.pc(), 0xb21c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21a), 0xe0);
        EXPECT(gbc.readMem(0xb21b), 0x23);
        EXPECT(gbc.readMem(0xff23), 0x81);
        // E0 0386
        gbc.setState(0xe030, 0x92ad, 0x6f80, 0x4073, 0x232, 0x6bee, 0x0, 0x0);
        gbc.writeMem(0xe030, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x92ad);
        EXPECT(gbc.pc(), 0xe032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe030), 0xe0);
        EXPECT(gbc.readMem(0xe031), 0x3);
        EXPECT(gbc.readMem(0xff03), 0x6f);
        // E0 0387
        gbc.setState(0x96a4, 0xda96, 0xfaa0, 0x9977, 0x7da, 0x332, 0x1, 0x0);
        gbc.writeMem(0x96a4, { 0xe0, 0x22 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xda96);
        EXPECT(gbc.pc(), 0x96a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a4), 0xe0);
        EXPECT(gbc.readMem(0x96a5), 0x22);
        EXPECT(gbc.readMem(0xff22), 0xfa);
        // E0 0388
        gbc.setState(0xc876, 0x5faf, 0xb8c0, 0x659e, 0x7b47, 0x5587, 0x1, 0x0);
        gbc.writeMem(0xc876, { 0xe0, 0x1b });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5faf);
        EXPECT(gbc.pc(), 0xc878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc876), 0xe0);
        EXPECT(gbc.readMem(0xc877), 0x1b);
        EXPECT(gbc.readMem(0xff1b), 0xb8);
        // E0 0389
        gbc.setState(0x2bba, 0xe442, 0x7220, 0x5762, 0x1b3d, 0x76b0, 0x1, 0x0);
        gbc.writeMem(0x2bba, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe442);
        EXPECT(gbc.pc(), 0x2bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff23), 0x72);
        // E0 038A
        gbc.setState(0x3f34, 0x54d1, 0x2020, 0xd2b9, 0xbe7f, 0x52c8, 0x0, 0x1);
        gbc.writeMem(0x3f34, { 0xe0, 0xc2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x54d1);
        EXPECT(gbc.pc(), 0x3f36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc2), 0x20);
        // E0 038B
        gbc.setState(0x925, 0xfcfc, 0x240, 0x1a01, 0x5917, 0x11f4, 0x1, 0x0);
        gbc.writeMem(0x925, { 0xe0, 0x1b });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfcfc);
        EXPECT(gbc.pc(), 0x927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff1b), 0x2);
        // E0 038E
        gbc.setState(0x7eb0, 0xc4a3, 0x92f0, 0x269e, 0xd603, 0x6bfd, 0x0, 0x1);
        gbc.writeMem(0x7eb0, { 0xe0, 0xc3 });
        gbc.writeMem(0xffc3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc4a3);
        EXPECT(gbc.pc(), 0x7eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc3), 0x92);
        // E0 038F
        gbc.setState(0x1459, 0x5623, 0xb6b0, 0x41b8, 0x5ba1, 0x4739, 0x1, 0x1);
        gbc.writeMem(0x1459, { 0xe0, 0x1a });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5623);
        EXPECT(gbc.pc(), 0x145b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1a), 0xb6);
        // E0 0390
        gbc.setState(0x3ddc, 0xfe7a, 0xf0a0, 0x4f4b, 0xd7e5, 0xf50a, 0x1, 0x0);
        gbc.writeMem(0x3ddc, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xfe7a);
        EXPECT(gbc.pc(), 0x3dde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff80), 0xf0);
        // E0 0391
        gbc.setState(0x74b8, 0x673f, 0xecb0, 0x19f6, 0xfd4f, 0xaa83, 0x0, 0x0);
        gbc.writeMem(0x74b8, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x673f);
        EXPECT(gbc.pc(), 0x74ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff07), 0xec);
        // E0 0392
        gbc.setState(0xb4aa, 0x6a5f, 0x56c0, 0x64cc, 0xbeec, 0xfd5d, 0x0, 0x1);
        gbc.writeMem(0xb4aa, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6a5f);
        EXPECT(gbc.pc(), 0xb4ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4aa), 0xe0);
        EXPECT(gbc.readMem(0xb4ab), 0x83);
        EXPECT(gbc.readMem(0xff83), 0x56);
        // E0 0393
        gbc.setState(0xdfc9, 0xb0a8, 0x61c0, 0xbaeb, 0x6ba1, 0x9795, 0x0, 0x0);
        gbc.writeMem(0xdfc9, { 0xe0, 0x47 });
        gbc.writeMem(0xff47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb0a8);
        EXPECT(gbc.pc(), 0xdfcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc9), 0xe0);
        EXPECT(gbc.readMem(0xdfca), 0x47);
        EXPECT(gbc.readMem(0xff47), 0x61);
        // E0 0394
        gbc.setState(0x6e42, 0x9aa6, 0x7c20, 0x176e, 0x7b42, 0x555f, 0x0, 0x0);
        gbc.writeMem(0x6e42, { 0xe0, 0x81 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9aa6);
        EXPECT(gbc.pc(), 0x6e44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff81), 0x7c);
        // E0 0395
        gbc.setState(0x5818, 0x2f9d, 0xd1c0, 0x3bb, 0x67a8, 0x3035, 0x1, 0x1);
        gbc.writeMem(0x5818, { 0xe0, 0x50 });
        gbc.writeMem(0xff50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2f9d);
        EXPECT(gbc.pc(), 0x581a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff50), 0xd1);
        // E0 0396
        gbc.setState(0xbacd, 0x78e9, 0xaa60, 0xed83, 0xa108, 0x937c, 0x0, 0x0);
        gbc.writeMem(0xbacd, { 0xe0, 0xa4 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x78e9);
        EXPECT(gbc.pc(), 0xbacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbacd), 0xe0);
        EXPECT(gbc.readMem(0xbace), 0xa4);
        EXPECT(gbc.readMem(0xffa4), 0xaa);
        // E0 0397
        gbc.setState(0xb7bb, 0xad70, 0x1e00, 0xafa6, 0x108e, 0x5860, 0x0, 0x1);
        gbc.writeMem(0xb7bb, { 0xe0, 0xb9 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xad70);
        EXPECT(gbc.pc(), 0xb7bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7bb), 0xe0);
        EXPECT(gbc.readMem(0xb7bc), 0xb9);
        EXPECT(gbc.readMem(0xffb9), 0x1e);
        // E0 0398
        gbc.setState(0xbea9, 0xca4, 0xdf70, 0x815c, 0xcd10, 0x5d56, 0x0, 0x1);
        gbc.writeMem(0xbea9, { 0xe0, 0x1e });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xca4);
        EXPECT(gbc.pc(), 0xbeab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea9), 0xe0);
        EXPECT(gbc.readMem(0xbeaa), 0x1e);
        EXPECT(gbc.readMem(0xff1e), 0xdf);
        // E0 0399
        gbc.setState(0xc23d, 0xc29e, 0xb9b0, 0x266, 0x7f00, 0x49fb, 0x1, 0x0);
        gbc.writeMem(0xc23d, { 0xe0, 0xf4 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc29e);
        EXPECT(gbc.pc(), 0xc23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc23d), 0xe0);
        EXPECT(gbc.readMem(0xc23e), 0xf4);
        EXPECT(gbc.readMem(0xfff4), 0xb9);
        // E0 039A
        gbc.setState(0xd3c0, 0x727b, 0xd100, 0xd75d, 0xc69, 0x5f66, 0x0, 0x1);
        gbc.writeMem(0xd3c0, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x727b);
        EXPECT(gbc.pc(), 0xd3c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c0), 0xe0);
        EXPECT(gbc.readMem(0xd3c1), 0xd0);
        EXPECT(gbc.readMem(0xffd0), 0xd1);
        // E0 039B
        gbc.setState(0xc190, 0x14, 0x5d30, 0xdaa2, 0x7091, 0xf8d2, 0x0, 0x0);
        gbc.writeMem(0xc190, { 0xe0, 0x40 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x14);
        EXPECT(gbc.pc(), 0xc192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc190), 0xe0);
        EXPECT(gbc.readMem(0xc191), 0x40);
        EXPECT(gbc.readMem(0xff40), 0x5d);
        // E0 039C
        gbc.setState(0x977e, 0x7439, 0xead0, 0xd142, 0xf8b0, 0xa439, 0x1, 0x1);
        gbc.writeMem(0x977e, { 0xe0, 0xcd });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7439);
        EXPECT(gbc.pc(), 0x9780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x977e), 0xe0);
        EXPECT(gbc.readMem(0x977f), 0xcd);
        EXPECT(gbc.readMem(0xffcd), 0xea);
        // E0 039D
        gbc.setState(0xbd40, 0x978a, 0x69b0, 0x6923, 0x8c87, 0x2403, 0x0, 0x1);
        gbc.writeMem(0xbd40, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x978a);
        EXPECT(gbc.pc(), 0xbd42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd40), 0xe0);
        EXPECT(gbc.readMem(0xbd41), 0x9e);
        EXPECT(gbc.readMem(0xff9e), 0x69);
        // E0 039E
        gbc.setState(0xb58, 0x528a, 0xd090, 0xc201, 0x40bb, 0x28e6, 0x1, 0x1);
        gbc.writeMem(0xb58, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x528a);
        EXPECT(gbc.pc(), 0xb5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff03), 0xd0);
        // E0 039F
        gbc.setState(0x5a4b, 0xce01, 0xb0, 0xd7d6, 0x4a56, 0xe14c, 0x1, 0x0);
        gbc.writeMem(0x5a4b, { 0xe0, 0x1a });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xce01);
        EXPECT(gbc.pc(), 0x5a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1a), 0x0);
        // E0 03A0
        gbc.setState(0x7e97, 0x325f, 0xed90, 0x39b, 0x6daf, 0xab56, 0x1, 0x0);
        gbc.writeMem(0x7e97, { 0xe0, 0x4d });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x325f);
        EXPECT(gbc.pc(), 0x7e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4d), 0xed);
        // E0 03A1
        gbc.setState(0x18e9, 0xbf36, 0xe060, 0x74ad, 0xaf71, 0xc6cc, 0x1, 0x1);
        gbc.writeMem(0x18e9, { 0xe0, 0x1f });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbf36);
        EXPECT(gbc.pc(), 0x18eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff1f), 0xe0);
        // E0 03A2
        gbc.setState(0x6b92, 0xe08d, 0x2b10, 0xad40, 0x7e83, 0xe7b3, 0x1, 0x0);
        gbc.writeMem(0x6b92, { 0xe0, 0x3e });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe08d);
        EXPECT(gbc.pc(), 0x6b94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff3e), 0x2b);
        // E0 03A4
        gbc.setState(0x89c0, 0x38a6, 0x1af0, 0x9625, 0x84f2, 0x3fbe, 0x1, 0x1);
        gbc.writeMem(0x89c0, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x38a6);
        EXPECT(gbc.pc(), 0x89c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89c0), 0xe0);
        EXPECT(gbc.readMem(0x89c1), 0x80);
        EXPECT(gbc.readMem(0xff80), 0x1a);
        // E0 03A5
        gbc.setState(0xa1da, 0x18d8, 0x5220, 0xda13, 0xb8f0, 0xc0f6, 0x0, 0x0);
        gbc.writeMem(0xa1da, { 0xe0, 0x41 });
        gbc.writeMem(0xff41, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x18d8);
        EXPECT(gbc.pc(), 0xa1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1da), 0xe0);
        EXPECT(gbc.readMem(0xa1db), 0x41);
        EXPECT(gbc.readMem(0xff41), 0x52);
        // E0 03A6
        gbc.setState(0xe237, 0xa375, 0x37a0, 0xbc85, 0xdb00, 0xe187, 0x1, 0x0);
        gbc.writeMem(0xe237, { 0xe0, 0x84 });
        gbc.writeMem(0xff84, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa375);
        EXPECT(gbc.pc(), 0xe239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe237), 0xe0);
        EXPECT(gbc.readMem(0xe238), 0x84);
        EXPECT(gbc.readMem(0xff84), 0x37);
        // E0 03A7
        gbc.setState(0xcb91, 0x20f9, 0x73b0, 0xa169, 0xc756, 0xd5b1, 0x1, 0x1);
        gbc.writeMem(0xcb91, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x20f9);
        EXPECT(gbc.pc(), 0xcb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb91), 0xe0);
        EXPECT(gbc.readMem(0xcb92), 0x9a);
        EXPECT(gbc.readMem(0xff9a), 0x73);
        // E0 03A8
        gbc.setState(0x70f2, 0xf58b, 0x2b60, 0x8a1c, 0x73a7, 0x8288, 0x1, 0x0);
        gbc.writeMem(0x70f2, { 0xe0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf58b);
        EXPECT(gbc.pc(), 0x70f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc9), 0x2b);
        // E0 03A9
        gbc.setState(0xa77a, 0xb42b, 0x870, 0x18ed, 0xbed1, 0x2c10, 0x1, 0x0);
        gbc.writeMem(0xa77a, { 0xe0, 0x2e });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb42b);
        EXPECT(gbc.pc(), 0xa77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa77a), 0xe0);
        EXPECT(gbc.readMem(0xa77b), 0x2e);
        EXPECT(gbc.readMem(0xff2e), 0x8);
        // E0 03AA
        gbc.setState(0xd696, 0x935, 0xd3f0, 0x8e4a, 0x1efd, 0x66ef, 0x1, 0x1);
        gbc.writeMem(0xd696, { 0xe0, 0x8 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x935);
        EXPECT(gbc.pc(), 0xd698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd696), 0xe0);
        EXPECT(gbc.readMem(0xd697), 0x8);
        EXPECT(gbc.readMem(0xff08), 0xd3);
        // E0 03AB
        gbc.setState(0x7bc3, 0x9727, 0x76f0, 0x223f, 0x59b5, 0x83f7, 0x1, 0x1);
        gbc.writeMem(0x7bc3, { 0xe0, 0x66 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9727);
        EXPECT(gbc.pc(), 0x7bc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff66), 0x76);
        // E0 03AC
        gbc.setState(0xef6, 0xac63, 0x9b10, 0x7b41, 0x2bf, 0x33e7, 0x1, 0x0);
        gbc.writeMem(0xef6, { 0xe0, 0x2b });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xac63);
        EXPECT(gbc.pc(), 0xef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2b), 0x9b);
        // E0 03AE
        gbc.setState(0xd40b, 0x5bda, 0x4910, 0xb672, 0x9a60, 0x97db, 0x1, 0x1);
        gbc.writeMem(0xd40b, { 0xe0, 0x28 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5bda);
        EXPECT(gbc.pc(), 0xd40d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd40b), 0xe0);
        EXPECT(gbc.readMem(0xd40c), 0x28);
        EXPECT(gbc.readMem(0xff28), 0x49);
        // E0 03AF
        gbc.setState(0xc43c, 0xcf66, 0x7290, 0x4259, 0xe78c, 0xa202, 0x1, 0x1);
        gbc.writeMem(0xc43c, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcf66);
        EXPECT(gbc.pc(), 0xc43e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc43c), 0xe0);
        EXPECT(gbc.readMem(0xc43d), 0x7);
        EXPECT(gbc.readMem(0xff07), 0x72);
        // E0 03B0
        gbc.setState(0xb2bf, 0xa9d8, 0xc910, 0x968b, 0xbd40, 0x80bf, 0x1, 0x1);
        gbc.writeMem(0xb2bf, { 0xe0, 0x90 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa9d8);
        EXPECT(gbc.pc(), 0xb2c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2bf), 0xe0);
        EXPECT(gbc.readMem(0xb2c0), 0x90);
        EXPECT(gbc.readMem(0xff90), 0xc9);
        // E0 03B1
        gbc.setState(0x2dc3, 0x69b6, 0x9b30, 0xe74c, 0x1daf, 0xa0de, 0x0, 0x1);
        gbc.writeMem(0x2dc3, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x69b6);
        EXPECT(gbc.pc(), 0x2dc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9e), 0x9b);
        // E0 03B2
        gbc.setState(0xdfcc, 0xbb59, 0x6050, 0x40ec, 0x7c8a, 0x398c, 0x1, 0x1);
        gbc.writeMem(0xdfcc, { 0xe0, 0xf4 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbb59);
        EXPECT(gbc.pc(), 0xdfce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfcc), 0xe0);
        EXPECT(gbc.readMem(0xdfcd), 0xf4);
        EXPECT(gbc.readMem(0xfff4), 0x60);
        // E0 03B3
        gbc.setState(0x1d0b, 0x93e9, 0x4c0, 0xb146, 0x3a18, 0xa60b, 0x1, 0x1);
        gbc.writeMem(0x1d0b, { 0xe0, 0xed });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x93e9);
        EXPECT(gbc.pc(), 0x1d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffed), 0x4);
        // E0 03B4
        gbc.setState(0x3e51, 0xe64b, 0xe540, 0x7ff7, 0xc332, 0x24b5, 0x0, 0x1);
        gbc.writeMem(0x3e51, { 0xe0, 0x8e });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe64b);
        EXPECT(gbc.pc(), 0x3e53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8e), 0xe5);
        // E0 03B5
        gbc.setState(0x5106, 0x86c8, 0xe280, 0xada9, 0xbcf, 0x81c7, 0x1, 0x0);
        gbc.writeMem(0x5106, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x86c8);
        EXPECT(gbc.pc(), 0x5108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff68), 0xe2);
        // E0 03B6
        gbc.setState(0x4d, 0xe3cd, 0x5040, 0xe221, 0x85ee, 0xa518, 0x1, 0x1);
        gbc.writeMem(0x4d, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe3cd);
        EXPECT(gbc.pc(), 0x4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5e), 0x50);
        // E0 03B7
        gbc.setState(0xc249, 0xd937, 0x86f0, 0x4871, 0x9ae1, 0x4b6f, 0x1, 0x1);
        gbc.writeMem(0xc249, { 0xe0, 0x7b });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd937);
        EXPECT(gbc.pc(), 0xc24b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc249), 0xe0);
        EXPECT(gbc.readMem(0xc24a), 0x7b);
        EXPECT(gbc.readMem(0xff7b), 0x86);
        // E0 03B8
        gbc.setState(0xe62c, 0xf11b, 0x1250, 0xbe94, 0xcdff, 0x39cc, 0x1, 0x1);
        gbc.writeMem(0xe62c, { 0xe0, 0x2c });
        gbc.writeMem(0xff2c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf11b);
        EXPECT(gbc.pc(), 0xe62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62c), 0xe0);
        EXPECT(gbc.readMem(0xe62d), 0x2c);
        EXPECT(gbc.readMem(0xff2c), 0x12);
        // E0 03B9
        gbc.setState(0xc393, 0xc08f, 0x5b10, 0xe400, 0xb6e2, 0xabb5, 0x0, 0x0);
        gbc.writeMem(0xc393, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc08f);
        EXPECT(gbc.pc(), 0xc395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc393), 0xe0);
        EXPECT(gbc.readMem(0xc394), 0xad);
        EXPECT(gbc.readMem(0xffad), 0x5b);
        // E0 03BA
        gbc.setState(0x241, 0xfba4, 0x3ed0, 0xde77, 0x3ec4, 0xafa3, 0x1, 0x0);
        gbc.writeMem(0x241, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfba4);
        EXPECT(gbc.pc(), 0x243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffad), 0x3e);
        // E0 03BB
        gbc.setState(0xd084, 0xb5c, 0xf2a0, 0x7a5d, 0x1a7f, 0xcff8, 0x0, 0x0);
        gbc.writeMem(0xd084, { 0xe0, 0x36 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb5c);
        EXPECT(gbc.pc(), 0xd086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd084), 0xe0);
        EXPECT(gbc.readMem(0xd085), 0x36);
        EXPECT(gbc.readMem(0xff36), 0xf2);
        // E0 03BC
        gbc.setState(0x24e0, 0xf6d4, 0x5340, 0x583d, 0x1de7, 0x276, 0x1, 0x0);
        gbc.writeMem(0x24e0, { 0xe0, 0x30 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf6d4);
        EXPECT(gbc.pc(), 0x24e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff30), 0x53);
        // E0 03BD
        gbc.setState(0x939d, 0xc1ae, 0x7d40, 0xbb6a, 0x6448, 0xadd6, 0x0, 0x0);
        gbc.writeMem(0x939d, { 0xe0, 0x92 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc1ae);
        EXPECT(gbc.pc(), 0x939f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939d), 0xe0);
        EXPECT(gbc.readMem(0x939e), 0x92);
        EXPECT(gbc.readMem(0xff92), 0x7d);
        // E0 03BE
        gbc.setState(0x5bf3, 0x6f23, 0xd640, 0x63ec, 0x9d6e, 0x8bde, 0x0, 0x0);
        gbc.writeMem(0x5bf3, { 0xe0, 0x89 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6f23);
        EXPECT(gbc.pc(), 0x5bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff89), 0xd6);
        // E0 03BF
        gbc.setState(0xdbb6, 0x53db, 0xb100, 0xe6ff, 0xf3fa, 0x80a0, 0x1, 0x0);
        gbc.writeMem(0xdbb6, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x53db);
        EXPECT(gbc.pc(), 0xdbb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbb6), 0xe0);
        EXPECT(gbc.readMem(0xdbb7), 0x35);
        EXPECT(gbc.readMem(0xff35), 0xb1);
        // E0 03C0
        gbc.setState(0x31cc, 0x3209, 0x6d20, 0x6f73, 0xfd25, 0x9866, 0x1, 0x1);
        gbc.writeMem(0x31cc, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3209);
        EXPECT(gbc.pc(), 0x31ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff83), 0x6d);
        // E0 03C1
        gbc.setState(0xeeaf, 0x7ce1, 0xa770, 0xe53f, 0x1074, 0x4123, 0x1, 0x0);
        gbc.writeMem(0xeeaf, { 0xe0, 0xfe });
        gbc.writeMem(0xfffe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7ce1);
        EXPECT(gbc.pc(), 0xeeb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeaf), 0xe0);
        EXPECT(gbc.readMem(0xeeb0), 0xfe);
        EXPECT(gbc.readMem(0xfffe), 0xa7);
        // E0 03C2
        gbc.setState(0x6307, 0x9d9e, 0x3100, 0x808f, 0x65d9, 0xfe5b, 0x0, 0x0);
        gbc.writeMem(0x6307, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9d9e);
        EXPECT(gbc.pc(), 0x6309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff80), 0x31);
        // E0 03C4
        gbc.setState(0x9e01, 0x8339, 0xa060, 0x7264, 0x7769, 0x6b4d, 0x0, 0x1);
        gbc.writeMem(0x9e01, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8339);
        EXPECT(gbc.pc(), 0x9e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e01), 0xe0);
        EXPECT(gbc.readMem(0x9e02), 0x52);
        EXPECT(gbc.readMem(0xff52), 0xa0);
        // E0 03C5
        gbc.setState(0xc205, 0xef25, 0x7900, 0x30ea, 0xb0ba, 0xa130, 0x0, 0x1);
        gbc.writeMem(0xc205, { 0xe0, 0xf2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xef25);
        EXPECT(gbc.pc(), 0xc207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc205), 0xe0);
        EXPECT(gbc.readMem(0xc206), 0xf2);
        EXPECT(gbc.readMem(0xfff2), 0x79);
        // E0 03C6
        gbc.setState(0x2185, 0xf868, 0xafb0, 0x4180, 0x6907, 0xa4c0, 0x1, 0x1);
        gbc.writeMem(0x2185, { 0xe0, 0x2c });
        gbc.writeMem(0xff2c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf868);
        EXPECT(gbc.pc(), 0x2187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2c), 0xaf);
        // E0 03C7
        gbc.setState(0x4b35, 0x5846, 0x8dc0, 0x87f, 0x2350, 0x37ed, 0x0, 0x1);
        gbc.writeMem(0x4b35, { 0xe0, 0xfc });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5846);
        EXPECT(gbc.pc(), 0x4b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfffc), 0x8d);
        // E0 03C9
        gbc.setState(0x75c1, 0xa1ea, 0xb9d0, 0x253a, 0x4038, 0x88a3, 0x1, 0x1);
        gbc.writeMem(0x75c1, { 0xe0, 0x7b });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa1ea);
        EXPECT(gbc.pc(), 0x75c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7b), 0xb9);
        // E0 03CA
        gbc.setState(0xc545, 0xf206, 0x1710, 0x8454, 0x2683, 0x5b21, 0x0, 0x1);
        gbc.writeMem(0xc545, { 0xe0, 0x26 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf206);
        EXPECT(gbc.pc(), 0xc547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc545), 0xe0);
        EXPECT(gbc.readMem(0xc546), 0x26);
        EXPECT(gbc.readMem(0xff26), 0x17);
        // E0 03CB
        gbc.setState(0xd017, 0xaa41, 0x1950, 0xa88d, 0xc67f, 0xd3e4, 0x0, 0x0);
        gbc.writeMem(0xd017, { 0xe0, 0x40 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xaa41);
        EXPECT(gbc.pc(), 0xd019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd017), 0xe0);
        EXPECT(gbc.readMem(0xd018), 0x40);
        EXPECT(gbc.readMem(0xff40), 0x19);
        // E0 03CC
        gbc.setState(0xdcf0, 0x5ad1, 0x4410, 0x26d0, 0xeee0, 0xf9e4, 0x1, 0x1);
        gbc.writeMem(0xdcf0, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5ad1);
        EXPECT(gbc.pc(), 0xdcf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf0), 0xe0);
        EXPECT(gbc.readMem(0xdcf1), 0x3);
        EXPECT(gbc.readMem(0xff03), 0x44);
        // E0 03CD
        gbc.setState(0x25e5, 0xdf3c, 0x6ba0, 0xfd12, 0x7a6c, 0xa5b3, 0x1, 0x1);
        gbc.writeMem(0x25e5, { 0xe0, 0x14 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xdf3c);
        EXPECT(gbc.pc(), 0x25e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff14), 0x6b);
        // E0 03CE
        gbc.setState(0x936f, 0xb089, 0x2410, 0x27b5, 0x6abd, 0x7e6c, 0x0, 0x0);
        gbc.writeMem(0x936f, { 0xe0, 0xae });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb089);
        EXPECT(gbc.pc(), 0x9371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x936f), 0xe0);
        EXPECT(gbc.readMem(0x9370), 0xae);
        EXPECT(gbc.readMem(0xffae), 0x24);
        // E0 03CF
        gbc.setState(0xafd7, 0x9703, 0xcc30, 0x3d09, 0xe8e8, 0xd8d1, 0x0, 0x0);
        gbc.writeMem(0xafd7, { 0xe0, 0xc4 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9703);
        EXPECT(gbc.pc(), 0xafd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd7), 0xe0);
        EXPECT(gbc.readMem(0xafd8), 0xc4);
        EXPECT(gbc.readMem(0xffc4), 0xcc);
        // E0 03D0
        gbc.setState(0xd28c, 0xa506, 0x4630, 0xa5c5, 0x359b, 0x8059, 0x1, 0x0);
        gbc.writeMem(0xd28c, { 0xe0, 0x72 });
        gbc.writeMem(0xff72, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa506);
        EXPECT(gbc.pc(), 0xd28e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd28c), 0xe0);
        EXPECT(gbc.readMem(0xd28d), 0x72);
        EXPECT(gbc.readMem(0xff72), 0x46);
        // E0 03D1
        gbc.setState(0xeb88, 0x14ca, 0x390, 0x1c98, 0xeb42, 0x71ee, 0x0, 0x1);
        gbc.writeMem(0xeb88, { 0xe0, 0xf2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x14ca);
        EXPECT(gbc.pc(), 0xeb8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb88), 0xe0);
        EXPECT(gbc.readMem(0xeb89), 0xf2);
        EXPECT(gbc.readMem(0xfff2), 0x3);
        // E0 03D2
        gbc.setState(0x53d, 0x6ad3, 0xb010, 0xa1bc, 0x5e60, 0x5937, 0x1, 0x0);
        gbc.writeMem(0x53d, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6ad3);
        EXPECT(gbc.pc(), 0x53f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff31), 0xb0);
        // E0 03D3
        gbc.setState(0xbc08, 0x737b, 0xcc50, 0x5f88, 0x4848, 0x19d7, 0x0, 0x0);
        gbc.writeMem(0xbc08, { 0xe0, 0xac });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x737b);
        EXPECT(gbc.pc(), 0xbc0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc08), 0xe0);
        EXPECT(gbc.readMem(0xbc09), 0xac);
        EXPECT(gbc.readMem(0xffac), 0xcc);
        // E0 03D4
        gbc.setState(0x93f6, 0xae9f, 0x6ae0, 0xc340, 0x8905, 0x68ac, 0x0, 0x1);
        gbc.writeMem(0x93f6, { 0xe0, 0xac });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xae9f);
        EXPECT(gbc.pc(), 0x93f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f6), 0xe0);
        EXPECT(gbc.readMem(0x93f7), 0xac);
        EXPECT(gbc.readMem(0xffac), 0x6a);
        // E0 03D5
        gbc.setState(0x5b4e, 0xf876, 0xd070, 0xadcf, 0xd34f, 0x4818, 0x1, 0x1);
        gbc.writeMem(0x5b4e, { 0xe0, 0xd3 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf876);
        EXPECT(gbc.pc(), 0x5b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd3), 0xd0);
        // E0 03D6
        gbc.setState(0x7a09, 0xe791, 0xbb00, 0xaa6c, 0xd1ce, 0xeb48, 0x1, 0x0);
        gbc.writeMem(0x7a09, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe791);
        EXPECT(gbc.pc(), 0x7a0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0e), 0xbb);
        // E0 03D7
        gbc.setState(0x92c7, 0xce65, 0xd240, 0x601d, 0xd63d, 0x3b50, 0x1, 0x0);
        gbc.writeMem(0x92c7, { 0xe0, 0x43 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xce65);
        EXPECT(gbc.pc(), 0x92c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c7), 0xe0);
        EXPECT(gbc.readMem(0x92c8), 0x43);
        EXPECT(gbc.readMem(0xff43), 0xd2);
        // E0 03D8
        gbc.setState(0x983d, 0x150a, 0x9b80, 0x1b7, 0xd4b9, 0xd896, 0x0, 0x0);
        gbc.writeMem(0x983d, { 0xe0, 0xd8 });
        gbc.writeMem(0xffd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x150a);
        EXPECT(gbc.pc(), 0x983f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x983d), 0xe0);
        EXPECT(gbc.readMem(0x983e), 0xd8);
        EXPECT(gbc.readMem(0xffd8), 0x9b);
        // E0 03D9
        gbc.setState(0x48e8, 0x2c4f, 0xd050, 0xde85, 0xfdfd, 0x9fb4, 0x0, 0x0);
        gbc.writeMem(0x48e8, { 0xe0, 0x2c });
        gbc.writeMem(0xff2c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2c4f);
        EXPECT(gbc.pc(), 0x48ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2c), 0xd0);
        // E0 03DA
        gbc.setState(0x5593, 0x8d2b, 0xdb30, 0x5ea9, 0x411b, 0x1f7d, 0x1, 0x1);
        gbc.writeMem(0x5593, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8d2b);
        EXPECT(gbc.pc(), 0x5595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc0), 0xdb);
        // E0 03DB
        gbc.setState(0xb30c, 0x5ee9, 0xc720, 0xd185, 0x80f2, 0x21e5, 0x1, 0x1);
        gbc.writeMem(0xb30c, { 0xe0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5ee9);
        EXPECT(gbc.pc(), 0xb30e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb30c), 0xe0);
        EXPECT(gbc.readMem(0xb30d), 0xc8);
        EXPECT(gbc.readMem(0xffc8), 0xc7);
        // E0 03DC
        gbc.setState(0xa419, 0x3b23, 0x2c90, 0xe446, 0xc07f, 0xdc8d, 0x1, 0x1);
        gbc.writeMem(0xa419, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3b23);
        EXPECT(gbc.pc(), 0xa41b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa419), 0xe0);
        EXPECT(gbc.readMem(0xa41a), 0xc0);
        EXPECT(gbc.readMem(0xffc0), 0x2c);
        // E0 03DD
        gbc.setState(0xa755, 0x3474, 0xcdb0, 0x316, 0xfd72, 0x464d, 0x0, 0x1);
        gbc.writeMem(0xa755, { 0xe0, 0xb4 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3474);
        EXPECT(gbc.pc(), 0xa757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa755), 0xe0);
        EXPECT(gbc.readMem(0xa756), 0xb4);
        EXPECT(gbc.readMem(0xffb4), 0xcd);
        // E0 03DE
        gbc.setState(0x14b5, 0xa9ef, 0xcac0, 0xce37, 0x2660, 0x3b12, 0x1, 0x0);
        gbc.writeMem(0x14b5, { 0xe0, 0x5 });
        gbc.writeMem(0xff05, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa9ef);
        EXPECT(gbc.pc(), 0x14b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff05), 0xca);
        // E0 03DF
        gbc.setState(0xcbef, 0xdaf3, 0x6840, 0x1bcb, 0x4b68, 0xccc5, 0x1, 0x0);
        gbc.writeMem(0xcbef, { 0xe0, 0x32 });
        gbc.writeMem(0xff32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xdaf3);
        EXPECT(gbc.pc(), 0xcbf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbef), 0xe0);
        EXPECT(gbc.readMem(0xcbf0), 0x32);
        EXPECT(gbc.readMem(0xff32), 0x68);
        // E0 03E0
        gbc.setState(0x934c, 0xea6b, 0x7a10, 0x2b21, 0x36b2, 0xc67b, 0x0, 0x0);
        gbc.writeMem(0x934c, { 0xe0, 0x9 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xea6b);
        EXPECT(gbc.pc(), 0x934e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x934c), 0xe0);
        EXPECT(gbc.readMem(0x934d), 0x9);
        EXPECT(gbc.readMem(0xff09), 0x7a);
        // E0 03E1
        gbc.setState(0x8629, 0xc65e, 0x7840, 0x5930, 0x23ff, 0x6e11, 0x0, 0x0);
        gbc.writeMem(0x8629, { 0xe0, 0x4b });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc65e);
        EXPECT(gbc.pc(), 0x862b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8629), 0xe0);
        EXPECT(gbc.readMem(0x862a), 0x4b);
        EXPECT(gbc.readMem(0xff4b), 0x78);
        // E0 03E2
        gbc.setState(0x5ed1, 0xc6d6, 0x2210, 0xc216, 0xd7e9, 0xe71c, 0x1, 0x0);
        gbc.writeMem(0x5ed1, { 0xe0, 0xcd });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc6d6);
        EXPECT(gbc.pc(), 0x5ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffcd), 0x22);
        // E0 03E3
        gbc.setState(0xbcc4, 0x874d, 0xa140, 0x6d89, 0x96e0, 0x99a6, 0x0, 0x0);
        gbc.writeMem(0xbcc4, { 0xe0, 0x30 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x874d);
        EXPECT(gbc.pc(), 0xbcc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc4), 0xe0);
        EXPECT(gbc.readMem(0xbcc5), 0x30);
        EXPECT(gbc.readMem(0xff30), 0xa1);
        // E0 03E5
        gbc.setState(0x6940, 0xee6e, 0xc260, 0xb0ae, 0x2b60, 0xfb09, 0x1, 0x0);
        gbc.writeMem(0x6940, { 0xe0, 0x12 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xee6e);
        EXPECT(gbc.pc(), 0x6942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff12), 0xc2);
        // E0 03E6
        gbc.setState(0xb4f0, 0x7eb8, 0x300, 0x73ba, 0x354, 0x26e, 0x0, 0x1);
        gbc.writeMem(0xb4f0, { 0xe0, 0x50 });
        gbc.writeMem(0xff50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7eb8);
        EXPECT(gbc.pc(), 0xb4f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f0), 0xe0);
        EXPECT(gbc.readMem(0xb4f1), 0x50);
        EXPECT(gbc.readMem(0xff50), 0x3);
    }
}
#endif
