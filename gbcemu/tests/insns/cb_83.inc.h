    TEST(gbcemu, opcode_cb_83) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 83 0001
        gbc.setState(0x536b, 0x1988, 0x7bd0, 0xa9bf, 0x1e75, 0xafc2, 0x1, 0x0);
        gbc.writeMem(0x536b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1988);
        EXPECT(gbc.pc(), 0x536d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0002
        gbc.setState(0x513d, 0xb8b, 0x8eb0, 0x761, 0xdda7, 0x8879, 0x0, 0x0);
        gbc.writeMem(0x513d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb8b);
        EXPECT(gbc.pc(), 0x513f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0003
        gbc.setState(0x7038, 0x6530, 0x8a80, 0x80dc, 0xf40f, 0xb5d6, 0x1, 0x1);
        gbc.writeMem(0x7038, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6530);
        EXPECT(gbc.pc(), 0x703a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0004
        gbc.setState(0x4e86, 0x1f78, 0x50d0, 0xbf03, 0xc94d, 0xfb7c, 0x0, 0x0);
        gbc.writeMem(0x4e86, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1f78);
        EXPECT(gbc.pc(), 0x4e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0005
        gbc.setState(0x5ddf, 0xfed8, 0x7450, 0xc4a9, 0xfe91, 0xdf4, 0x0, 0x0);
        gbc.writeMem(0x5ddf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfed8);
        EXPECT(gbc.pc(), 0x5de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0006
        gbc.setState(0x7d4d, 0x3d31, 0x7290, 0xde1e, 0xa802, 0xf25f, 0x0, 0x0);
        gbc.writeMem(0x7d4d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3d31);
        EXPECT(gbc.pc(), 0x7d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0007
        gbc.setState(0x1fd9, 0xa8cf, 0x3f60, 0x3a21, 0x6578, 0xa545, 0x1, 0x0);
        gbc.writeMem(0x1fd9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa8cf);
        EXPECT(gbc.pc(), 0x1fdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0008
        gbc.setState(0xaac0, 0xf1a2, 0x8050, 0xc8f, 0xb6ea, 0xec9f, 0x0, 0x0);
        gbc.writeMem(0xaac0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf1a2);
        EXPECT(gbc.pc(), 0xaac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaac0), 0xcb);
        EXPECT(gbc.readMem(0xaac1), 0x83);
        // CB 83 0009
        gbc.setState(0xdb45, 0x2ce3, 0x4930, 0x8474, 0xefcf, 0xcf18, 0x0, 0x0);
        gbc.writeMem(0xdb45, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2ce3);
        EXPECT(gbc.pc(), 0xdb47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb45), 0xcb);
        EXPECT(gbc.readMem(0xdb46), 0x83);
        // CB 83 000A
        gbc.setState(0xb01d, 0xb100, 0x7e30, 0xfd31, 0x4bf3, 0xf5da, 0x0, 0x0);
        gbc.writeMem(0xb01d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb100);
        EXPECT(gbc.pc(), 0xb01f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb01d), 0xcb);
        EXPECT(gbc.readMem(0xb01e), 0x83);
        // CB 83 000B
        gbc.setState(0x557b, 0x460d, 0xcb90, 0xbd6b, 0x58ea, 0x76c4, 0x1, 0x0);
        gbc.writeMem(0x557b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x460d);
        EXPECT(gbc.pc(), 0x557d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 000C
        gbc.setState(0x8fcf, 0x902a, 0xe830, 0x629c, 0xf377, 0xd214, 0x0, 0x0);
        gbc.writeMem(0x8fcf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x902a);
        EXPECT(gbc.pc(), 0x8fd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fcf), 0xcb);
        EXPECT(gbc.readMem(0x8fd0), 0x83);
        // CB 83 000D
        gbc.setState(0x6838, 0x457c, 0xce80, 0x6afe, 0x4f20, 0x4745, 0x0, 0x1);
        gbc.writeMem(0x6838, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x457c);
        EXPECT(gbc.pc(), 0x683a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 000E
        gbc.setState(0x7d4f, 0xa17c, 0x7700, 0x706f, 0x439d, 0x7e21, 0x1, 0x0);
        gbc.writeMem(0x7d4f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa17c);
        EXPECT(gbc.pc(), 0x7d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0010
        gbc.setState(0x3eae, 0x2dfc, 0xc000, 0xfcf8, 0xf2a5, 0x19b4, 0x0, 0x1);
        gbc.writeMem(0x3eae, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2dfc);
        EXPECT(gbc.pc(), 0x3eb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0011
        gbc.setState(0xa391, 0xfa6d, 0xb6a0, 0x395, 0x13df, 0xf0a0, 0x0, 0x1);
        gbc.writeMem(0xa391, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfa6d);
        EXPECT(gbc.pc(), 0xa393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa391), 0xcb);
        EXPECT(gbc.readMem(0xa392), 0x83);
        // CB 83 0012
        gbc.setState(0x7315, 0x15ba, 0xae00, 0x2d19, 0x4f2d, 0x38c3, 0x1, 0x0);
        gbc.writeMem(0x7315, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x15ba);
        EXPECT(gbc.pc(), 0x7317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0013
        gbc.setState(0x69a5, 0x13f4, 0xb10, 0xc97e, 0x436d, 0x1060, 0x0, 0x1);
        gbc.writeMem(0x69a5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x13f4);
        EXPECT(gbc.pc(), 0x69a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0014
        gbc.setState(0x89d5, 0xc50e, 0x99b0, 0x9adc, 0xa65f, 0x1561, 0x0, 0x1);
        gbc.writeMem(0x89d5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc50e);
        EXPECT(gbc.pc(), 0x89d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d5), 0xcb);
        EXPECT(gbc.readMem(0x89d6), 0x83);
        // CB 83 0016
        gbc.setState(0xcb9, 0xf39e, 0xd640, 0xe2e, 0xc69e, 0x30bc, 0x0, 0x0);
        gbc.writeMem(0xcb9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf39e);
        EXPECT(gbc.pc(), 0xcbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0017
        gbc.setState(0x9564, 0xbcda, 0x7590, 0xa053, 0xb2b5, 0x88c7, 0x1, 0x1);
        gbc.writeMem(0x9564, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbcda);
        EXPECT(gbc.pc(), 0x9566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9564), 0xcb);
        EXPECT(gbc.readMem(0x9565), 0x83);
        // CB 83 0018
        gbc.setState(0xe36e, 0xb0ff, 0xfc80, 0x2f83, 0xfe98, 0x8f2c, 0x1, 0x0);
        gbc.writeMem(0xe36e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb0ff);
        EXPECT(gbc.pc(), 0xe370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe36e), 0xcb);
        EXPECT(gbc.readMem(0xe36f), 0x83);
        // CB 83 0019
        gbc.setState(0x8668, 0xa87b, 0xc8c0, 0x1e2b, 0xba0c, 0x3ae6, 0x0, 0x1);
        gbc.writeMem(0x8668, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa87b);
        EXPECT(gbc.pc(), 0x866a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8668), 0xcb);
        EXPECT(gbc.readMem(0x8669), 0x83);
        // CB 83 001A
        gbc.setState(0xbd0c, 0xa125, 0x6980, 0xf7db, 0xf28, 0x55fa, 0x1, 0x0);
        gbc.writeMem(0xbd0c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa125);
        EXPECT(gbc.pc(), 0xbd0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd0c), 0xcb);
        EXPECT(gbc.readMem(0xbd0d), 0x83);
        // CB 83 001B
        gbc.setState(0xbdae, 0x4473, 0xecc0, 0xf454, 0x3b98, 0xfae7, 0x1, 0x0);
        gbc.writeMem(0xbdae, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4473);
        EXPECT(gbc.pc(), 0xbdb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdae), 0xcb);
        EXPECT(gbc.readMem(0xbdaf), 0x83);
        // CB 83 001C
        gbc.setState(0x228b, 0x84e5, 0x3520, 0x8141, 0x5443, 0x6899, 0x0, 0x1);
        gbc.writeMem(0x228b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x84e5);
        EXPECT(gbc.pc(), 0x228d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 001D
        gbc.setState(0x5468, 0xb375, 0x6480, 0x6eb9, 0xf2a7, 0x86eb, 0x0, 0x0);
        gbc.writeMem(0x5468, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb375);
        EXPECT(gbc.pc(), 0x546a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 001E
        gbc.setState(0xcb01, 0xb9dd, 0xf260, 0x8891, 0x1fc6, 0x8b1f, 0x1, 0x0);
        gbc.writeMem(0xcb01, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb9dd);
        EXPECT(gbc.pc(), 0xcb03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb01), 0xcb);
        EXPECT(gbc.readMem(0xcb02), 0x83);
        // CB 83 001F
        gbc.setState(0xbcfb, 0x76ef, 0xde90, 0x3d33, 0x76dc, 0x8535, 0x1, 0x0);
        gbc.writeMem(0xbcfb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x76ef);
        EXPECT(gbc.pc(), 0xbcfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcfb), 0xcb);
        EXPECT(gbc.readMem(0xbcfc), 0x83);
        // CB 83 0020
        gbc.setState(0x1175, 0xc499, 0x9000, 0xa7c0, 0x17d1, 0x56f2, 0x0, 0x1);
        gbc.writeMem(0x1175, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc499);
        EXPECT(gbc.pc(), 0x1177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0021
        gbc.setState(0xadc0, 0xa95d, 0x1a70, 0x508e, 0x6323, 0x112d, 0x0, 0x1);
        gbc.writeMem(0xadc0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa95d);
        EXPECT(gbc.pc(), 0xadc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc0), 0xcb);
        EXPECT(gbc.readMem(0xadc1), 0x83);
        // CB 83 0022
        gbc.setState(0xb653, 0x7651, 0x1b60, 0xd302, 0x89b8, 0xe82f, 0x1, 0x1);
        gbc.writeMem(0xb653, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7651);
        EXPECT(gbc.pc(), 0xb655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb653), 0xcb);
        EXPECT(gbc.readMem(0xb654), 0x83);
        // CB 83 0023
        gbc.setState(0x79e0, 0xa546, 0x6770, 0x5ff, 0xd35, 0x27df, 0x0, 0x0);
        gbc.writeMem(0x79e0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa546);
        EXPECT(gbc.pc(), 0x79e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0024
        gbc.setState(0x3717, 0xe4ee, 0xd4c0, 0x3cc4, 0x561a, 0x8d5, 0x0, 0x1);
        gbc.writeMem(0x3717, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe4ee);
        EXPECT(gbc.pc(), 0x3719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0026
        gbc.setState(0x3f7, 0x842b, 0xb950, 0x949b, 0x3320, 0xee47, 0x0, 0x1);
        gbc.writeMem(0x3f7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x842b);
        EXPECT(gbc.pc(), 0x3f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0027
        gbc.setState(0x22d2, 0x89c0, 0xe30, 0x53af, 0xff62, 0x7768, 0x0, 0x1);
        gbc.writeMem(0x22d2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x89c0);
        EXPECT(gbc.pc(), 0x22d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0028
        gbc.setState(0x8cca, 0xde9b, 0x33a0, 0xa17e, 0xb40, 0x7a0, 0x1, 0x1);
        gbc.writeMem(0x8cca, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xde9b);
        EXPECT(gbc.pc(), 0x8ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cca), 0xcb);
        EXPECT(gbc.readMem(0x8ccb), 0x83);
        // CB 83 0029
        gbc.setState(0xe1d7, 0x308a, 0x2450, 0xb125, 0x55b7, 0xcdba, 0x0, 0x1);
        gbc.writeMem(0xe1d7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x308a);
        EXPECT(gbc.pc(), 0xe1d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d7), 0xcb);
        EXPECT(gbc.readMem(0xe1d8), 0x83);
        // CB 83 002A
        gbc.setState(0x149e, 0xd97a, 0x8c70, 0x3a03, 0x2ca, 0x4c74, 0x0, 0x1);
        gbc.writeMem(0x149e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd97a);
        EXPECT(gbc.pc(), 0x14a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 002B
        gbc.setState(0xcec1, 0x9336, 0x4a30, 0xaf70, 0x1171, 0x86a5, 0x0, 0x1);
        gbc.writeMem(0xcec1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9336);
        EXPECT(gbc.pc(), 0xcec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcec1), 0xcb);
        EXPECT(gbc.readMem(0xcec2), 0x83);
        // CB 83 002C
        gbc.setState(0x981a, 0x5f94, 0x36e0, 0xd469, 0x703c, 0xad45, 0x0, 0x1);
        gbc.writeMem(0x981a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5f94);
        EXPECT(gbc.pc(), 0x981c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x981a), 0xcb);
        EXPECT(gbc.readMem(0x981b), 0x83);
        // CB 83 002D
        gbc.setState(0x5382, 0x1d48, 0x69d0, 0x8bf8, 0xefd4, 0x3c, 0x0, 0x0);
        gbc.writeMem(0x5382, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1d48);
        EXPECT(gbc.pc(), 0x5384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 002E
        gbc.setState(0x3a13, 0xebae, 0x4710, 0x5e5e, 0xa531, 0x7341, 0x0, 0x1);
        gbc.writeMem(0x3a13, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xebae);
        EXPECT(gbc.pc(), 0x3a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 002F
        gbc.setState(0x486, 0xa89a, 0xe690, 0xe187, 0xa7d7, 0xf22c, 0x1, 0x0);
        gbc.writeMem(0x486, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa89a);
        EXPECT(gbc.pc(), 0x488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0030
        gbc.setState(0xa109, 0x574, 0xbda0, 0x4161, 0xbfe6, 0xdbed, 0x0, 0x1);
        gbc.writeMem(0xa109, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x574);
        EXPECT(gbc.pc(), 0xa10b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa109), 0xcb);
        EXPECT(gbc.readMem(0xa10a), 0x83);
        // CB 83 0031
        gbc.setState(0xe16b, 0x8502, 0x2f60, 0xb68b, 0x9f1b, 0x2793, 0x1, 0x1);
        gbc.writeMem(0xe16b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8502);
        EXPECT(gbc.pc(), 0xe16d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16b), 0xcb);
        EXPECT(gbc.readMem(0xe16c), 0x83);
        // CB 83 0032
        gbc.setState(0x93d4, 0x191c, 0x3bc0, 0xd6a7, 0xa85a, 0xe0a0, 0x1, 0x1);
        gbc.writeMem(0x93d4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x191c);
        EXPECT(gbc.pc(), 0x93d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d4), 0xcb);
        EXPECT(gbc.readMem(0x93d5), 0x83);
        // CB 83 0033
        gbc.setState(0xa966, 0xd62a, 0xfb30, 0xe2af, 0x693f, 0x5fe3, 0x0, 0x0);
        gbc.writeMem(0xa966, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd62a);
        EXPECT(gbc.pc(), 0xa968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa966), 0xcb);
        EXPECT(gbc.readMem(0xa967), 0x83);
        // CB 83 0034
        gbc.setState(0xa736, 0xc0ba, 0xcb80, 0xd48a, 0xda2b, 0x943a, 0x1, 0x0);
        gbc.writeMem(0xa736, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc0ba);
        EXPECT(gbc.pc(), 0xa738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa736), 0xcb);
        EXPECT(gbc.readMem(0xa737), 0x83);
        // CB 83 0035
        gbc.setState(0xb03f, 0xf9c4, 0x2630, 0x1f86, 0x8d2e, 0xffd1, 0x0, 0x0);
        gbc.writeMem(0xb03f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf9c4);
        EXPECT(gbc.pc(), 0xb041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb03f), 0xcb);
        EXPECT(gbc.readMem(0xb040), 0x83);
        // CB 83 0036
        gbc.setState(0x82d4, 0x6aae, 0xb0b0, 0x30ac, 0x31bd, 0xd2a3, 0x1, 0x0);
        gbc.writeMem(0x82d4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6aae);
        EXPECT(gbc.pc(), 0x82d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d4), 0xcb);
        EXPECT(gbc.readMem(0x82d5), 0x83);
        // CB 83 0037
        gbc.setState(0x25f6, 0xac0b, 0xfd10, 0x8058, 0xa1fb, 0x466f, 0x0, 0x0);
        gbc.writeMem(0x25f6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xac0b);
        EXPECT(gbc.pc(), 0x25f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0038
        gbc.setState(0x27fb, 0x44f0, 0xacd0, 0xa6e1, 0x3ab3, 0x9c56, 0x0, 0x1);
        gbc.writeMem(0x27fb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x44f0);
        EXPECT(gbc.pc(), 0x27fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0039
        gbc.setState(0x8c9b, 0x2696, 0xe900, 0x7540, 0xefcc, 0x47e6, 0x1, 0x0);
        gbc.writeMem(0x8c9b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2696);
        EXPECT(gbc.pc(), 0x8c9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9b), 0xcb);
        EXPECT(gbc.readMem(0x8c9c), 0x83);
        // CB 83 003A
        gbc.setState(0x97e2, 0xe70b, 0x5660, 0xa619, 0x77af, 0x996d, 0x0, 0x1);
        gbc.writeMem(0x97e2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe70b);
        EXPECT(gbc.pc(), 0x97e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e2), 0xcb);
        EXPECT(gbc.readMem(0x97e3), 0x83);
        // CB 83 003B
        gbc.setState(0xbbbc, 0x66c1, 0x7080, 0x5fab, 0xdbec, 0xd242, 0x0, 0x0);
        gbc.writeMem(0xbbbc, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x66c1);
        EXPECT(gbc.pc(), 0xbbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbbc), 0xcb);
        EXPECT(gbc.readMem(0xbbbd), 0x83);
        // CB 83 003C
        gbc.setState(0x630e, 0x9533, 0xf170, 0x37e8, 0x8e23, 0x2eae, 0x1, 0x0);
        gbc.writeMem(0x630e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9533);
        EXPECT(gbc.pc(), 0x6310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 003E
        gbc.setState(0xe3b0, 0xda52, 0xcf30, 0xdf58, 0x637d, 0xb9d7, 0x1, 0x1);
        gbc.writeMem(0xe3b0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xda52);
        EXPECT(gbc.pc(), 0xe3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b0), 0xcb);
        EXPECT(gbc.readMem(0xe3b1), 0x83);
        // CB 83 003F
        gbc.setState(0x7a2d, 0x500e, 0xaca0, 0x43f8, 0xdb1b, 0xb015, 0x0, 0x0);
        gbc.writeMem(0x7a2d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x500e);
        EXPECT(gbc.pc(), 0x7a2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0040
        gbc.setState(0xdc74, 0x43b1, 0x69b0, 0x7f26, 0x9d7d, 0xd528, 0x1, 0x0);
        gbc.writeMem(0xdc74, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x43b1);
        EXPECT(gbc.pc(), 0xdc76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc74), 0xcb);
        EXPECT(gbc.readMem(0xdc75), 0x83);
        // CB 83 0041
        gbc.setState(0x3278, 0x8d68, 0x1dc0, 0x3509, 0x4e07, 0x2b12, 0x0, 0x1);
        gbc.writeMem(0x3278, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8d68);
        EXPECT(gbc.pc(), 0x327a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0042
        gbc.setState(0x86e9, 0x11ce, 0xe030, 0x4160, 0x8488, 0xac1c, 0x0, 0x1);
        gbc.writeMem(0x86e9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x11ce);
        EXPECT(gbc.pc(), 0x86eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86e9), 0xcb);
        EXPECT(gbc.readMem(0x86ea), 0x83);
        // CB 83 0044
        gbc.setState(0xad32, 0x14cf, 0xab90, 0x6906, 0x441b, 0x3615, 0x0, 0x0);
        gbc.writeMem(0xad32, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x14cf);
        EXPECT(gbc.pc(), 0xad34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad32), 0xcb);
        EXPECT(gbc.readMem(0xad33), 0x83);
        // CB 83 0045
        gbc.setState(0x1e08, 0xe83f, 0x1eb0, 0x98cf, 0x8272, 0x2ecd, 0x0, 0x0);
        gbc.writeMem(0x1e08, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe83f);
        EXPECT(gbc.pc(), 0x1e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0046
        gbc.setState(0xaf78, 0x932b, 0x7a00, 0xecd0, 0x1035, 0x19b8, 0x1, 0x1);
        gbc.writeMem(0xaf78, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x932b);
        EXPECT(gbc.pc(), 0xaf7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf78), 0xcb);
        EXPECT(gbc.readMem(0xaf79), 0x83);
        // CB 83 0047
        gbc.setState(0x4c13, 0x2ae4, 0x2f0, 0x1b95, 0x29b8, 0xc268, 0x0, 0x1);
        gbc.writeMem(0x4c13, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2ae4);
        EXPECT(gbc.pc(), 0x4c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0048
        gbc.setState(0x7c99, 0x60f2, 0x81a0, 0xb67f, 0x49f4, 0x5a8d, 0x0, 0x0);
        gbc.writeMem(0x7c99, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x60f2);
        EXPECT(gbc.pc(), 0x7c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0049
        gbc.setState(0x82fe, 0x5057, 0x1790, 0x923f, 0x1481, 0x4150, 0x1, 0x1);
        gbc.writeMem(0x82fe, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5057);
        EXPECT(gbc.pc(), 0x8300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82fe), 0xcb);
        EXPECT(gbc.readMem(0x82ff), 0x83);
        // CB 83 004A
        gbc.setState(0x205c, 0xbcb, 0x19b0, 0x117a, 0x95ef, 0xad87, 0x0, 0x0);
        gbc.writeMem(0x205c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbcb);
        EXPECT(gbc.pc(), 0x205e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 004B
        gbc.setState(0xae3f, 0x469b, 0x3bd0, 0x7ea9, 0xbcf7, 0xde40, 0x1, 0x0);
        gbc.writeMem(0xae3f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x469b);
        EXPECT(gbc.pc(), 0xae41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae3f), 0xcb);
        EXPECT(gbc.readMem(0xae40), 0x83);
        // CB 83 004C
        gbc.setState(0xbd23, 0xb3f6, 0xf6b0, 0x7296, 0x2079, 0x1c63, 0x0, 0x0);
        gbc.writeMem(0xbd23, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb3f6);
        EXPECT(gbc.pc(), 0xbd25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd23), 0xcb);
        EXPECT(gbc.readMem(0xbd24), 0x83);
        // CB 83 004D
        gbc.setState(0x2286, 0xa445, 0x3270, 0xdb41, 0xa860, 0x8fe5, 0x0, 0x0);
        gbc.writeMem(0x2286, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa445);
        EXPECT(gbc.pc(), 0x2288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 004E
        gbc.setState(0x4d1, 0xe5f0, 0xdbd0, 0xf12, 0x394, 0x66e9, 0x1, 0x0);
        gbc.writeMem(0x4d1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe5f0);
        EXPECT(gbc.pc(), 0x4d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 004F
        gbc.setState(0x95a9, 0xb49e, 0x510, 0xe058, 0xb205, 0x6c5a, 0x0, 0x1);
        gbc.writeMem(0x95a9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb49e);
        EXPECT(gbc.pc(), 0x95ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95a9), 0xcb);
        EXPECT(gbc.readMem(0x95aa), 0x83);
        // CB 83 0050
        gbc.setState(0x525d, 0xb9b7, 0x70, 0x2ced, 0xa9c9, 0x2638, 0x0, 0x1);
        gbc.writeMem(0x525d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb9b7);
        EXPECT(gbc.pc(), 0x525f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0051
        gbc.setState(0xba43, 0xe356, 0x4160, 0xb10e, 0xbcae, 0xff92, 0x1, 0x0);
        gbc.writeMem(0xba43, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe356);
        EXPECT(gbc.pc(), 0xba45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba43), 0xcb);
        EXPECT(gbc.readMem(0xba44), 0x83);
        // CB 83 0052
        gbc.setState(0x4562, 0x3914, 0x1a40, 0x3d2c, 0x6046, 0x1c8e, 0x0, 0x1);
        gbc.writeMem(0x4562, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3914);
        EXPECT(gbc.pc(), 0x4564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0053
        gbc.setState(0x760d, 0x7151, 0x4990, 0x29bc, 0xe32a, 0x9f87, 0x1, 0x0);
        gbc.writeMem(0x760d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7151);
        EXPECT(gbc.pc(), 0x760f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0055
        gbc.setState(0x3f32, 0x29ca, 0x2d90, 0xb91f, 0x83b1, 0x7195, 0x1, 0x0);
        gbc.writeMem(0x3f32, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x29ca);
        EXPECT(gbc.pc(), 0x3f34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0056
        gbc.setState(0x6c71, 0x9b9d, 0xbe80, 0x2f39, 0x94ad, 0xbb37, 0x0, 0x1);
        gbc.writeMem(0x6c71, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9b9d);
        EXPECT(gbc.pc(), 0x6c73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0057
        gbc.setState(0x4cdf, 0x60d, 0xfe0, 0x7e30, 0xc63f, 0x9e17, 0x1, 0x0);
        gbc.writeMem(0x4cdf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x60d);
        EXPECT(gbc.pc(), 0x4ce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0058
        gbc.setState(0x7962, 0x9e6d, 0x1e40, 0xd391, 0xa978, 0x206b, 0x0, 0x0);
        gbc.writeMem(0x7962, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9e6d);
        EXPECT(gbc.pc(), 0x7964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0059
        gbc.setState(0xa26, 0x4a02, 0x5690, 0xaf50, 0xc90f, 0x6457, 0x1, 0x1);
        gbc.writeMem(0xa26, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4a02);
        EXPECT(gbc.pc(), 0xa28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 005A
        gbc.setState(0xb3de, 0xe039, 0x9250, 0xfa94, 0xbcfc, 0x4617, 0x0, 0x1);
        gbc.writeMem(0xb3de, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe039);
        EXPECT(gbc.pc(), 0xb3e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3de), 0xcb);
        EXPECT(gbc.readMem(0xb3df), 0x83);
        // CB 83 005C
        gbc.setState(0xb25c, 0xd767, 0x29b0, 0x2076, 0x6eaf, 0x701c, 0x0, 0x0);
        gbc.writeMem(0xb25c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd767);
        EXPECT(gbc.pc(), 0xb25e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25c), 0xcb);
        EXPECT(gbc.readMem(0xb25d), 0x83);
        // CB 83 005D
        gbc.setState(0x13a3, 0x511f, 0x4850, 0x5bd7, 0x2041, 0x1515, 0x0, 0x1);
        gbc.writeMem(0x13a3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x511f);
        EXPECT(gbc.pc(), 0x13a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 005E
        gbc.setState(0x6e6c, 0xbc77, 0xc020, 0x397f, 0x7e0b, 0xf28c, 0x1, 0x0);
        gbc.writeMem(0x6e6c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbc77);
        EXPECT(gbc.pc(), 0x6e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 005F
        gbc.setState(0x5af9, 0x1b79, 0x2030, 0xe1ec, 0x146f, 0xec0c, 0x1, 0x1);
        gbc.writeMem(0x5af9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1b79);
        EXPECT(gbc.pc(), 0x5afb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0060
        gbc.setState(0xc4a8, 0xa367, 0x650, 0xec6d, 0x2c64, 0x2f0, 0x0, 0x0);
        gbc.writeMem(0xc4a8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa367);
        EXPECT(gbc.pc(), 0xc4aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4a8), 0xcb);
        EXPECT(gbc.readMem(0xc4a9), 0x83);
        // CB 83 0061
        gbc.setState(0x52ab, 0x533b, 0x9680, 0xb028, 0x4c46, 0x5d8e, 0x0, 0x0);
        gbc.writeMem(0x52ab, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x533b);
        EXPECT(gbc.pc(), 0x52ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0062
        gbc.setState(0x23f0, 0x2505, 0x7960, 0xf047, 0x1203, 0x895, 0x0, 0x1);
        gbc.writeMem(0x23f0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2505);
        EXPECT(gbc.pc(), 0x23f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0063
        gbc.setState(0x325d, 0xa611, 0x9d80, 0xfc7, 0x426f, 0x8c1, 0x1, 0x1);
        gbc.writeMem(0x325d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa611);
        EXPECT(gbc.pc(), 0x325f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0064
        gbc.setState(0x9155, 0xb163, 0x4c00, 0x4f51, 0x50d7, 0x4b88, 0x0, 0x1);
        gbc.writeMem(0x9155, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb163);
        EXPECT(gbc.pc(), 0x9157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9155), 0xcb);
        EXPECT(gbc.readMem(0x9156), 0x83);
        // CB 83 0065
        gbc.setState(0x1d0a, 0xf7a9, 0xe700, 0xbce0, 0x97d5, 0x6d7a, 0x1, 0x0);
        gbc.writeMem(0x1d0a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf7a9);
        EXPECT(gbc.pc(), 0x1d0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0066
        gbc.setState(0xa8ce, 0x9d0, 0x8bc0, 0xfbf9, 0x2466, 0xc1c, 0x0, 0x0);
        gbc.writeMem(0xa8ce, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9d0);
        EXPECT(gbc.pc(), 0xa8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ce), 0xcb);
        EXPECT(gbc.readMem(0xa8cf), 0x83);
        // CB 83 0067
        gbc.setState(0x575c, 0x74d4, 0x30b0, 0x2b5b, 0x8db7, 0x5973, 0x0, 0x1);
        gbc.writeMem(0x575c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x74d4);
        EXPECT(gbc.pc(), 0x575e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0068
        gbc.setState(0x8cff, 0x8d23, 0xa60, 0xc152, 0x31d2, 0xccd5, 0x1, 0x1);
        gbc.writeMem(0x8cff, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8d23);
        EXPECT(gbc.pc(), 0x8d01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cff), 0xcb);
        EXPECT(gbc.readMem(0x8d00), 0x83);
        // CB 83 0069
        gbc.setState(0x8024, 0xe51a, 0x35a0, 0x5858, 0xdb51, 0x172a, 0x1, 0x0);
        gbc.writeMem(0x8024, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe51a);
        EXPECT(gbc.pc(), 0x8026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8024), 0xcb);
        EXPECT(gbc.readMem(0x8025), 0x83);
        // CB 83 006B
        gbc.setState(0x5e8a, 0x53a0, 0x5460, 0xb640, 0xa9cc, 0x67be, 0x1, 0x1);
        gbc.writeMem(0x5e8a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x53a0);
        EXPECT(gbc.pc(), 0x5e8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 006C
        gbc.setState(0xb12d, 0xa3ec, 0xd0d0, 0x8831, 0x76a6, 0xb3ae, 0x0, 0x0);
        gbc.writeMem(0xb12d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa3ec);
        EXPECT(gbc.pc(), 0xb12f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb12d), 0xcb);
        EXPECT(gbc.readMem(0xb12e), 0x83);
        // CB 83 006D
        gbc.setState(0x2e10, 0xbc52, 0x9830, 0xbedd, 0x6321, 0x403f, 0x1, 0x1);
        gbc.writeMem(0x2e10, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbc52);
        EXPECT(gbc.pc(), 0x2e12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 006E
        gbc.setState(0xa0eb, 0x742, 0xbb30, 0x2670, 0xaa30, 0x4713, 0x1, 0x1);
        gbc.writeMem(0xa0eb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x742);
        EXPECT(gbc.pc(), 0xa0ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0eb), 0xcb);
        EXPECT(gbc.readMem(0xa0ec), 0x83);
        // CB 83 006F
        gbc.setState(0x850b, 0xb261, 0x8e70, 0x48ef, 0x6a9f, 0xa637, 0x1, 0x1);
        gbc.writeMem(0x850b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb261);
        EXPECT(gbc.pc(), 0x850d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850b), 0xcb);
        EXPECT(gbc.readMem(0x850c), 0x83);
        // CB 83 0070
        gbc.setState(0xe40e, 0xf69d, 0x9900, 0x70cc, 0x2638, 0x3f03, 0x1, 0x0);
        gbc.writeMem(0xe40e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf69d);
        EXPECT(gbc.pc(), 0xe410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe40e), 0xcb);
        EXPECT(gbc.readMem(0xe40f), 0x83);
        // CB 83 0072
        gbc.setState(0xfad, 0xbc27, 0x9a90, 0x6e5d, 0x2fce, 0x7965, 0x0, 0x1);
        gbc.writeMem(0xfad, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbc27);
        EXPECT(gbc.pc(), 0xfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0073
        gbc.setState(0x482d, 0xef83, 0xe8d0, 0x9f2c, 0x2f33, 0x2c5, 0x1, 0x0);
        gbc.writeMem(0x482d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xef83);
        EXPECT(gbc.pc(), 0x482f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0074
        gbc.setState(0xb275, 0xc5c1, 0xe020, 0x566, 0xf6ee, 0xcfec, 0x0, 0x1);
        gbc.writeMem(0xb275, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc5c1);
        EXPECT(gbc.pc(), 0xb277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb275), 0xcb);
        EXPECT(gbc.readMem(0xb276), 0x83);
        // CB 83 0075
        gbc.setState(0xa6c1, 0xa433, 0x2ff0, 0xad80, 0x18b9, 0xaeda, 0x0, 0x1);
        gbc.writeMem(0xa6c1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa433);
        EXPECT(gbc.pc(), 0xa6c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c1), 0xcb);
        EXPECT(gbc.readMem(0xa6c2), 0x83);
        // CB 83 0076
        gbc.setState(0x84ba, 0xc9df, 0xd330, 0x4b39, 0xf958, 0x9350, 0x0, 0x1);
        gbc.writeMem(0x84ba, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc9df);
        EXPECT(gbc.pc(), 0x84bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ba), 0xcb);
        EXPECT(gbc.readMem(0x84bb), 0x83);
        // CB 83 0077
        gbc.setState(0xda4b, 0xdceb, 0x93a0, 0xc821, 0x4c9, 0x2521, 0x0, 0x1);
        gbc.writeMem(0xda4b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdceb);
        EXPECT(gbc.pc(), 0xda4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda4b), 0xcb);
        EXPECT(gbc.readMem(0xda4c), 0x83);
        // CB 83 0078
        gbc.setState(0x97e0, 0xb319, 0x9210, 0xe6d7, 0xdb3a, 0x3e9, 0x1, 0x0);
        gbc.writeMem(0x97e0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb319);
        EXPECT(gbc.pc(), 0x97e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e0), 0xcb);
        EXPECT(gbc.readMem(0x97e1), 0x83);
        // CB 83 0079
        gbc.setState(0x75f, 0xb061, 0xfeb0, 0xb175, 0xe64f, 0x8547, 0x0, 0x1);
        gbc.writeMem(0x75f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb061);
        EXPECT(gbc.pc(), 0x761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 007A
        gbc.setState(0xc6e1, 0x92f0, 0xb190, 0xde3e, 0x51e7, 0x72b2, 0x1, 0x1);
        gbc.writeMem(0xc6e1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x92f0);
        EXPECT(gbc.pc(), 0xc6e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e1), 0xcb);
        EXPECT(gbc.readMem(0xc6e2), 0x83);
        // CB 83 007C
        gbc.setState(0x3f6d, 0x7357, 0xd620, 0xe7f3, 0xccc5, 0x4c59, 0x0, 0x1);
        gbc.writeMem(0x3f6d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7357);
        EXPECT(gbc.pc(), 0x3f6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 007D
        gbc.setState(0xe253, 0xfa41, 0xf70, 0xfc54, 0x4260, 0xf7c, 0x1, 0x0);
        gbc.writeMem(0xe253, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfa41);
        EXPECT(gbc.pc(), 0xe255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe253), 0xcb);
        EXPECT(gbc.readMem(0xe254), 0x83);
        // CB 83 007E
        gbc.setState(0x684, 0x45b, 0xf7e0, 0x54dd, 0x484a, 0x8eca, 0x0, 0x0);
        gbc.writeMem(0x684, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x45b);
        EXPECT(gbc.pc(), 0x686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 007F
        gbc.setState(0x25c, 0x4950, 0x3620, 0x4d49, 0xb430, 0xb641, 0x0, 0x0);
        gbc.writeMem(0x25c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4950);
        EXPECT(gbc.pc(), 0x25e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0080
        gbc.setState(0x898c, 0xb11b, 0x1760, 0x8618, 0x9eeb, 0x88fe, 0x1, 0x0);
        gbc.writeMem(0x898c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb11b);
        EXPECT(gbc.pc(), 0x898e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x898c), 0xcb);
        EXPECT(gbc.readMem(0x898d), 0x83);
        // CB 83 0081
        gbc.setState(0xe5fb, 0x5944, 0x8da0, 0x5b24, 0x919e, 0xa84d, 0x1, 0x0);
        gbc.writeMem(0xe5fb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5944);
        EXPECT(gbc.pc(), 0xe5fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5fb), 0xcb);
        EXPECT(gbc.readMem(0xe5fc), 0x83);
        // CB 83 0082
        gbc.setState(0x57, 0x7425, 0xf10, 0xaea9, 0xea55, 0x5956, 0x0, 0x1);
        gbc.writeMem(0x57, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7425);
        EXPECT(gbc.pc(), 0x59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0083
        gbc.setState(0x9ded, 0xc699, 0xa770, 0x9441, 0x1c2c, 0xf07b, 0x0, 0x0);
        gbc.writeMem(0x9ded, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc699);
        EXPECT(gbc.pc(), 0x9def);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ded), 0xcb);
        EXPECT(gbc.readMem(0x9dee), 0x83);
        // CB 83 0084
        gbc.setState(0x90f8, 0xddc1, 0x80c0, 0x4dea, 0xf6a0, 0xaab0, 0x0, 0x0);
        gbc.writeMem(0x90f8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xddc1);
        EXPECT(gbc.pc(), 0x90fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90f8), 0xcb);
        EXPECT(gbc.readMem(0x90f9), 0x83);
        // CB 83 0085
        gbc.setState(0x3f62, 0xa63e, 0xbd40, 0x4c7d, 0xf4e6, 0x84f4, 0x1, 0x1);
        gbc.writeMem(0x3f62, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa63e);
        EXPECT(gbc.pc(), 0x3f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0086
        gbc.setState(0xde04, 0xde93, 0xa660, 0x1f05, 0x18c, 0x1ab0, 0x1, 0x1);
        gbc.writeMem(0xde04, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xde93);
        EXPECT(gbc.pc(), 0xde06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde04), 0xcb);
        EXPECT(gbc.readMem(0xde05), 0x83);
        // CB 83 0087
        gbc.setState(0xc7bb, 0x65ab, 0xe8a0, 0x5ffd, 0xb01, 0x1ee4, 0x0, 0x1);
        gbc.writeMem(0xc7bb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x65ab);
        EXPECT(gbc.pc(), 0xc7bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7bb), 0xcb);
        EXPECT(gbc.readMem(0xc7bc), 0x83);
        // CB 83 0088
        gbc.setState(0x52b8, 0xbdd5, 0x550, 0xd334, 0xf978, 0x2315, 0x1, 0x1);
        gbc.writeMem(0x52b8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbdd5);
        EXPECT(gbc.pc(), 0x52ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0089
        gbc.setState(0x130e, 0xb7c, 0x1e40, 0x51fb, 0x6869, 0xf5b6, 0x1, 0x0);
        gbc.writeMem(0x130e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb7c);
        EXPECT(gbc.pc(), 0x1310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 008A
        gbc.setState(0xa5aa, 0x2635, 0xb740, 0x4911, 0x9df5, 0xc77c, 0x0, 0x0);
        gbc.writeMem(0xa5aa, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2635);
        EXPECT(gbc.pc(), 0xa5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5aa), 0xcb);
        EXPECT(gbc.readMem(0xa5ab), 0x83);
        // CB 83 008B
        gbc.setState(0x4ba2, 0xff74, 0x39a0, 0xd66, 0x6c3d, 0xc3e2, 0x1, 0x1);
        gbc.writeMem(0x4ba2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xff74);
        EXPECT(gbc.pc(), 0x4ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 008C
        gbc.setState(0x98f3, 0x7f22, 0xad0, 0x611c, 0xdac7, 0x406e, 0x1, 0x1);
        gbc.writeMem(0x98f3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7f22);
        EXPECT(gbc.pc(), 0x98f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f3), 0xcb);
        EXPECT(gbc.readMem(0x98f4), 0x83);
        // CB 83 008E
        gbc.setState(0xb064, 0x6568, 0x2b70, 0xcb27, 0x5642, 0x836f, 0x1, 0x1);
        gbc.writeMem(0xb064, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6568);
        EXPECT(gbc.pc(), 0xb066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb064), 0xcb);
        EXPECT(gbc.readMem(0xb065), 0x83);
        // CB 83 008F
        gbc.setState(0x54b5, 0xcdc, 0x7810, 0xfbf2, 0xba76, 0xb409, 0x0, 0x1);
        gbc.writeMem(0x54b5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xcdc);
        EXPECT(gbc.pc(), 0x54b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0090
        gbc.setState(0x69bf, 0x44e6, 0xf5b0, 0x1c37, 0x3333, 0x831c, 0x1, 0x1);
        gbc.writeMem(0x69bf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x44e6);
        EXPECT(gbc.pc(), 0x69c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0091
        gbc.setState(0xa910, 0xa2b0, 0xcd90, 0xacc1, 0xf56d, 0xb44d, 0x1, 0x1);
        gbc.writeMem(0xa910, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa2b0);
        EXPECT(gbc.pc(), 0xa912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa910), 0xcb);
        EXPECT(gbc.readMem(0xa911), 0x83);
        // CB 83 0092
        gbc.setState(0x7a97, 0x31f7, 0xb230, 0x63a9, 0x4427, 0x82ff, 0x0, 0x1);
        gbc.writeMem(0x7a97, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x31f7);
        EXPECT(gbc.pc(), 0x7a99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0093
        gbc.setState(0xdc, 0x67d7, 0x96a0, 0xdc8a, 0x2a4e, 0x24eb, 0x0, 0x0);
        gbc.writeMem(0xdc, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x67d7);
        EXPECT(gbc.pc(), 0xde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0094
        gbc.setState(0x2518, 0x5cb6, 0x7390, 0x6821, 0xc445, 0x1598, 0x1, 0x0);
        gbc.writeMem(0x2518, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5cb6);
        EXPECT(gbc.pc(), 0x251a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0095
        gbc.setState(0xaeb8, 0x3574, 0x4db0, 0x8948, 0x6ed1, 0x839d, 0x1, 0x0);
        gbc.writeMem(0xaeb8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3574);
        EXPECT(gbc.pc(), 0xaeba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb8), 0xcb);
        EXPECT(gbc.readMem(0xaeb9), 0x83);
        // CB 83 0096
        gbc.setState(0xd47d, 0xa310, 0x6440, 0xa000, 0xdc3f, 0xf5d2, 0x1, 0x1);
        gbc.writeMem(0xd47d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa310);
        EXPECT(gbc.pc(), 0xd47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd47d), 0xcb);
        EXPECT(gbc.readMem(0xd47e), 0x83);
        // CB 83 0097
        gbc.setState(0xc7ee, 0xd2a3, 0xe140, 0x9f09, 0xf36a, 0x7892, 0x0, 0x0);
        gbc.writeMem(0xc7ee, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd2a3);
        EXPECT(gbc.pc(), 0xc7f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ee), 0xcb);
        EXPECT(gbc.readMem(0xc7ef), 0x83);
        // CB 83 0098
        gbc.setState(0x22a6, 0xbece, 0xfb70, 0xac05, 0x27de, 0x89c0, 0x1, 0x1);
        gbc.writeMem(0x22a6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xbece);
        EXPECT(gbc.pc(), 0x22a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0099
        gbc.setState(0x2856, 0xf4e6, 0x2220, 0x26ac, 0x939, 0xdbee, 0x0, 0x0);
        gbc.writeMem(0x2856, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf4e6);
        EXPECT(gbc.pc(), 0x2858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 009A
        gbc.setState(0x5dbb, 0xb2dd, 0xb680, 0xf349, 0x89f0, 0xac95, 0x0, 0x1);
        gbc.writeMem(0x5dbb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb2dd);
        EXPECT(gbc.pc(), 0x5dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 009B
        gbc.setState(0xcf8b, 0x464a, 0x6800, 0x559e, 0x310, 0xd527, 0x0, 0x0);
        gbc.writeMem(0xcf8b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x464a);
        EXPECT(gbc.pc(), 0xcf8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8b), 0xcb);
        EXPECT(gbc.readMem(0xcf8c), 0x83);
        // CB 83 009C
        gbc.setState(0x1552, 0x6bcf, 0xb650, 0x48e6, 0x9432, 0xfe01, 0x1, 0x0);
        gbc.writeMem(0x1552, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6bcf);
        EXPECT(gbc.pc(), 0x1554);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 009D
        gbc.setState(0x9a15, 0xc28f, 0x7540, 0xdbb7, 0xb391, 0xbc24, 0x0, 0x0);
        gbc.writeMem(0x9a15, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc28f);
        EXPECT(gbc.pc(), 0x9a17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a15), 0xcb);
        EXPECT(gbc.readMem(0x9a16), 0x83);
        // CB 83 009E
        gbc.setState(0x7f70, 0xfc6, 0x9930, 0x42cc, 0x95eb, 0x2089, 0x1, 0x1);
        gbc.writeMem(0x7f70, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfc6);
        EXPECT(gbc.pc(), 0x7f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00A0
        gbc.setState(0x9e00, 0x7f08, 0x1300, 0x613f, 0x5829, 0xb965, 0x1, 0x1);
        gbc.writeMem(0x9e00, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7f08);
        EXPECT(gbc.pc(), 0x9e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e00), 0xcb);
        EXPECT(gbc.readMem(0x9e01), 0x83);
        // CB 83 00A1
        gbc.setState(0x8ddd, 0xf259, 0x2b50, 0x63e9, 0xbaf, 0xb9a6, 0x0, 0x1);
        gbc.writeMem(0x8ddd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf259);
        EXPECT(gbc.pc(), 0x8ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ddd), 0xcb);
        EXPECT(gbc.readMem(0x8dde), 0x83);
        // CB 83 00A2
        gbc.setState(0x13ad, 0x9015, 0x6050, 0xd42c, 0x4b2a, 0x3bae, 0x1, 0x0);
        gbc.writeMem(0x13ad, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9015);
        EXPECT(gbc.pc(), 0x13af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00A3
        gbc.setState(0x1aa, 0xa03e, 0xc9a0, 0x9ad8, 0x52bb, 0xad79, 0x0, 0x0);
        gbc.writeMem(0x1aa, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa03e);
        EXPECT(gbc.pc(), 0x1ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00A4
        gbc.setState(0x311f, 0x43e9, 0xda90, 0x1566, 0xa149, 0x951a, 0x1, 0x1);
        gbc.writeMem(0x311f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x43e9);
        EXPECT(gbc.pc(), 0x3121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00A5
        gbc.setState(0xc015, 0xf703, 0xa60, 0x742c, 0xc7b5, 0xc754, 0x0, 0x1);
        gbc.writeMem(0xc015, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf703);
        EXPECT(gbc.pc(), 0xc017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc015), 0xcb);
        EXPECT(gbc.readMem(0xc016), 0x83);
        // CB 83 00A6
        gbc.setState(0x8ce, 0xf8b5, 0x34d0, 0x1ddd, 0x768a, 0xe5d1, 0x0, 0x1);
        gbc.writeMem(0x8ce, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf8b5);
        EXPECT(gbc.pc(), 0x8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00A7
        gbc.setState(0x24a1, 0x61b9, 0x98d0, 0x74db, 0xf2ba, 0x8be6, 0x1, 0x0);
        gbc.writeMem(0x24a1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x61b9);
        EXPECT(gbc.pc(), 0x24a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00A8
        gbc.setState(0xa02b, 0x28f8, 0x66e0, 0x9aff, 0xba93, 0x2f0a, 0x0, 0x1);
        gbc.writeMem(0xa02b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x28f8);
        EXPECT(gbc.pc(), 0xa02d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02b), 0xcb);
        EXPECT(gbc.readMem(0xa02c), 0x83);
        // CB 83 00A9
        gbc.setState(0x11ae, 0xfa15, 0xdde0, 0x17db, 0xbd9d, 0x634c, 0x0, 0x0);
        gbc.writeMem(0x11ae, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfa15);
        EXPECT(gbc.pc(), 0x11b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00AA
        gbc.setState(0x703a, 0x5e38, 0x780, 0x2e79, 0x3a6, 0xd440, 0x0, 0x0);
        gbc.writeMem(0x703a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5e38);
        EXPECT(gbc.pc(), 0x703c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00AB
        gbc.setState(0x18e1, 0x5784, 0x65a0, 0x71c0, 0x3e79, 0x3ee7, 0x0, 0x1);
        gbc.writeMem(0x18e1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5784);
        EXPECT(gbc.pc(), 0x18e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00AC
        gbc.setState(0x49a1, 0xf958, 0xc960, 0x9781, 0x231b, 0xc6e1, 0x1, 0x0);
        gbc.writeMem(0x49a1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf958);
        EXPECT(gbc.pc(), 0x49a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00AD
        gbc.setState(0xc8aa, 0x5a68, 0x7af0, 0xe332, 0x12db, 0x1b99, 0x1, 0x1);
        gbc.writeMem(0xc8aa, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5a68);
        EXPECT(gbc.pc(), 0xc8ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8aa), 0xcb);
        EXPECT(gbc.readMem(0xc8ab), 0x83);
        // CB 83 00AE
        gbc.setState(0xbd83, 0xde2b, 0xce30, 0x4949, 0x2e9e, 0xbe98, 0x0, 0x1);
        gbc.writeMem(0xbd83, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xde2b);
        EXPECT(gbc.pc(), 0xbd85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd83), 0xcb);
        EXPECT(gbc.readMem(0xbd84), 0x83);
        // CB 83 00B0
        gbc.setState(0x1d46, 0x97f6, 0xbb10, 0xea91, 0xd8f5, 0x4dcf, 0x1, 0x1);
        gbc.writeMem(0x1d46, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x97f6);
        EXPECT(gbc.pc(), 0x1d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00B1
        gbc.setState(0x3935, 0x23b7, 0x8d00, 0x8274, 0xdee1, 0xb49f, 0x0, 0x1);
        gbc.writeMem(0x3935, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x23b7);
        EXPECT(gbc.pc(), 0x3937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00B2
        gbc.setState(0x2617, 0xb231, 0xbd90, 0xaeb4, 0xa66b, 0x52bc, 0x1, 0x1);
        gbc.writeMem(0x2617, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb231);
        EXPECT(gbc.pc(), 0x2619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00B3
        gbc.setState(0x20d0, 0xb26, 0x6830, 0x1b5e, 0xe912, 0x4e94, 0x0, 0x0);
        gbc.writeMem(0x20d0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb26);
        EXPECT(gbc.pc(), 0x20d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00B4
        gbc.setState(0x235a, 0x98f6, 0xd0, 0xaeb6, 0x915c, 0x3b9c, 0x1, 0x1);
        gbc.writeMem(0x235a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x98f6);
        EXPECT(gbc.pc(), 0x235c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00B5
        gbc.setState(0x3a5e, 0xdbfc, 0x1e40, 0x5bf7, 0x6d67, 0xcdc7, 0x0, 0x0);
        gbc.writeMem(0x3a5e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdbfc);
        EXPECT(gbc.pc(), 0x3a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00B6
        gbc.setState(0x5f1f, 0x768e, 0x57f0, 0xae8f, 0x7624, 0xf8d7, 0x0, 0x0);
        gbc.writeMem(0x5f1f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x768e);
        EXPECT(gbc.pc(), 0x5f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00B7
        gbc.setState(0xe782, 0x597, 0xbb30, 0xc594, 0xfbf6, 0xacd5, 0x0, 0x1);
        gbc.writeMem(0xe782, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x597);
        EXPECT(gbc.pc(), 0xe784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe782), 0xcb);
        EXPECT(gbc.readMem(0xe783), 0x83);
        // CB 83 00B8
        gbc.setState(0x393, 0x9264, 0xd700, 0x8cb0, 0xfade, 0xcbaa, 0x0, 0x1);
        gbc.writeMem(0x393, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9264);
        EXPECT(gbc.pc(), 0x395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00B9
        gbc.setState(0x3b46, 0xc0f3, 0x1770, 0xc4f6, 0x6d3d, 0xe465, 0x0, 0x0);
        gbc.writeMem(0x3b46, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc0f3);
        EXPECT(gbc.pc(), 0x3b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00BA
        gbc.setState(0x83fe, 0x2802, 0x4750, 0x81c6, 0xa82c, 0x4783, 0x0, 0x1);
        gbc.writeMem(0x83fe, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2802);
        EXPECT(gbc.pc(), 0x8400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fe), 0xcb);
        EXPECT(gbc.readMem(0x83ff), 0x83);
        // CB 83 00BB
        gbc.setState(0x67b8, 0x722e, 0xacf0, 0xc8ae, 0xe687, 0xc5fc, 0x0, 0x1);
        gbc.writeMem(0x67b8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x722e);
        EXPECT(gbc.pc(), 0x67ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00BC
        gbc.setState(0x6202, 0xc040, 0x5b60, 0x4762, 0x3219, 0xa4ee, 0x0, 0x1);
        gbc.writeMem(0x6202, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc040);
        EXPECT(gbc.pc(), 0x6204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00BE
        gbc.setState(0x31cf, 0xa9cd, 0x9dc0, 0xc2f7, 0xa7e9, 0xc072, 0x0, 0x0);
        gbc.writeMem(0x31cf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa9cd);
        EXPECT(gbc.pc(), 0x31d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00BF
        gbc.setState(0x681e, 0x962d, 0xb7d0, 0x343e, 0xa7dd, 0x1c0, 0x0, 0x1);
        gbc.writeMem(0x681e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x962d);
        EXPECT(gbc.pc(), 0x6820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00C0
        gbc.setState(0x1b0f, 0xc585, 0x8d0, 0x1113, 0xc291, 0x396, 0x0, 0x1);
        gbc.writeMem(0x1b0f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc585);
        EXPECT(gbc.pc(), 0x1b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00C2
        gbc.setState(0x6066, 0x6351, 0x5280, 0xfa97, 0x2be8, 0x7fe2, 0x1, 0x0);
        gbc.writeMem(0x6066, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6351);
        EXPECT(gbc.pc(), 0x6068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00C3
        gbc.setState(0x6ca1, 0xe1c0, 0x7f00, 0xdbf1, 0xf637, 0xa175, 0x1, 0x1);
        gbc.writeMem(0x6ca1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe1c0);
        EXPECT(gbc.pc(), 0x6ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00C4
        gbc.setState(0x1b32, 0x2672, 0x1c50, 0x743d, 0x1839, 0xa09d, 0x0, 0x0);
        gbc.writeMem(0x1b32, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2672);
        EXPECT(gbc.pc(), 0x1b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00C5
        gbc.setState(0xcb4e, 0x67e5, 0x4020, 0x4929, 0xe806, 0x7205, 0x0, 0x0);
        gbc.writeMem(0xcb4e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x67e5);
        EXPECT(gbc.pc(), 0xcb50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb4e), 0xcb);
        EXPECT(gbc.readMem(0xcb4f), 0x83);
        // CB 83 00C6
        gbc.setState(0x9f20, 0xf339, 0x27a0, 0x6c54, 0x21f1, 0xfc5a, 0x0, 0x0);
        gbc.writeMem(0x9f20, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf339);
        EXPECT(gbc.pc(), 0x9f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f20), 0xcb);
        EXPECT(gbc.readMem(0x9f21), 0x83);
        // CB 83 00C7
        gbc.setState(0xc80e, 0xea9b, 0xaf80, 0x4d23, 0xe7dd, 0xf09, 0x1, 0x1);
        gbc.writeMem(0xc80e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xea9b);
        EXPECT(gbc.pc(), 0xc810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc80e), 0xcb);
        EXPECT(gbc.readMem(0xc80f), 0x83);
        // CB 83 00C8
        gbc.setState(0xe89e, 0x8e8a, 0x3de0, 0xd8c3, 0x8bd3, 0xc639, 0x0, 0x1);
        gbc.writeMem(0xe89e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8e8a);
        EXPECT(gbc.pc(), 0xe8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe89e), 0xcb);
        EXPECT(gbc.readMem(0xe89f), 0x83);
        // CB 83 00C9
        gbc.setState(0x8acf, 0x6adb, 0x4660, 0x427a, 0xc51, 0x2e9b, 0x0, 0x0);
        gbc.writeMem(0x8acf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6adb);
        EXPECT(gbc.pc(), 0x8ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8acf), 0xcb);
        EXPECT(gbc.readMem(0x8ad0), 0x83);
        // CB 83 00CA
        gbc.setState(0x3927, 0x35e7, 0xdb00, 0x439, 0x95a8, 0xc963, 0x0, 0x0);
        gbc.writeMem(0x3927, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x35e7);
        EXPECT(gbc.pc(), 0x3929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00CB
        gbc.setState(0x59a7, 0x6103, 0xad10, 0xa4cf, 0x17b8, 0x33d4, 0x0, 0x1);
        gbc.writeMem(0x59a7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6103);
        EXPECT(gbc.pc(), 0x59a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00CC
        gbc.setState(0x883d, 0x8476, 0x2dc0, 0xe134, 0x6b95, 0xf16b, 0x1, 0x0);
        gbc.writeMem(0x883d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8476);
        EXPECT(gbc.pc(), 0x883f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x883d), 0xcb);
        EXPECT(gbc.readMem(0x883e), 0x83);
        // CB 83 00CD
        gbc.setState(0x16ff, 0x7d26, 0x4620, 0x28a9, 0x4469, 0x9ff, 0x1, 0x0);
        gbc.writeMem(0x16ff, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7d26);
        EXPECT(gbc.pc(), 0x1701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00CE
        gbc.setState(0xb278, 0x8f17, 0xc10, 0xb7d2, 0x7961, 0x70f7, 0x0, 0x0);
        gbc.writeMem(0xb278, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8f17);
        EXPECT(gbc.pc(), 0xb27a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb278), 0xcb);
        EXPECT(gbc.readMem(0xb279), 0x83);
        // CB 83 00CF
        gbc.setState(0x52c4, 0xd3fc, 0x7260, 0x2c9, 0xe799, 0xec57, 0x0, 0x0);
        gbc.writeMem(0x52c4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd3fc);
        EXPECT(gbc.pc(), 0x52c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00D0
        gbc.setState(0xb8ce, 0xee98, 0x5cb0, 0xfe51, 0xe1ae, 0xe05a, 0x0, 0x1);
        gbc.writeMem(0xb8ce, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xee98);
        EXPECT(gbc.pc(), 0xb8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ce), 0xcb);
        EXPECT(gbc.readMem(0xb8cf), 0x83);
        // CB 83 00D1
        gbc.setState(0x9236, 0x413d, 0x1c30, 0x6478, 0x69e4, 0xd2fd, 0x0, 0x1);
        gbc.writeMem(0x9236, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x413d);
        EXPECT(gbc.pc(), 0x9238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9236), 0xcb);
        EXPECT(gbc.readMem(0x9237), 0x83);
        // CB 83 00D2
        gbc.setState(0x1e30, 0xea00, 0x7100, 0xf128, 0xcf75, 0x1b7f, 0x1, 0x1);
        gbc.writeMem(0x1e30, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xea00);
        EXPECT(gbc.pc(), 0x1e32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00D3
        gbc.setState(0xe071, 0x8c53, 0xa2f0, 0xe55e, 0x6483, 0x1848, 0x0, 0x1);
        gbc.writeMem(0xe071, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8c53);
        EXPECT(gbc.pc(), 0xe073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe071), 0xcb);
        EXPECT(gbc.readMem(0xe072), 0x83);
        // CB 83 00D4
        gbc.setState(0xa7a7, 0xf61e, 0xb1b0, 0xc1e9, 0xcc8e, 0x292c, 0x0, 0x0);
        gbc.writeMem(0xa7a7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf61e);
        EXPECT(gbc.pc(), 0xa7a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a7), 0xcb);
        EXPECT(gbc.readMem(0xa7a8), 0x83);
        // CB 83 00D6
        gbc.setState(0x3fe5, 0xc0ba, 0x6430, 0xfcda, 0x96d9, 0x7222, 0x0, 0x1);
        gbc.writeMem(0x3fe5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc0ba);
        EXPECT(gbc.pc(), 0x3fe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00D7
        gbc.setState(0x70bf, 0x7201, 0x49d0, 0x25a1, 0x8916, 0xe277, 0x0, 0x0);
        gbc.writeMem(0x70bf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7201);
        EXPECT(gbc.pc(), 0x70c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00D8
        gbc.setState(0x141a, 0x5411, 0x1f70, 0x3626, 0xaf0b, 0xcf9f, 0x1, 0x1);
        gbc.writeMem(0x141a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5411);
        EXPECT(gbc.pc(), 0x141c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00D9
        gbc.setState(0x5289, 0x8c9d, 0x1750, 0x67b8, 0xd0bb, 0xddc0, 0x1, 0x0);
        gbc.writeMem(0x5289, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8c9d);
        EXPECT(gbc.pc(), 0x528b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00DA
        gbc.setState(0x6127, 0x7e3c, 0xe140, 0x1b87, 0x7544, 0xdb57, 0x0, 0x0);
        gbc.writeMem(0x6127, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7e3c);
        EXPECT(gbc.pc(), 0x6129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00DB
        gbc.setState(0x7718, 0xcb58, 0xe890, 0xca45, 0xfb68, 0x55da, 0x1, 0x0);
        gbc.writeMem(0x7718, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcb58);
        EXPECT(gbc.pc(), 0x771a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00DC
        gbc.setState(0x9216, 0x3495, 0x7bb0, 0x7cab, 0xc62e, 0xc5eb, 0x0, 0x1);
        gbc.writeMem(0x9216, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3495);
        EXPECT(gbc.pc(), 0x9218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9216), 0xcb);
        EXPECT(gbc.readMem(0x9217), 0x83);
        // CB 83 00DD
        gbc.setState(0x5457, 0x60b0, 0xde10, 0x89f5, 0xc9d2, 0x7d9, 0x1, 0x1);
        gbc.writeMem(0x5457, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x60b0);
        EXPECT(gbc.pc(), 0x5459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00DE
        gbc.setState(0x2b89, 0xb5a8, 0xb7d0, 0x313e, 0x3b76, 0x8df6, 0x0, 0x0);
        gbc.writeMem(0x2b89, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb5a8);
        EXPECT(gbc.pc(), 0x2b8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00DF
        gbc.setState(0x76f1, 0x345d, 0xcaf0, 0xb4ba, 0xfd28, 0x9cb6, 0x0, 0x0);
        gbc.writeMem(0x76f1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x345d);
        EXPECT(gbc.pc(), 0x76f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00E0
        gbc.setState(0xb477, 0xcdad, 0x8560, 0x300a, 0xbc0b, 0x3310, 0x0, 0x1);
        gbc.writeMem(0xb477, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcdad);
        EXPECT(gbc.pc(), 0xb479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb477), 0xcb);
        EXPECT(gbc.readMem(0xb478), 0x83);
        // CB 83 00E1
        gbc.setState(0x4936, 0xe556, 0x2680, 0xcb6e, 0x2757, 0xb73, 0x1, 0x1);
        gbc.writeMem(0x4936, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe556);
        EXPECT(gbc.pc(), 0x4938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00E2
        gbc.setState(0x356, 0x7e60, 0x1b90, 0x962e, 0x9aa1, 0xe72e, 0x1, 0x1);
        gbc.writeMem(0x356, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7e60);
        EXPECT(gbc.pc(), 0x358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00E3
        gbc.setState(0x456, 0x1b98, 0x3d00, 0x9383, 0xad70, 0xb1e, 0x0, 0x1);
        gbc.writeMem(0x456, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1b98);
        EXPECT(gbc.pc(), 0x458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00E4
        gbc.setState(0xbc79, 0x4a57, 0x2d00, 0xb341, 0x8eb9, 0xc050, 0x0, 0x1);
        gbc.writeMem(0xbc79, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4a57);
        EXPECT(gbc.pc(), 0xbc7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc79), 0xcb);
        EXPECT(gbc.readMem(0xbc7a), 0x83);
        // CB 83 00E5
        gbc.setState(0xbcdf, 0xb63c, 0x7850, 0xfab3, 0xe54, 0x689, 0x1, 0x0);
        gbc.writeMem(0xbcdf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb63c);
        EXPECT(gbc.pc(), 0xbce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcdf), 0xcb);
        EXPECT(gbc.readMem(0xbce0), 0x83);
        // CB 83 00E6
        gbc.setState(0x8853, 0xee3c, 0xd100, 0xa929, 0xe65d, 0xfd9, 0x1, 0x1);
        gbc.writeMem(0x8853, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xee3c);
        EXPECT(gbc.pc(), 0x8855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8853), 0xcb);
        EXPECT(gbc.readMem(0x8854), 0x83);
        // CB 83 00E7
        gbc.setState(0x25b5, 0x9ac4, 0x99f0, 0x3059, 0xc720, 0x2a4a, 0x1, 0x1);
        gbc.writeMem(0x25b5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9ac4);
        EXPECT(gbc.pc(), 0x25b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00E8
        gbc.setState(0x6524, 0x494b, 0x5730, 0x996c, 0x78a2, 0x82ef, 0x1, 0x1);
        gbc.writeMem(0x6524, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x494b);
        EXPECT(gbc.pc(), 0x6526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00E9
        gbc.setState(0x59e0, 0x2b4b, 0xd8f0, 0xf49f, 0x6c75, 0x41f5, 0x0, 0x0);
        gbc.writeMem(0x59e0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2b4b);
        EXPECT(gbc.pc(), 0x59e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00EB
        gbc.setState(0xe06a, 0xe32e, 0x1440, 0xdb2e, 0x11f8, 0x7d02, 0x1, 0x1);
        gbc.writeMem(0xe06a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe32e);
        EXPECT(gbc.pc(), 0xe06c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06a), 0xcb);
        EXPECT(gbc.readMem(0xe06b), 0x83);
        // CB 83 00EC
        gbc.setState(0x2095, 0x189e, 0xaa60, 0xb505, 0x70b1, 0xc802, 0x1, 0x0);
        gbc.writeMem(0x2095, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x189e);
        EXPECT(gbc.pc(), 0x2097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00ED
        gbc.setState(0x9765, 0x98d2, 0x3ca0, 0x4c51, 0xa393, 0xb464, 0x0, 0x0);
        gbc.writeMem(0x9765, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x98d2);
        EXPECT(gbc.pc(), 0x9767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9765), 0xcb);
        EXPECT(gbc.readMem(0x9766), 0x83);
        // CB 83 00EE
        gbc.setState(0x9a05, 0x1cfb, 0x1b40, 0x8f33, 0x4ce7, 0x1505, 0x0, 0x1);
        gbc.writeMem(0x9a05, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1cfb);
        EXPECT(gbc.pc(), 0x9a07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a05), 0xcb);
        EXPECT(gbc.readMem(0x9a06), 0x83);
        // CB 83 00EF
        gbc.setState(0x9e60, 0xaf8e, 0xb870, 0xc44f, 0x8261, 0x3b3, 0x1, 0x0);
        gbc.writeMem(0x9e60, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xaf8e);
        EXPECT(gbc.pc(), 0x9e62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e60), 0xcb);
        EXPECT(gbc.readMem(0x9e61), 0x83);
        // CB 83 00F0
        gbc.setState(0xe673, 0x6147, 0x99e0, 0x5e07, 0x2d6c, 0x46d7, 0x0, 0x1);
        gbc.writeMem(0xe673, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6147);
        EXPECT(gbc.pc(), 0xe675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe673), 0xcb);
        EXPECT(gbc.readMem(0xe674), 0x83);
        // CB 83 00F1
        gbc.setState(0x60a9, 0xede5, 0xdb30, 0x3454, 0xf4ca, 0xf7ea, 0x0, 0x0);
        gbc.writeMem(0x60a9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xede5);
        EXPECT(gbc.pc(), 0x60ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00F2
        gbc.setState(0x9997, 0x1bc9, 0x9300, 0x5fe8, 0xad62, 0x5d9b, 0x0, 0x1);
        gbc.writeMem(0x9997, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1bc9);
        EXPECT(gbc.pc(), 0x9999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9997), 0xcb);
        EXPECT(gbc.readMem(0x9998), 0x83);
        // CB 83 00F3
        gbc.setState(0xd88, 0x3236, 0xd8d0, 0xff02, 0x942, 0xa020, 0x0, 0x1);
        gbc.writeMem(0xd88, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3236);
        EXPECT(gbc.pc(), 0xd8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00F4
        gbc.setState(0x8cc, 0x2c18, 0x2e50, 0x3b94, 0x2216, 0x9052, 0x0, 0x0);
        gbc.writeMem(0x8cc, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2c18);
        EXPECT(gbc.pc(), 0x8ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00F5
        gbc.setState(0x3df6, 0x81b8, 0xb0d0, 0xf59d, 0x3afc, 0x65bc, 0x1, 0x1);
        gbc.writeMem(0x3df6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x81b8);
        EXPECT(gbc.pc(), 0x3df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00F7
        gbc.setState(0xc58d, 0xe542, 0x1f90, 0xd166, 0xacd4, 0xfbf2, 0x1, 0x0);
        gbc.writeMem(0xc58d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe542);
        EXPECT(gbc.pc(), 0xc58f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc58d), 0xcb);
        EXPECT(gbc.readMem(0xc58e), 0x83);
        // CB 83 00F8
        gbc.setState(0x56e2, 0x938c, 0xb6f0, 0x6807, 0x5f59, 0x7d4d, 0x0, 0x1);
        gbc.writeMem(0x56e2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x938c);
        EXPECT(gbc.pc(), 0x56e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00F9
        gbc.setState(0xdaee, 0x54f0, 0x89a0, 0x6137, 0x10bc, 0xeaa1, 0x1, 0x0);
        gbc.writeMem(0xdaee, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x54f0);
        EXPECT(gbc.pc(), 0xdaf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaee), 0xcb);
        EXPECT(gbc.readMem(0xdaef), 0x83);
        // CB 83 00FA
        gbc.setState(0xbdd, 0x1052, 0xca80, 0xad92, 0xca01, 0x472f, 0x0, 0x0);
        gbc.writeMem(0xbdd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1052);
        EXPECT(gbc.pc(), 0xbdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 00FB
        gbc.setState(0x40f6, 0x3590, 0x4070, 0xa996, 0xfc4f, 0xa5ad, 0x0, 0x1);
        gbc.writeMem(0x40f6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3590);
        EXPECT(gbc.pc(), 0x40f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00FC
        gbc.setState(0x6fb9, 0x67ec, 0xd4d0, 0x416d, 0x1de7, 0x6314, 0x1, 0x0);
        gbc.writeMem(0x6fb9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x67ec);
        EXPECT(gbc.pc(), 0x6fbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 00FE
        gbc.setState(0x945b, 0xe291, 0xa000, 0xe4df, 0xbb74, 0xebd3, 0x0, 0x0);
        gbc.writeMem(0x945b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe291);
        EXPECT(gbc.pc(), 0x945d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945b), 0xcb);
        EXPECT(gbc.readMem(0x945c), 0x83);
        // CB 83 00FF
        gbc.setState(0x453b, 0xd678, 0x4b90, 0x3c8e, 0x22e7, 0x6cc2, 0x0, 0x0);
        gbc.writeMem(0x453b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd678);
        EXPECT(gbc.pc(), 0x453d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0100
        gbc.setState(0x370c, 0xdc75, 0x6740, 0x8f95, 0x555e, 0xf782, 0x0, 0x1);
        gbc.writeMem(0x370c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xdc75);
        EXPECT(gbc.pc(), 0x370e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0101
        gbc.setState(0x38d3, 0x626b, 0xaf60, 0x5527, 0x250a, 0xe701, 0x0, 0x0);
        gbc.writeMem(0x38d3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x626b);
        EXPECT(gbc.pc(), 0x38d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0102
        gbc.setState(0xa00c, 0x1731, 0xbd90, 0x413, 0xade1, 0xb31b, 0x1, 0x1);
        gbc.writeMem(0xa00c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1731);
        EXPECT(gbc.pc(), 0xa00e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa00c), 0xcb);
        EXPECT(gbc.readMem(0xa00d), 0x83);
        // CB 83 0103
        gbc.setState(0x70a3, 0x9e8f, 0x7250, 0x4657, 0xa23, 0x590e, 0x1, 0x1);
        gbc.writeMem(0x70a3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9e8f);
        EXPECT(gbc.pc(), 0x70a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0104
        gbc.setState(0xe445, 0x8bf3, 0xe020, 0xb588, 0xbb0e, 0xd442, 0x0, 0x1);
        gbc.writeMem(0xe445, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8bf3);
        EXPECT(gbc.pc(), 0xe447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe445), 0xcb);
        EXPECT(gbc.readMem(0xe446), 0x83);
        // CB 83 0105
        gbc.setState(0xaeab, 0x8a6b, 0xc4e0, 0x379e, 0x8cb, 0x891a, 0x1, 0x0);
        gbc.writeMem(0xaeab, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8a6b);
        EXPECT(gbc.pc(), 0xaead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeab), 0xcb);
        EXPECT(gbc.readMem(0xaeac), 0x83);
        // CB 83 0106
        gbc.setState(0x7d80, 0x8a04, 0x7c10, 0xb6c9, 0x6cb0, 0xb6be, 0x1, 0x1);
        gbc.writeMem(0x7d80, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8a04);
        EXPECT(gbc.pc(), 0x7d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0107
        gbc.setState(0x2cfe, 0xdc2e, 0x2010, 0x33b9, 0x2f3a, 0xb4ed, 0x0, 0x0);
        gbc.writeMem(0x2cfe, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xdc2e);
        EXPECT(gbc.pc(), 0x2d00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0108
        gbc.setState(0x45b3, 0xf5ad, 0x8b70, 0x85e9, 0x97e4, 0x35e2, 0x1, 0x1);
        gbc.writeMem(0x45b3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf5ad);
        EXPECT(gbc.pc(), 0x45b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0109
        gbc.setState(0xd76e, 0xa414, 0xf220, 0x97a5, 0x4c9e, 0x455d, 0x0, 0x1);
        gbc.writeMem(0xd76e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa414);
        EXPECT(gbc.pc(), 0xd770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76e), 0xcb);
        EXPECT(gbc.readMem(0xd76f), 0x83);
        // CB 83 010A
        gbc.setState(0x35a9, 0x5ba5, 0xccf0, 0xea6c, 0x1d6, 0xe91a, 0x0, 0x0);
        gbc.writeMem(0x35a9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5ba5);
        EXPECT(gbc.pc(), 0x35ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 010B
        gbc.setState(0x1e99, 0x1ad5, 0x8950, 0x4fd7, 0x1e6c, 0x62d, 0x0, 0x0);
        gbc.writeMem(0x1e99, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1ad5);
        EXPECT(gbc.pc(), 0x1e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 010C
        gbc.setState(0x7fab, 0xc77a, 0xe450, 0x513e, 0xfd55, 0xbcbc, 0x1, 0x1);
        gbc.writeMem(0x7fab, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc77a);
        EXPECT(gbc.pc(), 0x7fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 010D
        gbc.setState(0x83fb, 0xd4d6, 0xda10, 0xbcd7, 0xc47f, 0x3683, 0x0, 0x0);
        gbc.writeMem(0x83fb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd4d6);
        EXPECT(gbc.pc(), 0x83fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fb), 0xcb);
        EXPECT(gbc.readMem(0x83fc), 0x83);
        // CB 83 010F
        gbc.setState(0xae42, 0xeaf9, 0x2280, 0x3573, 0x8bbc, 0xcc97, 0x1, 0x0);
        gbc.writeMem(0xae42, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xeaf9);
        EXPECT(gbc.pc(), 0xae44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae42), 0xcb);
        EXPECT(gbc.readMem(0xae43), 0x83);
        // CB 83 0110
        gbc.setState(0x1982, 0xbb7b, 0xe720, 0xef3f, 0x5ba6, 0x22a8, 0x1, 0x1);
        gbc.writeMem(0x1982, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbb7b);
        EXPECT(gbc.pc(), 0x1984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0111
        gbc.setState(0x3d61, 0x3e2, 0x92d0, 0x8c34, 0xecee, 0x3ca9, 0x0, 0x1);
        gbc.writeMem(0x3d61, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3e2);
        EXPECT(gbc.pc(), 0x3d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0113
        gbc.setState(0x3ac5, 0x9320, 0x9780, 0x46a, 0x33f2, 0x92cf, 0x0, 0x1);
        gbc.writeMem(0x3ac5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9320);
        EXPECT(gbc.pc(), 0x3ac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0114
        gbc.setState(0x440b, 0x191e, 0x45c0, 0x952d, 0xe480, 0xe8e4, 0x1, 0x0);
        gbc.writeMem(0x440b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x191e);
        EXPECT(gbc.pc(), 0x440d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0115
        gbc.setState(0x5b49, 0x3f5, 0xdaa0, 0xa333, 0xb9c5, 0x21b5, 0x0, 0x0);
        gbc.writeMem(0x5b49, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3f5);
        EXPECT(gbc.pc(), 0x5b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0116
        gbc.setState(0x8771, 0x4be6, 0xc090, 0x9216, 0x9146, 0xbfcd, 0x1, 0x0);
        gbc.writeMem(0x8771, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4be6);
        EXPECT(gbc.pc(), 0x8773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8771), 0xcb);
        EXPECT(gbc.readMem(0x8772), 0x83);
        // CB 83 0117
        gbc.setState(0xc760, 0xc501, 0x2d40, 0xa87d, 0x6dcf, 0x9b59, 0x0, 0x1);
        gbc.writeMem(0xc760, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc501);
        EXPECT(gbc.pc(), 0xc762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc760), 0xcb);
        EXPECT(gbc.readMem(0xc761), 0x83);
        // CB 83 0118
        gbc.setState(0xa4ec, 0x3ec9, 0x1690, 0xaa08, 0x534e, 0x13f0, 0x1, 0x1);
        gbc.writeMem(0xa4ec, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3ec9);
        EXPECT(gbc.pc(), 0xa4ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ec), 0xcb);
        EXPECT(gbc.readMem(0xa4ed), 0x83);
        // CB 83 0119
        gbc.setState(0x12a9, 0x3909, 0xec40, 0x4de8, 0x68ef, 0x43f1, 0x1, 0x0);
        gbc.writeMem(0x12a9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3909);
        EXPECT(gbc.pc(), 0x12ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 011A
        gbc.setState(0x1a32, 0x5a34, 0x4470, 0x9012, 0x70fb, 0xf379, 0x1, 0x0);
        gbc.writeMem(0x1a32, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5a34);
        EXPECT(gbc.pc(), 0x1a34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 011B
        gbc.setState(0xb0c5, 0x2928, 0x8210, 0x4a23, 0xa175, 0xe24, 0x0, 0x0);
        gbc.writeMem(0xb0c5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2928);
        EXPECT(gbc.pc(), 0xb0c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c5), 0xcb);
        EXPECT(gbc.readMem(0xb0c6), 0x83);
        // CB 83 011D
        gbc.setState(0xa750, 0xe543, 0xcc90, 0x2f14, 0xbc71, 0x3cf7, 0x0, 0x1);
        gbc.writeMem(0xa750, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe543);
        EXPECT(gbc.pc(), 0xa752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa750), 0xcb);
        EXPECT(gbc.readMem(0xa751), 0x83);
        // CB 83 011E
        gbc.setState(0x494a, 0xab8c, 0xfee0, 0x3490, 0x5609, 0xa56, 0x1, 0x0);
        gbc.writeMem(0x494a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xab8c);
        EXPECT(gbc.pc(), 0x494c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 011F
        gbc.setState(0xa477, 0x786e, 0xcd00, 0xad26, 0xa399, 0xdc03, 0x0, 0x0);
        gbc.writeMem(0xa477, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x786e);
        EXPECT(gbc.pc(), 0xa479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa477), 0xcb);
        EXPECT(gbc.readMem(0xa478), 0x83);
        // CB 83 0120
        gbc.setState(0xaced, 0x3769, 0x740, 0xcd36, 0x5850, 0xeb46, 0x0, 0x1);
        gbc.writeMem(0xaced, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3769);
        EXPECT(gbc.pc(), 0xacef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaced), 0xcb);
        EXPECT(gbc.readMem(0xacee), 0x83);
        // CB 83 0121
        gbc.setState(0xd6fc, 0x3435, 0x3f60, 0xd865, 0x4263, 0xa68a, 0x1, 0x0);
        gbc.writeMem(0xd6fc, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3435);
        EXPECT(gbc.pc(), 0xd6fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6fc), 0xcb);
        EXPECT(gbc.readMem(0xd6fd), 0x83);
        // CB 83 0122
        gbc.setState(0x7ebf, 0xb1f8, 0x6d40, 0x7363, 0x1359, 0x77b4, 0x1, 0x0);
        gbc.writeMem(0x7ebf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb1f8);
        EXPECT(gbc.pc(), 0x7ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0123
        gbc.setState(0xdfea, 0x85ce, 0xfd50, 0x4eac, 0xc3ae, 0xe2ed, 0x0, 0x1);
        gbc.writeMem(0xdfea, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x85ce);
        EXPECT(gbc.pc(), 0xdfec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfea), 0xcb);
        EXPECT(gbc.readMem(0xdfeb), 0x83);
        // CB 83 0124
        gbc.setState(0x1295, 0x86ed, 0x5e10, 0x2e1d, 0x9f4c, 0x3886, 0x1, 0x1);
        gbc.writeMem(0x1295, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x86ed);
        EXPECT(gbc.pc(), 0x1297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0125
        gbc.setState(0x3da2, 0x5fa8, 0x25c0, 0x87db, 0x4fdf, 0xc70, 0x0, 0x1);
        gbc.writeMem(0x3da2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5fa8);
        EXPECT(gbc.pc(), 0x3da4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0126
        gbc.setState(0xd7, 0xc407, 0x35e0, 0x2da4, 0x7adb, 0x271a, 0x0, 0x0);
        gbc.writeMem(0xd7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc407);
        EXPECT(gbc.pc(), 0xd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0127
        gbc.setState(0x8276, 0x5926, 0x6520, 0x3927, 0x10fb, 0xfbe8, 0x1, 0x0);
        gbc.writeMem(0x8276, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5926);
        EXPECT(gbc.pc(), 0x8278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8276), 0xcb);
        EXPECT(gbc.readMem(0x8277), 0x83);
        // CB 83 0128
        gbc.setState(0x2e3f, 0xab4d, 0xc130, 0xf38f, 0xe215, 0xcecb, 0x0, 0x0);
        gbc.writeMem(0x2e3f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xab4d);
        EXPECT(gbc.pc(), 0x2e41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0129
        gbc.setState(0x3805, 0xe243, 0x3450, 0x40d, 0x1d86, 0x71af, 0x0, 0x1);
        gbc.writeMem(0x3805, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe243);
        EXPECT(gbc.pc(), 0x3807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 012A
        gbc.setState(0x8069, 0xb96b, 0x5d90, 0x9a64, 0xcf8a, 0x8f66, 0x0, 0x1);
        gbc.writeMem(0x8069, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb96b);
        EXPECT(gbc.pc(), 0x806b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8069), 0xcb);
        EXPECT(gbc.readMem(0x806a), 0x83);
        // CB 83 012B
        gbc.setState(0xedf5, 0x54d2, 0x9a90, 0x166d, 0x7126, 0xdbfd, 0x1, 0x0);
        gbc.writeMem(0xedf5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x54d2);
        EXPECT(gbc.pc(), 0xedf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf5), 0xcb);
        EXPECT(gbc.readMem(0xedf6), 0x83);
        // CB 83 012C
        gbc.setState(0xa41c, 0x2b31, 0xb530, 0xda66, 0x8420, 0x3a, 0x0, 0x0);
        gbc.writeMem(0xa41c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2b31);
        EXPECT(gbc.pc(), 0xa41e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa41c), 0xcb);
        EXPECT(gbc.readMem(0xa41d), 0x83);
        // CB 83 012D
        gbc.setState(0x8a44, 0xc26d, 0x4530, 0x19e5, 0x9775, 0x862, 0x0, 0x1);
        gbc.writeMem(0x8a44, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc26d);
        EXPECT(gbc.pc(), 0x8a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a44), 0xcb);
        EXPECT(gbc.readMem(0x8a45), 0x83);
        // CB 83 012E
        gbc.setState(0x5be2, 0x73c2, 0xcd60, 0x7762, 0x8ece, 0x6464, 0x0, 0x1);
        gbc.writeMem(0x5be2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x73c2);
        EXPECT(gbc.pc(), 0x5be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 012F
        gbc.setState(0x8b71, 0xf961, 0xa550, 0x90cf, 0xd681, 0x13fa, 0x0, 0x0);
        gbc.writeMem(0x8b71, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf961);
        EXPECT(gbc.pc(), 0x8b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b71), 0xcb);
        EXPECT(gbc.readMem(0x8b72), 0x83);
        // CB 83 0130
        gbc.setState(0xa0fd, 0x1a2b, 0x6770, 0xc35e, 0x63e6, 0x5eef, 0x0, 0x0);
        gbc.writeMem(0xa0fd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1a2b);
        EXPECT(gbc.pc(), 0xa0ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0fd), 0xcb);
        EXPECT(gbc.readMem(0xa0fe), 0x83);
        // CB 83 0131
        gbc.setState(0x207c, 0x2362, 0xfb70, 0x4df7, 0x79b4, 0x9eff, 0x0, 0x1);
        gbc.writeMem(0x207c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2362);
        EXPECT(gbc.pc(), 0x207e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0133
        gbc.setState(0x1261, 0x889a, 0xdcf0, 0x8315, 0xcf1e, 0xb3f6, 0x1, 0x0);
        gbc.writeMem(0x1261, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x889a);
        EXPECT(gbc.pc(), 0x1263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0134
        gbc.setState(0x6b78, 0xa895, 0x2c80, 0x9f77, 0x5cd6, 0xa60f, 0x0, 0x0);
        gbc.writeMem(0x6b78, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa895);
        EXPECT(gbc.pc(), 0x6b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0135
        gbc.setState(0x6fbd, 0xecaa, 0x99f0, 0xb892, 0xf213, 0xa1bf, 0x0, 0x0);
        gbc.writeMem(0x6fbd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xecaa);
        EXPECT(gbc.pc(), 0x6fbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0136
        gbc.setState(0x9671, 0xe134, 0xc180, 0x2d85, 0x1772, 0x9b91, 0x0, 0x0);
        gbc.writeMem(0x9671, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe134);
        EXPECT(gbc.pc(), 0x9673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9671), 0xcb);
        EXPECT(gbc.readMem(0x9672), 0x83);
        // CB 83 0137
        gbc.setState(0x81e, 0xc93a, 0x7440, 0xd499, 0x7b91, 0x1020, 0x0, 0x0);
        gbc.writeMem(0x81e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc93a);
        EXPECT(gbc.pc(), 0x820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0138
        gbc.setState(0x5742, 0x2d45, 0x6ec0, 0xb78c, 0x257b, 0x775, 0x1, 0x0);
        gbc.writeMem(0x5742, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2d45);
        EXPECT(gbc.pc(), 0x5744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0139
        gbc.setState(0x4781, 0xd7fb, 0x5e60, 0x14aa, 0x4c1c, 0xbdd6, 0x1, 0x0);
        gbc.writeMem(0x4781, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd7fb);
        EXPECT(gbc.pc(), 0x4783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 013A
        gbc.setState(0xc8f3, 0x945b, 0xf1b0, 0xde3, 0xc20f, 0xd40, 0x1, 0x1);
        gbc.writeMem(0xc8f3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x945b);
        EXPECT(gbc.pc(), 0xc8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f3), 0xcb);
        EXPECT(gbc.readMem(0xc8f4), 0x83);
        // CB 83 013B
        gbc.setState(0x935c, 0x8564, 0xb7a0, 0xb199, 0xe733, 0x2c3f, 0x0, 0x1);
        gbc.writeMem(0x935c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8564);
        EXPECT(gbc.pc(), 0x935e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x935c), 0xcb);
        EXPECT(gbc.readMem(0x935d), 0x83);
        // CB 83 013C
        gbc.setState(0x2b0e, 0x6fda, 0x5f00, 0xf8a9, 0xc8a9, 0xc26a, 0x0, 0x1);
        gbc.writeMem(0x2b0e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6fda);
        EXPECT(gbc.pc(), 0x2b10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 013D
        gbc.setState(0x3f8d, 0x3c5b, 0xdf30, 0xe917, 0x9ecd, 0xf7a3, 0x0, 0x0);
        gbc.writeMem(0x3f8d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3c5b);
        EXPECT(gbc.pc(), 0x3f8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 013E
        gbc.setState(0xc73f, 0x9ebf, 0x2730, 0x6c9c, 0x27ba, 0x19b6, 0x1, 0x0);
        gbc.writeMem(0xc73f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9ebf);
        EXPECT(gbc.pc(), 0xc741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc73f), 0xcb);
        EXPECT(gbc.readMem(0xc740), 0x83);
        // CB 83 013F
        gbc.setState(0x708f, 0x26c, 0x4860, 0x8c02, 0x8a70, 0x7417, 0x1, 0x1);
        gbc.writeMem(0x708f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x26c);
        EXPECT(gbc.pc(), 0x7091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0140
        gbc.setState(0x8e3b, 0xa8fa, 0x710, 0xe265, 0xddcc, 0xd23d, 0x1, 0x1);
        gbc.writeMem(0x8e3b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa8fa);
        EXPECT(gbc.pc(), 0x8e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e3b), 0xcb);
        EXPECT(gbc.readMem(0x8e3c), 0x83);
        // CB 83 0141
        gbc.setState(0x9376, 0x666f, 0x7590, 0xeadc, 0x1f86, 0xf72a, 0x1, 0x0);
        gbc.writeMem(0x9376, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x666f);
        EXPECT(gbc.pc(), 0x9378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9376), 0xcb);
        EXPECT(gbc.readMem(0x9377), 0x83);
        // CB 83 0142
        gbc.setState(0x74c8, 0x73bd, 0xaa90, 0x4241, 0xe305, 0xeb72, 0x0, 0x1);
        gbc.writeMem(0x74c8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x73bd);
        EXPECT(gbc.pc(), 0x74ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0143
        gbc.setState(0xec80, 0xb413, 0xb960, 0x3aaf, 0x65b3, 0x9463, 0x1, 0x0);
        gbc.writeMem(0xec80, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb413);
        EXPECT(gbc.pc(), 0xec82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec80), 0xcb);
        EXPECT(gbc.readMem(0xec81), 0x83);
        // CB 83 0144
        gbc.setState(0xd057, 0xbde, 0x2140, 0xdf54, 0xcd08, 0xd3f7, 0x0, 0x0);
        gbc.writeMem(0xd057, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbde);
        EXPECT(gbc.pc(), 0xd059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd057), 0xcb);
        EXPECT(gbc.readMem(0xd058), 0x83);
        // CB 83 0146
        gbc.setState(0x81b7, 0xecf7, 0x6f40, 0xbafa, 0x2a5c, 0x796b, 0x1, 0x1);
        gbc.writeMem(0x81b7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xecf7);
        EXPECT(gbc.pc(), 0x81b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b7), 0xcb);
        EXPECT(gbc.readMem(0x81b8), 0x83);
        // CB 83 014A
        gbc.setState(0xeec2, 0xd729, 0x4b90, 0x937f, 0xdaf3, 0xfb20, 0x0, 0x0);
        gbc.writeMem(0xeec2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd729);
        EXPECT(gbc.pc(), 0xeec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec2), 0xcb);
        EXPECT(gbc.readMem(0xeec3), 0x83);
        // CB 83 014B
        gbc.setState(0xf5e, 0xa341, 0x56c0, 0x7fb8, 0x3cf0, 0x8d6, 0x1, 0x1);
        gbc.writeMem(0xf5e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa341);
        EXPECT(gbc.pc(), 0xf60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 014C
        gbc.setState(0xae15, 0xb896, 0x4620, 0xfbbd, 0x6227, 0x76e6, 0x1, 0x0);
        gbc.writeMem(0xae15, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb896);
        EXPECT(gbc.pc(), 0xae17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae15), 0xcb);
        EXPECT(gbc.readMem(0xae16), 0x83);
        // CB 83 014D
        gbc.setState(0xb159, 0x3c92, 0xd670, 0x8204, 0x52ab, 0xbb8a, 0x1, 0x1);
        gbc.writeMem(0xb159, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3c92);
        EXPECT(gbc.pc(), 0xb15b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb159), 0xcb);
        EXPECT(gbc.readMem(0xb15a), 0x83);
        // CB 83 014E
        gbc.setState(0xa2b1, 0xe06a, 0x8be0, 0x7d41, 0x9fb5, 0xaa9, 0x1, 0x1);
        gbc.writeMem(0xa2b1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe06a);
        EXPECT(gbc.pc(), 0xa2b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b1), 0xcb);
        EXPECT(gbc.readMem(0xa2b2), 0x83);
        // CB 83 014F
        gbc.setState(0xe714, 0x757, 0xfb90, 0x6ce1, 0xb468, 0x7b7a, 0x0, 0x1);
        gbc.writeMem(0xe714, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x757);
        EXPECT(gbc.pc(), 0xe716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe714), 0xcb);
        EXPECT(gbc.readMem(0xe715), 0x83);
        // CB 83 0150
        gbc.setState(0x8c71, 0x8428, 0xd3b0, 0xa65, 0xca69, 0xd720, 0x1, 0x1);
        gbc.writeMem(0x8c71, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8428);
        EXPECT(gbc.pc(), 0x8c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c71), 0xcb);
        EXPECT(gbc.readMem(0x8c72), 0x83);
        // CB 83 0151
        gbc.setState(0x6138, 0x5781, 0xe520, 0x287, 0xa450, 0x4348, 0x1, 0x1);
        gbc.writeMem(0x6138, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5781);
        EXPECT(gbc.pc(), 0x613a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0152
        gbc.setState(0xd4e, 0xccc9, 0xa4d0, 0xcdbd, 0xfcf, 0xa7ac, 0x0, 0x1);
        gbc.writeMem(0xd4e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xccc9);
        EXPECT(gbc.pc(), 0xd50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0153
        gbc.setState(0x146, 0xe4dd, 0xd5d0, 0x2e1c, 0x51b6, 0x24a8, 0x0, 0x1);
        gbc.writeMem(0x146, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe4dd);
        EXPECT(gbc.pc(), 0x148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0154
        gbc.setState(0xe7c4, 0x1560, 0x7de0, 0x3659, 0x869c, 0x9b6, 0x1, 0x1);
        gbc.writeMem(0xe7c4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1560);
        EXPECT(gbc.pc(), 0xe7c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c4), 0xcb);
        EXPECT(gbc.readMem(0xe7c5), 0x83);
        // CB 83 0156
        gbc.setState(0xe303, 0x8bb3, 0x9690, 0x5047, 0xad45, 0x176f, 0x0, 0x0);
        gbc.writeMem(0xe303, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8bb3);
        EXPECT(gbc.pc(), 0xe305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe303), 0xcb);
        EXPECT(gbc.readMem(0xe304), 0x83);
        // CB 83 0157
        gbc.setState(0xa24f, 0xb36a, 0xedd0, 0x3255, 0xbee, 0x3c63, 0x0, 0x1);
        gbc.writeMem(0xa24f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb36a);
        EXPECT(gbc.pc(), 0xa251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa24f), 0xcb);
        EXPECT(gbc.readMem(0xa250), 0x83);
        // CB 83 0158
        gbc.setState(0x7c75, 0xdc72, 0x2760, 0x4693, 0x1609, 0xd48b, 0x1, 0x1);
        gbc.writeMem(0x7c75, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdc72);
        EXPECT(gbc.pc(), 0x7c77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0159
        gbc.setState(0xce08, 0xa1e6, 0x1c80, 0x7e4, 0x8ca1, 0x408b, 0x0, 0x1);
        gbc.writeMem(0xce08, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa1e6);
        EXPECT(gbc.pc(), 0xce0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce08), 0xcb);
        EXPECT(gbc.readMem(0xce09), 0x83);
        // CB 83 015A
        gbc.setState(0x3d81, 0xb69d, 0xe9c0, 0xab56, 0x26a3, 0xd5c, 0x1, 0x0);
        gbc.writeMem(0x3d81, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb69d);
        EXPECT(gbc.pc(), 0x3d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 015B
        gbc.setState(0xaf33, 0xf3f5, 0x3380, 0x3a8f, 0x881c, 0xcbb6, 0x0, 0x0);
        gbc.writeMem(0xaf33, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf3f5);
        EXPECT(gbc.pc(), 0xaf35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf33), 0xcb);
        EXPECT(gbc.readMem(0xaf34), 0x83);
        // CB 83 015C
        gbc.setState(0x93bd, 0x32b4, 0x89d0, 0x274a, 0x968b, 0xb517, 0x1, 0x1);
        gbc.writeMem(0x93bd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x32b4);
        EXPECT(gbc.pc(), 0x93bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93bd), 0xcb);
        EXPECT(gbc.readMem(0x93be), 0x83);
        // CB 83 015D
        gbc.setState(0x4c19, 0xadf0, 0xab0, 0xe7eb, 0xd785, 0xba47, 0x1, 0x0);
        gbc.writeMem(0x4c19, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xadf0);
        EXPECT(gbc.pc(), 0x4c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 015E
        gbc.setState(0x78fd, 0xadde, 0xa120, 0x700c, 0x910c, 0xb8f7, 0x1, 0x0);
        gbc.writeMem(0x78fd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xadde);
        EXPECT(gbc.pc(), 0x78ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 015F
        gbc.setState(0xb8eb, 0x65bf, 0x4950, 0xa4c, 0x1efe, 0xc199, 0x1, 0x0);
        gbc.writeMem(0xb8eb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x65bf);
        EXPECT(gbc.pc(), 0xb8ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8eb), 0xcb);
        EXPECT(gbc.readMem(0xb8ec), 0x83);
        // CB 83 0160
        gbc.setState(0x6f1d, 0xf4d8, 0x6de0, 0xb345, 0x4765, 0xc01c, 0x0, 0x1);
        gbc.writeMem(0x6f1d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf4d8);
        EXPECT(gbc.pc(), 0x6f1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0161
        gbc.setState(0x9502, 0x9290, 0x8b00, 0x742, 0xf7f7, 0xd586, 0x0, 0x1);
        gbc.writeMem(0x9502, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9290);
        EXPECT(gbc.pc(), 0x9504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9502), 0xcb);
        EXPECT(gbc.readMem(0x9503), 0x83);
        // CB 83 0162
        gbc.setState(0x801d, 0xefe7, 0x9a50, 0x2db1, 0x6fec, 0x5c3c, 0x1, 0x1);
        gbc.writeMem(0x801d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xefe7);
        EXPECT(gbc.pc(), 0x801f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801d), 0xcb);
        EXPECT(gbc.readMem(0x801e), 0x83);
        // CB 83 0163
        gbc.setState(0xc81a, 0x78b4, 0x290, 0x58d9, 0xc8c1, 0xee47, 0x1, 0x0);
        gbc.writeMem(0xc81a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x78b4);
        EXPECT(gbc.pc(), 0xc81c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc81a), 0xcb);
        EXPECT(gbc.readMem(0xc81b), 0x83);
        // CB 83 0164
        gbc.setState(0x221c, 0x8d87, 0x230, 0x65e5, 0x4d84, 0x14a, 0x0, 0x0);
        gbc.writeMem(0x221c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8d87);
        EXPECT(gbc.pc(), 0x221e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0166
        gbc.setState(0x77fe, 0x31cb, 0xb400, 0x2037, 0xd30d, 0x1e31, 0x1, 0x1);
        gbc.writeMem(0x77fe, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x31cb);
        EXPECT(gbc.pc(), 0x7800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0167
        gbc.setState(0x32e1, 0xdd72, 0xe580, 0xa8d1, 0x4f0, 0xddb6, 0x0, 0x0);
        gbc.writeMem(0x32e1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdd72);
        EXPECT(gbc.pc(), 0x32e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0168
        gbc.setState(0x33f0, 0xb4a0, 0xbd90, 0xc736, 0x379c, 0x4475, 0x0, 0x0);
        gbc.writeMem(0x33f0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb4a0);
        EXPECT(gbc.pc(), 0x33f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0169
        gbc.setState(0x8320, 0xe45f, 0x87a0, 0x4faf, 0x58c3, 0x640e, 0x1, 0x0);
        gbc.writeMem(0x8320, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe45f);
        EXPECT(gbc.pc(), 0x8322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8320), 0xcb);
        EXPECT(gbc.readMem(0x8321), 0x83);
        // CB 83 016A
        gbc.setState(0x5446, 0x6bdd, 0x71e0, 0x596, 0xdbdf, 0xdc60, 0x0, 0x0);
        gbc.writeMem(0x5446, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6bdd);
        EXPECT(gbc.pc(), 0x5448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 016B
        gbc.setState(0x5224, 0xada, 0x7ba0, 0xd633, 0x1560, 0x275a, 0x1, 0x1);
        gbc.writeMem(0x5224, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xada);
        EXPECT(gbc.pc(), 0x5226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 016C
        gbc.setState(0x14f7, 0x2a97, 0xcb50, 0xadad, 0x5543, 0xfedf, 0x0, 0x0);
        gbc.writeMem(0x14f7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2a97);
        EXPECT(gbc.pc(), 0x14f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 016D
        gbc.setState(0x3a5f, 0x1435, 0xa430, 0x161, 0x5e67, 0xabda, 0x1, 0x0);
        gbc.writeMem(0x3a5f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1435);
        EXPECT(gbc.pc(), 0x3a61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 016E
        gbc.setState(0x59d6, 0x7310, 0x8690, 0x133e, 0x24bc, 0x46d9, 0x0, 0x0);
        gbc.writeMem(0x59d6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7310);
        EXPECT(gbc.pc(), 0x59d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 016F
        gbc.setState(0xb3e3, 0x9f37, 0x4e0, 0x5c2e, 0x2d44, 0xb8bc, 0x1, 0x0);
        gbc.writeMem(0xb3e3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9f37);
        EXPECT(gbc.pc(), 0xb3e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3e3), 0xcb);
        EXPECT(gbc.readMem(0xb3e4), 0x83);
        // CB 83 0170
        gbc.setState(0xe73, 0xc96c, 0x6650, 0x5d1b, 0x4a55, 0x82e3, 0x0, 0x1);
        gbc.writeMem(0xe73, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc96c);
        EXPECT(gbc.pc(), 0xe75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0171
        gbc.setState(0xb07c, 0xb843, 0xb1a0, 0x10b4, 0xca2, 0x79a1, 0x1, 0x1);
        gbc.writeMem(0xb07c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb843);
        EXPECT(gbc.pc(), 0xb07e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07c), 0xcb);
        EXPECT(gbc.readMem(0xb07d), 0x83);
        // CB 83 0172
        gbc.setState(0x6ed0, 0xa2f7, 0x5620, 0x1cf3, 0x1b46, 0x3314, 0x0, 0x1);
        gbc.writeMem(0x6ed0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa2f7);
        EXPECT(gbc.pc(), 0x6ed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0173
        gbc.setState(0x106a, 0x1f60, 0x2ed0, 0x592c, 0x8600, 0xb3ab, 0x1, 0x1);
        gbc.writeMem(0x106a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1f60);
        EXPECT(gbc.pc(), 0x106c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0174
        gbc.setState(0x5479, 0x52f0, 0x8330, 0x4a46, 0xa6e0, 0x9fa3, 0x0, 0x1);
        gbc.writeMem(0x5479, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x52f0);
        EXPECT(gbc.pc(), 0x547b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0175
        gbc.setState(0xc3e7, 0x647, 0x91f0, 0x96e1, 0x63c, 0x54aa, 0x1, 0x1);
        gbc.writeMem(0xc3e7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x647);
        EXPECT(gbc.pc(), 0xc3e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e7), 0xcb);
        EXPECT(gbc.readMem(0xc3e8), 0x83);
        // CB 83 0176
        gbc.setState(0x236c, 0x2023, 0xfac0, 0x823f, 0xf89f, 0xa026, 0x1, 0x1);
        gbc.writeMem(0x236c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2023);
        EXPECT(gbc.pc(), 0x236e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0177
        gbc.setState(0x422c, 0xfd1c, 0x52c0, 0x3eeb, 0x5703, 0xd2ee, 0x1, 0x1);
        gbc.writeMem(0x422c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfd1c);
        EXPECT(gbc.pc(), 0x422e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0178
        gbc.setState(0x58a, 0xc2b3, 0x68d0, 0x818c, 0xe67a, 0x3a74, 0x1, 0x1);
        gbc.writeMem(0x58a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc2b3);
        EXPECT(gbc.pc(), 0x58c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0179
        gbc.setState(0xaebb, 0x1f2e, 0x5b0, 0xe76e, 0xbd92, 0xcedb, 0x1, 0x1);
        gbc.writeMem(0xaebb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1f2e);
        EXPECT(gbc.pc(), 0xaebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaebb), 0xcb);
        EXPECT(gbc.readMem(0xaebc), 0x83);
        // CB 83 017A
        gbc.setState(0x8053, 0xd17f, 0xcb60, 0xefbd, 0xd0c3, 0x158e, 0x1, 0x0);
        gbc.writeMem(0x8053, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd17f);
        EXPECT(gbc.pc(), 0x8055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8053), 0xcb);
        EXPECT(gbc.readMem(0x8054), 0x83);
        // CB 83 017C
        gbc.setState(0xbe92, 0xb851, 0xa7b0, 0xb707, 0x492, 0xf1c2, 0x1, 0x0);
        gbc.writeMem(0xbe92, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb851);
        EXPECT(gbc.pc(), 0xbe94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe92), 0xcb);
        EXPECT(gbc.readMem(0xbe93), 0x83);
        // CB 83 017D
        gbc.setState(0x167e, 0xdd02, 0xa410, 0x4442, 0xc25c, 0xc0a7, 0x0, 0x1);
        gbc.writeMem(0x167e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdd02);
        EXPECT(gbc.pc(), 0x1680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 017F
        gbc.setState(0x307b, 0x3b4c, 0x9960, 0x2806, 0x82cc, 0x8027, 0x0, 0x1);
        gbc.writeMem(0x307b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3b4c);
        EXPECT(gbc.pc(), 0x307d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0180
        gbc.setState(0xd47b, 0xcd9d, 0xdab0, 0x2243, 0x7a14, 0x8662, 0x1, 0x0);
        gbc.writeMem(0xd47b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcd9d);
        EXPECT(gbc.pc(), 0xd47d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47b), 0xcb);
        EXPECT(gbc.readMem(0xd47c), 0x83);
        // CB 83 0181
        gbc.setState(0xc14f, 0x4bd6, 0xdfc0, 0x3b17, 0xe0e2, 0xd967, 0x0, 0x0);
        gbc.writeMem(0xc14f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4bd6);
        EXPECT(gbc.pc(), 0xc151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc14f), 0xcb);
        EXPECT(gbc.readMem(0xc150), 0x83);
        // CB 83 0182
        gbc.setState(0xa944, 0x27fb, 0xf4d0, 0x1170, 0x3627, 0xf620, 0x1, 0x1);
        gbc.writeMem(0xa944, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x27fb);
        EXPECT(gbc.pc(), 0xa946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa944), 0xcb);
        EXPECT(gbc.readMem(0xa945), 0x83);
        // CB 83 0183
        gbc.setState(0x24f9, 0x5b75, 0x9a00, 0xc40, 0xb69c, 0xf222, 0x0, 0x0);
        gbc.writeMem(0x24f9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5b75);
        EXPECT(gbc.pc(), 0x24fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0184
        gbc.setState(0x504, 0x9677, 0x1430, 0xfe06, 0xbd92, 0x3d4c, 0x0, 0x1);
        gbc.writeMem(0x504, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9677);
        EXPECT(gbc.pc(), 0x506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0185
        gbc.setState(0xe3fd, 0x7037, 0xf0d0, 0x25bf, 0x2643, 0xa669, 0x0, 0x1);
        gbc.writeMem(0xe3fd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7037);
        EXPECT(gbc.pc(), 0xe3ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fd), 0xcb);
        EXPECT(gbc.readMem(0xe3fe), 0x83);
        // CB 83 0186
        gbc.setState(0x2f4, 0xc2c, 0xa390, 0x8c13, 0x1137, 0x6195, 0x1, 0x0);
        gbc.writeMem(0x2f4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc2c);
        EXPECT(gbc.pc(), 0x2f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0187
        gbc.setState(0x1939, 0x3e1d, 0x5420, 0x89b5, 0x4f3f, 0x37f5, 0x1, 0x0);
        gbc.writeMem(0x1939, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3e1d);
        EXPECT(gbc.pc(), 0x193b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0188
        gbc.setState(0x4631, 0x15e4, 0x6890, 0xd8d2, 0xc80, 0x98b8, 0x1, 0x1);
        gbc.writeMem(0x4631, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x15e4);
        EXPECT(gbc.pc(), 0x4633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0189
        gbc.setState(0x597a, 0x9a35, 0xedb0, 0x3b8b, 0x64a3, 0x9850, 0x0, 0x1);
        gbc.writeMem(0x597a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9a35);
        EXPECT(gbc.pc(), 0x597c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 018A
        gbc.setState(0x8434, 0x711, 0xfdb0, 0xdb13, 0xec97, 0x9473, 0x1, 0x1);
        gbc.writeMem(0x8434, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x711);
        EXPECT(gbc.pc(), 0x8436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8434), 0xcb);
        EXPECT(gbc.readMem(0x8435), 0x83);
        // CB 83 018B
        gbc.setState(0xa275, 0x308a, 0x82d0, 0x9fd6, 0xe41f, 0x7461, 0x1, 0x0);
        gbc.writeMem(0xa275, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x308a);
        EXPECT(gbc.pc(), 0xa277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa275), 0xcb);
        EXPECT(gbc.readMem(0xa276), 0x83);
        // CB 83 018C
        gbc.setState(0xe1da, 0x9d95, 0x26b0, 0x78d0, 0x18b5, 0xcffc, 0x0, 0x0);
        gbc.writeMem(0xe1da, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9d95);
        EXPECT(gbc.pc(), 0xe1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1da), 0xcb);
        EXPECT(gbc.readMem(0xe1db), 0x83);
        // CB 83 018D
        gbc.setState(0x5a24, 0x8661, 0x7d30, 0x7ee6, 0x8e79, 0x9cce, 0x0, 0x1);
        gbc.writeMem(0x5a24, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8661);
        EXPECT(gbc.pc(), 0x5a26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 018E
        gbc.setState(0x2582, 0xf534, 0x1f60, 0x5f0f, 0x9578, 0x2c03, 0x1, 0x0);
        gbc.writeMem(0x2582, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf534);
        EXPECT(gbc.pc(), 0x2584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 018F
        gbc.setState(0x2276, 0x50b7, 0xa8d0, 0x139e, 0x9b48, 0xcf9e, 0x0, 0x1);
        gbc.writeMem(0x2276, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x50b7);
        EXPECT(gbc.pc(), 0x2278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0191
        gbc.setState(0x9a62, 0xfec7, 0xfa30, 0x7ba5, 0xd7b, 0x6571, 0x1, 0x0);
        gbc.writeMem(0x9a62, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfec7);
        EXPECT(gbc.pc(), 0x9a64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a62), 0xcb);
        EXPECT(gbc.readMem(0x9a63), 0x83);
        // CB 83 0192
        gbc.setState(0xd045, 0x9ee9, 0xd0a0, 0xf68a, 0xe637, 0x2903, 0x0, 0x0);
        gbc.writeMem(0xd045, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9ee9);
        EXPECT(gbc.pc(), 0xd047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd045), 0xcb);
        EXPECT(gbc.readMem(0xd046), 0x83);
        // CB 83 0193
        gbc.setState(0xd24a, 0x8301, 0x4840, 0x6b79, 0x3700, 0x60e9, 0x1, 0x1);
        gbc.writeMem(0xd24a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8301);
        EXPECT(gbc.pc(), 0xd24c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd24a), 0xcb);
        EXPECT(gbc.readMem(0xd24b), 0x83);
        // CB 83 0194
        gbc.setState(0x93e2, 0xb9cc, 0x8390, 0x9df5, 0xec21, 0xce22, 0x1, 0x1);
        gbc.writeMem(0x93e2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb9cc);
        EXPECT(gbc.pc(), 0x93e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e2), 0xcb);
        EXPECT(gbc.readMem(0x93e3), 0x83);
        // CB 83 0195
        gbc.setState(0x7072, 0x35c, 0x9e80, 0x5e31, 0xcf9f, 0xe23b, 0x1, 0x0);
        gbc.writeMem(0x7072, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x35c);
        EXPECT(gbc.pc(), 0x7074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0196
        gbc.setState(0xd536, 0xfc53, 0x8f90, 0xf405, 0x785e, 0xd349, 0x0, 0x1);
        gbc.writeMem(0xd536, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfc53);
        EXPECT(gbc.pc(), 0xd538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd536), 0xcb);
        EXPECT(gbc.readMem(0xd537), 0x83);
        // CB 83 0197
        gbc.setState(0xe29b, 0x754, 0x4230, 0xc79e, 0x838b, 0xf5a0, 0x1, 0x1);
        gbc.writeMem(0xe29b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x754);
        EXPECT(gbc.pc(), 0xe29d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe29b), 0xcb);
        EXPECT(gbc.readMem(0xe29c), 0x83);
        // CB 83 0198
        gbc.setState(0x2d27, 0x3eda, 0x29d0, 0xc455, 0x2815, 0xdf6d, 0x0, 0x1);
        gbc.writeMem(0x2d27, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3eda);
        EXPECT(gbc.pc(), 0x2d29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0199
        gbc.setState(0x4c0d, 0x13ab, 0x2ad0, 0x62f3, 0x70a6, 0x2767, 0x0, 0x1);
        gbc.writeMem(0x4c0d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x13ab);
        EXPECT(gbc.pc(), 0x4c0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 019A
        gbc.setState(0x17b2, 0x9539, 0x1460, 0xfb31, 0x2355, 0xe12b, 0x0, 0x0);
        gbc.writeMem(0x17b2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9539);
        EXPECT(gbc.pc(), 0x17b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 019B
        gbc.setState(0xd9cb, 0x2d7a, 0x7fe0, 0x1138, 0xc0c4, 0x2d4, 0x1, 0x0);
        gbc.writeMem(0xd9cb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2d7a);
        EXPECT(gbc.pc(), 0xd9cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9cb), 0xcb);
        EXPECT(gbc.readMem(0xd9cc), 0x83);
        // CB 83 019C
        gbc.setState(0xc253, 0x8c3c, 0x3e70, 0x79a3, 0x6fcc, 0xe87b, 0x1, 0x1);
        gbc.writeMem(0xc253, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8c3c);
        EXPECT(gbc.pc(), 0xc255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc253), 0xcb);
        EXPECT(gbc.readMem(0xc254), 0x83);
        // CB 83 019D
        gbc.setState(0xb08d, 0x2f06, 0xda60, 0x7bc0, 0x72b7, 0xcd82, 0x0, 0x1);
        gbc.writeMem(0xb08d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2f06);
        EXPECT(gbc.pc(), 0xb08f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08d), 0xcb);
        EXPECT(gbc.readMem(0xb08e), 0x83);
        // CB 83 019E
        gbc.setState(0x9d62, 0x31b2, 0x86c0, 0xcad8, 0xc0cf, 0x78f0, 0x1, 0x0);
        gbc.writeMem(0x9d62, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x31b2);
        EXPECT(gbc.pc(), 0x9d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d62), 0xcb);
        EXPECT(gbc.readMem(0x9d63), 0x83);
        // CB 83 019F
        gbc.setState(0x2851, 0xd21d, 0x49a0, 0x3b00, 0xf667, 0x17ee, 0x0, 0x1);
        gbc.writeMem(0x2851, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd21d);
        EXPECT(gbc.pc(), 0x2853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01A0
        gbc.setState(0x2981, 0xfaa3, 0x5d70, 0x57a, 0xe92d, 0xfbd4, 0x1, 0x0);
        gbc.writeMem(0x2981, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfaa3);
        EXPECT(gbc.pc(), 0x2983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01A1
        gbc.setState(0x5402, 0xe736, 0x11a0, 0x82ce, 0x4569, 0x91df, 0x1, 0x0);
        gbc.writeMem(0x5402, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe736);
        EXPECT(gbc.pc(), 0x5404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01A2
        gbc.setState(0x136e, 0x2002, 0x62e0, 0x6f37, 0x608e, 0xdefe, 0x1, 0x0);
        gbc.writeMem(0x136e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2002);
        EXPECT(gbc.pc(), 0x1370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01A3
        gbc.setState(0x174a, 0xaa0d, 0x24c0, 0x2dcd, 0xfa1a, 0x826a, 0x1, 0x1);
        gbc.writeMem(0x174a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xaa0d);
        EXPECT(gbc.pc(), 0x174c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01A4
        gbc.setState(0xcddf, 0x804a, 0x6ba0, 0x928d, 0x35ee, 0x9cd, 0x0, 0x1);
        gbc.writeMem(0xcddf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x804a);
        EXPECT(gbc.pc(), 0xcde1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcddf), 0xcb);
        EXPECT(gbc.readMem(0xcde0), 0x83);
        // CB 83 01A5
        gbc.setState(0xa785, 0xf5cf, 0x3ec0, 0xcced, 0x7e8c, 0x8ab0, 0x1, 0x0);
        gbc.writeMem(0xa785, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf5cf);
        EXPECT(gbc.pc(), 0xa787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa785), 0xcb);
        EXPECT(gbc.readMem(0xa786), 0x83);
        // CB 83 01A6
        gbc.setState(0xe003, 0xfdc7, 0x7d0, 0xd321, 0xf259, 0x2b8, 0x0, 0x0);
        gbc.writeMem(0xe003, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfdc7);
        EXPECT(gbc.pc(), 0xe005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe003), 0xcb);
        EXPECT(gbc.readMem(0xe004), 0x83);
        // CB 83 01A7
        gbc.setState(0x28aa, 0xeae9, 0x5120, 0xf56a, 0xdddf, 0xe7ec, 0x1, 0x1);
        gbc.writeMem(0x28aa, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xeae9);
        EXPECT(gbc.pc(), 0x28ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01A8
        gbc.setState(0x32fd, 0x33aa, 0xc2b0, 0x9e34, 0x77b5, 0x1a21, 0x0, 0x1);
        gbc.writeMem(0x32fd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x33aa);
        EXPECT(gbc.pc(), 0x32ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01A9
        gbc.setState(0x91ed, 0xf0c, 0x5240, 0xb427, 0x8493, 0x7380, 0x1, 0x0);
        gbc.writeMem(0x91ed, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf0c);
        EXPECT(gbc.pc(), 0x91ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ed), 0xcb);
        EXPECT(gbc.readMem(0x91ee), 0x83);
        // CB 83 01AA
        gbc.setState(0xd854, 0x825a, 0x8780, 0x2ec1, 0x40e2, 0x59b0, 0x0, 0x0);
        gbc.writeMem(0xd854, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x825a);
        EXPECT(gbc.pc(), 0xd856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd854), 0xcb);
        EXPECT(gbc.readMem(0xd855), 0x83);
        // CB 83 01AB
        gbc.setState(0xd83c, 0x69cc, 0x4710, 0xea43, 0x3162, 0xe15f, 0x0, 0x1);
        gbc.writeMem(0xd83c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x69cc);
        EXPECT(gbc.pc(), 0xd83e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd83c), 0xcb);
        EXPECT(gbc.readMem(0xd83d), 0x83);
        // CB 83 01AC
        gbc.setState(0x2e47, 0x241f, 0x6f10, 0xaee, 0x3a5b, 0x2092, 0x0, 0x0);
        gbc.writeMem(0x2e47, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x241f);
        EXPECT(gbc.pc(), 0x2e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01AD
        gbc.setState(0x8767, 0x3365, 0x8610, 0x3e50, 0xa632, 0xd659, 0x0, 0x1);
        gbc.writeMem(0x8767, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3365);
        EXPECT(gbc.pc(), 0x8769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8767), 0xcb);
        EXPECT(gbc.readMem(0x8768), 0x83);
        // CB 83 01AE
        gbc.setState(0x326f, 0x7b55, 0xebb0, 0x780, 0xad20, 0x40e0, 0x1, 0x1);
        gbc.writeMem(0x326f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7b55);
        EXPECT(gbc.pc(), 0x3271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01AF
        gbc.setState(0xda10, 0xc13d, 0xe610, 0x6bb1, 0x2723, 0x346c, 0x1, 0x1);
        gbc.writeMem(0xda10, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc13d);
        EXPECT(gbc.pc(), 0xda12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda10), 0xcb);
        EXPECT(gbc.readMem(0xda11), 0x83);
        // CB 83 01B0
        gbc.setState(0xe8ff, 0xa276, 0x8310, 0xa3e3, 0x1f7d, 0x2e09, 0x1, 0x0);
        gbc.writeMem(0xe8ff, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa276);
        EXPECT(gbc.pc(), 0xe901);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8ff), 0xcb);
        EXPECT(gbc.readMem(0xe900), 0x83);
        // CB 83 01B1
        gbc.setState(0x23d1, 0x8b14, 0xa210, 0x6487, 0xdc5, 0x7b1e, 0x1, 0x0);
        gbc.writeMem(0x23d1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8b14);
        EXPECT(gbc.pc(), 0x23d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01B2
        gbc.setState(0xa1f, 0xd872, 0x56a0, 0xeeeb, 0xba8f, 0x7fee, 0x1, 0x1);
        gbc.writeMem(0xa1f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd872);
        EXPECT(gbc.pc(), 0xa21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01B3
        gbc.setState(0x5eaa, 0x3518, 0x60b0, 0xeee1, 0xb191, 0xda13, 0x1, 0x0);
        gbc.writeMem(0x5eaa, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3518);
        EXPECT(gbc.pc(), 0x5eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01B4
        gbc.setState(0x9afd, 0xe242, 0xbfb0, 0xc231, 0xffed, 0x47b7, 0x0, 0x1);
        gbc.writeMem(0x9afd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe242);
        EXPECT(gbc.pc(), 0x9aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9afd), 0xcb);
        EXPECT(gbc.readMem(0x9afe), 0x83);
        // CB 83 01B5
        gbc.setState(0x6ab6, 0x4a9a, 0xa6a0, 0xb581, 0x156f, 0x98e6, 0x0, 0x0);
        gbc.writeMem(0x6ab6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4a9a);
        EXPECT(gbc.pc(), 0x6ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01B6
        gbc.setState(0xbf2f, 0x25ab, 0x7e20, 0x40b0, 0x5f03, 0x1719, 0x1, 0x1);
        gbc.writeMem(0xbf2f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x25ab);
        EXPECT(gbc.pc(), 0xbf31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf2f), 0xcb);
        EXPECT(gbc.readMem(0xbf30), 0x83);
        // CB 83 01B7
        gbc.setState(0x8092, 0x40c9, 0x80a0, 0x562c, 0x3a1f, 0x436c, 0x1, 0x1);
        gbc.writeMem(0x8092, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x40c9);
        EXPECT(gbc.pc(), 0x8094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8092), 0xcb);
        EXPECT(gbc.readMem(0x8093), 0x83);
        // CB 83 01B8
        gbc.setState(0x4dc0, 0x78fe, 0x1fe0, 0x291f, 0x1bd6, 0x84d2, 0x0, 0x1);
        gbc.writeMem(0x4dc0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x78fe);
        EXPECT(gbc.pc(), 0x4dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01B9
        gbc.setState(0xe59e, 0x60d8, 0x2e80, 0xeaa0, 0x9572, 0x3b84, 0x1, 0x0);
        gbc.writeMem(0xe59e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x60d8);
        EXPECT(gbc.pc(), 0xe5a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59e), 0xcb);
        EXPECT(gbc.readMem(0xe59f), 0x83);
        // CB 83 01BA
        gbc.setState(0x84ee, 0x2ef5, 0xb410, 0x13a, 0xf251, 0x3089, 0x1, 0x1);
        gbc.writeMem(0x84ee, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2ef5);
        EXPECT(gbc.pc(), 0x84f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ee), 0xcb);
        EXPECT(gbc.readMem(0x84ef), 0x83);
        // CB 83 01BB
        gbc.setState(0x94a3, 0x7906, 0xa850, 0x264d, 0x4f5, 0x26a2, 0x0, 0x0);
        gbc.writeMem(0x94a3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7906);
        EXPECT(gbc.pc(), 0x94a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94a3), 0xcb);
        EXPECT(gbc.readMem(0x94a4), 0x83);
        // CB 83 01BC
        gbc.setState(0xb30, 0x2847, 0x6ba0, 0xf447, 0xdd91, 0x387f, 0x0, 0x1);
        gbc.writeMem(0xb30, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2847);
        EXPECT(gbc.pc(), 0xb32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01BD
        gbc.setState(0x1ec0, 0xa39, 0xc860, 0xe71b, 0x279, 0xc32d, 0x0, 0x1);
        gbc.writeMem(0x1ec0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa39);
        EXPECT(gbc.pc(), 0x1ec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01BE
        gbc.setState(0x3b5e, 0x1479, 0xced0, 0xc5d9, 0x1a5b, 0xd27, 0x1, 0x1);
        gbc.writeMem(0x3b5e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1479);
        EXPECT(gbc.pc(), 0x3b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01BF
        gbc.setState(0x45ce, 0x84cf, 0xafb0, 0xd1be, 0x1821, 0x41b3, 0x1, 0x1);
        gbc.writeMem(0x45ce, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x84cf);
        EXPECT(gbc.pc(), 0x45d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01C0
        gbc.setState(0x581b, 0x8dcf, 0x2340, 0xd267, 0xe963, 0xaa5b, 0x0, 0x0);
        gbc.writeMem(0x581b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8dcf);
        EXPECT(gbc.pc(), 0x581d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01C1
        gbc.setState(0x62e1, 0x9ee2, 0x7e80, 0xbc31, 0x8484, 0xc16c, 0x1, 0x1);
        gbc.writeMem(0x62e1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9ee2);
        EXPECT(gbc.pc(), 0x62e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01C2
        gbc.setState(0xc0f4, 0x9796, 0xf0a0, 0x7e97, 0xb787, 0xbb5e, 0x1, 0x1);
        gbc.writeMem(0xc0f4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9796);
        EXPECT(gbc.pc(), 0xc0f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0f4), 0xcb);
        EXPECT(gbc.readMem(0xc0f5), 0x83);
        // CB 83 01C3
        gbc.setState(0x3690, 0xb72a, 0xd500, 0x297e, 0x3d17, 0x435b, 0x1, 0x1);
        gbc.writeMem(0x3690, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb72a);
        EXPECT(gbc.pc(), 0x3692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01C5
        gbc.setState(0xd0ef, 0xfc40, 0xd330, 0xacbf, 0xb3d0, 0xc45f, 0x1, 0x0);
        gbc.writeMem(0xd0ef, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfc40);
        EXPECT(gbc.pc(), 0xd0f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ef), 0xcb);
        EXPECT(gbc.readMem(0xd0f0), 0x83);
        // CB 83 01C6
        gbc.setState(0x49f5, 0x6a9, 0xdcf0, 0x253e, 0x11a5, 0x7b61, 0x1, 0x1);
        gbc.writeMem(0x49f5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6a9);
        EXPECT(gbc.pc(), 0x49f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01C7
        gbc.setState(0x4fcb, 0x870b, 0x220, 0x4901, 0x113a, 0x7046, 0x1, 0x0);
        gbc.writeMem(0x4fcb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x870b);
        EXPECT(gbc.pc(), 0x4fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01C8
        gbc.setState(0x58b9, 0x87e6, 0xb6f0, 0xd0e, 0xf06d, 0x5afe, 0x0, 0x0);
        gbc.writeMem(0x58b9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x87e6);
        EXPECT(gbc.pc(), 0x58bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01C9
        gbc.setState(0x8c79, 0x25a8, 0xc290, 0xff7b, 0x1e02, 0x1e7a, 0x0, 0x1);
        gbc.writeMem(0x8c79, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x25a8);
        EXPECT(gbc.pc(), 0x8c7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c79), 0xcb);
        EXPECT(gbc.readMem(0x8c7a), 0x83);
        // CB 83 01CA
        gbc.setState(0x5eb3, 0xe8b0, 0xda60, 0xcd2e, 0x964c, 0x6e7f, 0x0, 0x0);
        gbc.writeMem(0x5eb3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe8b0);
        EXPECT(gbc.pc(), 0x5eb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01CB
        gbc.setState(0x73e9, 0x46f7, 0x2100, 0xfb2a, 0xec60, 0x7ad7, 0x1, 0x1);
        gbc.writeMem(0x73e9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x46f7);
        EXPECT(gbc.pc(), 0x73eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01CC
        gbc.setState(0x16e3, 0xdaec, 0xa500, 0xe21, 0xd75c, 0x2628, 0x1, 0x1);
        gbc.writeMem(0x16e3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdaec);
        EXPECT(gbc.pc(), 0x16e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01CD
        gbc.setState(0x848, 0xfbad, 0x60d0, 0xc49c, 0x6730, 0x22dd, 0x1, 0x1);
        gbc.writeMem(0x848, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfbad);
        EXPECT(gbc.pc(), 0x84a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01CE
        gbc.setState(0x4f62, 0xba65, 0x4e10, 0xb8c7, 0xcf01, 0x2ba5, 0x0, 0x1);
        gbc.writeMem(0x4f62, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xba65);
        EXPECT(gbc.pc(), 0x4f64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01CF
        gbc.setState(0x624c, 0x6dc7, 0x3bc0, 0xb444, 0xc9bc, 0x8259, 0x1, 0x1);
        gbc.writeMem(0x624c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6dc7);
        EXPECT(gbc.pc(), 0x624e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01D0
        gbc.setState(0x1ff9, 0x3637, 0x8560, 0xe44b, 0xb90a, 0xd5fb, 0x0, 0x1);
        gbc.writeMem(0x1ff9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3637);
        EXPECT(gbc.pc(), 0x1ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01D1
        gbc.setState(0xc493, 0x211b, 0xd1d0, 0xf645, 0x9be5, 0x90ad, 0x1, 0x0);
        gbc.writeMem(0xc493, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x211b);
        EXPECT(gbc.pc(), 0xc495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc493), 0xcb);
        EXPECT(gbc.readMem(0xc494), 0x83);
        // CB 83 01D2
        gbc.setState(0x642c, 0x572b, 0xaa80, 0x8b1c, 0xd179, 0x7654, 0x0, 0x1);
        gbc.writeMem(0x642c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x572b);
        EXPECT(gbc.pc(), 0x642e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01D3
        gbc.setState(0x38c4, 0xd9aa, 0x26c0, 0x2390, 0xa4b5, 0x9d9d, 0x1, 0x0);
        gbc.writeMem(0x38c4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd9aa);
        EXPECT(gbc.pc(), 0x38c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01D4
        gbc.setState(0x4f2d, 0xa0ea, 0x2ed0, 0x58d7, 0x76f8, 0x319c, 0x0, 0x1);
        gbc.writeMem(0x4f2d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa0ea);
        EXPECT(gbc.pc(), 0x4f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01D5
        gbc.setState(0xd2c6, 0x8192, 0x7b60, 0x65cf, 0xe844, 0xab15, 0x1, 0x0);
        gbc.writeMem(0xd2c6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8192);
        EXPECT(gbc.pc(), 0xd2c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2c6), 0xcb);
        EXPECT(gbc.readMem(0xd2c7), 0x83);
        // CB 83 01D6
        gbc.setState(0x7525, 0x1f91, 0xad20, 0x83d1, 0x3791, 0x3eec, 0x0, 0x0);
        gbc.writeMem(0x7525, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1f91);
        EXPECT(gbc.pc(), 0x7527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01D7
        gbc.setState(0xc4cd, 0x81f8, 0x8a20, 0x5f8c, 0xfcb4, 0x9f9e, 0x1, 0x0);
        gbc.writeMem(0xc4cd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x81f8);
        EXPECT(gbc.pc(), 0xc4cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4cd), 0xcb);
        EXPECT(gbc.readMem(0xc4ce), 0x83);
        // CB 83 01D8
        gbc.setState(0xb493, 0x277, 0x5f30, 0xca4b, 0x58c9, 0x6d00, 0x1, 0x1);
        gbc.writeMem(0xb493, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x277);
        EXPECT(gbc.pc(), 0xb495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb493), 0xcb);
        EXPECT(gbc.readMem(0xb494), 0x83);
        // CB 83 01D9
        gbc.setState(0x3882, 0xa63a, 0x1840, 0x970c, 0x815c, 0xf66, 0x1, 0x1);
        gbc.writeMem(0x3882, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa63a);
        EXPECT(gbc.pc(), 0x3884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01DA
        gbc.setState(0x24a7, 0x8465, 0xeaf0, 0x93b4, 0xbd8b, 0x68e0, 0x1, 0x0);
        gbc.writeMem(0x24a7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8465);
        EXPECT(gbc.pc(), 0x24a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01DB
        gbc.setState(0x1392, 0x12e3, 0x1410, 0x8acb, 0x2737, 0x587c, 0x1, 0x0);
        gbc.writeMem(0x1392, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x12e3);
        EXPECT(gbc.pc(), 0x1394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01DC
        gbc.setState(0x1c3b, 0x7df0, 0x1d20, 0x7449, 0x1f3b, 0x325f, 0x1, 0x1);
        gbc.writeMem(0x1c3b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7df0);
        EXPECT(gbc.pc(), 0x1c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01DD
        gbc.setState(0xe01b, 0x2bf6, 0x6b0, 0x64fb, 0x91, 0x4b3e, 0x1, 0x1);
        gbc.writeMem(0xe01b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2bf6);
        EXPECT(gbc.pc(), 0xe01d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe01b), 0xcb);
        EXPECT(gbc.readMem(0xe01c), 0x83);
        // CB 83 01DE
        gbc.setState(0x1b3b, 0x1155, 0x9750, 0x3371, 0x6ce, 0x7756, 0x0, 0x0);
        gbc.writeMem(0x1b3b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1155);
        EXPECT(gbc.pc(), 0x1b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01DF
        gbc.setState(0xb5df, 0x1ca4, 0xd510, 0xd888, 0x35f7, 0x5146, 0x1, 0x1);
        gbc.writeMem(0xb5df, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1ca4);
        EXPECT(gbc.pc(), 0xb5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5df), 0xcb);
        EXPECT(gbc.readMem(0xb5e0), 0x83);
        // CB 83 01E0
        gbc.setState(0xede1, 0x4a43, 0x51f0, 0xb2ec, 0x8755, 0x6761, 0x1, 0x0);
        gbc.writeMem(0xede1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4a43);
        EXPECT(gbc.pc(), 0xede3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xede1), 0xcb);
        EXPECT(gbc.readMem(0xede2), 0x83);
        // CB 83 01E1
        gbc.setState(0xcbe8, 0x822a, 0xb0b0, 0xf385, 0xa67c, 0xac1, 0x1, 0x0);
        gbc.writeMem(0xcbe8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x822a);
        EXPECT(gbc.pc(), 0xcbea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbe8), 0xcb);
        EXPECT(gbc.readMem(0xcbe9), 0x83);
        // CB 83 01E2
        gbc.setState(0x5ec1, 0xa7ec, 0x52b0, 0xc4b9, 0xfd62, 0x4b7d, 0x1, 0x0);
        gbc.writeMem(0x5ec1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa7ec);
        EXPECT(gbc.pc(), 0x5ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01E3
        gbc.setState(0x31c3, 0xe78, 0xf8a0, 0x19a9, 0xd452, 0x57c3, 0x1, 0x0);
        gbc.writeMem(0x31c3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe78);
        EXPECT(gbc.pc(), 0x31c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01E4
        gbc.setState(0xd65f, 0xbe4f, 0x27b0, 0x7fb5, 0x74c9, 0xa84, 0x0, 0x1);
        gbc.writeMem(0xd65f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbe4f);
        EXPECT(gbc.pc(), 0xd661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd65f), 0xcb);
        EXPECT(gbc.readMem(0xd660), 0x83);
        // CB 83 01E5
        gbc.setState(0x7129, 0xa437, 0x260, 0x5fd7, 0x843, 0x8118, 0x1, 0x1);
        gbc.writeMem(0x7129, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa437);
        EXPECT(gbc.pc(), 0x712b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01E6
        gbc.setState(0x50ed, 0x44ac, 0xc8d0, 0x26f5, 0xabcc, 0xc1d1, 0x0, 0x1);
        gbc.writeMem(0x50ed, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x44ac);
        EXPECT(gbc.pc(), 0x50ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01E7
        gbc.setState(0x70fa, 0x6240, 0xcd40, 0x26dc, 0xaf90, 0xdb87, 0x0, 0x0);
        gbc.writeMem(0x70fa, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6240);
        EXPECT(gbc.pc(), 0x70fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01E8
        gbc.setState(0xc5aa, 0xd348, 0x7000, 0x148f, 0xd592, 0x77f9, 0x1, 0x0);
        gbc.writeMem(0xc5aa, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd348);
        EXPECT(gbc.pc(), 0xc5ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5aa), 0xcb);
        EXPECT(gbc.readMem(0xc5ab), 0x83);
        // CB 83 01E9
        gbc.setState(0xe120, 0x6a4, 0x3ca0, 0x453a, 0x719b, 0xa266, 0x0, 0x1);
        gbc.writeMem(0xe120, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6a4);
        EXPECT(gbc.pc(), 0xe122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe120), 0xcb);
        EXPECT(gbc.readMem(0xe121), 0x83);
        // CB 83 01EA
        gbc.setState(0xa1d6, 0x482, 0x5280, 0xff9c, 0x2cfa, 0x3444, 0x1, 0x1);
        gbc.writeMem(0xa1d6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x482);
        EXPECT(gbc.pc(), 0xa1d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1d6), 0xcb);
        EXPECT(gbc.readMem(0xa1d7), 0x83);
        // CB 83 01EC
        gbc.setState(0x2578, 0x6242, 0x2fe0, 0x7b33, 0x4748, 0x4eeb, 0x1, 0x1);
        gbc.writeMem(0x2578, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6242);
        EXPECT(gbc.pc(), 0x257a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01ED
        gbc.setState(0xb15a, 0x12ae, 0xb1e0, 0xfeba, 0x127e, 0x83f1, 0x1, 0x0);
        gbc.writeMem(0xb15a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x12ae);
        EXPECT(gbc.pc(), 0xb15c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb15a), 0xcb);
        EXPECT(gbc.readMem(0xb15b), 0x83);
        // CB 83 01EE
        gbc.setState(0xd6a8, 0x20b, 0xe3e0, 0xaf57, 0xbd5e, 0x83d2, 0x0, 0x1);
        gbc.writeMem(0xd6a8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x20b);
        EXPECT(gbc.pc(), 0xd6aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a8), 0xcb);
        EXPECT(gbc.readMem(0xd6a9), 0x83);
        // CB 83 01EF
        gbc.setState(0xcc6b, 0x9c94, 0xbd70, 0xa105, 0xa3ca, 0x76f0, 0x0, 0x0);
        gbc.writeMem(0xcc6b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9c94);
        EXPECT(gbc.pc(), 0xcc6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc6b), 0xcb);
        EXPECT(gbc.readMem(0xcc6c), 0x83);
        // CB 83 01F0
        gbc.setState(0xc803, 0x664c, 0x8390, 0xe9cc, 0x8338, 0xe7de, 0x0, 0x1);
        gbc.writeMem(0xc803, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x664c);
        EXPECT(gbc.pc(), 0xc805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc803), 0xcb);
        EXPECT(gbc.readMem(0xc804), 0x83);
        // CB 83 01F1
        gbc.setState(0xaa8, 0x5102, 0xfa60, 0xaf8e, 0xe852, 0xf479, 0x1, 0x1);
        gbc.writeMem(0xaa8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5102);
        EXPECT(gbc.pc(), 0xaaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01F2
        gbc.setState(0xafe6, 0x925, 0x42d0, 0x9e42, 0x91f, 0xd5fb, 0x0, 0x1);
        gbc.writeMem(0xafe6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x925);
        EXPECT(gbc.pc(), 0xafe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe6), 0xcb);
        EXPECT(gbc.readMem(0xafe7), 0x83);
        // CB 83 01F3
        gbc.setState(0x3e33, 0x43a3, 0xece0, 0xf644, 0x88b7, 0xc774, 0x0, 0x1);
        gbc.writeMem(0x3e33, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x43a3);
        EXPECT(gbc.pc(), 0x3e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01F4
        gbc.setState(0x717d, 0x504f, 0xfd70, 0x52e7, 0x652d, 0x38c4, 0x0, 0x1);
        gbc.writeMem(0x717d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x504f);
        EXPECT(gbc.pc(), 0x717f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01F5
        gbc.setState(0x11d1, 0xe757, 0x4890, 0xfb5a, 0xd8e0, 0xc6c3, 0x0, 0x1);
        gbc.writeMem(0x11d1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe757);
        EXPECT(gbc.pc(), 0x11d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01F6
        gbc.setState(0x84d7, 0xfeea, 0x5200, 0xd4b2, 0x2d65, 0x29ee, 0x1, 0x0);
        gbc.writeMem(0x84d7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfeea);
        EXPECT(gbc.pc(), 0x84d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d7), 0xcb);
        EXPECT(gbc.readMem(0x84d8), 0x83);
        // CB 83 01F7
        gbc.setState(0x237a, 0x2d3c, 0x4b70, 0x182d, 0x8296, 0x3685, 0x0, 0x1);
        gbc.writeMem(0x237a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2d3c);
        EXPECT(gbc.pc(), 0x237c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01F8
        gbc.setState(0xe7e1, 0xfc5c, 0xd900, 0x5078, 0x1755, 0x3fd1, 0x1, 0x1);
        gbc.writeMem(0xe7e1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xfc5c);
        EXPECT(gbc.pc(), 0xe7e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e1), 0xcb);
        EXPECT(gbc.readMem(0xe7e2), 0x83);
        // CB 83 01F9
        gbc.setState(0x4035, 0xe260, 0x2b00, 0xe7f3, 0x77cc, 0x90cb, 0x1, 0x1);
        gbc.writeMem(0x4035, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe260);
        EXPECT(gbc.pc(), 0x4037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 01FA
        gbc.setState(0x9ab2, 0x76cf, 0xbb30, 0x2784, 0x146d, 0x8742, 0x1, 0x0);
        gbc.writeMem(0x9ab2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x76cf);
        EXPECT(gbc.pc(), 0x9ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab2), 0xcb);
        EXPECT(gbc.readMem(0x9ab3), 0x83);
        // CB 83 01FB
        gbc.setState(0x4765, 0xda60, 0x24b0, 0x6ed1, 0x42a1, 0xe377, 0x0, 0x1);
        gbc.writeMem(0x4765, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xda60);
        EXPECT(gbc.pc(), 0x4767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01FC
        gbc.setState(0x2607, 0x377f, 0x64f0, 0x6ffa, 0x2652, 0xce5, 0x0, 0x0);
        gbc.writeMem(0x2607, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x377f);
        EXPECT(gbc.pc(), 0x2609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 01FE
        gbc.setState(0xa316, 0x83a7, 0x2150, 0xa2fd, 0xa0f9, 0xf99d, 0x1, 0x0);
        gbc.writeMem(0xa316, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x83a7);
        EXPECT(gbc.pc(), 0xa318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa316), 0xcb);
        EXPECT(gbc.readMem(0xa317), 0x83);
        // CB 83 01FF
        gbc.setState(0xea85, 0xeb5a, 0xfd00, 0x291a, 0xa370, 0xa657, 0x1, 0x1);
        gbc.writeMem(0xea85, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xeb5a);
        EXPECT(gbc.pc(), 0xea87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea85), 0xcb);
        EXPECT(gbc.readMem(0xea86), 0x83);
        // CB 83 0200
        gbc.setState(0x4f9c, 0xda9, 0x78b0, 0xe2ab, 0xd90c, 0x2e56, 0x1, 0x0);
        gbc.writeMem(0x4f9c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xda9);
        EXPECT(gbc.pc(), 0x4f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0201
        gbc.setState(0x8a7a, 0xf4c4, 0x2f30, 0x9673, 0x8648, 0xafa6, 0x1, 0x1);
        gbc.writeMem(0x8a7a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf4c4);
        EXPECT(gbc.pc(), 0x8a7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a7a), 0xcb);
        EXPECT(gbc.readMem(0x8a7b), 0x83);
        // CB 83 0202
        gbc.setState(0x1c1a, 0xf3a3, 0x9e40, 0xe975, 0xffd5, 0xf873, 0x0, 0x1);
        gbc.writeMem(0x1c1a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf3a3);
        EXPECT(gbc.pc(), 0x1c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0203
        gbc.setState(0xcefe, 0x411a, 0xc130, 0x41c4, 0x37bb, 0xd39d, 0x1, 0x1);
        gbc.writeMem(0xcefe, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x411a);
        EXPECT(gbc.pc(), 0xcf00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcefe), 0xcb);
        EXPECT(gbc.readMem(0xceff), 0x83);
        // CB 83 0204
        gbc.setState(0x62a7, 0xfa23, 0xe6e0, 0x8e24, 0xc6e4, 0xfafe, 0x0, 0x0);
        gbc.writeMem(0x62a7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfa23);
        EXPECT(gbc.pc(), 0x62a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0205
        gbc.setState(0x2d72, 0xa448, 0x6d90, 0x41b8, 0x4625, 0x91eb, 0x0, 0x0);
        gbc.writeMem(0x2d72, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa448);
        EXPECT(gbc.pc(), 0x2d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0206
        gbc.setState(0x3a53, 0x751e, 0x1260, 0x8782, 0x262a, 0xe442, 0x0, 0x1);
        gbc.writeMem(0x3a53, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x751e);
        EXPECT(gbc.pc(), 0x3a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0207
        gbc.setState(0xadaf, 0xe046, 0xb780, 0xbadf, 0xc901, 0x95b6, 0x0, 0x0);
        gbc.writeMem(0xadaf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe046);
        EXPECT(gbc.pc(), 0xadb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadaf), 0xcb);
        EXPECT(gbc.readMem(0xadb0), 0x83);
        // CB 83 0208
        gbc.setState(0x933, 0x676d, 0x4060, 0x53b9, 0x2b19, 0xcdd1, 0x0, 0x1);
        gbc.writeMem(0x933, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x676d);
        EXPECT(gbc.pc(), 0x935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 020A
        gbc.setState(0xe2e1, 0xa6c5, 0xad50, 0xc149, 0x5d88, 0x9c96, 0x1, 0x1);
        gbc.writeMem(0xe2e1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa6c5);
        EXPECT(gbc.pc(), 0xe2e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e1), 0xcb);
        EXPECT(gbc.readMem(0xe2e2), 0x83);
        // CB 83 020B
        gbc.setState(0xccb, 0xb00c, 0xe650, 0xbdd9, 0x4177, 0xb896, 0x1, 0x0);
        gbc.writeMem(0xccb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb00c);
        EXPECT(gbc.pc(), 0xccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 020C
        gbc.setState(0x8ced, 0x4d61, 0x7e90, 0x5a80, 0x1462, 0xa18f, 0x0, 0x1);
        gbc.writeMem(0x8ced, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4d61);
        EXPECT(gbc.pc(), 0x8cef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ced), 0xcb);
        EXPECT(gbc.readMem(0x8cee), 0x83);
        // CB 83 020D
        gbc.setState(0xee0, 0xb319, 0xded0, 0x394a, 0xaeec, 0x480, 0x0, 0x1);
        gbc.writeMem(0xee0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb319);
        EXPECT(gbc.pc(), 0xee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 020E
        gbc.setState(0xe6f6, 0x54b7, 0xcda0, 0x9847, 0xdba4, 0x8861, 0x0, 0x0);
        gbc.writeMem(0xe6f6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x54b7);
        EXPECT(gbc.pc(), 0xe6f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f6), 0xcb);
        EXPECT(gbc.readMem(0xe6f7), 0x83);
        // CB 83 020F
        gbc.setState(0xb72, 0xa53a, 0x8690, 0x1744, 0xd878, 0x54a6, 0x1, 0x0);
        gbc.writeMem(0xb72, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa53a);
        EXPECT(gbc.pc(), 0xb74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0210
        gbc.setState(0x5eca, 0xc500, 0x1bf0, 0x2799, 0x45b5, 0x3d3c, 0x0, 0x1);
        gbc.writeMem(0x5eca, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc500);
        EXPECT(gbc.pc(), 0x5ecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0211
        gbc.setState(0x8b7e, 0x945, 0x4dd0, 0xd7d7, 0x131f, 0x70eb, 0x0, 0x1);
        gbc.writeMem(0x8b7e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x945);
        EXPECT(gbc.pc(), 0x8b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b7e), 0xcb);
        EXPECT(gbc.readMem(0x8b7f), 0x83);
        // CB 83 0212
        gbc.setState(0x7fc8, 0xba95, 0x5d60, 0xb81f, 0x2143, 0xcf23, 0x1, 0x0);
        gbc.writeMem(0x7fc8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xba95);
        EXPECT(gbc.pc(), 0x7fca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0213
        gbc.setState(0xe1a1, 0x916e, 0xf9f0, 0x35e8, 0x9775, 0x4a04, 0x0, 0x0);
        gbc.writeMem(0xe1a1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x916e);
        EXPECT(gbc.pc(), 0xe1a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1a1), 0xcb);
        EXPECT(gbc.readMem(0xe1a2), 0x83);
        // CB 83 0214
        gbc.setState(0x653e, 0xf7cf, 0xff20, 0x76e, 0x5c42, 0x3931, 0x1, 0x0);
        gbc.writeMem(0x653e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf7cf);
        EXPECT(gbc.pc(), 0x6540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0215
        gbc.setState(0x88c9, 0x7f5e, 0x8f30, 0x11a4, 0x735c, 0x2bf2, 0x0, 0x1);
        gbc.writeMem(0x88c9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7f5e);
        EXPECT(gbc.pc(), 0x88cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c9), 0xcb);
        EXPECT(gbc.readMem(0x88ca), 0x83);
        // CB 83 0216
        gbc.setState(0xe684, 0xca11, 0x75f0, 0x17cd, 0x6784, 0x2b43, 0x0, 0x1);
        gbc.writeMem(0xe684, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xca11);
        EXPECT(gbc.pc(), 0xe686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe684), 0xcb);
        EXPECT(gbc.readMem(0xe685), 0x83);
        // CB 83 0217
        gbc.setState(0xaca7, 0x247b, 0xa290, 0xdf91, 0x5ac7, 0xcdfd, 0x1, 0x0);
        gbc.writeMem(0xaca7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x247b);
        EXPECT(gbc.pc(), 0xaca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaca7), 0xcb);
        EXPECT(gbc.readMem(0xaca8), 0x83);
        // CB 83 0218
        gbc.setState(0x3949, 0xaf34, 0x2670, 0xd32e, 0x33c3, 0xbe03, 0x1, 0x1);
        gbc.writeMem(0x3949, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xaf34);
        EXPECT(gbc.pc(), 0x394b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0219
        gbc.setState(0x10c4, 0xc22c, 0xc910, 0x602d, 0x3b0a, 0xa2b2, 0x0, 0x1);
        gbc.writeMem(0x10c4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc22c);
        EXPECT(gbc.pc(), 0x10c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 021A
        gbc.setState(0xb6ff, 0xf944, 0x7c70, 0xf95c, 0xd8ad, 0x8664, 0x1, 0x1);
        gbc.writeMem(0xb6ff, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf944);
        EXPECT(gbc.pc(), 0xb701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ff), 0xcb);
        EXPECT(gbc.readMem(0xb700), 0x83);
        // CB 83 021B
        gbc.setState(0x3a19, 0xcff9, 0x57e0, 0x3cbd, 0x5eb5, 0xf603, 0x1, 0x1);
        gbc.writeMem(0x3a19, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xcff9);
        EXPECT(gbc.pc(), 0x3a1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 021C
        gbc.setState(0xd04b, 0xc2cb, 0x49b0, 0xcd1c, 0xb218, 0x3512, 0x1, 0x0);
        gbc.writeMem(0xd04b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc2cb);
        EXPECT(gbc.pc(), 0xd04d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd04b), 0xcb);
        EXPECT(gbc.readMem(0xd04c), 0x83);
        // CB 83 021D
        gbc.setState(0x6b5, 0xf747, 0x6a00, 0xbe7b, 0xdb0c, 0x6956, 0x0, 0x1);
        gbc.writeMem(0x6b5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf747);
        EXPECT(gbc.pc(), 0x6b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 021E
        gbc.setState(0x19ba, 0x626, 0x86c0, 0xeaa8, 0x8c16, 0xbef2, 0x1, 0x0);
        gbc.writeMem(0x19ba, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x626);
        EXPECT(gbc.pc(), 0x19bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 021F
        gbc.setState(0xcf3f, 0xfe53, 0xe250, 0xcb08, 0xd4d0, 0x9b4a, 0x1, 0x0);
        gbc.writeMem(0xcf3f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfe53);
        EXPECT(gbc.pc(), 0xcf41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf3f), 0xcb);
        EXPECT(gbc.readMem(0xcf40), 0x83);
        // CB 83 0220
        gbc.setState(0xec55, 0x65f9, 0xb1f0, 0xd68d, 0x4bc3, 0x2018, 0x0, 0x0);
        gbc.writeMem(0xec55, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x65f9);
        EXPECT(gbc.pc(), 0xec57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec55), 0xcb);
        EXPECT(gbc.readMem(0xec56), 0x83);
        // CB 83 0221
        gbc.setState(0xa852, 0x6bba, 0x320, 0x4, 0x7e8f, 0xbd27, 0x1, 0x0);
        gbc.writeMem(0xa852, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6bba);
        EXPECT(gbc.pc(), 0xa854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa852), 0xcb);
        EXPECT(gbc.readMem(0xa853), 0x83);
        // CB 83 0222
        gbc.setState(0xcd11, 0xad44, 0xc2e0, 0x3be, 0xe743, 0x33fa, 0x1, 0x1);
        gbc.writeMem(0xcd11, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xad44);
        EXPECT(gbc.pc(), 0xcd13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd11), 0xcb);
        EXPECT(gbc.readMem(0xcd12), 0x83);
        // CB 83 0223
        gbc.setState(0xd352, 0xfe14, 0xfd80, 0x5b5e, 0x8764, 0x663a, 0x1, 0x1);
        gbc.writeMem(0xd352, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xfe14);
        EXPECT(gbc.pc(), 0xd354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd352), 0xcb);
        EXPECT(gbc.readMem(0xd353), 0x83);
        // CB 83 0224
        gbc.setState(0x1595, 0x24de, 0xf710, 0xe1a9, 0xcd21, 0xf0b0, 0x1, 0x1);
        gbc.writeMem(0x1595, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x24de);
        EXPECT(gbc.pc(), 0x1597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0225
        gbc.setState(0x2876, 0x22ef, 0xea70, 0x700a, 0xa9a7, 0x24b5, 0x1, 0x1);
        gbc.writeMem(0x2876, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x22ef);
        EXPECT(gbc.pc(), 0x2878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0226
        gbc.setState(0xce48, 0x73cd, 0x89d0, 0x55bb, 0x4c9, 0xd20e, 0x0, 0x0);
        gbc.writeMem(0xce48, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x73cd);
        EXPECT(gbc.pc(), 0xce4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce48), 0xcb);
        EXPECT(gbc.readMem(0xce49), 0x83);
        // CB 83 0227
        gbc.setState(0x467a, 0xbb18, 0x1070, 0x6ea8, 0x593f, 0x3ed2, 0x1, 0x0);
        gbc.writeMem(0x467a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbb18);
        EXPECT(gbc.pc(), 0x467c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0228
        gbc.setState(0x9834, 0xe42f, 0xd310, 0x7214, 0x3a0f, 0x2ff, 0x0, 0x1);
        gbc.writeMem(0x9834, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe42f);
        EXPECT(gbc.pc(), 0x9836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9834), 0xcb);
        EXPECT(gbc.readMem(0x9835), 0x83);
        // CB 83 0229
        gbc.setState(0xecc0, 0x2299, 0x6a0, 0xeadd, 0x235, 0xa22e, 0x0, 0x1);
        gbc.writeMem(0xecc0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2299);
        EXPECT(gbc.pc(), 0xecc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecc0), 0xcb);
        EXPECT(gbc.readMem(0xecc1), 0x83);
        // CB 83 022A
        gbc.setState(0x56ae, 0x2553, 0x75f0, 0xbd8b, 0x6d65, 0x56f7, 0x1, 0x0);
        gbc.writeMem(0x56ae, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2553);
        EXPECT(gbc.pc(), 0x56b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 022B
        gbc.setState(0xba7e, 0xc980, 0x8a00, 0x5188, 0xef4a, 0x47d5, 0x1, 0x0);
        gbc.writeMem(0xba7e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc980);
        EXPECT(gbc.pc(), 0xba80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7e), 0xcb);
        EXPECT(gbc.readMem(0xba7f), 0x83);
        // CB 83 022C
        gbc.setState(0x8edf, 0xf8c9, 0x990, 0x75, 0xe387, 0xafb8, 0x1, 0x1);
        gbc.writeMem(0x8edf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf8c9);
        EXPECT(gbc.pc(), 0x8ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8edf), 0xcb);
        EXPECT(gbc.readMem(0x8ee0), 0x83);
        // CB 83 022D
        gbc.setState(0x6b5d, 0xaf66, 0x2e60, 0xe0d0, 0xe6cb, 0x35b9, 0x1, 0x1);
        gbc.writeMem(0x6b5d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xaf66);
        EXPECT(gbc.pc(), 0x6b5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 022E
        gbc.setState(0xe41f, 0xcc5c, 0x94e0, 0x2383, 0xf003, 0x7f1f, 0x0, 0x1);
        gbc.writeMem(0xe41f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcc5c);
        EXPECT(gbc.pc(), 0xe421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe41f), 0xcb);
        EXPECT(gbc.readMem(0xe420), 0x83);
        // CB 83 022F
        gbc.setState(0x107e, 0xd1eb, 0x5020, 0xae7b, 0xa607, 0x5b68, 0x0, 0x0);
        gbc.writeMem(0x107e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd1eb);
        EXPECT(gbc.pc(), 0x1080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0231
        gbc.setState(0x36b1, 0xebfc, 0xddf0, 0x43c6, 0xdcec, 0x9b48, 0x1, 0x1);
        gbc.writeMem(0x36b1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xebfc);
        EXPECT(gbc.pc(), 0x36b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0232
        gbc.setState(0xd863, 0xac39, 0x60b0, 0x3148, 0x8809, 0xae31, 0x0, 0x0);
        gbc.writeMem(0xd863, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xac39);
        EXPECT(gbc.pc(), 0xd865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd863), 0xcb);
        EXPECT(gbc.readMem(0xd864), 0x83);
        // CB 83 0233
        gbc.setState(0x9014, 0xc703, 0x13b0, 0x9372, 0x1f5d, 0x698a, 0x1, 0x1);
        gbc.writeMem(0x9014, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc703);
        EXPECT(gbc.pc(), 0x9016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9014), 0xcb);
        EXPECT(gbc.readMem(0x9015), 0x83);
        // CB 83 0234
        gbc.setState(0xb68a, 0x58c4, 0xa00, 0x3ee2, 0x8ed8, 0x9421, 0x1, 0x0);
        gbc.writeMem(0xb68a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x58c4);
        EXPECT(gbc.pc(), 0xb68c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb68a), 0xcb);
        EXPECT(gbc.readMem(0xb68b), 0x83);
        // CB 83 0235
        gbc.setState(0x57eb, 0xca4, 0x7e90, 0xa916, 0xf71a, 0x270c, 0x0, 0x0);
        gbc.writeMem(0x57eb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xca4);
        EXPECT(gbc.pc(), 0x57ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0236
        gbc.setState(0xedd9, 0xc3b7, 0xd450, 0x4a16, 0x9b64, 0x46ca, 0x0, 0x0);
        gbc.writeMem(0xedd9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc3b7);
        EXPECT(gbc.pc(), 0xeddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd9), 0xcb);
        EXPECT(gbc.readMem(0xedda), 0x83);
        // CB 83 0237
        gbc.setState(0x528d, 0xf3d7, 0x1260, 0x8601, 0x2566, 0x9d5, 0x1, 0x0);
        gbc.writeMem(0x528d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf3d7);
        EXPECT(gbc.pc(), 0x528f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0238
        gbc.setState(0xe661, 0xf6ff, 0xb7f0, 0x5158, 0xaf28, 0x1c66, 0x0, 0x0);
        gbc.writeMem(0xe661, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf6ff);
        EXPECT(gbc.pc(), 0xe663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe661), 0xcb);
        EXPECT(gbc.readMem(0xe662), 0x83);
        // CB 83 0239
        gbc.setState(0x21e5, 0x5c00, 0x8bc0, 0xf30c, 0x3292, 0xa7d2, 0x0, 0x1);
        gbc.writeMem(0x21e5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5c00);
        EXPECT(gbc.pc(), 0x21e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 023A
        gbc.setState(0x54d8, 0x4b2f, 0xe2b0, 0x992f, 0x83ec, 0xf9b7, 0x0, 0x1);
        gbc.writeMem(0x54d8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4b2f);
        EXPECT(gbc.pc(), 0x54da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 023B
        gbc.setState(0xd2a, 0x7e54, 0x2420, 0xd762, 0xfab2, 0xba08, 0x0, 0x1);
        gbc.writeMem(0xd2a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7e54);
        EXPECT(gbc.pc(), 0xd2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 023C
        gbc.setState(0x7df6, 0xee30, 0x120, 0xc107, 0x4e28, 0x150d, 0x0, 0x0);
        gbc.writeMem(0x7df6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xee30);
        EXPECT(gbc.pc(), 0x7df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 023D
        gbc.setState(0x3122, 0xbf5, 0x380, 0x632d, 0xc27f, 0x3d1, 0x1, 0x0);
        gbc.writeMem(0x3122, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbf5);
        EXPECT(gbc.pc(), 0x3124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 023E
        gbc.setState(0xbd7e, 0x3232, 0xe2a0, 0x3411, 0x7c1c, 0xe562, 0x1, 0x1);
        gbc.writeMem(0xbd7e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3232);
        EXPECT(gbc.pc(), 0xbd80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7e), 0xcb);
        EXPECT(gbc.readMem(0xbd7f), 0x83);
        // CB 83 023F
        gbc.setState(0xeddb, 0xab68, 0xef60, 0x7d53, 0x10d0, 0x807c, 0x1, 0x1);
        gbc.writeMem(0xeddb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xab68);
        EXPECT(gbc.pc(), 0xeddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeddb), 0xcb);
        EXPECT(gbc.readMem(0xeddc), 0x83);
        // CB 83 0240
        gbc.setState(0x4bcd, 0x35e5, 0x15d0, 0x52ab, 0x6be2, 0x836f, 0x1, 0x1);
        gbc.writeMem(0x4bcd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x35e5);
        EXPECT(gbc.pc(), 0x4bcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0241
        gbc.setState(0x9fca, 0x326e, 0x7fd0, 0x7740, 0x4da2, 0x834d, 0x0, 0x1);
        gbc.writeMem(0x9fca, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x326e);
        EXPECT(gbc.pc(), 0x9fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fca), 0xcb);
        EXPECT(gbc.readMem(0x9fcb), 0x83);
        // CB 83 0242
        gbc.setState(0x2567, 0xb1cb, 0xa440, 0x48b5, 0xc04d, 0x4595, 0x1, 0x1);
        gbc.writeMem(0x2567, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb1cb);
        EXPECT(gbc.pc(), 0x2569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0243
        gbc.setState(0xd2ac, 0x548c, 0x95e0, 0x39fd, 0xfbf, 0x827a, 0x0, 0x1);
        gbc.writeMem(0xd2ac, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x548c);
        EXPECT(gbc.pc(), 0xd2ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ac), 0xcb);
        EXPECT(gbc.readMem(0xd2ad), 0x83);
        // CB 83 0244
        gbc.setState(0x2ffa, 0xde56, 0x4760, 0x941b, 0x3d2f, 0x197c, 0x0, 0x0);
        gbc.writeMem(0x2ffa, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xde56);
        EXPECT(gbc.pc(), 0x2ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0246
        gbc.setState(0x119f, 0xfae2, 0x38d0, 0x6de, 0x5dd2, 0xfb6e, 0x1, 0x1);
        gbc.writeMem(0x119f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfae2);
        EXPECT(gbc.pc(), 0x11a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0247
        gbc.setState(0x4097, 0x2af6, 0xf260, 0x934f, 0x8aee, 0x4cd3, 0x1, 0x0);
        gbc.writeMem(0x4097, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2af6);
        EXPECT(gbc.pc(), 0x4099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0248
        gbc.setState(0xa959, 0xe227, 0xe6e0, 0x9409, 0xe7d, 0x115f, 0x0, 0x1);
        gbc.writeMem(0xa959, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe227);
        EXPECT(gbc.pc(), 0xa95b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa959), 0xcb);
        EXPECT(gbc.readMem(0xa95a), 0x83);
        // CB 83 0249
        gbc.setState(0x87e7, 0x14f5, 0x8e00, 0x1fcd, 0xe283, 0xf788, 0x1, 0x1);
        gbc.writeMem(0x87e7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x14f5);
        EXPECT(gbc.pc(), 0x87e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e7), 0xcb);
        EXPECT(gbc.readMem(0x87e8), 0x83);
        // CB 83 024A
        gbc.setState(0x326, 0xcdbe, 0x7430, 0xafd8, 0xb59d, 0xcf9a, 0x1, 0x0);
        gbc.writeMem(0x326, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xcdbe);
        EXPECT(gbc.pc(), 0x328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 024B
        gbc.setState(0x7c78, 0xa995, 0x2340, 0x5ed4, 0xd0e5, 0xc26b, 0x0, 0x1);
        gbc.writeMem(0x7c78, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa995);
        EXPECT(gbc.pc(), 0x7c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 024C
        gbc.setState(0x2b4a, 0x6108, 0x6980, 0x2574, 0xc2fc, 0xb6f9, 0x0, 0x1);
        gbc.writeMem(0x2b4a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6108);
        EXPECT(gbc.pc(), 0x2b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 024D
        gbc.setState(0x34ca, 0xf663, 0xd500, 0x8bc1, 0xe3b7, 0xc28e, 0x1, 0x1);
        gbc.writeMem(0x34ca, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf663);
        EXPECT(gbc.pc(), 0x34cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 024E
        gbc.setState(0x4267, 0x9b54, 0x43e0, 0xc7bf, 0xd39d, 0xee5c, 0x1, 0x1);
        gbc.writeMem(0x4267, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9b54);
        EXPECT(gbc.pc(), 0x4269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 024F
        gbc.setState(0x1a25, 0xa3da, 0x4620, 0x7a67, 0xc19a, 0xf84a, 0x0, 0x0);
        gbc.writeMem(0x1a25, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa3da);
        EXPECT(gbc.pc(), 0x1a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0250
        gbc.setState(0xda76, 0x77f, 0xc8d0, 0x588, 0x781, 0x65fb, 0x0, 0x1);
        gbc.writeMem(0xda76, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x77f);
        EXPECT(gbc.pc(), 0xda78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda76), 0xcb);
        EXPECT(gbc.readMem(0xda77), 0x83);
        // CB 83 0251
        gbc.setState(0x3f67, 0x62e8, 0xd6b0, 0xe65c, 0x741b, 0x4394, 0x1, 0x0);
        gbc.writeMem(0x3f67, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x62e8);
        EXPECT(gbc.pc(), 0x3f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0253
        gbc.setState(0x4245, 0xff67, 0xbd80, 0x98a4, 0x1378, 0x46f5, 0x0, 0x1);
        gbc.writeMem(0x4245, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xff67);
        EXPECT(gbc.pc(), 0x4247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0254
        gbc.setState(0x1394, 0x28f0, 0x18e0, 0x7448, 0xb184, 0xb42c, 0x1, 0x1);
        gbc.writeMem(0x1394, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x28f0);
        EXPECT(gbc.pc(), 0x1396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0255
        gbc.setState(0x8f3b, 0x3111, 0x8b0, 0xc096, 0x4366, 0xee25, 0x1, 0x0);
        gbc.writeMem(0x8f3b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3111);
        EXPECT(gbc.pc(), 0x8f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f3b), 0xcb);
        EXPECT(gbc.readMem(0x8f3c), 0x83);
        // CB 83 0257
        gbc.setState(0xd433, 0xd560, 0x240, 0x485b, 0x3130, 0xd214, 0x0, 0x1);
        gbc.writeMem(0xd433, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd560);
        EXPECT(gbc.pc(), 0xd435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd433), 0xcb);
        EXPECT(gbc.readMem(0xd434), 0x83);
        // CB 83 0258
        gbc.setState(0xfa9, 0x5a47, 0x5f60, 0xcb9f, 0x8ec2, 0x411a, 0x1, 0x0);
        gbc.writeMem(0xfa9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5a47);
        EXPECT(gbc.pc(), 0xfab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0259
        gbc.setState(0x43b8, 0xca6a, 0x75d0, 0xea74, 0x37b4, 0x2645, 0x1, 0x1);
        gbc.writeMem(0x43b8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xca6a);
        EXPECT(gbc.pc(), 0x43ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 025A
        gbc.setState(0x2789, 0x15d8, 0xc6e0, 0x4bf9, 0x295a, 0x4f8c, 0x1, 0x0);
        gbc.writeMem(0x2789, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x15d8);
        EXPECT(gbc.pc(), 0x278b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 025B
        gbc.setState(0x328, 0x8a3a, 0x89c0, 0x69d5, 0x443a, 0x4df8, 0x1, 0x1);
        gbc.writeMem(0x328, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8a3a);
        EXPECT(gbc.pc(), 0x32a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 025D
        gbc.setState(0xbd1d, 0x25ae, 0x7de0, 0x917b, 0x6235, 0xc206, 0x1, 0x1);
        gbc.writeMem(0xbd1d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x25ae);
        EXPECT(gbc.pc(), 0xbd1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd1d), 0xcb);
        EXPECT(gbc.readMem(0xbd1e), 0x83);
        // CB 83 025E
        gbc.setState(0x4447, 0xab9f, 0x5a40, 0xbb59, 0xe79e, 0x5777, 0x0, 0x1);
        gbc.writeMem(0x4447, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xab9f);
        EXPECT(gbc.pc(), 0x4449);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 025F
        gbc.setState(0x1707, 0xf4a0, 0x7ee0, 0xed8d, 0x2441, 0xb77b, 0x1, 0x0);
        gbc.writeMem(0x1707, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf4a0);
        EXPECT(gbc.pc(), 0x1709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0260
        gbc.setState(0x9e5b, 0xda42, 0x3e40, 0xbf6, 0x9d, 0x3d06, 0x0, 0x1);
        gbc.writeMem(0x9e5b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xda42);
        EXPECT(gbc.pc(), 0x9e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e5b), 0xcb);
        EXPECT(gbc.readMem(0x9e5c), 0x83);
        // CB 83 0261
        gbc.setState(0x5389, 0x4d19, 0xe3c0, 0x2774, 0x4685, 0x4ab9, 0x1, 0x1);
        gbc.writeMem(0x5389, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4d19);
        EXPECT(gbc.pc(), 0x538b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0262
        gbc.setState(0x6829, 0x5cdb, 0x8c40, 0xd596, 0xfc3f, 0x5220, 0x1, 0x0);
        gbc.writeMem(0x6829, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5cdb);
        EXPECT(gbc.pc(), 0x682b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0263
        gbc.setState(0xdf48, 0x34f0, 0x1bd0, 0x8ce4, 0x55c6, 0x7d53, 0x0, 0x1);
        gbc.writeMem(0xdf48, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x34f0);
        EXPECT(gbc.pc(), 0xdf4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf48), 0xcb);
        EXPECT(gbc.readMem(0xdf49), 0x83);
        // CB 83 0264
        gbc.setState(0x3751, 0xc19a, 0x3b80, 0x14f9, 0xf370, 0xac9b, 0x1, 0x0);
        gbc.writeMem(0x3751, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc19a);
        EXPECT(gbc.pc(), 0x3753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0265
        gbc.setState(0x6b1a, 0xb203, 0x62f0, 0x38ac, 0x2b36, 0x7020, 0x0, 0x0);
        gbc.writeMem(0x6b1a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb203);
        EXPECT(gbc.pc(), 0x6b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0266
        gbc.setState(0x855d, 0x29fb, 0x4eb0, 0xf0ba, 0xbc38, 0x6b1, 0x0, 0x1);
        gbc.writeMem(0x855d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x29fb);
        EXPECT(gbc.pc(), 0x855f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x855d), 0xcb);
        EXPECT(gbc.readMem(0x855e), 0x83);
        // CB 83 0267
        gbc.setState(0xb8eb, 0x722, 0xc500, 0x156a, 0xb5bc, 0xdbbb, 0x0, 0x0);
        gbc.writeMem(0xb8eb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x722);
        EXPECT(gbc.pc(), 0xb8ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8eb), 0xcb);
        EXPECT(gbc.readMem(0xb8ec), 0x83);
        // CB 83 0268
        gbc.setState(0x7c99, 0x8dfb, 0xdf50, 0x56e4, 0x1456, 0x25db, 0x0, 0x1);
        gbc.writeMem(0x7c99, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8dfb);
        EXPECT(gbc.pc(), 0x7c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0269
        gbc.setState(0xafcb, 0xf00a, 0x68e0, 0x83fa, 0xb05c, 0xd3a9, 0x1, 0x0);
        gbc.writeMem(0xafcb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf00a);
        EXPECT(gbc.pc(), 0xafcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafcb), 0xcb);
        EXPECT(gbc.readMem(0xafcc), 0x83);
        // CB 83 026A
        gbc.setState(0xc460, 0x82f2, 0xa290, 0x6a97, 0x354f, 0xcdda, 0x0, 0x0);
        gbc.writeMem(0xc460, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x82f2);
        EXPECT(gbc.pc(), 0xc462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc460), 0xcb);
        EXPECT(gbc.readMem(0xc461), 0x83);
        // CB 83 026B
        gbc.setState(0x9723, 0x30dc, 0xa340, 0x1b5f, 0x85b8, 0xa044, 0x1, 0x0);
        gbc.writeMem(0x9723, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x30dc);
        EXPECT(gbc.pc(), 0x9725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9723), 0xcb);
        EXPECT(gbc.readMem(0x9724), 0x83);
        // CB 83 026C
        gbc.setState(0x6768, 0xfdc2, 0xe940, 0xe303, 0xc922, 0x53ca, 0x0, 0x1);
        gbc.writeMem(0x6768, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfdc2);
        EXPECT(gbc.pc(), 0x676a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 026D
        gbc.setState(0x9a90, 0xe9f8, 0xab40, 0x29d8, 0xdd9a, 0xb388, 0x0, 0x0);
        gbc.writeMem(0x9a90, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe9f8);
        EXPECT(gbc.pc(), 0x9a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a90), 0xcb);
        EXPECT(gbc.readMem(0x9a91), 0x83);
        // CB 83 026E
        gbc.setState(0x37cc, 0x8aec, 0x2d60, 0xde14, 0x43cb, 0x4c48, 0x0, 0x0);
        gbc.writeMem(0x37cc, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8aec);
        EXPECT(gbc.pc(), 0x37ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 026F
        gbc.setState(0x8032, 0xc1b4, 0xd500, 0xae22, 0x44c8, 0xb467, 0x1, 0x1);
        gbc.writeMem(0x8032, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc1b4);
        EXPECT(gbc.pc(), 0x8034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8032), 0xcb);
        EXPECT(gbc.readMem(0x8033), 0x83);
        // CB 83 0270
        gbc.setState(0x2237, 0x6abb, 0x4700, 0x303e, 0xa6c2, 0x746e, 0x1, 0x1);
        gbc.writeMem(0x2237, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6abb);
        EXPECT(gbc.pc(), 0x2239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0271
        gbc.setState(0xa82, 0x5410, 0x3740, 0x51df, 0xaa9a, 0x222c, 0x0, 0x1);
        gbc.writeMem(0xa82, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5410);
        EXPECT(gbc.pc(), 0xa84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0272
        gbc.setState(0x401b, 0xeccb, 0x8cc0, 0x47b9, 0x880, 0x1612, 0x1, 0x0);
        gbc.writeMem(0x401b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xeccb);
        EXPECT(gbc.pc(), 0x401d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0274
        gbc.setState(0x3864, 0x3e9e, 0x470, 0x218f, 0x1b54, 0x2f27, 0x1, 0x1);
        gbc.writeMem(0x3864, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3e9e);
        EXPECT(gbc.pc(), 0x3866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0276
        gbc.setState(0xeac5, 0xa458, 0x9c0, 0x6646, 0x6dd7, 0x7d80, 0x0, 0x0);
        gbc.writeMem(0xeac5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa458);
        EXPECT(gbc.pc(), 0xeac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac5), 0xcb);
        EXPECT(gbc.readMem(0xeac6), 0x83);
        // CB 83 0277
        gbc.setState(0x3674, 0x11ab, 0xc9d0, 0x4a73, 0x6882, 0x71be, 0x0, 0x0);
        gbc.writeMem(0x3674, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x11ab);
        EXPECT(gbc.pc(), 0x3676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0278
        gbc.setState(0x27a, 0x732b, 0xa470, 0x3885, 0xb8e7, 0x4a23, 0x1, 0x0);
        gbc.writeMem(0x27a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x732b);
        EXPECT(gbc.pc(), 0x27c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0279
        gbc.setState(0x5f5d, 0x28a7, 0x8390, 0xf525, 0xc0c2, 0x1392, 0x0, 0x1);
        gbc.writeMem(0x5f5d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x28a7);
        EXPECT(gbc.pc(), 0x5f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 027A
        gbc.setState(0x46c9, 0x9dd9, 0xda60, 0x768b, 0xcde1, 0xca74, 0x1, 0x0);
        gbc.writeMem(0x46c9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9dd9);
        EXPECT(gbc.pc(), 0x46cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 027B
        gbc.setState(0xd89e, 0x5c8e, 0xe330, 0x4120, 0x48b0, 0xc415, 0x0, 0x1);
        gbc.writeMem(0xd89e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5c8e);
        EXPECT(gbc.pc(), 0xd8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89e), 0xcb);
        EXPECT(gbc.readMem(0xd89f), 0x83);
        // CB 83 027D
        gbc.setState(0xa6bd, 0x9687, 0x2000, 0x30d, 0x53f7, 0x3536, 0x0, 0x1);
        gbc.writeMem(0xa6bd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9687);
        EXPECT(gbc.pc(), 0xa6bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6bd), 0xcb);
        EXPECT(gbc.readMem(0xa6be), 0x83);
        // CB 83 027E
        gbc.setState(0x51b8, 0xabc1, 0xdc40, 0xc6b6, 0x1602, 0x270, 0x1, 0x0);
        gbc.writeMem(0x51b8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xabc1);
        EXPECT(gbc.pc(), 0x51ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 027F
        gbc.setState(0xc86b, 0x35a3, 0x6080, 0xed8d, 0xeb39, 0xe8ac, 0x0, 0x0);
        gbc.writeMem(0xc86b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x35a3);
        EXPECT(gbc.pc(), 0xc86d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc86b), 0xcb);
        EXPECT(gbc.readMem(0xc86c), 0x83);
        // CB 83 0280
        gbc.setState(0x58d3, 0x6d86, 0x3920, 0x1890, 0x44b2, 0xe6e6, 0x1, 0x0);
        gbc.writeMem(0x58d3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6d86);
        EXPECT(gbc.pc(), 0x58d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0281
        gbc.setState(0x4235, 0xcfee, 0x7d0, 0xe6fd, 0xae93, 0x26c6, 0x1, 0x0);
        gbc.writeMem(0x4235, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcfee);
        EXPECT(gbc.pc(), 0x4237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0282
        gbc.setState(0x7efc, 0xd281, 0xd310, 0x1fe1, 0x3e6, 0x5355, 0x0, 0x0);
        gbc.writeMem(0x7efc, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd281);
        EXPECT(gbc.pc(), 0x7efe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0283
        gbc.setState(0xbfc1, 0xaa7e, 0xdce0, 0xe80a, 0xc544, 0xa1c7, 0x0, 0x0);
        gbc.writeMem(0xbfc1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xaa7e);
        EXPECT(gbc.pc(), 0xbfc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc1), 0xcb);
        EXPECT(gbc.readMem(0xbfc2), 0x83);
        // CB 83 0284
        gbc.setState(0x7d4d, 0x139a, 0xab80, 0xdecf, 0xbe59, 0xea18, 0x1, 0x1);
        gbc.writeMem(0x7d4d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x139a);
        EXPECT(gbc.pc(), 0x7d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0285
        gbc.setState(0x7400, 0x426, 0xee50, 0x5fce, 0x5280, 0x4d8e, 0x0, 0x0);
        gbc.writeMem(0x7400, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x426);
        EXPECT(gbc.pc(), 0x7402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0286
        gbc.setState(0x88d2, 0xb9c5, 0x6c60, 0x7a46, 0x8681, 0x8320, 0x0, 0x1);
        gbc.writeMem(0x88d2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb9c5);
        EXPECT(gbc.pc(), 0x88d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d2), 0xcb);
        EXPECT(gbc.readMem(0x88d3), 0x83);
        // CB 83 0287
        gbc.setState(0xe0df, 0xe582, 0xc720, 0xa73d, 0x84ed, 0x1296, 0x1, 0x0);
        gbc.writeMem(0xe0df, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe582);
        EXPECT(gbc.pc(), 0xe0e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0df), 0xcb);
        EXPECT(gbc.readMem(0xe0e0), 0x83);
        // CB 83 0288
        gbc.setState(0xe4f3, 0x6453, 0x850, 0x827a, 0xba1c, 0x7e08, 0x1, 0x0);
        gbc.writeMem(0xe4f3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6453);
        EXPECT(gbc.pc(), 0xe4f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f3), 0xcb);
        EXPECT(gbc.readMem(0xe4f4), 0x83);
        // CB 83 0289
        gbc.setState(0x4828, 0xbbbe, 0xeab0, 0x33e, 0x72ac, 0x92c3, 0x1, 0x0);
        gbc.writeMem(0x4828, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbbbe);
        EXPECT(gbc.pc(), 0x482a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 028A
        gbc.setState(0x101f, 0x92e5, 0xab0, 0x99a1, 0x49b2, 0xb093, 0x1, 0x1);
        gbc.writeMem(0x101f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x92e5);
        EXPECT(gbc.pc(), 0x1021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 028B
        gbc.setState(0x4b7a, 0x21ac, 0x52f0, 0x7944, 0xde46, 0xa4af, 0x1, 0x0);
        gbc.writeMem(0x4b7a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x21ac);
        EXPECT(gbc.pc(), 0x4b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 028C
        gbc.setState(0xd43b, 0xc941, 0x1830, 0x3ea6, 0xdb2a, 0x389e, 0x0, 0x0);
        gbc.writeMem(0xd43b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc941);
        EXPECT(gbc.pc(), 0xd43d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43b), 0xcb);
        EXPECT(gbc.readMem(0xd43c), 0x83);
        // CB 83 028D
        gbc.setState(0x806a, 0x3880, 0x2dc0, 0xed63, 0x7ad, 0x89aa, 0x0, 0x1);
        gbc.writeMem(0x806a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3880);
        EXPECT(gbc.pc(), 0x806c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806a), 0xcb);
        EXPECT(gbc.readMem(0x806b), 0x83);
        // CB 83 028E
        gbc.setState(0xa07d, 0x4cf8, 0x1610, 0xacb3, 0x2cce, 0xd13c, 0x1, 0x0);
        gbc.writeMem(0xa07d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4cf8);
        EXPECT(gbc.pc(), 0xa07f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07d), 0xcb);
        EXPECT(gbc.readMem(0xa07e), 0x83);
        // CB 83 028F
        gbc.setState(0x9885, 0xb517, 0x50, 0xc0e0, 0x3daa, 0xd840, 0x0, 0x1);
        gbc.writeMem(0x9885, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb517);
        EXPECT(gbc.pc(), 0x9887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9885), 0xcb);
        EXPECT(gbc.readMem(0x9886), 0x83);
        // CB 83 0290
        gbc.setState(0xc3e6, 0xabd7, 0x2ce0, 0x8c5d, 0x54aa, 0x720b, 0x1, 0x0);
        gbc.writeMem(0xc3e6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xabd7);
        EXPECT(gbc.pc(), 0xc3e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e6), 0xcb);
        EXPECT(gbc.readMem(0xc3e7), 0x83);
        // CB 83 0291
        gbc.setState(0xa412, 0x10e1, 0xc390, 0x72a5, 0xc89d, 0x97f0, 0x0, 0x1);
        gbc.writeMem(0xa412, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x10e1);
        EXPECT(gbc.pc(), 0xa414);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa412), 0xcb);
        EXPECT(gbc.readMem(0xa413), 0x83);
        // CB 83 0292
        gbc.setState(0x42e0, 0x86c, 0xb3d0, 0x8d93, 0x5fb7, 0x576, 0x1, 0x0);
        gbc.writeMem(0x42e0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x86c);
        EXPECT(gbc.pc(), 0x42e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0293
        gbc.setState(0xb23b, 0x3bcd, 0xae60, 0xa45f, 0xdcf8, 0xb6e, 0x1, 0x1);
        gbc.writeMem(0xb23b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3bcd);
        EXPECT(gbc.pc(), 0xb23d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb23b), 0xcb);
        EXPECT(gbc.readMem(0xb23c), 0x83);
        // CB 83 0294
        gbc.setState(0xc397, 0x52ed, 0x2780, 0xbea1, 0x962b, 0xa09a, 0x0, 0x1);
        gbc.writeMem(0xc397, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x52ed);
        EXPECT(gbc.pc(), 0xc399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc397), 0xcb);
        EXPECT(gbc.readMem(0xc398), 0x83);
        // CB 83 0295
        gbc.setState(0x6d2d, 0x1448, 0xb0, 0x6d52, 0x42e4, 0x5882, 0x1, 0x0);
        gbc.writeMem(0x6d2d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1448);
        EXPECT(gbc.pc(), 0x6d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0296
        gbc.setState(0x56fb, 0xa638, 0x8df0, 0x5be8, 0x7af6, 0xd9d9, 0x1, 0x0);
        gbc.writeMem(0x56fb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa638);
        EXPECT(gbc.pc(), 0x56fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0297
        gbc.setState(0x7f43, 0xfc6a, 0xb080, 0x6bbd, 0xb213, 0xe27b, 0x1, 0x0);
        gbc.writeMem(0x7f43, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xfc6a);
        EXPECT(gbc.pc(), 0x7f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0298
        gbc.setState(0x2507, 0xc71, 0x8e50, 0xb798, 0x3e69, 0x771c, 0x0, 0x1);
        gbc.writeMem(0x2507, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc71);
        EXPECT(gbc.pc(), 0x2509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0299
        gbc.setState(0xb39, 0x526, 0x64e0, 0x8604, 0x7bce, 0x6139, 0x0, 0x1);
        gbc.writeMem(0xb39, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x526);
        EXPECT(gbc.pc(), 0xb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 029A
        gbc.setState(0x9139, 0xd8fe, 0xcd40, 0x14a8, 0xc14d, 0x5d78, 0x1, 0x1);
        gbc.writeMem(0x9139, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd8fe);
        EXPECT(gbc.pc(), 0x913b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9139), 0xcb);
        EXPECT(gbc.readMem(0x913a), 0x83);
        // CB 83 029B
        gbc.setState(0x7402, 0xc0a3, 0xa430, 0x5f5e, 0x6f76, 0x714d, 0x1, 0x0);
        gbc.writeMem(0x7402, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc0a3);
        EXPECT(gbc.pc(), 0x7404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 029C
        gbc.setState(0x67a6, 0x172b, 0x5870, 0x5c19, 0xf039, 0x6299, 0x1, 0x1);
        gbc.writeMem(0x67a6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x172b);
        EXPECT(gbc.pc(), 0x67a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 029D
        gbc.setState(0xb0e4, 0xc942, 0x5500, 0xa1c5, 0xe53c, 0xe034, 0x1, 0x0);
        gbc.writeMem(0xb0e4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc942);
        EXPECT(gbc.pc(), 0xb0e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0e4), 0xcb);
        EXPECT(gbc.readMem(0xb0e5), 0x83);
        // CB 83 029E
        gbc.setState(0xe44c, 0x2dbf, 0xc5c0, 0xc5f6, 0x24d7, 0x366e, 0x0, 0x0);
        gbc.writeMem(0xe44c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2dbf);
        EXPECT(gbc.pc(), 0xe44e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe44c), 0xcb);
        EXPECT(gbc.readMem(0xe44d), 0x83);
        // CB 83 029F
        gbc.setState(0xde23, 0xfd6f, 0xbec0, 0x45ad, 0xc20, 0x1b72, 0x1, 0x1);
        gbc.writeMem(0xde23, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xfd6f);
        EXPECT(gbc.pc(), 0xde25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde23), 0xcb);
        EXPECT(gbc.readMem(0xde24), 0x83);
        // CB 83 02A0
        gbc.setState(0xc6fa, 0xb827, 0x4e10, 0x90f1, 0x9d21, 0xdd56, 0x0, 0x0);
        gbc.writeMem(0xc6fa, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb827);
        EXPECT(gbc.pc(), 0xc6fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6fa), 0xcb);
        EXPECT(gbc.readMem(0xc6fb), 0x83);
        // CB 83 02A1
        gbc.setState(0x987e, 0xc2a7, 0xcbe0, 0x48db, 0x89a9, 0x2a11, 0x1, 0x1);
        gbc.writeMem(0x987e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc2a7);
        EXPECT(gbc.pc(), 0x9880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x987e), 0xcb);
        EXPECT(gbc.readMem(0x987f), 0x83);
        // CB 83 02A3
        gbc.setState(0x3cc0, 0xc47b, 0xc4d0, 0x8500, 0x67a4, 0xb802, 0x0, 0x1);
        gbc.writeMem(0x3cc0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc47b);
        EXPECT(gbc.pc(), 0x3cc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02A4
        gbc.setState(0x6b71, 0x2c00, 0x8440, 0xfe8, 0xba02, 0x1423, 0x0, 0x1);
        gbc.writeMem(0x6b71, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2c00);
        EXPECT(gbc.pc(), 0x6b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02A5
        gbc.setState(0xa7cc, 0x8b5e, 0x6e40, 0x6e77, 0xf48e, 0x7ff2, 0x1, 0x1);
        gbc.writeMem(0xa7cc, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8b5e);
        EXPECT(gbc.pc(), 0xa7ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7cc), 0xcb);
        EXPECT(gbc.readMem(0xa7cd), 0x83);
        // CB 83 02A6
        gbc.setState(0x2ae9, 0xc086, 0x410, 0x70dc, 0xa653, 0x76b2, 0x1, 0x1);
        gbc.writeMem(0x2ae9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc086);
        EXPECT(gbc.pc(), 0x2aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02A7
        gbc.setState(0x2b0b, 0x187e, 0x5b60, 0x1134, 0xeb05, 0x59d, 0x0, 0x0);
        gbc.writeMem(0x2b0b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x187e);
        EXPECT(gbc.pc(), 0x2b0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02A8
        gbc.setState(0xb565, 0x26c3, 0x9c80, 0x6856, 0x8d04, 0xe3e7, 0x0, 0x0);
        gbc.writeMem(0xb565, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x26c3);
        EXPECT(gbc.pc(), 0xb567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb565), 0xcb);
        EXPECT(gbc.readMem(0xb566), 0x83);
        // CB 83 02A9
        gbc.setState(0x520, 0x1382, 0x64f0, 0xd561, 0x53ac, 0x4460, 0x1, 0x0);
        gbc.writeMem(0x520, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1382);
        EXPECT(gbc.pc(), 0x522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02AA
        gbc.setState(0x9cab, 0x701f, 0xa210, 0xa419, 0x6c8a, 0x1635, 0x1, 0x1);
        gbc.writeMem(0x9cab, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x701f);
        EXPECT(gbc.pc(), 0x9cad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cab), 0xcb);
        EXPECT(gbc.readMem(0x9cac), 0x83);
        // CB 83 02AB
        gbc.setState(0x8bb8, 0xcf7d, 0xa300, 0x568f, 0x21bd, 0xf057, 0x1, 0x0);
        gbc.writeMem(0x8bb8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcf7d);
        EXPECT(gbc.pc(), 0x8bba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb8), 0xcb);
        EXPECT(gbc.readMem(0x8bb9), 0x83);
        // CB 83 02AD
        gbc.setState(0x63db, 0xaebe, 0x2110, 0xc5f4, 0x33ea, 0x6f29, 0x0, 0x1);
        gbc.writeMem(0x63db, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xaebe);
        EXPECT(gbc.pc(), 0x63dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02AE
        gbc.setState(0x9c60, 0x854e, 0x63d0, 0x40f1, 0x726c, 0xeff8, 0x1, 0x1);
        gbc.writeMem(0x9c60, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x854e);
        EXPECT(gbc.pc(), 0x9c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c60), 0xcb);
        EXPECT(gbc.readMem(0x9c61), 0x83);
        // CB 83 02B0
        gbc.setState(0xd090, 0xdc2a, 0x2570, 0x9ecf, 0x4a61, 0xccc6, 0x1, 0x1);
        gbc.writeMem(0xd090, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xdc2a);
        EXPECT(gbc.pc(), 0xd092);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd090), 0xcb);
        EXPECT(gbc.readMem(0xd091), 0x83);
        // CB 83 02B1
        gbc.setState(0x69c5, 0xbd74, 0xe040, 0x8487, 0x55d4, 0x7051, 0x0, 0x1);
        gbc.writeMem(0x69c5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xbd74);
        EXPECT(gbc.pc(), 0x69c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02B2
        gbc.setState(0x4934, 0xdff9, 0xae0, 0x48f4, 0x4e76, 0x3c24, 0x1, 0x1);
        gbc.writeMem(0x4934, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xdff9);
        EXPECT(gbc.pc(), 0x4936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02B3
        gbc.setState(0x2223, 0x3bed, 0xa3a0, 0x82c5, 0xccce, 0x96ed, 0x0, 0x0);
        gbc.writeMem(0x2223, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3bed);
        EXPECT(gbc.pc(), 0x2225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02B4
        gbc.setState(0xd7c5, 0xd0d, 0xc40, 0x857b, 0x79f5, 0x1a0, 0x0, 0x1);
        gbc.writeMem(0xd7c5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd0d);
        EXPECT(gbc.pc(), 0xd7c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c5), 0xcb);
        EXPECT(gbc.readMem(0xd7c6), 0x83);
        // CB 83 02B5
        gbc.setState(0x7d3d, 0x1f12, 0x39e0, 0x4098, 0xd201, 0x2b1e, 0x1, 0x1);
        gbc.writeMem(0x7d3d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1f12);
        EXPECT(gbc.pc(), 0x7d3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02B6
        gbc.setState(0x52a0, 0x2ccb, 0xf970, 0x57d9, 0x8b05, 0x1f72, 0x0, 0x1);
        gbc.writeMem(0x52a0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2ccb);
        EXPECT(gbc.pc(), 0x52a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02B7
        gbc.setState(0x84da, 0x4c5f, 0xc510, 0x39e7, 0xc445, 0x7eb, 0x0, 0x1);
        gbc.writeMem(0x84da, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4c5f);
        EXPECT(gbc.pc(), 0x84dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84da), 0xcb);
        EXPECT(gbc.readMem(0x84db), 0x83);
        // CB 83 02B8
        gbc.setState(0x5162, 0x7788, 0x5930, 0x2fc, 0xa14f, 0x58de, 0x1, 0x1);
        gbc.writeMem(0x5162, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7788);
        EXPECT(gbc.pc(), 0x5164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02B9
        gbc.setState(0xa158, 0x26ae, 0x5520, 0x2b49, 0xad8a, 0x6351, 0x1, 0x0);
        gbc.writeMem(0xa158, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x26ae);
        EXPECT(gbc.pc(), 0xa15a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa158), 0xcb);
        EXPECT(gbc.readMem(0xa159), 0x83);
        // CB 83 02BA
        gbc.setState(0xb831, 0xe946, 0x6130, 0x5c41, 0xe777, 0x4ad1, 0x1, 0x1);
        gbc.writeMem(0xb831, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe946);
        EXPECT(gbc.pc(), 0xb833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb831), 0xcb);
        EXPECT(gbc.readMem(0xb832), 0x83);
        // CB 83 02BB
        gbc.setState(0x27ff, 0xcaaf, 0xd6a0, 0x3dbe, 0x3b17, 0x54e2, 0x0, 0x0);
        gbc.writeMem(0x27ff, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xcaaf);
        EXPECT(gbc.pc(), 0x2801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02BC
        gbc.setState(0x7e90, 0x1f65, 0x2380, 0xd699, 0x780, 0x912e, 0x1, 0x0);
        gbc.writeMem(0x7e90, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1f65);
        EXPECT(gbc.pc(), 0x7e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02BE
        gbc.setState(0xa82f, 0x98de, 0x8e70, 0x4cb8, 0x1aaa, 0xe374, 0x0, 0x1);
        gbc.writeMem(0xa82f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x98de);
        EXPECT(gbc.pc(), 0xa831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82f), 0xcb);
        EXPECT(gbc.readMem(0xa830), 0x83);
        // CB 83 02BF
        gbc.setState(0x75a, 0x1237, 0x9940, 0x4f0d, 0x2b22, 0x9c1c, 0x1, 0x1);
        gbc.writeMem(0x75a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1237);
        EXPECT(gbc.pc(), 0x75c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02C0
        gbc.setState(0x3256, 0x4cd2, 0x6f0, 0xa547, 0x1310, 0xab32, 0x0, 0x1);
        gbc.writeMem(0x3256, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4cd2);
        EXPECT(gbc.pc(), 0x3258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02C1
        gbc.setState(0x42ed, 0xb41a, 0x1790, 0x8829, 0xac00, 0xde31, 0x0, 0x1);
        gbc.writeMem(0x42ed, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb41a);
        EXPECT(gbc.pc(), 0x42ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02C2
        gbc.setState(0x2043, 0x30d1, 0x55a0, 0x4b0b, 0x365c, 0x41fa, 0x0, 0x1);
        gbc.writeMem(0x2043, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x30d1);
        EXPECT(gbc.pc(), 0x2045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02C3
        gbc.setState(0x4d8a, 0x9807, 0x1390, 0x1c28, 0x4a1a, 0x8358, 0x0, 0x1);
        gbc.writeMem(0x4d8a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9807);
        EXPECT(gbc.pc(), 0x4d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02C4
        gbc.setState(0x384d, 0x7995, 0x5f0, 0x1e9f, 0xd0e, 0x8650, 0x1, 0x1);
        gbc.writeMem(0x384d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7995);
        EXPECT(gbc.pc(), 0x384f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02C5
        gbc.setState(0xba78, 0xa857, 0xb310, 0xa382, 0xa16d, 0x9b20, 0x0, 0x1);
        gbc.writeMem(0xba78, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa857);
        EXPECT(gbc.pc(), 0xba7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba78), 0xcb);
        EXPECT(gbc.readMem(0xba79), 0x83);
        // CB 83 02C6
        gbc.setState(0x6576, 0x2b66, 0xd030, 0x37de, 0xbd0, 0xaadd, 0x0, 0x1);
        gbc.writeMem(0x6576, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2b66);
        EXPECT(gbc.pc(), 0x6578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02C7
        gbc.setState(0xaab9, 0x21b4, 0xbae0, 0x611a, 0x3b62, 0xf528, 0x0, 0x1);
        gbc.writeMem(0xaab9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x21b4);
        EXPECT(gbc.pc(), 0xaabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab9), 0xcb);
        EXPECT(gbc.readMem(0xaaba), 0x83);
        // CB 83 02C8
        gbc.setState(0xab32, 0xbac9, 0xcd70, 0x51b7, 0x782d, 0x6b58, 0x1, 0x0);
        gbc.writeMem(0xab32, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbac9);
        EXPECT(gbc.pc(), 0xab34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab32), 0xcb);
        EXPECT(gbc.readMem(0xab33), 0x83);
        // CB 83 02C9
        gbc.setState(0x6d5d, 0xd109, 0x6180, 0x640b, 0x4659, 0xb5e0, 0x1, 0x1);
        gbc.writeMem(0x6d5d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd109);
        EXPECT(gbc.pc(), 0x6d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02CA
        gbc.setState(0xcee, 0x29a7, 0x45f0, 0x918c, 0x6b3c, 0xef01, 0x1, 0x1);
        gbc.writeMem(0xcee, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x29a7);
        EXPECT(gbc.pc(), 0xcf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02CB
        gbc.setState(0x7ee8, 0xbdb2, 0x1620, 0x8b0c, 0x1671, 0x8858, 0x1, 0x1);
        gbc.writeMem(0x7ee8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbdb2);
        EXPECT(gbc.pc(), 0x7eea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02CC
        gbc.setState(0x5ff1, 0x677c, 0xd320, 0x9529, 0xb49e, 0x9e57, 0x1, 0x0);
        gbc.writeMem(0x5ff1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x677c);
        EXPECT(gbc.pc(), 0x5ff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02CD
        gbc.setState(0xdbe2, 0x8874, 0x50, 0x38b6, 0xd4d5, 0xecd7, 0x0, 0x0);
        gbc.writeMem(0xdbe2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8874);
        EXPECT(gbc.pc(), 0xdbe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe2), 0xcb);
        EXPECT(gbc.readMem(0xdbe3), 0x83);
        // CB 83 02CE
        gbc.setState(0x68c1, 0x6a26, 0xff0, 0x9814, 0xbca, 0x8c86, 0x1, 0x0);
        gbc.writeMem(0x68c1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6a26);
        EXPECT(gbc.pc(), 0x68c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02CF
        gbc.setState(0x44be, 0x4d4c, 0x54a0, 0xca0e, 0x256c, 0x365, 0x1, 0x0);
        gbc.writeMem(0x44be, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4d4c);
        EXPECT(gbc.pc(), 0x44c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02D0
        gbc.setState(0xacaf, 0xa75b, 0xfa70, 0x35a6, 0x9d6d, 0xd0db, 0x0, 0x1);
        gbc.writeMem(0xacaf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa75b);
        EXPECT(gbc.pc(), 0xacb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacaf), 0xcb);
        EXPECT(gbc.readMem(0xacb0), 0x83);
        // CB 83 02D1
        gbc.setState(0x5196, 0xe3b1, 0xfe20, 0xaff3, 0x7d13, 0xbdcc, 0x1, 0x1);
        gbc.writeMem(0x5196, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe3b1);
        EXPECT(gbc.pc(), 0x5198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02D2
        gbc.setState(0x5f86, 0x1582, 0xc440, 0x470, 0x2bda, 0xed26, 0x0, 0x1);
        gbc.writeMem(0x5f86, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1582);
        EXPECT(gbc.pc(), 0x5f88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02D4
        gbc.setState(0xe2f2, 0xe19c, 0x6a50, 0xb25, 0xadee, 0xc021, 0x1, 0x0);
        gbc.writeMem(0xe2f2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe19c);
        EXPECT(gbc.pc(), 0xe2f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2f2), 0xcb);
        EXPECT(gbc.readMem(0xe2f3), 0x83);
        // CB 83 02D5
        gbc.setState(0xc3d1, 0xc878, 0x3ca0, 0x4aaf, 0xda97, 0xe26b, 0x1, 0x1);
        gbc.writeMem(0xc3d1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc878);
        EXPECT(gbc.pc(), 0xc3d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d1), 0xcb);
        EXPECT(gbc.readMem(0xc3d2), 0x83);
        // CB 83 02D6
        gbc.setState(0x5514, 0xd3d8, 0x5a80, 0x9821, 0x3874, 0x8018, 0x0, 0x1);
        gbc.writeMem(0x5514, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd3d8);
        EXPECT(gbc.pc(), 0x5516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02D7
        gbc.setState(0x3e68, 0x65c7, 0x6710, 0xd294, 0x99b8, 0x19b0, 0x0, 0x1);
        gbc.writeMem(0x3e68, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x65c7);
        EXPECT(gbc.pc(), 0x3e6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02D8
        gbc.setState(0xc942, 0x5fd6, 0xc5b0, 0x95e0, 0x4543, 0x3778, 0x1, 0x1);
        gbc.writeMem(0xc942, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5fd6);
        EXPECT(gbc.pc(), 0xc944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc942), 0xcb);
        EXPECT(gbc.readMem(0xc943), 0x83);
        // CB 83 02D9
        gbc.setState(0x4be6, 0x9493, 0x7570, 0xc89d, 0x7b9d, 0x189f, 0x1, 0x0);
        gbc.writeMem(0x4be6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9493);
        EXPECT(gbc.pc(), 0x4be8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02DA
        gbc.setState(0x957, 0x2b38, 0x2c70, 0x3d77, 0x8037, 0x9cbb, 0x1, 0x1);
        gbc.writeMem(0x957, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2b38);
        EXPECT(gbc.pc(), 0x959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02DC
        gbc.setState(0x1c02, 0x105e, 0x8170, 0x5b9b, 0xba76, 0x6019, 0x0, 0x0);
        gbc.writeMem(0x1c02, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x105e);
        EXPECT(gbc.pc(), 0x1c04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02DD
        gbc.setState(0x71a6, 0xc91d, 0x4ea0, 0xe1ea, 0x504b, 0x6177, 0x1, 0x1);
        gbc.writeMem(0x71a6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc91d);
        EXPECT(gbc.pc(), 0x71a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02DE
        gbc.setState(0xf3c, 0x13a6, 0x4740, 0x4529, 0x7d97, 0xbe18, 0x1, 0x0);
        gbc.writeMem(0xf3c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x13a6);
        EXPECT(gbc.pc(), 0xf3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02DF
        gbc.setState(0xe895, 0x251a, 0x6c50, 0x4723, 0xe9c3, 0x629c, 0x0, 0x0);
        gbc.writeMem(0xe895, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x251a);
        EXPECT(gbc.pc(), 0xe897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe895), 0xcb);
        EXPECT(gbc.readMem(0xe896), 0x83);
        // CB 83 02E0
        gbc.setState(0xe1b3, 0x99c, 0xc3a0, 0x8ab, 0x3737, 0x17ee, 0x0, 0x1);
        gbc.writeMem(0xe1b3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x99c);
        EXPECT(gbc.pc(), 0xe1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b3), 0xcb);
        EXPECT(gbc.readMem(0xe1b4), 0x83);
        // CB 83 02E1
        gbc.setState(0xdfa8, 0xe138, 0xa530, 0xa429, 0xc6d2, 0x773, 0x1, 0x0);
        gbc.writeMem(0xdfa8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe138);
        EXPECT(gbc.pc(), 0xdfaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa8), 0xcb);
        EXPECT(gbc.readMem(0xdfa9), 0x83);
        // CB 83 02E2
        gbc.setState(0x9c24, 0xc7da, 0x2ef0, 0xc5db, 0xc65e, 0xf4e7, 0x1, 0x0);
        gbc.writeMem(0x9c24, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc7da);
        EXPECT(gbc.pc(), 0x9c26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c24), 0xcb);
        EXPECT(gbc.readMem(0x9c25), 0x83);
        // CB 83 02E3
        gbc.setState(0x8cbe, 0x690d, 0x5850, 0x698d, 0x2b72, 0x1734, 0x0, 0x0);
        gbc.writeMem(0x8cbe, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x690d);
        EXPECT(gbc.pc(), 0x8cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cbe), 0xcb);
        EXPECT(gbc.readMem(0x8cbf), 0x83);
        // CB 83 02E4
        gbc.setState(0x877e, 0xd11d, 0xe660, 0x6cab, 0x1619, 0x5297, 0x1, 0x1);
        gbc.writeMem(0x877e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd11d);
        EXPECT(gbc.pc(), 0x8780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877e), 0xcb);
        EXPECT(gbc.readMem(0x877f), 0x83);
        // CB 83 02E5
        gbc.setState(0x943a, 0xa049, 0x89c0, 0xa98a, 0xf6b2, 0xc858, 0x0, 0x0);
        gbc.writeMem(0x943a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa049);
        EXPECT(gbc.pc(), 0x943c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943a), 0xcb);
        EXPECT(gbc.readMem(0x943b), 0x83);
        // CB 83 02E6
        gbc.setState(0xb804, 0xbf94, 0xbb20, 0x24e3, 0x3864, 0xbcc3, 0x1, 0x0);
        gbc.writeMem(0xb804, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbf94);
        EXPECT(gbc.pc(), 0xb806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb804), 0xcb);
        EXPECT(gbc.readMem(0xb805), 0x83);
        // CB 83 02E7
        gbc.setState(0x5e3d, 0x4326, 0x5020, 0x7568, 0xce7d, 0x2003, 0x0, 0x1);
        gbc.writeMem(0x5e3d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4326);
        EXPECT(gbc.pc(), 0x5e3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02E8
        gbc.setState(0x5de2, 0x485d, 0xa2c0, 0x7fb5, 0x1980, 0xc90c, 0x0, 0x1);
        gbc.writeMem(0x5de2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x485d);
        EXPECT(gbc.pc(), 0x5de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02EA
        gbc.setState(0xb860, 0x9e2b, 0xd9d0, 0x5353, 0x2b37, 0x5dad, 0x1, 0x1);
        gbc.writeMem(0xb860, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9e2b);
        EXPECT(gbc.pc(), 0xb862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb860), 0xcb);
        EXPECT(gbc.readMem(0xb861), 0x83);
        // CB 83 02EB
        gbc.setState(0x1352, 0xf383, 0xbbf0, 0x1029, 0xdb29, 0x84c5, 0x1, 0x0);
        gbc.writeMem(0x1352, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf383);
        EXPECT(gbc.pc(), 0x1354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02ED
        gbc.setState(0x92cd, 0xb273, 0x1df0, 0x4981, 0x2ef2, 0xbff8, 0x0, 0x1);
        gbc.writeMem(0x92cd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb273);
        EXPECT(gbc.pc(), 0x92cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92cd), 0xcb);
        EXPECT(gbc.readMem(0x92ce), 0x83);
        // CB 83 02EE
        gbc.setState(0xd460, 0x3c2e, 0xdba0, 0x90c0, 0x539d, 0x1423, 0x1, 0x1);
        gbc.writeMem(0xd460, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3c2e);
        EXPECT(gbc.pc(), 0xd462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd460), 0xcb);
        EXPECT(gbc.readMem(0xd461), 0x83);
        // CB 83 02EF
        gbc.setState(0x4dea, 0x149d, 0xfc50, 0x9766, 0x51dd, 0xf5fb, 0x0, 0x1);
        gbc.writeMem(0x4dea, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x149d);
        EXPECT(gbc.pc(), 0x4dec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02F0
        gbc.setState(0x23a7, 0x2f6d, 0x5660, 0x11aa, 0xeb99, 0x70ca, 0x1, 0x0);
        gbc.writeMem(0x23a7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2f6d);
        EXPECT(gbc.pc(), 0x23a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02F1
        gbc.setState(0x731f, 0x4320, 0xaf50, 0x7498, 0xf156, 0x1729, 0x1, 0x1);
        gbc.writeMem(0x731f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4320);
        EXPECT(gbc.pc(), 0x7321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02F2
        gbc.setState(0x70c8, 0xd979, 0x6d90, 0x1bc4, 0x88e, 0xf106, 0x1, 0x1);
        gbc.writeMem(0x70c8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd979);
        EXPECT(gbc.pc(), 0x70ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02F3
        gbc.setState(0xa1c7, 0xa92f, 0x9e70, 0x7ef2, 0x4a61, 0x6aa0, 0x1, 0x0);
        gbc.writeMem(0xa1c7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa92f);
        EXPECT(gbc.pc(), 0xa1c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1c7), 0xcb);
        EXPECT(gbc.readMem(0xa1c8), 0x83);
        // CB 83 02F4
        gbc.setState(0xbbde, 0xbe9, 0xc4c0, 0xc109, 0xb456, 0x1610, 0x1, 0x0);
        gbc.writeMem(0xbbde, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbe9);
        EXPECT(gbc.pc(), 0xbbe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbde), 0xcb);
        EXPECT(gbc.readMem(0xbbdf), 0x83);
        // CB 83 02F5
        gbc.setState(0x6f28, 0xf48a, 0x2270, 0x9b4e, 0x261a, 0x54a3, 0x1, 0x0);
        gbc.writeMem(0x6f28, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf48a);
        EXPECT(gbc.pc(), 0x6f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02F6
        gbc.setState(0x111f, 0xd9c, 0x53e0, 0x18d4, 0x7255, 0xa6aa, 0x1, 0x0);
        gbc.writeMem(0x111f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd9c);
        EXPECT(gbc.pc(), 0x1121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02F7
        gbc.setState(0xb84c, 0xa20, 0x18d0, 0x3afc, 0x23c0, 0x81a9, 0x0, 0x1);
        gbc.writeMem(0xb84c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa20);
        EXPECT(gbc.pc(), 0xb84e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb84c), 0xcb);
        EXPECT(gbc.readMem(0xb84d), 0x83);
        // CB 83 02FA
        gbc.setState(0xa79d, 0x210, 0x9680, 0xc71b, 0x5912, 0xaefe, 0x1, 0x0);
        gbc.writeMem(0xa79d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x210);
        EXPECT(gbc.pc(), 0xa79f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa79d), 0xcb);
        EXPECT(gbc.readMem(0xa79e), 0x83);
        // CB 83 02FB
        gbc.setState(0x54c9, 0x8c08, 0x10f0, 0xcff7, 0x9a5a, 0x3cc, 0x0, 0x1);
        gbc.writeMem(0x54c9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8c08);
        EXPECT(gbc.pc(), 0x54cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 02FC
        gbc.setState(0x5383, 0xc2f, 0xbc20, 0x670f, 0x7479, 0x21b1, 0x1, 0x0);
        gbc.writeMem(0x5383, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc2f);
        EXPECT(gbc.pc(), 0x5385);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 02FD
        gbc.setState(0x8883, 0x92e2, 0x69f0, 0xbf6a, 0xed1b, 0x3c46, 0x1, 0x1);
        gbc.writeMem(0x8883, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x92e2);
        EXPECT(gbc.pc(), 0x8885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8883), 0xcb);
        EXPECT(gbc.readMem(0x8884), 0x83);
        // CB 83 02FF
        gbc.setState(0xec59, 0xaadf, 0x4180, 0x4e2c, 0x6c7c, 0xdfad, 0x0, 0x1);
        gbc.writeMem(0xec59, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xaadf);
        EXPECT(gbc.pc(), 0xec5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec59), 0xcb);
        EXPECT(gbc.readMem(0xec5a), 0x83);
        // CB 83 0301
        gbc.setState(0x3232, 0xfa80, 0x3c60, 0x7ffd, 0x79ec, 0x5b4d, 0x1, 0x1);
        gbc.writeMem(0x3232, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xfa80);
        EXPECT(gbc.pc(), 0x3234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0302
        gbc.setState(0x2b5a, 0x9d9d, 0xa750, 0x1298, 0xa7c8, 0x6758, 0x1, 0x1);
        gbc.writeMem(0x2b5a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9d9d);
        EXPECT(gbc.pc(), 0x2b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0303
        gbc.setState(0x5fb1, 0xba46, 0x1350, 0x8e8a, 0xcd, 0xeb64, 0x0, 0x1);
        gbc.writeMem(0x5fb1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xba46);
        EXPECT(gbc.pc(), 0x5fb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0304
        gbc.setState(0x218e, 0x7a88, 0x37d0, 0x4a12, 0x7da6, 0x877e, 0x1, 0x1);
        gbc.writeMem(0x218e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7a88);
        EXPECT(gbc.pc(), 0x2190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0305
        gbc.setState(0x6322, 0xb7f4, 0x74a0, 0x8f55, 0xd56e, 0x502b, 0x0, 0x1);
        gbc.writeMem(0x6322, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb7f4);
        EXPECT(gbc.pc(), 0x6324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0306
        gbc.setState(0x26d3, 0x93ad, 0x97d0, 0x1a7e, 0xaef2, 0xb857, 0x0, 0x1);
        gbc.writeMem(0x26d3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x93ad);
        EXPECT(gbc.pc(), 0x26d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0307
        gbc.setState(0xcfc9, 0xc43f, 0x4c0, 0xa13a, 0x6aa5, 0xaaf7, 0x0, 0x1);
        gbc.writeMem(0xcfc9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc43f);
        EXPECT(gbc.pc(), 0xcfcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc9), 0xcb);
        EXPECT(gbc.readMem(0xcfca), 0x83);
        // CB 83 0308
        gbc.setState(0x7fd6, 0x49a5, 0x8d40, 0xa5fd, 0xacf4, 0xbd21, 0x0, 0x1);
        gbc.writeMem(0x7fd6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x49a5);
        EXPECT(gbc.pc(), 0x7fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0309
        gbc.setState(0x5707, 0xdc2e, 0x48e0, 0x1508, 0xeac8, 0x59e8, 0x1, 0x0);
        gbc.writeMem(0x5707, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdc2e);
        EXPECT(gbc.pc(), 0x5709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 030A
        gbc.setState(0xe9a6, 0x44ac, 0x9710, 0x4c5b, 0x3416, 0xf21d, 0x1, 0x1);
        gbc.writeMem(0xe9a6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x44ac);
        EXPECT(gbc.pc(), 0xe9a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9a6), 0xcb);
        EXPECT(gbc.readMem(0xe9a7), 0x83);
        // CB 83 030B
        gbc.setState(0x83fe, 0x4730, 0x52d0, 0x8be, 0x956, 0xbe43, 0x0, 0x1);
        gbc.writeMem(0x83fe, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4730);
        EXPECT(gbc.pc(), 0x8400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fe), 0xcb);
        EXPECT(gbc.readMem(0x83ff), 0x83);
        // CB 83 030C
        gbc.setState(0xdcbb, 0x76dd, 0xdb20, 0xf99f, 0xd628, 0x94e7, 0x0, 0x1);
        gbc.writeMem(0xdcbb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x76dd);
        EXPECT(gbc.pc(), 0xdcbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcbb), 0xcb);
        EXPECT(gbc.readMem(0xdcbc), 0x83);
        // CB 83 030D
        gbc.setState(0x6a56, 0xa90c, 0x8270, 0xe31a, 0xda93, 0x41db, 0x0, 0x0);
        gbc.writeMem(0x6a56, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa90c);
        EXPECT(gbc.pc(), 0x6a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 030E
        gbc.setState(0xcdb5, 0x8bcb, 0x9c20, 0x402e, 0x81e7, 0x7e4, 0x1, 0x0);
        gbc.writeMem(0xcdb5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8bcb);
        EXPECT(gbc.pc(), 0xcdb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb5), 0xcb);
        EXPECT(gbc.readMem(0xcdb6), 0x83);
        // CB 83 030F
        gbc.setState(0x97c5, 0xdb1e, 0x7db0, 0xd844, 0xb78f, 0xceac, 0x0, 0x1);
        gbc.writeMem(0x97c5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdb1e);
        EXPECT(gbc.pc(), 0x97c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c5), 0xcb);
        EXPECT(gbc.readMem(0x97c6), 0x83);
        // CB 83 0310
        gbc.setState(0xc573, 0x7296, 0xc000, 0x4adb, 0xac5d, 0x1e13, 0x1, 0x0);
        gbc.writeMem(0xc573, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7296);
        EXPECT(gbc.pc(), 0xc575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc573), 0xcb);
        EXPECT(gbc.readMem(0xc574), 0x83);
        // CB 83 0311
        gbc.setState(0xd6db, 0x8a92, 0x7730, 0x8826, 0xd4e5, 0xd009, 0x0, 0x1);
        gbc.writeMem(0xd6db, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8a92);
        EXPECT(gbc.pc(), 0xd6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6db), 0xcb);
        EXPECT(gbc.readMem(0xd6dc), 0x83);
        // CB 83 0312
        gbc.setState(0x8471, 0xd0b8, 0x56e0, 0xd78b, 0x53a6, 0x5ff8, 0x1, 0x0);
        gbc.writeMem(0x8471, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd0b8);
        EXPECT(gbc.pc(), 0x8473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8471), 0xcb);
        EXPECT(gbc.readMem(0x8472), 0x83);
        // CB 83 0313
        gbc.setState(0xcc58, 0x2a3f, 0x91d0, 0xd0c1, 0xa8e9, 0x706, 0x0, 0x1);
        gbc.writeMem(0xcc58, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2a3f);
        EXPECT(gbc.pc(), 0xcc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc58), 0xcb);
        EXPECT(gbc.readMem(0xcc59), 0x83);
        // CB 83 0314
        gbc.setState(0x28e7, 0x946d, 0x6840, 0xde15, 0x12bb, 0x82f9, 0x1, 0x1);
        gbc.writeMem(0x28e7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x946d);
        EXPECT(gbc.pc(), 0x28e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0315
        gbc.setState(0xe44f, 0xd961, 0xf560, 0xa692, 0xfc25, 0xf9fa, 0x0, 0x0);
        gbc.writeMem(0xe44f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd961);
        EXPECT(gbc.pc(), 0xe451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe44f), 0xcb);
        EXPECT(gbc.readMem(0xe450), 0x83);
        // CB 83 0316
        gbc.setState(0xc983, 0x257e, 0x3690, 0xdfa1, 0x8abf, 0x99fc, 0x1, 0x1);
        gbc.writeMem(0xc983, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x257e);
        EXPECT(gbc.pc(), 0xc985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc983), 0xcb);
        EXPECT(gbc.readMem(0xc984), 0x83);
        // CB 83 0317
        gbc.setState(0xc5e0, 0xefe1, 0xbcc0, 0x7560, 0x53c6, 0x6045, 0x0, 0x0);
        gbc.writeMem(0xc5e0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xefe1);
        EXPECT(gbc.pc(), 0xc5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e0), 0xcb);
        EXPECT(gbc.readMem(0xc5e1), 0x83);
        // CB 83 0318
        gbc.setState(0xef27, 0x5a09, 0x3c20, 0xeed6, 0x58e0, 0xaf62, 0x1, 0x0);
        gbc.writeMem(0xef27, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5a09);
        EXPECT(gbc.pc(), 0xef29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef27), 0xcb);
        EXPECT(gbc.readMem(0xef28), 0x83);
        // CB 83 0319
        gbc.setState(0x2118, 0x7b38, 0x56c0, 0x8ef7, 0xca4b, 0xaed, 0x0, 0x1);
        gbc.writeMem(0x2118, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7b38);
        EXPECT(gbc.pc(), 0x211a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 031A
        gbc.setState(0x2e1f, 0x8723, 0x7fa0, 0xa363, 0xac89, 0x80f4, 0x1, 0x1);
        gbc.writeMem(0x2e1f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8723);
        EXPECT(gbc.pc(), 0x2e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 031B
        gbc.setState(0xc4e3, 0x58a5, 0x3f80, 0xaaab, 0xb8b1, 0xfd6b, 0x1, 0x1);
        gbc.writeMem(0xc4e3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x58a5);
        EXPECT(gbc.pc(), 0xc4e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e3), 0xcb);
        EXPECT(gbc.readMem(0xc4e4), 0x83);
        // CB 83 031C
        gbc.setState(0x2efc, 0x5c7f, 0xba20, 0x5710, 0x2b96, 0x36c5, 0x0, 0x0);
        gbc.writeMem(0x2efc, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5c7f);
        EXPECT(gbc.pc(), 0x2efe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 031D
        gbc.setState(0x3b05, 0xa13, 0xf4a0, 0xea8f, 0x84f5, 0x7314, 0x1, 0x1);
        gbc.writeMem(0x3b05, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa13);
        EXPECT(gbc.pc(), 0x3b07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 031E
        gbc.setState(0x966, 0x72d2, 0x5cc0, 0xfe78, 0x178a, 0x9ab6, 0x1, 0x0);
        gbc.writeMem(0x966, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x72d2);
        EXPECT(gbc.pc(), 0x968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 031F
        gbc.setState(0x72a, 0x1f11, 0x8640, 0xf8ce, 0xa646, 0xedaf, 0x0, 0x1);
        gbc.writeMem(0x72a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1f11);
        EXPECT(gbc.pc(), 0x72c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0320
        gbc.setState(0x9874, 0xb36e, 0xe240, 0x9ac3, 0x3d37, 0xfea8, 0x1, 0x1);
        gbc.writeMem(0x9874, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb36e);
        EXPECT(gbc.pc(), 0x9876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9874), 0xcb);
        EXPECT(gbc.readMem(0x9875), 0x83);
        // CB 83 0321
        gbc.setState(0x5207, 0x740f, 0x800, 0xb4c8, 0x271a, 0x1869, 0x1, 0x1);
        gbc.writeMem(0x5207, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x740f);
        EXPECT(gbc.pc(), 0x5209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0322
        gbc.setState(0xa1eb, 0x1d6d, 0xd530, 0x17ff, 0x1a6d, 0x1cab, 0x0, 0x1);
        gbc.writeMem(0xa1eb, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1d6d);
        EXPECT(gbc.pc(), 0xa1ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1eb), 0xcb);
        EXPECT(gbc.readMem(0xa1ec), 0x83);
        // CB 83 0324
        gbc.setState(0x504a, 0xd037, 0xc770, 0xea85, 0xb244, 0x187b, 0x1, 0x0);
        gbc.writeMem(0x504a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd037);
        EXPECT(gbc.pc(), 0x504c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0325
        gbc.setState(0x3be4, 0x39, 0x6580, 0x4316, 0xc96, 0xf696, 0x1, 0x1);
        gbc.writeMem(0x3be4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x39);
        EXPECT(gbc.pc(), 0x3be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0326
        gbc.setState(0x1d7c, 0x1d68, 0xf8a0, 0x8fa1, 0xefcb, 0x78da, 0x0, 0x1);
        gbc.writeMem(0x1d7c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1d68);
        EXPECT(gbc.pc(), 0x1d7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0327
        gbc.setState(0x5ab7, 0xeab1, 0x5d0, 0x1f4d, 0xb618, 0x4fd1, 0x1, 0x1);
        gbc.writeMem(0x5ab7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xeab1);
        EXPECT(gbc.pc(), 0x5ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0328
        gbc.setState(0xdbf, 0x25eb, 0x8130, 0x2b52, 0x3d47, 0xb831, 0x0, 0x1);
        gbc.writeMem(0xdbf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x25eb);
        EXPECT(gbc.pc(), 0xdc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0329
        gbc.setState(0xac67, 0x108d, 0x3b0, 0x6e9f, 0xef3e, 0xaaae, 0x0, 0x0);
        gbc.writeMem(0xac67, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x108d);
        EXPECT(gbc.pc(), 0xac69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac67), 0xcb);
        EXPECT(gbc.readMem(0xac68), 0x83);
        // CB 83 032A
        gbc.setState(0xbd8b, 0xbc11, 0xcb10, 0x51c6, 0x58da, 0x7cb5, 0x1, 0x0);
        gbc.writeMem(0xbd8b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbc11);
        EXPECT(gbc.pc(), 0xbd8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd8b), 0xcb);
        EXPECT(gbc.readMem(0xbd8c), 0x83);
        // CB 83 032B
        gbc.setState(0xb3c6, 0xef1c, 0x13c0, 0x9144, 0x2526, 0xa337, 0x0, 0x0);
        gbc.writeMem(0xb3c6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xef1c);
        EXPECT(gbc.pc(), 0xb3c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c6), 0xcb);
        EXPECT(gbc.readMem(0xb3c7), 0x83);
        // CB 83 032C
        gbc.setState(0x1e4d, 0x95a, 0xd620, 0x7837, 0x34df, 0x7894, 0x1, 0x1);
        gbc.writeMem(0x1e4d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x95a);
        EXPECT(gbc.pc(), 0x1e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 032D
        gbc.setState(0xe834, 0x7b14, 0xd530, 0x2d71, 0x93d0, 0xef96, 0x0, 0x1);
        gbc.writeMem(0xe834, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7b14);
        EXPECT(gbc.pc(), 0xe836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe834), 0xcb);
        EXPECT(gbc.readMem(0xe835), 0x83);
        // CB 83 032E
        gbc.setState(0x7c95, 0x3cd3, 0xd0d0, 0x6dfc, 0xa469, 0x2b79, 0x1, 0x0);
        gbc.writeMem(0x7c95, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3cd3);
        EXPECT(gbc.pc(), 0x7c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 032F
        gbc.setState(0xe6e0, 0x9c13, 0xfab0, 0xe27b, 0x45b7, 0x3b7d, 0x1, 0x1);
        gbc.writeMem(0xe6e0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9c13);
        EXPECT(gbc.pc(), 0xe6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6e0), 0xcb);
        EXPECT(gbc.readMem(0xe6e1), 0x83);
        // CB 83 0330
        gbc.setState(0xba7, 0xaa15, 0xfe10, 0xabd9, 0xe178, 0x248, 0x1, 0x0);
        gbc.writeMem(0xba7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xaa15);
        EXPECT(gbc.pc(), 0xba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0331
        gbc.setState(0x85c3, 0xc9a, 0x6af0, 0x9f72, 0x704, 0x72fa, 0x1, 0x0);
        gbc.writeMem(0x85c3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc9a);
        EXPECT(gbc.pc(), 0x85c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c3), 0xcb);
        EXPECT(gbc.readMem(0x85c4), 0x83);
        // CB 83 0332
        gbc.setState(0x4072, 0x5daf, 0xa0b0, 0xcc4d, 0x171d, 0x77a2, 0x0, 0x0);
        gbc.writeMem(0x4072, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5daf);
        EXPECT(gbc.pc(), 0x4074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0333
        gbc.setState(0x5d72, 0x3699, 0x71f0, 0x6afe, 0x449b, 0x830a, 0x1, 0x1);
        gbc.writeMem(0x5d72, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3699);
        EXPECT(gbc.pc(), 0x5d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0334
        gbc.setState(0xd11d, 0xa644, 0xcf70, 0x81b, 0x1985, 0x505e, 0x1, 0x1);
        gbc.writeMem(0xd11d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa644);
        EXPECT(gbc.pc(), 0xd11f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11d), 0xcb);
        EXPECT(gbc.readMem(0xd11e), 0x83);
        // CB 83 0335
        gbc.setState(0xdec6, 0xf02c, 0xf6b0, 0xc5b2, 0xb099, 0x8320, 0x1, 0x0);
        gbc.writeMem(0xdec6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf02c);
        EXPECT(gbc.pc(), 0xdec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec6), 0xcb);
        EXPECT(gbc.readMem(0xdec7), 0x83);
        // CB 83 0336
        gbc.setState(0x1986, 0x59ef, 0xe700, 0x5d30, 0x8c18, 0x5421, 0x0, 0x1);
        gbc.writeMem(0x1986, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x59ef);
        EXPECT(gbc.pc(), 0x1988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0337
        gbc.setState(0x29b, 0xf022, 0x7e40, 0x2eb3, 0x83fe, 0x2243, 0x0, 0x1);
        gbc.writeMem(0x29b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf022);
        EXPECT(gbc.pc(), 0x29d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0338
        gbc.setState(0xde4b, 0x3a2a, 0xafa0, 0x739b, 0x57a3, 0xb96, 0x0, 0x0);
        gbc.writeMem(0xde4b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3a2a);
        EXPECT(gbc.pc(), 0xde4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4b), 0xcb);
        EXPECT(gbc.readMem(0xde4c), 0x83);
        // CB 83 0339
        gbc.setState(0xbe85, 0xd44b, 0x1fc0, 0xb044, 0xf275, 0x42c5, 0x0, 0x1);
        gbc.writeMem(0xbe85, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd44b);
        EXPECT(gbc.pc(), 0xbe87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe85), 0xcb);
        EXPECT(gbc.readMem(0xbe86), 0x83);
        // CB 83 033A
        gbc.setState(0x79a4, 0xbe9f, 0x7960, 0xdbc7, 0xd64, 0xbd60, 0x1, 0x1);
        gbc.writeMem(0x79a4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbe9f);
        EXPECT(gbc.pc(), 0x79a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 033B
        gbc.setState(0x23ca, 0x1c80, 0xb730, 0x9871, 0x152e, 0x9156, 0x0, 0x1);
        gbc.writeMem(0x23ca, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1c80);
        EXPECT(gbc.pc(), 0x23cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 033C
        gbc.setState(0xa28c, 0xe44a, 0x6810, 0x3a7c, 0x6b97, 0xd1a0, 0x1, 0x0);
        gbc.writeMem(0xa28c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe44a);
        EXPECT(gbc.pc(), 0xa28e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa28c), 0xcb);
        EXPECT(gbc.readMem(0xa28d), 0x83);
        // CB 83 033D
        gbc.setState(0x6330, 0x9d3, 0x3260, 0x45d, 0xa42c, 0x676, 0x0, 0x0);
        gbc.writeMem(0x6330, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9d3);
        EXPECT(gbc.pc(), 0x6332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 033E
        gbc.setState(0x6926, 0xac96, 0x6e80, 0x6208, 0xd261, 0x93b6, 0x0, 0x0);
        gbc.writeMem(0x6926, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xac96);
        EXPECT(gbc.pc(), 0x6928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 033F
        gbc.setState(0x7787, 0xce72, 0x7560, 0x46b, 0x3b2e, 0xa2d6, 0x1, 0x0);
        gbc.writeMem(0x7787, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xce72);
        EXPECT(gbc.pc(), 0x7789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0340
        gbc.setState(0x380e, 0xfcc2, 0xe770, 0xaaf0, 0xd296, 0x7d66, 0x0, 0x0);
        gbc.writeMem(0x380e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfcc2);
        EXPECT(gbc.pc(), 0x3810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0341
        gbc.setState(0xdc67, 0xfadf, 0x6ba0, 0x5457, 0x5d2f, 0x170a, 0x1, 0x1);
        gbc.writeMem(0xdc67, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xfadf);
        EXPECT(gbc.pc(), 0xdc69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc67), 0xcb);
        EXPECT(gbc.readMem(0xdc68), 0x83);
        // CB 83 0342
        gbc.setState(0xbb91, 0xef52, 0x5e90, 0x14d9, 0xec10, 0x9974, 0x1, 0x0);
        gbc.writeMem(0xbb91, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xef52);
        EXPECT(gbc.pc(), 0xbb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb91), 0xcb);
        EXPECT(gbc.readMem(0xbb92), 0x83);
        // CB 83 0343
        gbc.setState(0x858, 0x98fb, 0x1400, 0x5671, 0x533c, 0x401e, 0x1, 0x0);
        gbc.writeMem(0x858, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x98fb);
        EXPECT(gbc.pc(), 0x85a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0344
        gbc.setState(0xc286, 0xcd25, 0x4e80, 0x968c, 0x2be5, 0xc325, 0x0, 0x0);
        gbc.writeMem(0xc286, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcd25);
        EXPECT(gbc.pc(), 0xc288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc286), 0xcb);
        EXPECT(gbc.readMem(0xc287), 0x83);
        // CB 83 0345
        gbc.setState(0x9526, 0x112d, 0xcd80, 0x94f0, 0x7db9, 0x4d85, 0x0, 0x0);
        gbc.writeMem(0x9526, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x112d);
        EXPECT(gbc.pc(), 0x9528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9526), 0xcb);
        EXPECT(gbc.readMem(0x9527), 0x83);
        // CB 83 0346
        gbc.setState(0xd616, 0x425c, 0xe950, 0x525b, 0xf1ad, 0xcbce, 0x0, 0x0);
        gbc.writeMem(0xd616, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x425c);
        EXPECT(gbc.pc(), 0xd618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd616), 0xcb);
        EXPECT(gbc.readMem(0xd617), 0x83);
        // CB 83 0347
        gbc.setState(0xe74c, 0xf3b0, 0x42d0, 0xd24c, 0x4bc4, 0x6f07, 0x0, 0x1);
        gbc.writeMem(0xe74c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf3b0);
        EXPECT(gbc.pc(), 0xe74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe74c), 0xcb);
        EXPECT(gbc.readMem(0xe74d), 0x83);
        // CB 83 0348
        gbc.setState(0xbe29, 0xd2af, 0x6380, 0x74d6, 0xfca7, 0x4abc, 0x0, 0x0);
        gbc.writeMem(0xbe29, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd2af);
        EXPECT(gbc.pc(), 0xbe2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe29), 0xcb);
        EXPECT(gbc.readMem(0xbe2a), 0x83);
        // CB 83 0349
        gbc.setState(0xbd1f, 0x9c96, 0xd880, 0x7252, 0x353e, 0xbfa3, 0x1, 0x1);
        gbc.writeMem(0xbd1f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9c96);
        EXPECT(gbc.pc(), 0xbd21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd1f), 0xcb);
        EXPECT(gbc.readMem(0xbd20), 0x83);
        // CB 83 034A
        gbc.setState(0xddf2, 0xfd88, 0x6100, 0xcd17, 0xedcf, 0x32c5, 0x1, 0x1);
        gbc.writeMem(0xddf2, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfd88);
        EXPECT(gbc.pc(), 0xddf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf2), 0xcb);
        EXPECT(gbc.readMem(0xddf3), 0x83);
        // CB 83 034B
        gbc.setState(0x6c9c, 0xc6fd, 0x1e80, 0x4155, 0x8b51, 0xcf32, 0x0, 0x1);
        gbc.writeMem(0x6c9c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc6fd);
        EXPECT(gbc.pc(), 0x6c9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 034C
        gbc.setState(0xc514, 0xfe94, 0xf050, 0x9cdb, 0x3861, 0xb70d, 0x0, 0x1);
        gbc.writeMem(0xc514, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfe94);
        EXPECT(gbc.pc(), 0xc516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc514), 0xcb);
        EXPECT(gbc.readMem(0xc515), 0x83);
        // CB 83 034D
        gbc.setState(0x99f9, 0x3ee5, 0xb040, 0xa815, 0xa15, 0xdb8, 0x0, 0x1);
        gbc.writeMem(0x99f9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3ee5);
        EXPECT(gbc.pc(), 0x99fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f9), 0xcb);
        EXPECT(gbc.readMem(0x99fa), 0x83);
        // CB 83 034E
        gbc.setState(0x95b5, 0x13b9, 0x470, 0x9aa1, 0x4067, 0xf780, 0x1, 0x0);
        gbc.writeMem(0x95b5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x13b9);
        EXPECT(gbc.pc(), 0x95b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b5), 0xcb);
        EXPECT(gbc.readMem(0x95b6), 0x83);
        // CB 83 034F
        gbc.setState(0x8b17, 0x63ba, 0x7db0, 0x3eaa, 0x3a19, 0x3c43, 0x1, 0x1);
        gbc.writeMem(0x8b17, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x63ba);
        EXPECT(gbc.pc(), 0x8b19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b17), 0xcb);
        EXPECT(gbc.readMem(0x8b18), 0x83);
        // CB 83 0350
        gbc.setState(0x5b8f, 0xd356, 0xeff0, 0x3d9b, 0x7d74, 0x1fc9, 0x1, 0x0);
        gbc.writeMem(0x5b8f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd356);
        EXPECT(gbc.pc(), 0x5b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0351
        gbc.setState(0xa921, 0xeb82, 0x9a90, 0x35e, 0xff07, 0x9118, 0x0, 0x1);
        gbc.writeMem(0xa921, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xeb82);
        EXPECT(gbc.pc(), 0xa923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa921), 0xcb);
        EXPECT(gbc.readMem(0xa922), 0x83);
        // CB 83 0352
        gbc.setState(0xb231, 0x46f3, 0x7a50, 0xc7ea, 0xac2a, 0xee7d, 0x0, 0x0);
        gbc.writeMem(0xb231, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x46f3);
        EXPECT(gbc.pc(), 0xb233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb231), 0xcb);
        EXPECT(gbc.readMem(0xb232), 0x83);
        // CB 83 0353
        gbc.setState(0xa079, 0x9e9e, 0x91b0, 0xb0a2, 0xd3ea, 0x3338, 0x0, 0x0);
        gbc.writeMem(0xa079, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9e9e);
        EXPECT(gbc.pc(), 0xa07b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa079), 0xcb);
        EXPECT(gbc.readMem(0xa07a), 0x83);
        // CB 83 0354
        gbc.setState(0xbc02, 0xa85e, 0x94e0, 0x714e, 0xf908, 0x9e84, 0x1, 0x0);
        gbc.writeMem(0xbc02, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa85e);
        EXPECT(gbc.pc(), 0xbc04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc02), 0xcb);
        EXPECT(gbc.readMem(0xbc03), 0x83);
        // CB 83 0355
        gbc.setState(0x508e, 0xd706, 0xf550, 0x1b22, 0xbe1a, 0x2646, 0x1, 0x0);
        gbc.writeMem(0x508e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd706);
        EXPECT(gbc.pc(), 0x5090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0356
        gbc.setState(0x8d6d, 0xff13, 0x30a0, 0xcb31, 0xf624, 0xa48b, 0x1, 0x1);
        gbc.writeMem(0x8d6d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xff13);
        EXPECT(gbc.pc(), 0x8d6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d6d), 0xcb);
        EXPECT(gbc.readMem(0x8d6e), 0x83);
        // CB 83 0357
        gbc.setState(0x3ed7, 0x27fe, 0x2230, 0x869c, 0xf7d2, 0x2180, 0x0, 0x0);
        gbc.writeMem(0x3ed7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x27fe);
        EXPECT(gbc.pc(), 0x3ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0358
        gbc.setState(0x4290, 0x5416, 0xb730, 0x85b, 0x3e5e, 0x6653, 0x1, 0x0);
        gbc.writeMem(0x4290, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5416);
        EXPECT(gbc.pc(), 0x4292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0359
        gbc.setState(0x2099, 0xbadc, 0xd5d0, 0x8557, 0x1c37, 0x4fa1, 0x1, 0x0);
        gbc.writeMem(0x2099, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbadc);
        EXPECT(gbc.pc(), 0x209b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 035A
        gbc.setState(0x6460, 0x9582, 0x88f0, 0x167c, 0xfc6c, 0xb235, 0x0, 0x1);
        gbc.writeMem(0x6460, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9582);
        EXPECT(gbc.pc(), 0x6462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 035B
        gbc.setState(0x372, 0xcf03, 0xc110, 0x4900, 0x6920, 0xfdc5, 0x0, 0x1);
        gbc.writeMem(0x372, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcf03);
        EXPECT(gbc.pc(), 0x374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 035C
        gbc.setState(0xe4d9, 0xdb11, 0xb630, 0x4100, 0x13a4, 0x326c, 0x0, 0x0);
        gbc.writeMem(0xe4d9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdb11);
        EXPECT(gbc.pc(), 0xe4db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d9), 0xcb);
        EXPECT(gbc.readMem(0xe4da), 0x83);
        // CB 83 035D
        gbc.setState(0x157f, 0x8c90, 0x6420, 0x234, 0xe143, 0xa57f, 0x1, 0x1);
        gbc.writeMem(0x157f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8c90);
        EXPECT(gbc.pc(), 0x1581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 035E
        gbc.setState(0x7190, 0x882d, 0x5e40, 0x8142, 0xce44, 0xbc17, 0x0, 0x0);
        gbc.writeMem(0x7190, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x882d);
        EXPECT(gbc.pc(), 0x7192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 035F
        gbc.setState(0x7208, 0x9ef0, 0xca70, 0x760d, 0xd459, 0x8dfa, 0x1, 0x1);
        gbc.writeMem(0x7208, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9ef0);
        EXPECT(gbc.pc(), 0x720a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0360
        gbc.setState(0x939a, 0x673, 0xf730, 0x27, 0xa263, 0x2a72, 0x1, 0x1);
        gbc.writeMem(0x939a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x673);
        EXPECT(gbc.pc(), 0x939c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x939a), 0xcb);
        EXPECT(gbc.readMem(0x939b), 0x83);
        // CB 83 0361
        gbc.setState(0x6c08, 0xd2a1, 0xc010, 0x187e, 0x7e0f, 0xb211, 0x1, 0x1);
        gbc.writeMem(0x6c08, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd2a1);
        EXPECT(gbc.pc(), 0x6c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0363
        gbc.setState(0x750b, 0x79f8, 0x6ad0, 0x278d, 0x47d, 0x22ed, 0x1, 0x1);
        gbc.writeMem(0x750b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x79f8);
        EXPECT(gbc.pc(), 0x750d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0365
        gbc.setState(0xdac9, 0x119e, 0x5790, 0xd64a, 0x5dba, 0xa8fc, 0x0, 0x1);
        gbc.writeMem(0xdac9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x119e);
        EXPECT(gbc.pc(), 0xdacb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac9), 0xcb);
        EXPECT(gbc.readMem(0xdaca), 0x83);
        // CB 83 0366
        gbc.setState(0x4f84, 0xd0e8, 0xc730, 0xa55a, 0x2111, 0x17ba, 0x0, 0x1);
        gbc.writeMem(0x4f84, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd0e8);
        EXPECT(gbc.pc(), 0x4f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0367
        gbc.setState(0xc080, 0x13fb, 0xb5a0, 0xb12d, 0xd52c, 0x6fb, 0x0, 0x1);
        gbc.writeMem(0xc080, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x13fb);
        EXPECT(gbc.pc(), 0xc082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc080), 0xcb);
        EXPECT(gbc.readMem(0xc081), 0x83);
        // CB 83 0368
        gbc.setState(0x9140, 0xe3d9, 0x61c0, 0xa2dc, 0xcb3e, 0xabaa, 0x1, 0x1);
        gbc.writeMem(0x9140, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe3d9);
        EXPECT(gbc.pc(), 0x9142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9140), 0xcb);
        EXPECT(gbc.readMem(0x9141), 0x83);
        // CB 83 0369
        gbc.setState(0xe528, 0xbad4, 0x8b50, 0x7f7f, 0xdcba, 0xfc1f, 0x0, 0x0);
        gbc.writeMem(0xe528, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbad4);
        EXPECT(gbc.pc(), 0xe52a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe528), 0xcb);
        EXPECT(gbc.readMem(0xe529), 0x83);
        // CB 83 036A
        gbc.setState(0x3768, 0x41b8, 0x91b0, 0x5339, 0x1ddb, 0xe825, 0x1, 0x0);
        gbc.writeMem(0x3768, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x41b8);
        EXPECT(gbc.pc(), 0x376a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 036B
        gbc.setState(0x41d0, 0xcf70, 0xc5d0, 0xdaa1, 0xd03a, 0x17f9, 0x0, 0x1);
        gbc.writeMem(0x41d0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xcf70);
        EXPECT(gbc.pc(), 0x41d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 036C
        gbc.setState(0x677b, 0xb590, 0x35d0, 0x8b37, 0x90ac, 0xa082, 0x0, 0x0);
        gbc.writeMem(0x677b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb590);
        EXPECT(gbc.pc(), 0x677d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 036D
        gbc.setState(0x9377, 0xf1de, 0xd680, 0xece8, 0x5f0a, 0xbe53, 0x1, 0x1);
        gbc.writeMem(0x9377, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf1de);
        EXPECT(gbc.pc(), 0x9379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9377), 0xcb);
        EXPECT(gbc.readMem(0x9378), 0x83);
        // CB 83 036E
        gbc.setState(0x34d1, 0x73fd, 0xd010, 0x1333, 0xd1d7, 0x3f2c, 0x1, 0x0);
        gbc.writeMem(0x34d1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x73fd);
        EXPECT(gbc.pc(), 0x34d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0370
        gbc.setState(0xcaa5, 0x1abb, 0xe330, 0x61dc, 0xd861, 0xdfea, 0x0, 0x0);
        gbc.writeMem(0xcaa5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1abb);
        EXPECT(gbc.pc(), 0xcaa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaa5), 0xcb);
        EXPECT(gbc.readMem(0xcaa6), 0x83);
        // CB 83 0371
        gbc.setState(0xdd0c, 0x6e3f, 0xf0f0, 0xf1c9, 0x9da6, 0x98fa, 0x1, 0x0);
        gbc.writeMem(0xdd0c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6e3f);
        EXPECT(gbc.pc(), 0xdd0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd0c), 0xcb);
        EXPECT(gbc.readMem(0xdd0d), 0x83);
        // CB 83 0372
        gbc.setState(0x76b0, 0x8352, 0x1e20, 0x654c, 0xde80, 0x7579, 0x0, 0x1);
        gbc.writeMem(0x76b0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8352);
        EXPECT(gbc.pc(), 0x76b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0373
        gbc.setState(0x350a, 0x7724, 0x5b60, 0x4e85, 0x412b, 0x7073, 0x0, 0x1);
        gbc.writeMem(0x350a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7724);
        EXPECT(gbc.pc(), 0x350c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0374
        gbc.setState(0x794f, 0x3634, 0x9c10, 0x4899, 0x17ed, 0xb388, 0x0, 0x1);
        gbc.writeMem(0x794f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3634);
        EXPECT(gbc.pc(), 0x7951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0375
        gbc.setState(0xc341, 0xaa19, 0x5940, 0xf944, 0x4dd2, 0x24c6, 0x1, 0x0);
        gbc.writeMem(0xc341, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xaa19);
        EXPECT(gbc.pc(), 0xc343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc341), 0xcb);
        EXPECT(gbc.readMem(0xc342), 0x83);
        // CB 83 0376
        gbc.setState(0xd283, 0x99d1, 0xc700, 0x8704, 0x9948, 0x504d, 0x0, 0x0);
        gbc.writeMem(0xd283, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x99d1);
        EXPECT(gbc.pc(), 0xd285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd283), 0xcb);
        EXPECT(gbc.readMem(0xd284), 0x83);
        // CB 83 0377
        gbc.setState(0x8b3a, 0x9d6, 0x89a0, 0x9d82, 0xd937, 0xf4f8, 0x1, 0x0);
        gbc.writeMem(0x8b3a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9d6);
        EXPECT(gbc.pc(), 0x8b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3a), 0xcb);
        EXPECT(gbc.readMem(0x8b3b), 0x83);
        // CB 83 0378
        gbc.setState(0x7a3e, 0x3e4a, 0x3c30, 0xe705, 0xc8dc, 0x4ccc, 0x0, 0x1);
        gbc.writeMem(0x7a3e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3e4a);
        EXPECT(gbc.pc(), 0x7a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0379
        gbc.setState(0x8a36, 0x15cd, 0xd820, 0x1c33, 0x608a, 0x5f3, 0x1, 0x0);
        gbc.writeMem(0x8a36, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x15cd);
        EXPECT(gbc.pc(), 0x8a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a36), 0xcb);
        EXPECT(gbc.readMem(0x8a37), 0x83);
        // CB 83 037A
        gbc.setState(0xddd3, 0x3ae1, 0x6430, 0xb282, 0x4376, 0xbd5d, 0x0, 0x1);
        gbc.writeMem(0xddd3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3ae1);
        EXPECT(gbc.pc(), 0xddd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd3), 0xcb);
        EXPECT(gbc.readMem(0xddd4), 0x83);
        // CB 83 037B
        gbc.setState(0x723a, 0x3e48, 0x1c0, 0xdf96, 0x12ac, 0x1ba6, 0x1, 0x0);
        gbc.writeMem(0x723a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3e48);
        EXPECT(gbc.pc(), 0x723c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 037C
        gbc.setState(0x81ad, 0xe98a, 0x28d0, 0x24e0, 0x80db, 0x97d, 0x0, 0x0);
        gbc.writeMem(0x81ad, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe98a);
        EXPECT(gbc.pc(), 0x81af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ad), 0xcb);
        EXPECT(gbc.readMem(0x81ae), 0x83);
        // CB 83 037D
        gbc.setState(0x43f8, 0x3441, 0xd50, 0xec85, 0xe07c, 0xd55b, 0x0, 0x0);
        gbc.writeMem(0x43f8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3441);
        EXPECT(gbc.pc(), 0x43fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 037E
        gbc.setState(0x5428, 0x817c, 0x260, 0x1809, 0x8102, 0x36b, 0x1, 0x1);
        gbc.writeMem(0x5428, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x817c);
        EXPECT(gbc.pc(), 0x542a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 037F
        gbc.setState(0x9c1b, 0x96c6, 0x7230, 0x86e7, 0xfed8, 0x411a, 0x0, 0x0);
        gbc.writeMem(0x9c1b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x96c6);
        EXPECT(gbc.pc(), 0x9c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c1b), 0xcb);
        EXPECT(gbc.readMem(0x9c1c), 0x83);
        // CB 83 0380
        gbc.setState(0x43ec, 0x8de2, 0x8980, 0xa540, 0xd39d, 0x8d5e, 0x0, 0x1);
        gbc.writeMem(0x43ec, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8de2);
        EXPECT(gbc.pc(), 0x43ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0381
        gbc.setState(0x631f, 0x29f1, 0x69c0, 0x1970, 0x90d9, 0xf58d, 0x0, 0x0);
        gbc.writeMem(0x631f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x29f1);
        EXPECT(gbc.pc(), 0x6321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0382
        gbc.setState(0x5080, 0x6adf, 0x49c0, 0xe389, 0xb36c, 0x2b3f, 0x0, 0x0);
        gbc.writeMem(0x5080, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6adf);
        EXPECT(gbc.pc(), 0x5082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0383
        gbc.setState(0xae24, 0x792a, 0x2f90, 0x81c9, 0xad7, 0x77b7, 0x1, 0x0);
        gbc.writeMem(0xae24, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x792a);
        EXPECT(gbc.pc(), 0xae26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae24), 0xcb);
        EXPECT(gbc.readMem(0xae25), 0x83);
        // CB 83 0384
        gbc.setState(0x319, 0x29dd, 0xdeb0, 0xf069, 0xb1d4, 0x891e, 0x0, 0x1);
        gbc.writeMem(0x319, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x29dd);
        EXPECT(gbc.pc(), 0x31b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0385
        gbc.setState(0x8a75, 0x69f0, 0xfe80, 0x93, 0x8cd8, 0xa024, 0x1, 0x1);
        gbc.writeMem(0x8a75, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x69f0);
        EXPECT(gbc.pc(), 0x8a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a75), 0xcb);
        EXPECT(gbc.readMem(0x8a76), 0x83);
        // CB 83 0386
        gbc.setState(0xe39b, 0xe3ab, 0xea60, 0x420c, 0xd41f, 0x21c0, 0x0, 0x1);
        gbc.writeMem(0xe39b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe3ab);
        EXPECT(gbc.pc(), 0xe39d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe39b), 0xcb);
        EXPECT(gbc.readMem(0xe39c), 0x83);
        // CB 83 0387
        gbc.setState(0x4dfe, 0x44ac, 0xb170, 0x5b4, 0xd80b, 0x2319, 0x0, 0x1);
        gbc.writeMem(0x4dfe, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x44ac);
        EXPECT(gbc.pc(), 0x4e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0388
        gbc.setState(0xabc6, 0xf5df, 0xdde0, 0xc01, 0xddfe, 0x20f2, 0x0, 0x1);
        gbc.writeMem(0xabc6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf5df);
        EXPECT(gbc.pc(), 0xabc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc6), 0xcb);
        EXPECT(gbc.readMem(0xabc7), 0x83);
        // CB 83 0389
        gbc.setState(0xd454, 0xa1b3, 0x23f0, 0xf992, 0x2fe2, 0x9d4c, 0x0, 0x1);
        gbc.writeMem(0xd454, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa1b3);
        EXPECT(gbc.pc(), 0xd456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd454), 0xcb);
        EXPECT(gbc.readMem(0xd455), 0x83);
        // CB 83 038A
        gbc.setState(0x4a9c, 0xa109, 0x760, 0xb718, 0xb786, 0x7fc1, 0x0, 0x1);
        gbc.writeMem(0x4a9c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa109);
        EXPECT(gbc.pc(), 0x4a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 038B
        gbc.setState(0xb521, 0xffc4, 0x44d0, 0x1cb, 0x4509, 0xb854, 0x1, 0x0);
        gbc.writeMem(0xb521, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xffc4);
        EXPECT(gbc.pc(), 0xb523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb521), 0xcb);
        EXPECT(gbc.readMem(0xb522), 0x83);
        // CB 83 038C
        gbc.setState(0x99a9, 0x8d92, 0xd3f0, 0x942, 0xfe9f, 0xe9e2, 0x0, 0x0);
        gbc.writeMem(0x99a9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8d92);
        EXPECT(gbc.pc(), 0x99ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99a9), 0xcb);
        EXPECT(gbc.readMem(0x99aa), 0x83);
        // CB 83 038D
        gbc.setState(0x1ad7, 0xfd74, 0x6060, 0x6f61, 0x66f1, 0x849c, 0x0, 0x1);
        gbc.writeMem(0x1ad7, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xfd74);
        EXPECT(gbc.pc(), 0x1ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 038F
        gbc.setState(0xb5c, 0x2b78, 0xf1f0, 0x65b6, 0x6943, 0xc789, 0x1, 0x1);
        gbc.writeMem(0xb5c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2b78);
        EXPECT(gbc.pc(), 0xb5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0390
        gbc.setState(0x1ef1, 0x7b28, 0x3280, 0x558c, 0x76bc, 0xdcd4, 0x0, 0x0);
        gbc.writeMem(0x1ef1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7b28);
        EXPECT(gbc.pc(), 0x1ef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0391
        gbc.setState(0xe9e0, 0x78d9, 0xbad0, 0x3dd1, 0xb928, 0xc9d9, 0x0, 0x0);
        gbc.writeMem(0xe9e0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x78d9);
        EXPECT(gbc.pc(), 0xe9e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e0), 0xcb);
        EXPECT(gbc.readMem(0xe9e1), 0x83);
        // CB 83 0393
        gbc.setState(0x2fc5, 0x4b61, 0x4fe0, 0xc124, 0x810c, 0x727a, 0x1, 0x0);
        gbc.writeMem(0x2fc5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4b61);
        EXPECT(gbc.pc(), 0x2fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0394
        gbc.setState(0x6a72, 0x51c0, 0x8840, 0x45dd, 0xe836, 0x13ba, 0x0, 0x0);
        gbc.writeMem(0x6a72, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x51c0);
        EXPECT(gbc.pc(), 0x6a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0395
        gbc.setState(0xe630, 0x1082, 0xb70, 0x906b, 0x22ef, 0xc3e4, 0x0, 0x0);
        gbc.writeMem(0xe630, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1082);
        EXPECT(gbc.pc(), 0xe632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe630), 0xcb);
        EXPECT(gbc.readMem(0xe631), 0x83);
        // CB 83 0396
        gbc.setState(0x3c0e, 0xc1b7, 0xed80, 0x537b, 0xa758, 0x3871, 0x1, 0x0);
        gbc.writeMem(0x3c0e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc1b7);
        EXPECT(gbc.pc(), 0x3c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 0397
        gbc.setState(0xa0c4, 0x7041, 0x800, 0x4a64, 0x3dcf, 0x795a, 0x1, 0x1);
        gbc.writeMem(0xa0c4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7041);
        EXPECT(gbc.pc(), 0xa0c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c4), 0xcb);
        EXPECT(gbc.readMem(0xa0c5), 0x83);
        // CB 83 0398
        gbc.setState(0x453a, 0x9e9a, 0x5ed0, 0xfd4, 0x898e, 0x10c5, 0x0, 0x1);
        gbc.writeMem(0x453a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9e9a);
        EXPECT(gbc.pc(), 0x453c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 0399
        gbc.setState(0x9260, 0x56a0, 0x9f10, 0x2bec, 0x6ce1, 0xf936, 0x0, 0x0);
        gbc.writeMem(0x9260, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x56a0);
        EXPECT(gbc.pc(), 0x9262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9260), 0xcb);
        EXPECT(gbc.readMem(0x9261), 0x83);
        // CB 83 039A
        gbc.setState(0x7d3a, 0x76d7, 0x2440, 0xd6ee, 0x4abf, 0xb16c, 0x0, 0x0);
        gbc.writeMem(0x7d3a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x76d7);
        EXPECT(gbc.pc(), 0x7d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 039C
        gbc.setState(0x335a, 0xac59, 0x30, 0x8713, 0xc7cc, 0x515b, 0x1, 0x1);
        gbc.writeMem(0x335a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xac59);
        EXPECT(gbc.pc(), 0x335c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 039D
        gbc.setState(0x8a72, 0xffd4, 0xb6c0, 0x853a, 0xce4c, 0xcec5, 0x1, 0x0);
        gbc.writeMem(0x8a72, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xffd4);
        EXPECT(gbc.pc(), 0x8a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a72), 0xcb);
        EXPECT(gbc.readMem(0x8a73), 0x83);
        // CB 83 039E
        gbc.setState(0xb137, 0x38bd, 0xa530, 0x8748, 0xa12e, 0x8e03, 0x1, 0x0);
        gbc.writeMem(0xb137, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x38bd);
        EXPECT(gbc.pc(), 0xb139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb137), 0xcb);
        EXPECT(gbc.readMem(0xb138), 0x83);
        // CB 83 039F
        gbc.setState(0x3733, 0x9732, 0x7a50, 0xf63a, 0x1028, 0x2b1a, 0x1, 0x0);
        gbc.writeMem(0x3733, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9732);
        EXPECT(gbc.pc(), 0x3735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03A0
        gbc.setState(0xa6b9, 0x6e11, 0xa410, 0x1446, 0xc091, 0x7675, 0x0, 0x0);
        gbc.writeMem(0xa6b9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6e11);
        EXPECT(gbc.pc(), 0xa6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b9), 0xcb);
        EXPECT(gbc.readMem(0xa6ba), 0x83);
        // CB 83 03A1
        gbc.setState(0x9e42, 0xbf72, 0x1ba0, 0x3e37, 0x6efe, 0x153a, 0x0, 0x1);
        gbc.writeMem(0x9e42, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xbf72);
        EXPECT(gbc.pc(), 0x9e44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e42), 0xcb);
        EXPECT(gbc.readMem(0x9e43), 0x83);
        // CB 83 03A2
        gbc.setState(0x83d0, 0xa2e7, 0xcd60, 0x9960, 0x8ffe, 0xe5a5, 0x1, 0x0);
        gbc.writeMem(0x83d0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa2e7);
        EXPECT(gbc.pc(), 0x83d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83d0), 0xcb);
        EXPECT(gbc.readMem(0x83d1), 0x83);
        // CB 83 03A3
        gbc.setState(0x9df5, 0x7c4e, 0xa190, 0x7e25, 0x1324, 0xe175, 0x0, 0x1);
        gbc.writeMem(0x9df5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7c4e);
        EXPECT(gbc.pc(), 0x9df7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df5), 0xcb);
        EXPECT(gbc.readMem(0x9df6), 0x83);
        // CB 83 03A4
        gbc.setState(0x1bff, 0x376c, 0x60f0, 0x3a40, 0x4935, 0xa4, 0x1, 0x0);
        gbc.writeMem(0x1bff, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x376c);
        EXPECT(gbc.pc(), 0x1c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03A5
        gbc.setState(0xb598, 0x591e, 0x5160, 0x5f73, 0x11e, 0xae26, 0x1, 0x0);
        gbc.writeMem(0xb598, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x591e);
        EXPECT(gbc.pc(), 0xb59a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb598), 0xcb);
        EXPECT(gbc.readMem(0xb599), 0x83);
        // CB 83 03A6
        gbc.setState(0x39a1, 0x1942, 0xb150, 0xe204, 0x7015, 0xbc8e, 0x1, 0x1);
        gbc.writeMem(0x39a1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1942);
        EXPECT(gbc.pc(), 0x39a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03A7
        gbc.setState(0xd75b, 0xda5a, 0x3000, 0x239, 0x19e9, 0x34b9, 0x0, 0x0);
        gbc.writeMem(0xd75b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xda5a);
        EXPECT(gbc.pc(), 0xd75d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd75b), 0xcb);
        EXPECT(gbc.readMem(0xd75c), 0x83);
        // CB 83 03A8
        gbc.setState(0xa728, 0x4db2, 0xe9f0, 0x98fb, 0x2e62, 0x1e2c, 0x0, 0x0);
        gbc.writeMem(0xa728, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4db2);
        EXPECT(gbc.pc(), 0xa72a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa728), 0xcb);
        EXPECT(gbc.readMem(0xa729), 0x83);
        // CB 83 03A9
        gbc.setState(0xd75d, 0x5431, 0xc790, 0xa2c9, 0xc109, 0x61a2, 0x0, 0x1);
        gbc.writeMem(0xd75d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5431);
        EXPECT(gbc.pc(), 0xd75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75d), 0xcb);
        EXPECT(gbc.readMem(0xd75e), 0x83);
        // CB 83 03AA
        gbc.setState(0x1065, 0xa7c1, 0x9480, 0x943b, 0x138d, 0xc365, 0x1, 0x1);
        gbc.writeMem(0x1065, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa7c1);
        EXPECT(gbc.pc(), 0x1067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03AB
        gbc.setState(0x34cf, 0x7ed9, 0xf5c0, 0x588e, 0xa5cf, 0xb394, 0x1, 0x0);
        gbc.writeMem(0x34cf, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7ed9);
        EXPECT(gbc.pc(), 0x34d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03AC
        gbc.setState(0xa049, 0xbdee, 0xa4d0, 0xedb8, 0x8f72, 0x25bb, 0x0, 0x1);
        gbc.writeMem(0xa049, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbdee);
        EXPECT(gbc.pc(), 0xa04b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa049), 0xcb);
        EXPECT(gbc.readMem(0xa04a), 0x83);
        // CB 83 03AD
        gbc.setState(0xaa55, 0xed06, 0x7b30, 0x932, 0x81e7, 0x951a, 0x0, 0x1);
        gbc.writeMem(0xaa55, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xed06);
        EXPECT(gbc.pc(), 0xaa57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa55), 0xcb);
        EXPECT(gbc.readMem(0xaa56), 0x83);
        // CB 83 03AE
        gbc.setState(0xc0e4, 0x4100, 0x2140, 0x83f6, 0xa0ef, 0xd5c3, 0x0, 0x1);
        gbc.writeMem(0xc0e4, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4100);
        EXPECT(gbc.pc(), 0xc0e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e4), 0xcb);
        EXPECT(gbc.readMem(0xc0e5), 0x83);
        // CB 83 03AF
        gbc.setState(0x7072, 0xb643, 0x4b40, 0xc16b, 0xcdf1, 0x3ef, 0x0, 0x1);
        gbc.writeMem(0x7072, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb643);
        EXPECT(gbc.pc(), 0x7074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03B0
        gbc.setState(0x29f8, 0x4589, 0xd540, 0xd468, 0x4c87, 0xa615, 0x1, 0x0);
        gbc.writeMem(0x29f8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4589);
        EXPECT(gbc.pc(), 0x29fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03B1
        gbc.setState(0x364c, 0x8e60, 0xfc60, 0xb370, 0x35bf, 0x93db, 0x0, 0x1);
        gbc.writeMem(0x364c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8e60);
        EXPECT(gbc.pc(), 0x364e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03B2
        gbc.setState(0x50c9, 0x15fc, 0x6f00, 0xf22b, 0xb2fa, 0xc7ae, 0x0, 0x0);
        gbc.writeMem(0x50c9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x15fc);
        EXPECT(gbc.pc(), 0x50cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03B3
        gbc.setState(0xb7f9, 0x784a, 0xe410, 0xe887, 0x5281, 0x842e, 0x1, 0x0);
        gbc.writeMem(0xb7f9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x784a);
        EXPECT(gbc.pc(), 0xb7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f9), 0xcb);
        EXPECT(gbc.readMem(0xb7fa), 0x83);
        // CB 83 03B4
        gbc.setState(0x2711, 0x6d60, 0xee40, 0xf58e, 0x1a84, 0xd5aa, 0x0, 0x1);
        gbc.writeMem(0x2711, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6d60);
        EXPECT(gbc.pc(), 0x2713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03B5
        gbc.setState(0x7318, 0xf436, 0x75b0, 0xb96d, 0xc06c, 0xcd50, 0x0, 0x0);
        gbc.writeMem(0x7318, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf436);
        EXPECT(gbc.pc(), 0x731a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03B6
        gbc.setState(0x8f89, 0x5b28, 0x4950, 0xf245, 0x168, 0x41f7, 0x0, 0x0);
        gbc.writeMem(0x8f89, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5b28);
        EXPECT(gbc.pc(), 0x8f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f89), 0xcb);
        EXPECT(gbc.readMem(0x8f8a), 0x83);
        // CB 83 03B7
        gbc.setState(0xc21a, 0x7d53, 0x5170, 0x1320, 0x4e37, 0x535b, 0x0, 0x0);
        gbc.writeMem(0xc21a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7d53);
        EXPECT(gbc.pc(), 0xc21c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc21a), 0xcb);
        EXPECT(gbc.readMem(0xc21b), 0x83);
        // CB 83 03B9
        gbc.setState(0x9cf3, 0xa30f, 0x71c0, 0x3a7e, 0x23eb, 0x415b, 0x0, 0x0);
        gbc.writeMem(0x9cf3, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa30f);
        EXPECT(gbc.pc(), 0x9cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf3), 0xcb);
        EXPECT(gbc.readMem(0x9cf4), 0x83);
        // CB 83 03BA
        gbc.setState(0x7d28, 0x4a0b, 0xdca0, 0x4f03, 0xe803, 0x91a, 0x1, 0x1);
        gbc.writeMem(0x7d28, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4a0b);
        EXPECT(gbc.pc(), 0x7d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03BB
        gbc.setState(0x2b94, 0xf489, 0x11b0, 0xe090, 0x8824, 0xc924, 0x0, 0x1);
        gbc.writeMem(0x2b94, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf489);
        EXPECT(gbc.pc(), 0x2b96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03BC
        gbc.setState(0x4afc, 0x8a54, 0xa0, 0xbf8d, 0x5c9b, 0x3b77, 0x1, 0x1);
        gbc.writeMem(0x4afc, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8a54);
        EXPECT(gbc.pc(), 0x4afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03BD
        gbc.setState(0x2b24, 0x9df0, 0x1620, 0xda39, 0xbc94, 0xa2bc, 0x1, 0x0);
        gbc.writeMem(0x2b24, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9df0);
        EXPECT(gbc.pc(), 0x2b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03BE
        gbc.setState(0x2af5, 0xb29b, 0x1170, 0x310e, 0x9cea, 0x69aa, 0x1, 0x1);
        gbc.writeMem(0x2af5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb29b);
        EXPECT(gbc.pc(), 0x2af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03C0
        gbc.setState(0x474a, 0xdf7a, 0x8150, 0xad80, 0x4568, 0x93cf, 0x1, 0x1);
        gbc.writeMem(0x474a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xdf7a);
        EXPECT(gbc.pc(), 0x474c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03C1
        gbc.setState(0x2041, 0xa6a, 0x9570, 0x3892, 0x7c15, 0x4f30, 0x1, 0x0);
        gbc.writeMem(0x2041, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa6a);
        EXPECT(gbc.pc(), 0x2043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03C2
        gbc.setState(0xbf51, 0xf948, 0x8cd0, 0xaee4, 0xb45a, 0x7571, 0x0, 0x1);
        gbc.writeMem(0xbf51, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf948);
        EXPECT(gbc.pc(), 0xbf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf51), 0xcb);
        EXPECT(gbc.readMem(0xbf52), 0x83);
        // CB 83 03C3
        gbc.setState(0xe48b, 0xfddf, 0x3bf0, 0x976b, 0x503b, 0xd6d5, 0x1, 0x0);
        gbc.writeMem(0xe48b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfddf);
        EXPECT(gbc.pc(), 0xe48d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe48b), 0xcb);
        EXPECT(gbc.readMem(0xe48c), 0x83);
        // CB 83 03C4
        gbc.setState(0x669e, 0x1b2f, 0x2f10, 0x3a5e, 0xdf41, 0xa5bd, 0x1, 0x1);
        gbc.writeMem(0x669e, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1b2f);
        EXPECT(gbc.pc(), 0x66a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03C5
        gbc.setState(0x383c, 0x8b72, 0x8f50, 0x5d41, 0x4026, 0x813, 0x0, 0x1);
        gbc.writeMem(0x383c, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8b72);
        EXPECT(gbc.pc(), 0x383e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03C6
        gbc.setState(0xa08f, 0x50d8, 0x15a0, 0x1bc6, 0xc999, 0x8329, 0x1, 0x1);
        gbc.writeMem(0xa08f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x50d8);
        EXPECT(gbc.pc(), 0xa091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08f), 0xcb);
        EXPECT(gbc.readMem(0xa090), 0x83);
        // CB 83 03C7
        gbc.setState(0xd706, 0x5d19, 0xd730, 0xe4f8, 0xde32, 0x46cc, 0x0, 0x0);
        gbc.writeMem(0xd706, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5d19);
        EXPECT(gbc.pc(), 0xd708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd706), 0xcb);
        EXPECT(gbc.readMem(0xd707), 0x83);
        // CB 83 03C8
        gbc.setState(0x2cb5, 0x315c, 0xe160, 0xc265, 0xd65e, 0x7b21, 0x1, 0x1);
        gbc.writeMem(0x2cb5, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x315c);
        EXPECT(gbc.pc(), 0x2cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03CA
        gbc.setState(0x2136, 0x9c63, 0x56a0, 0x2845, 0x41b6, 0xd420, 0x1, 0x1);
        gbc.writeMem(0x2136, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9c63);
        EXPECT(gbc.pc(), 0x2138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03CB
        gbc.setState(0x1179, 0x65a2, 0x9160, 0xd689, 0x2633, 0x99f1, 0x0, 0x1);
        gbc.writeMem(0x1179, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x65a2);
        EXPECT(gbc.pc(), 0x117b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03CC
        gbc.setState(0x84cd, 0xf88b, 0xc750, 0x84c6, 0xfca0, 0xcf57, 0x1, 0x1);
        gbc.writeMem(0x84cd, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf88b);
        EXPECT(gbc.pc(), 0x84cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84cd), 0xcb);
        EXPECT(gbc.readMem(0x84ce), 0x83);
        // CB 83 03CD
        gbc.setState(0xaea9, 0xc929, 0x6500, 0xf961, 0xfe61, 0x9e00, 0x0, 0x0);
        gbc.writeMem(0xaea9, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc929);
        EXPECT(gbc.pc(), 0xaeab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea9), 0xcb);
        EXPECT(gbc.readMem(0xaeaa), 0x83);
        // CB 83 03CE
        gbc.setState(0x77e8, 0xf46e, 0xff20, 0xb556, 0x1ba4, 0xfce9, 0x0, 0x0);
        gbc.writeMem(0x77e8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf46e);
        EXPECT(gbc.pc(), 0x77ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03CF
        gbc.setState(0x8b97, 0x7c17, 0xf020, 0x34f8, 0xad95, 0x6b7a, 0x0, 0x0);
        gbc.writeMem(0x8b97, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7c17);
        EXPECT(gbc.pc(), 0x8b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b97), 0xcb);
        EXPECT(gbc.readMem(0x8b98), 0x83);
        // CB 83 03D0
        gbc.setState(0x6730, 0x6280, 0x8de0, 0x4a71, 0x5c8d, 0x589d, 0x1, 0x0);
        gbc.writeMem(0x6730, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6280);
        EXPECT(gbc.pc(), 0x6732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03D1
        gbc.setState(0xab3a, 0xc70c, 0xac0, 0xcddb, 0x922c, 0x8cda, 0x1, 0x1);
        gbc.writeMem(0xab3a, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc70c);
        EXPECT(gbc.pc(), 0xab3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab3a), 0xcb);
        EXPECT(gbc.readMem(0xab3b), 0x83);
        // CB 83 03D2
        gbc.setState(0x5c71, 0xd621, 0x300, 0xce81, 0x366c, 0x8e4f, 0x1, 0x1);
        gbc.writeMem(0x5c71, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd621);
        EXPECT(gbc.pc(), 0x5c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03D3
        gbc.setState(0xd620, 0x424f, 0xec90, 0x56f4, 0x3c24, 0x634b, 0x1, 0x0);
        gbc.writeMem(0xd620, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x424f);
        EXPECT(gbc.pc(), 0xd622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd620), 0xcb);
        EXPECT(gbc.readMem(0xd621), 0x83);
        // CB 83 03D4
        gbc.setState(0x20db, 0x8a53, 0x95f0, 0xea74, 0xf9d5, 0x798e, 0x0, 0x1);
        gbc.writeMem(0x20db, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8a53);
        EXPECT(gbc.pc(), 0x20dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03D5
        gbc.setState(0x5cf0, 0x300d, 0x3df0, 0x2b78, 0x9fab, 0xbb72, 0x0, 0x1);
        gbc.writeMem(0x5cf0, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x300d);
        EXPECT(gbc.pc(), 0x5cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03D7
        gbc.setState(0xda46, 0x80a4, 0x9d20, 0x6f1, 0x13b5, 0x86ba, 0x0, 0x0);
        gbc.writeMem(0xda46, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x80a4);
        EXPECT(gbc.pc(), 0xda48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda46), 0xcb);
        EXPECT(gbc.readMem(0xda47), 0x83);
        // CB 83 03D8
        gbc.setState(0x759f, 0x62c1, 0x5990, 0x41dc, 0x7d59, 0x990b, 0x0, 0x1);
        gbc.writeMem(0x759f, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x62c1);
        EXPECT(gbc.pc(), 0x75a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03D9
        gbc.setState(0x3506, 0x14bf, 0xdf80, 0x45a2, 0xd9b5, 0x339, 0x1, 0x0);
        gbc.writeMem(0x3506, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x14bf);
        EXPECT(gbc.pc(), 0x3508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03DA
        gbc.setState(0x9be6, 0xd70f, 0x3520, 0xf839, 0xe912, 0x10c7, 0x0, 0x1);
        gbc.writeMem(0x9be6, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd70f);
        EXPECT(gbc.pc(), 0x9be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9be6), 0xcb);
        EXPECT(gbc.readMem(0x9be7), 0x83);
        // CB 83 03DB
        gbc.setState(0x5c10, 0xe913, 0xe8a0, 0xa218, 0x4091, 0xdcf0, 0x0, 0x0);
        gbc.writeMem(0x5c10, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe913);
        EXPECT(gbc.pc(), 0x5c12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03DC
        gbc.setState(0x3ba8, 0xd878, 0x2380, 0xf408, 0xf01b, 0x18e4, 0x0, 0x0);
        gbc.writeMem(0x3ba8, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd878);
        EXPECT(gbc.pc(), 0x3baa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03DD
        gbc.setState(0x9496, 0x241f, 0x1800, 0x4c18, 0x3fdb, 0xfed0, 0x1, 0x1);
        gbc.writeMem(0x9496, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x241f);
        EXPECT(gbc.pc(), 0x9498);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9496), 0xcb);
        EXPECT(gbc.readMem(0x9497), 0x83);
        // CB 83 03DE
        gbc.setState(0x1ec1, 0xf3d4, 0xcda0, 0x7a22, 0x3158, 0xaed2, 0x0, 0x1);
        gbc.writeMem(0x1ec1, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf3d4);
        EXPECT(gbc.pc(), 0x1ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 83 03DF
        gbc.setState(0x5882, 0x60db, 0x1c10, 0xaec3, 0x4131, 0x59cf, 0x0, 0x0);
        gbc.writeMem(0x5882, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x60db);
        EXPECT(gbc.pc(), 0x5884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03E0
        gbc.setState(0xcc77, 0xfde2, 0x54f0, 0xa951, 0xd3f2, 0xe5ec, 0x0, 0x0);
        gbc.writeMem(0xcc77, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfde2);
        EXPECT(gbc.pc(), 0xcc79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc77), 0xcb);
        EXPECT(gbc.readMem(0xcc78), 0x83);
        // CB 83 03E1
        gbc.setState(0x8fec, 0xb771, 0x3fe0, 0xff23, 0xf714, 0x7ea4, 0x1, 0x1);
        gbc.writeMem(0x8fec, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb771);
        EXPECT(gbc.pc(), 0x8fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fec), 0xcb);
        EXPECT(gbc.readMem(0x8fed), 0x83);
        // CB 83 03E2
        gbc.setState(0x1c9b, 0xeced, 0x2ed0, 0x845, 0xaa0a, 0xdff3, 0x0, 0x0);
        gbc.writeMem(0x1c9b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xeced);
        EXPECT(gbc.pc(), 0x1c9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03E3
        gbc.setState(0x6c46, 0x17cf, 0xe930, 0x8b1f, 0x3901, 0xdf16, 0x1, 0x1);
        gbc.writeMem(0x6c46, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x17cf);
        EXPECT(gbc.pc(), 0x6c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03E4
        gbc.setState(0x841b, 0x24ae, 0xc30, 0x494a, 0xfa2a, 0x6a0a, 0x1, 0x1);
        gbc.writeMem(0x841b, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x24ae);
        EXPECT(gbc.pc(), 0x841d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841b), 0xcb);
        EXPECT(gbc.readMem(0x841c), 0x83);
        // CB 83 03E6
        gbc.setState(0x1409, 0xc04e, 0xc9b0, 0x59f5, 0x226a, 0xe631, 0x0, 0x0);
        gbc.writeMem(0x1409, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc04e);
        EXPECT(gbc.pc(), 0x140b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 83 03E7
        gbc.setState(0x6a4d, 0x38fa, 0xed00, 0x8b78, 0xdf33, 0xf704, 0x0, 0x1);
        gbc.writeMem(0x6a4d, { 0xcb, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x38fa);
        EXPECT(gbc.pc(), 0x6a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
