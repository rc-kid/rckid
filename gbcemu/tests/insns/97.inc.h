    TEST(gbcemu, opcode_97) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 97 0000
        gbc.setState(0xea88, 0xa1f2, 0x2860, 0xfce4, 0xf37d, 0xbd3, 0x0, 0x1);
        gbc.writeMem(0xea88, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa1f2, gbc.sp());
        EXPECT(0xea89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xea88));
        // 97 0001
        gbc.setState(0xb8cd, 0x9588, 0x4000, 0xbc48, 0x8587, 0xe91a, 0x0, 0x1);
        gbc.writeMem(0xb8cd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9588, gbc.sp());
        EXPECT(0xb8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb8cd));
        // 97 0002
        gbc.setState(0x7ced, 0x465f, 0xdff0, 0x77b2, 0x4775, 0xbfc3, 0x1, 0x1);
        gbc.writeMem(0x7ced, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x465f, gbc.sp());
        EXPECT(0x7cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0003
        gbc.setState(0x59c4, 0x9e1f, 0x7150, 0x8ffe, 0x74c7, 0x2a7d, 0x0, 0x1);
        gbc.writeMem(0x59c4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9e1f, gbc.sp());
        EXPECT(0x59c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0004
        gbc.setState(0x6a99, 0x8dd1, 0x890, 0xab26, 0x53e6, 0xa178, 0x1, 0x0);
        gbc.writeMem(0x6a99, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8dd1, gbc.sp());
        EXPECT(0x6a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0005
        gbc.setState(0x9d05, 0x2104, 0xeb80, 0xc5ef, 0x523d, 0x7160, 0x0, 0x1);
        gbc.writeMem(0x9d05, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2104, gbc.sp());
        EXPECT(0x9d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9d05));
        // 97 0006
        gbc.setState(0x582d, 0xb666, 0x6be0, 0x79bf, 0x5455, 0x2724, 0x0, 0x1);
        gbc.writeMem(0x582d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb666, gbc.sp());
        EXPECT(0x582e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0007
        gbc.setState(0xeb4b, 0x76b2, 0xf1e0, 0x90ce, 0xa702, 0x4975, 0x1, 0x0);
        gbc.writeMem(0xeb4b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x76b2, gbc.sp());
        EXPECT(0xeb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeb4b));
        // 97 0008
        gbc.setState(0x691b, 0xebfd, 0x7750, 0xebc, 0x7b71, 0x69bd, 0x1, 0x1);
        gbc.writeMem(0x691b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xebfd, gbc.sp());
        EXPECT(0x691c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0009
        gbc.setState(0xdfba, 0xf199, 0x1bc0, 0x24be, 0xd608, 0x339, 0x0, 0x1);
        gbc.writeMem(0xdfba, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf199, gbc.sp());
        EXPECT(0xdfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdfba));
        // 97 000A
        gbc.setState(0xcb78, 0xd62, 0x90a0, 0x9ab5, 0x2c2e, 0x73c5, 0x0, 0x0);
        gbc.writeMem(0xcb78, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd62, gbc.sp());
        EXPECT(0xcb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcb78));
        // 97 000B
        gbc.setState(0x3b3c, 0x1efe, 0x8ac0, 0x69bd, 0x7f65, 0xd560, 0x0, 0x0);
        gbc.writeMem(0x3b3c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1efe, gbc.sp());
        EXPECT(0x3b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 000C
        gbc.setState(0x2bf0, 0x741a, 0x4a0, 0xa162, 0x9d89, 0x9885, 0x0, 0x0);
        gbc.writeMem(0x2bf0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x741a, gbc.sp());
        EXPECT(0x2bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 000D
        gbc.setState(0x7328, 0x1689, 0xb1b0, 0x83e, 0xa2ff, 0x8d5e, 0x0, 0x1);
        gbc.writeMem(0x7328, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1689, gbc.sp());
        EXPECT(0x7329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 000E
        gbc.setState(0x4173, 0xd33d, 0x2640, 0xa7f9, 0x937f, 0x279a, 0x1, 0x1);
        gbc.writeMem(0x4173, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd33d, gbc.sp());
        EXPECT(0x4174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 000F
        gbc.setState(0x5ef7, 0x83d7, 0x3f50, 0x664b, 0x5fae, 0x2071, 0x1, 0x0);
        gbc.writeMem(0x5ef7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x83d7, gbc.sp());
        EXPECT(0x5ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0010
        gbc.setState(0x679b, 0x322a, 0x2ab0, 0xd718, 0x2995, 0x263c, 0x0, 0x1);
        gbc.writeMem(0x679b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x322a, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0011
        gbc.setState(0xdd10, 0xecc7, 0x2820, 0xdb2b, 0xcbcb, 0xb605, 0x1, 0x0);
        gbc.writeMem(0xdd10, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xecc7, gbc.sp());
        EXPECT(0xdd11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdd10));
        // 97 0012
        gbc.setState(0xeacf, 0xa7c5, 0xd2b0, 0x8c00, 0x2fd8, 0x7dc0, 0x1, 0x1);
        gbc.writeMem(0xeacf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa7c5, gbc.sp());
        EXPECT(0xead0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeacf));
        // 97 0013
        gbc.setState(0x429, 0xf990, 0x1750, 0xdfd8, 0x2767, 0x1e16, 0x1, 0x1);
        gbc.writeMem(0x429, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf990, gbc.sp());
        EXPECT(0x42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0014
        gbc.setState(0x3d08, 0xf3a7, 0x8c30, 0xd857, 0x45e5, 0x7f09, 0x0, 0x1);
        gbc.writeMem(0x3d08, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf3a7, gbc.sp());
        EXPECT(0x3d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0015
        gbc.setState(0x504a, 0x31d8, 0x3080, 0xafe3, 0x8f90, 0xf4dd, 0x0, 0x1);
        gbc.writeMem(0x504a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x31d8, gbc.sp());
        EXPECT(0x504b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0016
        gbc.setState(0xdff, 0x1dd1, 0x2ae0, 0xd34e, 0xe053, 0xa4eb, 0x0, 0x0);
        gbc.writeMem(0xdff, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1dd1, gbc.sp());
        EXPECT(0xe00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0017
        gbc.setState(0xa9ba, 0x5ab9, 0x1c50, 0x9c83, 0xf231, 0x70c, 0x0, 0x1);
        gbc.writeMem(0xa9ba, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5ab9, gbc.sp());
        EXPECT(0xa9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa9ba));
        // 97 0018
        gbc.setState(0xc14e, 0x6192, 0xbaa0, 0x2f17, 0x85cf, 0xcd3b, 0x1, 0x1);
        gbc.writeMem(0xc14e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6192, gbc.sp());
        EXPECT(0xc14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc14e));
        // 97 0019
        gbc.setState(0x381b, 0xb941, 0x6090, 0xb10e, 0x6ed3, 0xb094, 0x0, 0x0);
        gbc.writeMem(0x381b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb941, gbc.sp());
        EXPECT(0x381c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 001A
        gbc.setState(0x173b, 0x93b0, 0xaff0, 0x1f26, 0x12ec, 0xea5b, 0x0, 0x0);
        gbc.writeMem(0x173b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x93b0, gbc.sp());
        EXPECT(0x173c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 001B
        gbc.setState(0xb715, 0xca41, 0x8c70, 0xaf1d, 0xe242, 0x5564, 0x0, 0x1);
        gbc.writeMem(0xb715, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xca41, gbc.sp());
        EXPECT(0xb716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb715));
        // 97 001C
        gbc.setState(0x6867, 0xd228, 0x15a0, 0xbcc9, 0xfcd5, 0xabfc, 0x1, 0x0);
        gbc.writeMem(0x6867, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd228, gbc.sp());
        EXPECT(0x6868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 001D
        gbc.setState(0x6f97, 0x2d19, 0xa020, 0x12d3, 0xaa0e, 0xe14c, 0x1, 0x0);
        gbc.writeMem(0x6f97, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2d19, gbc.sp());
        EXPECT(0x6f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 001E
        gbc.setState(0xa43a, 0x144, 0xbc90, 0xa03, 0x543a, 0xac40, 0x0, 0x1);
        gbc.writeMem(0xa43a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x144, gbc.sp());
        EXPECT(0xa43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa43a));
        // 97 0020
        gbc.setState(0x21fc, 0x17a9, 0xc2b0, 0xa79c, 0x89db, 0xc85b, 0x1, 0x0);
        gbc.writeMem(0x21fc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x17a9, gbc.sp());
        EXPECT(0x21fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0021
        gbc.setState(0x75c3, 0xdad3, 0x2f30, 0x7311, 0xcbbc, 0x52aa, 0x1, 0x0);
        gbc.writeMem(0x75c3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdad3, gbc.sp());
        EXPECT(0x75c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0022
        gbc.setState(0xbfb2, 0x2c2e, 0x8590, 0x4e2f, 0xe, 0xd7a2, 0x1, 0x1);
        gbc.writeMem(0xbfb2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2c2e, gbc.sp());
        EXPECT(0xbfb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbfb2));
        // 97 0023
        gbc.setState(0x60fc, 0x6577, 0xf7c0, 0x852b, 0xde4b, 0x60f5, 0x0, 0x1);
        gbc.writeMem(0x60fc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6577, gbc.sp());
        EXPECT(0x60fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0024
        gbc.setState(0xd449, 0xd436, 0xfa10, 0x59db, 0x3998, 0xf392, 0x1, 0x0);
        gbc.writeMem(0xd449, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd436, gbc.sp());
        EXPECT(0xd44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd449));
        // 97 0025
        gbc.setState(0x30e3, 0xa608, 0xbb20, 0x7d1d, 0x9ae0, 0xeae2, 0x1, 0x1);
        gbc.writeMem(0x30e3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa608, gbc.sp());
        EXPECT(0x30e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0026
        gbc.setState(0x881, 0x2584, 0x6360, 0x7b5b, 0x3026, 0x27eb, 0x1, 0x1);
        gbc.writeMem(0x881, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2584, gbc.sp());
        EXPECT(0x882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0027
        gbc.setState(0x1b73, 0x12d9, 0xa770, 0x20e4, 0x7726, 0x5115, 0x1, 0x0);
        gbc.writeMem(0x1b73, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x12d9, gbc.sp());
        EXPECT(0x1b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0028
        gbc.setState(0x8c62, 0x1d6b, 0x1280, 0xc498, 0x8499, 0x48e2, 0x0, 0x0);
        gbc.writeMem(0x8c62, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1d6b, gbc.sp());
        EXPECT(0x8c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8c62));
        // 97 0029
        gbc.setState(0x7d2e, 0x63e0, 0xb130, 0x55c4, 0x8ef2, 0xefae, 0x1, 0x1);
        gbc.writeMem(0x7d2e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x63e0, gbc.sp());
        EXPECT(0x7d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 002A
        gbc.setState(0x401d, 0x2bab, 0x7e80, 0x3503, 0x1a45, 0xa9cc, 0x1, 0x0);
        gbc.writeMem(0x401d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2bab, gbc.sp());
        EXPECT(0x401e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 002B
        gbc.setState(0xeeac, 0xc5ba, 0xbeb0, 0xe239, 0xec4d, 0x31cf, 0x0, 0x0);
        gbc.writeMem(0xeeac, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc5ba, gbc.sp());
        EXPECT(0xeead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeeac));
        // 97 002C
        gbc.setState(0x413a, 0x7517, 0x1630, 0x6b44, 0xa94b, 0xd3e7, 0x1, 0x1);
        gbc.writeMem(0x413a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7517, gbc.sp());
        EXPECT(0x413b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 002D
        gbc.setState(0xbfc0, 0x88b3, 0x4c70, 0x9776, 0x68d9, 0x4f25, 0x1, 0x0);
        gbc.writeMem(0xbfc0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x88b3, gbc.sp());
        EXPECT(0xbfc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbfc0));
        // 97 002E
        gbc.setState(0xcef7, 0xb486, 0xc390, 0xf8cc, 0x602c, 0x8d6e, 0x1, 0x0);
        gbc.writeMem(0xcef7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb486, gbc.sp());
        EXPECT(0xcef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcef7));
        // 97 002F
        gbc.setState(0x5c98, 0x736f, 0xe2f0, 0x3431, 0x2f48, 0x428c, 0x0, 0x0);
        gbc.writeMem(0x5c98, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x736f, gbc.sp());
        EXPECT(0x5c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0030
        gbc.setState(0x7198, 0xcbe6, 0x60d0, 0x1def, 0x5cb4, 0xebb1, 0x1, 0x1);
        gbc.writeMem(0x7198, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcbe6, gbc.sp());
        EXPECT(0x7199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0031
        gbc.setState(0x3f7b, 0x368b, 0x6600, 0xbc5a, 0x24f7, 0x3dec, 0x1, 0x1);
        gbc.writeMem(0x3f7b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x368b, gbc.sp());
        EXPECT(0x3f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0032
        gbc.setState(0xd9c7, 0xaa1, 0x9240, 0x7ee7, 0x50f4, 0x1c9a, 0x1, 0x0);
        gbc.writeMem(0xd9c7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xaa1, gbc.sp());
        EXPECT(0xd9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd9c7));
        // 97 0033
        gbc.setState(0x1a83, 0x63c4, 0xb5a0, 0x289e, 0x5245, 0xdce0, 0x1, 0x1);
        gbc.writeMem(0x1a83, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x63c4, gbc.sp());
        EXPECT(0x1a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0034
        gbc.setState(0x44d8, 0xfd25, 0xd740, 0x4c64, 0x54d3, 0x580d, 0x1, 0x0);
        gbc.writeMem(0x44d8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfd25, gbc.sp());
        EXPECT(0x44d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0035
        gbc.setState(0x685c, 0x3bff, 0xe840, 0x9be1, 0x5b71, 0x78db, 0x1, 0x1);
        gbc.writeMem(0x685c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3bff, gbc.sp());
        EXPECT(0x685d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0036
        gbc.setState(0xa6f4, 0x7f2c, 0xaba0, 0x756b, 0x7c3c, 0x6879, 0x0, 0x1);
        gbc.writeMem(0xa6f4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7f2c, gbc.sp());
        EXPECT(0xa6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa6f4));
        // 97 0037
        gbc.setState(0x7a37, 0xbec1, 0x7b90, 0xb5e9, 0x56f9, 0x54ce, 0x0, 0x1);
        gbc.writeMem(0x7a37, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbec1, gbc.sp());
        EXPECT(0x7a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0038
        gbc.setState(0x1bb1, 0x3540, 0xb460, 0xfb5f, 0x4fe5, 0x8c8f, 0x0, 0x1);
        gbc.writeMem(0x1bb1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3540, gbc.sp());
        EXPECT(0x1bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0039
        gbc.setState(0xb5de, 0xe1c3, 0xfd70, 0x3cc1, 0x1ded, 0xf171, 0x1, 0x0);
        gbc.writeMem(0xb5de, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe1c3, gbc.sp());
        EXPECT(0xb5df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb5de));
        // 97 003A
        gbc.setState(0x15fb, 0xa584, 0xf670, 0x15dd, 0x59c8, 0x477f, 0x0, 0x1);
        gbc.writeMem(0x15fb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa584, gbc.sp());
        EXPECT(0x15fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 003B
        gbc.setState(0x26f5, 0xfcf, 0x6d30, 0x2b51, 0xd084, 0xd084, 0x1, 0x0);
        gbc.writeMem(0x26f5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfcf, gbc.sp());
        EXPECT(0x26f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 003C
        gbc.setState(0xec37, 0x1384, 0x2f50, 0x8a99, 0x347c, 0x6816, 0x1, 0x1);
        gbc.writeMem(0xec37, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1384, gbc.sp());
        EXPECT(0xec38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xec37));
        // 97 003D
        gbc.setState(0x91af, 0x81e9, 0xeff0, 0x696a, 0xb9c2, 0xd04a, 0x1, 0x1);
        gbc.writeMem(0x91af, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x81e9, gbc.sp());
        EXPECT(0x91b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x91af));
        // 97 003F
        gbc.setState(0xa150, 0xe765, 0x10c0, 0xf332, 0x6e54, 0xb0ae, 0x1, 0x0);
        gbc.writeMem(0xa150, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe765, gbc.sp());
        EXPECT(0xa151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa150));
        // 97 0040
        gbc.setState(0xaccd, 0x4987, 0x7bf0, 0x86a4, 0x5762, 0x61d3, 0x1, 0x1);
        gbc.writeMem(0xaccd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4987, gbc.sp());
        EXPECT(0xacce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaccd));
        // 97 0041
        gbc.setState(0xe873, 0x2ba9, 0xd9c0, 0x7051, 0x861, 0x91e6, 0x1, 0x0);
        gbc.writeMem(0xe873, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2ba9, gbc.sp());
        EXPECT(0xe874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe873));
        // 97 0042
        gbc.setState(0xdca1, 0x3133, 0xb280, 0x2a5e, 0x7964, 0xe5f9, 0x0, 0x1);
        gbc.writeMem(0xdca1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3133, gbc.sp());
        EXPECT(0xdca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdca1));
        // 97 0043
        gbc.setState(0xa7a0, 0x1857, 0xe4d0, 0xda83, 0x19b6, 0xa999, 0x1, 0x0);
        gbc.writeMem(0xa7a0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1857, gbc.sp());
        EXPECT(0xa7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa7a0));
        // 97 0044
        gbc.setState(0x80f4, 0xb673, 0x59c0, 0xea55, 0xe951, 0xe1c7, 0x0, 0x0);
        gbc.writeMem(0x80f4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb673, gbc.sp());
        EXPECT(0x80f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x80f4));
        // 97 0046
        gbc.setState(0x6c68, 0x2671, 0x1940, 0xa965, 0x82fa, 0x8f71, 0x1, 0x1);
        gbc.writeMem(0x6c68, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2671, gbc.sp());
        EXPECT(0x6c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0047
        gbc.setState(0x3d52, 0xa819, 0x8530, 0x52d4, 0x2fe2, 0x9691, 0x1, 0x0);
        gbc.writeMem(0x3d52, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa819, gbc.sp());
        EXPECT(0x3d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0048
        gbc.setState(0xa568, 0xd05a, 0x1f20, 0xf017, 0xca1c, 0x2105, 0x1, 0x1);
        gbc.writeMem(0xa568, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd05a, gbc.sp());
        EXPECT(0xa569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa568));
        // 97 0049
        gbc.setState(0xd9b, 0x5207, 0x5380, 0xf040, 0xe416, 0x2599, 0x0, 0x1);
        gbc.writeMem(0xd9b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5207, gbc.sp());
        EXPECT(0xd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 004A
        gbc.setState(0x164d, 0xe7de, 0x70e0, 0x6967, 0xc59e, 0x9ca6, 0x0, 0x0);
        gbc.writeMem(0x164d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe7de, gbc.sp());
        EXPECT(0x164e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 004C
        gbc.setState(0xdce1, 0x5625, 0x6fc0, 0xfbf8, 0xe824, 0xac5f, 0x0, 0x0);
        gbc.writeMem(0xdce1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5625, gbc.sp());
        EXPECT(0xdce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdce1));
        // 97 004D
        gbc.setState(0xaa86, 0xa00f, 0x4a60, 0xa597, 0xffdc, 0x1bb4, 0x1, 0x0);
        gbc.writeMem(0xaa86, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa00f, gbc.sp());
        EXPECT(0xaa87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaa86));
        // 97 004E
        gbc.setState(0x1c2b, 0x751a, 0x4540, 0x57e, 0x4af2, 0x6db6, 0x1, 0x1);
        gbc.writeMem(0x1c2b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x751a, gbc.sp());
        EXPECT(0x1c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 004F
        gbc.setState(0x9513, 0xda2a, 0x4610, 0xfb95, 0x21d6, 0xbd90, 0x0, 0x1);
        gbc.writeMem(0x9513, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xda2a, gbc.sp());
        EXPECT(0x9514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9513));
        // 97 0050
        gbc.setState(0x3290, 0x61c5, 0x7f40, 0xa5cc, 0xcc96, 0x6b80, 0x0, 0x0);
        gbc.writeMem(0x3290, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x61c5, gbc.sp());
        EXPECT(0x3291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0051
        gbc.setState(0x40b5, 0xefeb, 0xc970, 0xafd2, 0x1cee, 0xdd29, 0x1, 0x1);
        gbc.writeMem(0x40b5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xefeb, gbc.sp());
        EXPECT(0x40b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0052
        gbc.setState(0x241a, 0x9328, 0x88d0, 0x5b4b, 0xeb87, 0x2ee9, 0x1, 0x0);
        gbc.writeMem(0x241a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9328, gbc.sp());
        EXPECT(0x241b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0053
        gbc.setState(0xdcfe, 0xa7e1, 0xbb80, 0xc4d2, 0xa5e5, 0x509b, 0x1, 0x1);
        gbc.writeMem(0xdcfe, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa7e1, gbc.sp());
        EXPECT(0xdcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdcfe));
        // 97 0054
        gbc.setState(0x7c7c, 0x7d1f, 0x3ce0, 0x3ec1, 0xc46, 0x58b, 0x0, 0x0);
        gbc.writeMem(0x7c7c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7d1f, gbc.sp());
        EXPECT(0x7c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0055
        gbc.setState(0x8d7a, 0x1f67, 0x640, 0xa1cb, 0x3236, 0x80e5, 0x0, 0x1);
        gbc.writeMem(0x8d7a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1f67, gbc.sp());
        EXPECT(0x8d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8d7a));
        // 97 0057
        gbc.setState(0x57eb, 0x1ee8, 0x1b40, 0x6af, 0x947b, 0xf86c, 0x1, 0x1);
        gbc.writeMem(0x57eb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1ee8, gbc.sp());
        EXPECT(0x57ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0059
        gbc.setState(0x6762, 0xfc85, 0x4c80, 0x582d, 0x5cbe, 0xa74, 0x1, 0x1);
        gbc.writeMem(0x6762, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfc85, gbc.sp());
        EXPECT(0x6763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 005A
        gbc.setState(0x70e1, 0x3866, 0x6dd0, 0x2c62, 0x760d, 0xc5be, 0x1, 0x1);
        gbc.writeMem(0x70e1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3866, gbc.sp());
        EXPECT(0x70e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 005B
        gbc.setState(0xde5f, 0x6960, 0x2700, 0x8eb7, 0x777e, 0xa63a, 0x1, 0x1);
        gbc.writeMem(0xde5f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6960, gbc.sp());
        EXPECT(0xde60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xde5f));
        // 97 005C
        gbc.setState(0xc8c2, 0xbaed, 0x33f0, 0x6a54, 0xcb2d, 0x8f78, 0x0, 0x1);
        gbc.writeMem(0xc8c2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbaed, gbc.sp());
        EXPECT(0xc8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc8c2));
        // 97 005D
        gbc.setState(0xa624, 0x63cc, 0x1ba0, 0x9d20, 0x72f8, 0x9319, 0x1, 0x1);
        gbc.writeMem(0xa624, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x63cc, gbc.sp());
        EXPECT(0xa625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa624));
        // 97 005E
        gbc.setState(0x37fa, 0x6a8e, 0x99e0, 0xa082, 0x9b8, 0x534f, 0x0, 0x0);
        gbc.writeMem(0x37fa, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6a8e, gbc.sp());
        EXPECT(0x37fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 005F
        gbc.setState(0xe14c, 0x7f94, 0x91f0, 0x9961, 0x7e71, 0x8a2d, 0x0, 0x1);
        gbc.writeMem(0xe14c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7f94, gbc.sp());
        EXPECT(0xe14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe14c));
        // 97 0060
        gbc.setState(0x8b70, 0x539f, 0x46f0, 0xe01d, 0xa046, 0x7b7, 0x0, 0x0);
        gbc.writeMem(0x8b70, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x539f, gbc.sp());
        EXPECT(0x8b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8b70));
        // 97 0061
        gbc.setState(0x57ae, 0x5994, 0x9d70, 0xef7d, 0xf381, 0x7bcb, 0x1, 0x1);
        gbc.writeMem(0x57ae, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5994, gbc.sp());
        EXPECT(0x57af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0062
        gbc.setState(0x5b84, 0x8349, 0xc110, 0x6542, 0x7bbc, 0xfb10, 0x1, 0x0);
        gbc.writeMem(0x5b84, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8349, gbc.sp());
        EXPECT(0x5b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0063
        gbc.setState(0xa142, 0x99a2, 0xb8e0, 0x1ecd, 0xe12f, 0xaa84, 0x1, 0x0);
        gbc.writeMem(0xa142, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x99a2, gbc.sp());
        EXPECT(0xa143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa142));
        // 97 0064
        gbc.setState(0xd4f3, 0xfae7, 0xaa10, 0x33c6, 0x1f4, 0x3bc6, 0x0, 0x0);
        gbc.writeMem(0xd4f3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfae7, gbc.sp());
        EXPECT(0xd4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd4f3));
        // 97 0065
        gbc.setState(0xcaa4, 0x9576, 0xba90, 0xa96, 0x12da, 0x9a7c, 0x1, 0x1);
        gbc.writeMem(0xcaa4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9576, gbc.sp());
        EXPECT(0xcaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcaa4));
        // 97 0066
        gbc.setState(0xa111, 0x3512, 0xb310, 0x8123, 0x30bb, 0xe172, 0x1, 0x1);
        gbc.writeMem(0xa111, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3512, gbc.sp());
        EXPECT(0xa112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa111));
        // 97 0067
        gbc.setState(0x8117, 0x583d, 0xfb70, 0xadbd, 0xb7b8, 0x6db8, 0x1, 0x1);
        gbc.writeMem(0x8117, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x583d, gbc.sp());
        EXPECT(0x8118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8117));
        // 97 0068
        gbc.setState(0x9392, 0x67c9, 0xcf40, 0xa365, 0x31fa, 0x6f02, 0x0, 0x1);
        gbc.writeMem(0x9392, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x67c9, gbc.sp());
        EXPECT(0x9393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9392));
        // 97 006A
        gbc.setState(0xb0dc, 0x59a0, 0x7fa0, 0xa146, 0x90fa, 0x3ad6, 0x0, 0x1);
        gbc.writeMem(0xb0dc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x59a0, gbc.sp());
        EXPECT(0xb0dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb0dc));
        // 97 006B
        gbc.setState(0xd3be, 0xee4a, 0xa280, 0x9bfb, 0xc806, 0xe420, 0x1, 0x0);
        gbc.writeMem(0xd3be, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xee4a, gbc.sp());
        EXPECT(0xd3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd3be));
        // 97 006C
        gbc.setState(0x43c2, 0x6b38, 0xcd10, 0xea23, 0xe681, 0x6fad, 0x1, 0x1);
        gbc.writeMem(0x43c2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6b38, gbc.sp());
        EXPECT(0x43c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 006D
        gbc.setState(0xeca5, 0x1c8d, 0x8280, 0x3eb5, 0xc25b, 0x25d7, 0x0, 0x1);
        gbc.writeMem(0xeca5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1c8d, gbc.sp());
        EXPECT(0xeca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeca5));
        // 97 006E
        gbc.setState(0x3702, 0x4597, 0xd4d0, 0x6f71, 0x8e48, 0xd1d9, 0x1, 0x0);
        gbc.writeMem(0x3702, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4597, gbc.sp());
        EXPECT(0x3703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 006F
        gbc.setState(0x65f7, 0xb27c, 0x1520, 0x717e, 0xd1ee, 0x905d, 0x0, 0x1);
        gbc.writeMem(0x65f7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb27c, gbc.sp());
        EXPECT(0x65f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0070
        gbc.setState(0x72b6, 0x52ca, 0xd520, 0xd7f3, 0xee3a, 0x6790, 0x1, 0x1);
        gbc.writeMem(0x72b6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x52ca, gbc.sp());
        EXPECT(0x72b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0071
        gbc.setState(0xb380, 0x2f4e, 0xba0, 0x19b, 0x86e0, 0xf686, 0x1, 0x1);
        gbc.writeMem(0xb380, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2f4e, gbc.sp());
        EXPECT(0xb381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb380));
        // 97 0072
        gbc.setState(0x7892, 0xb2ae, 0xf200, 0x4fcc, 0x1316, 0x4fa7, 0x0, 0x1);
        gbc.writeMem(0x7892, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb2ae, gbc.sp());
        EXPECT(0x7893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0073
        gbc.setState(0x6457, 0xeaf, 0x9350, 0x7fdf, 0x4402, 0x5301, 0x1, 0x1);
        gbc.writeMem(0x6457, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeaf, gbc.sp());
        EXPECT(0x6458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0074
        gbc.setState(0x1614, 0x9be, 0xe960, 0xeb4d, 0x3749, 0xb746, 0x0, 0x1);
        gbc.writeMem(0x1614, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9be, gbc.sp());
        EXPECT(0x1615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0075
        gbc.setState(0x30fb, 0x1d4d, 0x43f0, 0xf6e9, 0xe6f8, 0x5f14, 0x0, 0x1);
        gbc.writeMem(0x30fb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1d4d, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0076
        gbc.setState(0xbce4, 0xdcbf, 0xc240, 0xe53f, 0x59b1, 0xa492, 0x0, 0x0);
        gbc.writeMem(0xbce4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdcbf, gbc.sp());
        EXPECT(0xbce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbce4));
        // 97 0077
        gbc.setState(0x38fe, 0xffa3, 0x15d0, 0x98c6, 0x7624, 0x8f94, 0x1, 0x1);
        gbc.writeMem(0x38fe, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xffa3, gbc.sp());
        EXPECT(0x38ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0078
        gbc.setState(0x9368, 0x8870, 0x8d50, 0x25ee, 0x952f, 0xa09f, 0x1, 0x1);
        gbc.writeMem(0x9368, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8870, gbc.sp());
        EXPECT(0x9369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9368));
        // 97 0079
        gbc.setState(0xd3f5, 0x47bb, 0xe1e0, 0xa9c6, 0xca77, 0xe55e, 0x1, 0x1);
        gbc.writeMem(0xd3f5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x47bb, gbc.sp());
        EXPECT(0xd3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd3f5));
        // 97 007A
        gbc.setState(0x7975, 0x36f5, 0xcb80, 0xb4d3, 0x9769, 0x2bb7, 0x1, 0x0);
        gbc.writeMem(0x7975, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x36f5, gbc.sp());
        EXPECT(0x7976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 007B
        gbc.setState(0x6915, 0x770d, 0x81e0, 0xbc98, 0x4fe5, 0x5bfd, 0x0, 0x0);
        gbc.writeMem(0x6915, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x770d, gbc.sp());
        EXPECT(0x6916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 007C
        gbc.setState(0x6848, 0x2fa5, 0x460, 0x1245, 0x8dd7, 0x621f, 0x0, 0x1);
        gbc.writeMem(0x6848, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2fa5, gbc.sp());
        EXPECT(0x6849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 007D
        gbc.setState(0x1f03, 0x5ae1, 0x9350, 0xb7ce, 0x2b25, 0xe6d0, 0x1, 0x0);
        gbc.writeMem(0x1f03, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5ae1, gbc.sp());
        EXPECT(0x1f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 007E
        gbc.setState(0xa501, 0x849b, 0xe90, 0x30b7, 0x3006, 0xb6c0, 0x0, 0x0);
        gbc.writeMem(0xa501, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x849b, gbc.sp());
        EXPECT(0xa502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa501));
        // 97 007F
        gbc.setState(0x4da7, 0x8556, 0x6f90, 0x5ba2, 0x11f5, 0x39a1, 0x0, 0x0);
        gbc.writeMem(0x4da7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8556, gbc.sp());
        EXPECT(0x4da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0080
        gbc.setState(0x9116, 0xf164, 0x8ae0, 0xdc4a, 0x327f, 0x9ad0, 0x0, 0x0);
        gbc.writeMem(0x9116, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf164, gbc.sp());
        EXPECT(0x9117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9116));
        // 97 0081
        gbc.setState(0x6423, 0x5409, 0xd910, 0xdaf1, 0x84d6, 0x540c, 0x0, 0x0);
        gbc.writeMem(0x6423, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5409, gbc.sp());
        EXPECT(0x6424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0082
        gbc.setState(0x1c5a, 0x4111, 0xe970, 0xa400, 0x6aa4, 0x3a11, 0x0, 0x1);
        gbc.writeMem(0x1c5a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4111, gbc.sp());
        EXPECT(0x1c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0083
        gbc.setState(0x60dc, 0x995b, 0xfc90, 0x547d, 0x8944, 0xdaf5, 0x1, 0x0);
        gbc.writeMem(0x60dc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x995b, gbc.sp());
        EXPECT(0x60dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0084
        gbc.setState(0x72c8, 0xefe2, 0x9360, 0xa337, 0xc367, 0x4693, 0x0, 0x0);
        gbc.writeMem(0x72c8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xefe2, gbc.sp());
        EXPECT(0x72c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0085
        gbc.setState(0xe5f2, 0x94a5, 0x7400, 0xb5e8, 0x4e2, 0x7d2e, 0x0, 0x0);
        gbc.writeMem(0xe5f2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x94a5, gbc.sp());
        EXPECT(0xe5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe5f2));
        // 97 0086
        gbc.setState(0xc588, 0x5a27, 0x3eb0, 0x4f70, 0x8c38, 0x23c, 0x1, 0x0);
        gbc.writeMem(0xc588, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5a27, gbc.sp());
        EXPECT(0xc589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc588));
        // 97 0087
        gbc.setState(0xc71, 0x5e35, 0x6f50, 0xc891, 0x735d, 0x3bc8, 0x1, 0x1);
        gbc.writeMem(0xc71, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5e35, gbc.sp());
        EXPECT(0xc72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0088
        gbc.setState(0x71, 0xfb8e, 0xbf0, 0xa7b9, 0xad0a, 0x5d8d, 0x0, 0x0);
        gbc.writeMem(0x71, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfb8e, gbc.sp());
        EXPECT(0x72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0089
        gbc.setState(0xe955, 0x4db2, 0xb8b0, 0x1b25, 0xdf06, 0x7c29, 0x1, 0x1);
        gbc.writeMem(0xe955, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4db2, gbc.sp());
        EXPECT(0xe956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe955));
        // 97 008A
        gbc.setState(0x6d27, 0x549, 0xbb50, 0x608f, 0x43a8, 0x90d, 0x0, 0x1);
        gbc.writeMem(0x6d27, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x549, gbc.sp());
        EXPECT(0x6d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 008B
        gbc.setState(0x5f21, 0x4c0d, 0xa6c0, 0xa918, 0xaa7a, 0x2f07, 0x1, 0x0);
        gbc.writeMem(0x5f21, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4c0d, gbc.sp());
        EXPECT(0x5f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 008C
        gbc.setState(0x546f, 0xec83, 0xcde0, 0x6932, 0x2039, 0xb119, 0x1, 0x0);
        gbc.writeMem(0x546f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xec83, gbc.sp());
        EXPECT(0x5470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 008D
        gbc.setState(0x4c91, 0xb587, 0x6d30, 0x5b63, 0xee8b, 0x6093, 0x1, 0x0);
        gbc.writeMem(0x4c91, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb587, gbc.sp());
        EXPECT(0x4c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 008E
        gbc.setState(0x1182, 0xd650, 0xd8f0, 0xeecc, 0xb71f, 0xcbd9, 0x1, 0x0);
        gbc.writeMem(0x1182, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd650, gbc.sp());
        EXPECT(0x1183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 008F
        gbc.setState(0x64a1, 0x274c, 0xd540, 0x3c65, 0x85df, 0x6eb4, 0x0, 0x1);
        gbc.writeMem(0x64a1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x274c, gbc.sp());
        EXPECT(0x64a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0091
        gbc.setState(0x7a94, 0x9f6d, 0xaaa0, 0x428, 0x4f4, 0xb682, 0x0, 0x1);
        gbc.writeMem(0x7a94, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9f6d, gbc.sp());
        EXPECT(0x7a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0093
        gbc.setState(0xc508, 0xa337, 0x10a0, 0xfc6e, 0x2b6d, 0xe9be, 0x1, 0x0);
        gbc.writeMem(0xc508, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa337, gbc.sp());
        EXPECT(0xc509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc508));
        // 97 0094
        gbc.setState(0x6c3d, 0x4712, 0xbd00, 0x648f, 0xb248, 0xe659, 0x1, 0x1);
        gbc.writeMem(0x6c3d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4712, gbc.sp());
        EXPECT(0x6c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0095
        gbc.setState(0x1d19, 0x1c6b, 0x2ef0, 0x926e, 0x2a41, 0x29d7, 0x0, 0x0);
        gbc.writeMem(0x1d19, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1c6b, gbc.sp());
        EXPECT(0x1d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0096
        gbc.setState(0x14af, 0xb03, 0x46d0, 0x5932, 0xd1af, 0x9dc0, 0x1, 0x0);
        gbc.writeMem(0x14af, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb03, gbc.sp());
        EXPECT(0x14b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0097
        gbc.setState(0x1911, 0xb7f0, 0x48d0, 0x4089, 0xa2d4, 0xa340, 0x0, 0x0);
        gbc.writeMem(0x1911, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb7f0, gbc.sp());
        EXPECT(0x1912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0098
        gbc.setState(0x62a0, 0x1886, 0xf860, 0x2271, 0xab7a, 0x197, 0x1, 0x1);
        gbc.writeMem(0x62a0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1886, gbc.sp());
        EXPECT(0x62a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0099
        gbc.setState(0x2930, 0x4293, 0xbc00, 0x3a70, 0xdbe5, 0xed83, 0x0, 0x1);
        gbc.writeMem(0x2930, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4293, gbc.sp());
        EXPECT(0x2931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 009A
        gbc.setState(0x619, 0x7d0c, 0x240, 0x17d7, 0x836f, 0xffb9, 0x1, 0x1);
        gbc.writeMem(0x619, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7d0c, gbc.sp());
        EXPECT(0x61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 009B
        gbc.setState(0xcd74, 0xd6a, 0xaf90, 0x544, 0x5b24, 0x3008, 0x0, 0x0);
        gbc.writeMem(0xcd74, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd6a, gbc.sp());
        EXPECT(0xcd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcd74));
        // 97 009C
        gbc.setState(0xa839, 0x6f20, 0x4630, 0x7659, 0x4088, 0xd110, 0x0, 0x1);
        gbc.writeMem(0xa839, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6f20, gbc.sp());
        EXPECT(0xa83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa839));
        // 97 009D
        gbc.setState(0x24bc, 0xfc8e, 0x400, 0x2da7, 0x571a, 0x4e91, 0x0, 0x0);
        gbc.writeMem(0x24bc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfc8e, gbc.sp());
        EXPECT(0x24bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 009E
        gbc.setState(0xada4, 0x8b15, 0x6e80, 0x98e4, 0x1dcc, 0x37f5, 0x1, 0x0);
        gbc.writeMem(0xada4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8b15, gbc.sp());
        EXPECT(0xada5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xada4));
        // 97 009F
        gbc.setState(0x4fd1, 0x3a91, 0xb7f0, 0x1008, 0x2f2, 0xa343, 0x0, 0x0);
        gbc.writeMem(0x4fd1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3a91, gbc.sp());
        EXPECT(0x4fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00A0
        gbc.setState(0xb73, 0x7373, 0x6460, 0x4717, 0x3245, 0xeff7, 0x0, 0x1);
        gbc.writeMem(0xb73, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7373, gbc.sp());
        EXPECT(0xb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00A1
        gbc.setState(0x3b56, 0x4617, 0xd4c0, 0x6737, 0xd46a, 0xbcc1, 0x1, 0x0);
        gbc.writeMem(0x3b56, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4617, gbc.sp());
        EXPECT(0x3b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00A2
        gbc.setState(0x6094, 0x9003, 0xdcb0, 0x4330, 0xec1a, 0xdb2c, 0x1, 0x0);
        gbc.writeMem(0x6094, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9003, gbc.sp());
        EXPECT(0x6095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00A3
        gbc.setState(0xd96a, 0x656a, 0x5c0, 0x938c, 0xe91e, 0xac7e, 0x0, 0x0);
        gbc.writeMem(0xd96a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x656a, gbc.sp());
        EXPECT(0xd96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd96a));
        // 97 00A4
        gbc.setState(0x2726, 0x7e7f, 0xa70, 0x4003, 0x79c, 0x7dc1, 0x0, 0x0);
        gbc.writeMem(0x2726, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7e7f, gbc.sp());
        EXPECT(0x2727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00A5
        gbc.setState(0x162a, 0xb6d8, 0x82b0, 0x1612, 0x25c1, 0xa5d9, 0x0, 0x0);
        gbc.writeMem(0x162a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb6d8, gbc.sp());
        EXPECT(0x162b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00A6
        gbc.setState(0x2324, 0x7eef, 0xe9a0, 0xc045, 0x5090, 0x9c83, 0x1, 0x0);
        gbc.writeMem(0x2324, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7eef, gbc.sp());
        EXPECT(0x2325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00A8
        gbc.setState(0x8d10, 0x5d15, 0xdaa0, 0xbea4, 0x5fba, 0xf487, 0x1, 0x0);
        gbc.writeMem(0x8d10, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5d15, gbc.sp());
        EXPECT(0x8d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8d10));
        // 97 00AA
        gbc.setState(0x74d6, 0x2178, 0x6dd0, 0x6cdb, 0xfa0e, 0x86d1, 0x0, 0x0);
        gbc.writeMem(0x74d6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2178, gbc.sp());
        EXPECT(0x74d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00AB
        gbc.setState(0x793a, 0xdfeb, 0x8b50, 0x53a2, 0x28cb, 0xf047, 0x0, 0x0);
        gbc.writeMem(0x793a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdfeb, gbc.sp());
        EXPECT(0x793b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00AC
        gbc.setState(0x2104, 0x36df, 0x56a0, 0x8bca, 0x4233, 0xcca4, 0x0, 0x1);
        gbc.writeMem(0x2104, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x36df, gbc.sp());
        EXPECT(0x2105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00AD
        gbc.setState(0x372f, 0xcbd1, 0x2380, 0x2db1, 0xb135, 0x51e3, 0x1, 0x0);
        gbc.writeMem(0x372f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcbd1, gbc.sp());
        EXPECT(0x3730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00AE
        gbc.setState(0x439c, 0x91b8, 0xdb70, 0x90b0, 0xd528, 0x9797, 0x1, 0x1);
        gbc.writeMem(0x439c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x91b8, gbc.sp());
        EXPECT(0x439d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00AF
        gbc.setState(0xc5ed, 0x70d2, 0xc590, 0xada6, 0x812c, 0x96da, 0x1, 0x1);
        gbc.writeMem(0xc5ed, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x70d2, gbc.sp());
        EXPECT(0xc5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc5ed));
        // 97 00B0
        gbc.setState(0xcf52, 0x10d3, 0x4f0, 0x3cef, 0xd260, 0xbafa, 0x0, 0x1);
        gbc.writeMem(0xcf52, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x10d3, gbc.sp());
        EXPECT(0xcf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcf52));
        // 97 00B1
        gbc.setState(0x17e1, 0x23ff, 0xe620, 0x1b57, 0x660e, 0x737e, 0x0, 0x0);
        gbc.writeMem(0x17e1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x23ff, gbc.sp());
        EXPECT(0x17e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00B2
        gbc.setState(0x9ada, 0xcbb2, 0xc10, 0x186a, 0x229b, 0x24c3, 0x0, 0x0);
        gbc.writeMem(0x9ada, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcbb2, gbc.sp());
        EXPECT(0x9adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9ada));
        // 97 00B3
        gbc.setState(0xcd97, 0x80f5, 0xe970, 0x15a7, 0x6b8d, 0x6e2a, 0x1, 0x1);
        gbc.writeMem(0xcd97, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x80f5, gbc.sp());
        EXPECT(0xcd98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcd97));
        // 97 00B4
        gbc.setState(0xeeeb, 0xa6a9, 0x6b10, 0xb955, 0xf1ba, 0xb964, 0x1, 0x1);
        gbc.writeMem(0xeeeb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa6a9, gbc.sp());
        EXPECT(0xeeec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeeeb));
        // 97 00B5
        gbc.setState(0x80c3, 0xa415, 0x7020, 0x18c4, 0x1c04, 0x1e89, 0x1, 0x1);
        gbc.writeMem(0x80c3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa415, gbc.sp());
        EXPECT(0x80c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x80c3));
        // 97 00B6
        gbc.setState(0xc461, 0x3d56, 0x62c0, 0xcb8, 0x5132, 0x3387, 0x1, 0x1);
        gbc.writeMem(0xc461, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3d56, gbc.sp());
        EXPECT(0xc462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc461));
        // 97 00B7
        gbc.setState(0x39f3, 0xf7f6, 0xe740, 0xa41a, 0x3c40, 0xa63c, 0x0, 0x0);
        gbc.writeMem(0x39f3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf7f6, gbc.sp());
        EXPECT(0x39f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00B8
        gbc.setState(0x9c03, 0x4a0b, 0xb60, 0x2906, 0x5558, 0xce43, 0x0, 0x1);
        gbc.writeMem(0x9c03, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4a0b, gbc.sp());
        EXPECT(0x9c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9c03));
        // 97 00B9
        gbc.setState(0x390d, 0xcd9d, 0xb830, 0xacf1, 0x2b78, 0x4b67, 0x1, 0x1);
        gbc.writeMem(0x390d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcd9d, gbc.sp());
        EXPECT(0x390e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00BA
        gbc.setState(0xdb26, 0xc221, 0xf3c0, 0xdf7b, 0xbb9f, 0xa8c0, 0x0, 0x0);
        gbc.writeMem(0xdb26, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc221, gbc.sp());
        EXPECT(0xdb27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdb26));
        // 97 00BB
        gbc.setState(0xaadd, 0x5f4f, 0x8820, 0x1cf2, 0x2072, 0xf013, 0x0, 0x1);
        gbc.writeMem(0xaadd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5f4f, gbc.sp());
        EXPECT(0xaade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaadd));
        // 97 00BC
        gbc.setState(0x205c, 0xe576, 0x3590, 0x7228, 0x2581, 0xb8b8, 0x0, 0x1);
        gbc.writeMem(0x205c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe576, gbc.sp());
        EXPECT(0x205d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00BD
        gbc.setState(0x28f4, 0x931a, 0x6850, 0x3e9b, 0xf937, 0xaa05, 0x0, 0x0);
        gbc.writeMem(0x28f4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x931a, gbc.sp());
        EXPECT(0x28f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00BE
        gbc.setState(0x6b90, 0xf586, 0xef40, 0xd093, 0x68d9, 0xdef9, 0x0, 0x0);
        gbc.writeMem(0x6b90, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf586, gbc.sp());
        EXPECT(0x6b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00BF
        gbc.setState(0x4cb, 0x78a8, 0x2c20, 0xbd45, 0x7615, 0x6faa, 0x0, 0x0);
        gbc.writeMem(0x4cb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x78a8, gbc.sp());
        EXPECT(0x4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00C0
        gbc.setState(0xd72b, 0x3af8, 0x5d30, 0x44b7, 0x1785, 0xdc51, 0x0, 0x1);
        gbc.writeMem(0xd72b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3af8, gbc.sp());
        EXPECT(0xd72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd72b));
        // 97 00C1
        gbc.setState(0x1041, 0x55c9, 0xa3e0, 0xa17c, 0xb7b9, 0x5f1f, 0x1, 0x1);
        gbc.writeMem(0x1041, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x55c9, gbc.sp());
        EXPECT(0x1042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00C2
        gbc.setState(0x81f4, 0xb487, 0x6730, 0xc69a, 0x496f, 0x61e7, 0x1, 0x0);
        gbc.writeMem(0x81f4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb487, gbc.sp());
        EXPECT(0x81f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x81f4));
        // 97 00C3
        gbc.setState(0x61f, 0xc953, 0xc600, 0x807, 0xc166, 0x9f68, 0x0, 0x1);
        gbc.writeMem(0x61f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc953, gbc.sp());
        EXPECT(0x620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00C5
        gbc.setState(0xc406, 0xabe8, 0x6850, 0x5fa9, 0x5cef, 0x9889, 0x1, 0x1);
        gbc.writeMem(0xc406, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xabe8, gbc.sp());
        EXPECT(0xc407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc406));
        // 97 00C6
        gbc.setState(0x4322, 0xdfa, 0x8f90, 0x8d6c, 0x2aee, 0xf2d9, 0x1, 0x1);
        gbc.writeMem(0x4322, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdfa, gbc.sp());
        EXPECT(0x4323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00C7
        gbc.setState(0x8c9d, 0x6ad4, 0x6a30, 0x623e, 0xf0a, 0x4d57, 0x0, 0x1);
        gbc.writeMem(0x8c9d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6ad4, gbc.sp());
        EXPECT(0x8c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8c9d));
        // 97 00C8
        gbc.setState(0xc92f, 0x52c8, 0xb510, 0xcb60, 0xb134, 0x24a, 0x0, 0x1);
        gbc.writeMem(0xc92f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x52c8, gbc.sp());
        EXPECT(0xc930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc92f));
        // 97 00C9
        gbc.setState(0xc9a2, 0xa799, 0x3ba0, 0x2956, 0x8d9e, 0xb64, 0x1, 0x1);
        gbc.writeMem(0xc9a2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa799, gbc.sp());
        EXPECT(0xc9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc9a2));
        // 97 00CA
        gbc.setState(0xaaf1, 0x7ade, 0x1520, 0x6d67, 0x6e39, 0x38e0, 0x1, 0x0);
        gbc.writeMem(0xaaf1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7ade, gbc.sp());
        EXPECT(0xaaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaaf1));
        // 97 00CB
        gbc.setState(0xcfc, 0x6f84, 0x6190, 0x37ab, 0x7edd, 0xfd49, 0x0, 0x0);
        gbc.writeMem(0xcfc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6f84, gbc.sp());
        EXPECT(0xcfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00CC
        gbc.setState(0x39dd, 0x3f4, 0x1e70, 0x1b4c, 0x123a, 0x9978, 0x0, 0x0);
        gbc.writeMem(0x39dd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3f4, gbc.sp());
        EXPECT(0x39de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00CD
        gbc.setState(0x9d63, 0x4d4a, 0xe0e0, 0xcc76, 0x6518, 0x25eb, 0x1, 0x0);
        gbc.writeMem(0x9d63, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4d4a, gbc.sp());
        EXPECT(0x9d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9d63));
        // 97 00CE
        gbc.setState(0x6a2e, 0x76d9, 0x61b0, 0x7ce9, 0x796, 0x4c1a, 0x1, 0x1);
        gbc.writeMem(0x6a2e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x76d9, gbc.sp());
        EXPECT(0x6a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00CF
        gbc.setState(0xa0cd, 0x696e, 0xada0, 0x68ec, 0x37cb, 0xd20f, 0x1, 0x0);
        gbc.writeMem(0xa0cd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x696e, gbc.sp());
        EXPECT(0xa0ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa0cd));
        // 97 00D0
        gbc.setState(0x3671, 0x7bc7, 0xaf0, 0x3bd5, 0xb09, 0x92a2, 0x0, 0x0);
        gbc.writeMem(0x3671, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7bc7, gbc.sp());
        EXPECT(0x3672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00D1
        gbc.setState(0xd740, 0xb8b5, 0x5f00, 0x5e11, 0x3b64, 0x26b, 0x0, 0x0);
        gbc.writeMem(0xd740, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb8b5, gbc.sp());
        EXPECT(0xd741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd740));
        // 97 00D2
        gbc.setState(0xe580, 0x145b, 0xf9e0, 0xf836, 0x2dcf, 0xddf5, 0x1, 0x0);
        gbc.writeMem(0xe580, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x145b, gbc.sp());
        EXPECT(0xe581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe580));
        // 97 00D3
        gbc.setState(0x30d8, 0xda45, 0x3cc0, 0x2cec, 0x7f03, 0x45f8, 0x0, 0x1);
        gbc.writeMem(0x30d8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xda45, gbc.sp());
        EXPECT(0x30d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00D4
        gbc.setState(0xb3d3, 0xab7e, 0x1c0, 0x3638, 0xd44b, 0xb968, 0x0, 0x0);
        gbc.writeMem(0xb3d3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xab7e, gbc.sp());
        EXPECT(0xb3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb3d3));
        // 97 00D5
        gbc.setState(0x2547, 0x2aa9, 0x30f0, 0x4b6e, 0xdb76, 0xc41e, 0x0, 0x0);
        gbc.writeMem(0x2547, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2aa9, gbc.sp());
        EXPECT(0x2548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00D6
        gbc.setState(0x691, 0x1abd, 0xcf90, 0x6ca, 0x8f9, 0xd7d1, 0x1, 0x0);
        gbc.writeMem(0x691, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1abd, gbc.sp());
        EXPECT(0x692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00D7
        gbc.setState(0x953, 0x6542, 0x3fa0, 0x408b, 0x737d, 0x3d9b, 0x1, 0x1);
        gbc.writeMem(0x953, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6542, gbc.sp());
        EXPECT(0x954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00D8
        gbc.setState(0x6a68, 0xda0d, 0x54a0, 0xd5ea, 0xd27a, 0xc9e, 0x1, 0x1);
        gbc.writeMem(0x6a68, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xda0d, gbc.sp());
        EXPECT(0x6a69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00D9
        gbc.setState(0x7053, 0x40c0, 0x3870, 0xd66d, 0x8ca4, 0xaf3e, 0x1, 0x0);
        gbc.writeMem(0x7053, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x40c0, gbc.sp());
        EXPECT(0x7054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00DA
        gbc.setState(0xe7c, 0x358f, 0xc2f0, 0xf879, 0x75a4, 0x852e, 0x1, 0x1);
        gbc.writeMem(0xe7c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x358f, gbc.sp());
        EXPECT(0xe7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00DB
        gbc.setState(0x20fb, 0xeabd, 0x8c70, 0x75fa, 0x85ef, 0xfa3f, 0x1, 0x0);
        gbc.writeMem(0x20fb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xeabd, gbc.sp());
        EXPECT(0x20fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00DC
        gbc.setState(0x8344, 0xcc90, 0xbcb0, 0xb06d, 0xdb1, 0x9fab, 0x0, 0x1);
        gbc.writeMem(0x8344, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcc90, gbc.sp());
        EXPECT(0x8345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8344));
        // 97 00DD
        gbc.setState(0x70de, 0xeb9e, 0xeae0, 0x69fb, 0x355b, 0xbc6a, 0x0, 0x0);
        gbc.writeMem(0x70de, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xeb9e, gbc.sp());
        EXPECT(0x70df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00DE
        gbc.setState(0x938a, 0x5e4d, 0x7c0, 0xffa8, 0x5714, 0x3286, 0x0, 0x1);
        gbc.writeMem(0x938a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5e4d, gbc.sp());
        EXPECT(0x938b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x938a));
        // 97 00DF
        gbc.setState(0xc240, 0xe0c, 0x3f0, 0x23a7, 0x8a03, 0xddcc, 0x0, 0x1);
        gbc.writeMem(0xc240, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe0c, gbc.sp());
        EXPECT(0xc241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc240));
        // 97 00E0
        gbc.setState(0xaba9, 0xb3dc, 0x37a0, 0x13a7, 0xcf79, 0x6fe2, 0x1, 0x0);
        gbc.writeMem(0xaba9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb3dc, gbc.sp());
        EXPECT(0xabaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaba9));
        // 97 00E1
        gbc.setState(0x97cc, 0xfecc, 0x4220, 0x2dc6, 0xf1ff, 0x57b0, 0x1, 0x0);
        gbc.writeMem(0x97cc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfecc, gbc.sp());
        EXPECT(0x97cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x97cc));
        // 97 00E2
        gbc.setState(0x1cf3, 0x2004, 0x33d0, 0xfe02, 0x9191, 0x61af, 0x0, 0x1);
        gbc.writeMem(0x1cf3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2004, gbc.sp());
        EXPECT(0x1cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00E3
        gbc.setState(0x6d00, 0xdb35, 0x49d0, 0x9576, 0x7714, 0x4166, 0x0, 0x1);
        gbc.writeMem(0x6d00, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdb35, gbc.sp());
        EXPECT(0x6d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00E4
        gbc.setState(0xc8b5, 0x5fab, 0x8ff0, 0xd765, 0xf953, 0xbd42, 0x1, 0x0);
        gbc.writeMem(0xc8b5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5fab, gbc.sp());
        EXPECT(0xc8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc8b5));
        // 97 00E5
        gbc.setState(0x9c36, 0xc6f7, 0xafa0, 0xbc93, 0x4c4, 0x583b, 0x1, 0x1);
        gbc.writeMem(0x9c36, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc6f7, gbc.sp());
        EXPECT(0x9c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9c36));
        // 97 00E6
        gbc.setState(0xdd6b, 0xf570, 0x1140, 0x1d30, 0x14f9, 0x156a, 0x1, 0x0);
        gbc.writeMem(0xdd6b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf570, gbc.sp());
        EXPECT(0xdd6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdd6b));
        // 97 00E7
        gbc.setState(0xed9e, 0xaf91, 0x31f0, 0x588a, 0x430, 0x45f2, 0x0, 0x0);
        gbc.writeMem(0xed9e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xaf91, gbc.sp());
        EXPECT(0xed9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xed9e));
        // 97 00E8
        gbc.setState(0xc2ca, 0x24fb, 0x75b0, 0x8b36, 0x2f2b, 0x283e, 0x0, 0x1);
        gbc.writeMem(0xc2ca, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x24fb, gbc.sp());
        EXPECT(0xc2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc2ca));
        // 97 00E9
        gbc.setState(0x918c, 0xef0e, 0x8400, 0x771e, 0x425a, 0x9afa, 0x1, 0x0);
        gbc.writeMem(0x918c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xef0e, gbc.sp());
        EXPECT(0x918d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x918c));
        // 97 00EA
        gbc.setState(0x199, 0x7b68, 0xbf70, 0xe381, 0x94d4, 0xb0a, 0x0, 0x1);
        gbc.writeMem(0x199, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7b68, gbc.sp());
        EXPECT(0x19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00EB
        gbc.setState(0x5071, 0x2cce, 0x62e0, 0xa8b2, 0xffae, 0x90ae, 0x0, 0x0);
        gbc.writeMem(0x5071, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2cce, gbc.sp());
        EXPECT(0x5072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00EC
        gbc.setState(0x9f24, 0x779a, 0xa300, 0xe1d0, 0x4743, 0x7ee1, 0x0, 0x0);
        gbc.writeMem(0x9f24, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x779a, gbc.sp());
        EXPECT(0x9f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9f24));
        // 97 00ED
        gbc.setState(0xd10e, 0x7adf, 0xf780, 0x38ac, 0xcb58, 0x1e2, 0x1, 0x1);
        gbc.writeMem(0xd10e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7adf, gbc.sp());
        EXPECT(0xd10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd10e));
        // 97 00EE
        gbc.setState(0x5782, 0xb7cd, 0x690, 0x5877, 0x83a1, 0xf917, 0x1, 0x1);
        gbc.writeMem(0x5782, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb7cd, gbc.sp());
        EXPECT(0x5783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00F0
        gbc.setState(0x438e, 0xb93f, 0xaca0, 0x3dc0, 0x44a3, 0xa377, 0x1, 0x1);
        gbc.writeMem(0x438e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb93f, gbc.sp());
        EXPECT(0x438f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00F1
        gbc.setState(0x4fee, 0x2900, 0x1410, 0x9564, 0xb48f, 0xb77e, 0x0, 0x0);
        gbc.writeMem(0x4fee, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2900, gbc.sp());
        EXPECT(0x4fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00F2
        gbc.setState(0xc51f, 0x49a5, 0xee80, 0xc9ca, 0x335d, 0x4d37, 0x1, 0x0);
        gbc.writeMem(0xc51f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x49a5, gbc.sp());
        EXPECT(0xc520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc51f));
        // 97 00F3
        gbc.setState(0x92cc, 0xbbda, 0x540, 0xe91a, 0x3ee8, 0xf8f0, 0x1, 0x1);
        gbc.writeMem(0x92cc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbbda, gbc.sp());
        EXPECT(0x92cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x92cc));
        // 97 00F4
        gbc.setState(0x50dd, 0x8528, 0x3c80, 0xdc7, 0x30ce, 0x9007, 0x1, 0x0);
        gbc.writeMem(0x50dd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8528, gbc.sp());
        EXPECT(0x50de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00F5
        gbc.setState(0xe098, 0x7eb0, 0x400, 0x782d, 0xe7e2, 0x62f2, 0x1, 0x0);
        gbc.writeMem(0xe098, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7eb0, gbc.sp());
        EXPECT(0xe099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe098));
        // 97 00F6
        gbc.setState(0xe3d3, 0x326b, 0x4c40, 0xb586, 0x2078, 0xd465, 0x1, 0x1);
        gbc.writeMem(0xe3d3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x326b, gbc.sp());
        EXPECT(0xe3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe3d3));
        // 97 00F7
        gbc.setState(0xd8ab, 0x7dfa, 0xfd10, 0xe032, 0x23be, 0xd5e5, 0x1, 0x1);
        gbc.writeMem(0xd8ab, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7dfa, gbc.sp());
        EXPECT(0xd8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd8ab));
        // 97 00F8
        gbc.setState(0xda93, 0xe04, 0x8040, 0xd0f7, 0x205e, 0xc684, 0x1, 0x1);
        gbc.writeMem(0xda93, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe04, gbc.sp());
        EXPECT(0xda94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xda93));
        // 97 00FA
        gbc.setState(0x2004, 0xf210, 0xa9f0, 0xe5c7, 0xd87d, 0xeff7, 0x1, 0x0);
        gbc.writeMem(0x2004, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf210, gbc.sp());
        EXPECT(0x2005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00FB
        gbc.setState(0xdc38, 0x2e3c, 0x8150, 0xdb87, 0x73b0, 0x73d9, 0x0, 0x0);
        gbc.writeMem(0xdc38, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2e3c, gbc.sp());
        EXPECT(0xdc39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdc38));
        // 97 00FC
        gbc.setState(0xaf8d, 0xd217, 0x7960, 0xc6fb, 0xbcf1, 0x3fdd, 0x0, 0x1);
        gbc.writeMem(0xaf8d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd217, gbc.sp());
        EXPECT(0xaf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaf8d));
        // 97 00FD
        gbc.setState(0x4ade, 0xbf10, 0x8e90, 0x74be, 0xe9a9, 0x4959, 0x1, 0x0);
        gbc.writeMem(0x4ade, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbf10, gbc.sp());
        EXPECT(0x4adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 00FE
        gbc.setState(0x80e0, 0x237b, 0x2d60, 0x911d, 0x8a9c, 0x9092, 0x0, 0x0);
        gbc.writeMem(0x80e0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x237b, gbc.sp());
        EXPECT(0x80e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x80e0));
        // 97 00FF
        gbc.setState(0x5daf, 0xc03e, 0x5b0, 0x926e, 0xea9f, 0x1db4, 0x0, 0x0);
        gbc.writeMem(0x5daf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc03e, gbc.sp());
        EXPECT(0x5db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0101
        gbc.setState(0xa9b5, 0xb0ea, 0x44a0, 0xdd8c, 0x4392, 0xdcc6, 0x1, 0x1);
        gbc.writeMem(0xa9b5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb0ea, gbc.sp());
        EXPECT(0xa9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa9b5));
        // 97 0102
        gbc.setState(0xed28, 0x3634, 0x9fa0, 0xd966, 0x5978, 0x5891, 0x0, 0x1);
        gbc.writeMem(0xed28, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3634, gbc.sp());
        EXPECT(0xed29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xed28));
        // 97 0103
        gbc.setState(0xdc64, 0x1532, 0x1430, 0x52a1, 0x2507, 0x6499, 0x1, 0x1);
        gbc.writeMem(0xdc64, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1532, gbc.sp());
        EXPECT(0xdc65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdc64));
        // 97 0104
        gbc.setState(0xc559, 0xf039, 0x7470, 0x77c6, 0x203f, 0x9b08, 0x0, 0x1);
        gbc.writeMem(0xc559, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf039, gbc.sp());
        EXPECT(0xc55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc559));
        // 97 0105
        gbc.setState(0x55f6, 0xa074, 0x6b30, 0x27f7, 0xbee, 0x2cd6, 0x1, 0x0);
        gbc.writeMem(0x55f6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa074, gbc.sp());
        EXPECT(0x55f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0106
        gbc.setState(0xe9de, 0xa1a5, 0xee40, 0x9f83, 0x5a8, 0xdac8, 0x1, 0x0);
        gbc.writeMem(0xe9de, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa1a5, gbc.sp());
        EXPECT(0xe9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe9de));
        // 97 0107
        gbc.setState(0xebe4, 0xa66c, 0xb220, 0x1cdd, 0x32cd, 0xe046, 0x0, 0x1);
        gbc.writeMem(0xebe4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa66c, gbc.sp());
        EXPECT(0xebe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xebe4));
        // 97 0108
        gbc.setState(0x8cae, 0x5f14, 0x76e0, 0xd468, 0xbc50, 0x5481, 0x1, 0x0);
        gbc.writeMem(0x8cae, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5f14, gbc.sp());
        EXPECT(0x8caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8cae));
        // 97 0109
        gbc.setState(0x222a, 0x1dca, 0x8570, 0xeb1c, 0x5328, 0x9aa9, 0x0, 0x1);
        gbc.writeMem(0x222a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1dca, gbc.sp());
        EXPECT(0x222b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 010A
        gbc.setState(0xac28, 0x6ae9, 0xa640, 0x48f, 0x9548, 0xe87f, 0x0, 0x0);
        gbc.writeMem(0xac28, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6ae9, gbc.sp());
        EXPECT(0xac29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xac28));
        // 97 010B
        gbc.setState(0x8d11, 0xca93, 0xf730, 0x8a0c, 0xd6dd, 0x6b3d, 0x0, 0x0);
        gbc.writeMem(0x8d11, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xca93, gbc.sp());
        EXPECT(0x8d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8d11));
        // 97 010C
        gbc.setState(0xde02, 0xd684, 0x5240, 0x98a2, 0xb465, 0x208c, 0x1, 0x0);
        gbc.writeMem(0xde02, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd684, gbc.sp());
        EXPECT(0xde03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xde02));
        // 97 010D
        gbc.setState(0x8754, 0x4f26, 0xb080, 0xe666, 0x6b7, 0x9d75, 0x1, 0x0);
        gbc.writeMem(0x8754, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4f26, gbc.sp());
        EXPECT(0x8755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8754));
        // 97 010E
        gbc.setState(0x277b, 0xf4eb, 0x3fc0, 0xed18, 0x43c7, 0xab47, 0x0, 0x0);
        gbc.writeMem(0x277b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf4eb, gbc.sp());
        EXPECT(0x277c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 010F
        gbc.setState(0x49af, 0xfda2, 0xc310, 0xe0d5, 0x6c98, 0x209d, 0x0, 0x1);
        gbc.writeMem(0x49af, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfda2, gbc.sp());
        EXPECT(0x49b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0110
        gbc.setState(0xd034, 0x7553, 0x4850, 0x53e0, 0x6ab1, 0xd8e, 0x0, 0x1);
        gbc.writeMem(0xd034, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7553, gbc.sp());
        EXPECT(0xd035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd034));
        // 97 0111
        gbc.setState(0x3ca2, 0xf82f, 0xc2d0, 0x9cfb, 0x9ccf, 0x5bf9, 0x0, 0x0);
        gbc.writeMem(0x3ca2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf82f, gbc.sp());
        EXPECT(0x3ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0112
        gbc.setState(0x21d2, 0x9133, 0x3460, 0xadea, 0x8fdb, 0x1f36, 0x0, 0x0);
        gbc.writeMem(0x21d2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9133, gbc.sp());
        EXPECT(0x21d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0113
        gbc.setState(0x1087, 0xdb75, 0x3250, 0x47ca, 0xf2b2, 0x6c48, 0x0, 0x1);
        gbc.writeMem(0x1087, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdb75, gbc.sp());
        EXPECT(0x1088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0114
        gbc.setState(0xb858, 0xbd15, 0xd600, 0x598a, 0x8847, 0x2f45, 0x0, 0x1);
        gbc.writeMem(0xb858, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbd15, gbc.sp());
        EXPECT(0xb859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb858));
        // 97 0115
        gbc.setState(0xcfbd, 0x45b6, 0x380, 0xc4a3, 0x1062, 0xd97c, 0x1, 0x1);
        gbc.writeMem(0xcfbd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x45b6, gbc.sp());
        EXPECT(0xcfbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcfbd));
        // 97 0116
        gbc.setState(0x273b, 0x8a5c, 0x8170, 0x451, 0xea78, 0x994, 0x1, 0x1);
        gbc.writeMem(0x273b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8a5c, gbc.sp());
        EXPECT(0x273c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0117
        gbc.setState(0xaa10, 0x3929, 0x1110, 0xf625, 0x7638, 0xae75, 0x0, 0x0);
        gbc.writeMem(0xaa10, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3929, gbc.sp());
        EXPECT(0xaa11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaa10));
        // 97 0119
        gbc.setState(0xdfb1, 0x25e8, 0x6e00, 0x538e, 0x5b53, 0x9326, 0x1, 0x0);
        gbc.writeMem(0xdfb1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x25e8, gbc.sp());
        EXPECT(0xdfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdfb1));
        // 97 011A
        gbc.setState(0x703c, 0x2c01, 0x550, 0x206b, 0x5b61, 0x4ba7, 0x1, 0x1);
        gbc.writeMem(0x703c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2c01, gbc.sp());
        EXPECT(0x703d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 011B
        gbc.setState(0x830f, 0xc790, 0x82c0, 0x2d43, 0xd0e9, 0x84c3, 0x0, 0x0);
        gbc.writeMem(0x830f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc790, gbc.sp());
        EXPECT(0x8310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x830f));
        // 97 011C
        gbc.setState(0x5fcf, 0xd4d4, 0x5770, 0xcfef, 0x96c6, 0x80b2, 0x0, 0x1);
        gbc.writeMem(0x5fcf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd4d4, gbc.sp());
        EXPECT(0x5fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 011D
        gbc.setState(0x39b0, 0x9bb4, 0x3b80, 0x1013, 0xf2d7, 0x8b26, 0x0, 0x0);
        gbc.writeMem(0x39b0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9bb4, gbc.sp());
        EXPECT(0x39b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 011E
        gbc.setState(0x3c56, 0x6961, 0x18b0, 0x8dbf, 0x91a9, 0x3397, 0x0, 0x1);
        gbc.writeMem(0x3c56, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6961, gbc.sp());
        EXPECT(0x3c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 011F
        gbc.setState(0xd6ce, 0x1db0, 0x7bd0, 0x98ba, 0xd5c7, 0xf105, 0x0, 0x0);
        gbc.writeMem(0xd6ce, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1db0, gbc.sp());
        EXPECT(0xd6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd6ce));
        // 97 0120
        gbc.setState(0xc61, 0x14d7, 0xb0a0, 0xc5fa, 0xbfb1, 0x4cd9, 0x1, 0x0);
        gbc.writeMem(0xc61, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x14d7, gbc.sp());
        EXPECT(0xc62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0121
        gbc.setState(0x2b13, 0x872e, 0x5ef0, 0x7976, 0x5f7d, 0xa741, 0x0, 0x1);
        gbc.writeMem(0x2b13, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x872e, gbc.sp());
        EXPECT(0x2b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0122
        gbc.setState(0x69b2, 0x1e19, 0x9920, 0xb037, 0x6420, 0x5cb5, 0x1, 0x0);
        gbc.writeMem(0x69b2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1e19, gbc.sp());
        EXPECT(0x69b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0123
        gbc.setState(0x87ce, 0xcb76, 0x6870, 0x1af1, 0xee29, 0x6e96, 0x0, 0x0);
        gbc.writeMem(0x87ce, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcb76, gbc.sp());
        EXPECT(0x87cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x87ce));
        // 97 0124
        gbc.setState(0xb7ef, 0x1d4d, 0xd8a0, 0xacb1, 0x6089, 0x322, 0x0, 0x1);
        gbc.writeMem(0xb7ef, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1d4d, gbc.sp());
        EXPECT(0xb7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb7ef));
        // 97 0125
        gbc.setState(0x3aa8, 0xd295, 0xf8c0, 0x979, 0xda72, 0x2125, 0x1, 0x0);
        gbc.writeMem(0x3aa8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd295, gbc.sp());
        EXPECT(0x3aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0126
        gbc.setState(0xa43, 0x5424, 0xbe90, 0x6771, 0xf1ca, 0xbf98, 0x0, 0x0);
        gbc.writeMem(0xa43, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5424, gbc.sp());
        EXPECT(0xa44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0127
        gbc.setState(0xd902, 0xf702, 0xd300, 0xd5bd, 0xf6e, 0x2517, 0x0, 0x1);
        gbc.writeMem(0xd902, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf702, gbc.sp());
        EXPECT(0xd903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd902));
        // 97 0128
        gbc.setState(0xde51, 0xa9fd, 0xf610, 0x2f0b, 0x47ee, 0x6cd8, 0x0, 0x1);
        gbc.writeMem(0xde51, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa9fd, gbc.sp());
        EXPECT(0xde52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xde51));
        // 97 0129
        gbc.setState(0xc6f, 0x83f, 0x6770, 0xbc56, 0xfcfb, 0x65f4, 0x1, 0x1);
        gbc.writeMem(0xc6f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x83f, gbc.sp());
        EXPECT(0xc70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 012A
        gbc.setState(0xdcf, 0xcbbd, 0x8270, 0xad47, 0xff65, 0xcb3f, 0x1, 0x0);
        gbc.writeMem(0xdcf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcbbd, gbc.sp());
        EXPECT(0xdd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 012B
        gbc.setState(0x2c5a, 0x4a7d, 0xf330, 0x680b, 0xf05e, 0xe059, 0x0, 0x0);
        gbc.writeMem(0x2c5a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4a7d, gbc.sp());
        EXPECT(0x2c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 012C
        gbc.setState(0xa3c3, 0xca86, 0x8de0, 0x743f, 0x5276, 0x1264, 0x0, 0x0);
        gbc.writeMem(0xa3c3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xca86, gbc.sp());
        EXPECT(0xa3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa3c3));
        // 97 012D
        gbc.setState(0xe9ac, 0x67a4, 0xec90, 0x3969, 0xbf28, 0xe4f, 0x1, 0x1);
        gbc.writeMem(0xe9ac, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x67a4, gbc.sp());
        EXPECT(0xe9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe9ac));
        // 97 012E
        gbc.setState(0x75c1, 0xe1c7, 0x18c0, 0xe815, 0x7e61, 0x1f69, 0x0, 0x1);
        gbc.writeMem(0x75c1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe1c7, gbc.sp());
        EXPECT(0x75c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 012F
        gbc.setState(0xa3fa, 0xd41a, 0xa50, 0xf4f4, 0x2440, 0xb896, 0x0, 0x1);
        gbc.writeMem(0xa3fa, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd41a, gbc.sp());
        EXPECT(0xa3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa3fa));
        // 97 0130
        gbc.setState(0xbead, 0xb780, 0xc2c0, 0xf43, 0x4472, 0x77d8, 0x1, 0x1);
        gbc.writeMem(0xbead, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb780, gbc.sp());
        EXPECT(0xbeae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbead));
        // 97 0132
        gbc.setState(0xdf0c, 0xedde, 0x7ee0, 0xfa7d, 0x75c4, 0xd10d, 0x1, 0x1);
        gbc.writeMem(0xdf0c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xedde, gbc.sp());
        EXPECT(0xdf0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdf0c));
        // 97 0133
        gbc.setState(0x90b5, 0x1d95, 0x2c00, 0x2a56, 0x740c, 0x24d6, 0x1, 0x0);
        gbc.writeMem(0x90b5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1d95, gbc.sp());
        EXPECT(0x90b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x90b5));
        // 97 0134
        gbc.setState(0xeda5, 0xf823, 0x5fc0, 0x96dd, 0x3314, 0x6574, 0x1, 0x0);
        gbc.writeMem(0xeda5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf823, gbc.sp());
        EXPECT(0xeda6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeda5));
        // 97 0135
        gbc.setState(0xd289, 0xffee, 0xb640, 0xeb60, 0x2f1d, 0xadb8, 0x1, 0x1);
        gbc.writeMem(0xd289, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xffee, gbc.sp());
        EXPECT(0xd28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd289));
        // 97 0136
        gbc.setState(0x6be6, 0x35b1, 0xd720, 0x6d31, 0x83ba, 0x38d4, 0x1, 0x0);
        gbc.writeMem(0x6be6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x35b1, gbc.sp());
        EXPECT(0x6be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0137
        gbc.setState(0xbe7a, 0x7df6, 0xe00, 0xe1da, 0x9743, 0x5f7b, 0x1, 0x1);
        gbc.writeMem(0xbe7a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7df6, gbc.sp());
        EXPECT(0xbe7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbe7a));
        // 97 0138
        gbc.setState(0xe7f7, 0xd5bf, 0xd100, 0x2f7d, 0xf6, 0xdb00, 0x1, 0x0);
        gbc.writeMem(0xe7f7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd5bf, gbc.sp());
        EXPECT(0xe7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe7f7));
        // 97 0139
        gbc.setState(0x9b84, 0xf935, 0x3e10, 0xb16e, 0x7292, 0xc01e, 0x0, 0x1);
        gbc.writeMem(0x9b84, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf935, gbc.sp());
        EXPECT(0x9b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9b84));
        // 97 013A
        gbc.setState(0x4e4b, 0xe785, 0x8110, 0x4f2a, 0xc728, 0x3bb7, 0x0, 0x0);
        gbc.writeMem(0x4e4b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe785, gbc.sp());
        EXPECT(0x4e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 013B
        gbc.setState(0xb36b, 0x4ccd, 0x41e0, 0xf452, 0xa5ae, 0x69e9, 0x1, 0x1);
        gbc.writeMem(0xb36b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4ccd, gbc.sp());
        EXPECT(0xb36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb36b));
        // 97 013C
        gbc.setState(0x832e, 0x4b20, 0xd560, 0xae97, 0xeed, 0xcdfc, 0x0, 0x0);
        gbc.writeMem(0x832e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4b20, gbc.sp());
        EXPECT(0x832f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x832e));
        // 97 013D
        gbc.setState(0x3f7b, 0x84d3, 0xd2b0, 0x3bc2, 0x1981, 0xf33d, 0x0, 0x0);
        gbc.writeMem(0x3f7b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x84d3, gbc.sp());
        EXPECT(0x3f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 013E
        gbc.setState(0x88a6, 0xfd9c, 0xe610, 0x11c8, 0x1d6e, 0x4e5f, 0x1, 0x0);
        gbc.writeMem(0x88a6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfd9c, gbc.sp());
        EXPECT(0x88a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x88a6));
        // 97 013F
        gbc.setState(0x1e05, 0xb996, 0x4600, 0x29f9, 0x766f, 0xb4cf, 0x1, 0x1);
        gbc.writeMem(0x1e05, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb996, gbc.sp());
        EXPECT(0x1e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0140
        gbc.setState(0xe125, 0x6138, 0xa550, 0xdfb1, 0x15ba, 0x3c97, 0x0, 0x0);
        gbc.writeMem(0xe125, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6138, gbc.sp());
        EXPECT(0xe126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe125));
        // 97 0141
        gbc.setState(0x2ff6, 0xff4a, 0x6ab0, 0xaf16, 0xce12, 0x2bef, 0x0, 0x0);
        gbc.writeMem(0x2ff6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xff4a, gbc.sp());
        EXPECT(0x2ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0142
        gbc.setState(0x7afa, 0x66c5, 0x4760, 0xa96e, 0x50af, 0x97cb, 0x1, 0x0);
        gbc.writeMem(0x7afa, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x66c5, gbc.sp());
        EXPECT(0x7afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0143
        gbc.setState(0x8511, 0xa3a1, 0x6af0, 0x228d, 0x9a06, 0x589, 0x0, 0x1);
        gbc.writeMem(0x8511, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa3a1, gbc.sp());
        EXPECT(0x8512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8511));
        // 97 0144
        gbc.setState(0xcd00, 0xc, 0x2ef0, 0x8ade, 0xfe77, 0xbd7c, 0x0, 0x0);
        gbc.writeMem(0xcd00, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc, gbc.sp());
        EXPECT(0xcd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcd00));
        // 97 0145
        gbc.setState(0x4b45, 0x6f80, 0xb500, 0xd581, 0xfba8, 0x978d, 0x1, 0x0);
        gbc.writeMem(0x4b45, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6f80, gbc.sp());
        EXPECT(0x4b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0146
        gbc.setState(0x5805, 0x86b4, 0x110, 0xf8a5, 0xb5e7, 0xa2aa, 0x0, 0x1);
        gbc.writeMem(0x5805, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x86b4, gbc.sp());
        EXPECT(0x5806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0147
        gbc.setState(0x9839, 0xa28b, 0xeb90, 0xdb9e, 0x5971, 0xb1f9, 0x1, 0x0);
        gbc.writeMem(0x9839, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa28b, gbc.sp());
        EXPECT(0x983a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9839));
        // 97 0148
        gbc.setState(0x9424, 0xaee1, 0xbf90, 0xc148, 0xebaf, 0xf136, 0x0, 0x1);
        gbc.writeMem(0x9424, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaee1, gbc.sp());
        EXPECT(0x9425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9424));
        // 97 0149
        gbc.setState(0x6e83, 0x4f11, 0xcf10, 0xa0d3, 0x1c10, 0xf41a, 0x0, 0x1);
        gbc.writeMem(0x6e83, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4f11, gbc.sp());
        EXPECT(0x6e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 014B
        gbc.setState(0xe2d4, 0xd5bd, 0x46b0, 0x1b53, 0xda05, 0xaec2, 0x0, 0x1);
        gbc.writeMem(0xe2d4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd5bd, gbc.sp());
        EXPECT(0xe2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe2d4));
        // 97 014C
        gbc.setState(0x9981, 0x98ec, 0xc270, 0x5a39, 0xe110, 0x83a1, 0x0, 0x1);
        gbc.writeMem(0x9981, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x98ec, gbc.sp());
        EXPECT(0x9982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9981));
        // 97 014D
        gbc.setState(0x52a7, 0x1c25, 0xea40, 0x60a5, 0xca26, 0x12b4, 0x1, 0x1);
        gbc.writeMem(0x52a7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1c25, gbc.sp());
        EXPECT(0x52a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 014F
        gbc.setState(0xb04, 0x5567, 0x1a50, 0x2df8, 0xa929, 0xa937, 0x0, 0x0);
        gbc.writeMem(0xb04, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5567, gbc.sp());
        EXPECT(0xb05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0150
        gbc.setState(0x3804, 0xe9fb, 0x72a0, 0x95f8, 0x9ac3, 0x2eac, 0x1, 0x0);
        gbc.writeMem(0x3804, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe9fb, gbc.sp());
        EXPECT(0x3805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0151
        gbc.setState(0x8a6f, 0xd9bf, 0x31c0, 0xa9f7, 0xcd72, 0x963b, 0x0, 0x1);
        gbc.writeMem(0x8a6f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd9bf, gbc.sp());
        EXPECT(0x8a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8a6f));
        // 97 0152
        gbc.setState(0x9938, 0x2a86, 0x1b10, 0xf6da, 0xbb8f, 0xcbb9, 0x0, 0x1);
        gbc.writeMem(0x9938, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2a86, gbc.sp());
        EXPECT(0x9939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9938));
        // 97 0153
        gbc.setState(0x5504, 0xcafc, 0xa120, 0x3ad0, 0xcafe, 0x9ea2, 0x1, 0x0);
        gbc.writeMem(0x5504, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcafc, gbc.sp());
        EXPECT(0x5505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0154
        gbc.setState(0x88b8, 0x10e9, 0x9f40, 0x92db, 0xb3f7, 0x3236, 0x0, 0x1);
        gbc.writeMem(0x88b8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x10e9, gbc.sp());
        EXPECT(0x88b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x88b8));
        // 97 0155
        gbc.setState(0x27bd, 0x91cd, 0xc290, 0x4519, 0x46df, 0xcc8, 0x0, 0x0);
        gbc.writeMem(0x27bd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x91cd, gbc.sp());
        EXPECT(0x27be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0156
        gbc.setState(0xed42, 0x4092, 0x1a40, 0xc1aa, 0xb97c, 0x9574, 0x0, 0x1);
        gbc.writeMem(0xed42, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4092, gbc.sp());
        EXPECT(0xed43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xed42));
        // 97 0157
        gbc.setState(0x9c1b, 0x2ce8, 0x2810, 0xb985, 0x4c2d, 0xba47, 0x1, 0x0);
        gbc.writeMem(0x9c1b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2ce8, gbc.sp());
        EXPECT(0x9c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9c1b));
        // 97 0158
        gbc.setState(0xce81, 0xfcc8, 0x1ff0, 0x7fa3, 0x8ffc, 0xf19, 0x1, 0x1);
        gbc.writeMem(0xce81, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfcc8, gbc.sp());
        EXPECT(0xce82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xce81));
        // 97 0159
        gbc.setState(0x6398, 0x3358, 0xa1d0, 0xd5d3, 0x1457, 0x86d0, 0x0, 0x0);
        gbc.writeMem(0x6398, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3358, gbc.sp());
        EXPECT(0x6399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 015A
        gbc.setState(0x5095, 0x2ec6, 0x75d0, 0x5475, 0xa31d, 0xc21a, 0x1, 0x1);
        gbc.writeMem(0x5095, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2ec6, gbc.sp());
        EXPECT(0x5096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 015B
        gbc.setState(0xc463, 0x2aa3, 0x6400, 0x73ee, 0xe06f, 0x784e, 0x0, 0x0);
        gbc.writeMem(0xc463, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2aa3, gbc.sp());
        EXPECT(0xc464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc463));
        // 97 015C
        gbc.setState(0xc388, 0xd8fe, 0xa2a0, 0xb740, 0xf9c3, 0xe66, 0x1, 0x1);
        gbc.writeMem(0xc388, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd8fe, gbc.sp());
        EXPECT(0xc389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc388));
        // 97 015D
        gbc.setState(0xa8c, 0x1ed1, 0x6100, 0xe568, 0xb0b8, 0x8323, 0x1, 0x0);
        gbc.writeMem(0xa8c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1ed1, gbc.sp());
        EXPECT(0xa8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 015E
        gbc.setState(0x5634, 0x6887, 0x2db0, 0xdb92, 0x6064, 0x275f, 0x0, 0x1);
        gbc.writeMem(0x5634, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6887, gbc.sp());
        EXPECT(0x5635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 015F
        gbc.setState(0x6702, 0x7314, 0x3150, 0x3ab5, 0x4a6, 0xf561, 0x1, 0x1);
        gbc.writeMem(0x6702, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7314, gbc.sp());
        EXPECT(0x6703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0160
        gbc.setState(0x2527, 0x9eab, 0x55b0, 0xf47d, 0xba38, 0xb631, 0x1, 0x0);
        gbc.writeMem(0x2527, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9eab, gbc.sp());
        EXPECT(0x2528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0161
        gbc.setState(0x6cd4, 0xa8f1, 0x1920, 0x9a3d, 0xf1ef, 0x8ecd, 0x1, 0x0);
        gbc.writeMem(0x6cd4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa8f1, gbc.sp());
        EXPECT(0x6cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0162
        gbc.setState(0x38b9, 0x1141, 0xa430, 0x3300, 0x9fc4, 0xbd81, 0x0, 0x0);
        gbc.writeMem(0x38b9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1141, gbc.sp());
        EXPECT(0x38ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0163
        gbc.setState(0xbb21, 0x5577, 0x2720, 0xc83b, 0xe169, 0x646d, 0x1, 0x1);
        gbc.writeMem(0xbb21, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5577, gbc.sp());
        EXPECT(0xbb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbb21));
        // 97 0164
        gbc.setState(0x4a96, 0xca9, 0x3b70, 0x98a1, 0x6c41, 0x879, 0x1, 0x0);
        gbc.writeMem(0x4a96, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xca9, gbc.sp());
        EXPECT(0x4a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0165
        gbc.setState(0x6055, 0x3dc8, 0xea00, 0x12e9, 0x4c71, 0x5305, 0x1, 0x1);
        gbc.writeMem(0x6055, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3dc8, gbc.sp());
        EXPECT(0x6056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0166
        gbc.setState(0x70a2, 0x5e55, 0x2150, 0xfb0b, 0x9cf2, 0x6062, 0x0, 0x0);
        gbc.writeMem(0x70a2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5e55, gbc.sp());
        EXPECT(0x70a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0167
        gbc.setState(0x52cf, 0xe298, 0x8d70, 0x7650, 0x8fa, 0xb826, 0x0, 0x1);
        gbc.writeMem(0x52cf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe298, gbc.sp());
        EXPECT(0x52d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0168
        gbc.setState(0x2978, 0x852e, 0x9f0, 0x908, 0x2825, 0x87fd, 0x1, 0x0);
        gbc.writeMem(0x2978, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x852e, gbc.sp());
        EXPECT(0x2979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0169
        gbc.setState(0x7d83, 0x712e, 0xb6b0, 0x7abb, 0x6416, 0x4222, 0x1, 0x1);
        gbc.writeMem(0x7d83, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x712e, gbc.sp());
        EXPECT(0x7d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 016A
        gbc.setState(0xdf5, 0xeb85, 0x560, 0xc935, 0xde5d, 0x20d4, 0x1, 0x0);
        gbc.writeMem(0xdf5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xeb85, gbc.sp());
        EXPECT(0xdf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 016C
        gbc.setState(0x6de8, 0xd24f, 0x3f60, 0x16f9, 0xa5b9, 0x3ee4, 0x1, 0x1);
        gbc.writeMem(0x6de8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd24f, gbc.sp());
        EXPECT(0x6de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 016D
        gbc.setState(0x88ae, 0xb5c9, 0xb70, 0x6533, 0xf5e1, 0x5467, 0x1, 0x0);
        gbc.writeMem(0x88ae, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb5c9, gbc.sp());
        EXPECT(0x88af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x88ae));
        // 97 016E
        gbc.setState(0x5f54, 0x3a5a, 0xbf70, 0xc171, 0x778d, 0x7824, 0x0, 0x0);
        gbc.writeMem(0x5f54, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3a5a, gbc.sp());
        EXPECT(0x5f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 016F
        gbc.setState(0x5381, 0x1ac5, 0xc0f0, 0x5610, 0xef3a, 0xb982, 0x0, 0x1);
        gbc.writeMem(0x5381, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1ac5, gbc.sp());
        EXPECT(0x5382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0170
        gbc.setState(0x8e22, 0x87dd, 0x130, 0x5637, 0x920a, 0x73c3, 0x0, 0x1);
        gbc.writeMem(0x8e22, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x87dd, gbc.sp());
        EXPECT(0x8e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8e22));
        // 97 0171
        gbc.setState(0xdb01, 0x9025, 0x40a0, 0xc2fe, 0xab0a, 0xcfa3, 0x1, 0x1);
        gbc.writeMem(0xdb01, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9025, gbc.sp());
        EXPECT(0xdb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdb01));
        // 97 0172
        gbc.setState(0x2ed, 0x5a19, 0xc200, 0xe3a0, 0x1125, 0x7a3e, 0x1, 0x1);
        gbc.writeMem(0x2ed, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5a19, gbc.sp());
        EXPECT(0x2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0173
        gbc.setState(0xec3e, 0x150, 0xada0, 0x3549, 0x4087, 0x83c9, 0x1, 0x0);
        gbc.writeMem(0xec3e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x150, gbc.sp());
        EXPECT(0xec3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xec3e));
        // 97 0174
        gbc.setState(0x7aaf, 0xc3c4, 0x4ad0, 0xeda, 0xaf41, 0x7832, 0x0, 0x1);
        gbc.writeMem(0x7aaf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc3c4, gbc.sp());
        EXPECT(0x7ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0175
        gbc.setState(0x2056, 0x42e1, 0x6210, 0x13c, 0x7740, 0xcd82, 0x0, 0x0);
        gbc.writeMem(0x2056, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x42e1, gbc.sp());
        EXPECT(0x2057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0176
        gbc.setState(0x5b5, 0xf453, 0xd710, 0x7589, 0x73a, 0xcbdc, 0x0, 0x0);
        gbc.writeMem(0x5b5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf453, gbc.sp());
        EXPECT(0x5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0177
        gbc.setState(0x4d30, 0x9cb6, 0x78f0, 0xb585, 0x9186, 0xa9f2, 0x1, 0x1);
        gbc.writeMem(0x4d30, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9cb6, gbc.sp());
        EXPECT(0x4d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0178
        gbc.setState(0x3fac, 0xcde8, 0x6d20, 0x4ac, 0xb22, 0x10fd, 0x0, 0x1);
        gbc.writeMem(0x3fac, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcde8, gbc.sp());
        EXPECT(0x3fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0179
        gbc.setState(0x6295, 0x2cf7, 0xf790, 0xfe4b, 0xf61b, 0x280a, 0x1, 0x0);
        gbc.writeMem(0x6295, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2cf7, gbc.sp());
        EXPECT(0x6296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 017A
        gbc.setState(0x9e74, 0x9974, 0x79f0, 0xd957, 0xbc0, 0xce3e, 0x1, 0x0);
        gbc.writeMem(0x9e74, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9974, gbc.sp());
        EXPECT(0x9e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9e74));
        // 97 017C
        gbc.setState(0xd99a, 0xe9a9, 0xee90, 0x2775, 0x8e6e, 0x3c90, 0x0, 0x0);
        gbc.writeMem(0xd99a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe9a9, gbc.sp());
        EXPECT(0xd99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd99a));
        // 97 017D
        gbc.setState(0x8877, 0x22f0, 0xd310, 0x8e15, 0x736e, 0x95e8, 0x0, 0x0);
        gbc.writeMem(0x8877, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x22f0, gbc.sp());
        EXPECT(0x8878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8877));
        // 97 017F
        gbc.setState(0xc23a, 0x9458, 0x5990, 0x9eb6, 0xfc69, 0xbabc, 0x1, 0x0);
        gbc.writeMem(0xc23a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9458, gbc.sp());
        EXPECT(0xc23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc23a));
        // 97 0180
        gbc.setState(0xd6c1, 0xe013, 0x9790, 0x2e32, 0xe83b, 0x4bcb, 0x1, 0x1);
        gbc.writeMem(0xd6c1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe013, gbc.sp());
        EXPECT(0xd6c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd6c1));
        // 97 0181
        gbc.setState(0x3ac7, 0xe12a, 0x5d10, 0xbb88, 0x73a8, 0xeefb, 0x1, 0x0);
        gbc.writeMem(0x3ac7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe12a, gbc.sp());
        EXPECT(0x3ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0182
        gbc.setState(0xa1da, 0xbb0f, 0x7870, 0xc7e4, 0x537f, 0xe82e, 0x1, 0x1);
        gbc.writeMem(0xa1da, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbb0f, gbc.sp());
        EXPECT(0xa1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa1da));
        // 97 0183
        gbc.setState(0xa3e6, 0xc78c, 0xca00, 0x74d3, 0xdfed, 0xa9ed, 0x0, 0x0);
        gbc.writeMem(0xa3e6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc78c, gbc.sp());
        EXPECT(0xa3e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa3e6));
        // 97 0184
        gbc.setState(0x9af4, 0x2720, 0x6c30, 0x9d67, 0x4edc, 0x6619, 0x1, 0x0);
        gbc.writeMem(0x9af4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2720, gbc.sp());
        EXPECT(0x9af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9af4));
        // 97 0185
        gbc.setState(0x88e4, 0xe812, 0x6eb0, 0x1bff, 0x11a6, 0x85bc, 0x1, 0x0);
        gbc.writeMem(0x88e4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe812, gbc.sp());
        EXPECT(0x88e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x88e4));
        // 97 0186
        gbc.setState(0x182f, 0xf1dc, 0x9bd0, 0x1d52, 0xb31d, 0x26fd, 0x0, 0x0);
        gbc.writeMem(0x182f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf1dc, gbc.sp());
        EXPECT(0x1830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0187
        gbc.setState(0x9fb1, 0xaa61, 0xa710, 0x8906, 0x4e94, 0x4218, 0x0, 0x1);
        gbc.writeMem(0x9fb1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xaa61, gbc.sp());
        EXPECT(0x9fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9fb1));
        // 97 0188
        gbc.setState(0x496b, 0xbe3d, 0xd480, 0x8220, 0x3cb0, 0x4838, 0x0, 0x0);
        gbc.writeMem(0x496b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbe3d, gbc.sp());
        EXPECT(0x496c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0189
        gbc.setState(0xb860, 0xae85, 0x310, 0x9988, 0xaef3, 0xbd71, 0x0, 0x0);
        gbc.writeMem(0xb860, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xae85, gbc.sp());
        EXPECT(0xb861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb860));
        // 97 018A
        gbc.setState(0x8a3c, 0x62bf, 0x5bd0, 0xcb79, 0xfb08, 0x5840, 0x0, 0x0);
        gbc.writeMem(0x8a3c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x62bf, gbc.sp());
        EXPECT(0x8a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8a3c));
        // 97 018C
        gbc.setState(0x2c0d, 0x3976, 0x11d0, 0x341, 0x4b11, 0xb9d7, 0x0, 0x1);
        gbc.writeMem(0x2c0d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3976, gbc.sp());
        EXPECT(0x2c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 018D
        gbc.setState(0x13cb, 0x8d5f, 0xd4a0, 0x90e4, 0x27b7, 0xbb7d, 0x0, 0x1);
        gbc.writeMem(0x13cb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8d5f, gbc.sp());
        EXPECT(0x13cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 018E
        gbc.setState(0x143a, 0xe768, 0xcf30, 0xe78d, 0x4d78, 0x41e2, 0x0, 0x0);
        gbc.writeMem(0x143a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe768, gbc.sp());
        EXPECT(0x143b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 018F
        gbc.setState(0x8d8b, 0x1eb7, 0xb910, 0x460, 0x1c85, 0x919b, 0x0, 0x1);
        gbc.writeMem(0x8d8b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1eb7, gbc.sp());
        EXPECT(0x8d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8d8b));
        // 97 0190
        gbc.setState(0x110, 0xbe92, 0x10f0, 0x6766, 0xecbf, 0xfc4d, 0x0, 0x1);
        gbc.writeMem(0x110, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbe92, gbc.sp());
        EXPECT(0x111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0191
        gbc.setState(0x4f5c, 0x2cf0, 0x3710, 0xa214, 0xb5f2, 0xfbc2, 0x1, 0x1);
        gbc.writeMem(0x4f5c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2cf0, gbc.sp());
        EXPECT(0x4f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0192
        gbc.setState(0x638d, 0xa25c, 0xc420, 0xa2a6, 0xa123, 0xba43, 0x1, 0x1);
        gbc.writeMem(0x638d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa25c, gbc.sp());
        EXPECT(0x638e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0193
        gbc.setState(0x1ed6, 0x186f, 0x1950, 0xb15e, 0x4c01, 0x9ac, 0x0, 0x1);
        gbc.writeMem(0x1ed6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x186f, gbc.sp());
        EXPECT(0x1ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0194
        gbc.setState(0xb3c3, 0xdfe5, 0x3fe0, 0x778a, 0x5f37, 0x9736, 0x0, 0x0);
        gbc.writeMem(0xb3c3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdfe5, gbc.sp());
        EXPECT(0xb3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb3c3));
        // 97 0195
        gbc.setState(0x1a22, 0x182b, 0xaf90, 0x4ab0, 0x76d8, 0x72b4, 0x0, 0x1);
        gbc.writeMem(0x1a22, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x182b, gbc.sp());
        EXPECT(0x1a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0196
        gbc.setState(0xd39a, 0x3561, 0x5dc0, 0xf018, 0x3825, 0xa70c, 0x1, 0x1);
        gbc.writeMem(0xd39a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3561, gbc.sp());
        EXPECT(0xd39b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd39a));
        // 97 0197
        gbc.setState(0xe9b6, 0x73ee, 0x14d0, 0x4da0, 0xb5f2, 0x604a, 0x1, 0x1);
        gbc.writeMem(0xe9b6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x73ee, gbc.sp());
        EXPECT(0xe9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe9b6));
        // 97 0198
        gbc.setState(0x5a3d, 0x6723, 0xcec0, 0x2d3d, 0xf91d, 0xee18, 0x0, 0x0);
        gbc.writeMem(0x5a3d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6723, gbc.sp());
        EXPECT(0x5a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0199
        gbc.setState(0x2d6b, 0xf25e, 0xa6f0, 0x6071, 0x9eb3, 0xf30, 0x1, 0x1);
        gbc.writeMem(0x2d6b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf25e, gbc.sp());
        EXPECT(0x2d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 019A
        gbc.setState(0x9722, 0x23fa, 0x8e70, 0x99aa, 0x5fb2, 0xf747, 0x1, 0x0);
        gbc.writeMem(0x9722, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x23fa, gbc.sp());
        EXPECT(0x9723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9722));
        // 97 019C
        gbc.setState(0x5aba, 0x5e35, 0x9320, 0x8d4e, 0xe8db, 0x11c6, 0x0, 0x0);
        gbc.writeMem(0x5aba, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5e35, gbc.sp());
        EXPECT(0x5abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 019D
        gbc.setState(0x2a93, 0xb975, 0x2770, 0xe451, 0x2900, 0xb425, 0x0, 0x0);
        gbc.writeMem(0x2a93, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb975, gbc.sp());
        EXPECT(0x2a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 019E
        gbc.setState(0x336, 0xb4f, 0x4eb0, 0xd291, 0xdeb8, 0x5f4c, 0x0, 0x1);
        gbc.writeMem(0x336, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb4f, gbc.sp());
        EXPECT(0x337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 019F
        gbc.setState(0x92c2, 0x9603, 0xfcd0, 0x6c73, 0x5126, 0x7201, 0x1, 0x0);
        gbc.writeMem(0x92c2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9603, gbc.sp());
        EXPECT(0x92c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x92c2));
        // 97 01A0
        gbc.setState(0xb292, 0x3742, 0x58e0, 0xb3de, 0x8ad7, 0xce40, 0x1, 0x1);
        gbc.writeMem(0xb292, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3742, gbc.sp());
        EXPECT(0xb293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb292));
        // 97 01A1
        gbc.setState(0xdb68, 0xd1db, 0x3d50, 0xc6a8, 0x5809, 0x7ae2, 0x0, 0x1);
        gbc.writeMem(0xdb68, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd1db, gbc.sp());
        EXPECT(0xdb69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdb68));
        // 97 01A2
        gbc.setState(0x9995, 0x3079, 0x6a30, 0x695f, 0x7621, 0x5037, 0x0, 0x0);
        gbc.writeMem(0x9995, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3079, gbc.sp());
        EXPECT(0x9996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9995));
        // 97 01A3
        gbc.setState(0x6652, 0x7606, 0xf8d0, 0x28cd, 0x4103, 0x49a7, 0x0, 0x1);
        gbc.writeMem(0x6652, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7606, gbc.sp());
        EXPECT(0x6653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01A4
        gbc.setState(0x82fd, 0x970c, 0x70, 0xd232, 0xb986, 0x5914, 0x0, 0x1);
        gbc.writeMem(0x82fd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x970c, gbc.sp());
        EXPECT(0x82fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x82fd));
        // 97 01A5
        gbc.setState(0x26cc, 0xcd63, 0xa390, 0x6e26, 0x144f, 0x4c05, 0x0, 0x1);
        gbc.writeMem(0x26cc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcd63, gbc.sp());
        EXPECT(0x26cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01A7
        gbc.setState(0xb8a3, 0x8dd0, 0x5cd0, 0x480e, 0x5735, 0xfd0d, 0x0, 0x1);
        gbc.writeMem(0xb8a3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8dd0, gbc.sp());
        EXPECT(0xb8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb8a3));
        // 97 01A8
        gbc.setState(0xd9cb, 0x85c4, 0x8b30, 0xb29a, 0xc983, 0x7a7c, 0x0, 0x1);
        gbc.writeMem(0xd9cb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x85c4, gbc.sp());
        EXPECT(0xd9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd9cb));
        // 97 01A9
        gbc.setState(0xbc37, 0xeb20, 0x4950, 0xa76b, 0xed32, 0xa66b, 0x1, 0x0);
        gbc.writeMem(0xbc37, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xeb20, gbc.sp());
        EXPECT(0xbc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbc37));
        // 97 01AA
        gbc.setState(0xd6ac, 0xa77e, 0x5280, 0x3788, 0x416d, 0xe4d6, 0x0, 0x0);
        gbc.writeMem(0xd6ac, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa77e, gbc.sp());
        EXPECT(0xd6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd6ac));
        // 97 01AB
        gbc.setState(0x8ffb, 0x758e, 0x6610, 0x6da6, 0xf198, 0x2c64, 0x0, 0x0);
        gbc.writeMem(0x8ffb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x758e, gbc.sp());
        EXPECT(0x8ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8ffb));
        // 97 01AC
        gbc.setState(0x5539, 0xd24a, 0x5f20, 0x52b3, 0xba56, 0xdf1d, 0x1, 0x0);
        gbc.writeMem(0x5539, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd24a, gbc.sp());
        EXPECT(0x553a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01AD
        gbc.setState(0x6cd0, 0xa6c7, 0xb270, 0x7419, 0xab54, 0x6136, 0x1, 0x1);
        gbc.writeMem(0x6cd0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa6c7, gbc.sp());
        EXPECT(0x6cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01AE
        gbc.setState(0x671e, 0xae51, 0x70d0, 0xc91e, 0x4d31, 0xae2, 0x1, 0x0);
        gbc.writeMem(0x671e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xae51, gbc.sp());
        EXPECT(0x671f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01AF
        gbc.setState(0xcb56, 0x76ab, 0xd2b0, 0x8c8d, 0x31ba, 0x1b73, 0x1, 0x0);
        gbc.writeMem(0xcb56, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x76ab, gbc.sp());
        EXPECT(0xcb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcb56));
        // 97 01B0
        gbc.setState(0x14af, 0xa1eb, 0x7ab0, 0xd9d9, 0xd82c, 0x3d58, 0x1, 0x0);
        gbc.writeMem(0x14af, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa1eb, gbc.sp());
        EXPECT(0x14b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01B2
        gbc.setState(0x494e, 0xed6e, 0x2230, 0x172c, 0x30f7, 0xbdfb, 0x1, 0x1);
        gbc.writeMem(0x494e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xed6e, gbc.sp());
        EXPECT(0x494f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01B3
        gbc.setState(0x6830, 0xfbe8, 0xc7f0, 0xe319, 0x674e, 0x1627, 0x0, 0x1);
        gbc.writeMem(0x6830, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfbe8, gbc.sp());
        EXPECT(0x6831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01B4
        gbc.setState(0x5196, 0x77ec, 0x8b70, 0x475f, 0x7268, 0x811f, 0x1, 0x0);
        gbc.writeMem(0x5196, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x77ec, gbc.sp());
        EXPECT(0x5197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01B5
        gbc.setState(0x802a, 0x9a33, 0x3080, 0x9c68, 0x74f4, 0xfee1, 0x0, 0x1);
        gbc.writeMem(0x802a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9a33, gbc.sp());
        EXPECT(0x802b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x802a));
        // 97 01B6
        gbc.setState(0x77a2, 0x5595, 0xb340, 0x2ddd, 0xaaa3, 0x5027, 0x0, 0x0);
        gbc.writeMem(0x77a2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0x77a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01B8
        gbc.setState(0xcd7a, 0x4731, 0x79e0, 0x7d3e, 0x95f5, 0xc329, 0x1, 0x0);
        gbc.writeMem(0xcd7a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4731, gbc.sp());
        EXPECT(0xcd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcd7a));
        // 97 01B9
        gbc.setState(0x5e6a, 0xb3d2, 0xe0f0, 0xa0c6, 0x1b06, 0xe724, 0x1, 0x1);
        gbc.writeMem(0x5e6a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb3d2, gbc.sp());
        EXPECT(0x5e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01BA
        gbc.setState(0x221f, 0xd79b, 0xd000, 0xd11, 0x38ae, 0xbc2, 0x1, 0x0);
        gbc.writeMem(0x221f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd79b, gbc.sp());
        EXPECT(0x2220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01BB
        gbc.setState(0xe259, 0x4f77, 0x6e60, 0x472d, 0xaaea, 0x17ad, 0x1, 0x1);
        gbc.writeMem(0xe259, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4f77, gbc.sp());
        EXPECT(0xe25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe259));
        // 97 01BC
        gbc.setState(0x9c0e, 0x4c7a, 0xcd0, 0x6fb7, 0xbe4, 0xd871, 0x1, 0x0);
        gbc.writeMem(0x9c0e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4c7a, gbc.sp());
        EXPECT(0x9c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9c0e));
        // 97 01BD
        gbc.setState(0xeea5, 0x7710, 0xfa80, 0x29e7, 0xbdbf, 0xa64e, 0x1, 0x0);
        gbc.writeMem(0xeea5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7710, gbc.sp());
        EXPECT(0xeea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeea5));
        // 97 01BE
        gbc.setState(0x9f8b, 0x5c0e, 0xde70, 0x1e93, 0x63c1, 0xff25, 0x0, 0x1);
        gbc.writeMem(0x9f8b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5c0e, gbc.sp());
        EXPECT(0x9f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9f8b));
        // 97 01BF
        gbc.setState(0x7dc6, 0x64a6, 0x4420, 0x8beb, 0x3c7c, 0x1a0d, 0x0, 0x1);
        gbc.writeMem(0x7dc6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x64a6, gbc.sp());
        EXPECT(0x7dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01C0
        gbc.setState(0xa72b, 0xd5c7, 0xe230, 0xc07f, 0x4af6, 0x697d, 0x0, 0x0);
        gbc.writeMem(0xa72b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd5c7, gbc.sp());
        EXPECT(0xa72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa72b));
        // 97 01C1
        gbc.setState(0x6795, 0xaae4, 0x5b0, 0xe5a3, 0x6d88, 0xebf, 0x1, 0x1);
        gbc.writeMem(0x6795, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xaae4, gbc.sp());
        EXPECT(0x6796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01C3
        gbc.setState(0x849b, 0x14d0, 0xa1a0, 0xc36, 0x676e, 0xe281, 0x0, 0x0);
        gbc.writeMem(0x849b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x14d0, gbc.sp());
        EXPECT(0x849c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x849b));
        // 97 01C4
        gbc.setState(0x261f, 0x4f59, 0xc600, 0x3b06, 0xcfde, 0x8d05, 0x1, 0x1);
        gbc.writeMem(0x261f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4f59, gbc.sp());
        EXPECT(0x2620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01C5
        gbc.setState(0x1161, 0xe4b1, 0x9030, 0x9d8e, 0x6fca, 0xfd4, 0x1, 0x0);
        gbc.writeMem(0x1161, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe4b1, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01C6
        gbc.setState(0xbd37, 0xef69, 0xe80, 0xce2a, 0x6cf9, 0x6787, 0x1, 0x1);
        gbc.writeMem(0xbd37, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xef69, gbc.sp());
        EXPECT(0xbd38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbd37));
        // 97 01C7
        gbc.setState(0xc5f1, 0x5ec2, 0x1740, 0x3c12, 0x84bb, 0x22bd, 0x1, 0x1);
        gbc.writeMem(0xc5f1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5ec2, gbc.sp());
        EXPECT(0xc5f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc5f1));
        // 97 01C8
        gbc.setState(0xde2d, 0xad1b, 0x4e30, 0xa93f, 0x606c, 0x44a4, 0x0, 0x0);
        gbc.writeMem(0xde2d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xad1b, gbc.sp());
        EXPECT(0xde2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xde2d));
        // 97 01C9
        gbc.setState(0x9829, 0x90ac, 0x6ea0, 0xa541, 0xc5f2, 0xc8fa, 0x1, 0x1);
        gbc.writeMem(0x9829, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x90ac, gbc.sp());
        EXPECT(0x982a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9829));
        // 97 01CA
        gbc.setState(0x67fd, 0x8b9b, 0x8550, 0xe29b, 0x265d, 0xd930, 0x1, 0x0);
        gbc.writeMem(0x67fd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8b9b, gbc.sp());
        EXPECT(0x67fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01CB
        gbc.setState(0x56e8, 0xbd86, 0x88d0, 0x13ed, 0xd52f, 0x79bd, 0x0, 0x1);
        gbc.writeMem(0x56e8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbd86, gbc.sp());
        EXPECT(0x56e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01CC
        gbc.setState(0xb7a9, 0xf16f, 0xe30, 0x5928, 0x26df, 0x4ba4, 0x1, 0x1);
        gbc.writeMem(0xb7a9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf16f, gbc.sp());
        EXPECT(0xb7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb7a9));
        // 97 01CD
        gbc.setState(0x3d03, 0x5e58, 0xb260, 0xce54, 0xdc27, 0xa253, 0x0, 0x1);
        gbc.writeMem(0x3d03, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5e58, gbc.sp());
        EXPECT(0x3d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01CE
        gbc.setState(0x94f4, 0x8f24, 0xa900, 0x8b84, 0x62ac, 0xe87b, 0x0, 0x0);
        gbc.writeMem(0x94f4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8f24, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x94f4));
        // 97 01CF
        gbc.setState(0xf0b, 0x9951, 0x76a0, 0x4d8b, 0x499, 0xe0f, 0x1, 0x0);
        gbc.writeMem(0xf0b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9951, gbc.sp());
        EXPECT(0xf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01D0
        gbc.setState(0x286c, 0xc2bf, 0x2a0, 0x54ca, 0x2c91, 0x961f, 0x0, 0x1);
        gbc.writeMem(0x286c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc2bf, gbc.sp());
        EXPECT(0x286d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01D1
        gbc.setState(0x1964, 0xb3c5, 0xcf70, 0x2a8f, 0x5097, 0x1d0e, 0x0, 0x0);
        gbc.writeMem(0x1964, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb3c5, gbc.sp());
        EXPECT(0x1965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01D2
        gbc.setState(0x5bbe, 0x30bb, 0xf700, 0xc469, 0x682f, 0x52d9, 0x1, 0x0);
        gbc.writeMem(0x5bbe, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x30bb, gbc.sp());
        EXPECT(0x5bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01D3
        gbc.setState(0x6168, 0x7c60, 0x7da0, 0x3b19, 0x2bfb, 0x2ed6, 0x1, 0x1);
        gbc.writeMem(0x6168, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7c60, gbc.sp());
        EXPECT(0x6169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01D4
        gbc.setState(0xeea3, 0xad6c, 0x9290, 0xe5c6, 0xdfdc, 0x5830, 0x1, 0x1);
        gbc.writeMem(0xeea3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xad6c, gbc.sp());
        EXPECT(0xeea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeea3));
        // 97 01D5
        gbc.setState(0x44d9, 0x8ad1, 0x20d0, 0xf32a, 0xe737, 0x378d, 0x0, 0x0);
        gbc.writeMem(0x44d9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8ad1, gbc.sp());
        EXPECT(0x44da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01D6
        gbc.setState(0x64b8, 0x5b17, 0x5e00, 0x752b, 0x9169, 0x86e1, 0x0, 0x1);
        gbc.writeMem(0x64b8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5b17, gbc.sp());
        EXPECT(0x64b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01D7
        gbc.setState(0x700, 0x56ef, 0xf7e0, 0x41e5, 0x393d, 0xc37e, 0x0, 0x1);
        gbc.writeMem(0x700, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x56ef, gbc.sp());
        EXPECT(0x701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01D8
        gbc.setState(0xab2b, 0x9a4e, 0xda60, 0xbdcf, 0x5701, 0xe0a5, 0x0, 0x0);
        gbc.writeMem(0xab2b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9a4e, gbc.sp());
        EXPECT(0xab2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xab2b));
        // 97 01D9
        gbc.setState(0x5606, 0x46a3, 0x3a00, 0x605f, 0x8296, 0x5d6f, 0x0, 0x0);
        gbc.writeMem(0x5606, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x46a3, gbc.sp());
        EXPECT(0x5607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01DA
        gbc.setState(0xe0a1, 0x2203, 0x5f60, 0xc324, 0x6464, 0x3431, 0x1, 0x1);
        gbc.writeMem(0xe0a1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2203, gbc.sp());
        EXPECT(0xe0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe0a1));
        // 97 01DB
        gbc.setState(0x1a5e, 0xf095, 0xc4a0, 0x3bc1, 0x6b6d, 0x4d32, 0x1, 0x0);
        gbc.writeMem(0x1a5e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf095, gbc.sp());
        EXPECT(0x1a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01DC
        gbc.setState(0x9a, 0x4571, 0x3a80, 0x200e, 0xc1c, 0xce0a, 0x1, 0x0);
        gbc.writeMem(0x9a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4571, gbc.sp());
        EXPECT(0x9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01DD
        gbc.setState(0x584f, 0x4d19, 0x3810, 0x26f0, 0x226e, 0xe74b, 0x0, 0x0);
        gbc.writeMem(0x584f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4d19, gbc.sp());
        EXPECT(0x5850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01DE
        gbc.setState(0xd904, 0x8223, 0xa50, 0xb2cd, 0xf9de, 0x4d05, 0x0, 0x0);
        gbc.writeMem(0xd904, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8223, gbc.sp());
        EXPECT(0xd905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd904));
        // 97 01DF
        gbc.setState(0xc67c, 0xb0f4, 0x7b70, 0xbd04, 0x1a66, 0xc76e, 0x0, 0x1);
        gbc.writeMem(0xc67c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb0f4, gbc.sp());
        EXPECT(0xc67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc67c));
        // 97 01E0
        gbc.setState(0x2e07, 0xd8c9, 0x5e40, 0xf952, 0xa792, 0x6c48, 0x0, 0x0);
        gbc.writeMem(0x2e07, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd8c9, gbc.sp());
        EXPECT(0x2e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01E1
        gbc.setState(0x46e, 0xe627, 0x2c20, 0xeac2, 0xa007, 0xb189, 0x1, 0x0);
        gbc.writeMem(0x46e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe627, gbc.sp());
        EXPECT(0x46f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01E3
        gbc.setState(0x56c9, 0xff5a, 0x4c50, 0x62d5, 0xd922, 0xd5fd, 0x0, 0x0);
        gbc.writeMem(0x56c9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xff5a, gbc.sp());
        EXPECT(0x56ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01E4
        gbc.setState(0xbd1, 0xf2e, 0x89f0, 0x1cc, 0x2c73, 0x6496, 0x1, 0x0);
        gbc.writeMem(0xbd1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf2e, gbc.sp());
        EXPECT(0xbd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01E5
        gbc.setState(0x7f71, 0xb7b6, 0x30d0, 0xb8fc, 0xaf0e, 0x5de0, 0x1, 0x0);
        gbc.writeMem(0x7f71, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb7b6, gbc.sp());
        EXPECT(0x7f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01E6
        gbc.setState(0x415f, 0x6471, 0x2490, 0xdff2, 0x10cf, 0x5289, 0x0, 0x0);
        gbc.writeMem(0x415f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6471, gbc.sp());
        EXPECT(0x4160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01E7
        gbc.setState(0x83e5, 0x52a2, 0x2cb0, 0x1b81, 0x4c31, 0x3f85, 0x1, 0x1);
        gbc.writeMem(0x83e5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x52a2, gbc.sp());
        EXPECT(0x83e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x83e5));
        // 97 01E8
        gbc.setState(0xc81c, 0xbf68, 0xe9b0, 0xb70, 0xd89a, 0x7e26, 0x1, 0x0);
        gbc.writeMem(0xc81c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbf68, gbc.sp());
        EXPECT(0xc81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc81c));
        // 97 01E9
        gbc.setState(0x2f6f, 0x99e3, 0xa4c0, 0x4928, 0xbc9a, 0x9d74, 0x0, 0x1);
        gbc.writeMem(0x2f6f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x99e3, gbc.sp());
        EXPECT(0x2f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01EA
        gbc.setState(0x2221, 0x5825, 0x4810, 0x27f5, 0xe0dd, 0xf3a8, 0x1, 0x0);
        gbc.writeMem(0x2221, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5825, gbc.sp());
        EXPECT(0x2222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01EB
        gbc.setState(0x939b, 0xd08b, 0xb890, 0x1814, 0x5c9a, 0xd552, 0x0, 0x0);
        gbc.writeMem(0x939b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd08b, gbc.sp());
        EXPECT(0x939c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x939b));
        // 97 01EC
        gbc.setState(0x86c4, 0x2b7c, 0x57f0, 0x38c, 0x30c1, 0xca95, 0x0, 0x1);
        gbc.writeMem(0x86c4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2b7c, gbc.sp());
        EXPECT(0x86c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x86c4));
        // 97 01ED
        gbc.setState(0x9d5a, 0x7fb6, 0x8d10, 0xc3a6, 0xa576, 0x8dac, 0x0, 0x0);
        gbc.writeMem(0x9d5a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7fb6, gbc.sp());
        EXPECT(0x9d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9d5a));
        // 97 01EE
        gbc.setState(0xa87b, 0x4d03, 0x36a0, 0xde71, 0xc5b9, 0xc1b7, 0x1, 0x0);
        gbc.writeMem(0xa87b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4d03, gbc.sp());
        EXPECT(0xa87c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa87b));
        // 97 01EF
        gbc.setState(0xc8d5, 0x5a72, 0x2820, 0x1e7d, 0x14cf, 0x787, 0x0, 0x1);
        gbc.writeMem(0xc8d5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5a72, gbc.sp());
        EXPECT(0xc8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc8d5));
        // 97 01F0
        gbc.setState(0x691d, 0xe362, 0x8f30, 0xc11, 0x74d5, 0xcbe0, 0x0, 0x1);
        gbc.writeMem(0x691d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe362, gbc.sp());
        EXPECT(0x691e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01F1
        gbc.setState(0x1fc3, 0x6a5e, 0x4670, 0x3e22, 0xf1f7, 0x91b8, 0x1, 0x1);
        gbc.writeMem(0x1fc3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6a5e, gbc.sp());
        EXPECT(0x1fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01F2
        gbc.setState(0x164b, 0xe67c, 0x6b30, 0xc5be, 0x1187, 0x3acb, 0x0, 0x0);
        gbc.writeMem(0x164b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe67c, gbc.sp());
        EXPECT(0x164c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01F3
        gbc.setState(0x394e, 0x3b31, 0x9cd0, 0xfbbf, 0x6a10, 0xaed4, 0x0, 0x1);
        gbc.writeMem(0x394e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3b31, gbc.sp());
        EXPECT(0x394f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01F4
        gbc.setState(0x916d, 0x6b7e, 0x11a0, 0x9100, 0xee0b, 0x693c, 0x1, 0x1);
        gbc.writeMem(0x916d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6b7e, gbc.sp());
        EXPECT(0x916e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x916d));
        // 97 01F5
        gbc.setState(0xba83, 0x127a, 0xe7a0, 0xeb78, 0x4e82, 0xffba, 0x1, 0x0);
        gbc.writeMem(0xba83, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x127a, gbc.sp());
        EXPECT(0xba84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xba83));
        // 97 01F6
        gbc.setState(0x76d7, 0x4b45, 0x8cc0, 0x2629, 0x88b6, 0x48c1, 0x1, 0x0);
        gbc.writeMem(0x76d7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4b45, gbc.sp());
        EXPECT(0x76d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01F7
        gbc.setState(0x34bc, 0x6e4a, 0x37b0, 0x1f8a, 0x8369, 0x6458, 0x1, 0x0);
        gbc.writeMem(0x34bc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6e4a, gbc.sp());
        EXPECT(0x34bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01F8
        gbc.setState(0x9751, 0x1244, 0xa6a0, 0xb9d, 0x67b1, 0xb2aa, 0x0, 0x0);
        gbc.writeMem(0x9751, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1244, gbc.sp());
        EXPECT(0x9752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9751));
        // 97 01FA
        gbc.setState(0x603, 0xa1ef, 0xd340, 0x3787, 0x7af4, 0x96ed, 0x0, 0x0);
        gbc.writeMem(0x603, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa1ef, gbc.sp());
        EXPECT(0x604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01FB
        gbc.setState(0x4cd0, 0x6b87, 0x4780, 0xfc63, 0x6f9b, 0xb63d, 0x1, 0x0);
        gbc.writeMem(0x4cd0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6b87, gbc.sp());
        EXPECT(0x4cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01FC
        gbc.setState(0x5c2c, 0xb567, 0xf500, 0xc60e, 0xb372, 0x8aba, 0x1, 0x1);
        gbc.writeMem(0x5c2c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb567, gbc.sp());
        EXPECT(0x5c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01FD
        gbc.setState(0x2993, 0xa3c7, 0x26a0, 0x53ce, 0x7c0b, 0x1def, 0x1, 0x1);
        gbc.writeMem(0x2993, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa3c7, gbc.sp());
        EXPECT(0x2994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01FE
        gbc.setState(0x5dc7, 0x972e, 0xcb20, 0x100f, 0xae46, 0x486b, 0x1, 0x0);
        gbc.writeMem(0x5dc7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x972e, gbc.sp());
        EXPECT(0x5dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 01FF
        gbc.setState(0x1148, 0x268a, 0xdb40, 0x7f4c, 0x6f75, 0x52c0, 0x1, 0x0);
        gbc.writeMem(0x1148, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x268a, gbc.sp());
        EXPECT(0x1149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0200
        gbc.setState(0x6069, 0xfefc, 0xdd60, 0xf836, 0x6ab9, 0xa77c, 0x1, 0x1);
        gbc.writeMem(0x6069, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfefc, gbc.sp());
        EXPECT(0x606a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0201
        gbc.setState(0x7009, 0xa885, 0xb220, 0x47d9, 0x71d, 0x6481, 0x1, 0x0);
        gbc.writeMem(0x7009, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa885, gbc.sp());
        EXPECT(0x700a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0202
        gbc.setState(0x5246, 0x4ed2, 0xb700, 0x284d, 0x68a5, 0xa864, 0x1, 0x1);
        gbc.writeMem(0x5246, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4ed2, gbc.sp());
        EXPECT(0x5247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0203
        gbc.setState(0x30e1, 0x7c3, 0x9390, 0x3ec8, 0x26a4, 0xf9ae, 0x0, 0x1);
        gbc.writeMem(0x30e1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7c3, gbc.sp());
        EXPECT(0x30e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0204
        gbc.setState(0xc802, 0xa873, 0x2a90, 0x1b1a, 0x3d8a, 0x6fb6, 0x0, 0x0);
        gbc.writeMem(0xc802, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa873, gbc.sp());
        EXPECT(0xc803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc802));
        // 97 0205
        gbc.setState(0x97d3, 0xac1f, 0xe6a0, 0x6843, 0x9d11, 0xb836, 0x0, 0x1);
        gbc.writeMem(0x97d3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xac1f, gbc.sp());
        EXPECT(0x97d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x97d3));
        // 97 0206
        gbc.setState(0xdc6d, 0xfa6b, 0xdde0, 0xb3f, 0xedb4, 0xfbe3, 0x1, 0x0);
        gbc.writeMem(0xdc6d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfa6b, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdc6d));
        // 97 0207
        gbc.setState(0x9659, 0xac96, 0x36d0, 0x305e, 0x77cc, 0x65d1, 0x0, 0x1);
        gbc.writeMem(0x9659, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xac96, gbc.sp());
        EXPECT(0x965a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9659));
        // 97 0208
        gbc.setState(0x67ef, 0x6e70, 0x7630, 0x94ec, 0x3399, 0xa855, 0x1, 0x1);
        gbc.writeMem(0x67ef, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6e70, gbc.sp());
        EXPECT(0x67f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0209
        gbc.setState(0xc557, 0x390a, 0xcb40, 0x511b, 0x66b9, 0xe363, 0x1, 0x1);
        gbc.writeMem(0xc557, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x390a, gbc.sp());
        EXPECT(0xc558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc557));
        // 97 020A
        gbc.setState(0x13f, 0x9795, 0xdc0, 0x4e97, 0x9446, 0x61ce, 0x1, 0x0);
        gbc.writeMem(0x13f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9795, gbc.sp());
        EXPECT(0x140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 020B
        gbc.setState(0xef25, 0xb3ec, 0x5ba0, 0x8094, 0xa0ec, 0x63a6, 0x0, 0x0);
        gbc.writeMem(0xef25, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb3ec, gbc.sp());
        EXPECT(0xef26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xef25));
        // 97 020C
        gbc.setState(0x9b8, 0x2f44, 0x140, 0x2ec0, 0x5f0b, 0x3e52, 0x1, 0x1);
        gbc.writeMem(0x9b8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2f44, gbc.sp());
        EXPECT(0x9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 020D
        gbc.setState(0x7a10, 0x7651, 0xe900, 0x7d97, 0x7030, 0x521c, 0x1, 0x0);
        gbc.writeMem(0x7a10, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7651, gbc.sp());
        EXPECT(0x7a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 020E
        gbc.setState(0x2d3c, 0xddbc, 0x84c0, 0x4ba3, 0x296f, 0x7e7e, 0x1, 0x1);
        gbc.writeMem(0x2d3c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xddbc, gbc.sp());
        EXPECT(0x2d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 020F
        gbc.setState(0xe56c, 0xeca8, 0x6970, 0x31a0, 0x1e44, 0xa7ec, 0x0, 0x0);
        gbc.writeMem(0xe56c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeca8, gbc.sp());
        EXPECT(0xe56d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe56c));
        // 97 0210
        gbc.setState(0x6fa3, 0xa5d, 0xaf70, 0x6705, 0x4c3f, 0x7bf3, 0x0, 0x1);
        gbc.writeMem(0x6fa3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa5d, gbc.sp());
        EXPECT(0x6fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0211
        gbc.setState(0xc939, 0xd00d, 0x6580, 0x6c29, 0xa658, 0xe287, 0x0, 0x0);
        gbc.writeMem(0xc939, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd00d, gbc.sp());
        EXPECT(0xc93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc939));
        // 97 0213
        gbc.setState(0x8222, 0xd5f0, 0xf800, 0x75c8, 0xe551, 0xfe87, 0x1, 0x0);
        gbc.writeMem(0x8222, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd5f0, gbc.sp());
        EXPECT(0x8223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8222));
        // 97 0214
        gbc.setState(0x1ff0, 0x42c, 0x6a90, 0x340d, 0xac40, 0x4876, 0x0, 0x0);
        gbc.writeMem(0x1ff0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x42c, gbc.sp());
        EXPECT(0x1ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0215
        gbc.setState(0xa35c, 0x3098, 0xee30, 0x3013, 0xfd5c, 0x620a, 0x0, 0x0);
        gbc.writeMem(0xa35c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3098, gbc.sp());
        EXPECT(0xa35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa35c));
        // 97 0216
        gbc.setState(0x6fee, 0xa0f5, 0x350, 0x6655, 0x7c45, 0x8e9, 0x0, 0x0);
        gbc.writeMem(0x6fee, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa0f5, gbc.sp());
        EXPECT(0x6fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0217
        gbc.setState(0x1110, 0xdd70, 0xda40, 0xd42b, 0xe4d2, 0xd888, 0x0, 0x0);
        gbc.writeMem(0x1110, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdd70, gbc.sp());
        EXPECT(0x1111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0218
        gbc.setState(0xe9f7, 0x9716, 0x8720, 0xabea, 0xc982, 0x6f4e, 0x1, 0x1);
        gbc.writeMem(0xe9f7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9716, gbc.sp());
        EXPECT(0xe9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe9f7));
        // 97 0219
        gbc.setState(0x8dd9, 0x4300, 0x4d20, 0x16e5, 0x7668, 0xfe1a, 0x1, 0x0);
        gbc.writeMem(0x8dd9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4300, gbc.sp());
        EXPECT(0x8dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8dd9));
        // 97 021A
        gbc.setState(0xbbec, 0xcc66, 0xcda0, 0x21c0, 0x2df8, 0x5f7f, 0x1, 0x1);
        gbc.writeMem(0xbbec, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcc66, gbc.sp());
        EXPECT(0xbbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbbec));
        // 97 021B
        gbc.setState(0x2f43, 0x192e, 0x50b0, 0x5118, 0xb510, 0xbb67, 0x1, 0x1);
        gbc.writeMem(0x2f43, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x192e, gbc.sp());
        EXPECT(0x2f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 021D
        gbc.setState(0xaf16, 0x1ff1, 0xb6b0, 0xa7b0, 0x36e7, 0xb2b4, 0x1, 0x1);
        gbc.writeMem(0xaf16, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1ff1, gbc.sp());
        EXPECT(0xaf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaf16));
        // 97 021E
        gbc.setState(0xdac3, 0x6bdf, 0x20e0, 0xa78b, 0xa47b, 0x3501, 0x1, 0x1);
        gbc.writeMem(0xdac3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6bdf, gbc.sp());
        EXPECT(0xdac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdac3));
        // 97 021F
        gbc.setState(0xae6d, 0x7af0, 0x8640, 0x6352, 0xc97, 0xe559, 0x1, 0x1);
        gbc.writeMem(0xae6d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7af0, gbc.sp());
        EXPECT(0xae6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xae6d));
        // 97 0220
        gbc.setState(0x7e6f, 0xf944, 0x4010, 0x12cf, 0xe655, 0x3a01, 0x0, 0x1);
        gbc.writeMem(0x7e6f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf944, gbc.sp());
        EXPECT(0x7e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0222
        gbc.setState(0x20f1, 0xe12a, 0x1e90, 0xb5c0, 0xe759, 0xb254, 0x1, 0x0);
        gbc.writeMem(0x20f1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe12a, gbc.sp());
        EXPECT(0x20f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0223
        gbc.setState(0x5c0a, 0x841, 0x6620, 0xa353, 0xd4fc, 0x7277, 0x0, 0x1);
        gbc.writeMem(0x5c0a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x841, gbc.sp());
        EXPECT(0x5c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0224
        gbc.setState(0x3702, 0xdf00, 0x9120, 0x8787, 0x1744, 0x1f44, 0x1, 0x0);
        gbc.writeMem(0x3702, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdf00, gbc.sp());
        EXPECT(0x3703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0225
        gbc.setState(0xa111, 0x18c4, 0x9550, 0x1212, 0x62ca, 0xcd5c, 0x1, 0x0);
        gbc.writeMem(0xa111, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x18c4, gbc.sp());
        EXPECT(0xa112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa111));
        // 97 0226
        gbc.setState(0xd44d, 0x189a, 0x2840, 0x51bf, 0x9593, 0xb10b, 0x1, 0x0);
        gbc.writeMem(0xd44d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x189a, gbc.sp());
        EXPECT(0xd44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd44d));
        // 97 0227
        gbc.setState(0x40c9, 0x2819, 0xe640, 0xbd45, 0xb86c, 0x8de7, 0x1, 0x0);
        gbc.writeMem(0x40c9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2819, gbc.sp());
        EXPECT(0x40ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0228
        gbc.setState(0x11c, 0x8333, 0x39b0, 0xff9f, 0x27b7, 0x225e, 0x1, 0x0);
        gbc.writeMem(0x11c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8333, gbc.sp());
        EXPECT(0x11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0229
        gbc.setState(0xbd37, 0x9fb1, 0x7110, 0x6316, 0xe769, 0xc2c8, 0x0, 0x1);
        gbc.writeMem(0xbd37, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9fb1, gbc.sp());
        EXPECT(0xbd38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbd37));
        // 97 022A
        gbc.setState(0x4663, 0xa236, 0xdc70, 0x6331, 0xbf6, 0x5efa, 0x1, 0x1);
        gbc.writeMem(0x4663, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa236, gbc.sp());
        EXPECT(0x4664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 022B
        gbc.setState(0x335a, 0x4f8d, 0xa730, 0xf3f3, 0x4c4c, 0xf6fd, 0x0, 0x1);
        gbc.writeMem(0x335a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4f8d, gbc.sp());
        EXPECT(0x335b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 022C
        gbc.setState(0x4f62, 0xe886, 0x540, 0x7085, 0xc17a, 0x2c1b, 0x1, 0x0);
        gbc.writeMem(0x4f62, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe886, gbc.sp());
        EXPECT(0x4f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 022D
        gbc.setState(0xd3f7, 0xd3db, 0x1930, 0xa15, 0x73e7, 0x3f2e, 0x0, 0x1);
        gbc.writeMem(0xd3f7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd3db, gbc.sp());
        EXPECT(0xd3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd3f7));
        // 97 022E
        gbc.setState(0xaf73, 0xbcf7, 0xf610, 0xea94, 0x9ccd, 0x24f0, 0x1, 0x1);
        gbc.writeMem(0xaf73, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbcf7, gbc.sp());
        EXPECT(0xaf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaf73));
        // 97 022F
        gbc.setState(0x2271, 0x8aff, 0x1980, 0x4ce4, 0xd34c, 0xb7c4, 0x1, 0x1);
        gbc.writeMem(0x2271, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8aff, gbc.sp());
        EXPECT(0x2272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0230
        gbc.setState(0x1e12, 0x9ae6, 0xc0b0, 0x8741, 0x584a, 0xcb2e, 0x1, 0x0);
        gbc.writeMem(0x1e12, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9ae6, gbc.sp());
        EXPECT(0x1e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0231
        gbc.setState(0x2904, 0x62a1, 0x5df0, 0x9614, 0x7d08, 0x3a4e, 0x0, 0x1);
        gbc.writeMem(0x2904, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x62a1, gbc.sp());
        EXPECT(0x2905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0232
        gbc.setState(0xbe90, 0x4411, 0x5dd0, 0x53fb, 0x4e77, 0xebb1, 0x1, 0x0);
        gbc.writeMem(0xbe90, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4411, gbc.sp());
        EXPECT(0xbe91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbe90));
        // 97 0233
        gbc.setState(0x6714, 0x10ed, 0xd910, 0x6eb, 0x543e, 0xfcf1, 0x1, 0x1);
        gbc.writeMem(0x6714, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x10ed, gbc.sp());
        EXPECT(0x6715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0234
        gbc.setState(0xd955, 0x3308, 0x3bb0, 0xd460, 0x5984, 0xdead, 0x0, 0x0);
        gbc.writeMem(0xd955, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3308, gbc.sp());
        EXPECT(0xd956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd955));
        // 97 0235
        gbc.setState(0x606f, 0x581c, 0x4650, 0x70a8, 0x8889, 0x1d56, 0x1, 0x1);
        gbc.writeMem(0x606f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x581c, gbc.sp());
        EXPECT(0x6070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0236
        gbc.setState(0x844e, 0x7a7b, 0x8010, 0xe322, 0xcba6, 0xa80, 0x1, 0x1);
        gbc.writeMem(0x844e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7a7b, gbc.sp());
        EXPECT(0x844f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x844e));
        // 97 0237
        gbc.setState(0xa170, 0xc4c8, 0xeca0, 0xea1c, 0xc4ee, 0x228, 0x0, 0x1);
        gbc.writeMem(0xa170, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc4c8, gbc.sp());
        EXPECT(0xa171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa170));
        // 97 0239
        gbc.setState(0x9e73, 0x146b, 0x7380, 0x1440, 0x2e80, 0x878d, 0x1, 0x0);
        gbc.writeMem(0x9e73, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x146b, gbc.sp());
        EXPECT(0x9e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9e73));
        // 97 023A
        gbc.setState(0x73b5, 0xdf81, 0xa090, 0xe055, 0x3bd8, 0xc553, 0x1, 0x0);
        gbc.writeMem(0x73b5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdf81, gbc.sp());
        EXPECT(0x73b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 023B
        gbc.setState(0x3f2, 0x29ac, 0xcb80, 0xcc53, 0x568d, 0x7687, 0x0, 0x0);
        gbc.writeMem(0x3f2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x29ac, gbc.sp());
        EXPECT(0x3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 023C
        gbc.setState(0x3144, 0x4e3d, 0x4fe0, 0x1c95, 0xd8bd, 0x3671, 0x1, 0x1);
        gbc.writeMem(0x3144, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4e3d, gbc.sp());
        EXPECT(0x3145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 023D
        gbc.setState(0x9961, 0xdbf5, 0xec60, 0xf583, 0x381b, 0x4210, 0x0, 0x0);
        gbc.writeMem(0x9961, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdbf5, gbc.sp());
        EXPECT(0x9962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9961));
        // 97 023E
        gbc.setState(0x8fc2, 0x1800, 0x94b0, 0x71b2, 0xa777, 0xf411, 0x0, 0x1);
        gbc.writeMem(0x8fc2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1800, gbc.sp());
        EXPECT(0x8fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8fc2));
        // 97 023F
        gbc.setState(0x3759, 0x8bac, 0x61b0, 0xae19, 0x3554, 0x1c08, 0x1, 0x1);
        gbc.writeMem(0x3759, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8bac, gbc.sp());
        EXPECT(0x375a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0240
        gbc.setState(0x43eb, 0x6608, 0xfee0, 0x3ab6, 0x7934, 0x9842, 0x0, 0x0);
        gbc.writeMem(0x43eb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6608, gbc.sp());
        EXPECT(0x43ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0241
        gbc.setState(0x83d2, 0xacfb, 0x1710, 0x2f9a, 0x5acb, 0x56cf, 0x1, 0x1);
        gbc.writeMem(0x83d2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xacfb, gbc.sp());
        EXPECT(0x83d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x83d2));
        // 97 0242
        gbc.setState(0x31aa, 0xd14, 0x3170, 0x1539, 0xa63a, 0x20f0, 0x1, 0x1);
        gbc.writeMem(0x31aa, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd14, gbc.sp());
        EXPECT(0x31ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0243
        gbc.setState(0x273b, 0xf58f, 0x2770, 0x3700, 0xea9a, 0x2ce7, 0x0, 0x0);
        gbc.writeMem(0x273b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf58f, gbc.sp());
        EXPECT(0x273c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0244
        gbc.setState(0x9e98, 0x6b54, 0x5ef0, 0xa532, 0x9b3e, 0x43, 0x0, 0x0);
        gbc.writeMem(0x9e98, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6b54, gbc.sp());
        EXPECT(0x9e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9e98));
        // 97 0245
        gbc.setState(0x596, 0xe16a, 0x9120, 0x47c9, 0xbc78, 0xf10e, 0x0, 0x1);
        gbc.writeMem(0x596, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe16a, gbc.sp());
        EXPECT(0x597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0246
        gbc.setState(0xa461, 0x1566, 0x8ba0, 0xcd60, 0x9351, 0xfcf6, 0x0, 0x1);
        gbc.writeMem(0xa461, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1566, gbc.sp());
        EXPECT(0xa462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa461));
        // 97 0247
        gbc.setState(0x8b82, 0x879, 0x4180, 0x565e, 0xb781, 0xfe8d, 0x1, 0x1);
        gbc.writeMem(0x8b82, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x879, gbc.sp());
        EXPECT(0x8b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8b82));
        // 97 0248
        gbc.setState(0x7048, 0x6708, 0x7c50, 0x2ffd, 0x1ac1, 0x4811, 0x0, 0x0);
        gbc.writeMem(0x7048, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6708, gbc.sp());
        EXPECT(0x7049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0249
        gbc.setState(0x1035, 0x4dae, 0xb0e0, 0x9094, 0x46c5, 0x235c, 0x1, 0x0);
        gbc.writeMem(0x1035, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4dae, gbc.sp());
        EXPECT(0x1036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 024A
        gbc.setState(0x4e3a, 0x1f49, 0x2500, 0xc944, 0xef71, 0xe6b, 0x0, 0x1);
        gbc.writeMem(0x4e3a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1f49, gbc.sp());
        EXPECT(0x4e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 024B
        gbc.setState(0xd10d, 0x2693, 0x650, 0xb1ec, 0x7737, 0x1c79, 0x1, 0x1);
        gbc.writeMem(0xd10d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2693, gbc.sp());
        EXPECT(0xd10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd10d));
        // 97 024C
        gbc.setState(0x790, 0xb949, 0xd040, 0x3f55, 0xb6ac, 0xb4ea, 0x1, 0x0);
        gbc.writeMem(0x790, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb949, gbc.sp());
        EXPECT(0x791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 024E
        gbc.setState(0x7ef5, 0xe104, 0xf310, 0x38, 0x264a, 0xb29d, 0x1, 0x0);
        gbc.writeMem(0x7ef5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe104, gbc.sp());
        EXPECT(0x7ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0251
        gbc.setState(0x2938, 0x600f, 0x9ab0, 0xb7e3, 0x3dee, 0x6ff7, 0x1, 0x0);
        gbc.writeMem(0x2938, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x600f, gbc.sp());
        EXPECT(0x2939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0252
        gbc.setState(0xff6, 0x953a, 0x6ee0, 0x5601, 0x6387, 0x74a0, 0x0, 0x0);
        gbc.writeMem(0xff6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x953a, gbc.sp());
        EXPECT(0xff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0253
        gbc.setState(0x3461, 0x3d00, 0x1c60, 0x154e, 0x281e, 0xcfc1, 0x1, 0x0);
        gbc.writeMem(0x3461, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3d00, gbc.sp());
        EXPECT(0x3462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0254
        gbc.setState(0x7e35, 0xf8bf, 0xbf40, 0x4290, 0x59a8, 0x148d, 0x1, 0x1);
        gbc.writeMem(0x7e35, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf8bf, gbc.sp());
        EXPECT(0x7e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0255
        gbc.setState(0x3cde, 0xcfa2, 0x6600, 0x9e3d, 0x3704, 0xd9d2, 0x1, 0x0);
        gbc.writeMem(0x3cde, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcfa2, gbc.sp());
        EXPECT(0x3cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0256
        gbc.setState(0xe2ef, 0x6367, 0x8ba0, 0xa138, 0xd76e, 0xa97c, 0x0, 0x0);
        gbc.writeMem(0xe2ef, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6367, gbc.sp());
        EXPECT(0xe2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe2ef));
        // 97 0257
        gbc.setState(0xecc7, 0x607e, 0xa7d0, 0xc6b9, 0x62cc, 0x91a0, 0x1, 0x0);
        gbc.writeMem(0xecc7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x607e, gbc.sp());
        EXPECT(0xecc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xecc7));
        // 97 0258
        gbc.setState(0x14cd, 0xe98a, 0x2f40, 0x7bfd, 0x318b, 0x22dd, 0x1, 0x0);
        gbc.writeMem(0x14cd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe98a, gbc.sp());
        EXPECT(0x14ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0259
        gbc.setState(0x2ff0, 0x1ab6, 0x63a0, 0x9682, 0x1321, 0xead9, 0x0, 0x1);
        gbc.writeMem(0x2ff0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1ab6, gbc.sp());
        EXPECT(0x2ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 025A
        gbc.setState(0xd057, 0x6360, 0xf490, 0x6506, 0x1a75, 0xc1c6, 0x0, 0x1);
        gbc.writeMem(0xd057, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6360, gbc.sp());
        EXPECT(0xd058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd057));
        // 97 025B
        gbc.setState(0x80e0, 0xdf2c, 0xe7c0, 0x74ad, 0xa5b0, 0x6a1b, 0x0, 0x1);
        gbc.writeMem(0x80e0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdf2c, gbc.sp());
        EXPECT(0x80e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x80e0));
        // 97 025C
        gbc.setState(0x634e, 0xcc14, 0x8c00, 0x7394, 0x358e, 0xef9a, 0x0, 0x0);
        gbc.writeMem(0x634e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcc14, gbc.sp());
        EXPECT(0x634f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 025D
        gbc.setState(0xa451, 0x7463, 0x560, 0x3cd, 0x584b, 0xa8c0, 0x1, 0x1);
        gbc.writeMem(0xa451, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7463, gbc.sp());
        EXPECT(0xa452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa451));
        // 97 025E
        gbc.setState(0x85a7, 0x15e4, 0x1f50, 0xa505, 0xdce, 0x395c, 0x0, 0x1);
        gbc.writeMem(0x85a7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x15e4, gbc.sp());
        EXPECT(0x85a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x85a7));
        // 97 025F
        gbc.setState(0x1285, 0x4896, 0x3690, 0x756c, 0xd94b, 0x98d9, 0x0, 0x0);
        gbc.writeMem(0x1285, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4896, gbc.sp());
        EXPECT(0x1286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0260
        gbc.setState(0x7852, 0xd116, 0xc60, 0x34dc, 0xe01b, 0x7f4c, 0x1, 0x1);
        gbc.writeMem(0x7852, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd116, gbc.sp());
        EXPECT(0x7853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0261
        gbc.setState(0x1f7, 0xec89, 0x9400, 0xd69, 0x8b67, 0xf10, 0x0, 0x1);
        gbc.writeMem(0x1f7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xec89, gbc.sp());
        EXPECT(0x1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0263
        gbc.setState(0x9a2b, 0x974b, 0xdaf0, 0x7837, 0xdf55, 0x67aa, 0x0, 0x0);
        gbc.writeMem(0x9a2b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x974b, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9a2b));
        // 97 0264
        gbc.setState(0x4743, 0x7ee9, 0x8950, 0xa126, 0xef2d, 0xe952, 0x0, 0x1);
        gbc.writeMem(0x4743, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7ee9, gbc.sp());
        EXPECT(0x4744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0265
        gbc.setState(0x9ee8, 0xe5ae, 0x3e20, 0x83cb, 0x84a7, 0x44b9, 0x1, 0x0);
        gbc.writeMem(0x9ee8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe5ae, gbc.sp());
        EXPECT(0x9ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9ee8));
        // 97 0266
        gbc.setState(0x4269, 0x376b, 0x8ef0, 0x6461, 0x205f, 0x418b, 0x0, 0x1);
        gbc.writeMem(0x4269, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x376b, gbc.sp());
        EXPECT(0x426a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0267
        gbc.setState(0xc56e, 0xa32c, 0x8d30, 0x99a4, 0x61e4, 0xca3d, 0x0, 0x0);
        gbc.writeMem(0xc56e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa32c, gbc.sp());
        EXPECT(0xc56f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc56e));
        // 97 0268
        gbc.setState(0xcf8d, 0x4582, 0xf20, 0x8c3, 0x9606, 0x8b31, 0x1, 0x0);
        gbc.writeMem(0xcf8d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4582, gbc.sp());
        EXPECT(0xcf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcf8d));
        // 97 0269
        gbc.setState(0xbf71, 0x4fd1, 0xaa00, 0x641d, 0x19eb, 0x5932, 0x1, 0x1);
        gbc.writeMem(0xbf71, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4fd1, gbc.sp());
        EXPECT(0xbf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbf71));
        // 97 026A
        gbc.setState(0x43c9, 0xd90e, 0x7bc0, 0x5538, 0x27d5, 0x1ce7, 0x1, 0x1);
        gbc.writeMem(0x43c9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd90e, gbc.sp());
        EXPECT(0x43ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 026B
        gbc.setState(0x81cf, 0xa8d1, 0x8d90, 0x5cc2, 0xb869, 0x71bc, 0x0, 0x0);
        gbc.writeMem(0x81cf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa8d1, gbc.sp());
        EXPECT(0x81d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x81cf));
        // 97 026C
        gbc.setState(0xc870, 0xb730, 0xa7f0, 0x7380, 0xbba1, 0x28ba, 0x0, 0x1);
        gbc.writeMem(0xc870, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb730, gbc.sp());
        EXPECT(0xc871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc870));
        // 97 026D
        gbc.setState(0xdd93, 0x334f, 0x2910, 0x81d9, 0x814f, 0x7c7a, 0x1, 0x1);
        gbc.writeMem(0xdd93, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x334f, gbc.sp());
        EXPECT(0xdd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdd93));
        // 97 026E
        gbc.setState(0x6ccd, 0x7f96, 0x20a0, 0xd78, 0x852b, 0xa228, 0x1, 0x0);
        gbc.writeMem(0x6ccd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7f96, gbc.sp());
        EXPECT(0x6cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 026F
        gbc.setState(0xbb85, 0x8bdf, 0x8070, 0x1e0b, 0x388c, 0xd535, 0x0, 0x0);
        gbc.writeMem(0xbb85, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8bdf, gbc.sp());
        EXPECT(0xbb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbb85));
        // 97 0270
        gbc.setState(0xe43, 0x5fa, 0x1da0, 0xb285, 0x622b, 0x6c42, 0x1, 0x1);
        gbc.writeMem(0xe43, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5fa, gbc.sp());
        EXPECT(0xe44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0272
        gbc.setState(0xe16c, 0xcbf4, 0x72b0, 0x279d, 0xca33, 0x7d8c, 0x1, 0x0);
        gbc.writeMem(0xe16c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcbf4, gbc.sp());
        EXPECT(0xe16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe16c));
        // 97 0274
        gbc.setState(0x2079, 0xc620, 0xee90, 0x7ec2, 0x1033, 0x7a6d, 0x1, 0x1);
        gbc.writeMem(0x2079, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc620, gbc.sp());
        EXPECT(0x207a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0275
        gbc.setState(0x76cc, 0xd724, 0x7550, 0xf3e9, 0x5aba, 0xe2c6, 0x0, 0x1);
        gbc.writeMem(0x76cc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd724, gbc.sp());
        EXPECT(0x76cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0276
        gbc.setState(0x62a2, 0x7511, 0xc850, 0x1229, 0xeb21, 0x70e, 0x0, 0x0);
        gbc.writeMem(0x62a2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7511, gbc.sp());
        EXPECT(0x62a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0277
        gbc.setState(0x78ec, 0xa9b5, 0xce30, 0x9724, 0x823e, 0x422f, 0x1, 0x0);
        gbc.writeMem(0x78ec, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa9b5, gbc.sp());
        EXPECT(0x78ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0278
        gbc.setState(0x375d, 0x5825, 0x3910, 0x2160, 0x90d0, 0x9a91, 0x0, 0x1);
        gbc.writeMem(0x375d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5825, gbc.sp());
        EXPECT(0x375e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0279
        gbc.setState(0xbd19, 0x9fe0, 0x1c80, 0xbe63, 0xac47, 0x1320, 0x0, 0x1);
        gbc.writeMem(0xbd19, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9fe0, gbc.sp());
        EXPECT(0xbd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbd19));
        // 97 027A
        gbc.setState(0x2b53, 0x35e5, 0x5210, 0xeaa4, 0x8093, 0x7b8d, 0x1, 0x0);
        gbc.writeMem(0x2b53, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x35e5, gbc.sp());
        EXPECT(0x2b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 027B
        gbc.setState(0x302a, 0x8000, 0xf320, 0x52cc, 0x1a94, 0xbae6, 0x1, 0x0);
        gbc.writeMem(0x302a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8000, gbc.sp());
        EXPECT(0x302b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 027D
        gbc.setState(0x9aaf, 0xcb8b, 0xbaa0, 0x2948, 0x8925, 0xf460, 0x1, 0x0);
        gbc.writeMem(0x9aaf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcb8b, gbc.sp());
        EXPECT(0x9ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9aaf));
        // 97 027E
        gbc.setState(0x258e, 0xa88b, 0xf0d0, 0xbd85, 0x66ed, 0x5c77, 0x1, 0x0);
        gbc.writeMem(0x258e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa88b, gbc.sp());
        EXPECT(0x258f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 027F
        gbc.setState(0xe6f3, 0xf33a, 0x2630, 0x2993, 0xd47c, 0xda11, 0x1, 0x1);
        gbc.writeMem(0xe6f3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf33a, gbc.sp());
        EXPECT(0xe6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe6f3));
        // 97 0280
        gbc.setState(0x1ffc, 0xd3ab, 0xf750, 0x30a2, 0xea61, 0xe604, 0x0, 0x0);
        gbc.writeMem(0x1ffc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd3ab, gbc.sp());
        EXPECT(0x1ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0281
        gbc.setState(0x55a1, 0xdd30, 0xc470, 0x7e6, 0x2435, 0x8e23, 0x1, 0x0);
        gbc.writeMem(0x55a1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdd30, gbc.sp());
        EXPECT(0x55a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0282
        gbc.setState(0x3db7, 0xd412, 0xfad0, 0xcfd5, 0x42ee, 0x2f7b, 0x0, 0x1);
        gbc.writeMem(0x3db7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd412, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0283
        gbc.setState(0x299c, 0x4cda, 0xb140, 0x9510, 0xc8c1, 0xde21, 0x0, 0x1);
        gbc.writeMem(0x299c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4cda, gbc.sp());
        EXPECT(0x299d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0284
        gbc.setState(0xd269, 0xcd9b, 0xd2c0, 0x5074, 0xc86a, 0x94af, 0x0, 0x1);
        gbc.writeMem(0xd269, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcd9b, gbc.sp());
        EXPECT(0xd26a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd269));
        // 97 0285
        gbc.setState(0x705c, 0x82f7, 0x4b70, 0x5ca0, 0xd7eb, 0x9c88, 0x0, 0x1);
        gbc.writeMem(0x705c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x82f7, gbc.sp());
        EXPECT(0x705d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0286
        gbc.setState(0x4a78, 0x5130, 0x4f50, 0xc3b7, 0x8f2f, 0x97b0, 0x0, 0x0);
        gbc.writeMem(0x4a78, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5130, gbc.sp());
        EXPECT(0x4a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0287
        gbc.setState(0xe3f2, 0x4ef4, 0xc020, 0x6f21, 0x904c, 0x21bd, 0x1, 0x0);
        gbc.writeMem(0xe3f2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4ef4, gbc.sp());
        EXPECT(0xe3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe3f2));
        // 97 0288
        gbc.setState(0xbfb6, 0x6307, 0x4d40, 0x2178, 0x2c27, 0x5b1c, 0x1, 0x0);
        gbc.writeMem(0xbfb6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6307, gbc.sp());
        EXPECT(0xbfb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbfb6));
        // 97 0289
        gbc.setState(0xc15e, 0x5e04, 0xa2a0, 0xe5c6, 0x3069, 0x2b16, 0x1, 0x0);
        gbc.writeMem(0xc15e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5e04, gbc.sp());
        EXPECT(0xc15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc15e));
        // 97 028A
        gbc.setState(0x79a6, 0xcc09, 0x74b0, 0x7737, 0x7938, 0x8787, 0x1, 0x0);
        gbc.writeMem(0x79a6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcc09, gbc.sp());
        EXPECT(0x79a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 028B
        gbc.setState(0xd090, 0xcec2, 0xa810, 0xd7a0, 0xcc71, 0xaba8, 0x1, 0x0);
        gbc.writeMem(0xd090, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcec2, gbc.sp());
        EXPECT(0xd091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd090));
        // 97 028C
        gbc.setState(0x5a0e, 0xc850, 0xa290, 0x4d32, 0xfb1e, 0xf34f, 0x0, 0x0);
        gbc.writeMem(0x5a0e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc850, gbc.sp());
        EXPECT(0x5a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 028D
        gbc.setState(0x36d7, 0xa717, 0x1d10, 0x498a, 0x4e2a, 0x7328, 0x0, 0x0);
        gbc.writeMem(0x36d7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa717, gbc.sp());
        EXPECT(0x36d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 028E
        gbc.setState(0x6794, 0x320a, 0xeb70, 0x246e, 0xa836, 0xd2ab, 0x1, 0x1);
        gbc.writeMem(0x6794, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x320a, gbc.sp());
        EXPECT(0x6795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 028F
        gbc.setState(0x3e1f, 0xf4ec, 0x9b80, 0xf23, 0x7a77, 0x3193, 0x0, 0x1);
        gbc.writeMem(0x3e1f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf4ec, gbc.sp());
        EXPECT(0x3e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0290
        gbc.setState(0x7708, 0x7f0a, 0xd8e0, 0x416c, 0xa4fb, 0x1725, 0x1, 0x1);
        gbc.writeMem(0x7708, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7f0a, gbc.sp());
        EXPECT(0x7709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0291
        gbc.setState(0x194a, 0xf60b, 0x8030, 0xad7d, 0xba39, 0x9993, 0x0, 0x1);
        gbc.writeMem(0x194a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf60b, gbc.sp());
        EXPECT(0x194b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0292
        gbc.setState(0xeb0b, 0x3681, 0xf180, 0xe61e, 0x158, 0x44ac, 0x0, 0x1);
        gbc.writeMem(0xeb0b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3681, gbc.sp());
        EXPECT(0xeb0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeb0b));
        // 97 0293
        gbc.setState(0xe52b, 0x32c5, 0xd2b0, 0xfcc1, 0xe619, 0x8060, 0x0, 0x1);
        gbc.writeMem(0xe52b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x32c5, gbc.sp());
        EXPECT(0xe52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe52b));
        // 97 0294
        gbc.setState(0xce0f, 0xf77b, 0xd710, 0xbcb6, 0x7fd5, 0x9534, 0x1, 0x0);
        gbc.writeMem(0xce0f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf77b, gbc.sp());
        EXPECT(0xce10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xce0f));
        // 97 0295
        gbc.setState(0x7147, 0xb20, 0x3b0, 0x9e8e, 0x4fc8, 0x6e43, 0x0, 0x0);
        gbc.writeMem(0x7147, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb20, gbc.sp());
        EXPECT(0x7148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0296
        gbc.setState(0x3987, 0xdbec, 0x6a60, 0x9afb, 0x3112, 0x794f, 0x1, 0x0);
        gbc.writeMem(0x3987, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdbec, gbc.sp());
        EXPECT(0x3988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0297
        gbc.setState(0x9d8c, 0x768f, 0x2320, 0xe587, 0x3b6c, 0xe4d3, 0x1, 0x0);
        gbc.writeMem(0x9d8c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x768f, gbc.sp());
        EXPECT(0x9d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9d8c));
        // 97 0298
        gbc.setState(0xb716, 0x8b2e, 0xe950, 0x9cee, 0x4c5b, 0x72f7, 0x0, 0x1);
        gbc.writeMem(0xb716, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8b2e, gbc.sp());
        EXPECT(0xb717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb716));
        // 97 029A
        gbc.setState(0x408b, 0xeaab, 0x4fc0, 0xc421, 0xa501, 0xab7e, 0x1, 0x1);
        gbc.writeMem(0x408b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xeaab, gbc.sp());
        EXPECT(0x408c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 029C
        gbc.setState(0x8703, 0x7ada, 0xddc0, 0xdbe0, 0x5761, 0x6961, 0x0, 0x1);
        gbc.writeMem(0x8703, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7ada, gbc.sp());
        EXPECT(0x8704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8703));
        // 97 029D
        gbc.setState(0x83a0, 0x671f, 0x9f60, 0x19b2, 0xb8df, 0x1a07, 0x0, 0x1);
        gbc.writeMem(0x83a0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x671f, gbc.sp());
        EXPECT(0x83a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x83a0));
        // 97 029E
        gbc.setState(0xd6d, 0x9326, 0x5730, 0x365a, 0xb71f, 0xa937, 0x1, 0x0);
        gbc.writeMem(0xd6d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9326, gbc.sp());
        EXPECT(0xd6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 029F
        gbc.setState(0x85c, 0x7933, 0xdd40, 0xbf28, 0x7692, 0x3cae, 0x1, 0x0);
        gbc.writeMem(0x85c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7933, gbc.sp());
        EXPECT(0x85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02A0
        gbc.setState(0x4728, 0xfa06, 0x8570, 0x1b9d, 0x87ad, 0xd91d, 0x0, 0x0);
        gbc.writeMem(0x4728, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfa06, gbc.sp());
        EXPECT(0x4729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02A1
        gbc.setState(0xcd3e, 0x8d3c, 0xb340, 0x2fe1, 0x8c79, 0xe9d2, 0x1, 0x0);
        gbc.writeMem(0xcd3e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8d3c, gbc.sp());
        EXPECT(0xcd3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcd3e));
        // 97 02A2
        gbc.setState(0x2411, 0x1808, 0x7300, 0x7d2d, 0xc91d, 0x2158, 0x1, 0x1);
        gbc.writeMem(0x2411, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1808, gbc.sp());
        EXPECT(0x2412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02A3
        gbc.setState(0xc7d, 0x9be3, 0x52d0, 0xe6e9, 0xdf92, 0x678f, 0x1, 0x0);
        gbc.writeMem(0xc7d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9be3, gbc.sp());
        EXPECT(0xc7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02A4
        gbc.setState(0x471f, 0x440f, 0x9210, 0x71e1, 0x5ebf, 0xc7cb, 0x1, 0x0);
        gbc.writeMem(0x471f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x440f, gbc.sp());
        EXPECT(0x4720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02A5
        gbc.setState(0xba16, 0xc766, 0xfa60, 0x5fe5, 0xbe8e, 0x5bde, 0x0, 0x1);
        gbc.writeMem(0xba16, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc766, gbc.sp());
        EXPECT(0xba17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xba16));
        // 97 02A6
        gbc.setState(0x7fc3, 0x8c85, 0x8960, 0x4fa1, 0x55dd, 0x8cba, 0x1, 0x1);
        gbc.writeMem(0x7fc3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8c85, gbc.sp());
        EXPECT(0x7fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02A7
        gbc.setState(0x99ec, 0x9cae, 0x7110, 0xa037, 0x2d8e, 0x660e, 0x0, 0x0);
        gbc.writeMem(0x99ec, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9cae, gbc.sp());
        EXPECT(0x99ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x99ec));
        // 97 02A8
        gbc.setState(0x83cb, 0x4769, 0xc9f0, 0xfa34, 0x8a03, 0x3e40, 0x0, 0x1);
        gbc.writeMem(0x83cb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4769, gbc.sp());
        EXPECT(0x83cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x83cb));
        // 97 02A9
        gbc.setState(0xb4dd, 0x8640, 0x4980, 0xbcf0, 0x3e1d, 0x830a, 0x0, 0x0);
        gbc.writeMem(0xb4dd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8640, gbc.sp());
        EXPECT(0xb4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb4dd));
        // 97 02AA
        gbc.setState(0x7d40, 0x6016, 0x3df0, 0x5dca, 0xc448, 0xc607, 0x1, 0x1);
        gbc.writeMem(0x7d40, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6016, gbc.sp());
        EXPECT(0x7d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02AB
        gbc.setState(0x79b5, 0x309f, 0x7fc0, 0x64a3, 0xf2d1, 0xb6ba, 0x1, 0x0);
        gbc.writeMem(0x79b5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x309f, gbc.sp());
        EXPECT(0x79b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02AC
        gbc.setState(0x7a22, 0x26b5, 0x4330, 0x57ed, 0xf298, 0x9d92, 0x1, 0x1);
        gbc.writeMem(0x7a22, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x26b5, gbc.sp());
        EXPECT(0x7a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02AD
        gbc.setState(0xe35d, 0x84ac, 0xcf60, 0x1036, 0xe95c, 0xe33e, 0x0, 0x1);
        gbc.writeMem(0xe35d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x84ac, gbc.sp());
        EXPECT(0xe35e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe35d));
        // 97 02AE
        gbc.setState(0x8aaa, 0x3b47, 0xf870, 0x6495, 0x78f2, 0x6b6d, 0x0, 0x1);
        gbc.writeMem(0x8aaa, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3b47, gbc.sp());
        EXPECT(0x8aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8aaa));
        // 97 02AF
        gbc.setState(0xdd32, 0xc70f, 0xac80, 0xd168, 0x1326, 0xd886, 0x0, 0x1);
        gbc.writeMem(0xdd32, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc70f, gbc.sp());
        EXPECT(0xdd33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdd32));
        // 97 02B0
        gbc.setState(0xc0c1, 0x4f8f, 0x3120, 0x9260, 0x8045, 0x730f, 0x1, 0x0);
        gbc.writeMem(0xc0c1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4f8f, gbc.sp());
        EXPECT(0xc0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc0c1));
        // 97 02B1
        gbc.setState(0x9fd9, 0x7831, 0xd1e0, 0x265c, 0x85d2, 0xe73f, 0x0, 0x1);
        gbc.writeMem(0x9fd9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7831, gbc.sp());
        EXPECT(0x9fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9fd9));
        // 97 02B2
        gbc.setState(0xc1e8, 0x7f2b, 0x51f0, 0x460e, 0xddd8, 0x2f3e, 0x0, 0x1);
        gbc.writeMem(0xc1e8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7f2b, gbc.sp());
        EXPECT(0xc1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc1e8));
        // 97 02B4
        gbc.setState(0x3d5d, 0x279, 0x9070, 0xaa5, 0x90da, 0xa260, 0x1, 0x1);
        gbc.writeMem(0x3d5d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x279, gbc.sp());
        EXPECT(0x3d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02B5
        gbc.setState(0x6090, 0x601f, 0xebc0, 0x2b04, 0xa4f2, 0x4bb2, 0x1, 0x0);
        gbc.writeMem(0x6090, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x601f, gbc.sp());
        EXPECT(0x6091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02B6
        gbc.setState(0xb23b, 0xa257, 0x3b70, 0xfec1, 0x93ef, 0x7fdc, 0x0, 0x0);
        gbc.writeMem(0xb23b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa257, gbc.sp());
        EXPECT(0xb23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb23b));
        // 97 02B7
        gbc.setState(0xbb8a, 0xc3b4, 0xc510, 0x96b1, 0x1f92, 0xfd8d, 0x1, 0x1);
        gbc.writeMem(0xbb8a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc3b4, gbc.sp());
        EXPECT(0xbb8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbb8a));
        // 97 02B8
        gbc.setState(0x9c49, 0x7898, 0x97e0, 0xd3a9, 0xd7e7, 0x6fc3, 0x1, 0x1);
        gbc.writeMem(0x9c49, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7898, gbc.sp());
        EXPECT(0x9c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9c49));
        // 97 02B9
        gbc.setState(0xb5d2, 0x3a1d, 0xb750, 0x3478, 0x268e, 0x3feb, 0x1, 0x1);
        gbc.writeMem(0xb5d2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3a1d, gbc.sp());
        EXPECT(0xb5d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb5d2));
        // 97 02BA
        gbc.setState(0xb4d5, 0x3319, 0xea90, 0xf4d0, 0xee53, 0x27db, 0x0, 0x1);
        gbc.writeMem(0xb4d5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3319, gbc.sp());
        EXPECT(0xb4d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb4d5));
        // 97 02BB
        gbc.setState(0x2469, 0x76d2, 0x470, 0x3805, 0x42d7, 0x27f5, 0x1, 0x1);
        gbc.writeMem(0x2469, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x76d2, gbc.sp());
        EXPECT(0x246a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02BC
        gbc.setState(0xaacd, 0xf4b5, 0xffc0, 0x9252, 0x8220, 0xd4ba, 0x1, 0x0);
        gbc.writeMem(0xaacd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf4b5, gbc.sp());
        EXPECT(0xaace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaacd));
        // 97 02BD
        gbc.setState(0xce39, 0x2bd8, 0xe190, 0xc0cd, 0xbd14, 0x6fd, 0x0, 0x0);
        gbc.writeMem(0xce39, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2bd8, gbc.sp());
        EXPECT(0xce3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xce39));
        // 97 02BE
        gbc.setState(0xb4e6, 0x176d, 0xb080, 0xfe1d, 0x2321, 0xfaf, 0x0, 0x0);
        gbc.writeMem(0xb4e6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x176d, gbc.sp());
        EXPECT(0xb4e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb4e6));
        // 97 02BF
        gbc.setState(0x9506, 0x2ddf, 0xd530, 0x75e5, 0x3e64, 0x661b, 0x1, 0x0);
        gbc.writeMem(0x9506, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2ddf, gbc.sp());
        EXPECT(0x9507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9506));
        // 97 02C0
        gbc.setState(0xeddc, 0x6a74, 0xfb00, 0xc75a, 0x6db5, 0x2b5d, 0x1, 0x0);
        gbc.writeMem(0xeddc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6a74, gbc.sp());
        EXPECT(0xeddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeddc));
        // 97 02C1
        gbc.setState(0xd2de, 0x80c, 0x6e10, 0x57a2, 0x6863, 0xa6ca, 0x1, 0x1);
        gbc.writeMem(0xd2de, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x80c, gbc.sp());
        EXPECT(0xd2df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd2de));
        // 97 02C2
        gbc.setState(0xb7fe, 0x3b55, 0x5480, 0xe914, 0x58e4, 0x1bfe, 0x1, 0x0);
        gbc.writeMem(0xb7fe, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3b55, gbc.sp());
        EXPECT(0xb7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb7fe));
        // 97 02C3
        gbc.setState(0x66cf, 0xac0a, 0xc4c0, 0x10c7, 0x4cf, 0xb478, 0x0, 0x0);
        gbc.writeMem(0x66cf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xac0a, gbc.sp());
        EXPECT(0x66d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02C4
        gbc.setState(0x6e57, 0x616, 0xeca0, 0x88c5, 0x2eb1, 0x4a64, 0x1, 0x0);
        gbc.writeMem(0x6e57, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x616, gbc.sp());
        EXPECT(0x6e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02C5
        gbc.setState(0x237a, 0x803c, 0x7ae0, 0xe7fa, 0x2a2, 0x644d, 0x0, 0x1);
        gbc.writeMem(0x237a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x803c, gbc.sp());
        EXPECT(0x237b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02C6
        gbc.setState(0xe274, 0x5c4a, 0xbef0, 0x53d6, 0xd740, 0x3085, 0x0, 0x1);
        gbc.writeMem(0xe274, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5c4a, gbc.sp());
        EXPECT(0xe275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe274));
        // 97 02C7
        gbc.setState(0x9138, 0x5ae9, 0x45a0, 0xfce9, 0x91a4, 0xa366, 0x0, 0x0);
        gbc.writeMem(0x9138, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5ae9, gbc.sp());
        EXPECT(0x9139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9138));
        // 97 02C8
        gbc.setState(0x2b64, 0x15ba, 0x7b90, 0x5983, 0xa9b0, 0x60b8, 0x1, 0x0);
        gbc.writeMem(0x2b64, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x15ba, gbc.sp());
        EXPECT(0x2b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02C9
        gbc.setState(0xc25c, 0x5610, 0xd290, 0xa4d3, 0xbb3b, 0xead5, 0x0, 0x0);
        gbc.writeMem(0xc25c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5610, gbc.sp());
        EXPECT(0xc25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc25c));
        // 97 02CA
        gbc.setState(0x8f9d, 0x6660, 0xf900, 0xc484, 0x4001, 0xc330, 0x1, 0x1);
        gbc.writeMem(0x8f9d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6660, gbc.sp());
        EXPECT(0x8f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8f9d));
        // 97 02CB
        gbc.setState(0x2e5a, 0xcbd1, 0x50f0, 0x8126, 0x41c8, 0x9323, 0x0, 0x0);
        gbc.writeMem(0x2e5a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcbd1, gbc.sp());
        EXPECT(0x2e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02CC
        gbc.setState(0x5b4d, 0xa9d9, 0xc790, 0xbecc, 0x24f8, 0x5ab3, 0x0, 0x1);
        gbc.writeMem(0x5b4d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa9d9, gbc.sp());
        EXPECT(0x5b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02CD
        gbc.setState(0xef86, 0x4c6f, 0x280, 0x5e3c, 0x8be3, 0xc013, 0x1, 0x1);
        gbc.writeMem(0xef86, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4c6f, gbc.sp());
        EXPECT(0xef87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xef86));
        // 97 02CE
        gbc.setState(0x3b94, 0x29f0, 0x97a0, 0x7be0, 0xd744, 0x7c0e, 0x1, 0x0);
        gbc.writeMem(0x3b94, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x29f0, gbc.sp());
        EXPECT(0x3b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02CF
        gbc.setState(0x7304, 0x42d8, 0x2b30, 0xf511, 0xbbbb, 0x3721, 0x1, 0x0);
        gbc.writeMem(0x7304, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x42d8, gbc.sp());
        EXPECT(0x7305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02D1
        gbc.setState(0xc41, 0xf67c, 0xd170, 0x4cec, 0x24b0, 0xa309, 0x0, 0x1);
        gbc.writeMem(0xc41, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf67c, gbc.sp());
        EXPECT(0xc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02D2
        gbc.setState(0x8b9c, 0x7c1, 0x70b0, 0xf47b, 0x30e0, 0x6181, 0x0, 0x0);
        gbc.writeMem(0x8b9c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7c1, gbc.sp());
        EXPECT(0x8b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8b9c));
        // 97 02D3
        gbc.setState(0xb0b3, 0xd20d, 0x8a30, 0x75aa, 0xcd59, 0x49ec, 0x0, 0x1);
        gbc.writeMem(0xb0b3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd20d, gbc.sp());
        EXPECT(0xb0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb0b3));
        // 97 02D5
        gbc.setState(0x706, 0x550d, 0xa740, 0x4fc0, 0x43d7, 0x24f2, 0x1, 0x0);
        gbc.writeMem(0x706, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x550d, gbc.sp());
        EXPECT(0x707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02D6
        gbc.setState(0x3fc, 0x59f2, 0xda70, 0xf664, 0x9cd9, 0x5278, 0x1, 0x0);
        gbc.writeMem(0x3fc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x59f2, gbc.sp());
        EXPECT(0x3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02D7
        gbc.setState(0x4c1e, 0xb142, 0xd850, 0xe068, 0x655d, 0xe50d, 0x1, 0x0);
        gbc.writeMem(0x4c1e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb142, gbc.sp());
        EXPECT(0x4c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02D8
        gbc.setState(0xe8b8, 0x7143, 0xe020, 0xb34, 0xd245, 0x3576, 0x1, 0x1);
        gbc.writeMem(0xe8b8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7143, gbc.sp());
        EXPECT(0xe8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe8b8));
        // 97 02D9
        gbc.setState(0x7784, 0x7741, 0xe900, 0x3d30, 0x8b2f, 0x6de6, 0x0, 0x0);
        gbc.writeMem(0x7784, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7741, gbc.sp());
        EXPECT(0x7785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02DA
        gbc.setState(0x450c, 0x9e31, 0xa1a0, 0xf123, 0x3a4f, 0xa72c, 0x0, 0x0);
        gbc.writeMem(0x450c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9e31, gbc.sp());
        EXPECT(0x450d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02DB
        gbc.setState(0x4599, 0xa6c5, 0xdf50, 0x86a2, 0x1d59, 0xbeb, 0x0, 0x1);
        gbc.writeMem(0x4599, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa6c5, gbc.sp());
        EXPECT(0x459a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02DC
        gbc.setState(0x6e99, 0x7e35, 0x59b0, 0x4292, 0xb761, 0x54c, 0x0, 0x1);
        gbc.writeMem(0x6e99, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7e35, gbc.sp());
        EXPECT(0x6e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02DD
        gbc.setState(0xc748, 0x4935, 0x69e0, 0x782c, 0xc4b8, 0xc124, 0x1, 0x0);
        gbc.writeMem(0xc748, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4935, gbc.sp());
        EXPECT(0xc749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc748));
        // 97 02DE
        gbc.setState(0x63cd, 0x915a, 0x46b0, 0xb1e, 0x85fc, 0xf702, 0x1, 0x1);
        gbc.writeMem(0x63cd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x915a, gbc.sp());
        EXPECT(0x63ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02DF
        gbc.setState(0x2108, 0x51ad, 0xaf10, 0x135c, 0xcf92, 0x2bc, 0x0, 0x1);
        gbc.writeMem(0x2108, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x51ad, gbc.sp());
        EXPECT(0x2109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02E0
        gbc.setState(0xab41, 0x2631, 0x2bb0, 0xcfac, 0x2a45, 0xc06d, 0x0, 0x1);
        gbc.writeMem(0xab41, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2631, gbc.sp());
        EXPECT(0xab42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xab41));
        // 97 02E2
        gbc.setState(0xaaf6, 0xf362, 0x3a10, 0x2051, 0xbc39, 0x9e5d, 0x1, 0x1);
        gbc.writeMem(0xaaf6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf362, gbc.sp());
        EXPECT(0xaaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaaf6));
        // 97 02E3
        gbc.setState(0xbc67, 0x71d6, 0x2480, 0xbe15, 0x4e7a, 0xc6a, 0x1, 0x1);
        gbc.writeMem(0xbc67, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x71d6, gbc.sp());
        EXPECT(0xbc68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbc67));
        // 97 02E4
        gbc.setState(0xee95, 0x35c1, 0x4f60, 0x8316, 0xad4, 0x6a67, 0x1, 0x1);
        gbc.writeMem(0xee95, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x35c1, gbc.sp());
        EXPECT(0xee96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xee95));
        // 97 02E5
        gbc.setState(0x7ae3, 0xb55d, 0xf690, 0x5625, 0x17f0, 0x6423, 0x0, 0x0);
        gbc.writeMem(0x7ae3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb55d, gbc.sp());
        EXPECT(0x7ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02E6
        gbc.setState(0xe1b4, 0xa1be, 0x8910, 0xcc43, 0x8cb6, 0x23cb, 0x0, 0x0);
        gbc.writeMem(0xe1b4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa1be, gbc.sp());
        EXPECT(0xe1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe1b4));
        // 97 02E7
        gbc.setState(0x5b52, 0x5b11, 0x97d0, 0xf55c, 0x728, 0x6734, 0x0, 0x0);
        gbc.writeMem(0x5b52, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5b11, gbc.sp());
        EXPECT(0x5b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02E8
        gbc.setState(0xcb85, 0x6947, 0xc710, 0x1e09, 0x1a1f, 0x409, 0x0, 0x0);
        gbc.writeMem(0xcb85, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6947, gbc.sp());
        EXPECT(0xcb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcb85));
        // 97 02E9
        gbc.setState(0x4d90, 0x1c6d, 0xdbd0, 0x32ed, 0xb217, 0x6c3b, 0x0, 0x0);
        gbc.writeMem(0x4d90, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1c6d, gbc.sp());
        EXPECT(0x4d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02EB
        gbc.setState(0x6291, 0xf641, 0x4040, 0xd90f, 0xfd01, 0xca66, 0x1, 0x1);
        gbc.writeMem(0x6291, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf641, gbc.sp());
        EXPECT(0x6292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02EC
        gbc.setState(0x79aa, 0x32c1, 0x50, 0xa73b, 0x8f96, 0x756e, 0x0, 0x1);
        gbc.writeMem(0x79aa, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x32c1, gbc.sp());
        EXPECT(0x79ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02ED
        gbc.setState(0x5b89, 0x7c4b, 0x2c80, 0x3f1d, 0x15bb, 0xe196, 0x1, 0x1);
        gbc.writeMem(0x5b89, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7c4b, gbc.sp());
        EXPECT(0x5b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02EE
        gbc.setState(0x8bb4, 0x5e09, 0xc7d0, 0x44ae, 0x698, 0x8378, 0x1, 0x0);
        gbc.writeMem(0x8bb4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5e09, gbc.sp());
        EXPECT(0x8bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8bb4));
        // 97 02EF
        gbc.setState(0xe97b, 0x6c42, 0x5ff0, 0x2a2a, 0xcc51, 0x7427, 0x1, 0x1);
        gbc.writeMem(0xe97b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6c42, gbc.sp());
        EXPECT(0xe97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe97b));
        // 97 02F0
        gbc.setState(0xce9c, 0xd74, 0x97c0, 0xcbc4, 0x36e2, 0x3a81, 0x0, 0x0);
        gbc.writeMem(0xce9c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd74, gbc.sp());
        EXPECT(0xce9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xce9c));
        // 97 02F1
        gbc.setState(0x844a, 0x8e9b, 0xb130, 0xafbe, 0x542f, 0xa0ee, 0x0, 0x1);
        gbc.writeMem(0x844a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8e9b, gbc.sp());
        EXPECT(0x844b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x844a));
        // 97 02F2
        gbc.setState(0xfae, 0xebcc, 0xf600, 0xa941, 0xa349, 0x1dc3, 0x1, 0x1);
        gbc.writeMem(0xfae, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xebcc, gbc.sp());
        EXPECT(0xfaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02F3
        gbc.setState(0x1407, 0xf909, 0x5590, 0x1f9a, 0xb57f, 0x122, 0x1, 0x0);
        gbc.writeMem(0x1407, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf909, gbc.sp());
        EXPECT(0x1408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02F4
        gbc.setState(0x2524, 0x4071, 0x1260, 0x480e, 0xb1c5, 0xb8a6, 0x1, 0x1);
        gbc.writeMem(0x2524, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4071, gbc.sp());
        EXPECT(0x2525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02F6
        gbc.setState(0x9263, 0x380f, 0x6060, 0xd2e2, 0xa62c, 0xe157, 0x1, 0x0);
        gbc.writeMem(0x9263, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x380f, gbc.sp());
        EXPECT(0x9264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9263));
        // 97 02F7
        gbc.setState(0x63f9, 0x6cab, 0x5d00, 0x221a, 0x7aae, 0x4cdc, 0x1, 0x1);
        gbc.writeMem(0x63f9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6cab, gbc.sp());
        EXPECT(0x63fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02F8
        gbc.setState(0xad4d, 0xf622, 0x4430, 0x8eb3, 0x46a7, 0x123e, 0x1, 0x0);
        gbc.writeMem(0xad4d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf622, gbc.sp());
        EXPECT(0xad4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xad4d));
        // 97 02F9
        gbc.setState(0x4e4b, 0x74ea, 0x8550, 0x2474, 0x3b81, 0xf0f5, 0x0, 0x1);
        gbc.writeMem(0x4e4b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x74ea, gbc.sp());
        EXPECT(0x4e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02FA
        gbc.setState(0x6838, 0x2ce7, 0x7850, 0xccde, 0x84a9, 0x3f21, 0x0, 0x0);
        gbc.writeMem(0x6838, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2ce7, gbc.sp());
        EXPECT(0x6839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02FB
        gbc.setState(0x12db, 0x39fd, 0x50b0, 0x75d6, 0x4534, 0xb702, 0x0, 0x1);
        gbc.writeMem(0x12db, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x39fd, gbc.sp());
        EXPECT(0x12dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02FC
        gbc.setState(0xe4f6, 0x7b73, 0x36f0, 0x8fd4, 0x9b0d, 0xa38d, 0x1, 0x0);
        gbc.writeMem(0xe4f6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7b73, gbc.sp());
        EXPECT(0xe4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe4f6));
        // 97 02FD
        gbc.setState(0xb604, 0x5410, 0x94f0, 0x8a3a, 0x18c6, 0xc1da, 0x1, 0x0);
        gbc.writeMem(0xb604, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5410, gbc.sp());
        EXPECT(0xb605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb604));
        // 97 02FE
        gbc.setState(0x4150, 0xeff, 0x72d0, 0x3d3d, 0x28c9, 0x8b5, 0x1, 0x0);
        gbc.writeMem(0x4150, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xeff, gbc.sp());
        EXPECT(0x4151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 02FF
        gbc.setState(0x1622, 0xcc6d, 0xc6f0, 0x78cc, 0xf430, 0x5877, 0x0, 0x0);
        gbc.writeMem(0x1622, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcc6d, gbc.sp());
        EXPECT(0x1623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0300
        gbc.setState(0xa9ee, 0x5bf1, 0x2bf0, 0xa2f8, 0x31fc, 0xffed, 0x0, 0x1);
        gbc.writeMem(0xa9ee, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5bf1, gbc.sp());
        EXPECT(0xa9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa9ee));
        // 97 0301
        gbc.setState(0x61b8, 0x530a, 0x3c70, 0x3fd3, 0xef7a, 0xb858, 0x0, 0x1);
        gbc.writeMem(0x61b8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x530a, gbc.sp());
        EXPECT(0x61b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0302
        gbc.setState(0x4c4a, 0xa317, 0x630, 0xe34c, 0x938, 0x9c94, 0x1, 0x0);
        gbc.writeMem(0x4c4a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa317, gbc.sp());
        EXPECT(0x4c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0303
        gbc.setState(0x85c1, 0x9c26, 0x3a30, 0x28eb, 0x2152, 0x579e, 0x0, 0x1);
        gbc.writeMem(0x85c1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9c26, gbc.sp());
        EXPECT(0x85c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x85c1));
        // 97 0304
        gbc.setState(0x32f2, 0x548f, 0x6b90, 0xee64, 0x3e70, 0x8cbd, 0x0, 0x1);
        gbc.writeMem(0x32f2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x548f, gbc.sp());
        EXPECT(0x32f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0305
        gbc.setState(0x5ed5, 0xe8df, 0x83e0, 0x9292, 0xec85, 0xe887, 0x0, 0x0);
        gbc.writeMem(0x5ed5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe8df, gbc.sp());
        EXPECT(0x5ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0306
        gbc.setState(0x7c75, 0x3cd3, 0x5df0, 0x7015, 0xb06b, 0x43d1, 0x1, 0x0);
        gbc.writeMem(0x7c75, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3cd3, gbc.sp());
        EXPECT(0x7c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0307
        gbc.setState(0xec5e, 0x73d5, 0x8690, 0x12ef, 0x2c7b, 0x1339, 0x0, 0x1);
        gbc.writeMem(0xec5e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x73d5, gbc.sp());
        EXPECT(0xec5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xec5e));
        // 97 0308
        gbc.setState(0x5752, 0x4473, 0x410, 0x8a7d, 0x7ddf, 0x842, 0x1, 0x1);
        gbc.writeMem(0x5752, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4473, gbc.sp());
        EXPECT(0x5753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0309
        gbc.setState(0x8d0e, 0x5a87, 0x2e80, 0x7482, 0x3d63, 0xb7c3, 0x1, 0x1);
        gbc.writeMem(0x8d0e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5a87, gbc.sp());
        EXPECT(0x8d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8d0e));
        // 97 030A
        gbc.setState(0x839d, 0x37f7, 0xb750, 0x2f15, 0x4e9b, 0xce87, 0x1, 0x1);
        gbc.writeMem(0x839d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x37f7, gbc.sp());
        EXPECT(0x839e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x839d));
        // 97 030C
        gbc.setState(0x35fa, 0x8210, 0xaab0, 0x90a, 0x5f73, 0x733, 0x1, 0x0);
        gbc.writeMem(0x35fa, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8210, gbc.sp());
        EXPECT(0x35fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 030D
        gbc.setState(0x6af7, 0xc85d, 0x5a0, 0xe1e2, 0xcd8, 0x62c3, 0x1, 0x0);
        gbc.writeMem(0x6af7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc85d, gbc.sp());
        EXPECT(0x6af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 030E
        gbc.setState(0x3079, 0xe7b1, 0xd9e0, 0xc8fc, 0x3809, 0xe351, 0x1, 0x0);
        gbc.writeMem(0x3079, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe7b1, gbc.sp());
        EXPECT(0x307a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 030F
        gbc.setState(0x67fb, 0xc784, 0xb210, 0x7fed, 0x44a2, 0x6af9, 0x0, 0x0);
        gbc.writeMem(0x67fb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc784, gbc.sp());
        EXPECT(0x67fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0310
        gbc.setState(0x190a, 0x9b81, 0x8b0, 0x28c6, 0xb3ee, 0x92ff, 0x1, 0x1);
        gbc.writeMem(0x190a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9b81, gbc.sp());
        EXPECT(0x190b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0311
        gbc.setState(0x8bed, 0x8a, 0xd110, 0x8173, 0xe76f, 0x76bf, 0x0, 0x0);
        gbc.writeMem(0x8bed, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8a, gbc.sp());
        EXPECT(0x8bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8bed));
        // 97 0312
        gbc.setState(0xc99e, 0x1cc, 0xa7d0, 0xdbf9, 0x461f, 0x6afe, 0x1, 0x0);
        gbc.writeMem(0xc99e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1cc, gbc.sp());
        EXPECT(0xc99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc99e));
        // 97 0313
        gbc.setState(0x8924, 0xf38d, 0xa130, 0x6b9e, 0xa2d3, 0xa557, 0x0, 0x1);
        gbc.writeMem(0x8924, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf38d, gbc.sp());
        EXPECT(0x8925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8924));
        // 97 0314
        gbc.setState(0x9bf6, 0x4094, 0xc060, 0xfbfa, 0xd2e0, 0x9af4, 0x0, 0x1);
        gbc.writeMem(0x9bf6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4094, gbc.sp());
        EXPECT(0x9bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9bf6));
        // 97 0315
        gbc.setState(0xc10a, 0xca5, 0xb330, 0xdaf9, 0xab45, 0x98d0, 0x0, 0x0);
        gbc.writeMem(0xc10a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xca5, gbc.sp());
        EXPECT(0xc10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc10a));
        // 97 0316
        gbc.setState(0x761a, 0x970d, 0x7c40, 0xf2ef, 0xe743, 0x39a7, 0x1, 0x0);
        gbc.writeMem(0x761a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x970d, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0317
        gbc.setState(0xe74d, 0xe24, 0x2a60, 0x1e4, 0x1d1a, 0x2b67, 0x1, 0x0);
        gbc.writeMem(0xe74d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe24, gbc.sp());
        EXPECT(0xe74e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe74d));
        // 97 0319
        gbc.setState(0x6c5f, 0xf7c5, 0xf730, 0x1f15, 0x5d9c, 0xd586, 0x0, 0x0);
        gbc.writeMem(0x6c5f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf7c5, gbc.sp());
        EXPECT(0x6c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 031A
        gbc.setState(0xdae1, 0xffab, 0x1400, 0x850f, 0xd510, 0xd751, 0x0, 0x1);
        gbc.writeMem(0xdae1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xffab, gbc.sp());
        EXPECT(0xdae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdae1));
        // 97 031C
        gbc.setState(0x8739, 0xe221, 0xb040, 0x784b, 0x1930, 0xeb4f, 0x1, 0x0);
        gbc.writeMem(0x8739, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe221, gbc.sp());
        EXPECT(0x873a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8739));
        // 97 031D
        gbc.setState(0xa9bb, 0x8213, 0x13d0, 0xd909, 0xed2c, 0xfd98, 0x0, 0x1);
        gbc.writeMem(0xa9bb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8213, gbc.sp());
        EXPECT(0xa9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa9bb));
        // 97 031E
        gbc.setState(0xb7e1, 0x2918, 0xf900, 0xb8dd, 0x4776, 0xada4, 0x0, 0x0);
        gbc.writeMem(0xb7e1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2918, gbc.sp());
        EXPECT(0xb7e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb7e1));
        // 97 031F
        gbc.setState(0xa46f, 0xb422, 0x83b0, 0x8a7e, 0x57a5, 0x95e2, 0x0, 0x1);
        gbc.writeMem(0xa46f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb422, gbc.sp());
        EXPECT(0xa470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa46f));
        // 97 0320
        gbc.setState(0x8cc8, 0x7e89, 0x3c90, 0x4a08, 0x1765, 0x4718, 0x0, 0x1);
        gbc.writeMem(0x8cc8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7e89, gbc.sp());
        EXPECT(0x8cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8cc8));
        // 97 0322
        gbc.setState(0xe513, 0x90ed, 0x3440, 0x847b, 0x53a2, 0x5901, 0x1, 0x0);
        gbc.writeMem(0xe513, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x90ed, gbc.sp());
        EXPECT(0xe514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe513));
        // 97 0323
        gbc.setState(0xb2da, 0x86e, 0x23d0, 0x50f5, 0x34e3, 0x554a, 0x1, 0x1);
        gbc.writeMem(0xb2da, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x86e, gbc.sp());
        EXPECT(0xb2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb2da));
        // 97 0324
        gbc.setState(0x85f2, 0x8baf, 0xdc50, 0x3a22, 0x467e, 0xecf5, 0x0, 0x0);
        gbc.writeMem(0x85f2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8baf, gbc.sp());
        EXPECT(0x85f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x85f2));
        // 97 0325
        gbc.setState(0x8f, 0x71e8, 0x4e0, 0xdb6c, 0x5ca2, 0x56c, 0x1, 0x0);
        gbc.writeMem(0x8f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x71e8, gbc.sp());
        EXPECT(0x90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0326
        gbc.setState(0xb530, 0xad8e, 0xf590, 0x88b7, 0xb0b, 0x2aec, 0x1, 0x1);
        gbc.writeMem(0xb530, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xad8e, gbc.sp());
        EXPECT(0xb531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb530));
        // 97 0327
        gbc.setState(0x43a4, 0x5243, 0xda60, 0x59e4, 0x234e, 0xa336, 0x1, 0x0);
        gbc.writeMem(0x43a4, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5243, gbc.sp());
        EXPECT(0x43a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0328
        gbc.setState(0xaa7e, 0x63d5, 0xe740, 0x604, 0xb5dc, 0xebe9, 0x0, 0x1);
        gbc.writeMem(0xaa7e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x63d5, gbc.sp());
        EXPECT(0xaa7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaa7e));
        // 97 0329
        gbc.setState(0xc82e, 0x93a6, 0xed80, 0xb003, 0xd229, 0x26c1, 0x0, 0x1);
        gbc.writeMem(0xc82e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x93a6, gbc.sp());
        EXPECT(0xc82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc82e));
        // 97 032A
        gbc.setState(0xb510, 0xbe2e, 0x4bd0, 0x2b0d, 0x4306, 0x6ed1, 0x1, 0x0);
        gbc.writeMem(0xb510, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbe2e, gbc.sp());
        EXPECT(0xb511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb510));
        // 97 032C
        gbc.setState(0xef07, 0x7ec4, 0xdc60, 0xe807, 0x7284, 0xe6e9, 0x1, 0x1);
        gbc.writeMem(0xef07, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7ec4, gbc.sp());
        EXPECT(0xef08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xef07));
        // 97 032D
        gbc.setState(0xe4f5, 0x79a2, 0xc90, 0xbc9d, 0x1f8e, 0xf37, 0x0, 0x0);
        gbc.writeMem(0xe4f5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x79a2, gbc.sp());
        EXPECT(0xe4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe4f5));
        // 97 032E
        gbc.setState(0x380d, 0xc947, 0xcd50, 0x6716, 0xdd86, 0x5fa7, 0x1, 0x0);
        gbc.writeMem(0x380d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc947, gbc.sp());
        EXPECT(0x380e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 032F
        gbc.setState(0x3dd1, 0xd24c, 0xd3a0, 0x1f00, 0x8a8, 0x35e2, 0x1, 0x0);
        gbc.writeMem(0x3dd1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd24c, gbc.sp());
        EXPECT(0x3dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0331
        gbc.setState(0xa6fa, 0x53aa, 0x72e0, 0x9374, 0x5d0c, 0xe717, 0x0, 0x1);
        gbc.writeMem(0xa6fa, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x53aa, gbc.sp());
        EXPECT(0xa6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa6fa));
        // 97 0332
        gbc.setState(0x54ce, 0xfc6, 0xbd90, 0xfbff, 0xc326, 0x6b95, 0x1, 0x1);
        gbc.writeMem(0x54ce, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfc6, gbc.sp());
        EXPECT(0x54cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0333
        gbc.setState(0x270, 0xdf9d, 0x5e10, 0xb182, 0x6517, 0x949b, 0x1, 0x1);
        gbc.writeMem(0x270, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdf9d, gbc.sp());
        EXPECT(0x271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0334
        gbc.setState(0xd3ca, 0xe64e, 0x61a0, 0x2058, 0x11fe, 0x5ce1, 0x0, 0x1);
        gbc.writeMem(0xd3ca, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe64e, gbc.sp());
        EXPECT(0xd3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd3ca));
        // 97 0335
        gbc.setState(0xd9cf, 0x6716, 0xc7f0, 0x8768, 0x5689, 0x6817, 0x1, 0x1);
        gbc.writeMem(0xd9cf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6716, gbc.sp());
        EXPECT(0xd9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd9cf));
        // 97 0337
        gbc.setState(0x8bc3, 0xf2c3, 0x8b50, 0x8c1d, 0xa55b, 0xdef9, 0x0, 0x1);
        gbc.writeMem(0x8bc3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf2c3, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8bc3));
        // 97 0338
        gbc.setState(0x11c2, 0x81a4, 0xa5d0, 0x9d4a, 0x1da5, 0x9b90, 0x0, 0x0);
        gbc.writeMem(0x11c2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x81a4, gbc.sp());
        EXPECT(0x11c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0339
        gbc.setState(0x7230, 0x8ae3, 0x7d20, 0x9d8e, 0xd929, 0x1f39, 0x1, 0x0);
        gbc.writeMem(0x7230, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8ae3, gbc.sp());
        EXPECT(0x7231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 033A
        gbc.setState(0x2fa6, 0x460, 0x14e0, 0x2763, 0x1177, 0xef96, 0x1, 0x1);
        gbc.writeMem(0x2fa6, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x460, gbc.sp());
        EXPECT(0x2fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 033B
        gbc.setState(0x25af, 0xae4e, 0x6770, 0x8e0c, 0x53, 0x84d3, 0x1, 0x0);
        gbc.writeMem(0x25af, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xae4e, gbc.sp());
        EXPECT(0x25b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 033C
        gbc.setState(0x88f9, 0x6242, 0x7870, 0xffb2, 0x3a78, 0x10fd, 0x1, 0x1);
        gbc.writeMem(0x88f9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6242, gbc.sp());
        EXPECT(0x88fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x88f9));
        // 97 033D
        gbc.setState(0x7b77, 0x9dff, 0xd980, 0x3bfc, 0x9200, 0x6dcd, 0x0, 0x1);
        gbc.writeMem(0x7b77, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9dff, gbc.sp());
        EXPECT(0x7b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 033E
        gbc.setState(0x66a0, 0xa046, 0x3d30, 0xb723, 0x3f3, 0x557d, 0x0, 0x1);
        gbc.writeMem(0x66a0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa046, gbc.sp());
        EXPECT(0x66a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 033F
        gbc.setState(0xcd2b, 0x5b0c, 0xb6d0, 0xcf44, 0xfa7c, 0x32e8, 0x1, 0x1);
        gbc.writeMem(0xcd2b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5b0c, gbc.sp());
        EXPECT(0xcd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcd2b));
        // 97 0340
        gbc.setState(0x4976, 0x6cec, 0xcbf0, 0x6b1f, 0x4bf2, 0x69c1, 0x0, 0x1);
        gbc.writeMem(0x4976, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6cec, gbc.sp());
        EXPECT(0x4977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0341
        gbc.setState(0xd1ef, 0x3560, 0x5a20, 0xb3f6, 0x68e9, 0x7b1b, 0x0, 0x1);
        gbc.writeMem(0xd1ef, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3560, gbc.sp());
        EXPECT(0xd1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd1ef));
        // 97 0342
        gbc.setState(0xd0b5, 0x965f, 0x9070, 0x9630, 0x136, 0x529e, 0x1, 0x0);
        gbc.writeMem(0xd0b5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x965f, gbc.sp());
        EXPECT(0xd0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd0b5));
        // 97 0343
        gbc.setState(0xe206, 0xa457, 0xce40, 0xe061, 0x7521, 0x616, 0x1, 0x0);
        gbc.writeMem(0xe206, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa457, gbc.sp());
        EXPECT(0xe207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe206));
        // 97 0344
        gbc.setState(0xb4ee, 0x1d90, 0x2990, 0xdfbc, 0x71d5, 0xfc54, 0x0, 0x0);
        gbc.writeMem(0xb4ee, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1d90, gbc.sp());
        EXPECT(0xb4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb4ee));
        // 97 0345
        gbc.setState(0x41e8, 0x5987, 0x6c80, 0x3c1a, 0xe602, 0xa4dd, 0x1, 0x1);
        gbc.writeMem(0x41e8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5987, gbc.sp());
        EXPECT(0x41e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0346
        gbc.setState(0x13cd, 0x1d9, 0x66a0, 0xed59, 0xf18c, 0xe3, 0x0, 0x0);
        gbc.writeMem(0x13cd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1d9, gbc.sp());
        EXPECT(0x13ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0347
        gbc.setState(0x6d24, 0x4d57, 0x3cf0, 0x62e8, 0xb92, 0xfd09, 0x1, 0x1);
        gbc.writeMem(0x6d24, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4d57, gbc.sp());
        EXPECT(0x6d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0349
        gbc.setState(0xeadf, 0x600a, 0x880, 0xeda8, 0x3b58, 0xb8fa, 0x0, 0x0);
        gbc.writeMem(0xeadf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x600a, gbc.sp());
        EXPECT(0xeae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeadf));
        // 97 034A
        gbc.setState(0x8d24, 0xa1ea, 0xa10, 0x3c85, 0x81ee, 0x9f0, 0x1, 0x1);
        gbc.writeMem(0x8d24, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa1ea, gbc.sp());
        EXPECT(0x8d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8d24));
        // 97 034B
        gbc.setState(0x6bca, 0xe4af, 0xf340, 0xe1c1, 0xeeb8, 0xe30f, 0x1, 0x0);
        gbc.writeMem(0x6bca, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe4af, gbc.sp());
        EXPECT(0x6bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 034C
        gbc.setState(0x3437, 0x8bf, 0x8c90, 0xaee6, 0xfc08, 0xda49, 0x1, 0x0);
        gbc.writeMem(0x3437, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8bf, gbc.sp());
        EXPECT(0x3438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 034D
        gbc.setState(0xcfee, 0x8096, 0x9070, 0x4f55, 0x33eb, 0xc2d3, 0x0, 0x0);
        gbc.writeMem(0xcfee, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8096, gbc.sp());
        EXPECT(0xcfef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcfee));
        // 97 034E
        gbc.setState(0x6d2e, 0xd774, 0x97e0, 0xa4d4, 0x9a44, 0x83b1, 0x1, 0x0);
        gbc.writeMem(0x6d2e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd774, gbc.sp());
        EXPECT(0x6d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 034F
        gbc.setState(0x43f2, 0x58b6, 0xdf90, 0x5bd2, 0xa8de, 0x4d17, 0x1, 0x0);
        gbc.writeMem(0x43f2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x58b6, gbc.sp());
        EXPECT(0x43f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0350
        gbc.setState(0xba6a, 0xce00, 0x3270, 0x91cb, 0xefa7, 0x5718, 0x1, 0x0);
        gbc.writeMem(0xba6a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xce00, gbc.sp());
        EXPECT(0xba6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xba6a));
        // 97 0351
        gbc.setState(0xd0cf, 0xa0dd, 0x570, 0xd34f, 0xbf4c, 0x1fed, 0x1, 0x1);
        gbc.writeMem(0xd0cf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa0dd, gbc.sp());
        EXPECT(0xd0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd0cf));
        // 97 0352
        gbc.setState(0x4cd5, 0x34c8, 0xd5b0, 0x5c92, 0x8b78, 0x6dfe, 0x1, 0x0);
        gbc.writeMem(0x4cd5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x34c8, gbc.sp());
        EXPECT(0x4cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0353
        gbc.setState(0x7d8f, 0x2cf2, 0x9780, 0x17d, 0x54a6, 0x8a98, 0x0, 0x1);
        gbc.writeMem(0x7d8f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2cf2, gbc.sp());
        EXPECT(0x7d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0354
        gbc.setState(0xc1b2, 0x23b8, 0xf5a0, 0x2abb, 0xd5d0, 0xe621, 0x1, 0x1);
        gbc.writeMem(0xc1b2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x23b8, gbc.sp());
        EXPECT(0xc1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc1b2));
        // 97 0355
        gbc.setState(0xa635, 0xb5f6, 0x5890, 0x1d05, 0x1081, 0xf2c5, 0x1, 0x1);
        gbc.writeMem(0xa635, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb5f6, gbc.sp());
        EXPECT(0xa636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa635));
        // 97 0356
        gbc.setState(0x55db, 0x70ca, 0xe9f0, 0xce11, 0xeb69, 0x49d5, 0x1, 0x1);
        gbc.writeMem(0x55db, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x70ca, gbc.sp());
        EXPECT(0x55dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0357
        gbc.setState(0x386f, 0x1b40, 0xa610, 0x1cbb, 0x6471, 0x3d88, 0x0, 0x1);
        gbc.writeMem(0x386f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1b40, gbc.sp());
        EXPECT(0x3870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0358
        gbc.setState(0x977d, 0xcb07, 0x5310, 0x1f35, 0x1158, 0x7524, 0x0, 0x1);
        gbc.writeMem(0x977d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcb07, gbc.sp());
        EXPECT(0x977e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x977d));
        // 97 0359
        gbc.setState(0xd5ee, 0x4f80, 0x63d0, 0x95d9, 0x1f39, 0x86f0, 0x0, 0x1);
        gbc.writeMem(0xd5ee, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4f80, gbc.sp());
        EXPECT(0xd5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd5ee));
        // 97 035A
        gbc.setState(0x78c1, 0xcd9a, 0x4e90, 0x1bfc, 0x11e0, 0x90ee, 0x1, 0x1);
        gbc.writeMem(0x78c1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcd9a, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 035B
        gbc.setState(0x52f1, 0x76bc, 0x74a0, 0x1290, 0xf0e5, 0xeaee, 0x0, 0x0);
        gbc.writeMem(0x52f1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x76bc, gbc.sp());
        EXPECT(0x52f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 035C
        gbc.setState(0xd6ff, 0x21e4, 0xb620, 0xf414, 0x9b8b, 0xe12b, 0x0, 0x0);
        gbc.writeMem(0xd6ff, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x21e4, gbc.sp());
        EXPECT(0xd700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd6ff));
        // 97 035D
        gbc.setState(0x5556, 0xba24, 0xb370, 0x17f5, 0x6a48, 0x9b82, 0x1, 0x1);
        gbc.writeMem(0x5556, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xba24, gbc.sp());
        EXPECT(0x5557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 035E
        gbc.setState(0x5718, 0xffd3, 0x4ac0, 0xca6a, 0xee6f, 0x1c25, 0x1, 0x1);
        gbc.writeMem(0x5718, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xffd3, gbc.sp());
        EXPECT(0x5719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 035F
        gbc.setState(0x9475, 0xed03, 0xac90, 0x58d1, 0x8716, 0xf4dd, 0x1, 0x1);
        gbc.writeMem(0x9475, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xed03, gbc.sp());
        EXPECT(0x9476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9475));
        // 97 0360
        gbc.setState(0x95f9, 0xd4db, 0x98c0, 0x917a, 0xe4c0, 0xf3a8, 0x0, 0x1);
        gbc.writeMem(0x95f9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd4db, gbc.sp());
        EXPECT(0x95fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x95f9));
        // 97 0361
        gbc.setState(0x1a82, 0x1fec, 0x3880, 0xda82, 0xc2db, 0xec92, 0x0, 0x0);
        gbc.writeMem(0x1a82, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1fec, gbc.sp());
        EXPECT(0x1a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0362
        gbc.setState(0x467f, 0xda0, 0xdbf0, 0xb8e5, 0xb946, 0xe409, 0x1, 0x1);
        gbc.writeMem(0x467f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xda0, gbc.sp());
        EXPECT(0x4680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0363
        gbc.setState(0xceef, 0x38a6, 0x4ec0, 0x5932, 0x4b19, 0xe052, 0x0, 0x0);
        gbc.writeMem(0xceef, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x38a6, gbc.sp());
        EXPECT(0xcef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xceef));
        // 97 0364
        gbc.setState(0x3aee, 0xb2a8, 0x47d0, 0xc05d, 0x3811, 0xda17, 0x0, 0x1);
        gbc.writeMem(0x3aee, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb2a8, gbc.sp());
        EXPECT(0x3aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0365
        gbc.setState(0x5412, 0x1c89, 0x4aa0, 0x851c, 0xaa36, 0xf839, 0x1, 0x0);
        gbc.writeMem(0x5412, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1c89, gbc.sp());
        EXPECT(0x5413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0366
        gbc.setState(0x1aa0, 0x8734, 0x8220, 0x5b6f, 0x6065, 0xdbdc, 0x0, 0x1);
        gbc.writeMem(0x1aa0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8734, gbc.sp());
        EXPECT(0x1aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0367
        gbc.setState(0xb2ce, 0x50ae, 0xc270, 0xd67a, 0x6257, 0xc88f, 0x0, 0x0);
        gbc.writeMem(0xb2ce, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x50ae, gbc.sp());
        EXPECT(0xb2cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb2ce));
        // 97 0369
        gbc.setState(0xac70, 0xdfbf, 0x4b60, 0xf739, 0xc965, 0x540f, 0x1, 0x1);
        gbc.writeMem(0xac70, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdfbf, gbc.sp());
        EXPECT(0xac71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xac70));
        // 97 036A
        gbc.setState(0x65f1, 0xf3ae, 0x3860, 0x6de2, 0xefee, 0x3ee3, 0x1, 0x1);
        gbc.writeMem(0x65f1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf3ae, gbc.sp());
        EXPECT(0x65f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 036B
        gbc.setState(0xe5d7, 0xf7a8, 0xff80, 0x918e, 0x78e6, 0x4295, 0x1, 0x1);
        gbc.writeMem(0xe5d7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf7a8, gbc.sp());
        EXPECT(0xe5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe5d7));
        // 97 036C
        gbc.setState(0xc34, 0x97cb, 0x6390, 0xf8a2, 0x226, 0x29b7, 0x0, 0x0);
        gbc.writeMem(0xc34, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x97cb, gbc.sp());
        EXPECT(0xc35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 036D
        gbc.setState(0xa9b7, 0x9566, 0x510, 0x637c, 0xfafc, 0x2fa0, 0x1, 0x1);
        gbc.writeMem(0xa9b7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9566, gbc.sp());
        EXPECT(0xa9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa9b7));
        // 97 036E
        gbc.setState(0x8919, 0xa71a, 0x7cc0, 0x1b04, 0x4e8, 0xc755, 0x0, 0x1);
        gbc.writeMem(0x8919, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa71a, gbc.sp());
        EXPECT(0x891a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8919));
        // 97 036F
        gbc.setState(0x8cd0, 0x959, 0x2110, 0x7abf, 0x59a1, 0xb6c, 0x1, 0x1);
        gbc.writeMem(0x8cd0, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x959, gbc.sp());
        EXPECT(0x8cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8cd0));
        // 97 0370
        gbc.setState(0x8f84, 0xa139, 0xc870, 0x9258, 0xb1f2, 0x39e8, 0x0, 0x0);
        gbc.writeMem(0x8f84, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa139, gbc.sp());
        EXPECT(0x8f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8f84));
        // 97 0371
        gbc.setState(0xca5, 0xa554, 0x6f90, 0xba71, 0x4b8f, 0x60c3, 0x1, 0x1);
        gbc.writeMem(0xca5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa554, gbc.sp());
        EXPECT(0xca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0372
        gbc.setState(0x5bfb, 0xfe43, 0xad10, 0xe507, 0xee79, 0x64f4, 0x1, 0x0);
        gbc.writeMem(0x5bfb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfe43, gbc.sp());
        EXPECT(0x5bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0374
        gbc.setState(0x7800, 0x90cf, 0xa180, 0x90cc, 0xba6a, 0x26c5, 0x1, 0x0);
        gbc.writeMem(0x7800, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x90cf, gbc.sp());
        EXPECT(0x7801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0375
        gbc.setState(0x8f56, 0x32a1, 0x6810, 0xfb9a, 0x21bc, 0x2217, 0x0, 0x0);
        gbc.writeMem(0x8f56, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x32a1, gbc.sp());
        EXPECT(0x8f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8f56));
        // 97 0376
        gbc.setState(0xbd22, 0x418c, 0x8d90, 0xc678, 0xcadb, 0x485a, 0x0, 0x1);
        gbc.writeMem(0xbd22, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x418c, gbc.sp());
        EXPECT(0xbd23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbd22));
        // 97 0377
        gbc.setState(0x6a64, 0x5fc2, 0xb570, 0x60a, 0xa62d, 0xa13d, 0x0, 0x1);
        gbc.writeMem(0x6a64, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5fc2, gbc.sp());
        EXPECT(0x6a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0378
        gbc.setState(0xe82b, 0x4f44, 0xad70, 0x7837, 0x5094, 0x4e49, 0x0, 0x0);
        gbc.writeMem(0xe82b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4f44, gbc.sp());
        EXPECT(0xe82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe82b));
        // 97 0379
        gbc.setState(0xe90b, 0x2184, 0x7890, 0x3097, 0x35ae, 0x66d1, 0x1, 0x0);
        gbc.writeMem(0xe90b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2184, gbc.sp());
        EXPECT(0xe90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe90b));
        // 97 037A
        gbc.setState(0xc143, 0xee93, 0x9f70, 0xb7de, 0x3aaa, 0x3cea, 0x0, 0x1);
        gbc.writeMem(0xc143, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xee93, gbc.sp());
        EXPECT(0xc144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc143));
        // 97 037B
        gbc.setState(0x3471, 0xbb9c, 0xa800, 0x56bc, 0xebe3, 0xacaf, 0x0, 0x1);
        gbc.writeMem(0x3471, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbb9c, gbc.sp());
        EXPECT(0x3472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 037C
        gbc.setState(0x8c18, 0xce37, 0x340, 0xcdcd, 0x5953, 0xa0f2, 0x0, 0x1);
        gbc.writeMem(0x8c18, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xce37, gbc.sp());
        EXPECT(0x8c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8c18));
        // 97 037D
        gbc.setState(0x8a2d, 0x7ac8, 0xe010, 0xe352, 0x76c7, 0xa34c, 0x1, 0x0);
        gbc.writeMem(0x8a2d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7ac8, gbc.sp());
        EXPECT(0x8a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8a2d));
        // 97 037E
        gbc.setState(0xc40b, 0x6265, 0x880, 0x8d0b, 0x6367, 0x2db6, 0x0, 0x0);
        gbc.writeMem(0xc40b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6265, gbc.sp());
        EXPECT(0xc40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc40b));
        // 97 037F
        gbc.setState(0x67b1, 0xcc9e, 0x810, 0x30ef, 0x1d0f, 0x86d9, 0x1, 0x0);
        gbc.writeMem(0x67b1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcc9e, gbc.sp());
        EXPECT(0x67b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0380
        gbc.setState(0xe6c, 0x6956, 0x4660, 0x61be, 0x9d11, 0x788e, 0x1, 0x0);
        gbc.writeMem(0xe6c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6956, gbc.sp());
        EXPECT(0xe6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0381
        gbc.setState(0xcc07, 0xf3d9, 0x7b90, 0xa971, 0x4138, 0xd1f6, 0x0, 0x0);
        gbc.writeMem(0xcc07, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf3d9, gbc.sp());
        EXPECT(0xcc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcc07));
        // 97 0382
        gbc.setState(0x8e80, 0x16ad, 0xba50, 0xabe0, 0x10f9, 0x8d61, 0x0, 0x0);
        gbc.writeMem(0x8e80, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x16ad, gbc.sp());
        EXPECT(0x8e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8e80));
        // 97 0383
        gbc.setState(0xe135, 0x654c, 0x1da0, 0x9b04, 0x2e2c, 0xbf09, 0x1, 0x0);
        gbc.writeMem(0xe135, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x654c, gbc.sp());
        EXPECT(0xe136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe135));
        // 97 0384
        gbc.setState(0x9dc1, 0x371d, 0xc570, 0xb30f, 0x2bef, 0x4823, 0x1, 0x1);
        gbc.writeMem(0x9dc1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x371d, gbc.sp());
        EXPECT(0x9dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9dc1));
        // 97 0385
        gbc.setState(0xeaee, 0x6ff6, 0xaf10, 0x6a42, 0x1955, 0x9970, 0x1, 0x0);
        gbc.writeMem(0xeaee, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6ff6, gbc.sp());
        EXPECT(0xeaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeaee));
        // 97 0386
        gbc.setState(0x650b, 0xd486, 0x9e10, 0x511a, 0x8e75, 0x1fe0, 0x1, 0x0);
        gbc.writeMem(0x650b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd486, gbc.sp());
        EXPECT(0x650c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0387
        gbc.setState(0x24f7, 0xa7d1, 0x8fc0, 0x4749, 0x5348, 0xeab4, 0x1, 0x1);
        gbc.writeMem(0x24f7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa7d1, gbc.sp());
        EXPECT(0x24f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0388
        gbc.setState(0x9ed9, 0x832d, 0xd330, 0x5a26, 0x98e, 0xe073, 0x0, 0x0);
        gbc.writeMem(0x9ed9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x832d, gbc.sp());
        EXPECT(0x9eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9ed9));
        // 97 0389
        gbc.setState(0x8e74, 0x59f6, 0x6790, 0x7b69, 0xac97, 0x9d4c, 0x0, 0x0);
        gbc.writeMem(0x8e74, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x59f6, gbc.sp());
        EXPECT(0x8e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8e74));
        // 97 038A
        gbc.setState(0xc331, 0x65a2, 0xe130, 0x1da3, 0xeaf3, 0x7dd5, 0x0, 0x0);
        gbc.writeMem(0xc331, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x65a2, gbc.sp());
        EXPECT(0xc332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc331));
        // 97 038B
        gbc.setState(0x4d87, 0x233e, 0x4180, 0xf4b0, 0xdee0, 0x8717, 0x0, 0x0);
        gbc.writeMem(0x4d87, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x233e, gbc.sp());
        EXPECT(0x4d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 038C
        gbc.setState(0x8432, 0x3bbe, 0x2e90, 0xf524, 0x9478, 0x24e9, 0x0, 0x0);
        gbc.writeMem(0x8432, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3bbe, gbc.sp());
        EXPECT(0x8433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8432));
        // 97 038D
        gbc.setState(0x54bb, 0x170, 0xd330, 0x2a29, 0xde8e, 0xf33a, 0x1, 0x0);
        gbc.writeMem(0x54bb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x170, gbc.sp());
        EXPECT(0x54bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 038E
        gbc.setState(0x90fc, 0x1968, 0xc830, 0xd118, 0x2f28, 0x410, 0x0, 0x0);
        gbc.writeMem(0x90fc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1968, gbc.sp());
        EXPECT(0x90fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x90fc));
        // 97 038F
        gbc.setState(0xa840, 0x2526, 0xdfa0, 0x70e8, 0x6f7, 0xae20, 0x1, 0x1);
        gbc.writeMem(0xa840, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2526, gbc.sp());
        EXPECT(0xa841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa840));
        // 97 0390
        gbc.setState(0xf90, 0x57ac, 0x7f80, 0x1496, 0x911, 0xe1b, 0x0, 0x0);
        gbc.writeMem(0xf90, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x57ac, gbc.sp());
        EXPECT(0xf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0391
        gbc.setState(0x33b3, 0x2c7e, 0xd650, 0xfb94, 0x9c0, 0xe9df, 0x0, 0x0);
        gbc.writeMem(0x33b3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2c7e, gbc.sp());
        EXPECT(0x33b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0392
        gbc.setState(0x2d42, 0x54c6, 0xf5d0, 0xa9c2, 0x9ad9, 0x7a44, 0x0, 0x1);
        gbc.writeMem(0x2d42, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x54c6, gbc.sp());
        EXPECT(0x2d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0393
        gbc.setState(0x33bf, 0x7c1e, 0x82f0, 0xe59d, 0xbaf5, 0xc2f7, 0x0, 0x1);
        gbc.writeMem(0x33bf, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7c1e, gbc.sp());
        EXPECT(0x33c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0394
        gbc.setState(0x2253, 0x3ee6, 0xfed0, 0x7c09, 0x2441, 0x9315, 0x0, 0x1);
        gbc.writeMem(0x2253, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3ee6, gbc.sp());
        EXPECT(0x2254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0395
        gbc.setState(0x7aba, 0x1fb4, 0x90, 0x332a, 0x56d4, 0xe278, 0x1, 0x1);
        gbc.writeMem(0x7aba, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1fb4, gbc.sp());
        EXPECT(0x7abb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0396
        gbc.setState(0x9e7, 0x1a4e, 0x9640, 0xba41, 0x4db0, 0x5852, 0x0, 0x1);
        gbc.writeMem(0x9e7, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1a4e, gbc.sp());
        EXPECT(0x9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0397
        gbc.setState(0x1c2c, 0xe5f, 0x3620, 0x7e30, 0x7822, 0xcf2f, 0x1, 0x1);
        gbc.writeMem(0x1c2c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe5f, gbc.sp());
        EXPECT(0x1c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 0398
        gbc.setState(0xd0ef, 0x82de, 0xed50, 0x2c6c, 0xccd3, 0xa059, 0x0, 0x0);
        gbc.writeMem(0xd0ef, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x82de, gbc.sp());
        EXPECT(0xd0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd0ef));
        // 97 0399
        gbc.setState(0x839b, 0xbc1b, 0x94e0, 0x1bd1, 0x1af0, 0x799, 0x0, 0x0);
        gbc.writeMem(0x839b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbc1b, gbc.sp());
        EXPECT(0x839c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x839b));
        // 97 039A
        gbc.setState(0x63ff, 0xcd7, 0x1f40, 0x2400, 0x169, 0x3402, 0x1, 0x1);
        gbc.writeMem(0x63ff, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcd7, gbc.sp());
        EXPECT(0x6400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 039B
        gbc.setState(0xaa7a, 0xcd3d, 0xc530, 0x6528, 0x49e0, 0x2bf6, 0x0, 0x1);
        gbc.writeMem(0xaa7a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcd3d, gbc.sp());
        EXPECT(0xaa7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xaa7a));
        // 97 039C
        gbc.setState(0x9609, 0x7c65, 0xa350, 0x167a, 0xe449, 0x6bc, 0x0, 0x1);
        gbc.writeMem(0x9609, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7c65, gbc.sp());
        EXPECT(0x960a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9609));
        // 97 039E
        gbc.setState(0x10a9, 0x2661, 0x7400, 0x5505, 0x396e, 0xc686, 0x0, 0x0);
        gbc.writeMem(0x10a9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2661, gbc.sp());
        EXPECT(0x10aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 039F
        gbc.setState(0x579f, 0x578a, 0x28a0, 0xa3, 0xb975, 0xff17, 0x0, 0x1);
        gbc.writeMem(0x579f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x578a, gbc.sp());
        EXPECT(0x57a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03A0
        gbc.setState(0x9a3, 0x61e7, 0xb0c0, 0x2aff, 0x4e7d, 0x88df, 0x0, 0x0);
        gbc.writeMem(0x9a3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x61e7, gbc.sp());
        EXPECT(0x9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03A1
        gbc.setState(0xdc9, 0xe27, 0x5420, 0xf018, 0x4166, 0x315b, 0x0, 0x0);
        gbc.writeMem(0xdc9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe27, gbc.sp());
        EXPECT(0xdca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03A2
        gbc.setState(0x735, 0x43b5, 0xe30, 0x90a7, 0xba9f, 0x5c04, 0x1, 0x1);
        gbc.writeMem(0x735, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x43b5, gbc.sp());
        EXPECT(0x736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03A3
        gbc.setState(0xba96, 0xec39, 0xdae0, 0x1430, 0x6f09, 0x1bdd, 0x0, 0x1);
        gbc.writeMem(0xba96, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xec39, gbc.sp());
        EXPECT(0xba97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xba96));
        // 97 03A4
        gbc.setState(0x984f, 0x1cd8, 0xda0, 0x79ec, 0x7150, 0x9d11, 0x0, 0x1);
        gbc.writeMem(0x984f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1cd8, gbc.sp());
        EXPECT(0x9850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x984f));
        // 97 03A5
        gbc.setState(0x95a9, 0x77f4, 0x4d30, 0xcd86, 0xc8cc, 0x51c4, 0x0, 0x0);
        gbc.writeMem(0x95a9, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x77f4, gbc.sp());
        EXPECT(0x95aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x95a9));
        // 97 03A6
        gbc.setState(0xdf57, 0xd7fb, 0xcf00, 0xcf8, 0x8722, 0xa0ff, 0x0, 0x1);
        gbc.writeMem(0xdf57, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd7fb, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdf57));
        // 97 03A7
        gbc.setState(0xac84, 0xb814, 0xe060, 0xd525, 0x320a, 0xfd0c, 0x1, 0x0);
        gbc.writeMem(0xac84, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb814, gbc.sp());
        EXPECT(0xac85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xac84));
        // 97 03A8
        gbc.setState(0xe35b, 0xe173, 0xe8e0, 0xabcb, 0x9f84, 0xff73, 0x1, 0x1);
        gbc.writeMem(0xe35b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe173, gbc.sp());
        EXPECT(0xe35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe35b));
        // 97 03A9
        gbc.setState(0xed1e, 0xc163, 0x9cd0, 0xce38, 0x1393, 0x96e7, 0x1, 0x0);
        gbc.writeMem(0xed1e, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc163, gbc.sp());
        EXPECT(0xed1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xed1e));
        // 97 03AA
        gbc.setState(0x17be, 0xdd7f, 0x15b0, 0xab3c, 0x6aac, 0x26a, 0x0, 0x0);
        gbc.writeMem(0x17be, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdd7f, gbc.sp());
        EXPECT(0x17bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03AB
        gbc.setState(0x6721, 0xaaa, 0x2fc0, 0x3389, 0xcee4, 0xcecc, 0x1, 0x1);
        gbc.writeMem(0x6721, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xaaa, gbc.sp());
        EXPECT(0x6722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03AC
        gbc.setState(0x1ae2, 0x53e, 0x1860, 0x7d6e, 0x79a4, 0xc3ea, 0x1, 0x0);
        gbc.writeMem(0x1ae2, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x53e, gbc.sp());
        EXPECT(0x1ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03AD
        gbc.setState(0x9051, 0xc8bf, 0x1a90, 0x4b3e, 0x6d64, 0xabfb, 0x1, 0x1);
        gbc.writeMem(0x9051, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc8bf, gbc.sp());
        EXPECT(0x9052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9051));
        // 97 03AE
        gbc.setState(0x3f08, 0xbb63, 0x3b80, 0x17f8, 0xd107, 0xb8a8, 0x1, 0x0);
        gbc.writeMem(0x3f08, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbb63, gbc.sp());
        EXPECT(0x3f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03AF
        gbc.setState(0x302c, 0x33f1, 0x1b90, 0x570, 0xaf0a, 0xcb0a, 0x0, 0x0);
        gbc.writeMem(0x302c, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x33f1, gbc.sp());
        EXPECT(0x302d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03B1
        gbc.setState(0x4373, 0xb9a7, 0x7b10, 0x4e28, 0xfbd, 0x536, 0x1, 0x1);
        gbc.writeMem(0x4373, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb9a7, gbc.sp());
        EXPECT(0x4374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03B2
        gbc.setState(0xe12, 0xdf8c, 0xdbd0, 0xa7f0, 0x85b8, 0xaa6, 0x1, 0x1);
        gbc.writeMem(0xe12, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0xe13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03B3
        gbc.setState(0x7107, 0x4446, 0x9660, 0xfad5, 0x56b6, 0x1bd7, 0x0, 0x0);
        gbc.writeMem(0x7107, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4446, gbc.sp());
        EXPECT(0x7108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03B5
        gbc.setState(0xbf16, 0x3649, 0xc530, 0xdcae, 0xe810, 0xf443, 0x1, 0x1);
        gbc.writeMem(0xbf16, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3649, gbc.sp());
        EXPECT(0xbf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbf16));
        // 97 03B6
        gbc.setState(0x200f, 0xffae, 0x1860, 0x26b4, 0xa18d, 0x3d5d, 0x1, 0x1);
        gbc.writeMem(0x200f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xffae, gbc.sp());
        EXPECT(0x2010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03B7
        gbc.setState(0x8a7b, 0xc187, 0xe7f0, 0xa211, 0xe527, 0xa783, 0x1, 0x1);
        gbc.writeMem(0x8a7b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc187, gbc.sp());
        EXPECT(0x8a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8a7b));
        // 97 03B8
        gbc.setState(0xea82, 0xa341, 0xa330, 0x59d7, 0xf661, 0x7ff4, 0x1, 0x0);
        gbc.writeMem(0xea82, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa341, gbc.sp());
        EXPECT(0xea83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xea82));
        // 97 03B9
        gbc.setState(0xee95, 0x1b09, 0x29c0, 0x71a5, 0xf821, 0x17ed, 0x0, 0x0);
        gbc.writeMem(0xee95, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1b09, gbc.sp());
        EXPECT(0xee96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xee95));
        // 97 03BA
        gbc.setState(0x803d, 0x75fe, 0x87a0, 0x63b5, 0xe1bd, 0xe37e, 0x1, 0x1);
        gbc.writeMem(0x803d, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x75fe, gbc.sp());
        EXPECT(0x803e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x803d));
        // 97 03BB
        gbc.setState(0x680f, 0x9a4c, 0xc840, 0xb5e1, 0xfd54, 0x30d8, 0x0, 0x0);
        gbc.writeMem(0x680f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9a4c, gbc.sp());
        EXPECT(0x6810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03BC
        gbc.setState(0x7f41, 0x29e0, 0x3f10, 0x75be, 0xf96e, 0x3584, 0x0, 0x0);
        gbc.writeMem(0x7f41, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x29e0, gbc.sp());
        EXPECT(0x7f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03BD
        gbc.setState(0x96b8, 0xcc6a, 0x4670, 0x9bda, 0x36ae, 0x2907, 0x0, 0x1);
        gbc.writeMem(0x96b8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcc6a, gbc.sp());
        EXPECT(0x96b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x96b8));
        // 97 03BE
        gbc.setState(0x7364, 0xe325, 0x20c0, 0x8f6a, 0xfb34, 0x8a6c, 0x0, 0x0);
        gbc.writeMem(0x7364, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe325, gbc.sp());
        EXPECT(0x7365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03BF
        gbc.setState(0xe9b3, 0x2610, 0x4c70, 0xdafd, 0x205f, 0xfa5e, 0x1, 0x1);
        gbc.writeMem(0xe9b3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2610, gbc.sp());
        EXPECT(0xe9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe9b3));
        // 97 03C0
        gbc.setState(0xc8c5, 0x89ce, 0x48a0, 0x32c8, 0xbe74, 0x504c, 0x0, 0x0);
        gbc.writeMem(0xc8c5, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x89ce, gbc.sp());
        EXPECT(0xc8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc8c5));
        // 97 03C1
        gbc.setState(0xc6dc, 0x38c5, 0x1c70, 0x6e37, 0x2b8, 0xbae2, 0x0, 0x0);
        gbc.writeMem(0xc6dc, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x38c5, gbc.sp());
        EXPECT(0xc6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc6dc));
        // 97 03C2
        gbc.setState(0xe501, 0xc57e, 0x95d0, 0x9a26, 0x2980, 0xcb15, 0x0, 0x1);
        gbc.writeMem(0xe501, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc57e, gbc.sp());
        EXPECT(0xe502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe501));
        // 97 03C3
        gbc.setState(0x4dc1, 0xbf4a, 0x4b0, 0x5337, 0x2cf0, 0xfddb, 0x0, 0x0);
        gbc.writeMem(0x4dc1, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbf4a, gbc.sp());
        EXPECT(0x4dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03C4
        gbc.setState(0xd2cd, 0x2a90, 0x5160, 0x5154, 0x655, 0x68f4, 0x0, 0x0);
        gbc.writeMem(0xd2cd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2a90, gbc.sp());
        EXPECT(0xd2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd2cd));
        // 97 03C5
        gbc.setState(0x8794, 0xc025, 0x30b0, 0x6cb, 0xafc5, 0x66b0, 0x1, 0x0);
        gbc.writeMem(0x8794, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc025, gbc.sp());
        EXPECT(0x8795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8794));
        // 97 03C6
        gbc.setState(0x3f37, 0xca41, 0xdfb0, 0x7e82, 0x1e41, 0x351f, 0x1, 0x0);
        gbc.writeMem(0x3f37, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xca41, gbc.sp());
        EXPECT(0x3f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03C7
        gbc.setState(0x5e16, 0x2799, 0x2770, 0xd751, 0xa140, 0xbe9e, 0x0, 0x1);
        gbc.writeMem(0x5e16, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2799, gbc.sp());
        EXPECT(0x5e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03C8
        gbc.setState(0x6df, 0xc20a, 0xc450, 0x60bc, 0xe845, 0xef21, 0x1, 0x0);
        gbc.writeMem(0x6df, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc20a, gbc.sp());
        EXPECT(0x6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03C9
        gbc.setState(0xad81, 0xeeb5, 0x9980, 0x5e33, 0x62f8, 0xaa09, 0x1, 0x0);
        gbc.writeMem(0xad81, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xeeb5, gbc.sp());
        EXPECT(0xad82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xad81));
        // 97 03CA
        gbc.setState(0x1f23, 0xb5be, 0xd3f0, 0x85cb, 0xd291, 0x8852, 0x1, 0x1);
        gbc.writeMem(0x1f23, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb5be, gbc.sp());
        EXPECT(0x1f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03CC
        gbc.setState(0xa4e8, 0x5b55, 0xca40, 0x14fd, 0xd406, 0xed63, 0x1, 0x1);
        gbc.writeMem(0xa4e8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5b55, gbc.sp());
        EXPECT(0xa4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa4e8));
        // 97 03CD
        gbc.setState(0x9552, 0xef98, 0x6a0, 0xfb2b, 0xb349, 0xe02c, 0x1, 0x0);
        gbc.writeMem(0x9552, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xef98, gbc.sp());
        EXPECT(0x9553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9552));
        // 97 03CE
        gbc.setState(0x6efb, 0x89c1, 0xb3f0, 0x6880, 0x7b44, 0x8cff, 0x0, 0x1);
        gbc.writeMem(0x6efb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x89c1, gbc.sp());
        EXPECT(0x6efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03CF
        gbc.setState(0x6cfe, 0xad4e, 0x22c0, 0xfd1e, 0xbed5, 0x9a8f, 0x0, 0x1);
        gbc.writeMem(0x6cfe, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xad4e, gbc.sp());
        EXPECT(0x6cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03D0
        gbc.setState(0x3813, 0xa0e0, 0xe6f0, 0xe3f4, 0x58e0, 0x2f4a, 0x0, 0x1);
        gbc.writeMem(0x3813, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa0e0, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03D1
        gbc.setState(0x9830, 0x5b4b, 0xa650, 0xf33, 0x675e, 0x60a5, 0x1, 0x0);
        gbc.writeMem(0x9830, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5b4b, gbc.sp());
        EXPECT(0x9831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9830));
        // 97 03D2
        gbc.setState(0x364f, 0x8e01, 0x4fd0, 0xff16, 0xc816, 0x7df7, 0x0, 0x1);
        gbc.writeMem(0x364f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8e01, gbc.sp());
        EXPECT(0x3650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03D3
        gbc.setState(0x2e74, 0x20e8, 0x5150, 0xddc2, 0x1035, 0x936a, 0x1, 0x0);
        gbc.writeMem(0x2e74, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x20e8, gbc.sp());
        EXPECT(0x2e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03D4
        gbc.setState(0x36b3, 0x23d4, 0x5890, 0xa342, 0xa51a, 0x71ff, 0x1, 0x0);
        gbc.writeMem(0x36b3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x23d4, gbc.sp());
        EXPECT(0x36b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03D5
        gbc.setState(0x852, 0x1269, 0x6f00, 0x7bb9, 0xf864, 0xe274, 0x0, 0x1);
        gbc.writeMem(0x852, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1269, gbc.sp());
        EXPECT(0x853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03D6
        gbc.setState(0x1663, 0x79fe, 0x4d0, 0xf4cb, 0x1c4f, 0x442c, 0x1, 0x1);
        gbc.writeMem(0x1663, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x79fe, gbc.sp());
        EXPECT(0x1664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03D7
        gbc.setState(0xde11, 0x8c06, 0x8900, 0x25fa, 0xe8ca, 0x112, 0x0, 0x1);
        gbc.writeMem(0xde11, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8c06, gbc.sp());
        EXPECT(0xde12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xde11));
        // 97 03D8
        gbc.setState(0x46ac, 0xa151, 0x4ea0, 0xa05e, 0x81a1, 0xd1b8, 0x0, 0x0);
        gbc.writeMem(0x46ac, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa151, gbc.sp());
        EXPECT(0x46ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03D9
        gbc.setState(0x9267, 0xe464, 0x5c90, 0x3817, 0xec1e, 0xbf9c, 0x1, 0x1);
        gbc.writeMem(0x9267, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe464, gbc.sp());
        EXPECT(0x9268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9267));
        // 97 03DA
        gbc.setState(0xec64, 0x2177, 0x4e90, 0xfef0, 0x951f, 0x4192, 0x0, 0x1);
        gbc.writeMem(0xec64, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2177, gbc.sp());
        EXPECT(0xec65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xec64));
        // 97 03DB
        gbc.setState(0xcff3, 0x2a37, 0x260, 0xbc42, 0x214f, 0x9855, 0x0, 0x1);
        gbc.writeMem(0xcff3, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2a37, gbc.sp());
        EXPECT(0xcff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcff3));
        // 97 03DC
        gbc.setState(0xd402, 0x7d78, 0xefa0, 0x6979, 0x850f, 0xe673, 0x0, 0x1);
        gbc.writeMem(0xd402, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7d78, gbc.sp());
        EXPECT(0xd403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd402));
        // 97 03DD
        gbc.setState(0x6508, 0x4e54, 0xe3f0, 0x4160, 0x922b, 0xb79d, 0x0, 0x1);
        gbc.writeMem(0x6508, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4e54, gbc.sp());
        EXPECT(0x6509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03DE
        gbc.setState(0x4aab, 0x4939, 0x69c0, 0x8199, 0x9176, 0xff36, 0x1, 0x0);
        gbc.writeMem(0x4aab, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4939, gbc.sp());
        EXPECT(0x4aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03DF
        gbc.setState(0x3bd8, 0x9914, 0xacf0, 0xb451, 0xee6d, 0xc0e6, 0x1, 0x0);
        gbc.writeMem(0x3bd8, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9914, gbc.sp());
        EXPECT(0x3bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03E0
        gbc.setState(0xef93, 0xf244, 0x1190, 0x9604, 0x6065, 0xf8ca, 0x0, 0x1);
        gbc.writeMem(0xef93, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf244, gbc.sp());
        EXPECT(0xef94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xef93));
        // 97 03E1
        gbc.setState(0xa65f, 0xbbfc, 0xc830, 0xf82c, 0xa298, 0xb1e3, 0x1, 0x0);
        gbc.writeMem(0xa65f, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbbfc, gbc.sp());
        EXPECT(0xa660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa65f));
        // 97 03E2
        gbc.setState(0x3788, 0xf353, 0x860, 0x91fb, 0x5dbc, 0xed7b, 0x1, 0x0);
        gbc.writeMem(0x3788, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf353, gbc.sp());
        EXPECT(0x3789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03E3
        gbc.setState(0xb5fd, 0x2e48, 0x4c80, 0x1d76, 0xe586, 0x46fa, 0x1, 0x1);
        gbc.writeMem(0xb5fd, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2e48, gbc.sp());
        EXPECT(0xb5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xb5fd));
        // 97 03E4
        gbc.setState(0x32eb, 0x3637, 0xb2b0, 0x340a, 0xfc0, 0xa950, 0x1, 0x1);
        gbc.writeMem(0x32eb, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3637, gbc.sp());
        EXPECT(0x32ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03E5
        gbc.setState(0x46, 0xb5c4, 0xf900, 0xb9c5, 0xfb3f, 0x2aea, 0x1, 0x0);
        gbc.writeMem(0x46, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb5c4, gbc.sp());
        EXPECT(0x47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03E6
        gbc.setState(0x61b, 0x9b67, 0x1430, 0xfd95, 0x5824, 0x7d79, 0x1, 0x0);
        gbc.writeMem(0x61b, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9b67, gbc.sp());
        EXPECT(0x61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 97 03E7
        gbc.setState(0x5d5a, 0xa4a2, 0x2570, 0xb663, 0xa7f5, 0x11f6, 0x0, 0x0);
        gbc.writeMem(0x5d5a, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa4a2, gbc.sp());
        EXPECT(0x5d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
