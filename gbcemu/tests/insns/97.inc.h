    TEST(gbcemu, opcode_97) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 97 0000
        gbc.setState(0xea88, 0xa1f2, 0x2860, 0xfce4, 0xf37d, 0xbd3, 0x0, 0x1);
        gbc.writeMem(0xea88, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa1f2);
        EXPECT(gbc.pc(), 0xea89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea88), 0x97);
        // 97 0001
        gbc.setState(0xb8cd, 0x9588, 0x4000, 0xbc48, 0x8587, 0xe91a, 0x0, 0x1);
        gbc.writeMem(0xb8cd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9588);
        EXPECT(gbc.pc(), 0xb8ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8cd), 0x97);
        // 97 0002
        gbc.setState(0x7ced, 0x465f, 0xdff0, 0x77b2, 0x4775, 0xbfc3, 0x1, 0x1);
        gbc.writeMem(0x7ced, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x465f);
        EXPECT(gbc.pc(), 0x7cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0003
        gbc.setState(0x59c4, 0x9e1f, 0x7150, 0x8ffe, 0x74c7, 0x2a7d, 0x0, 0x1);
        gbc.writeMem(0x59c4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9e1f);
        EXPECT(gbc.pc(), 0x59c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0004
        gbc.setState(0x6a99, 0x8dd1, 0x890, 0xab26, 0x53e6, 0xa178, 0x1, 0x0);
        gbc.writeMem(0x6a99, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8dd1);
        EXPECT(gbc.pc(), 0x6a9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0005
        gbc.setState(0x9d05, 0x2104, 0xeb80, 0xc5ef, 0x523d, 0x7160, 0x0, 0x1);
        gbc.writeMem(0x9d05, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2104);
        EXPECT(gbc.pc(), 0x9d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d05), 0x97);
        // 97 0006
        gbc.setState(0x582d, 0xb666, 0x6be0, 0x79bf, 0x5455, 0x2724, 0x0, 0x1);
        gbc.writeMem(0x582d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb666);
        EXPECT(gbc.pc(), 0x582e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0007
        gbc.setState(0xeb4b, 0x76b2, 0xf1e0, 0x90ce, 0xa702, 0x4975, 0x1, 0x0);
        gbc.writeMem(0xeb4b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x76b2);
        EXPECT(gbc.pc(), 0xeb4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb4b), 0x97);
        // 97 0008
        gbc.setState(0x691b, 0xebfd, 0x7750, 0xebc, 0x7b71, 0x69bd, 0x1, 0x1);
        gbc.writeMem(0x691b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xebfd);
        EXPECT(gbc.pc(), 0x691c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0009
        gbc.setState(0xdfba, 0xf199, 0x1bc0, 0x24be, 0xd608, 0x339, 0x0, 0x1);
        gbc.writeMem(0xdfba, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf199);
        EXPECT(gbc.pc(), 0xdfbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfba), 0x97);
        // 97 000A
        gbc.setState(0xcb78, 0xd62, 0x90a0, 0x9ab5, 0x2c2e, 0x73c5, 0x0, 0x0);
        gbc.writeMem(0xcb78, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd62);
        EXPECT(gbc.pc(), 0xcb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb78), 0x97);
        // 97 000B
        gbc.setState(0x3b3c, 0x1efe, 0x8ac0, 0x69bd, 0x7f65, 0xd560, 0x0, 0x0);
        gbc.writeMem(0x3b3c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1efe);
        EXPECT(gbc.pc(), 0x3b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 000C
        gbc.setState(0x2bf0, 0x741a, 0x4a0, 0xa162, 0x9d89, 0x9885, 0x0, 0x0);
        gbc.writeMem(0x2bf0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x741a);
        EXPECT(gbc.pc(), 0x2bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 000D
        gbc.setState(0x7328, 0x1689, 0xb1b0, 0x83e, 0xa2ff, 0x8d5e, 0x0, 0x1);
        gbc.writeMem(0x7328, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1689);
        EXPECT(gbc.pc(), 0x7329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 000E
        gbc.setState(0x4173, 0xd33d, 0x2640, 0xa7f9, 0x937f, 0x279a, 0x1, 0x1);
        gbc.writeMem(0x4173, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd33d);
        EXPECT(gbc.pc(), 0x4174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 000F
        gbc.setState(0x5ef7, 0x83d7, 0x3f50, 0x664b, 0x5fae, 0x2071, 0x1, 0x0);
        gbc.writeMem(0x5ef7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x83d7);
        EXPECT(gbc.pc(), 0x5ef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0010
        gbc.setState(0x679b, 0x322a, 0x2ab0, 0xd718, 0x2995, 0x263c, 0x0, 0x1);
        gbc.writeMem(0x679b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x322a);
        EXPECT(gbc.pc(), 0x679c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0011
        gbc.setState(0xdd10, 0xecc7, 0x2820, 0xdb2b, 0xcbcb, 0xb605, 0x1, 0x0);
        gbc.writeMem(0xdd10, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xecc7);
        EXPECT(gbc.pc(), 0xdd11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd10), 0x97);
        // 97 0012
        gbc.setState(0xeacf, 0xa7c5, 0xd2b0, 0x8c00, 0x2fd8, 0x7dc0, 0x1, 0x1);
        gbc.writeMem(0xeacf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa7c5);
        EXPECT(gbc.pc(), 0xead0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeacf), 0x97);
        // 97 0013
        gbc.setState(0x429, 0xf990, 0x1750, 0xdfd8, 0x2767, 0x1e16, 0x1, 0x1);
        gbc.writeMem(0x429, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf990);
        EXPECT(gbc.pc(), 0x42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0014
        gbc.setState(0x3d08, 0xf3a7, 0x8c30, 0xd857, 0x45e5, 0x7f09, 0x0, 0x1);
        gbc.writeMem(0x3d08, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf3a7);
        EXPECT(gbc.pc(), 0x3d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0015
        gbc.setState(0x504a, 0x31d8, 0x3080, 0xafe3, 0x8f90, 0xf4dd, 0x0, 0x1);
        gbc.writeMem(0x504a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x31d8);
        EXPECT(gbc.pc(), 0x504b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0016
        gbc.setState(0xdff, 0x1dd1, 0x2ae0, 0xd34e, 0xe053, 0xa4eb, 0x0, 0x0);
        gbc.writeMem(0xdff, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1dd1);
        EXPECT(gbc.pc(), 0xe00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0017
        gbc.setState(0xa9ba, 0x5ab9, 0x1c50, 0x9c83, 0xf231, 0x70c, 0x0, 0x1);
        gbc.writeMem(0xa9ba, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5ab9);
        EXPECT(gbc.pc(), 0xa9bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ba), 0x97);
        // 97 0018
        gbc.setState(0xc14e, 0x6192, 0xbaa0, 0x2f17, 0x85cf, 0xcd3b, 0x1, 0x1);
        gbc.writeMem(0xc14e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6192);
        EXPECT(gbc.pc(), 0xc14f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc14e), 0x97);
        // 97 0019
        gbc.setState(0x381b, 0xb941, 0x6090, 0xb10e, 0x6ed3, 0xb094, 0x0, 0x0);
        gbc.writeMem(0x381b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb941);
        EXPECT(gbc.pc(), 0x381c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 001A
        gbc.setState(0x173b, 0x93b0, 0xaff0, 0x1f26, 0x12ec, 0xea5b, 0x0, 0x0);
        gbc.writeMem(0x173b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x93b0);
        EXPECT(gbc.pc(), 0x173c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 001B
        gbc.setState(0xb715, 0xca41, 0x8c70, 0xaf1d, 0xe242, 0x5564, 0x0, 0x1);
        gbc.writeMem(0xb715, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xca41);
        EXPECT(gbc.pc(), 0xb716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb715), 0x97);
        // 97 001C
        gbc.setState(0x6867, 0xd228, 0x15a0, 0xbcc9, 0xfcd5, 0xabfc, 0x1, 0x0);
        gbc.writeMem(0x6867, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd228);
        EXPECT(gbc.pc(), 0x6868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 001D
        gbc.setState(0x6f97, 0x2d19, 0xa020, 0x12d3, 0xaa0e, 0xe14c, 0x1, 0x0);
        gbc.writeMem(0x6f97, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2d19);
        EXPECT(gbc.pc(), 0x6f98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 001E
        gbc.setState(0xa43a, 0x144, 0xbc90, 0xa03, 0x543a, 0xac40, 0x0, 0x1);
        gbc.writeMem(0xa43a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x144);
        EXPECT(gbc.pc(), 0xa43b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43a), 0x97);
        // 97 0020
        gbc.setState(0x21fc, 0x17a9, 0xc2b0, 0xa79c, 0x89db, 0xc85b, 0x1, 0x0);
        gbc.writeMem(0x21fc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x17a9);
        EXPECT(gbc.pc(), 0x21fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0021
        gbc.setState(0x75c3, 0xdad3, 0x2f30, 0x7311, 0xcbbc, 0x52aa, 0x1, 0x0);
        gbc.writeMem(0x75c3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xdad3);
        EXPECT(gbc.pc(), 0x75c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0022
        gbc.setState(0xbfb2, 0x2c2e, 0x8590, 0x4e2f, 0xe, 0xd7a2, 0x1, 0x1);
        gbc.writeMem(0xbfb2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2c2e);
        EXPECT(gbc.pc(), 0xbfb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb2), 0x97);
        // 97 0023
        gbc.setState(0x60fc, 0x6577, 0xf7c0, 0x852b, 0xde4b, 0x60f5, 0x0, 0x1);
        gbc.writeMem(0x60fc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6577);
        EXPECT(gbc.pc(), 0x60fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0024
        gbc.setState(0xd449, 0xd436, 0xfa10, 0x59db, 0x3998, 0xf392, 0x1, 0x0);
        gbc.writeMem(0xd449, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd436);
        EXPECT(gbc.pc(), 0xd44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd449), 0x97);
        // 97 0025
        gbc.setState(0x30e3, 0xa608, 0xbb20, 0x7d1d, 0x9ae0, 0xeae2, 0x1, 0x1);
        gbc.writeMem(0x30e3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa608);
        EXPECT(gbc.pc(), 0x30e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0026
        gbc.setState(0x881, 0x2584, 0x6360, 0x7b5b, 0x3026, 0x27eb, 0x1, 0x1);
        gbc.writeMem(0x881, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2584);
        EXPECT(gbc.pc(), 0x882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0027
        gbc.setState(0x1b73, 0x12d9, 0xa770, 0x20e4, 0x7726, 0x5115, 0x1, 0x0);
        gbc.writeMem(0x1b73, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x12d9);
        EXPECT(gbc.pc(), 0x1b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0028
        gbc.setState(0x8c62, 0x1d6b, 0x1280, 0xc498, 0x8499, 0x48e2, 0x0, 0x0);
        gbc.writeMem(0x8c62, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1d6b);
        EXPECT(gbc.pc(), 0x8c63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c62), 0x97);
        // 97 0029
        gbc.setState(0x7d2e, 0x63e0, 0xb130, 0x55c4, 0x8ef2, 0xefae, 0x1, 0x1);
        gbc.writeMem(0x7d2e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x63e0);
        EXPECT(gbc.pc(), 0x7d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 002A
        gbc.setState(0x401d, 0x2bab, 0x7e80, 0x3503, 0x1a45, 0xa9cc, 0x1, 0x0);
        gbc.writeMem(0x401d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2bab);
        EXPECT(gbc.pc(), 0x401e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 002B
        gbc.setState(0xeeac, 0xc5ba, 0xbeb0, 0xe239, 0xec4d, 0x31cf, 0x0, 0x0);
        gbc.writeMem(0xeeac, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc5ba);
        EXPECT(gbc.pc(), 0xeead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeac), 0x97);
        // 97 002C
        gbc.setState(0x413a, 0x7517, 0x1630, 0x6b44, 0xa94b, 0xd3e7, 0x1, 0x1);
        gbc.writeMem(0x413a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7517);
        EXPECT(gbc.pc(), 0x413b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 002D
        gbc.setState(0xbfc0, 0x88b3, 0x4c70, 0x9776, 0x68d9, 0x4f25, 0x1, 0x0);
        gbc.writeMem(0xbfc0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x88b3);
        EXPECT(gbc.pc(), 0xbfc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc0), 0x97);
        // 97 002E
        gbc.setState(0xcef7, 0xb486, 0xc390, 0xf8cc, 0x602c, 0x8d6e, 0x1, 0x0);
        gbc.writeMem(0xcef7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb486);
        EXPECT(gbc.pc(), 0xcef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef7), 0x97);
        // 97 002F
        gbc.setState(0x5c98, 0x736f, 0xe2f0, 0x3431, 0x2f48, 0x428c, 0x0, 0x0);
        gbc.writeMem(0x5c98, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x736f);
        EXPECT(gbc.pc(), 0x5c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0030
        gbc.setState(0x7198, 0xcbe6, 0x60d0, 0x1def, 0x5cb4, 0xebb1, 0x1, 0x1);
        gbc.writeMem(0x7198, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcbe6);
        EXPECT(gbc.pc(), 0x7199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0031
        gbc.setState(0x3f7b, 0x368b, 0x6600, 0xbc5a, 0x24f7, 0x3dec, 0x1, 0x1);
        gbc.writeMem(0x3f7b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x368b);
        EXPECT(gbc.pc(), 0x3f7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0032
        gbc.setState(0xd9c7, 0xaa1, 0x9240, 0x7ee7, 0x50f4, 0x1c9a, 0x1, 0x0);
        gbc.writeMem(0xd9c7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xaa1);
        EXPECT(gbc.pc(), 0xd9c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c7), 0x97);
        // 97 0033
        gbc.setState(0x1a83, 0x63c4, 0xb5a0, 0x289e, 0x5245, 0xdce0, 0x1, 0x1);
        gbc.writeMem(0x1a83, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x63c4);
        EXPECT(gbc.pc(), 0x1a84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0034
        gbc.setState(0x44d8, 0xfd25, 0xd740, 0x4c64, 0x54d3, 0x580d, 0x1, 0x0);
        gbc.writeMem(0x44d8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfd25);
        EXPECT(gbc.pc(), 0x44d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0035
        gbc.setState(0x685c, 0x3bff, 0xe840, 0x9be1, 0x5b71, 0x78db, 0x1, 0x1);
        gbc.writeMem(0x685c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3bff);
        EXPECT(gbc.pc(), 0x685d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0036
        gbc.setState(0xa6f4, 0x7f2c, 0xaba0, 0x756b, 0x7c3c, 0x6879, 0x0, 0x1);
        gbc.writeMem(0xa6f4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7f2c);
        EXPECT(gbc.pc(), 0xa6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f4), 0x97);
        // 97 0037
        gbc.setState(0x7a37, 0xbec1, 0x7b90, 0xb5e9, 0x56f9, 0x54ce, 0x0, 0x1);
        gbc.writeMem(0x7a37, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbec1);
        EXPECT(gbc.pc(), 0x7a38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0038
        gbc.setState(0x1bb1, 0x3540, 0xb460, 0xfb5f, 0x4fe5, 0x8c8f, 0x0, 0x1);
        gbc.writeMem(0x1bb1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3540);
        EXPECT(gbc.pc(), 0x1bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0039
        gbc.setState(0xb5de, 0xe1c3, 0xfd70, 0x3cc1, 0x1ded, 0xf171, 0x1, 0x0);
        gbc.writeMem(0xb5de, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe1c3);
        EXPECT(gbc.pc(), 0xb5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5de), 0x97);
        // 97 003A
        gbc.setState(0x15fb, 0xa584, 0xf670, 0x15dd, 0x59c8, 0x477f, 0x0, 0x1);
        gbc.writeMem(0x15fb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa584);
        EXPECT(gbc.pc(), 0x15fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 003B
        gbc.setState(0x26f5, 0xfcf, 0x6d30, 0x2b51, 0xd084, 0xd084, 0x1, 0x0);
        gbc.writeMem(0x26f5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfcf);
        EXPECT(gbc.pc(), 0x26f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 003C
        gbc.setState(0xec37, 0x1384, 0x2f50, 0x8a99, 0x347c, 0x6816, 0x1, 0x1);
        gbc.writeMem(0xec37, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1384);
        EXPECT(gbc.pc(), 0xec38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec37), 0x97);
        // 97 003D
        gbc.setState(0x91af, 0x81e9, 0xeff0, 0x696a, 0xb9c2, 0xd04a, 0x1, 0x1);
        gbc.writeMem(0x91af, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x81e9);
        EXPECT(gbc.pc(), 0x91b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91af), 0x97);
        // 97 003F
        gbc.setState(0xa150, 0xe765, 0x10c0, 0xf332, 0x6e54, 0xb0ae, 0x1, 0x0);
        gbc.writeMem(0xa150, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe765);
        EXPECT(gbc.pc(), 0xa151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa150), 0x97);
        // 97 0040
        gbc.setState(0xaccd, 0x4987, 0x7bf0, 0x86a4, 0x5762, 0x61d3, 0x1, 0x1);
        gbc.writeMem(0xaccd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4987);
        EXPECT(gbc.pc(), 0xacce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaccd), 0x97);
        // 97 0041
        gbc.setState(0xe873, 0x2ba9, 0xd9c0, 0x7051, 0x861, 0x91e6, 0x1, 0x0);
        gbc.writeMem(0xe873, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2ba9);
        EXPECT(gbc.pc(), 0xe874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe873), 0x97);
        // 97 0042
        gbc.setState(0xdca1, 0x3133, 0xb280, 0x2a5e, 0x7964, 0xe5f9, 0x0, 0x1);
        gbc.writeMem(0xdca1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3133);
        EXPECT(gbc.pc(), 0xdca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca1), 0x97);
        // 97 0043
        gbc.setState(0xa7a0, 0x1857, 0xe4d0, 0xda83, 0x19b6, 0xa999, 0x1, 0x0);
        gbc.writeMem(0xa7a0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1857);
        EXPECT(gbc.pc(), 0xa7a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a0), 0x97);
        // 97 0044
        gbc.setState(0x80f4, 0xb673, 0x59c0, 0xea55, 0xe951, 0xe1c7, 0x0, 0x0);
        gbc.writeMem(0x80f4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb673);
        EXPECT(gbc.pc(), 0x80f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f4), 0x97);
        // 97 0046
        gbc.setState(0x6c68, 0x2671, 0x1940, 0xa965, 0x82fa, 0x8f71, 0x1, 0x1);
        gbc.writeMem(0x6c68, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2671);
        EXPECT(gbc.pc(), 0x6c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0047
        gbc.setState(0x3d52, 0xa819, 0x8530, 0x52d4, 0x2fe2, 0x9691, 0x1, 0x0);
        gbc.writeMem(0x3d52, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa819);
        EXPECT(gbc.pc(), 0x3d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0048
        gbc.setState(0xa568, 0xd05a, 0x1f20, 0xf017, 0xca1c, 0x2105, 0x1, 0x1);
        gbc.writeMem(0xa568, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd05a);
        EXPECT(gbc.pc(), 0xa569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa568), 0x97);
        // 97 0049
        gbc.setState(0xd9b, 0x5207, 0x5380, 0xf040, 0xe416, 0x2599, 0x0, 0x1);
        gbc.writeMem(0xd9b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5207);
        EXPECT(gbc.pc(), 0xd9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 004A
        gbc.setState(0x164d, 0xe7de, 0x70e0, 0x6967, 0xc59e, 0x9ca6, 0x0, 0x0);
        gbc.writeMem(0x164d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe7de);
        EXPECT(gbc.pc(), 0x164e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 004C
        gbc.setState(0xdce1, 0x5625, 0x6fc0, 0xfbf8, 0xe824, 0xac5f, 0x0, 0x0);
        gbc.writeMem(0xdce1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5625);
        EXPECT(gbc.pc(), 0xdce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce1), 0x97);
        // 97 004D
        gbc.setState(0xaa86, 0xa00f, 0x4a60, 0xa597, 0xffdc, 0x1bb4, 0x1, 0x0);
        gbc.writeMem(0xaa86, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa00f);
        EXPECT(gbc.pc(), 0xaa87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa86), 0x97);
        // 97 004E
        gbc.setState(0x1c2b, 0x751a, 0x4540, 0x57e, 0x4af2, 0x6db6, 0x1, 0x1);
        gbc.writeMem(0x1c2b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x751a);
        EXPECT(gbc.pc(), 0x1c2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 004F
        gbc.setState(0x9513, 0xda2a, 0x4610, 0xfb95, 0x21d6, 0xbd90, 0x0, 0x1);
        gbc.writeMem(0x9513, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xda2a);
        EXPECT(gbc.pc(), 0x9514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9513), 0x97);
        // 97 0050
        gbc.setState(0x3290, 0x61c5, 0x7f40, 0xa5cc, 0xcc96, 0x6b80, 0x0, 0x0);
        gbc.writeMem(0x3290, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x61c5);
        EXPECT(gbc.pc(), 0x3291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0051
        gbc.setState(0x40b5, 0xefeb, 0xc970, 0xafd2, 0x1cee, 0xdd29, 0x1, 0x1);
        gbc.writeMem(0x40b5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xefeb);
        EXPECT(gbc.pc(), 0x40b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0052
        gbc.setState(0x241a, 0x9328, 0x88d0, 0x5b4b, 0xeb87, 0x2ee9, 0x1, 0x0);
        gbc.writeMem(0x241a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9328);
        EXPECT(gbc.pc(), 0x241b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0053
        gbc.setState(0xdcfe, 0xa7e1, 0xbb80, 0xc4d2, 0xa5e5, 0x509b, 0x1, 0x1);
        gbc.writeMem(0xdcfe, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa7e1);
        EXPECT(gbc.pc(), 0xdcff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcfe), 0x97);
        // 97 0054
        gbc.setState(0x7c7c, 0x7d1f, 0x3ce0, 0x3ec1, 0xc46, 0x58b, 0x0, 0x0);
        gbc.writeMem(0x7c7c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7d1f);
        EXPECT(gbc.pc(), 0x7c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0055
        gbc.setState(0x8d7a, 0x1f67, 0x640, 0xa1cb, 0x3236, 0x80e5, 0x0, 0x1);
        gbc.writeMem(0x8d7a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1f67);
        EXPECT(gbc.pc(), 0x8d7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7a), 0x97);
        // 97 0057
        gbc.setState(0x57eb, 0x1ee8, 0x1b40, 0x6af, 0x947b, 0xf86c, 0x1, 0x1);
        gbc.writeMem(0x57eb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1ee8);
        EXPECT(gbc.pc(), 0x57ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0059
        gbc.setState(0x6762, 0xfc85, 0x4c80, 0x582d, 0x5cbe, 0xa74, 0x1, 0x1);
        gbc.writeMem(0x6762, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xfc85);
        EXPECT(gbc.pc(), 0x6763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 005A
        gbc.setState(0x70e1, 0x3866, 0x6dd0, 0x2c62, 0x760d, 0xc5be, 0x1, 0x1);
        gbc.writeMem(0x70e1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3866);
        EXPECT(gbc.pc(), 0x70e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 005B
        gbc.setState(0xde5f, 0x6960, 0x2700, 0x8eb7, 0x777e, 0xa63a, 0x1, 0x1);
        gbc.writeMem(0xde5f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6960);
        EXPECT(gbc.pc(), 0xde60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde5f), 0x97);
        // 97 005C
        gbc.setState(0xc8c2, 0xbaed, 0x33f0, 0x6a54, 0xcb2d, 0x8f78, 0x0, 0x1);
        gbc.writeMem(0xc8c2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbaed);
        EXPECT(gbc.pc(), 0xc8c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c2), 0x97);
        // 97 005D
        gbc.setState(0xa624, 0x63cc, 0x1ba0, 0x9d20, 0x72f8, 0x9319, 0x1, 0x1);
        gbc.writeMem(0xa624, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x63cc);
        EXPECT(gbc.pc(), 0xa625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa624), 0x97);
        // 97 005E
        gbc.setState(0x37fa, 0x6a8e, 0x99e0, 0xa082, 0x9b8, 0x534f, 0x0, 0x0);
        gbc.writeMem(0x37fa, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6a8e);
        EXPECT(gbc.pc(), 0x37fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 005F
        gbc.setState(0xe14c, 0x7f94, 0x91f0, 0x9961, 0x7e71, 0x8a2d, 0x0, 0x1);
        gbc.writeMem(0xe14c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7f94);
        EXPECT(gbc.pc(), 0xe14d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe14c), 0x97);
        // 97 0060
        gbc.setState(0x8b70, 0x539f, 0x46f0, 0xe01d, 0xa046, 0x7b7, 0x0, 0x0);
        gbc.writeMem(0x8b70, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x539f);
        EXPECT(gbc.pc(), 0x8b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b70), 0x97);
        // 97 0061
        gbc.setState(0x57ae, 0x5994, 0x9d70, 0xef7d, 0xf381, 0x7bcb, 0x1, 0x1);
        gbc.writeMem(0x57ae, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5994);
        EXPECT(gbc.pc(), 0x57af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0062
        gbc.setState(0x5b84, 0x8349, 0xc110, 0x6542, 0x7bbc, 0xfb10, 0x1, 0x0);
        gbc.writeMem(0x5b84, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8349);
        EXPECT(gbc.pc(), 0x5b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0063
        gbc.setState(0xa142, 0x99a2, 0xb8e0, 0x1ecd, 0xe12f, 0xaa84, 0x1, 0x0);
        gbc.writeMem(0xa142, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x99a2);
        EXPECT(gbc.pc(), 0xa143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa142), 0x97);
        // 97 0064
        gbc.setState(0xd4f3, 0xfae7, 0xaa10, 0x33c6, 0x1f4, 0x3bc6, 0x0, 0x0);
        gbc.writeMem(0xd4f3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfae7);
        EXPECT(gbc.pc(), 0xd4f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f3), 0x97);
        // 97 0065
        gbc.setState(0xcaa4, 0x9576, 0xba90, 0xa96, 0x12da, 0x9a7c, 0x1, 0x1);
        gbc.writeMem(0xcaa4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9576);
        EXPECT(gbc.pc(), 0xcaa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaa4), 0x97);
        // 97 0066
        gbc.setState(0xa111, 0x3512, 0xb310, 0x8123, 0x30bb, 0xe172, 0x1, 0x1);
        gbc.writeMem(0xa111, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3512);
        EXPECT(gbc.pc(), 0xa112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa111), 0x97);
        // 97 0067
        gbc.setState(0x8117, 0x583d, 0xfb70, 0xadbd, 0xb7b8, 0x6db8, 0x1, 0x1);
        gbc.writeMem(0x8117, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x583d);
        EXPECT(gbc.pc(), 0x8118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8117), 0x97);
        // 97 0068
        gbc.setState(0x9392, 0x67c9, 0xcf40, 0xa365, 0x31fa, 0x6f02, 0x0, 0x1);
        gbc.writeMem(0x9392, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x67c9);
        EXPECT(gbc.pc(), 0x9393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9392), 0x97);
        // 97 006A
        gbc.setState(0xb0dc, 0x59a0, 0x7fa0, 0xa146, 0x90fa, 0x3ad6, 0x0, 0x1);
        gbc.writeMem(0xb0dc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x59a0);
        EXPECT(gbc.pc(), 0xb0dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0dc), 0x97);
        // 97 006B
        gbc.setState(0xd3be, 0xee4a, 0xa280, 0x9bfb, 0xc806, 0xe420, 0x1, 0x0);
        gbc.writeMem(0xd3be, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xee4a);
        EXPECT(gbc.pc(), 0xd3bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3be), 0x97);
        // 97 006C
        gbc.setState(0x43c2, 0x6b38, 0xcd10, 0xea23, 0xe681, 0x6fad, 0x1, 0x1);
        gbc.writeMem(0x43c2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6b38);
        EXPECT(gbc.pc(), 0x43c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 006D
        gbc.setState(0xeca5, 0x1c8d, 0x8280, 0x3eb5, 0xc25b, 0x25d7, 0x0, 0x1);
        gbc.writeMem(0xeca5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1c8d);
        EXPECT(gbc.pc(), 0xeca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca5), 0x97);
        // 97 006E
        gbc.setState(0x3702, 0x4597, 0xd4d0, 0x6f71, 0x8e48, 0xd1d9, 0x1, 0x0);
        gbc.writeMem(0x3702, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4597);
        EXPECT(gbc.pc(), 0x3703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 006F
        gbc.setState(0x65f7, 0xb27c, 0x1520, 0x717e, 0xd1ee, 0x905d, 0x0, 0x1);
        gbc.writeMem(0x65f7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb27c);
        EXPECT(gbc.pc(), 0x65f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0070
        gbc.setState(0x72b6, 0x52ca, 0xd520, 0xd7f3, 0xee3a, 0x6790, 0x1, 0x1);
        gbc.writeMem(0x72b6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x52ca);
        EXPECT(gbc.pc(), 0x72b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0071
        gbc.setState(0xb380, 0x2f4e, 0xba0, 0x19b, 0x86e0, 0xf686, 0x1, 0x1);
        gbc.writeMem(0xb380, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2f4e);
        EXPECT(gbc.pc(), 0xb381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb380), 0x97);
        // 97 0072
        gbc.setState(0x7892, 0xb2ae, 0xf200, 0x4fcc, 0x1316, 0x4fa7, 0x0, 0x1);
        gbc.writeMem(0x7892, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb2ae);
        EXPECT(gbc.pc(), 0x7893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0073
        gbc.setState(0x6457, 0xeaf, 0x9350, 0x7fdf, 0x4402, 0x5301, 0x1, 0x1);
        gbc.writeMem(0x6457, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xeaf);
        EXPECT(gbc.pc(), 0x6458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0074
        gbc.setState(0x1614, 0x9be, 0xe960, 0xeb4d, 0x3749, 0xb746, 0x0, 0x1);
        gbc.writeMem(0x1614, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9be);
        EXPECT(gbc.pc(), 0x1615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0075
        gbc.setState(0x30fb, 0x1d4d, 0x43f0, 0xf6e9, 0xe6f8, 0x5f14, 0x0, 0x1);
        gbc.writeMem(0x30fb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1d4d);
        EXPECT(gbc.pc(), 0x30fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0076
        gbc.setState(0xbce4, 0xdcbf, 0xc240, 0xe53f, 0x59b1, 0xa492, 0x0, 0x0);
        gbc.writeMem(0xbce4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xdcbf);
        EXPECT(gbc.pc(), 0xbce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce4), 0x97);
        // 97 0077
        gbc.setState(0x38fe, 0xffa3, 0x15d0, 0x98c6, 0x7624, 0x8f94, 0x1, 0x1);
        gbc.writeMem(0x38fe, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xffa3);
        EXPECT(gbc.pc(), 0x38ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0078
        gbc.setState(0x9368, 0x8870, 0x8d50, 0x25ee, 0x952f, 0xa09f, 0x1, 0x1);
        gbc.writeMem(0x9368, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8870);
        EXPECT(gbc.pc(), 0x9369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9368), 0x97);
        // 97 0079
        gbc.setState(0xd3f5, 0x47bb, 0xe1e0, 0xa9c6, 0xca77, 0xe55e, 0x1, 0x1);
        gbc.writeMem(0xd3f5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x47bb);
        EXPECT(gbc.pc(), 0xd3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3f5), 0x97);
        // 97 007A
        gbc.setState(0x7975, 0x36f5, 0xcb80, 0xb4d3, 0x9769, 0x2bb7, 0x1, 0x0);
        gbc.writeMem(0x7975, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x36f5);
        EXPECT(gbc.pc(), 0x7976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 007B
        gbc.setState(0x6915, 0x770d, 0x81e0, 0xbc98, 0x4fe5, 0x5bfd, 0x0, 0x0);
        gbc.writeMem(0x6915, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x770d);
        EXPECT(gbc.pc(), 0x6916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 007C
        gbc.setState(0x6848, 0x2fa5, 0x460, 0x1245, 0x8dd7, 0x621f, 0x0, 0x1);
        gbc.writeMem(0x6848, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2fa5);
        EXPECT(gbc.pc(), 0x6849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 007D
        gbc.setState(0x1f03, 0x5ae1, 0x9350, 0xb7ce, 0x2b25, 0xe6d0, 0x1, 0x0);
        gbc.writeMem(0x1f03, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5ae1);
        EXPECT(gbc.pc(), 0x1f04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 007E
        gbc.setState(0xa501, 0x849b, 0xe90, 0x30b7, 0x3006, 0xb6c0, 0x0, 0x0);
        gbc.writeMem(0xa501, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x849b);
        EXPECT(gbc.pc(), 0xa502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa501), 0x97);
        // 97 007F
        gbc.setState(0x4da7, 0x8556, 0x6f90, 0x5ba2, 0x11f5, 0x39a1, 0x0, 0x0);
        gbc.writeMem(0x4da7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8556);
        EXPECT(gbc.pc(), 0x4da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0080
        gbc.setState(0x9116, 0xf164, 0x8ae0, 0xdc4a, 0x327f, 0x9ad0, 0x0, 0x0);
        gbc.writeMem(0x9116, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf164);
        EXPECT(gbc.pc(), 0x9117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9116), 0x97);
        // 97 0081
        gbc.setState(0x6423, 0x5409, 0xd910, 0xdaf1, 0x84d6, 0x540c, 0x0, 0x0);
        gbc.writeMem(0x6423, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5409);
        EXPECT(gbc.pc(), 0x6424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0082
        gbc.setState(0x1c5a, 0x4111, 0xe970, 0xa400, 0x6aa4, 0x3a11, 0x0, 0x1);
        gbc.writeMem(0x1c5a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4111);
        EXPECT(gbc.pc(), 0x1c5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0083
        gbc.setState(0x60dc, 0x995b, 0xfc90, 0x547d, 0x8944, 0xdaf5, 0x1, 0x0);
        gbc.writeMem(0x60dc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x995b);
        EXPECT(gbc.pc(), 0x60dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0084
        gbc.setState(0x72c8, 0xefe2, 0x9360, 0xa337, 0xc367, 0x4693, 0x0, 0x0);
        gbc.writeMem(0x72c8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xefe2);
        EXPECT(gbc.pc(), 0x72c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0085
        gbc.setState(0xe5f2, 0x94a5, 0x7400, 0xb5e8, 0x4e2, 0x7d2e, 0x0, 0x0);
        gbc.writeMem(0xe5f2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x94a5);
        EXPECT(gbc.pc(), 0xe5f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f2), 0x97);
        // 97 0086
        gbc.setState(0xc588, 0x5a27, 0x3eb0, 0x4f70, 0x8c38, 0x23c, 0x1, 0x0);
        gbc.writeMem(0xc588, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5a27);
        EXPECT(gbc.pc(), 0xc589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc588), 0x97);
        // 97 0087
        gbc.setState(0xc71, 0x5e35, 0x6f50, 0xc891, 0x735d, 0x3bc8, 0x1, 0x1);
        gbc.writeMem(0xc71, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5e35);
        EXPECT(gbc.pc(), 0xc72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0088
        gbc.setState(0x71, 0xfb8e, 0xbf0, 0xa7b9, 0xad0a, 0x5d8d, 0x0, 0x0);
        gbc.writeMem(0x71, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xfb8e);
        EXPECT(gbc.pc(), 0x72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0089
        gbc.setState(0xe955, 0x4db2, 0xb8b0, 0x1b25, 0xdf06, 0x7c29, 0x1, 0x1);
        gbc.writeMem(0xe955, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4db2);
        EXPECT(gbc.pc(), 0xe956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe955), 0x97);
        // 97 008A
        gbc.setState(0x6d27, 0x549, 0xbb50, 0x608f, 0x43a8, 0x90d, 0x0, 0x1);
        gbc.writeMem(0x6d27, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x549);
        EXPECT(gbc.pc(), 0x6d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 008B
        gbc.setState(0x5f21, 0x4c0d, 0xa6c0, 0xa918, 0xaa7a, 0x2f07, 0x1, 0x0);
        gbc.writeMem(0x5f21, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4c0d);
        EXPECT(gbc.pc(), 0x5f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 008C
        gbc.setState(0x546f, 0xec83, 0xcde0, 0x6932, 0x2039, 0xb119, 0x1, 0x0);
        gbc.writeMem(0x546f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xec83);
        EXPECT(gbc.pc(), 0x5470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 008D
        gbc.setState(0x4c91, 0xb587, 0x6d30, 0x5b63, 0xee8b, 0x6093, 0x1, 0x0);
        gbc.writeMem(0x4c91, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb587);
        EXPECT(gbc.pc(), 0x4c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 008E
        gbc.setState(0x1182, 0xd650, 0xd8f0, 0xeecc, 0xb71f, 0xcbd9, 0x1, 0x0);
        gbc.writeMem(0x1182, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd650);
        EXPECT(gbc.pc(), 0x1183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 008F
        gbc.setState(0x64a1, 0x274c, 0xd540, 0x3c65, 0x85df, 0x6eb4, 0x0, 0x1);
        gbc.writeMem(0x64a1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x274c);
        EXPECT(gbc.pc(), 0x64a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0091
        gbc.setState(0x7a94, 0x9f6d, 0xaaa0, 0x428, 0x4f4, 0xb682, 0x0, 0x1);
        gbc.writeMem(0x7a94, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9f6d);
        EXPECT(gbc.pc(), 0x7a95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0093
        gbc.setState(0xc508, 0xa337, 0x10a0, 0xfc6e, 0x2b6d, 0xe9be, 0x1, 0x0);
        gbc.writeMem(0xc508, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa337);
        EXPECT(gbc.pc(), 0xc509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc508), 0x97);
        // 97 0094
        gbc.setState(0x6c3d, 0x4712, 0xbd00, 0x648f, 0xb248, 0xe659, 0x1, 0x1);
        gbc.writeMem(0x6c3d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4712);
        EXPECT(gbc.pc(), 0x6c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0095
        gbc.setState(0x1d19, 0x1c6b, 0x2ef0, 0x926e, 0x2a41, 0x29d7, 0x0, 0x0);
        gbc.writeMem(0x1d19, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1c6b);
        EXPECT(gbc.pc(), 0x1d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0096
        gbc.setState(0x14af, 0xb03, 0x46d0, 0x5932, 0xd1af, 0x9dc0, 0x1, 0x0);
        gbc.writeMem(0x14af, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb03);
        EXPECT(gbc.pc(), 0x14b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0097
        gbc.setState(0x1911, 0xb7f0, 0x48d0, 0x4089, 0xa2d4, 0xa340, 0x0, 0x0);
        gbc.writeMem(0x1911, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb7f0);
        EXPECT(gbc.pc(), 0x1912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0098
        gbc.setState(0x62a0, 0x1886, 0xf860, 0x2271, 0xab7a, 0x197, 0x1, 0x1);
        gbc.writeMem(0x62a0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1886);
        EXPECT(gbc.pc(), 0x62a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0099
        gbc.setState(0x2930, 0x4293, 0xbc00, 0x3a70, 0xdbe5, 0xed83, 0x0, 0x1);
        gbc.writeMem(0x2930, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4293);
        EXPECT(gbc.pc(), 0x2931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 009A
        gbc.setState(0x619, 0x7d0c, 0x240, 0x17d7, 0x836f, 0xffb9, 0x1, 0x1);
        gbc.writeMem(0x619, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7d0c);
        EXPECT(gbc.pc(), 0x61a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 009B
        gbc.setState(0xcd74, 0xd6a, 0xaf90, 0x544, 0x5b24, 0x3008, 0x0, 0x0);
        gbc.writeMem(0xcd74, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd6a);
        EXPECT(gbc.pc(), 0xcd75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd74), 0x97);
        // 97 009C
        gbc.setState(0xa839, 0x6f20, 0x4630, 0x7659, 0x4088, 0xd110, 0x0, 0x1);
        gbc.writeMem(0xa839, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6f20);
        EXPECT(gbc.pc(), 0xa83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa839), 0x97);
        // 97 009D
        gbc.setState(0x24bc, 0xfc8e, 0x400, 0x2da7, 0x571a, 0x4e91, 0x0, 0x0);
        gbc.writeMem(0x24bc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xfc8e);
        EXPECT(gbc.pc(), 0x24bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 009E
        gbc.setState(0xada4, 0x8b15, 0x6e80, 0x98e4, 0x1dcc, 0x37f5, 0x1, 0x0);
        gbc.writeMem(0xada4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8b15);
        EXPECT(gbc.pc(), 0xada5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada4), 0x97);
        // 97 009F
        gbc.setState(0x4fd1, 0x3a91, 0xb7f0, 0x1008, 0x2f2, 0xa343, 0x0, 0x0);
        gbc.writeMem(0x4fd1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3a91);
        EXPECT(gbc.pc(), 0x4fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00A0
        gbc.setState(0xb73, 0x7373, 0x6460, 0x4717, 0x3245, 0xeff7, 0x0, 0x1);
        gbc.writeMem(0xb73, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7373);
        EXPECT(gbc.pc(), 0xb74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00A1
        gbc.setState(0x3b56, 0x4617, 0xd4c0, 0x6737, 0xd46a, 0xbcc1, 0x1, 0x0);
        gbc.writeMem(0x3b56, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4617);
        EXPECT(gbc.pc(), 0x3b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00A2
        gbc.setState(0x6094, 0x9003, 0xdcb0, 0x4330, 0xec1a, 0xdb2c, 0x1, 0x0);
        gbc.writeMem(0x6094, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9003);
        EXPECT(gbc.pc(), 0x6095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00A3
        gbc.setState(0xd96a, 0x656a, 0x5c0, 0x938c, 0xe91e, 0xac7e, 0x0, 0x0);
        gbc.writeMem(0xd96a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x656a);
        EXPECT(gbc.pc(), 0xd96b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd96a), 0x97);
        // 97 00A4
        gbc.setState(0x2726, 0x7e7f, 0xa70, 0x4003, 0x79c, 0x7dc1, 0x0, 0x0);
        gbc.writeMem(0x2726, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7e7f);
        EXPECT(gbc.pc(), 0x2727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00A5
        gbc.setState(0x162a, 0xb6d8, 0x82b0, 0x1612, 0x25c1, 0xa5d9, 0x0, 0x0);
        gbc.writeMem(0x162a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb6d8);
        EXPECT(gbc.pc(), 0x162b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00A6
        gbc.setState(0x2324, 0x7eef, 0xe9a0, 0xc045, 0x5090, 0x9c83, 0x1, 0x0);
        gbc.writeMem(0x2324, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7eef);
        EXPECT(gbc.pc(), 0x2325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00A8
        gbc.setState(0x8d10, 0x5d15, 0xdaa0, 0xbea4, 0x5fba, 0xf487, 0x1, 0x0);
        gbc.writeMem(0x8d10, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5d15);
        EXPECT(gbc.pc(), 0x8d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d10), 0x97);
        // 97 00AA
        gbc.setState(0x74d6, 0x2178, 0x6dd0, 0x6cdb, 0xfa0e, 0x86d1, 0x0, 0x0);
        gbc.writeMem(0x74d6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2178);
        EXPECT(gbc.pc(), 0x74d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00AB
        gbc.setState(0x793a, 0xdfeb, 0x8b50, 0x53a2, 0x28cb, 0xf047, 0x0, 0x0);
        gbc.writeMem(0x793a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdfeb);
        EXPECT(gbc.pc(), 0x793b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00AC
        gbc.setState(0x2104, 0x36df, 0x56a0, 0x8bca, 0x4233, 0xcca4, 0x0, 0x1);
        gbc.writeMem(0x2104, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x36df);
        EXPECT(gbc.pc(), 0x2105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00AD
        gbc.setState(0x372f, 0xcbd1, 0x2380, 0x2db1, 0xb135, 0x51e3, 0x1, 0x0);
        gbc.writeMem(0x372f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcbd1);
        EXPECT(gbc.pc(), 0x3730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00AE
        gbc.setState(0x439c, 0x91b8, 0xdb70, 0x90b0, 0xd528, 0x9797, 0x1, 0x1);
        gbc.writeMem(0x439c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x91b8);
        EXPECT(gbc.pc(), 0x439d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00AF
        gbc.setState(0xc5ed, 0x70d2, 0xc590, 0xada6, 0x812c, 0x96da, 0x1, 0x1);
        gbc.writeMem(0xc5ed, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x70d2);
        EXPECT(gbc.pc(), 0xc5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ed), 0x97);
        // 97 00B0
        gbc.setState(0xcf52, 0x10d3, 0x4f0, 0x3cef, 0xd260, 0xbafa, 0x0, 0x1);
        gbc.writeMem(0xcf52, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x10d3);
        EXPECT(gbc.pc(), 0xcf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf52), 0x97);
        // 97 00B1
        gbc.setState(0x17e1, 0x23ff, 0xe620, 0x1b57, 0x660e, 0x737e, 0x0, 0x0);
        gbc.writeMem(0x17e1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x23ff);
        EXPECT(gbc.pc(), 0x17e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00B2
        gbc.setState(0x9ada, 0xcbb2, 0xc10, 0x186a, 0x229b, 0x24c3, 0x0, 0x0);
        gbc.writeMem(0x9ada, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xcbb2);
        EXPECT(gbc.pc(), 0x9adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ada), 0x97);
        // 97 00B3
        gbc.setState(0xcd97, 0x80f5, 0xe970, 0x15a7, 0x6b8d, 0x6e2a, 0x1, 0x1);
        gbc.writeMem(0xcd97, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x80f5);
        EXPECT(gbc.pc(), 0xcd98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd97), 0x97);
        // 97 00B4
        gbc.setState(0xeeeb, 0xa6a9, 0x6b10, 0xb955, 0xf1ba, 0xb964, 0x1, 0x1);
        gbc.writeMem(0xeeeb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa6a9);
        EXPECT(gbc.pc(), 0xeeec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeeb), 0x97);
        // 97 00B5
        gbc.setState(0x80c3, 0xa415, 0x7020, 0x18c4, 0x1c04, 0x1e89, 0x1, 0x1);
        gbc.writeMem(0x80c3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa415);
        EXPECT(gbc.pc(), 0x80c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c3), 0x97);
        // 97 00B6
        gbc.setState(0xc461, 0x3d56, 0x62c0, 0xcb8, 0x5132, 0x3387, 0x1, 0x1);
        gbc.writeMem(0xc461, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3d56);
        EXPECT(gbc.pc(), 0xc462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc461), 0x97);
        // 97 00B7
        gbc.setState(0x39f3, 0xf7f6, 0xe740, 0xa41a, 0x3c40, 0xa63c, 0x0, 0x0);
        gbc.writeMem(0x39f3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf7f6);
        EXPECT(gbc.pc(), 0x39f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00B8
        gbc.setState(0x9c03, 0x4a0b, 0xb60, 0x2906, 0x5558, 0xce43, 0x0, 0x1);
        gbc.writeMem(0x9c03, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4a0b);
        EXPECT(gbc.pc(), 0x9c04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c03), 0x97);
        // 97 00B9
        gbc.setState(0x390d, 0xcd9d, 0xb830, 0xacf1, 0x2b78, 0x4b67, 0x1, 0x1);
        gbc.writeMem(0x390d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xcd9d);
        EXPECT(gbc.pc(), 0x390e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00BA
        gbc.setState(0xdb26, 0xc221, 0xf3c0, 0xdf7b, 0xbb9f, 0xa8c0, 0x0, 0x0);
        gbc.writeMem(0xdb26, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc221);
        EXPECT(gbc.pc(), 0xdb27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb26), 0x97);
        // 97 00BB
        gbc.setState(0xaadd, 0x5f4f, 0x8820, 0x1cf2, 0x2072, 0xf013, 0x0, 0x1);
        gbc.writeMem(0xaadd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5f4f);
        EXPECT(gbc.pc(), 0xaade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaadd), 0x97);
        // 97 00BC
        gbc.setState(0x205c, 0xe576, 0x3590, 0x7228, 0x2581, 0xb8b8, 0x0, 0x1);
        gbc.writeMem(0x205c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe576);
        EXPECT(gbc.pc(), 0x205d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00BD
        gbc.setState(0x28f4, 0x931a, 0x6850, 0x3e9b, 0xf937, 0xaa05, 0x0, 0x0);
        gbc.writeMem(0x28f4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x931a);
        EXPECT(gbc.pc(), 0x28f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00BE
        gbc.setState(0x6b90, 0xf586, 0xef40, 0xd093, 0x68d9, 0xdef9, 0x0, 0x0);
        gbc.writeMem(0x6b90, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf586);
        EXPECT(gbc.pc(), 0x6b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00BF
        gbc.setState(0x4cb, 0x78a8, 0x2c20, 0xbd45, 0x7615, 0x6faa, 0x0, 0x0);
        gbc.writeMem(0x4cb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x78a8);
        EXPECT(gbc.pc(), 0x4cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00C0
        gbc.setState(0xd72b, 0x3af8, 0x5d30, 0x44b7, 0x1785, 0xdc51, 0x0, 0x1);
        gbc.writeMem(0xd72b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3af8);
        EXPECT(gbc.pc(), 0xd72c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd72b), 0x97);
        // 97 00C1
        gbc.setState(0x1041, 0x55c9, 0xa3e0, 0xa17c, 0xb7b9, 0x5f1f, 0x1, 0x1);
        gbc.writeMem(0x1041, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x55c9);
        EXPECT(gbc.pc(), 0x1042);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00C2
        gbc.setState(0x81f4, 0xb487, 0x6730, 0xc69a, 0x496f, 0x61e7, 0x1, 0x0);
        gbc.writeMem(0x81f4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb487);
        EXPECT(gbc.pc(), 0x81f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f4), 0x97);
        // 97 00C3
        gbc.setState(0x61f, 0xc953, 0xc600, 0x807, 0xc166, 0x9f68, 0x0, 0x1);
        gbc.writeMem(0x61f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc953);
        EXPECT(gbc.pc(), 0x620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00C5
        gbc.setState(0xc406, 0xabe8, 0x6850, 0x5fa9, 0x5cef, 0x9889, 0x1, 0x1);
        gbc.writeMem(0xc406, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xabe8);
        EXPECT(gbc.pc(), 0xc407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc406), 0x97);
        // 97 00C6
        gbc.setState(0x4322, 0xdfa, 0x8f90, 0x8d6c, 0x2aee, 0xf2d9, 0x1, 0x1);
        gbc.writeMem(0x4322, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xdfa);
        EXPECT(gbc.pc(), 0x4323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00C7
        gbc.setState(0x8c9d, 0x6ad4, 0x6a30, 0x623e, 0xf0a, 0x4d57, 0x0, 0x1);
        gbc.writeMem(0x8c9d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6ad4);
        EXPECT(gbc.pc(), 0x8c9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9d), 0x97);
        // 97 00C8
        gbc.setState(0xc92f, 0x52c8, 0xb510, 0xcb60, 0xb134, 0x24a, 0x0, 0x1);
        gbc.writeMem(0xc92f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x52c8);
        EXPECT(gbc.pc(), 0xc930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc92f), 0x97);
        // 97 00C9
        gbc.setState(0xc9a2, 0xa799, 0x3ba0, 0x2956, 0x8d9e, 0xb64, 0x1, 0x1);
        gbc.writeMem(0xc9a2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa799);
        EXPECT(gbc.pc(), 0xc9a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a2), 0x97);
        // 97 00CA
        gbc.setState(0xaaf1, 0x7ade, 0x1520, 0x6d67, 0x6e39, 0x38e0, 0x1, 0x0);
        gbc.writeMem(0xaaf1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7ade);
        EXPECT(gbc.pc(), 0xaaf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf1), 0x97);
        // 97 00CB
        gbc.setState(0xcfc, 0x6f84, 0x6190, 0x37ab, 0x7edd, 0xfd49, 0x0, 0x0);
        gbc.writeMem(0xcfc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6f84);
        EXPECT(gbc.pc(), 0xcfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00CC
        gbc.setState(0x39dd, 0x3f4, 0x1e70, 0x1b4c, 0x123a, 0x9978, 0x0, 0x0);
        gbc.writeMem(0x39dd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3f4);
        EXPECT(gbc.pc(), 0x39de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00CD
        gbc.setState(0x9d63, 0x4d4a, 0xe0e0, 0xcc76, 0x6518, 0x25eb, 0x1, 0x0);
        gbc.writeMem(0x9d63, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4d4a);
        EXPECT(gbc.pc(), 0x9d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d63), 0x97);
        // 97 00CE
        gbc.setState(0x6a2e, 0x76d9, 0x61b0, 0x7ce9, 0x796, 0x4c1a, 0x1, 0x1);
        gbc.writeMem(0x6a2e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x76d9);
        EXPECT(gbc.pc(), 0x6a2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00CF
        gbc.setState(0xa0cd, 0x696e, 0xada0, 0x68ec, 0x37cb, 0xd20f, 0x1, 0x0);
        gbc.writeMem(0xa0cd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x696e);
        EXPECT(gbc.pc(), 0xa0ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0cd), 0x97);
        // 97 00D0
        gbc.setState(0x3671, 0x7bc7, 0xaf0, 0x3bd5, 0xb09, 0x92a2, 0x0, 0x0);
        gbc.writeMem(0x3671, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7bc7);
        EXPECT(gbc.pc(), 0x3672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00D1
        gbc.setState(0xd740, 0xb8b5, 0x5f00, 0x5e11, 0x3b64, 0x26b, 0x0, 0x0);
        gbc.writeMem(0xd740, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb8b5);
        EXPECT(gbc.pc(), 0xd741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd740), 0x97);
        // 97 00D2
        gbc.setState(0xe580, 0x145b, 0xf9e0, 0xf836, 0x2dcf, 0xddf5, 0x1, 0x0);
        gbc.writeMem(0xe580, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x145b);
        EXPECT(gbc.pc(), 0xe581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe580), 0x97);
        // 97 00D3
        gbc.setState(0x30d8, 0xda45, 0x3cc0, 0x2cec, 0x7f03, 0x45f8, 0x0, 0x1);
        gbc.writeMem(0x30d8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xda45);
        EXPECT(gbc.pc(), 0x30d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00D4
        gbc.setState(0xb3d3, 0xab7e, 0x1c0, 0x3638, 0xd44b, 0xb968, 0x0, 0x0);
        gbc.writeMem(0xb3d3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xab7e);
        EXPECT(gbc.pc(), 0xb3d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d3), 0x97);
        // 97 00D5
        gbc.setState(0x2547, 0x2aa9, 0x30f0, 0x4b6e, 0xdb76, 0xc41e, 0x0, 0x0);
        gbc.writeMem(0x2547, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2aa9);
        EXPECT(gbc.pc(), 0x2548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00D6
        gbc.setState(0x691, 0x1abd, 0xcf90, 0x6ca, 0x8f9, 0xd7d1, 0x1, 0x0);
        gbc.writeMem(0x691, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1abd);
        EXPECT(gbc.pc(), 0x692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00D7
        gbc.setState(0x953, 0x6542, 0x3fa0, 0x408b, 0x737d, 0x3d9b, 0x1, 0x1);
        gbc.writeMem(0x953, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6542);
        EXPECT(gbc.pc(), 0x954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00D8
        gbc.setState(0x6a68, 0xda0d, 0x54a0, 0xd5ea, 0xd27a, 0xc9e, 0x1, 0x1);
        gbc.writeMem(0x6a68, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xda0d);
        EXPECT(gbc.pc(), 0x6a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00D9
        gbc.setState(0x7053, 0x40c0, 0x3870, 0xd66d, 0x8ca4, 0xaf3e, 0x1, 0x0);
        gbc.writeMem(0x7053, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x40c0);
        EXPECT(gbc.pc(), 0x7054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00DA
        gbc.setState(0xe7c, 0x358f, 0xc2f0, 0xf879, 0x75a4, 0x852e, 0x1, 0x1);
        gbc.writeMem(0xe7c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x358f);
        EXPECT(gbc.pc(), 0xe7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00DB
        gbc.setState(0x20fb, 0xeabd, 0x8c70, 0x75fa, 0x85ef, 0xfa3f, 0x1, 0x0);
        gbc.writeMem(0x20fb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xeabd);
        EXPECT(gbc.pc(), 0x20fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00DC
        gbc.setState(0x8344, 0xcc90, 0xbcb0, 0xb06d, 0xdb1, 0x9fab, 0x0, 0x1);
        gbc.writeMem(0x8344, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcc90);
        EXPECT(gbc.pc(), 0x8345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8344), 0x97);
        // 97 00DD
        gbc.setState(0x70de, 0xeb9e, 0xeae0, 0x69fb, 0x355b, 0xbc6a, 0x0, 0x0);
        gbc.writeMem(0x70de, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xeb9e);
        EXPECT(gbc.pc(), 0x70df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00DE
        gbc.setState(0x938a, 0x5e4d, 0x7c0, 0xffa8, 0x5714, 0x3286, 0x0, 0x1);
        gbc.writeMem(0x938a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5e4d);
        EXPECT(gbc.pc(), 0x938b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938a), 0x97);
        // 97 00DF
        gbc.setState(0xc240, 0xe0c, 0x3f0, 0x23a7, 0x8a03, 0xddcc, 0x0, 0x1);
        gbc.writeMem(0xc240, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe0c);
        EXPECT(gbc.pc(), 0xc241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc240), 0x97);
        // 97 00E0
        gbc.setState(0xaba9, 0xb3dc, 0x37a0, 0x13a7, 0xcf79, 0x6fe2, 0x1, 0x0);
        gbc.writeMem(0xaba9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb3dc);
        EXPECT(gbc.pc(), 0xabaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba9), 0x97);
        // 97 00E1
        gbc.setState(0x97cc, 0xfecc, 0x4220, 0x2dc6, 0xf1ff, 0x57b0, 0x1, 0x0);
        gbc.writeMem(0x97cc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfecc);
        EXPECT(gbc.pc(), 0x97cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97cc), 0x97);
        // 97 00E2
        gbc.setState(0x1cf3, 0x2004, 0x33d0, 0xfe02, 0x9191, 0x61af, 0x0, 0x1);
        gbc.writeMem(0x1cf3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2004);
        EXPECT(gbc.pc(), 0x1cf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00E3
        gbc.setState(0x6d00, 0xdb35, 0x49d0, 0x9576, 0x7714, 0x4166, 0x0, 0x1);
        gbc.writeMem(0x6d00, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdb35);
        EXPECT(gbc.pc(), 0x6d01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00E4
        gbc.setState(0xc8b5, 0x5fab, 0x8ff0, 0xd765, 0xf953, 0xbd42, 0x1, 0x0);
        gbc.writeMem(0xc8b5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5fab);
        EXPECT(gbc.pc(), 0xc8b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b5), 0x97);
        // 97 00E5
        gbc.setState(0x9c36, 0xc6f7, 0xafa0, 0xbc93, 0x4c4, 0x583b, 0x1, 0x1);
        gbc.writeMem(0x9c36, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc6f7);
        EXPECT(gbc.pc(), 0x9c37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c36), 0x97);
        // 97 00E6
        gbc.setState(0xdd6b, 0xf570, 0x1140, 0x1d30, 0x14f9, 0x156a, 0x1, 0x0);
        gbc.writeMem(0xdd6b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf570);
        EXPECT(gbc.pc(), 0xdd6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd6b), 0x97);
        // 97 00E7
        gbc.setState(0xed9e, 0xaf91, 0x31f0, 0x588a, 0x430, 0x45f2, 0x0, 0x0);
        gbc.writeMem(0xed9e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xaf91);
        EXPECT(gbc.pc(), 0xed9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed9e), 0x97);
        // 97 00E8
        gbc.setState(0xc2ca, 0x24fb, 0x75b0, 0x8b36, 0x2f2b, 0x283e, 0x0, 0x1);
        gbc.writeMem(0xc2ca, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x24fb);
        EXPECT(gbc.pc(), 0xc2cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ca), 0x97);
        // 97 00E9
        gbc.setState(0x918c, 0xef0e, 0x8400, 0x771e, 0x425a, 0x9afa, 0x1, 0x0);
        gbc.writeMem(0x918c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xef0e);
        EXPECT(gbc.pc(), 0x918d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918c), 0x97);
        // 97 00EA
        gbc.setState(0x199, 0x7b68, 0xbf70, 0xe381, 0x94d4, 0xb0a, 0x0, 0x1);
        gbc.writeMem(0x199, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7b68);
        EXPECT(gbc.pc(), 0x19a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00EB
        gbc.setState(0x5071, 0x2cce, 0x62e0, 0xa8b2, 0xffae, 0x90ae, 0x0, 0x0);
        gbc.writeMem(0x5071, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2cce);
        EXPECT(gbc.pc(), 0x5072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00EC
        gbc.setState(0x9f24, 0x779a, 0xa300, 0xe1d0, 0x4743, 0x7ee1, 0x0, 0x0);
        gbc.writeMem(0x9f24, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x779a);
        EXPECT(gbc.pc(), 0x9f25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f24), 0x97);
        // 97 00ED
        gbc.setState(0xd10e, 0x7adf, 0xf780, 0x38ac, 0xcb58, 0x1e2, 0x1, 0x1);
        gbc.writeMem(0xd10e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7adf);
        EXPECT(gbc.pc(), 0xd10f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10e), 0x97);
        // 97 00EE
        gbc.setState(0x5782, 0xb7cd, 0x690, 0x5877, 0x83a1, 0xf917, 0x1, 0x1);
        gbc.writeMem(0x5782, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb7cd);
        EXPECT(gbc.pc(), 0x5783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00F0
        gbc.setState(0x438e, 0xb93f, 0xaca0, 0x3dc0, 0x44a3, 0xa377, 0x1, 0x1);
        gbc.writeMem(0x438e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb93f);
        EXPECT(gbc.pc(), 0x438f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00F1
        gbc.setState(0x4fee, 0x2900, 0x1410, 0x9564, 0xb48f, 0xb77e, 0x0, 0x0);
        gbc.writeMem(0x4fee, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2900);
        EXPECT(gbc.pc(), 0x4fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00F2
        gbc.setState(0xc51f, 0x49a5, 0xee80, 0xc9ca, 0x335d, 0x4d37, 0x1, 0x0);
        gbc.writeMem(0xc51f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x49a5);
        EXPECT(gbc.pc(), 0xc520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc51f), 0x97);
        // 97 00F3
        gbc.setState(0x92cc, 0xbbda, 0x540, 0xe91a, 0x3ee8, 0xf8f0, 0x1, 0x1);
        gbc.writeMem(0x92cc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbbda);
        EXPECT(gbc.pc(), 0x92cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92cc), 0x97);
        // 97 00F4
        gbc.setState(0x50dd, 0x8528, 0x3c80, 0xdc7, 0x30ce, 0x9007, 0x1, 0x0);
        gbc.writeMem(0x50dd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8528);
        EXPECT(gbc.pc(), 0x50de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00F5
        gbc.setState(0xe098, 0x7eb0, 0x400, 0x782d, 0xe7e2, 0x62f2, 0x1, 0x0);
        gbc.writeMem(0xe098, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7eb0);
        EXPECT(gbc.pc(), 0xe099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe098), 0x97);
        // 97 00F6
        gbc.setState(0xe3d3, 0x326b, 0x4c40, 0xb586, 0x2078, 0xd465, 0x1, 0x1);
        gbc.writeMem(0xe3d3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x326b);
        EXPECT(gbc.pc(), 0xe3d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d3), 0x97);
        // 97 00F7
        gbc.setState(0xd8ab, 0x7dfa, 0xfd10, 0xe032, 0x23be, 0xd5e5, 0x1, 0x1);
        gbc.writeMem(0xd8ab, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7dfa);
        EXPECT(gbc.pc(), 0xd8ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ab), 0x97);
        // 97 00F8
        gbc.setState(0xda93, 0xe04, 0x8040, 0xd0f7, 0x205e, 0xc684, 0x1, 0x1);
        gbc.writeMem(0xda93, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe04);
        EXPECT(gbc.pc(), 0xda94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda93), 0x97);
        // 97 00FA
        gbc.setState(0x2004, 0xf210, 0xa9f0, 0xe5c7, 0xd87d, 0xeff7, 0x1, 0x0);
        gbc.writeMem(0x2004, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf210);
        EXPECT(gbc.pc(), 0x2005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00FB
        gbc.setState(0xdc38, 0x2e3c, 0x8150, 0xdb87, 0x73b0, 0x73d9, 0x0, 0x0);
        gbc.writeMem(0xdc38, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2e3c);
        EXPECT(gbc.pc(), 0xdc39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc38), 0x97);
        // 97 00FC
        gbc.setState(0xaf8d, 0xd217, 0x7960, 0xc6fb, 0xbcf1, 0x3fdd, 0x0, 0x1);
        gbc.writeMem(0xaf8d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd217);
        EXPECT(gbc.pc(), 0xaf8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf8d), 0x97);
        // 97 00FD
        gbc.setState(0x4ade, 0xbf10, 0x8e90, 0x74be, 0xe9a9, 0x4959, 0x1, 0x0);
        gbc.writeMem(0x4ade, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xbf10);
        EXPECT(gbc.pc(), 0x4adf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 00FE
        gbc.setState(0x80e0, 0x237b, 0x2d60, 0x911d, 0x8a9c, 0x9092, 0x0, 0x0);
        gbc.writeMem(0x80e0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x237b);
        EXPECT(gbc.pc(), 0x80e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e0), 0x97);
        // 97 00FF
        gbc.setState(0x5daf, 0xc03e, 0x5b0, 0x926e, 0xea9f, 0x1db4, 0x0, 0x0);
        gbc.writeMem(0x5daf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc03e);
        EXPECT(gbc.pc(), 0x5db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0101
        gbc.setState(0xa9b5, 0xb0ea, 0x44a0, 0xdd8c, 0x4392, 0xdcc6, 0x1, 0x1);
        gbc.writeMem(0xa9b5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb0ea);
        EXPECT(gbc.pc(), 0xa9b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b5), 0x97);
        // 97 0102
        gbc.setState(0xed28, 0x3634, 0x9fa0, 0xd966, 0x5978, 0x5891, 0x0, 0x1);
        gbc.writeMem(0xed28, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3634);
        EXPECT(gbc.pc(), 0xed29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed28), 0x97);
        // 97 0103
        gbc.setState(0xdc64, 0x1532, 0x1430, 0x52a1, 0x2507, 0x6499, 0x1, 0x1);
        gbc.writeMem(0xdc64, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1532);
        EXPECT(gbc.pc(), 0xdc65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc64), 0x97);
        // 97 0104
        gbc.setState(0xc559, 0xf039, 0x7470, 0x77c6, 0x203f, 0x9b08, 0x0, 0x1);
        gbc.writeMem(0xc559, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf039);
        EXPECT(gbc.pc(), 0xc55a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc559), 0x97);
        // 97 0105
        gbc.setState(0x55f6, 0xa074, 0x6b30, 0x27f7, 0xbee, 0x2cd6, 0x1, 0x0);
        gbc.writeMem(0x55f6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa074);
        EXPECT(gbc.pc(), 0x55f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0106
        gbc.setState(0xe9de, 0xa1a5, 0xee40, 0x9f83, 0x5a8, 0xdac8, 0x1, 0x0);
        gbc.writeMem(0xe9de, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa1a5);
        EXPECT(gbc.pc(), 0xe9df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9de), 0x97);
        // 97 0107
        gbc.setState(0xebe4, 0xa66c, 0xb220, 0x1cdd, 0x32cd, 0xe046, 0x0, 0x1);
        gbc.writeMem(0xebe4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa66c);
        EXPECT(gbc.pc(), 0xebe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebe4), 0x97);
        // 97 0108
        gbc.setState(0x8cae, 0x5f14, 0x76e0, 0xd468, 0xbc50, 0x5481, 0x1, 0x0);
        gbc.writeMem(0x8cae, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5f14);
        EXPECT(gbc.pc(), 0x8caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cae), 0x97);
        // 97 0109
        gbc.setState(0x222a, 0x1dca, 0x8570, 0xeb1c, 0x5328, 0x9aa9, 0x0, 0x1);
        gbc.writeMem(0x222a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1dca);
        EXPECT(gbc.pc(), 0x222b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 010A
        gbc.setState(0xac28, 0x6ae9, 0xa640, 0x48f, 0x9548, 0xe87f, 0x0, 0x0);
        gbc.writeMem(0xac28, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6ae9);
        EXPECT(gbc.pc(), 0xac29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac28), 0x97);
        // 97 010B
        gbc.setState(0x8d11, 0xca93, 0xf730, 0x8a0c, 0xd6dd, 0x6b3d, 0x0, 0x0);
        gbc.writeMem(0x8d11, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xca93);
        EXPECT(gbc.pc(), 0x8d12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d11), 0x97);
        // 97 010C
        gbc.setState(0xde02, 0xd684, 0x5240, 0x98a2, 0xb465, 0x208c, 0x1, 0x0);
        gbc.writeMem(0xde02, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd684);
        EXPECT(gbc.pc(), 0xde03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde02), 0x97);
        // 97 010D
        gbc.setState(0x8754, 0x4f26, 0xb080, 0xe666, 0x6b7, 0x9d75, 0x1, 0x0);
        gbc.writeMem(0x8754, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4f26);
        EXPECT(gbc.pc(), 0x8755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8754), 0x97);
        // 97 010E
        gbc.setState(0x277b, 0xf4eb, 0x3fc0, 0xed18, 0x43c7, 0xab47, 0x0, 0x0);
        gbc.writeMem(0x277b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf4eb);
        EXPECT(gbc.pc(), 0x277c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 010F
        gbc.setState(0x49af, 0xfda2, 0xc310, 0xe0d5, 0x6c98, 0x209d, 0x0, 0x1);
        gbc.writeMem(0x49af, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfda2);
        EXPECT(gbc.pc(), 0x49b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0110
        gbc.setState(0xd034, 0x7553, 0x4850, 0x53e0, 0x6ab1, 0xd8e, 0x0, 0x1);
        gbc.writeMem(0xd034, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7553);
        EXPECT(gbc.pc(), 0xd035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd034), 0x97);
        // 97 0111
        gbc.setState(0x3ca2, 0xf82f, 0xc2d0, 0x9cfb, 0x9ccf, 0x5bf9, 0x0, 0x0);
        gbc.writeMem(0x3ca2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf82f);
        EXPECT(gbc.pc(), 0x3ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0112
        gbc.setState(0x21d2, 0x9133, 0x3460, 0xadea, 0x8fdb, 0x1f36, 0x0, 0x0);
        gbc.writeMem(0x21d2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9133);
        EXPECT(gbc.pc(), 0x21d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0113
        gbc.setState(0x1087, 0xdb75, 0x3250, 0x47ca, 0xf2b2, 0x6c48, 0x0, 0x1);
        gbc.writeMem(0x1087, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdb75);
        EXPECT(gbc.pc(), 0x1088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0114
        gbc.setState(0xb858, 0xbd15, 0xd600, 0x598a, 0x8847, 0x2f45, 0x0, 0x1);
        gbc.writeMem(0xb858, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbd15);
        EXPECT(gbc.pc(), 0xb859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb858), 0x97);
        // 97 0115
        gbc.setState(0xcfbd, 0x45b6, 0x380, 0xc4a3, 0x1062, 0xd97c, 0x1, 0x1);
        gbc.writeMem(0xcfbd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x45b6);
        EXPECT(gbc.pc(), 0xcfbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfbd), 0x97);
        // 97 0116
        gbc.setState(0x273b, 0x8a5c, 0x8170, 0x451, 0xea78, 0x994, 0x1, 0x1);
        gbc.writeMem(0x273b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8a5c);
        EXPECT(gbc.pc(), 0x273c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0117
        gbc.setState(0xaa10, 0x3929, 0x1110, 0xf625, 0x7638, 0xae75, 0x0, 0x0);
        gbc.writeMem(0xaa10, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3929);
        EXPECT(gbc.pc(), 0xaa11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa10), 0x97);
        // 97 0119
        gbc.setState(0xdfb1, 0x25e8, 0x6e00, 0x538e, 0x5b53, 0x9326, 0x1, 0x0);
        gbc.writeMem(0xdfb1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x25e8);
        EXPECT(gbc.pc(), 0xdfb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb1), 0x97);
        // 97 011A
        gbc.setState(0x703c, 0x2c01, 0x550, 0x206b, 0x5b61, 0x4ba7, 0x1, 0x1);
        gbc.writeMem(0x703c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2c01);
        EXPECT(gbc.pc(), 0x703d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 011B
        gbc.setState(0x830f, 0xc790, 0x82c0, 0x2d43, 0xd0e9, 0x84c3, 0x0, 0x0);
        gbc.writeMem(0x830f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc790);
        EXPECT(gbc.pc(), 0x8310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830f), 0x97);
        // 97 011C
        gbc.setState(0x5fcf, 0xd4d4, 0x5770, 0xcfef, 0x96c6, 0x80b2, 0x0, 0x1);
        gbc.writeMem(0x5fcf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd4d4);
        EXPECT(gbc.pc(), 0x5fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 011D
        gbc.setState(0x39b0, 0x9bb4, 0x3b80, 0x1013, 0xf2d7, 0x8b26, 0x0, 0x0);
        gbc.writeMem(0x39b0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9bb4);
        EXPECT(gbc.pc(), 0x39b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 011E
        gbc.setState(0x3c56, 0x6961, 0x18b0, 0x8dbf, 0x91a9, 0x3397, 0x0, 0x1);
        gbc.writeMem(0x3c56, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6961);
        EXPECT(gbc.pc(), 0x3c57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 011F
        gbc.setState(0xd6ce, 0x1db0, 0x7bd0, 0x98ba, 0xd5c7, 0xf105, 0x0, 0x0);
        gbc.writeMem(0xd6ce, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1db0);
        EXPECT(gbc.pc(), 0xd6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ce), 0x97);
        // 97 0120
        gbc.setState(0xc61, 0x14d7, 0xb0a0, 0xc5fa, 0xbfb1, 0x4cd9, 0x1, 0x0);
        gbc.writeMem(0xc61, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x14d7);
        EXPECT(gbc.pc(), 0xc62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0121
        gbc.setState(0x2b13, 0x872e, 0x5ef0, 0x7976, 0x5f7d, 0xa741, 0x0, 0x1);
        gbc.writeMem(0x2b13, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x872e);
        EXPECT(gbc.pc(), 0x2b14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0122
        gbc.setState(0x69b2, 0x1e19, 0x9920, 0xb037, 0x6420, 0x5cb5, 0x1, 0x0);
        gbc.writeMem(0x69b2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1e19);
        EXPECT(gbc.pc(), 0x69b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0123
        gbc.setState(0x87ce, 0xcb76, 0x6870, 0x1af1, 0xee29, 0x6e96, 0x0, 0x0);
        gbc.writeMem(0x87ce, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xcb76);
        EXPECT(gbc.pc(), 0x87cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ce), 0x97);
        // 97 0124
        gbc.setState(0xb7ef, 0x1d4d, 0xd8a0, 0xacb1, 0x6089, 0x322, 0x0, 0x1);
        gbc.writeMem(0xb7ef, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1d4d);
        EXPECT(gbc.pc(), 0xb7f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ef), 0x97);
        // 97 0125
        gbc.setState(0x3aa8, 0xd295, 0xf8c0, 0x979, 0xda72, 0x2125, 0x1, 0x0);
        gbc.writeMem(0x3aa8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd295);
        EXPECT(gbc.pc(), 0x3aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0126
        gbc.setState(0xa43, 0x5424, 0xbe90, 0x6771, 0xf1ca, 0xbf98, 0x0, 0x0);
        gbc.writeMem(0xa43, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5424);
        EXPECT(gbc.pc(), 0xa44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0127
        gbc.setState(0xd902, 0xf702, 0xd300, 0xd5bd, 0xf6e, 0x2517, 0x0, 0x1);
        gbc.writeMem(0xd902, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf702);
        EXPECT(gbc.pc(), 0xd903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd902), 0x97);
        // 97 0128
        gbc.setState(0xde51, 0xa9fd, 0xf610, 0x2f0b, 0x47ee, 0x6cd8, 0x0, 0x1);
        gbc.writeMem(0xde51, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa9fd);
        EXPECT(gbc.pc(), 0xde52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde51), 0x97);
        // 97 0129
        gbc.setState(0xc6f, 0x83f, 0x6770, 0xbc56, 0xfcfb, 0x65f4, 0x1, 0x1);
        gbc.writeMem(0xc6f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x83f);
        EXPECT(gbc.pc(), 0xc70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 012A
        gbc.setState(0xdcf, 0xcbbd, 0x8270, 0xad47, 0xff65, 0xcb3f, 0x1, 0x0);
        gbc.writeMem(0xdcf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xcbbd);
        EXPECT(gbc.pc(), 0xdd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 012B
        gbc.setState(0x2c5a, 0x4a7d, 0xf330, 0x680b, 0xf05e, 0xe059, 0x0, 0x0);
        gbc.writeMem(0x2c5a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4a7d);
        EXPECT(gbc.pc(), 0x2c5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 012C
        gbc.setState(0xa3c3, 0xca86, 0x8de0, 0x743f, 0x5276, 0x1264, 0x0, 0x0);
        gbc.writeMem(0xa3c3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xca86);
        EXPECT(gbc.pc(), 0xa3c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c3), 0x97);
        // 97 012D
        gbc.setState(0xe9ac, 0x67a4, 0xec90, 0x3969, 0xbf28, 0xe4f, 0x1, 0x1);
        gbc.writeMem(0xe9ac, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x67a4);
        EXPECT(gbc.pc(), 0xe9ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ac), 0x97);
        // 97 012E
        gbc.setState(0x75c1, 0xe1c7, 0x18c0, 0xe815, 0x7e61, 0x1f69, 0x0, 0x1);
        gbc.writeMem(0x75c1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe1c7);
        EXPECT(gbc.pc(), 0x75c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 012F
        gbc.setState(0xa3fa, 0xd41a, 0xa50, 0xf4f4, 0x2440, 0xb896, 0x0, 0x1);
        gbc.writeMem(0xa3fa, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd41a);
        EXPECT(gbc.pc(), 0xa3fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3fa), 0x97);
        // 97 0130
        gbc.setState(0xbead, 0xb780, 0xc2c0, 0xf43, 0x4472, 0x77d8, 0x1, 0x1);
        gbc.writeMem(0xbead, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb780);
        EXPECT(gbc.pc(), 0xbeae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbead), 0x97);
        // 97 0132
        gbc.setState(0xdf0c, 0xedde, 0x7ee0, 0xfa7d, 0x75c4, 0xd10d, 0x1, 0x1);
        gbc.writeMem(0xdf0c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xedde);
        EXPECT(gbc.pc(), 0xdf0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf0c), 0x97);
        // 97 0133
        gbc.setState(0x90b5, 0x1d95, 0x2c00, 0x2a56, 0x740c, 0x24d6, 0x1, 0x0);
        gbc.writeMem(0x90b5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1d95);
        EXPECT(gbc.pc(), 0x90b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90b5), 0x97);
        // 97 0134
        gbc.setState(0xeda5, 0xf823, 0x5fc0, 0x96dd, 0x3314, 0x6574, 0x1, 0x0);
        gbc.writeMem(0xeda5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf823);
        EXPECT(gbc.pc(), 0xeda6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda5), 0x97);
        // 97 0135
        gbc.setState(0xd289, 0xffee, 0xb640, 0xeb60, 0x2f1d, 0xadb8, 0x1, 0x1);
        gbc.writeMem(0xd289, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xffee);
        EXPECT(gbc.pc(), 0xd28a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd289), 0x97);
        // 97 0136
        gbc.setState(0x6be6, 0x35b1, 0xd720, 0x6d31, 0x83ba, 0x38d4, 0x1, 0x0);
        gbc.writeMem(0x6be6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x35b1);
        EXPECT(gbc.pc(), 0x6be7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0137
        gbc.setState(0xbe7a, 0x7df6, 0xe00, 0xe1da, 0x9743, 0x5f7b, 0x1, 0x1);
        gbc.writeMem(0xbe7a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7df6);
        EXPECT(gbc.pc(), 0xbe7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe7a), 0x97);
        // 97 0138
        gbc.setState(0xe7f7, 0xd5bf, 0xd100, 0x2f7d, 0xf6, 0xdb00, 0x1, 0x0);
        gbc.writeMem(0xe7f7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd5bf);
        EXPECT(gbc.pc(), 0xe7f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f7), 0x97);
        // 97 0139
        gbc.setState(0x9b84, 0xf935, 0x3e10, 0xb16e, 0x7292, 0xc01e, 0x0, 0x1);
        gbc.writeMem(0x9b84, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf935);
        EXPECT(gbc.pc(), 0x9b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b84), 0x97);
        // 97 013A
        gbc.setState(0x4e4b, 0xe785, 0x8110, 0x4f2a, 0xc728, 0x3bb7, 0x0, 0x0);
        gbc.writeMem(0x4e4b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe785);
        EXPECT(gbc.pc(), 0x4e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 013B
        gbc.setState(0xb36b, 0x4ccd, 0x41e0, 0xf452, 0xa5ae, 0x69e9, 0x1, 0x1);
        gbc.writeMem(0xb36b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4ccd);
        EXPECT(gbc.pc(), 0xb36c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb36b), 0x97);
        // 97 013C
        gbc.setState(0x832e, 0x4b20, 0xd560, 0xae97, 0xeed, 0xcdfc, 0x0, 0x0);
        gbc.writeMem(0x832e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4b20);
        EXPECT(gbc.pc(), 0x832f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x832e), 0x97);
        // 97 013D
        gbc.setState(0x3f7b, 0x84d3, 0xd2b0, 0x3bc2, 0x1981, 0xf33d, 0x0, 0x0);
        gbc.writeMem(0x3f7b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x84d3);
        EXPECT(gbc.pc(), 0x3f7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 013E
        gbc.setState(0x88a6, 0xfd9c, 0xe610, 0x11c8, 0x1d6e, 0x4e5f, 0x1, 0x0);
        gbc.writeMem(0x88a6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfd9c);
        EXPECT(gbc.pc(), 0x88a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a6), 0x97);
        // 97 013F
        gbc.setState(0x1e05, 0xb996, 0x4600, 0x29f9, 0x766f, 0xb4cf, 0x1, 0x1);
        gbc.writeMem(0x1e05, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb996);
        EXPECT(gbc.pc(), 0x1e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0140
        gbc.setState(0xe125, 0x6138, 0xa550, 0xdfb1, 0x15ba, 0x3c97, 0x0, 0x0);
        gbc.writeMem(0xe125, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6138);
        EXPECT(gbc.pc(), 0xe126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe125), 0x97);
        // 97 0141
        gbc.setState(0x2ff6, 0xff4a, 0x6ab0, 0xaf16, 0xce12, 0x2bef, 0x0, 0x0);
        gbc.writeMem(0x2ff6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xff4a);
        EXPECT(gbc.pc(), 0x2ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0142
        gbc.setState(0x7afa, 0x66c5, 0x4760, 0xa96e, 0x50af, 0x97cb, 0x1, 0x0);
        gbc.writeMem(0x7afa, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x66c5);
        EXPECT(gbc.pc(), 0x7afb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0143
        gbc.setState(0x8511, 0xa3a1, 0x6af0, 0x228d, 0x9a06, 0x589, 0x0, 0x1);
        gbc.writeMem(0x8511, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa3a1);
        EXPECT(gbc.pc(), 0x8512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8511), 0x97);
        // 97 0144
        gbc.setState(0xcd00, 0xc, 0x2ef0, 0x8ade, 0xfe77, 0xbd7c, 0x0, 0x0);
        gbc.writeMem(0xcd00, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc);
        EXPECT(gbc.pc(), 0xcd01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd00), 0x97);
        // 97 0145
        gbc.setState(0x4b45, 0x6f80, 0xb500, 0xd581, 0xfba8, 0x978d, 0x1, 0x0);
        gbc.writeMem(0x4b45, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6f80);
        EXPECT(gbc.pc(), 0x4b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0146
        gbc.setState(0x5805, 0x86b4, 0x110, 0xf8a5, 0xb5e7, 0xa2aa, 0x0, 0x1);
        gbc.writeMem(0x5805, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x86b4);
        EXPECT(gbc.pc(), 0x5806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0147
        gbc.setState(0x9839, 0xa28b, 0xeb90, 0xdb9e, 0x5971, 0xb1f9, 0x1, 0x0);
        gbc.writeMem(0x9839, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa28b);
        EXPECT(gbc.pc(), 0x983a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9839), 0x97);
        // 97 0148
        gbc.setState(0x9424, 0xaee1, 0xbf90, 0xc148, 0xebaf, 0xf136, 0x0, 0x1);
        gbc.writeMem(0x9424, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xaee1);
        EXPECT(gbc.pc(), 0x9425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9424), 0x97);
        // 97 0149
        gbc.setState(0x6e83, 0x4f11, 0xcf10, 0xa0d3, 0x1c10, 0xf41a, 0x0, 0x1);
        gbc.writeMem(0x6e83, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4f11);
        EXPECT(gbc.pc(), 0x6e84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 014B
        gbc.setState(0xe2d4, 0xd5bd, 0x46b0, 0x1b53, 0xda05, 0xaec2, 0x0, 0x1);
        gbc.writeMem(0xe2d4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd5bd);
        EXPECT(gbc.pc(), 0xe2d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d4), 0x97);
        // 97 014C
        gbc.setState(0x9981, 0x98ec, 0xc270, 0x5a39, 0xe110, 0x83a1, 0x0, 0x1);
        gbc.writeMem(0x9981, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x98ec);
        EXPECT(gbc.pc(), 0x9982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9981), 0x97);
        // 97 014D
        gbc.setState(0x52a7, 0x1c25, 0xea40, 0x60a5, 0xca26, 0x12b4, 0x1, 0x1);
        gbc.writeMem(0x52a7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1c25);
        EXPECT(gbc.pc(), 0x52a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 014F
        gbc.setState(0xb04, 0x5567, 0x1a50, 0x2df8, 0xa929, 0xa937, 0x0, 0x0);
        gbc.writeMem(0xb04, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5567);
        EXPECT(gbc.pc(), 0xb05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0150
        gbc.setState(0x3804, 0xe9fb, 0x72a0, 0x95f8, 0x9ac3, 0x2eac, 0x1, 0x0);
        gbc.writeMem(0x3804, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe9fb);
        EXPECT(gbc.pc(), 0x3805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0151
        gbc.setState(0x8a6f, 0xd9bf, 0x31c0, 0xa9f7, 0xcd72, 0x963b, 0x0, 0x1);
        gbc.writeMem(0x8a6f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd9bf);
        EXPECT(gbc.pc(), 0x8a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a6f), 0x97);
        // 97 0152
        gbc.setState(0x9938, 0x2a86, 0x1b10, 0xf6da, 0xbb8f, 0xcbb9, 0x0, 0x1);
        gbc.writeMem(0x9938, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2a86);
        EXPECT(gbc.pc(), 0x9939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9938), 0x97);
        // 97 0153
        gbc.setState(0x5504, 0xcafc, 0xa120, 0x3ad0, 0xcafe, 0x9ea2, 0x1, 0x0);
        gbc.writeMem(0x5504, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcafc);
        EXPECT(gbc.pc(), 0x5505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0154
        gbc.setState(0x88b8, 0x10e9, 0x9f40, 0x92db, 0xb3f7, 0x3236, 0x0, 0x1);
        gbc.writeMem(0x88b8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x10e9);
        EXPECT(gbc.pc(), 0x88b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b8), 0x97);
        // 97 0155
        gbc.setState(0x27bd, 0x91cd, 0xc290, 0x4519, 0x46df, 0xcc8, 0x0, 0x0);
        gbc.writeMem(0x27bd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x91cd);
        EXPECT(gbc.pc(), 0x27be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0156
        gbc.setState(0xed42, 0x4092, 0x1a40, 0xc1aa, 0xb97c, 0x9574, 0x0, 0x1);
        gbc.writeMem(0xed42, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4092);
        EXPECT(gbc.pc(), 0xed43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed42), 0x97);
        // 97 0157
        gbc.setState(0x9c1b, 0x2ce8, 0x2810, 0xb985, 0x4c2d, 0xba47, 0x1, 0x0);
        gbc.writeMem(0x9c1b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2ce8);
        EXPECT(gbc.pc(), 0x9c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1b), 0x97);
        // 97 0158
        gbc.setState(0xce81, 0xfcc8, 0x1ff0, 0x7fa3, 0x8ffc, 0xf19, 0x1, 0x1);
        gbc.writeMem(0xce81, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfcc8);
        EXPECT(gbc.pc(), 0xce82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce81), 0x97);
        // 97 0159
        gbc.setState(0x6398, 0x3358, 0xa1d0, 0xd5d3, 0x1457, 0x86d0, 0x0, 0x0);
        gbc.writeMem(0x6398, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3358);
        EXPECT(gbc.pc(), 0x6399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 015A
        gbc.setState(0x5095, 0x2ec6, 0x75d0, 0x5475, 0xa31d, 0xc21a, 0x1, 0x1);
        gbc.writeMem(0x5095, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2ec6);
        EXPECT(gbc.pc(), 0x5096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 015B
        gbc.setState(0xc463, 0x2aa3, 0x6400, 0x73ee, 0xe06f, 0x784e, 0x0, 0x0);
        gbc.writeMem(0xc463, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2aa3);
        EXPECT(gbc.pc(), 0xc464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc463), 0x97);
        // 97 015C
        gbc.setState(0xc388, 0xd8fe, 0xa2a0, 0xb740, 0xf9c3, 0xe66, 0x1, 0x1);
        gbc.writeMem(0xc388, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd8fe);
        EXPECT(gbc.pc(), 0xc389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc388), 0x97);
        // 97 015D
        gbc.setState(0xa8c, 0x1ed1, 0x6100, 0xe568, 0xb0b8, 0x8323, 0x1, 0x0);
        gbc.writeMem(0xa8c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1ed1);
        EXPECT(gbc.pc(), 0xa8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 015E
        gbc.setState(0x5634, 0x6887, 0x2db0, 0xdb92, 0x6064, 0x275f, 0x0, 0x1);
        gbc.writeMem(0x5634, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6887);
        EXPECT(gbc.pc(), 0x5635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 015F
        gbc.setState(0x6702, 0x7314, 0x3150, 0x3ab5, 0x4a6, 0xf561, 0x1, 0x1);
        gbc.writeMem(0x6702, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7314);
        EXPECT(gbc.pc(), 0x6703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0160
        gbc.setState(0x2527, 0x9eab, 0x55b0, 0xf47d, 0xba38, 0xb631, 0x1, 0x0);
        gbc.writeMem(0x2527, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9eab);
        EXPECT(gbc.pc(), 0x2528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0161
        gbc.setState(0x6cd4, 0xa8f1, 0x1920, 0x9a3d, 0xf1ef, 0x8ecd, 0x1, 0x0);
        gbc.writeMem(0x6cd4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa8f1);
        EXPECT(gbc.pc(), 0x6cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0162
        gbc.setState(0x38b9, 0x1141, 0xa430, 0x3300, 0x9fc4, 0xbd81, 0x0, 0x0);
        gbc.writeMem(0x38b9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1141);
        EXPECT(gbc.pc(), 0x38ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0163
        gbc.setState(0xbb21, 0x5577, 0x2720, 0xc83b, 0xe169, 0x646d, 0x1, 0x1);
        gbc.writeMem(0xbb21, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5577);
        EXPECT(gbc.pc(), 0xbb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb21), 0x97);
        // 97 0164
        gbc.setState(0x4a96, 0xca9, 0x3b70, 0x98a1, 0x6c41, 0x879, 0x1, 0x0);
        gbc.writeMem(0x4a96, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xca9);
        EXPECT(gbc.pc(), 0x4a97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0165
        gbc.setState(0x6055, 0x3dc8, 0xea00, 0x12e9, 0x4c71, 0x5305, 0x1, 0x1);
        gbc.writeMem(0x6055, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3dc8);
        EXPECT(gbc.pc(), 0x6056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0166
        gbc.setState(0x70a2, 0x5e55, 0x2150, 0xfb0b, 0x9cf2, 0x6062, 0x0, 0x0);
        gbc.writeMem(0x70a2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5e55);
        EXPECT(gbc.pc(), 0x70a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0167
        gbc.setState(0x52cf, 0xe298, 0x8d70, 0x7650, 0x8fa, 0xb826, 0x0, 0x1);
        gbc.writeMem(0x52cf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe298);
        EXPECT(gbc.pc(), 0x52d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0168
        gbc.setState(0x2978, 0x852e, 0x9f0, 0x908, 0x2825, 0x87fd, 0x1, 0x0);
        gbc.writeMem(0x2978, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x852e);
        EXPECT(gbc.pc(), 0x2979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0169
        gbc.setState(0x7d83, 0x712e, 0xb6b0, 0x7abb, 0x6416, 0x4222, 0x1, 0x1);
        gbc.writeMem(0x7d83, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x712e);
        EXPECT(gbc.pc(), 0x7d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 016A
        gbc.setState(0xdf5, 0xeb85, 0x560, 0xc935, 0xde5d, 0x20d4, 0x1, 0x0);
        gbc.writeMem(0xdf5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xeb85);
        EXPECT(gbc.pc(), 0xdf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 016C
        gbc.setState(0x6de8, 0xd24f, 0x3f60, 0x16f9, 0xa5b9, 0x3ee4, 0x1, 0x1);
        gbc.writeMem(0x6de8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd24f);
        EXPECT(gbc.pc(), 0x6de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 016D
        gbc.setState(0x88ae, 0xb5c9, 0xb70, 0x6533, 0xf5e1, 0x5467, 0x1, 0x0);
        gbc.writeMem(0x88ae, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb5c9);
        EXPECT(gbc.pc(), 0x88af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ae), 0x97);
        // 97 016E
        gbc.setState(0x5f54, 0x3a5a, 0xbf70, 0xc171, 0x778d, 0x7824, 0x0, 0x0);
        gbc.writeMem(0x5f54, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3a5a);
        EXPECT(gbc.pc(), 0x5f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 016F
        gbc.setState(0x5381, 0x1ac5, 0xc0f0, 0x5610, 0xef3a, 0xb982, 0x0, 0x1);
        gbc.writeMem(0x5381, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1ac5);
        EXPECT(gbc.pc(), 0x5382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0170
        gbc.setState(0x8e22, 0x87dd, 0x130, 0x5637, 0x920a, 0x73c3, 0x0, 0x1);
        gbc.writeMem(0x8e22, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x87dd);
        EXPECT(gbc.pc(), 0x8e23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e22), 0x97);
        // 97 0171
        gbc.setState(0xdb01, 0x9025, 0x40a0, 0xc2fe, 0xab0a, 0xcfa3, 0x1, 0x1);
        gbc.writeMem(0xdb01, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9025);
        EXPECT(gbc.pc(), 0xdb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb01), 0x97);
        // 97 0172
        gbc.setState(0x2ed, 0x5a19, 0xc200, 0xe3a0, 0x1125, 0x7a3e, 0x1, 0x1);
        gbc.writeMem(0x2ed, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5a19);
        EXPECT(gbc.pc(), 0x2ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0173
        gbc.setState(0xec3e, 0x150, 0xada0, 0x3549, 0x4087, 0x83c9, 0x1, 0x0);
        gbc.writeMem(0xec3e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x150);
        EXPECT(gbc.pc(), 0xec3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3e), 0x97);
        // 97 0174
        gbc.setState(0x7aaf, 0xc3c4, 0x4ad0, 0xeda, 0xaf41, 0x7832, 0x0, 0x1);
        gbc.writeMem(0x7aaf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc3c4);
        EXPECT(gbc.pc(), 0x7ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0175
        gbc.setState(0x2056, 0x42e1, 0x6210, 0x13c, 0x7740, 0xcd82, 0x0, 0x0);
        gbc.writeMem(0x2056, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x42e1);
        EXPECT(gbc.pc(), 0x2057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0176
        gbc.setState(0x5b5, 0xf453, 0xd710, 0x7589, 0x73a, 0xcbdc, 0x0, 0x0);
        gbc.writeMem(0x5b5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf453);
        EXPECT(gbc.pc(), 0x5b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0177
        gbc.setState(0x4d30, 0x9cb6, 0x78f0, 0xb585, 0x9186, 0xa9f2, 0x1, 0x1);
        gbc.writeMem(0x4d30, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9cb6);
        EXPECT(gbc.pc(), 0x4d31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0178
        gbc.setState(0x3fac, 0xcde8, 0x6d20, 0x4ac, 0xb22, 0x10fd, 0x0, 0x1);
        gbc.writeMem(0x3fac, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcde8);
        EXPECT(gbc.pc(), 0x3fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0179
        gbc.setState(0x6295, 0x2cf7, 0xf790, 0xfe4b, 0xf61b, 0x280a, 0x1, 0x0);
        gbc.writeMem(0x6295, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2cf7);
        EXPECT(gbc.pc(), 0x6296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 017A
        gbc.setState(0x9e74, 0x9974, 0x79f0, 0xd957, 0xbc0, 0xce3e, 0x1, 0x0);
        gbc.writeMem(0x9e74, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9974);
        EXPECT(gbc.pc(), 0x9e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e74), 0x97);
        // 97 017C
        gbc.setState(0xd99a, 0xe9a9, 0xee90, 0x2775, 0x8e6e, 0x3c90, 0x0, 0x0);
        gbc.writeMem(0xd99a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe9a9);
        EXPECT(gbc.pc(), 0xd99b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd99a), 0x97);
        // 97 017D
        gbc.setState(0x8877, 0x22f0, 0xd310, 0x8e15, 0x736e, 0x95e8, 0x0, 0x0);
        gbc.writeMem(0x8877, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x22f0);
        EXPECT(gbc.pc(), 0x8878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8877), 0x97);
        // 97 017F
        gbc.setState(0xc23a, 0x9458, 0x5990, 0x9eb6, 0xfc69, 0xbabc, 0x1, 0x0);
        gbc.writeMem(0xc23a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9458);
        EXPECT(gbc.pc(), 0xc23b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc23a), 0x97);
        // 97 0180
        gbc.setState(0xd6c1, 0xe013, 0x9790, 0x2e32, 0xe83b, 0x4bcb, 0x1, 0x1);
        gbc.writeMem(0xd6c1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe013);
        EXPECT(gbc.pc(), 0xd6c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c1), 0x97);
        // 97 0181
        gbc.setState(0x3ac7, 0xe12a, 0x5d10, 0xbb88, 0x73a8, 0xeefb, 0x1, 0x0);
        gbc.writeMem(0x3ac7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe12a);
        EXPECT(gbc.pc(), 0x3ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0182
        gbc.setState(0xa1da, 0xbb0f, 0x7870, 0xc7e4, 0x537f, 0xe82e, 0x1, 0x1);
        gbc.writeMem(0xa1da, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbb0f);
        EXPECT(gbc.pc(), 0xa1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1da), 0x97);
        // 97 0183
        gbc.setState(0xa3e6, 0xc78c, 0xca00, 0x74d3, 0xdfed, 0xa9ed, 0x0, 0x0);
        gbc.writeMem(0xa3e6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc78c);
        EXPECT(gbc.pc(), 0xa3e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e6), 0x97);
        // 97 0184
        gbc.setState(0x9af4, 0x2720, 0x6c30, 0x9d67, 0x4edc, 0x6619, 0x1, 0x0);
        gbc.writeMem(0x9af4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2720);
        EXPECT(gbc.pc(), 0x9af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af4), 0x97);
        // 97 0185
        gbc.setState(0x88e4, 0xe812, 0x6eb0, 0x1bff, 0x11a6, 0x85bc, 0x1, 0x0);
        gbc.writeMem(0x88e4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe812);
        EXPECT(gbc.pc(), 0x88e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e4), 0x97);
        // 97 0186
        gbc.setState(0x182f, 0xf1dc, 0x9bd0, 0x1d52, 0xb31d, 0x26fd, 0x0, 0x0);
        gbc.writeMem(0x182f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf1dc);
        EXPECT(gbc.pc(), 0x1830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0187
        gbc.setState(0x9fb1, 0xaa61, 0xa710, 0x8906, 0x4e94, 0x4218, 0x0, 0x1);
        gbc.writeMem(0x9fb1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xaa61);
        EXPECT(gbc.pc(), 0x9fb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fb1), 0x97);
        // 97 0188
        gbc.setState(0x496b, 0xbe3d, 0xd480, 0x8220, 0x3cb0, 0x4838, 0x0, 0x0);
        gbc.writeMem(0x496b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbe3d);
        EXPECT(gbc.pc(), 0x496c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0189
        gbc.setState(0xb860, 0xae85, 0x310, 0x9988, 0xaef3, 0xbd71, 0x0, 0x0);
        gbc.writeMem(0xb860, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xae85);
        EXPECT(gbc.pc(), 0xb861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb860), 0x97);
        // 97 018A
        gbc.setState(0x8a3c, 0x62bf, 0x5bd0, 0xcb79, 0xfb08, 0x5840, 0x0, 0x0);
        gbc.writeMem(0x8a3c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x62bf);
        EXPECT(gbc.pc(), 0x8a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a3c), 0x97);
        // 97 018C
        gbc.setState(0x2c0d, 0x3976, 0x11d0, 0x341, 0x4b11, 0xb9d7, 0x0, 0x1);
        gbc.writeMem(0x2c0d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3976);
        EXPECT(gbc.pc(), 0x2c0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 018D
        gbc.setState(0x13cb, 0x8d5f, 0xd4a0, 0x90e4, 0x27b7, 0xbb7d, 0x0, 0x1);
        gbc.writeMem(0x13cb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8d5f);
        EXPECT(gbc.pc(), 0x13cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 018E
        gbc.setState(0x143a, 0xe768, 0xcf30, 0xe78d, 0x4d78, 0x41e2, 0x0, 0x0);
        gbc.writeMem(0x143a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe768);
        EXPECT(gbc.pc(), 0x143b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 018F
        gbc.setState(0x8d8b, 0x1eb7, 0xb910, 0x460, 0x1c85, 0x919b, 0x0, 0x1);
        gbc.writeMem(0x8d8b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1eb7);
        EXPECT(gbc.pc(), 0x8d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8b), 0x97);
        // 97 0190
        gbc.setState(0x110, 0xbe92, 0x10f0, 0x6766, 0xecbf, 0xfc4d, 0x0, 0x1);
        gbc.writeMem(0x110, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbe92);
        EXPECT(gbc.pc(), 0x111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0191
        gbc.setState(0x4f5c, 0x2cf0, 0x3710, 0xa214, 0xb5f2, 0xfbc2, 0x1, 0x1);
        gbc.writeMem(0x4f5c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2cf0);
        EXPECT(gbc.pc(), 0x4f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0192
        gbc.setState(0x638d, 0xa25c, 0xc420, 0xa2a6, 0xa123, 0xba43, 0x1, 0x1);
        gbc.writeMem(0x638d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa25c);
        EXPECT(gbc.pc(), 0x638e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0193
        gbc.setState(0x1ed6, 0x186f, 0x1950, 0xb15e, 0x4c01, 0x9ac, 0x0, 0x1);
        gbc.writeMem(0x1ed6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x186f);
        EXPECT(gbc.pc(), 0x1ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0194
        gbc.setState(0xb3c3, 0xdfe5, 0x3fe0, 0x778a, 0x5f37, 0x9736, 0x0, 0x0);
        gbc.writeMem(0xb3c3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xdfe5);
        EXPECT(gbc.pc(), 0xb3c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c3), 0x97);
        // 97 0195
        gbc.setState(0x1a22, 0x182b, 0xaf90, 0x4ab0, 0x76d8, 0x72b4, 0x0, 0x1);
        gbc.writeMem(0x1a22, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x182b);
        EXPECT(gbc.pc(), 0x1a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0196
        gbc.setState(0xd39a, 0x3561, 0x5dc0, 0xf018, 0x3825, 0xa70c, 0x1, 0x1);
        gbc.writeMem(0xd39a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3561);
        EXPECT(gbc.pc(), 0xd39b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd39a), 0x97);
        // 97 0197
        gbc.setState(0xe9b6, 0x73ee, 0x14d0, 0x4da0, 0xb5f2, 0x604a, 0x1, 0x1);
        gbc.writeMem(0xe9b6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x73ee);
        EXPECT(gbc.pc(), 0xe9b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b6), 0x97);
        // 97 0198
        gbc.setState(0x5a3d, 0x6723, 0xcec0, 0x2d3d, 0xf91d, 0xee18, 0x0, 0x0);
        gbc.writeMem(0x5a3d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6723);
        EXPECT(gbc.pc(), 0x5a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0199
        gbc.setState(0x2d6b, 0xf25e, 0xa6f0, 0x6071, 0x9eb3, 0xf30, 0x1, 0x1);
        gbc.writeMem(0x2d6b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf25e);
        EXPECT(gbc.pc(), 0x2d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 019A
        gbc.setState(0x9722, 0x23fa, 0x8e70, 0x99aa, 0x5fb2, 0xf747, 0x1, 0x0);
        gbc.writeMem(0x9722, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x23fa);
        EXPECT(gbc.pc(), 0x9723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9722), 0x97);
        // 97 019C
        gbc.setState(0x5aba, 0x5e35, 0x9320, 0x8d4e, 0xe8db, 0x11c6, 0x0, 0x0);
        gbc.writeMem(0x5aba, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5e35);
        EXPECT(gbc.pc(), 0x5abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 019D
        gbc.setState(0x2a93, 0xb975, 0x2770, 0xe451, 0x2900, 0xb425, 0x0, 0x0);
        gbc.writeMem(0x2a93, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb975);
        EXPECT(gbc.pc(), 0x2a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 019E
        gbc.setState(0x336, 0xb4f, 0x4eb0, 0xd291, 0xdeb8, 0x5f4c, 0x0, 0x1);
        gbc.writeMem(0x336, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb4f);
        EXPECT(gbc.pc(), 0x337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 019F
        gbc.setState(0x92c2, 0x9603, 0xfcd0, 0x6c73, 0x5126, 0x7201, 0x1, 0x0);
        gbc.writeMem(0x92c2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9603);
        EXPECT(gbc.pc(), 0x92c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c2), 0x97);
        // 97 01A0
        gbc.setState(0xb292, 0x3742, 0x58e0, 0xb3de, 0x8ad7, 0xce40, 0x1, 0x1);
        gbc.writeMem(0xb292, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3742);
        EXPECT(gbc.pc(), 0xb293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb292), 0x97);
        // 97 01A1
        gbc.setState(0xdb68, 0xd1db, 0x3d50, 0xc6a8, 0x5809, 0x7ae2, 0x0, 0x1);
        gbc.writeMem(0xdb68, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd1db);
        EXPECT(gbc.pc(), 0xdb69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb68), 0x97);
        // 97 01A2
        gbc.setState(0x9995, 0x3079, 0x6a30, 0x695f, 0x7621, 0x5037, 0x0, 0x0);
        gbc.writeMem(0x9995, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3079);
        EXPECT(gbc.pc(), 0x9996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9995), 0x97);
        // 97 01A3
        gbc.setState(0x6652, 0x7606, 0xf8d0, 0x28cd, 0x4103, 0x49a7, 0x0, 0x1);
        gbc.writeMem(0x6652, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7606);
        EXPECT(gbc.pc(), 0x6653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01A4
        gbc.setState(0x82fd, 0x970c, 0x70, 0xd232, 0xb986, 0x5914, 0x0, 0x1);
        gbc.writeMem(0x82fd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x970c);
        EXPECT(gbc.pc(), 0x82fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82fd), 0x97);
        // 97 01A5
        gbc.setState(0x26cc, 0xcd63, 0xa390, 0x6e26, 0x144f, 0x4c05, 0x0, 0x1);
        gbc.writeMem(0x26cc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xcd63);
        EXPECT(gbc.pc(), 0x26cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01A7
        gbc.setState(0xb8a3, 0x8dd0, 0x5cd0, 0x480e, 0x5735, 0xfd0d, 0x0, 0x1);
        gbc.writeMem(0xb8a3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8dd0);
        EXPECT(gbc.pc(), 0xb8a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8a3), 0x97);
        // 97 01A8
        gbc.setState(0xd9cb, 0x85c4, 0x8b30, 0xb29a, 0xc983, 0x7a7c, 0x0, 0x1);
        gbc.writeMem(0xd9cb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x85c4);
        EXPECT(gbc.pc(), 0xd9cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9cb), 0x97);
        // 97 01A9
        gbc.setState(0xbc37, 0xeb20, 0x4950, 0xa76b, 0xed32, 0xa66b, 0x1, 0x0);
        gbc.writeMem(0xbc37, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xeb20);
        EXPECT(gbc.pc(), 0xbc38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc37), 0x97);
        // 97 01AA
        gbc.setState(0xd6ac, 0xa77e, 0x5280, 0x3788, 0x416d, 0xe4d6, 0x0, 0x0);
        gbc.writeMem(0xd6ac, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa77e);
        EXPECT(gbc.pc(), 0xd6ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ac), 0x97);
        // 97 01AB
        gbc.setState(0x8ffb, 0x758e, 0x6610, 0x6da6, 0xf198, 0x2c64, 0x0, 0x0);
        gbc.writeMem(0x8ffb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x758e);
        EXPECT(gbc.pc(), 0x8ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ffb), 0x97);
        // 97 01AC
        gbc.setState(0x5539, 0xd24a, 0x5f20, 0x52b3, 0xba56, 0xdf1d, 0x1, 0x0);
        gbc.writeMem(0x5539, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd24a);
        EXPECT(gbc.pc(), 0x553a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01AD
        gbc.setState(0x6cd0, 0xa6c7, 0xb270, 0x7419, 0xab54, 0x6136, 0x1, 0x1);
        gbc.writeMem(0x6cd0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa6c7);
        EXPECT(gbc.pc(), 0x6cd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01AE
        gbc.setState(0x671e, 0xae51, 0x70d0, 0xc91e, 0x4d31, 0xae2, 0x1, 0x0);
        gbc.writeMem(0x671e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xae51);
        EXPECT(gbc.pc(), 0x671f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01AF
        gbc.setState(0xcb56, 0x76ab, 0xd2b0, 0x8c8d, 0x31ba, 0x1b73, 0x1, 0x0);
        gbc.writeMem(0xcb56, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x76ab);
        EXPECT(gbc.pc(), 0xcb57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb56), 0x97);
        // 97 01B0
        gbc.setState(0x14af, 0xa1eb, 0x7ab0, 0xd9d9, 0xd82c, 0x3d58, 0x1, 0x0);
        gbc.writeMem(0x14af, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa1eb);
        EXPECT(gbc.pc(), 0x14b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01B2
        gbc.setState(0x494e, 0xed6e, 0x2230, 0x172c, 0x30f7, 0xbdfb, 0x1, 0x1);
        gbc.writeMem(0x494e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xed6e);
        EXPECT(gbc.pc(), 0x494f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01B3
        gbc.setState(0x6830, 0xfbe8, 0xc7f0, 0xe319, 0x674e, 0x1627, 0x0, 0x1);
        gbc.writeMem(0x6830, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfbe8);
        EXPECT(gbc.pc(), 0x6831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01B4
        gbc.setState(0x5196, 0x77ec, 0x8b70, 0x475f, 0x7268, 0x811f, 0x1, 0x0);
        gbc.writeMem(0x5196, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x77ec);
        EXPECT(gbc.pc(), 0x5197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01B5
        gbc.setState(0x802a, 0x9a33, 0x3080, 0x9c68, 0x74f4, 0xfee1, 0x0, 0x1);
        gbc.writeMem(0x802a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9a33);
        EXPECT(gbc.pc(), 0x802b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802a), 0x97);
        // 97 01B6
        gbc.setState(0x77a2, 0x5595, 0xb340, 0x2ddd, 0xaaa3, 0x5027, 0x0, 0x0);
        gbc.writeMem(0x77a2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5595);
        EXPECT(gbc.pc(), 0x77a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01B8
        gbc.setState(0xcd7a, 0x4731, 0x79e0, 0x7d3e, 0x95f5, 0xc329, 0x1, 0x0);
        gbc.writeMem(0xcd7a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4731);
        EXPECT(gbc.pc(), 0xcd7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd7a), 0x97);
        // 97 01B9
        gbc.setState(0x5e6a, 0xb3d2, 0xe0f0, 0xa0c6, 0x1b06, 0xe724, 0x1, 0x1);
        gbc.writeMem(0x5e6a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb3d2);
        EXPECT(gbc.pc(), 0x5e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01BA
        gbc.setState(0x221f, 0xd79b, 0xd000, 0xd11, 0x38ae, 0xbc2, 0x1, 0x0);
        gbc.writeMem(0x221f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd79b);
        EXPECT(gbc.pc(), 0x2220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01BB
        gbc.setState(0xe259, 0x4f77, 0x6e60, 0x472d, 0xaaea, 0x17ad, 0x1, 0x1);
        gbc.writeMem(0xe259, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4f77);
        EXPECT(gbc.pc(), 0xe25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe259), 0x97);
        // 97 01BC
        gbc.setState(0x9c0e, 0x4c7a, 0xcd0, 0x6fb7, 0xbe4, 0xd871, 0x1, 0x0);
        gbc.writeMem(0x9c0e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4c7a);
        EXPECT(gbc.pc(), 0x9c0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0e), 0x97);
        // 97 01BD
        gbc.setState(0xeea5, 0x7710, 0xfa80, 0x29e7, 0xbdbf, 0xa64e, 0x1, 0x0);
        gbc.writeMem(0xeea5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7710);
        EXPECT(gbc.pc(), 0xeea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea5), 0x97);
        // 97 01BE
        gbc.setState(0x9f8b, 0x5c0e, 0xde70, 0x1e93, 0x63c1, 0xff25, 0x0, 0x1);
        gbc.writeMem(0x9f8b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5c0e);
        EXPECT(gbc.pc(), 0x9f8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f8b), 0x97);
        // 97 01BF
        gbc.setState(0x7dc6, 0x64a6, 0x4420, 0x8beb, 0x3c7c, 0x1a0d, 0x0, 0x1);
        gbc.writeMem(0x7dc6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x64a6);
        EXPECT(gbc.pc(), 0x7dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01C0
        gbc.setState(0xa72b, 0xd5c7, 0xe230, 0xc07f, 0x4af6, 0x697d, 0x0, 0x0);
        gbc.writeMem(0xa72b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd5c7);
        EXPECT(gbc.pc(), 0xa72c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa72b), 0x97);
        // 97 01C1
        gbc.setState(0x6795, 0xaae4, 0x5b0, 0xe5a3, 0x6d88, 0xebf, 0x1, 0x1);
        gbc.writeMem(0x6795, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xaae4);
        EXPECT(gbc.pc(), 0x6796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01C3
        gbc.setState(0x849b, 0x14d0, 0xa1a0, 0xc36, 0x676e, 0xe281, 0x0, 0x0);
        gbc.writeMem(0x849b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x14d0);
        EXPECT(gbc.pc(), 0x849c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x849b), 0x97);
        // 97 01C4
        gbc.setState(0x261f, 0x4f59, 0xc600, 0x3b06, 0xcfde, 0x8d05, 0x1, 0x1);
        gbc.writeMem(0x261f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4f59);
        EXPECT(gbc.pc(), 0x2620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01C5
        gbc.setState(0x1161, 0xe4b1, 0x9030, 0x9d8e, 0x6fca, 0xfd4, 0x1, 0x0);
        gbc.writeMem(0x1161, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe4b1);
        EXPECT(gbc.pc(), 0x1162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01C6
        gbc.setState(0xbd37, 0xef69, 0xe80, 0xce2a, 0x6cf9, 0x6787, 0x1, 0x1);
        gbc.writeMem(0xbd37, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xef69);
        EXPECT(gbc.pc(), 0xbd38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd37), 0x97);
        // 97 01C7
        gbc.setState(0xc5f1, 0x5ec2, 0x1740, 0x3c12, 0x84bb, 0x22bd, 0x1, 0x1);
        gbc.writeMem(0xc5f1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5ec2);
        EXPECT(gbc.pc(), 0xc5f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f1), 0x97);
        // 97 01C8
        gbc.setState(0xde2d, 0xad1b, 0x4e30, 0xa93f, 0x606c, 0x44a4, 0x0, 0x0);
        gbc.writeMem(0xde2d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xad1b);
        EXPECT(gbc.pc(), 0xde2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2d), 0x97);
        // 97 01C9
        gbc.setState(0x9829, 0x90ac, 0x6ea0, 0xa541, 0xc5f2, 0xc8fa, 0x1, 0x1);
        gbc.writeMem(0x9829, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x90ac);
        EXPECT(gbc.pc(), 0x982a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9829), 0x97);
        // 97 01CA
        gbc.setState(0x67fd, 0x8b9b, 0x8550, 0xe29b, 0x265d, 0xd930, 0x1, 0x0);
        gbc.writeMem(0x67fd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8b9b);
        EXPECT(gbc.pc(), 0x67fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01CB
        gbc.setState(0x56e8, 0xbd86, 0x88d0, 0x13ed, 0xd52f, 0x79bd, 0x0, 0x1);
        gbc.writeMem(0x56e8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xbd86);
        EXPECT(gbc.pc(), 0x56e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01CC
        gbc.setState(0xb7a9, 0xf16f, 0xe30, 0x5928, 0x26df, 0x4ba4, 0x1, 0x1);
        gbc.writeMem(0xb7a9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf16f);
        EXPECT(gbc.pc(), 0xb7aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a9), 0x97);
        // 97 01CD
        gbc.setState(0x3d03, 0x5e58, 0xb260, 0xce54, 0xdc27, 0xa253, 0x0, 0x1);
        gbc.writeMem(0x3d03, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5e58);
        EXPECT(gbc.pc(), 0x3d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01CE
        gbc.setState(0x94f4, 0x8f24, 0xa900, 0x8b84, 0x62ac, 0xe87b, 0x0, 0x0);
        gbc.writeMem(0x94f4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8f24);
        EXPECT(gbc.pc(), 0x94f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f4), 0x97);
        // 97 01CF
        gbc.setState(0xf0b, 0x9951, 0x76a0, 0x4d8b, 0x499, 0xe0f, 0x1, 0x0);
        gbc.writeMem(0xf0b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9951);
        EXPECT(gbc.pc(), 0xf0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01D0
        gbc.setState(0x286c, 0xc2bf, 0x2a0, 0x54ca, 0x2c91, 0x961f, 0x0, 0x1);
        gbc.writeMem(0x286c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc2bf);
        EXPECT(gbc.pc(), 0x286d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01D1
        gbc.setState(0x1964, 0xb3c5, 0xcf70, 0x2a8f, 0x5097, 0x1d0e, 0x0, 0x0);
        gbc.writeMem(0x1964, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb3c5);
        EXPECT(gbc.pc(), 0x1965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01D2
        gbc.setState(0x5bbe, 0x30bb, 0xf700, 0xc469, 0x682f, 0x52d9, 0x1, 0x0);
        gbc.writeMem(0x5bbe, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x30bb);
        EXPECT(gbc.pc(), 0x5bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01D3
        gbc.setState(0x6168, 0x7c60, 0x7da0, 0x3b19, 0x2bfb, 0x2ed6, 0x1, 0x1);
        gbc.writeMem(0x6168, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7c60);
        EXPECT(gbc.pc(), 0x6169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01D4
        gbc.setState(0xeea3, 0xad6c, 0x9290, 0xe5c6, 0xdfdc, 0x5830, 0x1, 0x1);
        gbc.writeMem(0xeea3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xad6c);
        EXPECT(gbc.pc(), 0xeea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea3), 0x97);
        // 97 01D5
        gbc.setState(0x44d9, 0x8ad1, 0x20d0, 0xf32a, 0xe737, 0x378d, 0x0, 0x0);
        gbc.writeMem(0x44d9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8ad1);
        EXPECT(gbc.pc(), 0x44da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01D6
        gbc.setState(0x64b8, 0x5b17, 0x5e00, 0x752b, 0x9169, 0x86e1, 0x0, 0x1);
        gbc.writeMem(0x64b8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5b17);
        EXPECT(gbc.pc(), 0x64b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01D7
        gbc.setState(0x700, 0x56ef, 0xf7e0, 0x41e5, 0x393d, 0xc37e, 0x0, 0x1);
        gbc.writeMem(0x700, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x56ef);
        EXPECT(gbc.pc(), 0x701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01D8
        gbc.setState(0xab2b, 0x9a4e, 0xda60, 0xbdcf, 0x5701, 0xe0a5, 0x0, 0x0);
        gbc.writeMem(0xab2b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9a4e);
        EXPECT(gbc.pc(), 0xab2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab2b), 0x97);
        // 97 01D9
        gbc.setState(0x5606, 0x46a3, 0x3a00, 0x605f, 0x8296, 0x5d6f, 0x0, 0x0);
        gbc.writeMem(0x5606, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x46a3);
        EXPECT(gbc.pc(), 0x5607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01DA
        gbc.setState(0xe0a1, 0x2203, 0x5f60, 0xc324, 0x6464, 0x3431, 0x1, 0x1);
        gbc.writeMem(0xe0a1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2203);
        EXPECT(gbc.pc(), 0xe0a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a1), 0x97);
        // 97 01DB
        gbc.setState(0x1a5e, 0xf095, 0xc4a0, 0x3bc1, 0x6b6d, 0x4d32, 0x1, 0x0);
        gbc.writeMem(0x1a5e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf095);
        EXPECT(gbc.pc(), 0x1a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01DC
        gbc.setState(0x9a, 0x4571, 0x3a80, 0x200e, 0xc1c, 0xce0a, 0x1, 0x0);
        gbc.writeMem(0x9a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4571);
        EXPECT(gbc.pc(), 0x9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01DD
        gbc.setState(0x584f, 0x4d19, 0x3810, 0x26f0, 0x226e, 0xe74b, 0x0, 0x0);
        gbc.writeMem(0x584f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4d19);
        EXPECT(gbc.pc(), 0x5850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01DE
        gbc.setState(0xd904, 0x8223, 0xa50, 0xb2cd, 0xf9de, 0x4d05, 0x0, 0x0);
        gbc.writeMem(0xd904, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8223);
        EXPECT(gbc.pc(), 0xd905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd904), 0x97);
        // 97 01DF
        gbc.setState(0xc67c, 0xb0f4, 0x7b70, 0xbd04, 0x1a66, 0xc76e, 0x0, 0x1);
        gbc.writeMem(0xc67c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb0f4);
        EXPECT(gbc.pc(), 0xc67d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67c), 0x97);
        // 97 01E0
        gbc.setState(0x2e07, 0xd8c9, 0x5e40, 0xf952, 0xa792, 0x6c48, 0x0, 0x0);
        gbc.writeMem(0x2e07, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd8c9);
        EXPECT(gbc.pc(), 0x2e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01E1
        gbc.setState(0x46e, 0xe627, 0x2c20, 0xeac2, 0xa007, 0xb189, 0x1, 0x0);
        gbc.writeMem(0x46e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe627);
        EXPECT(gbc.pc(), 0x46f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01E3
        gbc.setState(0x56c9, 0xff5a, 0x4c50, 0x62d5, 0xd922, 0xd5fd, 0x0, 0x0);
        gbc.writeMem(0x56c9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xff5a);
        EXPECT(gbc.pc(), 0x56ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01E4
        gbc.setState(0xbd1, 0xf2e, 0x89f0, 0x1cc, 0x2c73, 0x6496, 0x1, 0x0);
        gbc.writeMem(0xbd1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf2e);
        EXPECT(gbc.pc(), 0xbd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01E5
        gbc.setState(0x7f71, 0xb7b6, 0x30d0, 0xb8fc, 0xaf0e, 0x5de0, 0x1, 0x0);
        gbc.writeMem(0x7f71, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb7b6);
        EXPECT(gbc.pc(), 0x7f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01E6
        gbc.setState(0x415f, 0x6471, 0x2490, 0xdff2, 0x10cf, 0x5289, 0x0, 0x0);
        gbc.writeMem(0x415f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6471);
        EXPECT(gbc.pc(), 0x4160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01E7
        gbc.setState(0x83e5, 0x52a2, 0x2cb0, 0x1b81, 0x4c31, 0x3f85, 0x1, 0x1);
        gbc.writeMem(0x83e5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x52a2);
        EXPECT(gbc.pc(), 0x83e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e5), 0x97);
        // 97 01E8
        gbc.setState(0xc81c, 0xbf68, 0xe9b0, 0xb70, 0xd89a, 0x7e26, 0x1, 0x0);
        gbc.writeMem(0xc81c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xbf68);
        EXPECT(gbc.pc(), 0xc81d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc81c), 0x97);
        // 97 01E9
        gbc.setState(0x2f6f, 0x99e3, 0xa4c0, 0x4928, 0xbc9a, 0x9d74, 0x0, 0x1);
        gbc.writeMem(0x2f6f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x99e3);
        EXPECT(gbc.pc(), 0x2f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01EA
        gbc.setState(0x2221, 0x5825, 0x4810, 0x27f5, 0xe0dd, 0xf3a8, 0x1, 0x0);
        gbc.writeMem(0x2221, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5825);
        EXPECT(gbc.pc(), 0x2222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01EB
        gbc.setState(0x939b, 0xd08b, 0xb890, 0x1814, 0x5c9a, 0xd552, 0x0, 0x0);
        gbc.writeMem(0x939b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd08b);
        EXPECT(gbc.pc(), 0x939c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939b), 0x97);
        // 97 01EC
        gbc.setState(0x86c4, 0x2b7c, 0x57f0, 0x38c, 0x30c1, 0xca95, 0x0, 0x1);
        gbc.writeMem(0x86c4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2b7c);
        EXPECT(gbc.pc(), 0x86c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c4), 0x97);
        // 97 01ED
        gbc.setState(0x9d5a, 0x7fb6, 0x8d10, 0xc3a6, 0xa576, 0x8dac, 0x0, 0x0);
        gbc.writeMem(0x9d5a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7fb6);
        EXPECT(gbc.pc(), 0x9d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d5a), 0x97);
        // 97 01EE
        gbc.setState(0xa87b, 0x4d03, 0x36a0, 0xde71, 0xc5b9, 0xc1b7, 0x1, 0x0);
        gbc.writeMem(0xa87b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4d03);
        EXPECT(gbc.pc(), 0xa87c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa87b), 0x97);
        // 97 01EF
        gbc.setState(0xc8d5, 0x5a72, 0x2820, 0x1e7d, 0x14cf, 0x787, 0x0, 0x1);
        gbc.writeMem(0xc8d5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5a72);
        EXPECT(gbc.pc(), 0xc8d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d5), 0x97);
        // 97 01F0
        gbc.setState(0x691d, 0xe362, 0x8f30, 0xc11, 0x74d5, 0xcbe0, 0x0, 0x1);
        gbc.writeMem(0x691d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe362);
        EXPECT(gbc.pc(), 0x691e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01F1
        gbc.setState(0x1fc3, 0x6a5e, 0x4670, 0x3e22, 0xf1f7, 0x91b8, 0x1, 0x1);
        gbc.writeMem(0x1fc3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6a5e);
        EXPECT(gbc.pc(), 0x1fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01F2
        gbc.setState(0x164b, 0xe67c, 0x6b30, 0xc5be, 0x1187, 0x3acb, 0x0, 0x0);
        gbc.writeMem(0x164b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe67c);
        EXPECT(gbc.pc(), 0x164c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01F3
        gbc.setState(0x394e, 0x3b31, 0x9cd0, 0xfbbf, 0x6a10, 0xaed4, 0x0, 0x1);
        gbc.writeMem(0x394e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3b31);
        EXPECT(gbc.pc(), 0x394f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01F4
        gbc.setState(0x916d, 0x6b7e, 0x11a0, 0x9100, 0xee0b, 0x693c, 0x1, 0x1);
        gbc.writeMem(0x916d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6b7e);
        EXPECT(gbc.pc(), 0x916e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x916d), 0x97);
        // 97 01F5
        gbc.setState(0xba83, 0x127a, 0xe7a0, 0xeb78, 0x4e82, 0xffba, 0x1, 0x0);
        gbc.writeMem(0xba83, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x127a);
        EXPECT(gbc.pc(), 0xba84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba83), 0x97);
        // 97 01F6
        gbc.setState(0x76d7, 0x4b45, 0x8cc0, 0x2629, 0x88b6, 0x48c1, 0x1, 0x0);
        gbc.writeMem(0x76d7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4b45);
        EXPECT(gbc.pc(), 0x76d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01F7
        gbc.setState(0x34bc, 0x6e4a, 0x37b0, 0x1f8a, 0x8369, 0x6458, 0x1, 0x0);
        gbc.writeMem(0x34bc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6e4a);
        EXPECT(gbc.pc(), 0x34bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01F8
        gbc.setState(0x9751, 0x1244, 0xa6a0, 0xb9d, 0x67b1, 0xb2aa, 0x0, 0x0);
        gbc.writeMem(0x9751, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1244);
        EXPECT(gbc.pc(), 0x9752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9751), 0x97);
        // 97 01FA
        gbc.setState(0x603, 0xa1ef, 0xd340, 0x3787, 0x7af4, 0x96ed, 0x0, 0x0);
        gbc.writeMem(0x603, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa1ef);
        EXPECT(gbc.pc(), 0x604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01FB
        gbc.setState(0x4cd0, 0x6b87, 0x4780, 0xfc63, 0x6f9b, 0xb63d, 0x1, 0x0);
        gbc.writeMem(0x4cd0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6b87);
        EXPECT(gbc.pc(), 0x4cd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01FC
        gbc.setState(0x5c2c, 0xb567, 0xf500, 0xc60e, 0xb372, 0x8aba, 0x1, 0x1);
        gbc.writeMem(0x5c2c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb567);
        EXPECT(gbc.pc(), 0x5c2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01FD
        gbc.setState(0x2993, 0xa3c7, 0x26a0, 0x53ce, 0x7c0b, 0x1def, 0x1, 0x1);
        gbc.writeMem(0x2993, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa3c7);
        EXPECT(gbc.pc(), 0x2994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01FE
        gbc.setState(0x5dc7, 0x972e, 0xcb20, 0x100f, 0xae46, 0x486b, 0x1, 0x0);
        gbc.writeMem(0x5dc7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x972e);
        EXPECT(gbc.pc(), 0x5dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 01FF
        gbc.setState(0x1148, 0x268a, 0xdb40, 0x7f4c, 0x6f75, 0x52c0, 0x1, 0x0);
        gbc.writeMem(0x1148, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x268a);
        EXPECT(gbc.pc(), 0x1149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0200
        gbc.setState(0x6069, 0xfefc, 0xdd60, 0xf836, 0x6ab9, 0xa77c, 0x1, 0x1);
        gbc.writeMem(0x6069, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfefc);
        EXPECT(gbc.pc(), 0x606a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0201
        gbc.setState(0x7009, 0xa885, 0xb220, 0x47d9, 0x71d, 0x6481, 0x1, 0x0);
        gbc.writeMem(0x7009, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa885);
        EXPECT(gbc.pc(), 0x700a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0202
        gbc.setState(0x5246, 0x4ed2, 0xb700, 0x284d, 0x68a5, 0xa864, 0x1, 0x1);
        gbc.writeMem(0x5246, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x4ed2);
        EXPECT(gbc.pc(), 0x5247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0203
        gbc.setState(0x30e1, 0x7c3, 0x9390, 0x3ec8, 0x26a4, 0xf9ae, 0x0, 0x1);
        gbc.writeMem(0x30e1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7c3);
        EXPECT(gbc.pc(), 0x30e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0204
        gbc.setState(0xc802, 0xa873, 0x2a90, 0x1b1a, 0x3d8a, 0x6fb6, 0x0, 0x0);
        gbc.writeMem(0xc802, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa873);
        EXPECT(gbc.pc(), 0xc803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc802), 0x97);
        // 97 0205
        gbc.setState(0x97d3, 0xac1f, 0xe6a0, 0x6843, 0x9d11, 0xb836, 0x0, 0x1);
        gbc.writeMem(0x97d3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xac1f);
        EXPECT(gbc.pc(), 0x97d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d3), 0x97);
        // 97 0206
        gbc.setState(0xdc6d, 0xfa6b, 0xdde0, 0xb3f, 0xedb4, 0xfbe3, 0x1, 0x0);
        gbc.writeMem(0xdc6d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfa6b);
        EXPECT(gbc.pc(), 0xdc6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc6d), 0x97);
        // 97 0207
        gbc.setState(0x9659, 0xac96, 0x36d0, 0x305e, 0x77cc, 0x65d1, 0x0, 0x1);
        gbc.writeMem(0x9659, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xac96);
        EXPECT(gbc.pc(), 0x965a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9659), 0x97);
        // 97 0208
        gbc.setState(0x67ef, 0x6e70, 0x7630, 0x94ec, 0x3399, 0xa855, 0x1, 0x1);
        gbc.writeMem(0x67ef, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6e70);
        EXPECT(gbc.pc(), 0x67f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0209
        gbc.setState(0xc557, 0x390a, 0xcb40, 0x511b, 0x66b9, 0xe363, 0x1, 0x1);
        gbc.writeMem(0xc557, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x390a);
        EXPECT(gbc.pc(), 0xc558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc557), 0x97);
        // 97 020A
        gbc.setState(0x13f, 0x9795, 0xdc0, 0x4e97, 0x9446, 0x61ce, 0x1, 0x0);
        gbc.writeMem(0x13f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9795);
        EXPECT(gbc.pc(), 0x140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 020B
        gbc.setState(0xef25, 0xb3ec, 0x5ba0, 0x8094, 0xa0ec, 0x63a6, 0x0, 0x0);
        gbc.writeMem(0xef25, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb3ec);
        EXPECT(gbc.pc(), 0xef26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef25), 0x97);
        // 97 020C
        gbc.setState(0x9b8, 0x2f44, 0x140, 0x2ec0, 0x5f0b, 0x3e52, 0x1, 0x1);
        gbc.writeMem(0x9b8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2f44);
        EXPECT(gbc.pc(), 0x9b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 020D
        gbc.setState(0x7a10, 0x7651, 0xe900, 0x7d97, 0x7030, 0x521c, 0x1, 0x0);
        gbc.writeMem(0x7a10, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7651);
        EXPECT(gbc.pc(), 0x7a11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 020E
        gbc.setState(0x2d3c, 0xddbc, 0x84c0, 0x4ba3, 0x296f, 0x7e7e, 0x1, 0x1);
        gbc.writeMem(0x2d3c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xddbc);
        EXPECT(gbc.pc(), 0x2d3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 020F
        gbc.setState(0xe56c, 0xeca8, 0x6970, 0x31a0, 0x1e44, 0xa7ec, 0x0, 0x0);
        gbc.writeMem(0xe56c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xeca8);
        EXPECT(gbc.pc(), 0xe56d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe56c), 0x97);
        // 97 0210
        gbc.setState(0x6fa3, 0xa5d, 0xaf70, 0x6705, 0x4c3f, 0x7bf3, 0x0, 0x1);
        gbc.writeMem(0x6fa3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa5d);
        EXPECT(gbc.pc(), 0x6fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0211
        gbc.setState(0xc939, 0xd00d, 0x6580, 0x6c29, 0xa658, 0xe287, 0x0, 0x0);
        gbc.writeMem(0xc939, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd00d);
        EXPECT(gbc.pc(), 0xc93a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc939), 0x97);
        // 97 0213
        gbc.setState(0x8222, 0xd5f0, 0xf800, 0x75c8, 0xe551, 0xfe87, 0x1, 0x0);
        gbc.writeMem(0x8222, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd5f0);
        EXPECT(gbc.pc(), 0x8223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8222), 0x97);
        // 97 0214
        gbc.setState(0x1ff0, 0x42c, 0x6a90, 0x340d, 0xac40, 0x4876, 0x0, 0x0);
        gbc.writeMem(0x1ff0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x42c);
        EXPECT(gbc.pc(), 0x1ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0215
        gbc.setState(0xa35c, 0x3098, 0xee30, 0x3013, 0xfd5c, 0x620a, 0x0, 0x0);
        gbc.writeMem(0xa35c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3098);
        EXPECT(gbc.pc(), 0xa35d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa35c), 0x97);
        // 97 0216
        gbc.setState(0x6fee, 0xa0f5, 0x350, 0x6655, 0x7c45, 0x8e9, 0x0, 0x0);
        gbc.writeMem(0x6fee, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa0f5);
        EXPECT(gbc.pc(), 0x6fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0217
        gbc.setState(0x1110, 0xdd70, 0xda40, 0xd42b, 0xe4d2, 0xd888, 0x0, 0x0);
        gbc.writeMem(0x1110, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xdd70);
        EXPECT(gbc.pc(), 0x1111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0218
        gbc.setState(0xe9f7, 0x9716, 0x8720, 0xabea, 0xc982, 0x6f4e, 0x1, 0x1);
        gbc.writeMem(0xe9f7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9716);
        EXPECT(gbc.pc(), 0xe9f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9f7), 0x97);
        // 97 0219
        gbc.setState(0x8dd9, 0x4300, 0x4d20, 0x16e5, 0x7668, 0xfe1a, 0x1, 0x0);
        gbc.writeMem(0x8dd9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4300);
        EXPECT(gbc.pc(), 0x8dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd9), 0x97);
        // 97 021A
        gbc.setState(0xbbec, 0xcc66, 0xcda0, 0x21c0, 0x2df8, 0x5f7f, 0x1, 0x1);
        gbc.writeMem(0xbbec, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xcc66);
        EXPECT(gbc.pc(), 0xbbed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbec), 0x97);
        // 97 021B
        gbc.setState(0x2f43, 0x192e, 0x50b0, 0x5118, 0xb510, 0xbb67, 0x1, 0x1);
        gbc.writeMem(0x2f43, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x192e);
        EXPECT(gbc.pc(), 0x2f44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 021D
        gbc.setState(0xaf16, 0x1ff1, 0xb6b0, 0xa7b0, 0x36e7, 0xb2b4, 0x1, 0x1);
        gbc.writeMem(0xaf16, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1ff1);
        EXPECT(gbc.pc(), 0xaf17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf16), 0x97);
        // 97 021E
        gbc.setState(0xdac3, 0x6bdf, 0x20e0, 0xa78b, 0xa47b, 0x3501, 0x1, 0x1);
        gbc.writeMem(0xdac3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6bdf);
        EXPECT(gbc.pc(), 0xdac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac3), 0x97);
        // 97 021F
        gbc.setState(0xae6d, 0x7af0, 0x8640, 0x6352, 0xc97, 0xe559, 0x1, 0x1);
        gbc.writeMem(0xae6d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7af0);
        EXPECT(gbc.pc(), 0xae6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae6d), 0x97);
        // 97 0220
        gbc.setState(0x7e6f, 0xf944, 0x4010, 0x12cf, 0xe655, 0x3a01, 0x0, 0x1);
        gbc.writeMem(0x7e6f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf944);
        EXPECT(gbc.pc(), 0x7e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0222
        gbc.setState(0x20f1, 0xe12a, 0x1e90, 0xb5c0, 0xe759, 0xb254, 0x1, 0x0);
        gbc.writeMem(0x20f1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe12a);
        EXPECT(gbc.pc(), 0x20f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0223
        gbc.setState(0x5c0a, 0x841, 0x6620, 0xa353, 0xd4fc, 0x7277, 0x0, 0x1);
        gbc.writeMem(0x5c0a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x841);
        EXPECT(gbc.pc(), 0x5c0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0224
        gbc.setState(0x3702, 0xdf00, 0x9120, 0x8787, 0x1744, 0x1f44, 0x1, 0x0);
        gbc.writeMem(0x3702, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdf00);
        EXPECT(gbc.pc(), 0x3703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0225
        gbc.setState(0xa111, 0x18c4, 0x9550, 0x1212, 0x62ca, 0xcd5c, 0x1, 0x0);
        gbc.writeMem(0xa111, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x18c4);
        EXPECT(gbc.pc(), 0xa112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa111), 0x97);
        // 97 0226
        gbc.setState(0xd44d, 0x189a, 0x2840, 0x51bf, 0x9593, 0xb10b, 0x1, 0x0);
        gbc.writeMem(0xd44d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x189a);
        EXPECT(gbc.pc(), 0xd44e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd44d), 0x97);
        // 97 0227
        gbc.setState(0x40c9, 0x2819, 0xe640, 0xbd45, 0xb86c, 0x8de7, 0x1, 0x0);
        gbc.writeMem(0x40c9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2819);
        EXPECT(gbc.pc(), 0x40ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0228
        gbc.setState(0x11c, 0x8333, 0x39b0, 0xff9f, 0x27b7, 0x225e, 0x1, 0x0);
        gbc.writeMem(0x11c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8333);
        EXPECT(gbc.pc(), 0x11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0229
        gbc.setState(0xbd37, 0x9fb1, 0x7110, 0x6316, 0xe769, 0xc2c8, 0x0, 0x1);
        gbc.writeMem(0xbd37, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9fb1);
        EXPECT(gbc.pc(), 0xbd38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd37), 0x97);
        // 97 022A
        gbc.setState(0x4663, 0xa236, 0xdc70, 0x6331, 0xbf6, 0x5efa, 0x1, 0x1);
        gbc.writeMem(0x4663, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa236);
        EXPECT(gbc.pc(), 0x4664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 022B
        gbc.setState(0x335a, 0x4f8d, 0xa730, 0xf3f3, 0x4c4c, 0xf6fd, 0x0, 0x1);
        gbc.writeMem(0x335a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4f8d);
        EXPECT(gbc.pc(), 0x335b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 022C
        gbc.setState(0x4f62, 0xe886, 0x540, 0x7085, 0xc17a, 0x2c1b, 0x1, 0x0);
        gbc.writeMem(0x4f62, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe886);
        EXPECT(gbc.pc(), 0x4f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 022D
        gbc.setState(0xd3f7, 0xd3db, 0x1930, 0xa15, 0x73e7, 0x3f2e, 0x0, 0x1);
        gbc.writeMem(0xd3f7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd3db);
        EXPECT(gbc.pc(), 0xd3f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3f7), 0x97);
        // 97 022E
        gbc.setState(0xaf73, 0xbcf7, 0xf610, 0xea94, 0x9ccd, 0x24f0, 0x1, 0x1);
        gbc.writeMem(0xaf73, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbcf7);
        EXPECT(gbc.pc(), 0xaf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf73), 0x97);
        // 97 022F
        gbc.setState(0x2271, 0x8aff, 0x1980, 0x4ce4, 0xd34c, 0xb7c4, 0x1, 0x1);
        gbc.writeMem(0x2271, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8aff);
        EXPECT(gbc.pc(), 0x2272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0230
        gbc.setState(0x1e12, 0x9ae6, 0xc0b0, 0x8741, 0x584a, 0xcb2e, 0x1, 0x0);
        gbc.writeMem(0x1e12, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9ae6);
        EXPECT(gbc.pc(), 0x1e13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0231
        gbc.setState(0x2904, 0x62a1, 0x5df0, 0x9614, 0x7d08, 0x3a4e, 0x0, 0x1);
        gbc.writeMem(0x2904, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x62a1);
        EXPECT(gbc.pc(), 0x2905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0232
        gbc.setState(0xbe90, 0x4411, 0x5dd0, 0x53fb, 0x4e77, 0xebb1, 0x1, 0x0);
        gbc.writeMem(0xbe90, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4411);
        EXPECT(gbc.pc(), 0xbe91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe90), 0x97);
        // 97 0233
        gbc.setState(0x6714, 0x10ed, 0xd910, 0x6eb, 0x543e, 0xfcf1, 0x1, 0x1);
        gbc.writeMem(0x6714, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x10ed);
        EXPECT(gbc.pc(), 0x6715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0234
        gbc.setState(0xd955, 0x3308, 0x3bb0, 0xd460, 0x5984, 0xdead, 0x0, 0x0);
        gbc.writeMem(0xd955, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3308);
        EXPECT(gbc.pc(), 0xd956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd955), 0x97);
        // 97 0235
        gbc.setState(0x606f, 0x581c, 0x4650, 0x70a8, 0x8889, 0x1d56, 0x1, 0x1);
        gbc.writeMem(0x606f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x581c);
        EXPECT(gbc.pc(), 0x6070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0236
        gbc.setState(0x844e, 0x7a7b, 0x8010, 0xe322, 0xcba6, 0xa80, 0x1, 0x1);
        gbc.writeMem(0x844e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7a7b);
        EXPECT(gbc.pc(), 0x844f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x844e), 0x97);
        // 97 0237
        gbc.setState(0xa170, 0xc4c8, 0xeca0, 0xea1c, 0xc4ee, 0x228, 0x0, 0x1);
        gbc.writeMem(0xa170, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc4c8);
        EXPECT(gbc.pc(), 0xa171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa170), 0x97);
        // 97 0239
        gbc.setState(0x9e73, 0x146b, 0x7380, 0x1440, 0x2e80, 0x878d, 0x1, 0x0);
        gbc.writeMem(0x9e73, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x146b);
        EXPECT(gbc.pc(), 0x9e74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e73), 0x97);
        // 97 023A
        gbc.setState(0x73b5, 0xdf81, 0xa090, 0xe055, 0x3bd8, 0xc553, 0x1, 0x0);
        gbc.writeMem(0x73b5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdf81);
        EXPECT(gbc.pc(), 0x73b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 023B
        gbc.setState(0x3f2, 0x29ac, 0xcb80, 0xcc53, 0x568d, 0x7687, 0x0, 0x0);
        gbc.writeMem(0x3f2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x29ac);
        EXPECT(gbc.pc(), 0x3f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 023C
        gbc.setState(0x3144, 0x4e3d, 0x4fe0, 0x1c95, 0xd8bd, 0x3671, 0x1, 0x1);
        gbc.writeMem(0x3144, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4e3d);
        EXPECT(gbc.pc(), 0x3145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 023D
        gbc.setState(0x9961, 0xdbf5, 0xec60, 0xf583, 0x381b, 0x4210, 0x0, 0x0);
        gbc.writeMem(0x9961, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdbf5);
        EXPECT(gbc.pc(), 0x9962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9961), 0x97);
        // 97 023E
        gbc.setState(0x8fc2, 0x1800, 0x94b0, 0x71b2, 0xa777, 0xf411, 0x0, 0x1);
        gbc.writeMem(0x8fc2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1800);
        EXPECT(gbc.pc(), 0x8fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc2), 0x97);
        // 97 023F
        gbc.setState(0x3759, 0x8bac, 0x61b0, 0xae19, 0x3554, 0x1c08, 0x1, 0x1);
        gbc.writeMem(0x3759, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8bac);
        EXPECT(gbc.pc(), 0x375a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0240
        gbc.setState(0x43eb, 0x6608, 0xfee0, 0x3ab6, 0x7934, 0x9842, 0x0, 0x0);
        gbc.writeMem(0x43eb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6608);
        EXPECT(gbc.pc(), 0x43ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0241
        gbc.setState(0x83d2, 0xacfb, 0x1710, 0x2f9a, 0x5acb, 0x56cf, 0x1, 0x1);
        gbc.writeMem(0x83d2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xacfb);
        EXPECT(gbc.pc(), 0x83d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83d2), 0x97);
        // 97 0242
        gbc.setState(0x31aa, 0xd14, 0x3170, 0x1539, 0xa63a, 0x20f0, 0x1, 0x1);
        gbc.writeMem(0x31aa, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd14);
        EXPECT(gbc.pc(), 0x31ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0243
        gbc.setState(0x273b, 0xf58f, 0x2770, 0x3700, 0xea9a, 0x2ce7, 0x0, 0x0);
        gbc.writeMem(0x273b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf58f);
        EXPECT(gbc.pc(), 0x273c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0244
        gbc.setState(0x9e98, 0x6b54, 0x5ef0, 0xa532, 0x9b3e, 0x43, 0x0, 0x0);
        gbc.writeMem(0x9e98, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6b54);
        EXPECT(gbc.pc(), 0x9e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e98), 0x97);
        // 97 0245
        gbc.setState(0x596, 0xe16a, 0x9120, 0x47c9, 0xbc78, 0xf10e, 0x0, 0x1);
        gbc.writeMem(0x596, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe16a);
        EXPECT(gbc.pc(), 0x597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0246
        gbc.setState(0xa461, 0x1566, 0x8ba0, 0xcd60, 0x9351, 0xfcf6, 0x0, 0x1);
        gbc.writeMem(0xa461, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1566);
        EXPECT(gbc.pc(), 0xa462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa461), 0x97);
        // 97 0247
        gbc.setState(0x8b82, 0x879, 0x4180, 0x565e, 0xb781, 0xfe8d, 0x1, 0x1);
        gbc.writeMem(0x8b82, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x879);
        EXPECT(gbc.pc(), 0x8b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b82), 0x97);
        // 97 0248
        gbc.setState(0x7048, 0x6708, 0x7c50, 0x2ffd, 0x1ac1, 0x4811, 0x0, 0x0);
        gbc.writeMem(0x7048, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6708);
        EXPECT(gbc.pc(), 0x7049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0249
        gbc.setState(0x1035, 0x4dae, 0xb0e0, 0x9094, 0x46c5, 0x235c, 0x1, 0x0);
        gbc.writeMem(0x1035, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4dae);
        EXPECT(gbc.pc(), 0x1036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 024A
        gbc.setState(0x4e3a, 0x1f49, 0x2500, 0xc944, 0xef71, 0xe6b, 0x0, 0x1);
        gbc.writeMem(0x4e3a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1f49);
        EXPECT(gbc.pc(), 0x4e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 024B
        gbc.setState(0xd10d, 0x2693, 0x650, 0xb1ec, 0x7737, 0x1c79, 0x1, 0x1);
        gbc.writeMem(0xd10d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2693);
        EXPECT(gbc.pc(), 0xd10e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10d), 0x97);
        // 97 024C
        gbc.setState(0x790, 0xb949, 0xd040, 0x3f55, 0xb6ac, 0xb4ea, 0x1, 0x0);
        gbc.writeMem(0x790, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb949);
        EXPECT(gbc.pc(), 0x791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 024E
        gbc.setState(0x7ef5, 0xe104, 0xf310, 0x38, 0x264a, 0xb29d, 0x1, 0x0);
        gbc.writeMem(0x7ef5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe104);
        EXPECT(gbc.pc(), 0x7ef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0251
        gbc.setState(0x2938, 0x600f, 0x9ab0, 0xb7e3, 0x3dee, 0x6ff7, 0x1, 0x0);
        gbc.writeMem(0x2938, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x600f);
        EXPECT(gbc.pc(), 0x2939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0252
        gbc.setState(0xff6, 0x953a, 0x6ee0, 0x5601, 0x6387, 0x74a0, 0x0, 0x0);
        gbc.writeMem(0xff6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x953a);
        EXPECT(gbc.pc(), 0xff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0253
        gbc.setState(0x3461, 0x3d00, 0x1c60, 0x154e, 0x281e, 0xcfc1, 0x1, 0x0);
        gbc.writeMem(0x3461, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3d00);
        EXPECT(gbc.pc(), 0x3462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0254
        gbc.setState(0x7e35, 0xf8bf, 0xbf40, 0x4290, 0x59a8, 0x148d, 0x1, 0x1);
        gbc.writeMem(0x7e35, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf8bf);
        EXPECT(gbc.pc(), 0x7e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0255
        gbc.setState(0x3cde, 0xcfa2, 0x6600, 0x9e3d, 0x3704, 0xd9d2, 0x1, 0x0);
        gbc.writeMem(0x3cde, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcfa2);
        EXPECT(gbc.pc(), 0x3cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0256
        gbc.setState(0xe2ef, 0x6367, 0x8ba0, 0xa138, 0xd76e, 0xa97c, 0x0, 0x0);
        gbc.writeMem(0xe2ef, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6367);
        EXPECT(gbc.pc(), 0xe2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ef), 0x97);
        // 97 0257
        gbc.setState(0xecc7, 0x607e, 0xa7d0, 0xc6b9, 0x62cc, 0x91a0, 0x1, 0x0);
        gbc.writeMem(0xecc7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x607e);
        EXPECT(gbc.pc(), 0xecc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecc7), 0x97);
        // 97 0258
        gbc.setState(0x14cd, 0xe98a, 0x2f40, 0x7bfd, 0x318b, 0x22dd, 0x1, 0x0);
        gbc.writeMem(0x14cd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe98a);
        EXPECT(gbc.pc(), 0x14ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0259
        gbc.setState(0x2ff0, 0x1ab6, 0x63a0, 0x9682, 0x1321, 0xead9, 0x0, 0x1);
        gbc.writeMem(0x2ff0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1ab6);
        EXPECT(gbc.pc(), 0x2ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 025A
        gbc.setState(0xd057, 0x6360, 0xf490, 0x6506, 0x1a75, 0xc1c6, 0x0, 0x1);
        gbc.writeMem(0xd057, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6360);
        EXPECT(gbc.pc(), 0xd058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd057), 0x97);
        // 97 025B
        gbc.setState(0x80e0, 0xdf2c, 0xe7c0, 0x74ad, 0xa5b0, 0x6a1b, 0x0, 0x1);
        gbc.writeMem(0x80e0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdf2c);
        EXPECT(gbc.pc(), 0x80e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e0), 0x97);
        // 97 025C
        gbc.setState(0x634e, 0xcc14, 0x8c00, 0x7394, 0x358e, 0xef9a, 0x0, 0x0);
        gbc.writeMem(0x634e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xcc14);
        EXPECT(gbc.pc(), 0x634f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 025D
        gbc.setState(0xa451, 0x7463, 0x560, 0x3cd, 0x584b, 0xa8c0, 0x1, 0x1);
        gbc.writeMem(0xa451, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7463);
        EXPECT(gbc.pc(), 0xa452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa451), 0x97);
        // 97 025E
        gbc.setState(0x85a7, 0x15e4, 0x1f50, 0xa505, 0xdce, 0x395c, 0x0, 0x1);
        gbc.writeMem(0x85a7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x15e4);
        EXPECT(gbc.pc(), 0x85a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a7), 0x97);
        // 97 025F
        gbc.setState(0x1285, 0x4896, 0x3690, 0x756c, 0xd94b, 0x98d9, 0x0, 0x0);
        gbc.writeMem(0x1285, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4896);
        EXPECT(gbc.pc(), 0x1286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0260
        gbc.setState(0x7852, 0xd116, 0xc60, 0x34dc, 0xe01b, 0x7f4c, 0x1, 0x1);
        gbc.writeMem(0x7852, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd116);
        EXPECT(gbc.pc(), 0x7853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0261
        gbc.setState(0x1f7, 0xec89, 0x9400, 0xd69, 0x8b67, 0xf10, 0x0, 0x1);
        gbc.writeMem(0x1f7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xec89);
        EXPECT(gbc.pc(), 0x1f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0263
        gbc.setState(0x9a2b, 0x974b, 0xdaf0, 0x7837, 0xdf55, 0x67aa, 0x0, 0x0);
        gbc.writeMem(0x9a2b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x974b);
        EXPECT(gbc.pc(), 0x9a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2b), 0x97);
        // 97 0264
        gbc.setState(0x4743, 0x7ee9, 0x8950, 0xa126, 0xef2d, 0xe952, 0x0, 0x1);
        gbc.writeMem(0x4743, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7ee9);
        EXPECT(gbc.pc(), 0x4744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0265
        gbc.setState(0x9ee8, 0xe5ae, 0x3e20, 0x83cb, 0x84a7, 0x44b9, 0x1, 0x0);
        gbc.writeMem(0x9ee8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe5ae);
        EXPECT(gbc.pc(), 0x9ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee8), 0x97);
        // 97 0266
        gbc.setState(0x4269, 0x376b, 0x8ef0, 0x6461, 0x205f, 0x418b, 0x0, 0x1);
        gbc.writeMem(0x4269, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x376b);
        EXPECT(gbc.pc(), 0x426a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0267
        gbc.setState(0xc56e, 0xa32c, 0x8d30, 0x99a4, 0x61e4, 0xca3d, 0x0, 0x0);
        gbc.writeMem(0xc56e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa32c);
        EXPECT(gbc.pc(), 0xc56f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc56e), 0x97);
        // 97 0268
        gbc.setState(0xcf8d, 0x4582, 0xf20, 0x8c3, 0x9606, 0x8b31, 0x1, 0x0);
        gbc.writeMem(0xcf8d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4582);
        EXPECT(gbc.pc(), 0xcf8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8d), 0x97);
        // 97 0269
        gbc.setState(0xbf71, 0x4fd1, 0xaa00, 0x641d, 0x19eb, 0x5932, 0x1, 0x1);
        gbc.writeMem(0xbf71, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4fd1);
        EXPECT(gbc.pc(), 0xbf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf71), 0x97);
        // 97 026A
        gbc.setState(0x43c9, 0xd90e, 0x7bc0, 0x5538, 0x27d5, 0x1ce7, 0x1, 0x1);
        gbc.writeMem(0x43c9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd90e);
        EXPECT(gbc.pc(), 0x43ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 026B
        gbc.setState(0x81cf, 0xa8d1, 0x8d90, 0x5cc2, 0xb869, 0x71bc, 0x0, 0x0);
        gbc.writeMem(0x81cf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa8d1);
        EXPECT(gbc.pc(), 0x81d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81cf), 0x97);
        // 97 026C
        gbc.setState(0xc870, 0xb730, 0xa7f0, 0x7380, 0xbba1, 0x28ba, 0x0, 0x1);
        gbc.writeMem(0xc870, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb730);
        EXPECT(gbc.pc(), 0xc871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc870), 0x97);
        // 97 026D
        gbc.setState(0xdd93, 0x334f, 0x2910, 0x81d9, 0x814f, 0x7c7a, 0x1, 0x1);
        gbc.writeMem(0xdd93, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x334f);
        EXPECT(gbc.pc(), 0xdd94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd93), 0x97);
        // 97 026E
        gbc.setState(0x6ccd, 0x7f96, 0x20a0, 0xd78, 0x852b, 0xa228, 0x1, 0x0);
        gbc.writeMem(0x6ccd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7f96);
        EXPECT(gbc.pc(), 0x6cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 026F
        gbc.setState(0xbb85, 0x8bdf, 0x8070, 0x1e0b, 0x388c, 0xd535, 0x0, 0x0);
        gbc.writeMem(0xbb85, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8bdf);
        EXPECT(gbc.pc(), 0xbb86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb85), 0x97);
        // 97 0270
        gbc.setState(0xe43, 0x5fa, 0x1da0, 0xb285, 0x622b, 0x6c42, 0x1, 0x1);
        gbc.writeMem(0xe43, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5fa);
        EXPECT(gbc.pc(), 0xe44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0272
        gbc.setState(0xe16c, 0xcbf4, 0x72b0, 0x279d, 0xca33, 0x7d8c, 0x1, 0x0);
        gbc.writeMem(0xe16c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xcbf4);
        EXPECT(gbc.pc(), 0xe16d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16c), 0x97);
        // 97 0274
        gbc.setState(0x2079, 0xc620, 0xee90, 0x7ec2, 0x1033, 0x7a6d, 0x1, 0x1);
        gbc.writeMem(0x2079, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc620);
        EXPECT(gbc.pc(), 0x207a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0275
        gbc.setState(0x76cc, 0xd724, 0x7550, 0xf3e9, 0x5aba, 0xe2c6, 0x0, 0x1);
        gbc.writeMem(0x76cc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd724);
        EXPECT(gbc.pc(), 0x76cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0276
        gbc.setState(0x62a2, 0x7511, 0xc850, 0x1229, 0xeb21, 0x70e, 0x0, 0x0);
        gbc.writeMem(0x62a2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7511);
        EXPECT(gbc.pc(), 0x62a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0277
        gbc.setState(0x78ec, 0xa9b5, 0xce30, 0x9724, 0x823e, 0x422f, 0x1, 0x0);
        gbc.writeMem(0x78ec, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa9b5);
        EXPECT(gbc.pc(), 0x78ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0278
        gbc.setState(0x375d, 0x5825, 0x3910, 0x2160, 0x90d0, 0x9a91, 0x0, 0x1);
        gbc.writeMem(0x375d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5825);
        EXPECT(gbc.pc(), 0x375e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0279
        gbc.setState(0xbd19, 0x9fe0, 0x1c80, 0xbe63, 0xac47, 0x1320, 0x0, 0x1);
        gbc.writeMem(0xbd19, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9fe0);
        EXPECT(gbc.pc(), 0xbd1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd19), 0x97);
        // 97 027A
        gbc.setState(0x2b53, 0x35e5, 0x5210, 0xeaa4, 0x8093, 0x7b8d, 0x1, 0x0);
        gbc.writeMem(0x2b53, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x35e5);
        EXPECT(gbc.pc(), 0x2b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 027B
        gbc.setState(0x302a, 0x8000, 0xf320, 0x52cc, 0x1a94, 0xbae6, 0x1, 0x0);
        gbc.writeMem(0x302a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8000);
        EXPECT(gbc.pc(), 0x302b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 027D
        gbc.setState(0x9aaf, 0xcb8b, 0xbaa0, 0x2948, 0x8925, 0xf460, 0x1, 0x0);
        gbc.writeMem(0x9aaf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcb8b);
        EXPECT(gbc.pc(), 0x9ab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aaf), 0x97);
        // 97 027E
        gbc.setState(0x258e, 0xa88b, 0xf0d0, 0xbd85, 0x66ed, 0x5c77, 0x1, 0x0);
        gbc.writeMem(0x258e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa88b);
        EXPECT(gbc.pc(), 0x258f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 027F
        gbc.setState(0xe6f3, 0xf33a, 0x2630, 0x2993, 0xd47c, 0xda11, 0x1, 0x1);
        gbc.writeMem(0xe6f3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf33a);
        EXPECT(gbc.pc(), 0xe6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f3), 0x97);
        // 97 0280
        gbc.setState(0x1ffc, 0xd3ab, 0xf750, 0x30a2, 0xea61, 0xe604, 0x0, 0x0);
        gbc.writeMem(0x1ffc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd3ab);
        EXPECT(gbc.pc(), 0x1ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0281
        gbc.setState(0x55a1, 0xdd30, 0xc470, 0x7e6, 0x2435, 0x8e23, 0x1, 0x0);
        gbc.writeMem(0x55a1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdd30);
        EXPECT(gbc.pc(), 0x55a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0282
        gbc.setState(0x3db7, 0xd412, 0xfad0, 0xcfd5, 0x42ee, 0x2f7b, 0x0, 0x1);
        gbc.writeMem(0x3db7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd412);
        EXPECT(gbc.pc(), 0x3db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0283
        gbc.setState(0x299c, 0x4cda, 0xb140, 0x9510, 0xc8c1, 0xde21, 0x0, 0x1);
        gbc.writeMem(0x299c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4cda);
        EXPECT(gbc.pc(), 0x299d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0284
        gbc.setState(0xd269, 0xcd9b, 0xd2c0, 0x5074, 0xc86a, 0x94af, 0x0, 0x1);
        gbc.writeMem(0xd269, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xcd9b);
        EXPECT(gbc.pc(), 0xd26a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd269), 0x97);
        // 97 0285
        gbc.setState(0x705c, 0x82f7, 0x4b70, 0x5ca0, 0xd7eb, 0x9c88, 0x0, 0x1);
        gbc.writeMem(0x705c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x82f7);
        EXPECT(gbc.pc(), 0x705d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0286
        gbc.setState(0x4a78, 0x5130, 0x4f50, 0xc3b7, 0x8f2f, 0x97b0, 0x0, 0x0);
        gbc.writeMem(0x4a78, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5130);
        EXPECT(gbc.pc(), 0x4a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0287
        gbc.setState(0xe3f2, 0x4ef4, 0xc020, 0x6f21, 0x904c, 0x21bd, 0x1, 0x0);
        gbc.writeMem(0xe3f2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4ef4);
        EXPECT(gbc.pc(), 0xe3f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f2), 0x97);
        // 97 0288
        gbc.setState(0xbfb6, 0x6307, 0x4d40, 0x2178, 0x2c27, 0x5b1c, 0x1, 0x0);
        gbc.writeMem(0xbfb6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6307);
        EXPECT(gbc.pc(), 0xbfb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb6), 0x97);
        // 97 0289
        gbc.setState(0xc15e, 0x5e04, 0xa2a0, 0xe5c6, 0x3069, 0x2b16, 0x1, 0x0);
        gbc.writeMem(0xc15e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5e04);
        EXPECT(gbc.pc(), 0xc15f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc15e), 0x97);
        // 97 028A
        gbc.setState(0x79a6, 0xcc09, 0x74b0, 0x7737, 0x7938, 0x8787, 0x1, 0x0);
        gbc.writeMem(0x79a6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcc09);
        EXPECT(gbc.pc(), 0x79a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 028B
        gbc.setState(0xd090, 0xcec2, 0xa810, 0xd7a0, 0xcc71, 0xaba8, 0x1, 0x0);
        gbc.writeMem(0xd090, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xcec2);
        EXPECT(gbc.pc(), 0xd091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd090), 0x97);
        // 97 028C
        gbc.setState(0x5a0e, 0xc850, 0xa290, 0x4d32, 0xfb1e, 0xf34f, 0x0, 0x0);
        gbc.writeMem(0x5a0e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc850);
        EXPECT(gbc.pc(), 0x5a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 028D
        gbc.setState(0x36d7, 0xa717, 0x1d10, 0x498a, 0x4e2a, 0x7328, 0x0, 0x0);
        gbc.writeMem(0x36d7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa717);
        EXPECT(gbc.pc(), 0x36d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 028E
        gbc.setState(0x6794, 0x320a, 0xeb70, 0x246e, 0xa836, 0xd2ab, 0x1, 0x1);
        gbc.writeMem(0x6794, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x320a);
        EXPECT(gbc.pc(), 0x6795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 028F
        gbc.setState(0x3e1f, 0xf4ec, 0x9b80, 0xf23, 0x7a77, 0x3193, 0x0, 0x1);
        gbc.writeMem(0x3e1f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf4ec);
        EXPECT(gbc.pc(), 0x3e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0290
        gbc.setState(0x7708, 0x7f0a, 0xd8e0, 0x416c, 0xa4fb, 0x1725, 0x1, 0x1);
        gbc.writeMem(0x7708, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7f0a);
        EXPECT(gbc.pc(), 0x7709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0291
        gbc.setState(0x194a, 0xf60b, 0x8030, 0xad7d, 0xba39, 0x9993, 0x0, 0x1);
        gbc.writeMem(0x194a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf60b);
        EXPECT(gbc.pc(), 0x194b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0292
        gbc.setState(0xeb0b, 0x3681, 0xf180, 0xe61e, 0x158, 0x44ac, 0x0, 0x1);
        gbc.writeMem(0xeb0b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3681);
        EXPECT(gbc.pc(), 0xeb0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0b), 0x97);
        // 97 0293
        gbc.setState(0xe52b, 0x32c5, 0xd2b0, 0xfcc1, 0xe619, 0x8060, 0x0, 0x1);
        gbc.writeMem(0xe52b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x32c5);
        EXPECT(gbc.pc(), 0xe52c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe52b), 0x97);
        // 97 0294
        gbc.setState(0xce0f, 0xf77b, 0xd710, 0xbcb6, 0x7fd5, 0x9534, 0x1, 0x0);
        gbc.writeMem(0xce0f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf77b);
        EXPECT(gbc.pc(), 0xce10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce0f), 0x97);
        // 97 0295
        gbc.setState(0x7147, 0xb20, 0x3b0, 0x9e8e, 0x4fc8, 0x6e43, 0x0, 0x0);
        gbc.writeMem(0x7147, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb20);
        EXPECT(gbc.pc(), 0x7148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0296
        gbc.setState(0x3987, 0xdbec, 0x6a60, 0x9afb, 0x3112, 0x794f, 0x1, 0x0);
        gbc.writeMem(0x3987, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdbec);
        EXPECT(gbc.pc(), 0x3988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0297
        gbc.setState(0x9d8c, 0x768f, 0x2320, 0xe587, 0x3b6c, 0xe4d3, 0x1, 0x0);
        gbc.writeMem(0x9d8c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x768f);
        EXPECT(gbc.pc(), 0x9d8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d8c), 0x97);
        // 97 0298
        gbc.setState(0xb716, 0x8b2e, 0xe950, 0x9cee, 0x4c5b, 0x72f7, 0x0, 0x1);
        gbc.writeMem(0xb716, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8b2e);
        EXPECT(gbc.pc(), 0xb717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb716), 0x97);
        // 97 029A
        gbc.setState(0x408b, 0xeaab, 0x4fc0, 0xc421, 0xa501, 0xab7e, 0x1, 0x1);
        gbc.writeMem(0x408b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xeaab);
        EXPECT(gbc.pc(), 0x408c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 029C
        gbc.setState(0x8703, 0x7ada, 0xddc0, 0xdbe0, 0x5761, 0x6961, 0x0, 0x1);
        gbc.writeMem(0x8703, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7ada);
        EXPECT(gbc.pc(), 0x8704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8703), 0x97);
        // 97 029D
        gbc.setState(0x83a0, 0x671f, 0x9f60, 0x19b2, 0xb8df, 0x1a07, 0x0, 0x1);
        gbc.writeMem(0x83a0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x671f);
        EXPECT(gbc.pc(), 0x83a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a0), 0x97);
        // 97 029E
        gbc.setState(0xd6d, 0x9326, 0x5730, 0x365a, 0xb71f, 0xa937, 0x1, 0x0);
        gbc.writeMem(0xd6d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9326);
        EXPECT(gbc.pc(), 0xd6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 029F
        gbc.setState(0x85c, 0x7933, 0xdd40, 0xbf28, 0x7692, 0x3cae, 0x1, 0x0);
        gbc.writeMem(0x85c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7933);
        EXPECT(gbc.pc(), 0x85d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02A0
        gbc.setState(0x4728, 0xfa06, 0x8570, 0x1b9d, 0x87ad, 0xd91d, 0x0, 0x0);
        gbc.writeMem(0x4728, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfa06);
        EXPECT(gbc.pc(), 0x4729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02A1
        gbc.setState(0xcd3e, 0x8d3c, 0xb340, 0x2fe1, 0x8c79, 0xe9d2, 0x1, 0x0);
        gbc.writeMem(0xcd3e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8d3c);
        EXPECT(gbc.pc(), 0xcd3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3e), 0x97);
        // 97 02A2
        gbc.setState(0x2411, 0x1808, 0x7300, 0x7d2d, 0xc91d, 0x2158, 0x1, 0x1);
        gbc.writeMem(0x2411, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1808);
        EXPECT(gbc.pc(), 0x2412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02A3
        gbc.setState(0xc7d, 0x9be3, 0x52d0, 0xe6e9, 0xdf92, 0x678f, 0x1, 0x0);
        gbc.writeMem(0xc7d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9be3);
        EXPECT(gbc.pc(), 0xc7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02A4
        gbc.setState(0x471f, 0x440f, 0x9210, 0x71e1, 0x5ebf, 0xc7cb, 0x1, 0x0);
        gbc.writeMem(0x471f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x440f);
        EXPECT(gbc.pc(), 0x4720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02A5
        gbc.setState(0xba16, 0xc766, 0xfa60, 0x5fe5, 0xbe8e, 0x5bde, 0x0, 0x1);
        gbc.writeMem(0xba16, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc766);
        EXPECT(gbc.pc(), 0xba17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba16), 0x97);
        // 97 02A6
        gbc.setState(0x7fc3, 0x8c85, 0x8960, 0x4fa1, 0x55dd, 0x8cba, 0x1, 0x1);
        gbc.writeMem(0x7fc3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8c85);
        EXPECT(gbc.pc(), 0x7fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02A7
        gbc.setState(0x99ec, 0x9cae, 0x7110, 0xa037, 0x2d8e, 0x660e, 0x0, 0x0);
        gbc.writeMem(0x99ec, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9cae);
        EXPECT(gbc.pc(), 0x99ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ec), 0x97);
        // 97 02A8
        gbc.setState(0x83cb, 0x4769, 0xc9f0, 0xfa34, 0x8a03, 0x3e40, 0x0, 0x1);
        gbc.writeMem(0x83cb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4769);
        EXPECT(gbc.pc(), 0x83cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83cb), 0x97);
        // 97 02A9
        gbc.setState(0xb4dd, 0x8640, 0x4980, 0xbcf0, 0x3e1d, 0x830a, 0x0, 0x0);
        gbc.writeMem(0xb4dd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8640);
        EXPECT(gbc.pc(), 0xb4de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4dd), 0x97);
        // 97 02AA
        gbc.setState(0x7d40, 0x6016, 0x3df0, 0x5dca, 0xc448, 0xc607, 0x1, 0x1);
        gbc.writeMem(0x7d40, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6016);
        EXPECT(gbc.pc(), 0x7d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02AB
        gbc.setState(0x79b5, 0x309f, 0x7fc0, 0x64a3, 0xf2d1, 0xb6ba, 0x1, 0x0);
        gbc.writeMem(0x79b5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x309f);
        EXPECT(gbc.pc(), 0x79b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02AC
        gbc.setState(0x7a22, 0x26b5, 0x4330, 0x57ed, 0xf298, 0x9d92, 0x1, 0x1);
        gbc.writeMem(0x7a22, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x26b5);
        EXPECT(gbc.pc(), 0x7a23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02AD
        gbc.setState(0xe35d, 0x84ac, 0xcf60, 0x1036, 0xe95c, 0xe33e, 0x0, 0x1);
        gbc.writeMem(0xe35d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x84ac);
        EXPECT(gbc.pc(), 0xe35e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35d), 0x97);
        // 97 02AE
        gbc.setState(0x8aaa, 0x3b47, 0xf870, 0x6495, 0x78f2, 0x6b6d, 0x0, 0x1);
        gbc.writeMem(0x8aaa, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3b47);
        EXPECT(gbc.pc(), 0x8aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aaa), 0x97);
        // 97 02AF
        gbc.setState(0xdd32, 0xc70f, 0xac80, 0xd168, 0x1326, 0xd886, 0x0, 0x1);
        gbc.writeMem(0xdd32, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc70f);
        EXPECT(gbc.pc(), 0xdd33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd32), 0x97);
        // 97 02B0
        gbc.setState(0xc0c1, 0x4f8f, 0x3120, 0x9260, 0x8045, 0x730f, 0x1, 0x0);
        gbc.writeMem(0xc0c1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4f8f);
        EXPECT(gbc.pc(), 0xc0c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c1), 0x97);
        // 97 02B1
        gbc.setState(0x9fd9, 0x7831, 0xd1e0, 0x265c, 0x85d2, 0xe73f, 0x0, 0x1);
        gbc.writeMem(0x9fd9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7831);
        EXPECT(gbc.pc(), 0x9fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd9), 0x97);
        // 97 02B2
        gbc.setState(0xc1e8, 0x7f2b, 0x51f0, 0x460e, 0xddd8, 0x2f3e, 0x0, 0x1);
        gbc.writeMem(0xc1e8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7f2b);
        EXPECT(gbc.pc(), 0xc1e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e8), 0x97);
        // 97 02B4
        gbc.setState(0x3d5d, 0x279, 0x9070, 0xaa5, 0x90da, 0xa260, 0x1, 0x1);
        gbc.writeMem(0x3d5d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x279);
        EXPECT(gbc.pc(), 0x3d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02B5
        gbc.setState(0x6090, 0x601f, 0xebc0, 0x2b04, 0xa4f2, 0x4bb2, 0x1, 0x0);
        gbc.writeMem(0x6090, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x601f);
        EXPECT(gbc.pc(), 0x6091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02B6
        gbc.setState(0xb23b, 0xa257, 0x3b70, 0xfec1, 0x93ef, 0x7fdc, 0x0, 0x0);
        gbc.writeMem(0xb23b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa257);
        EXPECT(gbc.pc(), 0xb23c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb23b), 0x97);
        // 97 02B7
        gbc.setState(0xbb8a, 0xc3b4, 0xc510, 0x96b1, 0x1f92, 0xfd8d, 0x1, 0x1);
        gbc.writeMem(0xbb8a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc3b4);
        EXPECT(gbc.pc(), 0xbb8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8a), 0x97);
        // 97 02B8
        gbc.setState(0x9c49, 0x7898, 0x97e0, 0xd3a9, 0xd7e7, 0x6fc3, 0x1, 0x1);
        gbc.writeMem(0x9c49, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7898);
        EXPECT(gbc.pc(), 0x9c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c49), 0x97);
        // 97 02B9
        gbc.setState(0xb5d2, 0x3a1d, 0xb750, 0x3478, 0x268e, 0x3feb, 0x1, 0x1);
        gbc.writeMem(0xb5d2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3a1d);
        EXPECT(gbc.pc(), 0xb5d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5d2), 0x97);
        // 97 02BA
        gbc.setState(0xb4d5, 0x3319, 0xea90, 0xf4d0, 0xee53, 0x27db, 0x0, 0x1);
        gbc.writeMem(0xb4d5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3319);
        EXPECT(gbc.pc(), 0xb4d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4d5), 0x97);
        // 97 02BB
        gbc.setState(0x2469, 0x76d2, 0x470, 0x3805, 0x42d7, 0x27f5, 0x1, 0x1);
        gbc.writeMem(0x2469, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x76d2);
        EXPECT(gbc.pc(), 0x246a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02BC
        gbc.setState(0xaacd, 0xf4b5, 0xffc0, 0x9252, 0x8220, 0xd4ba, 0x1, 0x0);
        gbc.writeMem(0xaacd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf4b5);
        EXPECT(gbc.pc(), 0xaace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaacd), 0x97);
        // 97 02BD
        gbc.setState(0xce39, 0x2bd8, 0xe190, 0xc0cd, 0xbd14, 0x6fd, 0x0, 0x0);
        gbc.writeMem(0xce39, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2bd8);
        EXPECT(gbc.pc(), 0xce3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce39), 0x97);
        // 97 02BE
        gbc.setState(0xb4e6, 0x176d, 0xb080, 0xfe1d, 0x2321, 0xfaf, 0x0, 0x0);
        gbc.writeMem(0xb4e6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x176d);
        EXPECT(gbc.pc(), 0xb4e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e6), 0x97);
        // 97 02BF
        gbc.setState(0x9506, 0x2ddf, 0xd530, 0x75e5, 0x3e64, 0x661b, 0x1, 0x0);
        gbc.writeMem(0x9506, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2ddf);
        EXPECT(gbc.pc(), 0x9507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9506), 0x97);
        // 97 02C0
        gbc.setState(0xeddc, 0x6a74, 0xfb00, 0xc75a, 0x6db5, 0x2b5d, 0x1, 0x0);
        gbc.writeMem(0xeddc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6a74);
        EXPECT(gbc.pc(), 0xeddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeddc), 0x97);
        // 97 02C1
        gbc.setState(0xd2de, 0x80c, 0x6e10, 0x57a2, 0x6863, 0xa6ca, 0x1, 0x1);
        gbc.writeMem(0xd2de, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x80c);
        EXPECT(gbc.pc(), 0xd2df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2de), 0x97);
        // 97 02C2
        gbc.setState(0xb7fe, 0x3b55, 0x5480, 0xe914, 0x58e4, 0x1bfe, 0x1, 0x0);
        gbc.writeMem(0xb7fe, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3b55);
        EXPECT(gbc.pc(), 0xb7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7fe), 0x97);
        // 97 02C3
        gbc.setState(0x66cf, 0xac0a, 0xc4c0, 0x10c7, 0x4cf, 0xb478, 0x0, 0x0);
        gbc.writeMem(0x66cf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xac0a);
        EXPECT(gbc.pc(), 0x66d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02C4
        gbc.setState(0x6e57, 0x616, 0xeca0, 0x88c5, 0x2eb1, 0x4a64, 0x1, 0x0);
        gbc.writeMem(0x6e57, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x616);
        EXPECT(gbc.pc(), 0x6e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02C5
        gbc.setState(0x237a, 0x803c, 0x7ae0, 0xe7fa, 0x2a2, 0x644d, 0x0, 0x1);
        gbc.writeMem(0x237a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x803c);
        EXPECT(gbc.pc(), 0x237b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02C6
        gbc.setState(0xe274, 0x5c4a, 0xbef0, 0x53d6, 0xd740, 0x3085, 0x0, 0x1);
        gbc.writeMem(0xe274, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5c4a);
        EXPECT(gbc.pc(), 0xe275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe274), 0x97);
        // 97 02C7
        gbc.setState(0x9138, 0x5ae9, 0x45a0, 0xfce9, 0x91a4, 0xa366, 0x0, 0x0);
        gbc.writeMem(0x9138, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5ae9);
        EXPECT(gbc.pc(), 0x9139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9138), 0x97);
        // 97 02C8
        gbc.setState(0x2b64, 0x15ba, 0x7b90, 0x5983, 0xa9b0, 0x60b8, 0x1, 0x0);
        gbc.writeMem(0x2b64, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x15ba);
        EXPECT(gbc.pc(), 0x2b65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02C9
        gbc.setState(0xc25c, 0x5610, 0xd290, 0xa4d3, 0xbb3b, 0xead5, 0x0, 0x0);
        gbc.writeMem(0xc25c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5610);
        EXPECT(gbc.pc(), 0xc25d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc25c), 0x97);
        // 97 02CA
        gbc.setState(0x8f9d, 0x6660, 0xf900, 0xc484, 0x4001, 0xc330, 0x1, 0x1);
        gbc.writeMem(0x8f9d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6660);
        EXPECT(gbc.pc(), 0x8f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f9d), 0x97);
        // 97 02CB
        gbc.setState(0x2e5a, 0xcbd1, 0x50f0, 0x8126, 0x41c8, 0x9323, 0x0, 0x0);
        gbc.writeMem(0x2e5a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcbd1);
        EXPECT(gbc.pc(), 0x2e5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02CC
        gbc.setState(0x5b4d, 0xa9d9, 0xc790, 0xbecc, 0x24f8, 0x5ab3, 0x0, 0x1);
        gbc.writeMem(0x5b4d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa9d9);
        EXPECT(gbc.pc(), 0x5b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02CD
        gbc.setState(0xef86, 0x4c6f, 0x280, 0x5e3c, 0x8be3, 0xc013, 0x1, 0x1);
        gbc.writeMem(0xef86, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4c6f);
        EXPECT(gbc.pc(), 0xef87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef86), 0x97);
        // 97 02CE
        gbc.setState(0x3b94, 0x29f0, 0x97a0, 0x7be0, 0xd744, 0x7c0e, 0x1, 0x0);
        gbc.writeMem(0x3b94, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x29f0);
        EXPECT(gbc.pc(), 0x3b95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02CF
        gbc.setState(0x7304, 0x42d8, 0x2b30, 0xf511, 0xbbbb, 0x3721, 0x1, 0x0);
        gbc.writeMem(0x7304, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x42d8);
        EXPECT(gbc.pc(), 0x7305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02D1
        gbc.setState(0xc41, 0xf67c, 0xd170, 0x4cec, 0x24b0, 0xa309, 0x0, 0x1);
        gbc.writeMem(0xc41, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf67c);
        EXPECT(gbc.pc(), 0xc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02D2
        gbc.setState(0x8b9c, 0x7c1, 0x70b0, 0xf47b, 0x30e0, 0x6181, 0x0, 0x0);
        gbc.writeMem(0x8b9c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7c1);
        EXPECT(gbc.pc(), 0x8b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9c), 0x97);
        // 97 02D3
        gbc.setState(0xb0b3, 0xd20d, 0x8a30, 0x75aa, 0xcd59, 0x49ec, 0x0, 0x1);
        gbc.writeMem(0xb0b3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd20d);
        EXPECT(gbc.pc(), 0xb0b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0b3), 0x97);
        // 97 02D5
        gbc.setState(0x706, 0x550d, 0xa740, 0x4fc0, 0x43d7, 0x24f2, 0x1, 0x0);
        gbc.writeMem(0x706, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x550d);
        EXPECT(gbc.pc(), 0x707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02D6
        gbc.setState(0x3fc, 0x59f2, 0xda70, 0xf664, 0x9cd9, 0x5278, 0x1, 0x0);
        gbc.writeMem(0x3fc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x59f2);
        EXPECT(gbc.pc(), 0x3fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02D7
        gbc.setState(0x4c1e, 0xb142, 0xd850, 0xe068, 0x655d, 0xe50d, 0x1, 0x0);
        gbc.writeMem(0x4c1e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb142);
        EXPECT(gbc.pc(), 0x4c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02D8
        gbc.setState(0xe8b8, 0x7143, 0xe020, 0xb34, 0xd245, 0x3576, 0x1, 0x1);
        gbc.writeMem(0xe8b8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7143);
        EXPECT(gbc.pc(), 0xe8b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b8), 0x97);
        // 97 02D9
        gbc.setState(0x7784, 0x7741, 0xe900, 0x3d30, 0x8b2f, 0x6de6, 0x0, 0x0);
        gbc.writeMem(0x7784, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7741);
        EXPECT(gbc.pc(), 0x7785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02DA
        gbc.setState(0x450c, 0x9e31, 0xa1a0, 0xf123, 0x3a4f, 0xa72c, 0x0, 0x0);
        gbc.writeMem(0x450c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9e31);
        EXPECT(gbc.pc(), 0x450d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02DB
        gbc.setState(0x4599, 0xa6c5, 0xdf50, 0x86a2, 0x1d59, 0xbeb, 0x0, 0x1);
        gbc.writeMem(0x4599, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa6c5);
        EXPECT(gbc.pc(), 0x459a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02DC
        gbc.setState(0x6e99, 0x7e35, 0x59b0, 0x4292, 0xb761, 0x54c, 0x0, 0x1);
        gbc.writeMem(0x6e99, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7e35);
        EXPECT(gbc.pc(), 0x6e9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02DD
        gbc.setState(0xc748, 0x4935, 0x69e0, 0x782c, 0xc4b8, 0xc124, 0x1, 0x0);
        gbc.writeMem(0xc748, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4935);
        EXPECT(gbc.pc(), 0xc749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc748), 0x97);
        // 97 02DE
        gbc.setState(0x63cd, 0x915a, 0x46b0, 0xb1e, 0x85fc, 0xf702, 0x1, 0x1);
        gbc.writeMem(0x63cd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x915a);
        EXPECT(gbc.pc(), 0x63ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02DF
        gbc.setState(0x2108, 0x51ad, 0xaf10, 0x135c, 0xcf92, 0x2bc, 0x0, 0x1);
        gbc.writeMem(0x2108, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x51ad);
        EXPECT(gbc.pc(), 0x2109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02E0
        gbc.setState(0xab41, 0x2631, 0x2bb0, 0xcfac, 0x2a45, 0xc06d, 0x0, 0x1);
        gbc.writeMem(0xab41, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2631);
        EXPECT(gbc.pc(), 0xab42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab41), 0x97);
        // 97 02E2
        gbc.setState(0xaaf6, 0xf362, 0x3a10, 0x2051, 0xbc39, 0x9e5d, 0x1, 0x1);
        gbc.writeMem(0xaaf6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf362);
        EXPECT(gbc.pc(), 0xaaf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf6), 0x97);
        // 97 02E3
        gbc.setState(0xbc67, 0x71d6, 0x2480, 0xbe15, 0x4e7a, 0xc6a, 0x1, 0x1);
        gbc.writeMem(0xbc67, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x71d6);
        EXPECT(gbc.pc(), 0xbc68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc67), 0x97);
        // 97 02E4
        gbc.setState(0xee95, 0x35c1, 0x4f60, 0x8316, 0xad4, 0x6a67, 0x1, 0x1);
        gbc.writeMem(0xee95, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x35c1);
        EXPECT(gbc.pc(), 0xee96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee95), 0x97);
        // 97 02E5
        gbc.setState(0x7ae3, 0xb55d, 0xf690, 0x5625, 0x17f0, 0x6423, 0x0, 0x0);
        gbc.writeMem(0x7ae3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb55d);
        EXPECT(gbc.pc(), 0x7ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02E6
        gbc.setState(0xe1b4, 0xa1be, 0x8910, 0xcc43, 0x8cb6, 0x23cb, 0x0, 0x0);
        gbc.writeMem(0xe1b4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa1be);
        EXPECT(gbc.pc(), 0xe1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b4), 0x97);
        // 97 02E7
        gbc.setState(0x5b52, 0x5b11, 0x97d0, 0xf55c, 0x728, 0x6734, 0x0, 0x0);
        gbc.writeMem(0x5b52, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5b11);
        EXPECT(gbc.pc(), 0x5b53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02E8
        gbc.setState(0xcb85, 0x6947, 0xc710, 0x1e09, 0x1a1f, 0x409, 0x0, 0x0);
        gbc.writeMem(0xcb85, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6947);
        EXPECT(gbc.pc(), 0xcb86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb85), 0x97);
        // 97 02E9
        gbc.setState(0x4d90, 0x1c6d, 0xdbd0, 0x32ed, 0xb217, 0x6c3b, 0x0, 0x0);
        gbc.writeMem(0x4d90, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1c6d);
        EXPECT(gbc.pc(), 0x4d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02EB
        gbc.setState(0x6291, 0xf641, 0x4040, 0xd90f, 0xfd01, 0xca66, 0x1, 0x1);
        gbc.writeMem(0x6291, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf641);
        EXPECT(gbc.pc(), 0x6292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02EC
        gbc.setState(0x79aa, 0x32c1, 0x50, 0xa73b, 0x8f96, 0x756e, 0x0, 0x1);
        gbc.writeMem(0x79aa, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x32c1);
        EXPECT(gbc.pc(), 0x79ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02ED
        gbc.setState(0x5b89, 0x7c4b, 0x2c80, 0x3f1d, 0x15bb, 0xe196, 0x1, 0x1);
        gbc.writeMem(0x5b89, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7c4b);
        EXPECT(gbc.pc(), 0x5b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02EE
        gbc.setState(0x8bb4, 0x5e09, 0xc7d0, 0x44ae, 0x698, 0x8378, 0x1, 0x0);
        gbc.writeMem(0x8bb4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5e09);
        EXPECT(gbc.pc(), 0x8bb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb4), 0x97);
        // 97 02EF
        gbc.setState(0xe97b, 0x6c42, 0x5ff0, 0x2a2a, 0xcc51, 0x7427, 0x1, 0x1);
        gbc.writeMem(0xe97b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6c42);
        EXPECT(gbc.pc(), 0xe97c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe97b), 0x97);
        // 97 02F0
        gbc.setState(0xce9c, 0xd74, 0x97c0, 0xcbc4, 0x36e2, 0x3a81, 0x0, 0x0);
        gbc.writeMem(0xce9c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd74);
        EXPECT(gbc.pc(), 0xce9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce9c), 0x97);
        // 97 02F1
        gbc.setState(0x844a, 0x8e9b, 0xb130, 0xafbe, 0x542f, 0xa0ee, 0x0, 0x1);
        gbc.writeMem(0x844a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8e9b);
        EXPECT(gbc.pc(), 0x844b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x844a), 0x97);
        // 97 02F2
        gbc.setState(0xfae, 0xebcc, 0xf600, 0xa941, 0xa349, 0x1dc3, 0x1, 0x1);
        gbc.writeMem(0xfae, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xebcc);
        EXPECT(gbc.pc(), 0xfaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02F3
        gbc.setState(0x1407, 0xf909, 0x5590, 0x1f9a, 0xb57f, 0x122, 0x1, 0x0);
        gbc.writeMem(0x1407, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf909);
        EXPECT(gbc.pc(), 0x1408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02F4
        gbc.setState(0x2524, 0x4071, 0x1260, 0x480e, 0xb1c5, 0xb8a6, 0x1, 0x1);
        gbc.writeMem(0x2524, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4071);
        EXPECT(gbc.pc(), 0x2525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02F6
        gbc.setState(0x9263, 0x380f, 0x6060, 0xd2e2, 0xa62c, 0xe157, 0x1, 0x0);
        gbc.writeMem(0x9263, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x380f);
        EXPECT(gbc.pc(), 0x9264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9263), 0x97);
        // 97 02F7
        gbc.setState(0x63f9, 0x6cab, 0x5d00, 0x221a, 0x7aae, 0x4cdc, 0x1, 0x1);
        gbc.writeMem(0x63f9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6cab);
        EXPECT(gbc.pc(), 0x63fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02F8
        gbc.setState(0xad4d, 0xf622, 0x4430, 0x8eb3, 0x46a7, 0x123e, 0x1, 0x0);
        gbc.writeMem(0xad4d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf622);
        EXPECT(gbc.pc(), 0xad4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad4d), 0x97);
        // 97 02F9
        gbc.setState(0x4e4b, 0x74ea, 0x8550, 0x2474, 0x3b81, 0xf0f5, 0x0, 0x1);
        gbc.writeMem(0x4e4b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x74ea);
        EXPECT(gbc.pc(), 0x4e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02FA
        gbc.setState(0x6838, 0x2ce7, 0x7850, 0xccde, 0x84a9, 0x3f21, 0x0, 0x0);
        gbc.writeMem(0x6838, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2ce7);
        EXPECT(gbc.pc(), 0x6839);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02FB
        gbc.setState(0x12db, 0x39fd, 0x50b0, 0x75d6, 0x4534, 0xb702, 0x0, 0x1);
        gbc.writeMem(0x12db, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x39fd);
        EXPECT(gbc.pc(), 0x12dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02FC
        gbc.setState(0xe4f6, 0x7b73, 0x36f0, 0x8fd4, 0x9b0d, 0xa38d, 0x1, 0x0);
        gbc.writeMem(0xe4f6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7b73);
        EXPECT(gbc.pc(), 0xe4f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f6), 0x97);
        // 97 02FD
        gbc.setState(0xb604, 0x5410, 0x94f0, 0x8a3a, 0x18c6, 0xc1da, 0x1, 0x0);
        gbc.writeMem(0xb604, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5410);
        EXPECT(gbc.pc(), 0xb605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb604), 0x97);
        // 97 02FE
        gbc.setState(0x4150, 0xeff, 0x72d0, 0x3d3d, 0x28c9, 0x8b5, 0x1, 0x0);
        gbc.writeMem(0x4150, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xeff);
        EXPECT(gbc.pc(), 0x4151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 02FF
        gbc.setState(0x1622, 0xcc6d, 0xc6f0, 0x78cc, 0xf430, 0x5877, 0x0, 0x0);
        gbc.writeMem(0x1622, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xcc6d);
        EXPECT(gbc.pc(), 0x1623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0300
        gbc.setState(0xa9ee, 0x5bf1, 0x2bf0, 0xa2f8, 0x31fc, 0xffed, 0x0, 0x1);
        gbc.writeMem(0xa9ee, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5bf1);
        EXPECT(gbc.pc(), 0xa9ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ee), 0x97);
        // 97 0301
        gbc.setState(0x61b8, 0x530a, 0x3c70, 0x3fd3, 0xef7a, 0xb858, 0x0, 0x1);
        gbc.writeMem(0x61b8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x530a);
        EXPECT(gbc.pc(), 0x61b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0302
        gbc.setState(0x4c4a, 0xa317, 0x630, 0xe34c, 0x938, 0x9c94, 0x1, 0x0);
        gbc.writeMem(0x4c4a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa317);
        EXPECT(gbc.pc(), 0x4c4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0303
        gbc.setState(0x85c1, 0x9c26, 0x3a30, 0x28eb, 0x2152, 0x579e, 0x0, 0x1);
        gbc.writeMem(0x85c1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9c26);
        EXPECT(gbc.pc(), 0x85c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c1), 0x97);
        // 97 0304
        gbc.setState(0x32f2, 0x548f, 0x6b90, 0xee64, 0x3e70, 0x8cbd, 0x0, 0x1);
        gbc.writeMem(0x32f2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x548f);
        EXPECT(gbc.pc(), 0x32f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0305
        gbc.setState(0x5ed5, 0xe8df, 0x83e0, 0x9292, 0xec85, 0xe887, 0x0, 0x0);
        gbc.writeMem(0x5ed5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe8df);
        EXPECT(gbc.pc(), 0x5ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0306
        gbc.setState(0x7c75, 0x3cd3, 0x5df0, 0x7015, 0xb06b, 0x43d1, 0x1, 0x0);
        gbc.writeMem(0x7c75, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3cd3);
        EXPECT(gbc.pc(), 0x7c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0307
        gbc.setState(0xec5e, 0x73d5, 0x8690, 0x12ef, 0x2c7b, 0x1339, 0x0, 0x1);
        gbc.writeMem(0xec5e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x73d5);
        EXPECT(gbc.pc(), 0xec5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec5e), 0x97);
        // 97 0308
        gbc.setState(0x5752, 0x4473, 0x410, 0x8a7d, 0x7ddf, 0x842, 0x1, 0x1);
        gbc.writeMem(0x5752, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4473);
        EXPECT(gbc.pc(), 0x5753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0309
        gbc.setState(0x8d0e, 0x5a87, 0x2e80, 0x7482, 0x3d63, 0xb7c3, 0x1, 0x1);
        gbc.writeMem(0x8d0e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5a87);
        EXPECT(gbc.pc(), 0x8d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0e), 0x97);
        // 97 030A
        gbc.setState(0x839d, 0x37f7, 0xb750, 0x2f15, 0x4e9b, 0xce87, 0x1, 0x1);
        gbc.writeMem(0x839d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x37f7);
        EXPECT(gbc.pc(), 0x839e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x839d), 0x97);
        // 97 030C
        gbc.setState(0x35fa, 0x8210, 0xaab0, 0x90a, 0x5f73, 0x733, 0x1, 0x0);
        gbc.writeMem(0x35fa, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8210);
        EXPECT(gbc.pc(), 0x35fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 030D
        gbc.setState(0x6af7, 0xc85d, 0x5a0, 0xe1e2, 0xcd8, 0x62c3, 0x1, 0x0);
        gbc.writeMem(0x6af7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc85d);
        EXPECT(gbc.pc(), 0x6af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 030E
        gbc.setState(0x3079, 0xe7b1, 0xd9e0, 0xc8fc, 0x3809, 0xe351, 0x1, 0x0);
        gbc.writeMem(0x3079, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe7b1);
        EXPECT(gbc.pc(), 0x307a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 030F
        gbc.setState(0x67fb, 0xc784, 0xb210, 0x7fed, 0x44a2, 0x6af9, 0x0, 0x0);
        gbc.writeMem(0x67fb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc784);
        EXPECT(gbc.pc(), 0x67fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0310
        gbc.setState(0x190a, 0x9b81, 0x8b0, 0x28c6, 0xb3ee, 0x92ff, 0x1, 0x1);
        gbc.writeMem(0x190a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9b81);
        EXPECT(gbc.pc(), 0x190b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0311
        gbc.setState(0x8bed, 0x8a, 0xd110, 0x8173, 0xe76f, 0x76bf, 0x0, 0x0);
        gbc.writeMem(0x8bed, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8a);
        EXPECT(gbc.pc(), 0x8bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bed), 0x97);
        // 97 0312
        gbc.setState(0xc99e, 0x1cc, 0xa7d0, 0xdbf9, 0x461f, 0x6afe, 0x1, 0x0);
        gbc.writeMem(0xc99e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1cc);
        EXPECT(gbc.pc(), 0xc99f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99e), 0x97);
        // 97 0313
        gbc.setState(0x8924, 0xf38d, 0xa130, 0x6b9e, 0xa2d3, 0xa557, 0x0, 0x1);
        gbc.writeMem(0x8924, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf38d);
        EXPECT(gbc.pc(), 0x8925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8924), 0x97);
        // 97 0314
        gbc.setState(0x9bf6, 0x4094, 0xc060, 0xfbfa, 0xd2e0, 0x9af4, 0x0, 0x1);
        gbc.writeMem(0x9bf6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4094);
        EXPECT(gbc.pc(), 0x9bf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf6), 0x97);
        // 97 0315
        gbc.setState(0xc10a, 0xca5, 0xb330, 0xdaf9, 0xab45, 0x98d0, 0x0, 0x0);
        gbc.writeMem(0xc10a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xca5);
        EXPECT(gbc.pc(), 0xc10b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc10a), 0x97);
        // 97 0316
        gbc.setState(0x761a, 0x970d, 0x7c40, 0xf2ef, 0xe743, 0x39a7, 0x1, 0x0);
        gbc.writeMem(0x761a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x970d);
        EXPECT(gbc.pc(), 0x761b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0317
        gbc.setState(0xe74d, 0xe24, 0x2a60, 0x1e4, 0x1d1a, 0x2b67, 0x1, 0x0);
        gbc.writeMem(0xe74d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe24);
        EXPECT(gbc.pc(), 0xe74e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe74d), 0x97);
        // 97 0319
        gbc.setState(0x6c5f, 0xf7c5, 0xf730, 0x1f15, 0x5d9c, 0xd586, 0x0, 0x0);
        gbc.writeMem(0x6c5f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf7c5);
        EXPECT(gbc.pc(), 0x6c60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 031A
        gbc.setState(0xdae1, 0xffab, 0x1400, 0x850f, 0xd510, 0xd751, 0x0, 0x1);
        gbc.writeMem(0xdae1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xffab);
        EXPECT(gbc.pc(), 0xdae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae1), 0x97);
        // 97 031C
        gbc.setState(0x8739, 0xe221, 0xb040, 0x784b, 0x1930, 0xeb4f, 0x1, 0x0);
        gbc.writeMem(0x8739, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe221);
        EXPECT(gbc.pc(), 0x873a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8739), 0x97);
        // 97 031D
        gbc.setState(0xa9bb, 0x8213, 0x13d0, 0xd909, 0xed2c, 0xfd98, 0x0, 0x1);
        gbc.writeMem(0xa9bb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8213);
        EXPECT(gbc.pc(), 0xa9bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9bb), 0x97);
        // 97 031E
        gbc.setState(0xb7e1, 0x2918, 0xf900, 0xb8dd, 0x4776, 0xada4, 0x0, 0x0);
        gbc.writeMem(0xb7e1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2918);
        EXPECT(gbc.pc(), 0xb7e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7e1), 0x97);
        // 97 031F
        gbc.setState(0xa46f, 0xb422, 0x83b0, 0x8a7e, 0x57a5, 0x95e2, 0x0, 0x1);
        gbc.writeMem(0xa46f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb422);
        EXPECT(gbc.pc(), 0xa470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa46f), 0x97);
        // 97 0320
        gbc.setState(0x8cc8, 0x7e89, 0x3c90, 0x4a08, 0x1765, 0x4718, 0x0, 0x1);
        gbc.writeMem(0x8cc8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7e89);
        EXPECT(gbc.pc(), 0x8cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc8), 0x97);
        // 97 0322
        gbc.setState(0xe513, 0x90ed, 0x3440, 0x847b, 0x53a2, 0x5901, 0x1, 0x0);
        gbc.writeMem(0xe513, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x90ed);
        EXPECT(gbc.pc(), 0xe514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe513), 0x97);
        // 97 0323
        gbc.setState(0xb2da, 0x86e, 0x23d0, 0x50f5, 0x34e3, 0x554a, 0x1, 0x1);
        gbc.writeMem(0xb2da, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x86e);
        EXPECT(gbc.pc(), 0xb2db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2da), 0x97);
        // 97 0324
        gbc.setState(0x85f2, 0x8baf, 0xdc50, 0x3a22, 0x467e, 0xecf5, 0x0, 0x0);
        gbc.writeMem(0x85f2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8baf);
        EXPECT(gbc.pc(), 0x85f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85f2), 0x97);
        // 97 0325
        gbc.setState(0x8f, 0x71e8, 0x4e0, 0xdb6c, 0x5ca2, 0x56c, 0x1, 0x0);
        gbc.writeMem(0x8f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x71e8);
        EXPECT(gbc.pc(), 0x90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0326
        gbc.setState(0xb530, 0xad8e, 0xf590, 0x88b7, 0xb0b, 0x2aec, 0x1, 0x1);
        gbc.writeMem(0xb530, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xad8e);
        EXPECT(gbc.pc(), 0xb531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb530), 0x97);
        // 97 0327
        gbc.setState(0x43a4, 0x5243, 0xda60, 0x59e4, 0x234e, 0xa336, 0x1, 0x0);
        gbc.writeMem(0x43a4, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5243);
        EXPECT(gbc.pc(), 0x43a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0328
        gbc.setState(0xaa7e, 0x63d5, 0xe740, 0x604, 0xb5dc, 0xebe9, 0x0, 0x1);
        gbc.writeMem(0xaa7e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x63d5);
        EXPECT(gbc.pc(), 0xaa7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa7e), 0x97);
        // 97 0329
        gbc.setState(0xc82e, 0x93a6, 0xed80, 0xb003, 0xd229, 0x26c1, 0x0, 0x1);
        gbc.writeMem(0xc82e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x93a6);
        EXPECT(gbc.pc(), 0xc82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc82e), 0x97);
        // 97 032A
        gbc.setState(0xb510, 0xbe2e, 0x4bd0, 0x2b0d, 0x4306, 0x6ed1, 0x1, 0x0);
        gbc.writeMem(0xb510, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbe2e);
        EXPECT(gbc.pc(), 0xb511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb510), 0x97);
        // 97 032C
        gbc.setState(0xef07, 0x7ec4, 0xdc60, 0xe807, 0x7284, 0xe6e9, 0x1, 0x1);
        gbc.writeMem(0xef07, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7ec4);
        EXPECT(gbc.pc(), 0xef08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef07), 0x97);
        // 97 032D
        gbc.setState(0xe4f5, 0x79a2, 0xc90, 0xbc9d, 0x1f8e, 0xf37, 0x0, 0x0);
        gbc.writeMem(0xe4f5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x79a2);
        EXPECT(gbc.pc(), 0xe4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f5), 0x97);
        // 97 032E
        gbc.setState(0x380d, 0xc947, 0xcd50, 0x6716, 0xdd86, 0x5fa7, 0x1, 0x0);
        gbc.writeMem(0x380d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc947);
        EXPECT(gbc.pc(), 0x380e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 032F
        gbc.setState(0x3dd1, 0xd24c, 0xd3a0, 0x1f00, 0x8a8, 0x35e2, 0x1, 0x0);
        gbc.writeMem(0x3dd1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd24c);
        EXPECT(gbc.pc(), 0x3dd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0331
        gbc.setState(0xa6fa, 0x53aa, 0x72e0, 0x9374, 0x5d0c, 0xe717, 0x0, 0x1);
        gbc.writeMem(0xa6fa, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x53aa);
        EXPECT(gbc.pc(), 0xa6fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6fa), 0x97);
        // 97 0332
        gbc.setState(0x54ce, 0xfc6, 0xbd90, 0xfbff, 0xc326, 0x6b95, 0x1, 0x1);
        gbc.writeMem(0x54ce, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfc6);
        EXPECT(gbc.pc(), 0x54cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0333
        gbc.setState(0x270, 0xdf9d, 0x5e10, 0xb182, 0x6517, 0x949b, 0x1, 0x1);
        gbc.writeMem(0x270, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xdf9d);
        EXPECT(gbc.pc(), 0x271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0334
        gbc.setState(0xd3ca, 0xe64e, 0x61a0, 0x2058, 0x11fe, 0x5ce1, 0x0, 0x1);
        gbc.writeMem(0xd3ca, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe64e);
        EXPECT(gbc.pc(), 0xd3cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ca), 0x97);
        // 97 0335
        gbc.setState(0xd9cf, 0x6716, 0xc7f0, 0x8768, 0x5689, 0x6817, 0x1, 0x1);
        gbc.writeMem(0xd9cf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6716);
        EXPECT(gbc.pc(), 0xd9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9cf), 0x97);
        // 97 0337
        gbc.setState(0x8bc3, 0xf2c3, 0x8b50, 0x8c1d, 0xa55b, 0xdef9, 0x0, 0x1);
        gbc.writeMem(0x8bc3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf2c3);
        EXPECT(gbc.pc(), 0x8bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc3), 0x97);
        // 97 0338
        gbc.setState(0x11c2, 0x81a4, 0xa5d0, 0x9d4a, 0x1da5, 0x9b90, 0x0, 0x0);
        gbc.writeMem(0x11c2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x81a4);
        EXPECT(gbc.pc(), 0x11c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0339
        gbc.setState(0x7230, 0x8ae3, 0x7d20, 0x9d8e, 0xd929, 0x1f39, 0x1, 0x0);
        gbc.writeMem(0x7230, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8ae3);
        EXPECT(gbc.pc(), 0x7231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 033A
        gbc.setState(0x2fa6, 0x460, 0x14e0, 0x2763, 0x1177, 0xef96, 0x1, 0x1);
        gbc.writeMem(0x2fa6, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x460);
        EXPECT(gbc.pc(), 0x2fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 033B
        gbc.setState(0x25af, 0xae4e, 0x6770, 0x8e0c, 0x53, 0x84d3, 0x1, 0x0);
        gbc.writeMem(0x25af, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xae4e);
        EXPECT(gbc.pc(), 0x25b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 033C
        gbc.setState(0x88f9, 0x6242, 0x7870, 0xffb2, 0x3a78, 0x10fd, 0x1, 0x1);
        gbc.writeMem(0x88f9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6242);
        EXPECT(gbc.pc(), 0x88fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f9), 0x97);
        // 97 033D
        gbc.setState(0x7b77, 0x9dff, 0xd980, 0x3bfc, 0x9200, 0x6dcd, 0x0, 0x1);
        gbc.writeMem(0x7b77, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9dff);
        EXPECT(gbc.pc(), 0x7b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 033E
        gbc.setState(0x66a0, 0xa046, 0x3d30, 0xb723, 0x3f3, 0x557d, 0x0, 0x1);
        gbc.writeMem(0x66a0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa046);
        EXPECT(gbc.pc(), 0x66a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 033F
        gbc.setState(0xcd2b, 0x5b0c, 0xb6d0, 0xcf44, 0xfa7c, 0x32e8, 0x1, 0x1);
        gbc.writeMem(0xcd2b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5b0c);
        EXPECT(gbc.pc(), 0xcd2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd2b), 0x97);
        // 97 0340
        gbc.setState(0x4976, 0x6cec, 0xcbf0, 0x6b1f, 0x4bf2, 0x69c1, 0x0, 0x1);
        gbc.writeMem(0x4976, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6cec);
        EXPECT(gbc.pc(), 0x4977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0341
        gbc.setState(0xd1ef, 0x3560, 0x5a20, 0xb3f6, 0x68e9, 0x7b1b, 0x0, 0x1);
        gbc.writeMem(0xd1ef, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3560);
        EXPECT(gbc.pc(), 0xd1f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ef), 0x97);
        // 97 0342
        gbc.setState(0xd0b5, 0x965f, 0x9070, 0x9630, 0x136, 0x529e, 0x1, 0x0);
        gbc.writeMem(0xd0b5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x965f);
        EXPECT(gbc.pc(), 0xd0b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0b5), 0x97);
        // 97 0343
        gbc.setState(0xe206, 0xa457, 0xce40, 0xe061, 0x7521, 0x616, 0x1, 0x0);
        gbc.writeMem(0xe206, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa457);
        EXPECT(gbc.pc(), 0xe207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe206), 0x97);
        // 97 0344
        gbc.setState(0xb4ee, 0x1d90, 0x2990, 0xdfbc, 0x71d5, 0xfc54, 0x0, 0x0);
        gbc.writeMem(0xb4ee, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1d90);
        EXPECT(gbc.pc(), 0xb4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ee), 0x97);
        // 97 0345
        gbc.setState(0x41e8, 0x5987, 0x6c80, 0x3c1a, 0xe602, 0xa4dd, 0x1, 0x1);
        gbc.writeMem(0x41e8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5987);
        EXPECT(gbc.pc(), 0x41e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0346
        gbc.setState(0x13cd, 0x1d9, 0x66a0, 0xed59, 0xf18c, 0xe3, 0x0, 0x0);
        gbc.writeMem(0x13cd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1d9);
        EXPECT(gbc.pc(), 0x13ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0347
        gbc.setState(0x6d24, 0x4d57, 0x3cf0, 0x62e8, 0xb92, 0xfd09, 0x1, 0x1);
        gbc.writeMem(0x6d24, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4d57);
        EXPECT(gbc.pc(), 0x6d25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0349
        gbc.setState(0xeadf, 0x600a, 0x880, 0xeda8, 0x3b58, 0xb8fa, 0x0, 0x0);
        gbc.writeMem(0xeadf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x600a);
        EXPECT(gbc.pc(), 0xeae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeadf), 0x97);
        // 97 034A
        gbc.setState(0x8d24, 0xa1ea, 0xa10, 0x3c85, 0x81ee, 0x9f0, 0x1, 0x1);
        gbc.writeMem(0x8d24, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa1ea);
        EXPECT(gbc.pc(), 0x8d25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d24), 0x97);
        // 97 034B
        gbc.setState(0x6bca, 0xe4af, 0xf340, 0xe1c1, 0xeeb8, 0xe30f, 0x1, 0x0);
        gbc.writeMem(0x6bca, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe4af);
        EXPECT(gbc.pc(), 0x6bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 034C
        gbc.setState(0x3437, 0x8bf, 0x8c90, 0xaee6, 0xfc08, 0xda49, 0x1, 0x0);
        gbc.writeMem(0x3437, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8bf);
        EXPECT(gbc.pc(), 0x3438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 034D
        gbc.setState(0xcfee, 0x8096, 0x9070, 0x4f55, 0x33eb, 0xc2d3, 0x0, 0x0);
        gbc.writeMem(0xcfee, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8096);
        EXPECT(gbc.pc(), 0xcfef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfee), 0x97);
        // 97 034E
        gbc.setState(0x6d2e, 0xd774, 0x97e0, 0xa4d4, 0x9a44, 0x83b1, 0x1, 0x0);
        gbc.writeMem(0x6d2e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd774);
        EXPECT(gbc.pc(), 0x6d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 034F
        gbc.setState(0x43f2, 0x58b6, 0xdf90, 0x5bd2, 0xa8de, 0x4d17, 0x1, 0x0);
        gbc.writeMem(0x43f2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x58b6);
        EXPECT(gbc.pc(), 0x43f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0350
        gbc.setState(0xba6a, 0xce00, 0x3270, 0x91cb, 0xefa7, 0x5718, 0x1, 0x0);
        gbc.writeMem(0xba6a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xce00);
        EXPECT(gbc.pc(), 0xba6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6a), 0x97);
        // 97 0351
        gbc.setState(0xd0cf, 0xa0dd, 0x570, 0xd34f, 0xbf4c, 0x1fed, 0x1, 0x1);
        gbc.writeMem(0xd0cf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa0dd);
        EXPECT(gbc.pc(), 0xd0d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0cf), 0x97);
        // 97 0352
        gbc.setState(0x4cd5, 0x34c8, 0xd5b0, 0x5c92, 0x8b78, 0x6dfe, 0x1, 0x0);
        gbc.writeMem(0x4cd5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x34c8);
        EXPECT(gbc.pc(), 0x4cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0353
        gbc.setState(0x7d8f, 0x2cf2, 0x9780, 0x17d, 0x54a6, 0x8a98, 0x0, 0x1);
        gbc.writeMem(0x7d8f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2cf2);
        EXPECT(gbc.pc(), 0x7d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0354
        gbc.setState(0xc1b2, 0x23b8, 0xf5a0, 0x2abb, 0xd5d0, 0xe621, 0x1, 0x1);
        gbc.writeMem(0xc1b2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x23b8);
        EXPECT(gbc.pc(), 0xc1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b2), 0x97);
        // 97 0355
        gbc.setState(0xa635, 0xb5f6, 0x5890, 0x1d05, 0x1081, 0xf2c5, 0x1, 0x1);
        gbc.writeMem(0xa635, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb5f6);
        EXPECT(gbc.pc(), 0xa636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa635), 0x97);
        // 97 0356
        gbc.setState(0x55db, 0x70ca, 0xe9f0, 0xce11, 0xeb69, 0x49d5, 0x1, 0x1);
        gbc.writeMem(0x55db, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x70ca);
        EXPECT(gbc.pc(), 0x55dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0357
        gbc.setState(0x386f, 0x1b40, 0xa610, 0x1cbb, 0x6471, 0x3d88, 0x0, 0x1);
        gbc.writeMem(0x386f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1b40);
        EXPECT(gbc.pc(), 0x3870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0358
        gbc.setState(0x977d, 0xcb07, 0x5310, 0x1f35, 0x1158, 0x7524, 0x0, 0x1);
        gbc.writeMem(0x977d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcb07);
        EXPECT(gbc.pc(), 0x977e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x977d), 0x97);
        // 97 0359
        gbc.setState(0xd5ee, 0x4f80, 0x63d0, 0x95d9, 0x1f39, 0x86f0, 0x0, 0x1);
        gbc.writeMem(0xd5ee, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4f80);
        EXPECT(gbc.pc(), 0xd5ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ee), 0x97);
        // 97 035A
        gbc.setState(0x78c1, 0xcd9a, 0x4e90, 0x1bfc, 0x11e0, 0x90ee, 0x1, 0x1);
        gbc.writeMem(0x78c1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcd9a);
        EXPECT(gbc.pc(), 0x78c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 035B
        gbc.setState(0x52f1, 0x76bc, 0x74a0, 0x1290, 0xf0e5, 0xeaee, 0x0, 0x0);
        gbc.writeMem(0x52f1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x76bc);
        EXPECT(gbc.pc(), 0x52f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 035C
        gbc.setState(0xd6ff, 0x21e4, 0xb620, 0xf414, 0x9b8b, 0xe12b, 0x0, 0x0);
        gbc.writeMem(0xd6ff, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x21e4);
        EXPECT(gbc.pc(), 0xd700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ff), 0x97);
        // 97 035D
        gbc.setState(0x5556, 0xba24, 0xb370, 0x17f5, 0x6a48, 0x9b82, 0x1, 0x1);
        gbc.writeMem(0x5556, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xba24);
        EXPECT(gbc.pc(), 0x5557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 035E
        gbc.setState(0x5718, 0xffd3, 0x4ac0, 0xca6a, 0xee6f, 0x1c25, 0x1, 0x1);
        gbc.writeMem(0x5718, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xffd3);
        EXPECT(gbc.pc(), 0x5719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 035F
        gbc.setState(0x9475, 0xed03, 0xac90, 0x58d1, 0x8716, 0xf4dd, 0x1, 0x1);
        gbc.writeMem(0x9475, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xed03);
        EXPECT(gbc.pc(), 0x9476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9475), 0x97);
        // 97 0360
        gbc.setState(0x95f9, 0xd4db, 0x98c0, 0x917a, 0xe4c0, 0xf3a8, 0x0, 0x1);
        gbc.writeMem(0x95f9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd4db);
        EXPECT(gbc.pc(), 0x95fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f9), 0x97);
        // 97 0361
        gbc.setState(0x1a82, 0x1fec, 0x3880, 0xda82, 0xc2db, 0xec92, 0x0, 0x0);
        gbc.writeMem(0x1a82, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1fec);
        EXPECT(gbc.pc(), 0x1a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0362
        gbc.setState(0x467f, 0xda0, 0xdbf0, 0xb8e5, 0xb946, 0xe409, 0x1, 0x1);
        gbc.writeMem(0x467f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xda0);
        EXPECT(gbc.pc(), 0x4680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0363
        gbc.setState(0xceef, 0x38a6, 0x4ec0, 0x5932, 0x4b19, 0xe052, 0x0, 0x0);
        gbc.writeMem(0xceef, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x38a6);
        EXPECT(gbc.pc(), 0xcef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceef), 0x97);
        // 97 0364
        gbc.setState(0x3aee, 0xb2a8, 0x47d0, 0xc05d, 0x3811, 0xda17, 0x0, 0x1);
        gbc.writeMem(0x3aee, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb2a8);
        EXPECT(gbc.pc(), 0x3aef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0365
        gbc.setState(0x5412, 0x1c89, 0x4aa0, 0x851c, 0xaa36, 0xf839, 0x1, 0x0);
        gbc.writeMem(0x5412, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1c89);
        EXPECT(gbc.pc(), 0x5413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0366
        gbc.setState(0x1aa0, 0x8734, 0x8220, 0x5b6f, 0x6065, 0xdbdc, 0x0, 0x1);
        gbc.writeMem(0x1aa0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8734);
        EXPECT(gbc.pc(), 0x1aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0367
        gbc.setState(0xb2ce, 0x50ae, 0xc270, 0xd67a, 0x6257, 0xc88f, 0x0, 0x0);
        gbc.writeMem(0xb2ce, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x50ae);
        EXPECT(gbc.pc(), 0xb2cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ce), 0x97);
        // 97 0369
        gbc.setState(0xac70, 0xdfbf, 0x4b60, 0xf739, 0xc965, 0x540f, 0x1, 0x1);
        gbc.writeMem(0xac70, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdfbf);
        EXPECT(gbc.pc(), 0xac71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac70), 0x97);
        // 97 036A
        gbc.setState(0x65f1, 0xf3ae, 0x3860, 0x6de2, 0xefee, 0x3ee3, 0x1, 0x1);
        gbc.writeMem(0x65f1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf3ae);
        EXPECT(gbc.pc(), 0x65f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 036B
        gbc.setState(0xe5d7, 0xf7a8, 0xff80, 0x918e, 0x78e6, 0x4295, 0x1, 0x1);
        gbc.writeMem(0xe5d7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf7a8);
        EXPECT(gbc.pc(), 0xe5d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d7), 0x97);
        // 97 036C
        gbc.setState(0xc34, 0x97cb, 0x6390, 0xf8a2, 0x226, 0x29b7, 0x0, 0x0);
        gbc.writeMem(0xc34, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x97cb);
        EXPECT(gbc.pc(), 0xc35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 036D
        gbc.setState(0xa9b7, 0x9566, 0x510, 0x637c, 0xfafc, 0x2fa0, 0x1, 0x1);
        gbc.writeMem(0xa9b7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9566);
        EXPECT(gbc.pc(), 0xa9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b7), 0x97);
        // 97 036E
        gbc.setState(0x8919, 0xa71a, 0x7cc0, 0x1b04, 0x4e8, 0xc755, 0x0, 0x1);
        gbc.writeMem(0x8919, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa71a);
        EXPECT(gbc.pc(), 0x891a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8919), 0x97);
        // 97 036F
        gbc.setState(0x8cd0, 0x959, 0x2110, 0x7abf, 0x59a1, 0xb6c, 0x1, 0x1);
        gbc.writeMem(0x8cd0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x959);
        EXPECT(gbc.pc(), 0x8cd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd0), 0x97);
        // 97 0370
        gbc.setState(0x8f84, 0xa139, 0xc870, 0x9258, 0xb1f2, 0x39e8, 0x0, 0x0);
        gbc.writeMem(0x8f84, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa139);
        EXPECT(gbc.pc(), 0x8f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f84), 0x97);
        // 97 0371
        gbc.setState(0xca5, 0xa554, 0x6f90, 0xba71, 0x4b8f, 0x60c3, 0x1, 0x1);
        gbc.writeMem(0xca5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa554);
        EXPECT(gbc.pc(), 0xca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0372
        gbc.setState(0x5bfb, 0xfe43, 0xad10, 0xe507, 0xee79, 0x64f4, 0x1, 0x0);
        gbc.writeMem(0x5bfb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfe43);
        EXPECT(gbc.pc(), 0x5bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0374
        gbc.setState(0x7800, 0x90cf, 0xa180, 0x90cc, 0xba6a, 0x26c5, 0x1, 0x0);
        gbc.writeMem(0x7800, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x90cf);
        EXPECT(gbc.pc(), 0x7801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0375
        gbc.setState(0x8f56, 0x32a1, 0x6810, 0xfb9a, 0x21bc, 0x2217, 0x0, 0x0);
        gbc.writeMem(0x8f56, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x32a1);
        EXPECT(gbc.pc(), 0x8f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f56), 0x97);
        // 97 0376
        gbc.setState(0xbd22, 0x418c, 0x8d90, 0xc678, 0xcadb, 0x485a, 0x0, 0x1);
        gbc.writeMem(0xbd22, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x418c);
        EXPECT(gbc.pc(), 0xbd23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd22), 0x97);
        // 97 0377
        gbc.setState(0x6a64, 0x5fc2, 0xb570, 0x60a, 0xa62d, 0xa13d, 0x0, 0x1);
        gbc.writeMem(0x6a64, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5fc2);
        EXPECT(gbc.pc(), 0x6a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0378
        gbc.setState(0xe82b, 0x4f44, 0xad70, 0x7837, 0x5094, 0x4e49, 0x0, 0x0);
        gbc.writeMem(0xe82b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4f44);
        EXPECT(gbc.pc(), 0xe82c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe82b), 0x97);
        // 97 0379
        gbc.setState(0xe90b, 0x2184, 0x7890, 0x3097, 0x35ae, 0x66d1, 0x1, 0x0);
        gbc.writeMem(0xe90b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2184);
        EXPECT(gbc.pc(), 0xe90c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe90b), 0x97);
        // 97 037A
        gbc.setState(0xc143, 0xee93, 0x9f70, 0xb7de, 0x3aaa, 0x3cea, 0x0, 0x1);
        gbc.writeMem(0xc143, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xee93);
        EXPECT(gbc.pc(), 0xc144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc143), 0x97);
        // 97 037B
        gbc.setState(0x3471, 0xbb9c, 0xa800, 0x56bc, 0xebe3, 0xacaf, 0x0, 0x1);
        gbc.writeMem(0x3471, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbb9c);
        EXPECT(gbc.pc(), 0x3472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 037C
        gbc.setState(0x8c18, 0xce37, 0x340, 0xcdcd, 0x5953, 0xa0f2, 0x0, 0x1);
        gbc.writeMem(0x8c18, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xce37);
        EXPECT(gbc.pc(), 0x8c19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c18), 0x97);
        // 97 037D
        gbc.setState(0x8a2d, 0x7ac8, 0xe010, 0xe352, 0x76c7, 0xa34c, 0x1, 0x0);
        gbc.writeMem(0x8a2d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7ac8);
        EXPECT(gbc.pc(), 0x8a2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2d), 0x97);
        // 97 037E
        gbc.setState(0xc40b, 0x6265, 0x880, 0x8d0b, 0x6367, 0x2db6, 0x0, 0x0);
        gbc.writeMem(0xc40b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6265);
        EXPECT(gbc.pc(), 0xc40c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc40b), 0x97);
        // 97 037F
        gbc.setState(0x67b1, 0xcc9e, 0x810, 0x30ef, 0x1d0f, 0x86d9, 0x1, 0x0);
        gbc.writeMem(0x67b1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xcc9e);
        EXPECT(gbc.pc(), 0x67b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0380
        gbc.setState(0xe6c, 0x6956, 0x4660, 0x61be, 0x9d11, 0x788e, 0x1, 0x0);
        gbc.writeMem(0xe6c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6956);
        EXPECT(gbc.pc(), 0xe6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0381
        gbc.setState(0xcc07, 0xf3d9, 0x7b90, 0xa971, 0x4138, 0xd1f6, 0x0, 0x0);
        gbc.writeMem(0xcc07, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf3d9);
        EXPECT(gbc.pc(), 0xcc08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc07), 0x97);
        // 97 0382
        gbc.setState(0x8e80, 0x16ad, 0xba50, 0xabe0, 0x10f9, 0x8d61, 0x0, 0x0);
        gbc.writeMem(0x8e80, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x16ad);
        EXPECT(gbc.pc(), 0x8e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e80), 0x97);
        // 97 0383
        gbc.setState(0xe135, 0x654c, 0x1da0, 0x9b04, 0x2e2c, 0xbf09, 0x1, 0x0);
        gbc.writeMem(0xe135, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x654c);
        EXPECT(gbc.pc(), 0xe136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe135), 0x97);
        // 97 0384
        gbc.setState(0x9dc1, 0x371d, 0xc570, 0xb30f, 0x2bef, 0x4823, 0x1, 0x1);
        gbc.writeMem(0x9dc1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x371d);
        EXPECT(gbc.pc(), 0x9dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc1), 0x97);
        // 97 0385
        gbc.setState(0xeaee, 0x6ff6, 0xaf10, 0x6a42, 0x1955, 0x9970, 0x1, 0x0);
        gbc.writeMem(0xeaee, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6ff6);
        EXPECT(gbc.pc(), 0xeaef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaee), 0x97);
        // 97 0386
        gbc.setState(0x650b, 0xd486, 0x9e10, 0x511a, 0x8e75, 0x1fe0, 0x1, 0x0);
        gbc.writeMem(0x650b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd486);
        EXPECT(gbc.pc(), 0x650c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0387
        gbc.setState(0x24f7, 0xa7d1, 0x8fc0, 0x4749, 0x5348, 0xeab4, 0x1, 0x1);
        gbc.writeMem(0x24f7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa7d1);
        EXPECT(gbc.pc(), 0x24f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0388
        gbc.setState(0x9ed9, 0x832d, 0xd330, 0x5a26, 0x98e, 0xe073, 0x0, 0x0);
        gbc.writeMem(0x9ed9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x832d);
        EXPECT(gbc.pc(), 0x9eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed9), 0x97);
        // 97 0389
        gbc.setState(0x8e74, 0x59f6, 0x6790, 0x7b69, 0xac97, 0x9d4c, 0x0, 0x0);
        gbc.writeMem(0x8e74, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x59f6);
        EXPECT(gbc.pc(), 0x8e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e74), 0x97);
        // 97 038A
        gbc.setState(0xc331, 0x65a2, 0xe130, 0x1da3, 0xeaf3, 0x7dd5, 0x0, 0x0);
        gbc.writeMem(0xc331, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x65a2);
        EXPECT(gbc.pc(), 0xc332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc331), 0x97);
        // 97 038B
        gbc.setState(0x4d87, 0x233e, 0x4180, 0xf4b0, 0xdee0, 0x8717, 0x0, 0x0);
        gbc.writeMem(0x4d87, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x233e);
        EXPECT(gbc.pc(), 0x4d88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 038C
        gbc.setState(0x8432, 0x3bbe, 0x2e90, 0xf524, 0x9478, 0x24e9, 0x0, 0x0);
        gbc.writeMem(0x8432, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3bbe);
        EXPECT(gbc.pc(), 0x8433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8432), 0x97);
        // 97 038D
        gbc.setState(0x54bb, 0x170, 0xd330, 0x2a29, 0xde8e, 0xf33a, 0x1, 0x0);
        gbc.writeMem(0x54bb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x170);
        EXPECT(gbc.pc(), 0x54bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 038E
        gbc.setState(0x90fc, 0x1968, 0xc830, 0xd118, 0x2f28, 0x410, 0x0, 0x0);
        gbc.writeMem(0x90fc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1968);
        EXPECT(gbc.pc(), 0x90fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90fc), 0x97);
        // 97 038F
        gbc.setState(0xa840, 0x2526, 0xdfa0, 0x70e8, 0x6f7, 0xae20, 0x1, 0x1);
        gbc.writeMem(0xa840, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2526);
        EXPECT(gbc.pc(), 0xa841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa840), 0x97);
        // 97 0390
        gbc.setState(0xf90, 0x57ac, 0x7f80, 0x1496, 0x911, 0xe1b, 0x0, 0x0);
        gbc.writeMem(0xf90, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x57ac);
        EXPECT(gbc.pc(), 0xf91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0391
        gbc.setState(0x33b3, 0x2c7e, 0xd650, 0xfb94, 0x9c0, 0xe9df, 0x0, 0x0);
        gbc.writeMem(0x33b3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2c7e);
        EXPECT(gbc.pc(), 0x33b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0392
        gbc.setState(0x2d42, 0x54c6, 0xf5d0, 0xa9c2, 0x9ad9, 0x7a44, 0x0, 0x1);
        gbc.writeMem(0x2d42, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x54c6);
        EXPECT(gbc.pc(), 0x2d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0393
        gbc.setState(0x33bf, 0x7c1e, 0x82f0, 0xe59d, 0xbaf5, 0xc2f7, 0x0, 0x1);
        gbc.writeMem(0x33bf, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7c1e);
        EXPECT(gbc.pc(), 0x33c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0394
        gbc.setState(0x2253, 0x3ee6, 0xfed0, 0x7c09, 0x2441, 0x9315, 0x0, 0x1);
        gbc.writeMem(0x2253, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3ee6);
        EXPECT(gbc.pc(), 0x2254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0395
        gbc.setState(0x7aba, 0x1fb4, 0x90, 0x332a, 0x56d4, 0xe278, 0x1, 0x1);
        gbc.writeMem(0x7aba, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1fb4);
        EXPECT(gbc.pc(), 0x7abb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0396
        gbc.setState(0x9e7, 0x1a4e, 0x9640, 0xba41, 0x4db0, 0x5852, 0x0, 0x1);
        gbc.writeMem(0x9e7, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1a4e);
        EXPECT(gbc.pc(), 0x9e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0397
        gbc.setState(0x1c2c, 0xe5f, 0x3620, 0x7e30, 0x7822, 0xcf2f, 0x1, 0x1);
        gbc.writeMem(0x1c2c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe5f);
        EXPECT(gbc.pc(), 0x1c2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 0398
        gbc.setState(0xd0ef, 0x82de, 0xed50, 0x2c6c, 0xccd3, 0xa059, 0x0, 0x0);
        gbc.writeMem(0xd0ef, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x82de);
        EXPECT(gbc.pc(), 0xd0f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ef), 0x97);
        // 97 0399
        gbc.setState(0x839b, 0xbc1b, 0x94e0, 0x1bd1, 0x1af0, 0x799, 0x0, 0x0);
        gbc.writeMem(0x839b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbc1b);
        EXPECT(gbc.pc(), 0x839c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x839b), 0x97);
        // 97 039A
        gbc.setState(0x63ff, 0xcd7, 0x1f40, 0x2400, 0x169, 0x3402, 0x1, 0x1);
        gbc.writeMem(0x63ff, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcd7);
        EXPECT(gbc.pc(), 0x6400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 039B
        gbc.setState(0xaa7a, 0xcd3d, 0xc530, 0x6528, 0x49e0, 0x2bf6, 0x0, 0x1);
        gbc.writeMem(0xaa7a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xcd3d);
        EXPECT(gbc.pc(), 0xaa7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa7a), 0x97);
        // 97 039C
        gbc.setState(0x9609, 0x7c65, 0xa350, 0x167a, 0xe449, 0x6bc, 0x0, 0x1);
        gbc.writeMem(0x9609, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7c65);
        EXPECT(gbc.pc(), 0x960a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9609), 0x97);
        // 97 039E
        gbc.setState(0x10a9, 0x2661, 0x7400, 0x5505, 0x396e, 0xc686, 0x0, 0x0);
        gbc.writeMem(0x10a9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2661);
        EXPECT(gbc.pc(), 0x10aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 039F
        gbc.setState(0x579f, 0x578a, 0x28a0, 0xa3, 0xb975, 0xff17, 0x0, 0x1);
        gbc.writeMem(0x579f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x578a);
        EXPECT(gbc.pc(), 0x57a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03A0
        gbc.setState(0x9a3, 0x61e7, 0xb0c0, 0x2aff, 0x4e7d, 0x88df, 0x0, 0x0);
        gbc.writeMem(0x9a3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x61e7);
        EXPECT(gbc.pc(), 0x9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03A1
        gbc.setState(0xdc9, 0xe27, 0x5420, 0xf018, 0x4166, 0x315b, 0x0, 0x0);
        gbc.writeMem(0xdc9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe27);
        EXPECT(gbc.pc(), 0xdca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03A2
        gbc.setState(0x735, 0x43b5, 0xe30, 0x90a7, 0xba9f, 0x5c04, 0x1, 0x1);
        gbc.writeMem(0x735, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x43b5);
        EXPECT(gbc.pc(), 0x736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03A3
        gbc.setState(0xba96, 0xec39, 0xdae0, 0x1430, 0x6f09, 0x1bdd, 0x0, 0x1);
        gbc.writeMem(0xba96, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xec39);
        EXPECT(gbc.pc(), 0xba97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba96), 0x97);
        // 97 03A4
        gbc.setState(0x984f, 0x1cd8, 0xda0, 0x79ec, 0x7150, 0x9d11, 0x0, 0x1);
        gbc.writeMem(0x984f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1cd8);
        EXPECT(gbc.pc(), 0x9850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x984f), 0x97);
        // 97 03A5
        gbc.setState(0x95a9, 0x77f4, 0x4d30, 0xcd86, 0xc8cc, 0x51c4, 0x0, 0x0);
        gbc.writeMem(0x95a9, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x77f4);
        EXPECT(gbc.pc(), 0x95aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a9), 0x97);
        // 97 03A6
        gbc.setState(0xdf57, 0xd7fb, 0xcf00, 0xcf8, 0x8722, 0xa0ff, 0x0, 0x1);
        gbc.writeMem(0xdf57, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd7fb);
        EXPECT(gbc.pc(), 0xdf58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf57), 0x97);
        // 97 03A7
        gbc.setState(0xac84, 0xb814, 0xe060, 0xd525, 0x320a, 0xfd0c, 0x1, 0x0);
        gbc.writeMem(0xac84, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb814);
        EXPECT(gbc.pc(), 0xac85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac84), 0x97);
        // 97 03A8
        gbc.setState(0xe35b, 0xe173, 0xe8e0, 0xabcb, 0x9f84, 0xff73, 0x1, 0x1);
        gbc.writeMem(0xe35b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe173);
        EXPECT(gbc.pc(), 0xe35c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35b), 0x97);
        // 97 03A9
        gbc.setState(0xed1e, 0xc163, 0x9cd0, 0xce38, 0x1393, 0x96e7, 0x1, 0x0);
        gbc.writeMem(0xed1e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc163);
        EXPECT(gbc.pc(), 0xed1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed1e), 0x97);
        // 97 03AA
        gbc.setState(0x17be, 0xdd7f, 0x15b0, 0xab3c, 0x6aac, 0x26a, 0x0, 0x0);
        gbc.writeMem(0x17be, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdd7f);
        EXPECT(gbc.pc(), 0x17bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03AB
        gbc.setState(0x6721, 0xaaa, 0x2fc0, 0x3389, 0xcee4, 0xcecc, 0x1, 0x1);
        gbc.writeMem(0x6721, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xaaa);
        EXPECT(gbc.pc(), 0x6722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03AC
        gbc.setState(0x1ae2, 0x53e, 0x1860, 0x7d6e, 0x79a4, 0xc3ea, 0x1, 0x0);
        gbc.writeMem(0x1ae2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x53e);
        EXPECT(gbc.pc(), 0x1ae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03AD
        gbc.setState(0x9051, 0xc8bf, 0x1a90, 0x4b3e, 0x6d64, 0xabfb, 0x1, 0x1);
        gbc.writeMem(0x9051, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc8bf);
        EXPECT(gbc.pc(), 0x9052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9051), 0x97);
        // 97 03AE
        gbc.setState(0x3f08, 0xbb63, 0x3b80, 0x17f8, 0xd107, 0xb8a8, 0x1, 0x0);
        gbc.writeMem(0x3f08, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbb63);
        EXPECT(gbc.pc(), 0x3f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03AF
        gbc.setState(0x302c, 0x33f1, 0x1b90, 0x570, 0xaf0a, 0xcb0a, 0x0, 0x0);
        gbc.writeMem(0x302c, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x33f1);
        EXPECT(gbc.pc(), 0x302d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03B1
        gbc.setState(0x4373, 0xb9a7, 0x7b10, 0x4e28, 0xfbd, 0x536, 0x1, 0x1);
        gbc.writeMem(0x4373, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb9a7);
        EXPECT(gbc.pc(), 0x4374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03B2
        gbc.setState(0xe12, 0xdf8c, 0xdbd0, 0xa7f0, 0x85b8, 0xaa6, 0x1, 0x1);
        gbc.writeMem(0xe12, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xdf8c);
        EXPECT(gbc.pc(), 0xe13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03B3
        gbc.setState(0x7107, 0x4446, 0x9660, 0xfad5, 0x56b6, 0x1bd7, 0x0, 0x0);
        gbc.writeMem(0x7107, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4446);
        EXPECT(gbc.pc(), 0x7108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03B5
        gbc.setState(0xbf16, 0x3649, 0xc530, 0xdcae, 0xe810, 0xf443, 0x1, 0x1);
        gbc.writeMem(0xbf16, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3649);
        EXPECT(gbc.pc(), 0xbf17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf16), 0x97);
        // 97 03B6
        gbc.setState(0x200f, 0xffae, 0x1860, 0x26b4, 0xa18d, 0x3d5d, 0x1, 0x1);
        gbc.writeMem(0x200f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xffae);
        EXPECT(gbc.pc(), 0x2010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03B7
        gbc.setState(0x8a7b, 0xc187, 0xe7f0, 0xa211, 0xe527, 0xa783, 0x1, 0x1);
        gbc.writeMem(0x8a7b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc187);
        EXPECT(gbc.pc(), 0x8a7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a7b), 0x97);
        // 97 03B8
        gbc.setState(0xea82, 0xa341, 0xa330, 0x59d7, 0xf661, 0x7ff4, 0x1, 0x0);
        gbc.writeMem(0xea82, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa341);
        EXPECT(gbc.pc(), 0xea83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea82), 0x97);
        // 97 03B9
        gbc.setState(0xee95, 0x1b09, 0x29c0, 0x71a5, 0xf821, 0x17ed, 0x0, 0x0);
        gbc.writeMem(0xee95, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1b09);
        EXPECT(gbc.pc(), 0xee96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee95), 0x97);
        // 97 03BA
        gbc.setState(0x803d, 0x75fe, 0x87a0, 0x63b5, 0xe1bd, 0xe37e, 0x1, 0x1);
        gbc.writeMem(0x803d, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x75fe);
        EXPECT(gbc.pc(), 0x803e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x803d), 0x97);
        // 97 03BB
        gbc.setState(0x680f, 0x9a4c, 0xc840, 0xb5e1, 0xfd54, 0x30d8, 0x0, 0x0);
        gbc.writeMem(0x680f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9a4c);
        EXPECT(gbc.pc(), 0x6810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03BC
        gbc.setState(0x7f41, 0x29e0, 0x3f10, 0x75be, 0xf96e, 0x3584, 0x0, 0x0);
        gbc.writeMem(0x7f41, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x29e0);
        EXPECT(gbc.pc(), 0x7f42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03BD
        gbc.setState(0x96b8, 0xcc6a, 0x4670, 0x9bda, 0x36ae, 0x2907, 0x0, 0x1);
        gbc.writeMem(0x96b8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcc6a);
        EXPECT(gbc.pc(), 0x96b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b8), 0x97);
        // 97 03BE
        gbc.setState(0x7364, 0xe325, 0x20c0, 0x8f6a, 0xfb34, 0x8a6c, 0x0, 0x0);
        gbc.writeMem(0x7364, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe325);
        EXPECT(gbc.pc(), 0x7365);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03BF
        gbc.setState(0xe9b3, 0x2610, 0x4c70, 0xdafd, 0x205f, 0xfa5e, 0x1, 0x1);
        gbc.writeMem(0xe9b3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2610);
        EXPECT(gbc.pc(), 0xe9b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b3), 0x97);
        // 97 03C0
        gbc.setState(0xc8c5, 0x89ce, 0x48a0, 0x32c8, 0xbe74, 0x504c, 0x0, 0x0);
        gbc.writeMem(0xc8c5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x89ce);
        EXPECT(gbc.pc(), 0xc8c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c5), 0x97);
        // 97 03C1
        gbc.setState(0xc6dc, 0x38c5, 0x1c70, 0x6e37, 0x2b8, 0xbae2, 0x0, 0x0);
        gbc.writeMem(0xc6dc, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x38c5);
        EXPECT(gbc.pc(), 0xc6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6dc), 0x97);
        // 97 03C2
        gbc.setState(0xe501, 0xc57e, 0x95d0, 0x9a26, 0x2980, 0xcb15, 0x0, 0x1);
        gbc.writeMem(0xe501, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc57e);
        EXPECT(gbc.pc(), 0xe502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe501), 0x97);
        // 97 03C3
        gbc.setState(0x4dc1, 0xbf4a, 0x4b0, 0x5337, 0x2cf0, 0xfddb, 0x0, 0x0);
        gbc.writeMem(0x4dc1, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbf4a);
        EXPECT(gbc.pc(), 0x4dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03C4
        gbc.setState(0xd2cd, 0x2a90, 0x5160, 0x5154, 0x655, 0x68f4, 0x0, 0x0);
        gbc.writeMem(0xd2cd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2a90);
        EXPECT(gbc.pc(), 0xd2ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2cd), 0x97);
        // 97 03C5
        gbc.setState(0x8794, 0xc025, 0x30b0, 0x6cb, 0xafc5, 0x66b0, 0x1, 0x0);
        gbc.writeMem(0x8794, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc025);
        EXPECT(gbc.pc(), 0x8795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8794), 0x97);
        // 97 03C6
        gbc.setState(0x3f37, 0xca41, 0xdfb0, 0x7e82, 0x1e41, 0x351f, 0x1, 0x0);
        gbc.writeMem(0x3f37, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xca41);
        EXPECT(gbc.pc(), 0x3f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03C7
        gbc.setState(0x5e16, 0x2799, 0x2770, 0xd751, 0xa140, 0xbe9e, 0x0, 0x1);
        gbc.writeMem(0x5e16, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2799);
        EXPECT(gbc.pc(), 0x5e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03C8
        gbc.setState(0x6df, 0xc20a, 0xc450, 0x60bc, 0xe845, 0xef21, 0x1, 0x0);
        gbc.writeMem(0x6df, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc20a);
        EXPECT(gbc.pc(), 0x6e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03C9
        gbc.setState(0xad81, 0xeeb5, 0x9980, 0x5e33, 0x62f8, 0xaa09, 0x1, 0x0);
        gbc.writeMem(0xad81, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xeeb5);
        EXPECT(gbc.pc(), 0xad82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad81), 0x97);
        // 97 03CA
        gbc.setState(0x1f23, 0xb5be, 0xd3f0, 0x85cb, 0xd291, 0x8852, 0x1, 0x1);
        gbc.writeMem(0x1f23, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb5be);
        EXPECT(gbc.pc(), 0x1f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03CC
        gbc.setState(0xa4e8, 0x5b55, 0xca40, 0x14fd, 0xd406, 0xed63, 0x1, 0x1);
        gbc.writeMem(0xa4e8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5b55);
        EXPECT(gbc.pc(), 0xa4e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e8), 0x97);
        // 97 03CD
        gbc.setState(0x9552, 0xef98, 0x6a0, 0xfb2b, 0xb349, 0xe02c, 0x1, 0x0);
        gbc.writeMem(0x9552, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xef98);
        EXPECT(gbc.pc(), 0x9553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9552), 0x97);
        // 97 03CE
        gbc.setState(0x6efb, 0x89c1, 0xb3f0, 0x6880, 0x7b44, 0x8cff, 0x0, 0x1);
        gbc.writeMem(0x6efb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x89c1);
        EXPECT(gbc.pc(), 0x6efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03CF
        gbc.setState(0x6cfe, 0xad4e, 0x22c0, 0xfd1e, 0xbed5, 0x9a8f, 0x0, 0x1);
        gbc.writeMem(0x6cfe, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xad4e);
        EXPECT(gbc.pc(), 0x6cff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03D0
        gbc.setState(0x3813, 0xa0e0, 0xe6f0, 0xe3f4, 0x58e0, 0x2f4a, 0x0, 0x1);
        gbc.writeMem(0x3813, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa0e0);
        EXPECT(gbc.pc(), 0x3814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03D1
        gbc.setState(0x9830, 0x5b4b, 0xa650, 0xf33, 0x675e, 0x60a5, 0x1, 0x0);
        gbc.writeMem(0x9830, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5b4b);
        EXPECT(gbc.pc(), 0x9831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9830), 0x97);
        // 97 03D2
        gbc.setState(0x364f, 0x8e01, 0x4fd0, 0xff16, 0xc816, 0x7df7, 0x0, 0x1);
        gbc.writeMem(0x364f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8e01);
        EXPECT(gbc.pc(), 0x3650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03D3
        gbc.setState(0x2e74, 0x20e8, 0x5150, 0xddc2, 0x1035, 0x936a, 0x1, 0x0);
        gbc.writeMem(0x2e74, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x20e8);
        EXPECT(gbc.pc(), 0x2e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03D4
        gbc.setState(0x36b3, 0x23d4, 0x5890, 0xa342, 0xa51a, 0x71ff, 0x1, 0x0);
        gbc.writeMem(0x36b3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x23d4);
        EXPECT(gbc.pc(), 0x36b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03D5
        gbc.setState(0x852, 0x1269, 0x6f00, 0x7bb9, 0xf864, 0xe274, 0x0, 0x1);
        gbc.writeMem(0x852, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1269);
        EXPECT(gbc.pc(), 0x853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03D6
        gbc.setState(0x1663, 0x79fe, 0x4d0, 0xf4cb, 0x1c4f, 0x442c, 0x1, 0x1);
        gbc.writeMem(0x1663, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x79fe);
        EXPECT(gbc.pc(), 0x1664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03D7
        gbc.setState(0xde11, 0x8c06, 0x8900, 0x25fa, 0xe8ca, 0x112, 0x0, 0x1);
        gbc.writeMem(0xde11, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8c06);
        EXPECT(gbc.pc(), 0xde12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde11), 0x97);
        // 97 03D8
        gbc.setState(0x46ac, 0xa151, 0x4ea0, 0xa05e, 0x81a1, 0xd1b8, 0x0, 0x0);
        gbc.writeMem(0x46ac, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa151);
        EXPECT(gbc.pc(), 0x46ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03D9
        gbc.setState(0x9267, 0xe464, 0x5c90, 0x3817, 0xec1e, 0xbf9c, 0x1, 0x1);
        gbc.writeMem(0x9267, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe464);
        EXPECT(gbc.pc(), 0x9268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9267), 0x97);
        // 97 03DA
        gbc.setState(0xec64, 0x2177, 0x4e90, 0xfef0, 0x951f, 0x4192, 0x0, 0x1);
        gbc.writeMem(0xec64, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2177);
        EXPECT(gbc.pc(), 0xec65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec64), 0x97);
        // 97 03DB
        gbc.setState(0xcff3, 0x2a37, 0x260, 0xbc42, 0x214f, 0x9855, 0x0, 0x1);
        gbc.writeMem(0xcff3, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2a37);
        EXPECT(gbc.pc(), 0xcff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff3), 0x97);
        // 97 03DC
        gbc.setState(0xd402, 0x7d78, 0xefa0, 0x6979, 0x850f, 0xe673, 0x0, 0x1);
        gbc.writeMem(0xd402, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7d78);
        EXPECT(gbc.pc(), 0xd403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd402), 0x97);
        // 97 03DD
        gbc.setState(0x6508, 0x4e54, 0xe3f0, 0x4160, 0x922b, 0xb79d, 0x0, 0x1);
        gbc.writeMem(0x6508, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4e54);
        EXPECT(gbc.pc(), 0x6509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03DE
        gbc.setState(0x4aab, 0x4939, 0x69c0, 0x8199, 0x9176, 0xff36, 0x1, 0x0);
        gbc.writeMem(0x4aab, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4939);
        EXPECT(gbc.pc(), 0x4aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03DF
        gbc.setState(0x3bd8, 0x9914, 0xacf0, 0xb451, 0xee6d, 0xc0e6, 0x1, 0x0);
        gbc.writeMem(0x3bd8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9914);
        EXPECT(gbc.pc(), 0x3bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03E0
        gbc.setState(0xef93, 0xf244, 0x1190, 0x9604, 0x6065, 0xf8ca, 0x0, 0x1);
        gbc.writeMem(0xef93, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf244);
        EXPECT(gbc.pc(), 0xef94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef93), 0x97);
        // 97 03E1
        gbc.setState(0xa65f, 0xbbfc, 0xc830, 0xf82c, 0xa298, 0xb1e3, 0x1, 0x0);
        gbc.writeMem(0xa65f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xbbfc);
        EXPECT(gbc.pc(), 0xa660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa65f), 0x97);
        // 97 03E2
        gbc.setState(0x3788, 0xf353, 0x860, 0x91fb, 0x5dbc, 0xed7b, 0x1, 0x0);
        gbc.writeMem(0x3788, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf353);
        EXPECT(gbc.pc(), 0x3789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03E3
        gbc.setState(0xb5fd, 0x2e48, 0x4c80, 0x1d76, 0xe586, 0x46fa, 0x1, 0x1);
        gbc.writeMem(0xb5fd, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2e48);
        EXPECT(gbc.pc(), 0xb5fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5fd), 0x97);
        // 97 03E4
        gbc.setState(0x32eb, 0x3637, 0xb2b0, 0x340a, 0xfc0, 0xa950, 0x1, 0x1);
        gbc.writeMem(0x32eb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3637);
        EXPECT(gbc.pc(), 0x32ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03E5
        gbc.setState(0x46, 0xb5c4, 0xf900, 0xb9c5, 0xfb3f, 0x2aea, 0x1, 0x0);
        gbc.writeMem(0x46, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb5c4);
        EXPECT(gbc.pc(), 0x47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03E6
        gbc.setState(0x61b, 0x9b67, 0x1430, 0xfd95, 0x5824, 0x7d79, 0x1, 0x0);
        gbc.writeMem(0x61b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9b67);
        EXPECT(gbc.pc(), 0x61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 97 03E7
        gbc.setState(0x5d5a, 0xa4a2, 0x2570, 0xb663, 0xa7f5, 0x11f6, 0x0, 0x0);
        gbc.writeMem(0x5d5a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa4a2);
        EXPECT(gbc.pc(), 0x5d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
