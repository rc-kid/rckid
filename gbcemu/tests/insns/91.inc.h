    TEST(gbcemu, opcode_91) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 91 0000
        gbc.setState(0x286a, 0xec18, 0x4f10, 0x2ada, 0x4145, 0xf777, 0x0, 0x1);
        gbc.writeMem(0x286a, { 0x91 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xec18, gbc.sp());
        EXPECT(0x286b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0001
        gbc.setState(0x2c7a, 0xeaea, 0x9550, 0x6811, 0x6d1b, 0x3be2, 0x1, 0x1);
        gbc.writeMem(0x2c7a, { 0x91 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xeaea, gbc.sp());
        EXPECT(0x2c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0002
        gbc.setState(0x9f8c, 0x6c1f, 0xb890, 0x7d75, 0xa51b, 0x6181, 0x1, 0x1);
        gbc.writeMem(0x9f8c, { 0x91 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6c1f, gbc.sp());
        EXPECT(0x9f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9f8c));
        // 91 0003
        gbc.setState(0x22ae, 0xb3a, 0x7280, 0xaa6, 0xfd2c, 0x62d6, 0x1, 0x0);
        gbc.writeMem(0x22ae, { 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb3a, gbc.sp());
        EXPECT(0x22af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0004
        gbc.setState(0x8ead, 0x1a6, 0x5490, 0x4213, 0xdfc8, 0x22ad, 0x1, 0x0);
        gbc.writeMem(0x8ead, { 0x91 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1a6, gbc.sp());
        EXPECT(0x8eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8ead));
        // 91 0005
        gbc.setState(0xc498, 0x1843, 0xce50, 0xa356, 0x2065, 0x5251, 0x0, 0x0);
        gbc.writeMem(0xc498, { 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1843, gbc.sp());
        EXPECT(0xc499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc498));
        // 91 0006
        gbc.setState(0x4f29, 0xaeae, 0x7b60, 0x5319, 0xbf19, 0xf538, 0x1, 0x0);
        gbc.writeMem(0x4f29, { 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaeae, gbc.sp());
        EXPECT(0x4f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0007
        gbc.setState(0xac82, 0xf6b2, 0x8940, 0x2697, 0xa03e, 0xe210, 0x1, 0x1);
        gbc.writeMem(0xac82, { 0x91 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf6b2, gbc.sp());
        EXPECT(0xac83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xac82));
        // 91 0008
        gbc.setState(0x78dc, 0xe56b, 0xc470, 0xd45b, 0x4804, 0xcbc1, 0x1, 0x0);
        gbc.writeMem(0x78dc, { 0x91 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe56b, gbc.sp());
        EXPECT(0x78dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0009
        gbc.setState(0xe76b, 0xbbfa, 0xd030, 0x631, 0x9bd8, 0x4917, 0x1, 0x0);
        gbc.writeMem(0xe76b, { 0x91 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbbfa, gbc.sp());
        EXPECT(0xe76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe76b));
        // 91 000A
        gbc.setState(0xbfcd, 0xde26, 0x37d0, 0x7292, 0xcf82, 0x1d3e, 0x0, 0x0);
        gbc.writeMem(0xbfcd, { 0x91 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xde26, gbc.sp());
        EXPECT(0xbfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbfcd));
        // 91 000B
        gbc.setState(0x2822, 0xe151, 0x3550, 0x3fc4, 0x628a, 0x5152, 0x0, 0x1);
        gbc.writeMem(0x2822, { 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe151, gbc.sp());
        EXPECT(0x2823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 000C
        gbc.setState(0x5313, 0xd824, 0xbd70, 0x46f5, 0x9d8c, 0x7c45, 0x1, 0x0);
        gbc.writeMem(0x5313, { 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd824, gbc.sp());
        EXPECT(0x5314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 000E
        gbc.setState(0x3904, 0x3b17, 0x1880, 0xf1a7, 0xa1c3, 0xb0bc, 0x0, 0x1);
        gbc.writeMem(0x3904, { 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3b17, gbc.sp());
        EXPECT(0x3905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 000F
        gbc.setState(0xd9a4, 0x617c, 0x56e0, 0x262a, 0x5c84, 0x3712, 0x0, 0x0);
        gbc.writeMem(0xd9a4, { 0x91 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x617c, gbc.sp());
        EXPECT(0xd9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd9a4));
        // 91 0010
        gbc.setState(0x89f9, 0xf003, 0xc2c0, 0x8cf, 0x194e, 0xb821, 0x1, 0x1);
        gbc.writeMem(0x89f9, { 0x91 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf003, gbc.sp());
        EXPECT(0x89fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x89f9));
        // 91 0011
        gbc.setState(0xa687, 0x4add, 0xbfd0, 0xd0e3, 0xef73, 0x9372, 0x1, 0x0);
        gbc.writeMem(0xa687, { 0x91 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4add, gbc.sp());
        EXPECT(0xa688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa687));
        // 91 0012
        gbc.setState(0xe0be, 0xaaed, 0xce30, 0xefe1, 0xfecc, 0x4cce, 0x0, 0x1);
        gbc.writeMem(0xe0be, { 0x91 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaaed, gbc.sp());
        EXPECT(0xe0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe0be));
        // 91 0013
        gbc.setState(0xdcec, 0x174a, 0xc5b0, 0x495d, 0x8b28, 0x1e2d, 0x1, 0x1);
        gbc.writeMem(0xdcec, { 0x91 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x174a, gbc.sp());
        EXPECT(0xdced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdcec));
        // 91 0014
        gbc.setState(0x68f9, 0x40b6, 0x1ac0, 0x9e32, 0xa89, 0x8cdd, 0x0, 0x0);
        gbc.writeMem(0x68f9, { 0x91 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x40b6, gbc.sp());
        EXPECT(0x68fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0015
        gbc.setState(0xaae4, 0x5230, 0xf860, 0x488b, 0xfd83, 0x954e, 0x1, 0x0);
        gbc.writeMem(0xaae4, { 0x91 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5230, gbc.sp());
        EXPECT(0xaae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xaae4));
        // 91 0016
        gbc.setState(0xe409, 0x6e1d, 0xf910, 0xedf4, 0xd794, 0x9439, 0x1, 0x0);
        gbc.writeMem(0xe409, { 0x91 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6e1d, gbc.sp());
        EXPECT(0xe40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe409));
        // 91 0017
        gbc.setState(0xaa7b, 0xb558, 0x75a0, 0x7096, 0x5550, 0x8ae3, 0x0, 0x0);
        gbc.writeMem(0xaa7b, { 0x91 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb558, gbc.sp());
        EXPECT(0xaa7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xaa7b));
        // 91 001A
        gbc.setState(0x7701, 0x5237, 0xcef0, 0x94d4, 0x2307, 0xd808, 0x0, 0x1);
        gbc.writeMem(0x7701, { 0x91 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5237, gbc.sp());
        EXPECT(0x7702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 001B
        gbc.setState(0x3c32, 0x1895, 0xc0c0, 0x9b07, 0x1a12, 0xa0bb, 0x0, 0x1);
        gbc.writeMem(0x3c32, { 0x91 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1895, gbc.sp());
        EXPECT(0x3c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 001C
        gbc.setState(0xdf6b, 0xf1e9, 0x5b40, 0x16d1, 0xed60, 0x2235, 0x0, 0x0);
        gbc.writeMem(0xdf6b, { 0x91 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf1e9, gbc.sp());
        EXPECT(0xdf6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdf6b));
        // 91 001E
        gbc.setState(0xa6fc, 0x96bf, 0xbcd0, 0x73d6, 0x8577, 0x6788, 0x0, 0x0);
        gbc.writeMem(0xa6fc, { 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x96bf, gbc.sp());
        EXPECT(0xa6fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa6fc));
        // 91 001F
        gbc.setState(0x917f, 0x119d, 0xdbc0, 0x19ef, 0x9921, 0x126c, 0x1, 0x1);
        gbc.writeMem(0x917f, { 0x91 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x119d, gbc.sp());
        EXPECT(0x9180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x917f));
        // 91 0020
        gbc.setState(0x63ff, 0xa68c, 0xe10, 0x7239, 0x3d72, 0x4b72, 0x0, 0x0);
        gbc.writeMem(0x63ff, { 0x91 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa68c, gbc.sp());
        EXPECT(0x6400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0021
        gbc.setState(0xde8c, 0xd71c, 0xd60, 0xb869, 0xe887, 0xfa11, 0x0, 0x0);
        gbc.writeMem(0xde8c, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd71c, gbc.sp());
        EXPECT(0xde8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xde8c));
        // 91 0022
        gbc.setState(0x4424, 0x3a1e, 0x91a0, 0xdedf, 0x7ce0, 0xafd8, 0x0, 0x0);
        gbc.writeMem(0x4424, { 0x91 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3a1e, gbc.sp());
        EXPECT(0x4425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0023
        gbc.setState(0x34aa, 0xdf78, 0x6b90, 0x34f0, 0x287c, 0x335d, 0x1, 0x0);
        gbc.writeMem(0x34aa, { 0x91 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdf78, gbc.sp());
        EXPECT(0x34ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0024
        gbc.setState(0x7c2, 0xfa2f, 0x2a30, 0xa715, 0x34cc, 0x7daa, 0x1, 0x1);
        gbc.writeMem(0x7c2, { 0x91 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfa2f, gbc.sp());
        EXPECT(0x7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0025
        gbc.setState(0x72e5, 0x81e3, 0xe040, 0x46f8, 0xa8ad, 0xfc0f, 0x1, 0x0);
        gbc.writeMem(0x72e5, { 0x91 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x81e3, gbc.sp());
        EXPECT(0x72e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0026
        gbc.setState(0x80b0, 0x71c2, 0x54c0, 0x6989, 0x176b, 0x5c97, 0x1, 0x1);
        gbc.writeMem(0x80b0, { 0x91 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x71c2, gbc.sp());
        EXPECT(0x80b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x80b0));
        // 91 0027
        gbc.setState(0xb4f5, 0x175, 0x10a0, 0x50f2, 0x1f49, 0x9021, 0x0, 0x1);
        gbc.writeMem(0xb4f5, { 0x91 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x175, gbc.sp());
        EXPECT(0xb4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb4f5));
        // 91 0028
        gbc.setState(0x2f80, 0x35e2, 0x8ca0, 0xc1b2, 0x84b8, 0x2e07, 0x1, 0x0);
        gbc.writeMem(0x2f80, { 0x91 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x35e2, gbc.sp());
        EXPECT(0x2f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 002A
        gbc.setState(0x543e, 0xb441, 0x3f10, 0x1eb2, 0x1830, 0x33bd, 0x0, 0x0);
        gbc.writeMem(0x543e, { 0x91 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb441, gbc.sp());
        EXPECT(0x543f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 002B
        gbc.setState(0xa258, 0x69aa, 0x81e0, 0xbdba, 0x256c, 0x6496, 0x0, 0x1);
        gbc.writeMem(0xa258, { 0x91 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x69aa, gbc.sp());
        EXPECT(0xa259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa258));
        // 91 002C
        gbc.setState(0x94d2, 0xdf18, 0xea50, 0xa769, 0x4688, 0xdea1, 0x1, 0x0);
        gbc.writeMem(0x94d2, { 0x91 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdf18, gbc.sp());
        EXPECT(0x94d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x94d2));
        // 91 002D
        gbc.setState(0x8b88, 0xf4cf, 0xad30, 0x32d8, 0xecf5, 0x3277, 0x0, 0x1);
        gbc.writeMem(0x8b88, { 0x91 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf4cf, gbc.sp());
        EXPECT(0x8b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8b88));
        // 91 002E
        gbc.setState(0xdc41, 0xe022, 0xd7e0, 0xa115, 0x8359, 0x6e13, 0x1, 0x0);
        gbc.writeMem(0xdc41, { 0x91 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe022, gbc.sp());
        EXPECT(0xdc42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdc41));
        // 91 002F
        gbc.setState(0x2e36, 0x4223, 0xf260, 0xce88, 0xccc8, 0xe755, 0x1, 0x0);
        gbc.writeMem(0x2e36, { 0x91 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4223, gbc.sp());
        EXPECT(0x2e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0030
        gbc.setState(0x5445, 0x1981, 0x6de0, 0xe350, 0xbc02, 0xd1a8, 0x0, 0x0);
        gbc.writeMem(0x5445, { 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1981, gbc.sp());
        EXPECT(0x5446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0031
        gbc.setState(0x49f3, 0x91c2, 0x4fc0, 0xede0, 0x3934, 0x6470, 0x1, 0x0);
        gbc.writeMem(0x49f3, { 0x91 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x91c2, gbc.sp());
        EXPECT(0x49f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0032
        gbc.setState(0xafbf, 0x7cf9, 0x1000, 0x40f8, 0x37f4, 0x7b9e, 0x0, 0x1);
        gbc.writeMem(0xafbf, { 0x91 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7cf9, gbc.sp());
        EXPECT(0xafc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xafbf));
        // 91 0033
        gbc.setState(0x86a0, 0xe2fc, 0x4910, 0xe4ed, 0xbb7d, 0xe79f, 0x0, 0x1);
        gbc.writeMem(0x86a0, { 0x91 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe2fc, gbc.sp());
        EXPECT(0x86a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x86a0));
        // 91 0034
        gbc.setState(0x5ecc, 0x8647, 0xff40, 0x462c, 0xa845, 0x262e, 0x0, 0x1);
        gbc.writeMem(0x5ecc, { 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8647, gbc.sp());
        EXPECT(0x5ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0035
        gbc.setState(0x6105, 0x615f, 0x6f90, 0xba0b, 0x6a2c, 0x68b1, 0x0, 0x1);
        gbc.writeMem(0x6105, { 0x91 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x615f, gbc.sp());
        EXPECT(0x6106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0036
        gbc.setState(0x93c6, 0x2c89, 0xd030, 0x9cfc, 0x4eec, 0x663c, 0x1, 0x0);
        gbc.writeMem(0x93c6, { 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2c89, gbc.sp());
        EXPECT(0x93c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x93c6));
        // 91 0037
        gbc.setState(0xc9c7, 0xb2b, 0x2400, 0x3bb9, 0xcf26, 0xde17, 0x1, 0x0);
        gbc.writeMem(0xc9c7, { 0x91 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb2b, gbc.sp());
        EXPECT(0xc9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc9c7));
        // 91 0038
        gbc.setState(0x4bfc, 0xfbb, 0xa790, 0xf883, 0xc13c, 0xd8de, 0x0, 0x0);
        gbc.writeMem(0x4bfc, { 0x91 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfbb, gbc.sp());
        EXPECT(0x4bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0039
        gbc.setState(0x6bc, 0xb70f, 0x1a80, 0xdbaf, 0x9fac, 0x3a76, 0x0, 0x0);
        gbc.writeMem(0x6bc, { 0x91 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb70f, gbc.sp());
        EXPECT(0x6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 003A
        gbc.setState(0xd5f7, 0xced1, 0x2a60, 0xb37d, 0x6897, 0xab1b, 0x1, 0x0);
        gbc.writeMem(0xd5f7, { 0x91 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xced1, gbc.sp());
        EXPECT(0xd5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd5f7));
        // 91 003B
        gbc.setState(0x64a5, 0x3f9, 0x4610, 0x6014, 0x64b, 0x9bcb, 0x1, 0x0);
        gbc.writeMem(0x64a5, { 0x91 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3f9, gbc.sp());
        EXPECT(0x64a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 003C
        gbc.setState(0xb820, 0xdae7, 0xd8a0, 0x3466, 0xb52a, 0xc3fb, 0x0, 0x1);
        gbc.writeMem(0xb820, { 0x91 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdae7, gbc.sp());
        EXPECT(0xb821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb820));
        // 91 003D
        gbc.setState(0x8b13, 0x70d8, 0xf990, 0xce80, 0xb671, 0x2d9d, 0x0, 0x0);
        gbc.writeMem(0x8b13, { 0x91 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x70d8, gbc.sp());
        EXPECT(0x8b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8b13));
        // 91 003E
        gbc.setState(0xcae, 0x4ff5, 0x5080, 0x52b, 0x3ae, 0xe236, 0x0, 0x1);
        gbc.writeMem(0xcae, { 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4ff5, gbc.sp());
        EXPECT(0xcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 003F
        gbc.setState(0x867e, 0x24f2, 0x2340, 0xc416, 0x19f2, 0x3615, 0x0, 0x1);
        gbc.writeMem(0x867e, { 0x91 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x24f2, gbc.sp());
        EXPECT(0x867f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x867e));
        // 91 0040
        gbc.setState(0x5f4c, 0xefa, 0xffd0, 0x4a98, 0xb67e, 0x740f, 0x0, 0x1);
        gbc.writeMem(0x5f4c, { 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xefa, gbc.sp());
        EXPECT(0x5f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0041
        gbc.setState(0x955a, 0x3576, 0xd340, 0x9762, 0xe960, 0xe9cb, 0x1, 0x0);
        gbc.writeMem(0x955a, { 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3576, gbc.sp());
        EXPECT(0x955b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x955a));
        // 91 0042
        gbc.setState(0xcdf7, 0xa7f6, 0x71d0, 0xe0a, 0x2d9e, 0xf48a, 0x0, 0x0);
        gbc.writeMem(0xcdf7, { 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa7f6, gbc.sp());
        EXPECT(0xcdf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcdf7));
        // 91 0043
        gbc.setState(0x239a, 0x446, 0xaa90, 0x5b07, 0x99cb, 0xef4b, 0x1, 0x0);
        gbc.writeMem(0x239a, { 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x446, gbc.sp());
        EXPECT(0x239b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0044
        gbc.setState(0xd0f9, 0xfe, 0xbe30, 0xccce, 0xde36, 0xbeb9, 0x0, 0x0);
        gbc.writeMem(0xd0f9, { 0x91 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfe, gbc.sp());
        EXPECT(0xd0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd0f9));
        // 91 0045
        gbc.setState(0x8cd1, 0xbdc8, 0x4b50, 0x1c65, 0xce98, 0x78db, 0x0, 0x0);
        gbc.writeMem(0x8cd1, { 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbdc8, gbc.sp());
        EXPECT(0x8cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8cd1));
        // 91 0048
        gbc.setState(0x9246, 0x3e89, 0xc090, 0xc85f, 0x5ebe, 0xb805, 0x0, 0x1);
        gbc.writeMem(0x9246, { 0x91 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3e89, gbc.sp());
        EXPECT(0x9247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9246));
        // 91 0049
        gbc.setState(0x56f3, 0x6abe, 0xa4d0, 0xfeb4, 0xd988, 0x7c9f, 0x1, 0x0);
        gbc.writeMem(0x56f3, { 0x91 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6abe, gbc.sp());
        EXPECT(0x56f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 004A
        gbc.setState(0x4c65, 0xbaa8, 0x6000, 0xc352, 0x356f, 0x7a9e, 0x1, 0x0);
        gbc.writeMem(0x4c65, { 0x91 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbaa8, gbc.sp());
        EXPECT(0x4c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 004B
        gbc.setState(0x719f, 0x4e7e, 0x8460, 0xebbe, 0x96ce, 0x8b38, 0x0, 0x1);
        gbc.writeMem(0x719f, { 0x91 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4e7e, gbc.sp());
        EXPECT(0x71a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 004C
        gbc.setState(0x9276, 0xd243, 0xdb50, 0x9a3b, 0xe93d, 0x661, 0x1, 0x0);
        gbc.writeMem(0x9276, { 0x91 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd243, gbc.sp());
        EXPECT(0x9277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9276));
        // 91 004D
        gbc.setState(0x7d29, 0x225c, 0x5770, 0x11e8, 0x55e8, 0xf731, 0x1, 0x0);
        gbc.writeMem(0x7d29, { 0x91 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x225c, gbc.sp());
        EXPECT(0x7d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 004E
        gbc.setState(0x9c55, 0x679, 0xa2e0, 0xef25, 0xbfb0, 0xc3cb, 0x0, 0x0);
        gbc.writeMem(0x9c55, { 0x91 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x679, gbc.sp());
        EXPECT(0x9c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9c55));
        // 91 004F
        gbc.setState(0xbed5, 0xed0f, 0x5490, 0x6ae6, 0x20f8, 0x708d, 0x0, 0x0);
        gbc.writeMem(0xbed5, { 0x91 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xed0f, gbc.sp());
        EXPECT(0xbed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbed5));
        // 91 0050
        gbc.setState(0xe83f, 0xdb2f, 0x3d80, 0x786, 0xc2f, 0x9ad4, 0x1, 0x1);
        gbc.writeMem(0xe83f, { 0x91 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdb2f, gbc.sp());
        EXPECT(0xe840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe83f));
        // 91 0051
        gbc.setState(0xd7ee, 0x3cca, 0x8830, 0x3d6e, 0x3d38, 0x980c, 0x0, 0x1);
        gbc.writeMem(0xd7ee, { 0x91 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3cca, gbc.sp());
        EXPECT(0xd7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd7ee));
        // 91 0052
        gbc.setState(0xa2e9, 0x1ebf, 0x8fd0, 0x86f4, 0xf919, 0x4836, 0x1, 0x1);
        gbc.writeMem(0xa2e9, { 0x91 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1ebf, gbc.sp());
        EXPECT(0xa2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa2e9));
        // 91 0053
        gbc.setState(0xc8ae, 0x5f92, 0x41f0, 0xc3e0, 0x2700, 0x7f60, 0x1, 0x0);
        gbc.writeMem(0xc8ae, { 0x91 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5f92, gbc.sp());
        EXPECT(0xc8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc8ae));
        // 91 0054
        gbc.setState(0x80d1, 0x2db1, 0x9ab0, 0xb253, 0xc856, 0x5e32, 0x1, 0x1);
        gbc.writeMem(0x80d1, { 0x91 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2db1, gbc.sp());
        EXPECT(0x80d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x80d1));
        // 91 0055
        gbc.setState(0x25dc, 0xdd06, 0xb720, 0x5247, 0xd5b8, 0x96b, 0x1, 0x1);
        gbc.writeMem(0x25dc, { 0x91 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdd06, gbc.sp());
        EXPECT(0x25dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0056
        gbc.setState(0xcba6, 0xbd26, 0xe5f0, 0x24dd, 0x9a6a, 0xee19, 0x0, 0x1);
        gbc.writeMem(0xcba6, { 0x91 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbd26, gbc.sp());
        EXPECT(0xcba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcba6));
        // 91 0057
        gbc.setState(0xceec, 0x5f67, 0x4f70, 0xb22, 0x4f21, 0xb1b8, 0x0, 0x0);
        gbc.writeMem(0xceec, { 0x91 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5f67, gbc.sp());
        EXPECT(0xceed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xceec));
        // 91 0058
        gbc.setState(0xecd1, 0xdbf7, 0xef30, 0x2dc4, 0xdb01, 0xbc88, 0x1, 0x0);
        gbc.writeMem(0xecd1, { 0x91 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdbf7, gbc.sp());
        EXPECT(0xecd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xecd1));
        // 91 005A
        gbc.setState(0xcb8d, 0x5d30, 0x5ee0, 0x27b3, 0xa60e, 0x48e8, 0x0, 0x0);
        gbc.writeMem(0xcb8d, { 0x91 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5d30, gbc.sp());
        EXPECT(0xcb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcb8d));
        // 91 005B
        gbc.setState(0xb36, 0x6f20, 0xc000, 0xf982, 0xe1a0, 0x58dc, 0x0, 0x1);
        gbc.writeMem(0xb36, { 0x91 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6f20, gbc.sp());
        EXPECT(0xb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 005C
        gbc.setState(0x7690, 0x3ab8, 0xb020, 0x7a0e, 0x60a1, 0xb89, 0x0, 0x1);
        gbc.writeMem(0x7690, { 0x91 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3ab8, gbc.sp());
        EXPECT(0x7691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 005D
        gbc.setState(0x51b9, 0xa177, 0xc710, 0x480, 0xcb8a, 0xb79a, 0x0, 0x1);
        gbc.writeMem(0x51b9, { 0x91 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa177, gbc.sp());
        EXPECT(0x51ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 005E
        gbc.setState(0xd931, 0x71fd, 0xe730, 0x260c, 0xd5bf, 0xe08f, 0x1, 0x1);
        gbc.writeMem(0xd931, { 0x91 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x71fd, gbc.sp());
        EXPECT(0xd932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd931));
        // 91 005F
        gbc.setState(0xbd5d, 0xb36d, 0x8400, 0x441d, 0x5000, 0x56fb, 0x0, 0x0);
        gbc.writeMem(0xbd5d, { 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb36d, gbc.sp());
        EXPECT(0xbd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbd5d));
        // 91 0060
        gbc.setState(0x5e5b, 0x74f0, 0xbaf0, 0x358c, 0x8a34, 0xd54b, 0x0, 0x0);
        gbc.writeMem(0x5e5b, { 0x91 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x74f0, gbc.sp());
        EXPECT(0x5e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0061
        gbc.setState(0xd2f7, 0x7f88, 0x8620, 0x5434, 0xda20, 0xa96, 0x1, 0x1);
        gbc.writeMem(0xd2f7, { 0x91 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7f88, gbc.sp());
        EXPECT(0xd2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd2f7));
        // 91 0062
        gbc.setState(0x4bde, 0x7333, 0x5af0, 0xfdb7, 0x9398, 0xc766, 0x0, 0x1);
        gbc.writeMem(0x4bde, { 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7333, gbc.sp());
        EXPECT(0x4bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0063
        gbc.setState(0x9094, 0x569a, 0xdce0, 0xd338, 0x8137, 0x590a, 0x0, 0x1);
        gbc.writeMem(0x9094, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x569a, gbc.sp());
        EXPECT(0x9095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9094));
        // 91 0064
        gbc.setState(0xd8be, 0x14cc, 0x3b90, 0xd599, 0x8abf, 0x693b, 0x1, 0x0);
        gbc.writeMem(0xd8be, { 0x91 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x14cc, gbc.sp());
        EXPECT(0xd8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd8be));
        // 91 0065
        gbc.setState(0x4b98, 0xf62d, 0xdb0, 0xfdcc, 0xf0c6, 0x9e0d, 0x1, 0x1);
        gbc.writeMem(0x4b98, { 0x91 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf62d, gbc.sp());
        EXPECT(0x4b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0067
        gbc.setState(0x3bf, 0xaab6, 0xf410, 0x2f69, 0x3ca0, 0xc589, 0x0, 0x0);
        gbc.writeMem(0x3bf, { 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xaab6, gbc.sp());
        EXPECT(0x3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0068
        gbc.setState(0x79d6, 0x61f4, 0x3fd0, 0x4a09, 0xeb68, 0xec56, 0x0, 0x1);
        gbc.writeMem(0x79d6, { 0x91 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x61f4, gbc.sp());
        EXPECT(0x79d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0069
        gbc.setState(0xd838, 0x4bcc, 0x9960, 0x7be4, 0x2f5d, 0x5e1f, 0x1, 0x1);
        gbc.writeMem(0xd838, { 0x91 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4bcc, gbc.sp());
        EXPECT(0xd839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd838));
        // 91 006A
        gbc.setState(0x753f, 0xb191, 0x2510, 0xe8a5, 0xd4d0, 0x973e, 0x0, 0x1);
        gbc.writeMem(0x753f, { 0x91 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb191, gbc.sp());
        EXPECT(0x7540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 006B
        gbc.setState(0xd54d, 0x6139, 0xc450, 0xf2c8, 0x580a, 0x2fd7, 0x1, 0x1);
        gbc.writeMem(0xd54d, { 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6139, gbc.sp());
        EXPECT(0xd54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd54d));
        // 91 006C
        gbc.setState(0x9ff5, 0x833, 0xee10, 0x6fe8, 0x34e0, 0x629e, 0x1, 0x0);
        gbc.writeMem(0x9ff5, { 0x91 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x833, gbc.sp());
        EXPECT(0x9ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9ff5));
        // 91 006D
        gbc.setState(0x5388, 0x7762, 0x22d0, 0xf097, 0x3b53, 0x38bb, 0x0, 0x0);
        gbc.writeMem(0x5388, { 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7762, gbc.sp());
        EXPECT(0x5389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 006E
        gbc.setState(0xccba, 0xd19e, 0x3550, 0x596b, 0x2ed1, 0xc931, 0x0, 0x0);
        gbc.writeMem(0xccba, { 0x91 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd19e, gbc.sp());
        EXPECT(0xccbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xccba));
        // 91 006F
        gbc.setState(0x3c41, 0x7ed3, 0x5320, 0xdc5a, 0xee0f, 0x18a1, 0x1, 0x0);
        gbc.writeMem(0x3c41, { 0x91 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7ed3, gbc.sp());
        EXPECT(0x3c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0070
        gbc.setState(0x5fdb, 0x5094, 0x6ed0, 0xae06, 0xfef4, 0xa041, 0x1, 0x0);
        gbc.writeMem(0x5fdb, { 0x91 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5094, gbc.sp());
        EXPECT(0x5fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0071
        gbc.setState(0xb87c, 0x512d, 0xac80, 0xb52b, 0xff5, 0x763a, 0x1, 0x1);
        gbc.writeMem(0xb87c, { 0x91 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x512d, gbc.sp());
        EXPECT(0xb87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb87c));
        // 91 0072
        gbc.setState(0xd246, 0xecb9, 0xf3a0, 0x5431, 0x950f, 0xc57f, 0x0, 0x1);
        gbc.writeMem(0xd246, { 0x91 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xecb9, gbc.sp());
        EXPECT(0xd247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd246));
        // 91 0073
        gbc.setState(0x55b6, 0x80e0, 0x8900, 0x972d, 0x98f2, 0xb719, 0x1, 0x1);
        gbc.writeMem(0x55b6, { 0x91 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x80e0, gbc.sp());
        EXPECT(0x55b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0074
        gbc.setState(0xe219, 0xeb96, 0xf50, 0xe6b8, 0x226d, 0x1c9f, 0x0, 0x1);
        gbc.writeMem(0xe219, { 0x91 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xeb96, gbc.sp());
        EXPECT(0xe21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe219));
        // 91 0075
        gbc.setState(0x6b66, 0x1cc2, 0xa290, 0x566, 0xb2e3, 0xa471, 0x1, 0x1);
        gbc.writeMem(0x6b66, { 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1cc2, gbc.sp());
        EXPECT(0x6b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0076
        gbc.setState(0x3e12, 0xd7b6, 0xbcb0, 0x2164, 0x9e9e, 0xc28a, 0x0, 0x1);
        gbc.writeMem(0x3e12, { 0x91 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd7b6, gbc.sp());
        EXPECT(0x3e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0077
        gbc.setState(0xe2de, 0xfdf4, 0x1380, 0x2b03, 0xa1dd, 0xb030, 0x0, 0x1);
        gbc.writeMem(0xe2de, { 0x91 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfdf4, gbc.sp());
        EXPECT(0xe2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe2de));
        // 91 0078
        gbc.setState(0x9ed1, 0x15d6, 0x3f60, 0xd9bf, 0xe690, 0xd982, 0x1, 0x0);
        gbc.writeMem(0x9ed1, { 0x91 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x15d6, gbc.sp());
        EXPECT(0x9ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9ed1));
        // 91 0079
        gbc.setState(0x59f7, 0xd235, 0xbcb0, 0x1b55, 0xe635, 0x94d7, 0x1, 0x0);
        gbc.writeMem(0x59f7, { 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd235, gbc.sp());
        EXPECT(0x59f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 007A
        gbc.setState(0xb653, 0xb28a, 0x9290, 0x40c0, 0x4890, 0xd517, 0x1, 0x0);
        gbc.writeMem(0xb653, { 0x91 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb28a, gbc.sp());
        EXPECT(0xb654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb653));
        // 91 007B
        gbc.setState(0x95c4, 0x69ae, 0xfde0, 0x4f6a, 0xaf68, 0xe96e, 0x0, 0x1);
        gbc.writeMem(0x95c4, { 0x91 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x69ae, gbc.sp());
        EXPECT(0x95c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x95c4));
        // 91 007C
        gbc.setState(0xc501, 0x39e9, 0xd1c0, 0x6a10, 0x5d3f, 0x4aa, 0x1, 0x1);
        gbc.writeMem(0xc501, { 0x91 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x39e9, gbc.sp());
        EXPECT(0xc502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc501));
        // 91 007D
        gbc.setState(0x82fb, 0xdcca, 0xece0, 0xf91b, 0x86e3, 0x6e66, 0x0, 0x0);
        gbc.writeMem(0x82fb, { 0x91 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdcca, gbc.sp());
        EXPECT(0x82fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x82fb));
        // 91 007E
        gbc.setState(0x12, 0x309b, 0x5b80, 0xbac5, 0x116f, 0xb546, 0x0, 0x1);
        gbc.writeMem(0x12, { 0x91 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x309b, gbc.sp());
        EXPECT(0x13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 007F
        gbc.setState(0x8f4e, 0x59f2, 0x2450, 0x8dc4, 0x50ff, 0xd1a3, 0x0, 0x1);
        gbc.writeMem(0x8f4e, { 0x91 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x59f2, gbc.sp());
        EXPECT(0x8f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8f4e));
        // 91 0080
        gbc.setState(0x37b7, 0x28a5, 0xe820, 0xb944, 0x701c, 0x7078, 0x0, 0x1);
        gbc.writeMem(0x37b7, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x28a5, gbc.sp());
        EXPECT(0x37b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0081
        gbc.setState(0x50cd, 0xb094, 0x6d00, 0x3615, 0xb4a3, 0x4377, 0x0, 0x0);
        gbc.writeMem(0x50cd, { 0x91 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb094, gbc.sp());
        EXPECT(0x50ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0082
        gbc.setState(0x3396, 0x892b, 0x8320, 0x5f63, 0x3031, 0x4d5a, 0x0, 0x1);
        gbc.writeMem(0x3396, { 0x91 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x892b, gbc.sp());
        EXPECT(0x3397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0083
        gbc.setState(0xe5c3, 0x1c8a, 0x4920, 0x9a3a, 0x8df0, 0x5e25, 0x0, 0x0);
        gbc.writeMem(0xe5c3, { 0x91 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1c8a, gbc.sp());
        EXPECT(0xe5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe5c3));
        // 91 0084
        gbc.setState(0x2fab, 0x7e73, 0x6ec0, 0x6ab0, 0xc8ad, 0xb2b3, 0x1, 0x0);
        gbc.writeMem(0x2fab, { 0x91 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7e73, gbc.sp());
        EXPECT(0x2fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0085
        gbc.setState(0x729d, 0xb9d4, 0xbd00, 0x8ffa, 0x860e, 0x5cbb, 0x1, 0x0);
        gbc.writeMem(0x729d, { 0x91 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb9d4, gbc.sp());
        EXPECT(0x729e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0086
        gbc.setState(0x6a6b, 0xb40d, 0x2420, 0xb5b, 0xe2d4, 0x220e, 0x1, 0x0);
        gbc.writeMem(0x6a6b, { 0x91 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb40d, gbc.sp());
        EXPECT(0x6a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0087
        gbc.setState(0x6dde, 0x73cb, 0xf320, 0x26c5, 0xeb38, 0xd4c7, 0x1, 0x1);
        gbc.writeMem(0x6dde, { 0x91 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x73cb, gbc.sp());
        EXPECT(0x6ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0088
        gbc.setState(0x4733, 0xc42, 0x49b0, 0xaa18, 0x657e, 0xc289, 0x1, 0x0);
        gbc.writeMem(0x4733, { 0x91 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc42, gbc.sp());
        EXPECT(0x4734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0089
        gbc.setState(0x1dfb, 0x9a70, 0x8a60, 0x7212, 0x95b1, 0x7046, 0x0, 0x0);
        gbc.writeMem(0x1dfb, { 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0x1dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 008A
        gbc.setState(0xb06e, 0xb94, 0x2b00, 0x232e, 0xece7, 0x4749, 0x0, 0x0);
        gbc.writeMem(0xb06e, { 0x91 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb94, gbc.sp());
        EXPECT(0xb06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb06e));
        // 91 008B
        gbc.setState(0x6b4d, 0x7c9c, 0x2400, 0xc969, 0xb8b9, 0xf961, 0x1, 0x0);
        gbc.writeMem(0x6b4d, { 0x91 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7c9c, gbc.sp());
        EXPECT(0x6b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 008C
        gbc.setState(0x99c2, 0xb571, 0xfa70, 0x842a, 0xf770, 0x21ae, 0x1, 0x1);
        gbc.writeMem(0x99c2, { 0x91 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb571, gbc.sp());
        EXPECT(0x99c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x99c2));
        // 91 008D
        gbc.setState(0x73c5, 0xf69, 0x5000, 0x69c8, 0x4df5, 0xa0ea, 0x1, 0x0);
        gbc.writeMem(0x73c5, { 0x91 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf69, gbc.sp());
        EXPECT(0x73c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 008E
        gbc.setState(0x172b, 0x66e4, 0xf30, 0x74d0, 0x7863, 0x54ff, 0x1, 0x1);
        gbc.writeMem(0x172b, { 0x91 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x66e4, gbc.sp());
        EXPECT(0x172c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0090
        gbc.setState(0x6f1d, 0x5772, 0xced0, 0xd736, 0x7107, 0x9856, 0x1, 0x0);
        gbc.writeMem(0x6f1d, { 0x91 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5772, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0091
        gbc.setState(0xac39, 0xea9b, 0xbd60, 0xe, 0xf50f, 0x2cd4, 0x1, 0x1);
        gbc.writeMem(0xac39, { 0x91 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xea9b, gbc.sp());
        EXPECT(0xac3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xac39));
        // 91 0092
        gbc.setState(0x1b25, 0x8711, 0xc730, 0x3422, 0xe294, 0xa963, 0x0, 0x0);
        gbc.writeMem(0x1b25, { 0x91 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8711, gbc.sp());
        EXPECT(0x1b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0093
        gbc.setState(0x3410, 0x87f9, 0x5050, 0xad5d, 0x2d35, 0xb82a, 0x1, 0x1);
        gbc.writeMem(0x3410, { 0x91 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x87f9, gbc.sp());
        EXPECT(0x3411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0094
        gbc.setState(0x4325, 0x2133, 0xb280, 0x41ee, 0x455a, 0x1b87, 0x1, 0x1);
        gbc.writeMem(0x4325, { 0x91 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2133, gbc.sp());
        EXPECT(0x4326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0095
        gbc.setState(0x174d, 0x2ebe, 0x5540, 0x8dd0, 0x50d2, 0x4afc, 0x1, 0x0);
        gbc.writeMem(0x174d, { 0x91 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2ebe, gbc.sp());
        EXPECT(0x174e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0096
        gbc.setState(0x9e41, 0x2296, 0x9b10, 0x659c, 0x5e24, 0x8aee, 0x0, 0x0);
        gbc.writeMem(0x9e41, { 0x91 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2296, gbc.sp());
        EXPECT(0x9e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9e41));
        // 91 0097
        gbc.setState(0x6229, 0xa3fa, 0xd820, 0x5ca7, 0xe80d, 0x5467, 0x1, 0x0);
        gbc.writeMem(0x6229, { 0x91 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa3fa, gbc.sp());
        EXPECT(0x622a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0098
        gbc.setState(0x9245, 0xc799, 0xe0b0, 0x2768, 0xc681, 0x18fe, 0x0, 0x1);
        gbc.writeMem(0x9245, { 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc799, gbc.sp());
        EXPECT(0x9246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9245));
        // 91 0099
        gbc.setState(0x1f43, 0x7429, 0xf7d0, 0x78dc, 0x1388, 0xbc49, 0x1, 0x1);
        gbc.writeMem(0x1f43, { 0x91 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7429, gbc.sp());
        EXPECT(0x1f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 009A
        gbc.setState(0xb645, 0xcf4f, 0xe7b0, 0x824b, 0xf46a, 0x1377, 0x1, 0x0);
        gbc.writeMem(0xb645, { 0x91 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcf4f, gbc.sp());
        EXPECT(0xb646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb645));
        // 91 009B
        gbc.setState(0xd44a, 0x702d, 0x26a0, 0xbdd5, 0x1239, 0x87d6, 0x0, 0x0);
        gbc.writeMem(0xd44a, { 0x91 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x702d, gbc.sp());
        EXPECT(0xd44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd44a));
        // 91 009C
        gbc.setState(0x8451, 0xce23, 0x55c0, 0xee91, 0x4be0, 0xf347, 0x1, 0x1);
        gbc.writeMem(0x8451, { 0x91 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xce23, gbc.sp());
        EXPECT(0x8452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8451));
        // 91 009D
        gbc.setState(0xd604, 0xb41f, 0x9410, 0xa825, 0x9077, 0x2ea7, 0x1, 0x1);
        gbc.writeMem(0xd604, { 0x91 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb41f, gbc.sp());
        EXPECT(0xd605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd604));
        // 91 009E
        gbc.setState(0x7950, 0x5f62, 0x1c80, 0x6e03, 0xe6c6, 0x7107, 0x1, 0x0);
        gbc.writeMem(0x7950, { 0x91 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5f62, gbc.sp());
        EXPECT(0x7951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 009F
        gbc.setState(0x1374, 0x30bc, 0xa690, 0x39dc, 0x84a8, 0xfe7b, 0x1, 0x0);
        gbc.writeMem(0x1374, { 0x91 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x30bc, gbc.sp());
        EXPECT(0x1375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00A0
        gbc.setState(0x435d, 0x803f, 0x1d70, 0x1b4c, 0xf073, 0xd473, 0x0, 0x1);
        gbc.writeMem(0x435d, { 0x91 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x803f, gbc.sp());
        EXPECT(0x435e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00A1
        gbc.setState(0x460c, 0x5c6f, 0x6db0, 0x5f71, 0x18fc, 0x9dbd, 0x1, 0x0);
        gbc.writeMem(0x460c, { 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5c6f, gbc.sp());
        EXPECT(0x460d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00A2
        gbc.setState(0xad48, 0xd476, 0x8ce0, 0xb013, 0x1a56, 0x559e, 0x0, 0x0);
        gbc.writeMem(0xad48, { 0x91 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd476, gbc.sp());
        EXPECT(0xad49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xad48));
        // 91 00A3
        gbc.setState(0x55a4, 0x41c5, 0x4830, 0xf663, 0x24c5, 0xd866, 0x0, 0x1);
        gbc.writeMem(0x55a4, { 0x91 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x41c5, gbc.sp());
        EXPECT(0x55a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00A4
        gbc.setState(0x4c52, 0xea8a, 0xd4e0, 0xd3af, 0xb764, 0x3f71, 0x0, 0x0);
        gbc.writeMem(0x4c52, { 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xea8a, gbc.sp());
        EXPECT(0x4c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00A5
        gbc.setState(0xde8, 0x601c, 0xe1b0, 0x339, 0xaf83, 0xb2c3, 0x1, 0x1);
        gbc.writeMem(0xde8, { 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x601c, gbc.sp());
        EXPECT(0xde9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00A6
        gbc.setState(0xd2af, 0x6437, 0x5b10, 0x58ab, 0xf112, 0x9b71, 0x0, 0x1);
        gbc.writeMem(0xd2af, { 0x91 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6437, gbc.sp());
        EXPECT(0xd2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd2af));
        // 91 00A7
        gbc.setState(0x3d7f, 0xa724, 0x32c0, 0x7ab9, 0x1d76, 0xefd3, 0x1, 0x1);
        gbc.writeMem(0x3d7f, { 0x91 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa724, gbc.sp());
        EXPECT(0x3d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00A8
        gbc.setState(0x431e, 0x242e, 0xab80, 0x4905, 0x6cd0, 0x3bd1, 0x0, 0x0);
        gbc.writeMem(0x431e, { 0x91 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x242e, gbc.sp());
        EXPECT(0x431f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00A9
        gbc.setState(0x19d3, 0x3b53, 0x6700, 0x1d48, 0x8f63, 0x5792, 0x1, 0x1);
        gbc.writeMem(0x19d3, { 0x91 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3b53, gbc.sp());
        EXPECT(0x19d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00AA
        gbc.setState(0x8ff, 0xcdde, 0x9670, 0xe925, 0xb464, 0xa841, 0x0, 0x0);
        gbc.writeMem(0x8ff, { 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcdde, gbc.sp());
        EXPECT(0x900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00AB
        gbc.setState(0x5b98, 0x5b44, 0xb050, 0xad0b, 0x167d, 0x5a02, 0x1, 0x0);
        gbc.writeMem(0x5b98, { 0x91 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5b44, gbc.sp());
        EXPECT(0x5b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00AC
        gbc.setState(0x51a5, 0x6d1d, 0x8fc0, 0x7a82, 0x1118, 0x22e9, 0x0, 0x1);
        gbc.writeMem(0x51a5, { 0x91 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6d1d, gbc.sp());
        EXPECT(0x51a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00AE
        gbc.setState(0x10a2, 0x58b8, 0x6320, 0xa97, 0xec22, 0xcfc5, 0x1, 0x1);
        gbc.writeMem(0x10a2, { 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x58b8, gbc.sp());
        EXPECT(0x10a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00AF
        gbc.setState(0xb848, 0x5803, 0x48e0, 0x7d4d, 0xa758, 0xedd8, 0x0, 0x0);
        gbc.writeMem(0xb848, { 0x91 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5803, gbc.sp());
        EXPECT(0xb849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb848));
        // 91 00B0
        gbc.setState(0xa7b3, 0xb345, 0xf5c0, 0xcf95, 0x466a, 0x5d06, 0x1, 0x1);
        gbc.writeMem(0xa7b3, { 0x91 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb345, gbc.sp());
        EXPECT(0xa7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa7b3));
        // 91 00B1
        gbc.setState(0x66c1, 0xdd2e, 0x18f0, 0x9d79, 0xc533, 0x78a0, 0x1, 0x0);
        gbc.writeMem(0x66c1, { 0x91 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdd2e, gbc.sp());
        EXPECT(0x66c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00B2
        gbc.setState(0x230, 0xc5fe, 0x8be0, 0xf74, 0xe80e, 0x114a, 0x0, 0x1);
        gbc.writeMem(0x230, { 0x91 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc5fe, gbc.sp());
        EXPECT(0x231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00B3
        gbc.setState(0xef3b, 0x499a, 0x6120, 0xa815, 0xd40c, 0xf787, 0x1, 0x0);
        gbc.writeMem(0xef3b, { 0x91 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x499a, gbc.sp());
        EXPECT(0xef3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xef3b));
        // 91 00B4
        gbc.setState(0xa77c, 0x5f2a, 0x61b0, 0xea82, 0x83b1, 0x889, 0x0, 0x0);
        gbc.writeMem(0xa77c, { 0x91 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5f2a, gbc.sp());
        EXPECT(0xa77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa77c));
        // 91 00B5
        gbc.setState(0xeaf6, 0x4bb4, 0xed10, 0x96d, 0x692d, 0x9543, 0x1, 0x0);
        gbc.writeMem(0xeaf6, { 0x91 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4bb4, gbc.sp());
        EXPECT(0xeaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xeaf6));
        // 91 00B6
        gbc.setState(0x7cfa, 0x2001, 0x1840, 0x4352, 0xf52c, 0x7b08, 0x1, 0x1);
        gbc.writeMem(0x7cfa, { 0x91 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2001, gbc.sp());
        EXPECT(0x7cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00B7
        gbc.setState(0xac43, 0xc828, 0x6cb0, 0x9390, 0x2a97, 0x3e84, 0x1, 0x1);
        gbc.writeMem(0xac43, { 0x91 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc828, gbc.sp());
        EXPECT(0xac44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xac43));
        // 91 00B8
        gbc.setState(0x9d5, 0xc69a, 0x540, 0x127e, 0x3d4e, 0xc01d, 0x0, 0x0);
        gbc.writeMem(0x9d5, { 0x91 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc69a, gbc.sp());
        EXPECT(0x9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00B9
        gbc.setState(0x8423, 0xd36d, 0x7910, 0xdd18, 0xa6b8, 0xb4e4, 0x0, 0x0);
        gbc.writeMem(0x8423, { 0x91 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd36d, gbc.sp());
        EXPECT(0x8424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8423));
        // 91 00BA
        gbc.setState(0x2ac6, 0x6650, 0x4f0, 0xf04f, 0x6b26, 0x7ae2, 0x0, 0x1);
        gbc.writeMem(0x2ac6, { 0x91 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6650, gbc.sp());
        EXPECT(0x2ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00BB
        gbc.setState(0x611e, 0x4d8d, 0x7df0, 0x32aa, 0xad3d, 0x223, 0x1, 0x1);
        gbc.writeMem(0x611e, { 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4d8d, gbc.sp());
        EXPECT(0x611f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00BE
        gbc.setState(0x5496, 0xc16d, 0xba10, 0x9eaf, 0x3c81, 0xcbca, 0x0, 0x0);
        gbc.writeMem(0x5496, { 0x91 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc16d, gbc.sp());
        EXPECT(0x5497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00BF
        gbc.setState(0x7de8, 0x9d49, 0xe9e0, 0xe575, 0xcffe, 0xe9ed, 0x1, 0x1);
        gbc.writeMem(0x7de8, { 0x91 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9d49, gbc.sp());
        EXPECT(0x7de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00C0
        gbc.setState(0x6b37, 0xed3a, 0xb810, 0x2801, 0x32bf, 0xce1d, 0x0, 0x1);
        gbc.writeMem(0x6b37, { 0x91 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xed3a, gbc.sp());
        EXPECT(0x6b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00C1
        gbc.setState(0x3937, 0x9b19, 0x3be0, 0xef65, 0x227d, 0x55d1, 0x1, 0x0);
        gbc.writeMem(0x3937, { 0x91 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9b19, gbc.sp());
        EXPECT(0x3938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00C2
        gbc.setState(0xe472, 0xd761, 0x4590, 0x808d, 0xa373, 0x6fd7, 0x0, 0x1);
        gbc.writeMem(0xe472, { 0x91 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd761, gbc.sp());
        EXPECT(0xe473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe472));
        // 91 00C3
        gbc.setState(0x189f, 0x1a12, 0xae70, 0xf20, 0x3d8a, 0xf93a, 0x1, 0x0);
        gbc.writeMem(0x189f, { 0x91 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1a12, gbc.sp());
        EXPECT(0x18a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00C4
        gbc.setState(0xb7bf, 0xb2bd, 0x70c0, 0x3667, 0x2441, 0x2fde, 0x0, 0x1);
        gbc.writeMem(0xb7bf, { 0x91 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb2bd, gbc.sp());
        EXPECT(0xb7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb7bf));
        // 91 00C5
        gbc.setState(0xcf5, 0x52e3, 0x4130, 0xe524, 0x5be4, 0x1781, 0x1, 0x1);
        gbc.writeMem(0xcf5, { 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x52e3, gbc.sp());
        EXPECT(0xcf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00C6
        gbc.setState(0x825c, 0x89e0, 0x1c60, 0x4e94, 0x3b1, 0x3613, 0x1, 0x0);
        gbc.writeMem(0x825c, { 0x91 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x89e0, gbc.sp());
        EXPECT(0x825d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x825c));
        // 91 00C7
        gbc.setState(0x8f0, 0x3adb, 0x2f50, 0x24de, 0x853a, 0xe4b8, 0x0, 0x0);
        gbc.writeMem(0x8f0, { 0x91 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3adb, gbc.sp());
        EXPECT(0x8f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00CA
        gbc.setState(0x77c0, 0x566f, 0x58d0, 0xa9e2, 0xf133, 0x320, 0x0, 0x0);
        gbc.writeMem(0x77c0, { 0x91 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x566f, gbc.sp());
        EXPECT(0x77c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00CB
        gbc.setState(0x9ccf, 0x3259, 0xb150, 0xeb44, 0x4a34, 0x7dc5, 0x1, 0x1);
        gbc.writeMem(0x9ccf, { 0x91 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3259, gbc.sp());
        EXPECT(0x9cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9ccf));
        // 91 00CC
        gbc.setState(0x234c, 0x3a89, 0x10, 0xcd13, 0xe7b5, 0xed5c, 0x1, 0x1);
        gbc.writeMem(0x234c, { 0x91 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3a89, gbc.sp());
        EXPECT(0x234d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00CD
        gbc.setState(0x364, 0x1c47, 0x69c0, 0xa347, 0x4e4c, 0xe79f, 0x1, 0x1);
        gbc.writeMem(0x364, { 0x91 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1c47, gbc.sp());
        EXPECT(0x365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00CF
        gbc.setState(0x6c7a, 0xc481, 0xdf20, 0x3ee, 0x5107, 0xb2e0, 0x1, 0x0);
        gbc.writeMem(0x6c7a, { 0x91 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc481, gbc.sp());
        EXPECT(0x6c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00D0
        gbc.setState(0xea75, 0x1a2f, 0x4060, 0xa597, 0x3a1d, 0xccbb, 0x0, 0x0);
        gbc.writeMem(0xea75, { 0x91 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1a2f, gbc.sp());
        EXPECT(0xea76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xea75));
        // 91 00D1
        gbc.setState(0xdb5d, 0xfa27, 0xa730, 0x465f, 0x6ce7, 0xce35, 0x0, 0x0);
        gbc.writeMem(0xdb5d, { 0x91 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfa27, gbc.sp());
        EXPECT(0xdb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdb5d));
        // 91 00D2
        gbc.setState(0xb8d8, 0xf896, 0x6d20, 0x919d, 0x6571, 0x116, 0x1, 0x0);
        gbc.writeMem(0xb8d8, { 0x91 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf896, gbc.sp());
        EXPECT(0xb8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb8d8));
        // 91 00D3
        gbc.setState(0x3df8, 0x687d, 0xb980, 0xb0bb, 0xdf5d, 0x2f35, 0x0, 0x1);
        gbc.writeMem(0x3df8, { 0x91 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x687d, gbc.sp());
        EXPECT(0x3df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00D4
        gbc.setState(0x624e, 0xd24, 0x51b0, 0x3dfc, 0x2773, 0x2e17, 0x0, 0x1);
        gbc.writeMem(0x624e, { 0x91 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd24, gbc.sp());
        EXPECT(0x624f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00D5
        gbc.setState(0x84df, 0x6ce1, 0x3900, 0x1800, 0x3f1c, 0x7440, 0x0, 0x1);
        gbc.writeMem(0x84df, { 0x91 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6ce1, gbc.sp());
        EXPECT(0x84e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x84df));
        // 91 00D6
        gbc.setState(0xc510, 0x597e, 0x4f60, 0x31dd, 0x1a61, 0xb148, 0x1, 0x0);
        gbc.writeMem(0xc510, { 0x91 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x597e, gbc.sp());
        EXPECT(0xc511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc510));
        // 91 00D7
        gbc.setState(0xd6c6, 0x56c, 0x2e60, 0xe803, 0x62a6, 0xa02, 0x1, 0x0);
        gbc.writeMem(0xd6c6, { 0x91 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x56c, gbc.sp());
        EXPECT(0xd6c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd6c6));
        // 91 00D8
        gbc.setState(0xe9b0, 0x8c47, 0xfd40, 0xaae9, 0x1e63, 0xf135, 0x0, 0x0);
        gbc.writeMem(0xe9b0, { 0x91 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8c47, gbc.sp());
        EXPECT(0xe9b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe9b0));
        // 91 00D9
        gbc.setState(0xcaec, 0xbea3, 0xe860, 0x837f, 0xd8ae, 0x6545, 0x1, 0x1);
        gbc.writeMem(0xcaec, { 0x91 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbea3, gbc.sp());
        EXPECT(0xcaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcaec));
        // 91 00DA
        gbc.setState(0xd82d, 0x5abd, 0x8aa0, 0x272d, 0x99dd, 0xcc12, 0x0, 0x0);
        gbc.writeMem(0xd82d, { 0x91 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5abd, gbc.sp());
        EXPECT(0xd82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd82d));
        // 91 00DB
        gbc.setState(0xef4a, 0xde17, 0x9690, 0x210a, 0x9b51, 0x2879, 0x0, 0x1);
        gbc.writeMem(0xef4a, { 0x91 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xde17, gbc.sp());
        EXPECT(0xef4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xef4a));
        // 91 00DC
        gbc.setState(0x754f, 0x57bc, 0x7530, 0xa959, 0x362c, 0x26da, 0x0, 0x1);
        gbc.writeMem(0x754f, { 0x91 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x57bc, gbc.sp());
        EXPECT(0x7550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00DD
        gbc.setState(0xcad0, 0x99f3, 0x8bb0, 0x322, 0xbb97, 0xb74c, 0x0, 0x0);
        gbc.writeMem(0xcad0, { 0x91 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x99f3, gbc.sp());
        EXPECT(0xcad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcad0));
        // 91 00DE
        gbc.setState(0x559f, 0xc5b7, 0x7780, 0xc8ff, 0xd615, 0x88ad, 0x1, 0x1);
        gbc.writeMem(0x559f, { 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc5b7, gbc.sp());
        EXPECT(0x55a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00DF
        gbc.setState(0x295b, 0x44e1, 0x2b60, 0xa05, 0x59b9, 0x6b19, 0x0, 0x0);
        gbc.writeMem(0x295b, { 0x91 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x44e1, gbc.sp());
        EXPECT(0x295c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00E0
        gbc.setState(0x7f5f, 0x67fe, 0x6070, 0xa525, 0x92d7, 0x6567, 0x1, 0x1);
        gbc.writeMem(0x7f5f, { 0x91 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x67fe, gbc.sp());
        EXPECT(0x7f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00E1
        gbc.setState(0xb519, 0x6629, 0x8f10, 0xf5d7, 0x4461, 0xb4e, 0x1, 0x1);
        gbc.writeMem(0xb519, { 0x91 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6629, gbc.sp());
        EXPECT(0xb51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb519));
        // 91 00E2
        gbc.setState(0xd406, 0xb978, 0x25f0, 0x51b8, 0xf9fe, 0x2728, 0x0, 0x0);
        gbc.writeMem(0xd406, { 0x91 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb978, gbc.sp());
        EXPECT(0xd407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd406));
        // 91 00E3
        gbc.setState(0x2e7a, 0xefcb, 0xf4b0, 0x209b, 0x209f, 0x3c1b, 0x0, 0x0);
        gbc.writeMem(0x2e7a, { 0x91 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xefcb, gbc.sp());
        EXPECT(0x2e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00E4
        gbc.setState(0xaed2, 0x6eaf, 0xfd40, 0x334f, 0xcb44, 0x7b10, 0x1, 0x1);
        gbc.writeMem(0xaed2, { 0x91 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6eaf, gbc.sp());
        EXPECT(0xaed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xaed2));
        // 91 00E5
        gbc.setState(0x5ce7, 0x9e83, 0xbf10, 0x66c3, 0x32a4, 0x6942, 0x0, 0x0);
        gbc.writeMem(0x5ce7, { 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9e83, gbc.sp());
        EXPECT(0x5ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00E6
        gbc.setState(0x94f7, 0x17fa, 0x85d0, 0x3ac1, 0xf9aa, 0xf230, 0x1, 0x0);
        gbc.writeMem(0x94f7, { 0x91 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x17fa, gbc.sp());
        EXPECT(0x94f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x94f7));
        // 91 00E7
        gbc.setState(0x4966, 0x965a, 0xd210, 0x404c, 0x3038, 0x281b, 0x1, 0x1);
        gbc.writeMem(0x4966, { 0x91 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x965a, gbc.sp());
        EXPECT(0x4967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00E8
        gbc.setState(0x111a, 0x54ba, 0x3cf0, 0xe742, 0xad1a, 0x778a, 0x1, 0x1);
        gbc.writeMem(0x111a, { 0x91 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x54ba, gbc.sp());
        EXPECT(0x111b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00E9
        gbc.setState(0xdcaa, 0xdff5, 0xcd0, 0xd4c3, 0x8939, 0xcba5, 0x0, 0x0);
        gbc.writeMem(0xdcaa, { 0x91 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdff5, gbc.sp());
        EXPECT(0xdcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdcaa));
        // 91 00EA
        gbc.setState(0x9462, 0x67c9, 0xb840, 0xde52, 0xd61, 0x8f9, 0x1, 0x0);
        gbc.writeMem(0x9462, { 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x67c9, gbc.sp());
        EXPECT(0x9463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9462));
        // 91 00EB
        gbc.setState(0x2d70, 0x5e5e, 0x82c0, 0x8a40, 0xf5b7, 0x60c4, 0x0, 0x1);
        gbc.writeMem(0x2d70, { 0x91 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5e5e, gbc.sp());
        EXPECT(0x2d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00EC
        gbc.setState(0xbe7c, 0x1c3e, 0xed80, 0x5e04, 0x7e3b, 0x3811, 0x0, 0x1);
        gbc.writeMem(0xbe7c, { 0x91 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1c3e, gbc.sp());
        EXPECT(0xbe7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbe7c));
        // 91 00EE
        gbc.setState(0x7d67, 0x1a84, 0xd8c0, 0xfe5b, 0xcc54, 0xb5c3, 0x1, 0x0);
        gbc.writeMem(0x7d67, { 0x91 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1a84, gbc.sp());
        EXPECT(0x7d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 00EF
        gbc.setState(0x538c, 0xa434, 0xcd90, 0xe4d8, 0xb575, 0x6bc8, 0x1, 0x0);
        gbc.writeMem(0x538c, { 0x91 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa434, gbc.sp());
        EXPECT(0x538d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00F0
        gbc.setState(0xe23a, 0x6d94, 0xf480, 0x21c2, 0xf0b4, 0x8b26, 0x0, 0x1);
        gbc.writeMem(0xe23a, { 0x91 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6d94, gbc.sp());
        EXPECT(0xe23b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe23a));
        // 91 00F2
        gbc.setState(0xe21d, 0x6bad, 0xdc90, 0x8262, 0x2031, 0xa989, 0x0, 0x0);
        gbc.writeMem(0xe21d, { 0x91 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6bad, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe21d));
        // 91 00F3
        gbc.setState(0xaece, 0xaadc, 0xd150, 0xc750, 0xff66, 0x21ac, 0x0, 0x0);
        gbc.writeMem(0xaece, { 0x91 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xaadc, gbc.sp());
        EXPECT(0xaecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xaece));
        // 91 00F4
        gbc.setState(0xc5e3, 0xda3, 0x47c0, 0x85a4, 0x3e3b, 0x4b04, 0x0, 0x0);
        gbc.writeMem(0xc5e3, { 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xda3, gbc.sp());
        EXPECT(0xc5e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc5e3));
        // 91 00F5
        gbc.setState(0x7812, 0x3928, 0x16e0, 0x6827, 0x159a, 0x5a3b, 0x1, 0x0);
        gbc.writeMem(0x7812, { 0x91 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3928, gbc.sp());
        EXPECT(0x7813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00F6
        gbc.setState(0x99b1, 0x8011, 0x3c10, 0x7494, 0xd00b, 0x95b1, 0x0, 0x0);
        gbc.writeMem(0x99b1, { 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8011, gbc.sp());
        EXPECT(0x99b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x99b1));
        // 91 00F7
        gbc.setState(0x7ce0, 0xc1b, 0xa240, 0xbabb, 0xa327, 0x5a68, 0x1, 0x0);
        gbc.writeMem(0x7ce0, { 0x91 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc1b, gbc.sp());
        EXPECT(0x7ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00F8
        gbc.setState(0x8d33, 0xcd39, 0x9850, 0xe7d7, 0x88cf, 0x96f5, 0x0, 0x0);
        gbc.writeMem(0x8d33, { 0x91 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcd39, gbc.sp());
        EXPECT(0x8d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8d33));
        // 91 00FB
        gbc.setState(0xa721, 0x48b2, 0xc560, 0x7aac, 0x50b4, 0x1e76, 0x0, 0x1);
        gbc.writeMem(0xa721, { 0x91 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x48b2, gbc.sp());
        EXPECT(0xa722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa721));
        // 91 00FC
        gbc.setState(0x7fcb, 0x9c67, 0x6e40, 0xc596, 0xe034, 0x17c3, 0x1, 0x0);
        gbc.writeMem(0x7fcb, { 0x91 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9c67, gbc.sp());
        EXPECT(0x7fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00FD
        gbc.setState(0x9bb, 0x9af7, 0x4530, 0xc99b, 0x6a49, 0xb5be, 0x0, 0x0);
        gbc.writeMem(0x9bb, { 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9af7, gbc.sp());
        EXPECT(0x9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00FE
        gbc.setState(0x2c13, 0x98b1, 0xa920, 0xcdb0, 0x8752, 0xf510, 0x1, 0x0);
        gbc.writeMem(0x2c13, { 0x91 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x98b1, gbc.sp());
        EXPECT(0x2c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 00FF
        gbc.setState(0x34c0, 0xf8ab, 0xfff0, 0xfb54, 0x3b6e, 0x9bc4, 0x1, 0x0);
        gbc.writeMem(0x34c0, { 0x91 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf8ab, gbc.sp());
        EXPECT(0x34c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0100
        gbc.setState(0xeaac, 0xc561, 0xe440, 0xb47d, 0x249a, 0xf46a, 0x1, 0x1);
        gbc.writeMem(0xeaac, { 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc561, gbc.sp());
        EXPECT(0xeaad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xeaac));
        // 91 0101
        gbc.setState(0x4648, 0xe186, 0xeae0, 0x387c, 0xd790, 0x2366, 0x0, 0x0);
        gbc.writeMem(0x4648, { 0x91 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe186, gbc.sp());
        EXPECT(0x4649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0102
        gbc.setState(0xa2c, 0x6b3f, 0xfa80, 0xc66c, 0x448c, 0xc89b, 0x1, 0x0);
        gbc.writeMem(0xa2c, { 0x91 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6b3f, gbc.sp());
        EXPECT(0xa2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0103
        gbc.setState(0xace4, 0x79de, 0xc6b0, 0x91db, 0xd048, 0xa9a9, 0x1, 0x0);
        gbc.writeMem(0xace4, { 0x91 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x79de, gbc.sp());
        EXPECT(0xace5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xace4));
        // 91 0104
        gbc.setState(0xe687, 0x6ad7, 0x3210, 0xdff7, 0x1365, 0x3781, 0x1, 0x0);
        gbc.writeMem(0xe687, { 0x91 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6ad7, gbc.sp());
        EXPECT(0xe688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe687));
        // 91 0105
        gbc.setState(0x7d76, 0xf72, 0x9150, 0x50e3, 0x635b, 0xee64, 0x0, 0x0);
        gbc.writeMem(0x7d76, { 0x91 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf72, gbc.sp());
        EXPECT(0x7d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0106
        gbc.setState(0x2d82, 0x4c8b, 0x51a0, 0x7558, 0x43da, 0x5f5b, 0x1, 0x1);
        gbc.writeMem(0x2d82, { 0x91 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4c8b, gbc.sp());
        EXPECT(0x2d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0107
        gbc.setState(0x9d27, 0x3c1a, 0xd320, 0x1705, 0x6d6b, 0x4e4f, 0x1, 0x1);
        gbc.writeMem(0x9d27, { 0x91 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3c1a, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9d27));
        // 91 0108
        gbc.setState(0x38a4, 0xdd12, 0xcf40, 0x11c9, 0x8d1a, 0x4061, 0x0, 0x1);
        gbc.writeMem(0x38a4, { 0x91 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdd12, gbc.sp());
        EXPECT(0x38a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0109
        gbc.setState(0xde55, 0x6d2b, 0x1620, 0x6304, 0x4598, 0x4c3d, 0x1, 0x1);
        gbc.writeMem(0xde55, { 0x91 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6d2b, gbc.sp());
        EXPECT(0xde56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xde55));
        // 91 010A
        gbc.setState(0xcdb2, 0xa7e6, 0x9f10, 0x85f9, 0x1d56, 0xc40, 0x1, 0x0);
        gbc.writeMem(0xcdb2, { 0x91 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa7e6, gbc.sp());
        EXPECT(0xcdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcdb2));
        // 91 010B
        gbc.setState(0x4bf, 0x947b, 0x6430, 0x27bc, 0xc34, 0x335e, 0x1, 0x0);
        gbc.writeMem(0x4bf, { 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x947b, gbc.sp());
        EXPECT(0x4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 010C
        gbc.setState(0x2f1b, 0x4c9, 0xd300, 0xc3d3, 0xffdd, 0xe144, 0x1, 0x0);
        gbc.writeMem(0x2f1b, { 0x91 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4c9, gbc.sp());
        EXPECT(0x2f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 010D
        gbc.setState(0xc4c1, 0xdbd9, 0xee00, 0xd332, 0x810c, 0x6d67, 0x0, 0x0);
        gbc.writeMem(0xc4c1, { 0x91 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdbd9, gbc.sp());
        EXPECT(0xc4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc4c1));
        // 91 010E
        gbc.setState(0x9290, 0x9398, 0x9d80, 0x75eb, 0x54ff, 0x9b9f, 0x1, 0x0);
        gbc.writeMem(0x9290, { 0x91 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9398, gbc.sp());
        EXPECT(0x9291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9290));
        // 91 010F
        gbc.setState(0xe47f, 0x8663, 0x8800, 0x92e1, 0x23f8, 0xb92e, 0x1, 0x1);
        gbc.writeMem(0xe47f, { 0x91 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8663, gbc.sp());
        EXPECT(0xe480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe47f));
        // 91 0110
        gbc.setState(0x8b25, 0xa142, 0x1f30, 0x2afb, 0xc5f2, 0x3442, 0x1, 0x0);
        gbc.writeMem(0x8b25, { 0x91 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa142, gbc.sp());
        EXPECT(0x8b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8b25));
        // 91 0111
        gbc.setState(0x2e62, 0xc9a3, 0x8a30, 0x2674, 0x9a1b, 0x3552, 0x1, 0x1);
        gbc.writeMem(0x2e62, { 0x91 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc9a3, gbc.sp());
        EXPECT(0x2e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0112
        gbc.setState(0x4357, 0x4007, 0xb10, 0x4151, 0xa492, 0x4f3e, 0x0, 0x0);
        gbc.writeMem(0x4357, { 0x91 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4007, gbc.sp());
        EXPECT(0x4358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0113
        gbc.setState(0x13cd, 0x9233, 0xb660, 0x524d, 0xcd86, 0xc523, 0x0, 0x0);
        gbc.writeMem(0x13cd, { 0x91 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9233, gbc.sp());
        EXPECT(0x13ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0114
        gbc.setState(0xe8bb, 0x894b, 0xfdc0, 0xc043, 0xf60f, 0x13d2, 0x1, 0x1);
        gbc.writeMem(0xe8bb, { 0x91 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x894b, gbc.sp());
        EXPECT(0xe8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe8bb));
        // 91 0115
        gbc.setState(0x475b, 0xc863, 0x1380, 0xc06f, 0x5270, 0x95e9, 0x0, 0x1);
        gbc.writeMem(0x475b, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc863, gbc.sp());
        EXPECT(0x475c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0116
        gbc.setState(0xba76, 0xeb7c, 0xd380, 0xe4e5, 0x6263, 0xdf06, 0x0, 0x1);
        gbc.writeMem(0xba76, { 0x91 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xeb7c, gbc.sp());
        EXPECT(0xba77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xba76));
        // 91 0117
        gbc.setState(0x7e57, 0xf68, 0x7840, 0xaf7b, 0xb5ab, 0xcb15, 0x1, 0x1);
        gbc.writeMem(0x7e57, { 0x91 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf68, gbc.sp());
        EXPECT(0x7e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0118
        gbc.setState(0x8793, 0x46fb, 0x6ef0, 0xd33b, 0xee3b, 0xaab, 0x0, 0x0);
        gbc.writeMem(0x8793, { 0x91 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x46fb, gbc.sp());
        EXPECT(0x8794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8793));
        // 91 0119
        gbc.setState(0x3ae2, 0x77a5, 0x6840, 0xefbe, 0x8f0, 0xf7ff, 0x0, 0x1);
        gbc.writeMem(0x3ae2, { 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x77a5, gbc.sp());
        EXPECT(0x3ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 011A
        gbc.setState(0x21a8, 0x9d0a, 0xb70, 0xd599, 0xf846, 0xb9c7, 0x1, 0x1);
        gbc.writeMem(0x21a8, { 0x91 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9d0a, gbc.sp());
        EXPECT(0x21a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 011B
        gbc.setState(0x2a13, 0xd6a1, 0x6aa0, 0x7afe, 0xdbbb, 0x7d2b, 0x0, 0x0);
        gbc.writeMem(0x2a13, { 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd6a1, gbc.sp());
        EXPECT(0x2a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 011D
        gbc.setState(0x9e0a, 0x72cd, 0xada0, 0x76d8, 0x5e6d, 0xde4c, 0x0, 0x1);
        gbc.writeMem(0x9e0a, { 0x91 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x72cd, gbc.sp());
        EXPECT(0x9e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9e0a));
        // 91 011E
        gbc.setState(0x10b, 0xfe77, 0xe7f0, 0x67d1, 0xd9d3, 0x651d, 0x1, 0x1);
        gbc.writeMem(0x10b, { 0x91 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfe77, gbc.sp());
        EXPECT(0x10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 011F
        gbc.setState(0x34c7, 0x83d9, 0x1fe0, 0xc115, 0xa644, 0x90d6, 0x0, 0x0);
        gbc.writeMem(0x34c7, { 0x91 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x83d9, gbc.sp());
        EXPECT(0x34c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0120
        gbc.setState(0x6241, 0x9893, 0x6f0, 0xe689, 0x129, 0xbabd, 0x0, 0x0);
        gbc.writeMem(0x6241, { 0x91 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9893, gbc.sp());
        EXPECT(0x6242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0122
        gbc.setState(0xeca, 0xfe8a, 0xad40, 0xaced, 0x98be, 0x366d, 0x1, 0x0);
        gbc.writeMem(0xeca, { 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfe8a, gbc.sp());
        EXPECT(0xecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0123
        gbc.setState(0x8d57, 0x597a, 0x5750, 0x8fbc, 0x7683, 0xebf7, 0x1, 0x0);
        gbc.writeMem(0x8d57, { 0x91 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x597a, gbc.sp());
        EXPECT(0x8d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8d57));
        // 91 0124
        gbc.setState(0x87a3, 0x6d23, 0xf940, 0x5fd7, 0xf2f6, 0x9435, 0x1, 0x1);
        gbc.writeMem(0x87a3, { 0x91 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6d23, gbc.sp());
        EXPECT(0x87a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x87a3));
        // 91 0125
        gbc.setState(0x3962, 0x2384, 0x40e0, 0x3da, 0x9c1, 0xd003, 0x1, 0x0);
        gbc.writeMem(0x3962, { 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2384, gbc.sp());
        EXPECT(0x3963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0126
        gbc.setState(0x4381, 0x7e52, 0x92b0, 0x61b1, 0x1def, 0x7b99, 0x1, 0x0);
        gbc.writeMem(0x4381, { 0x91 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7e52, gbc.sp());
        EXPECT(0x4382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0127
        gbc.setState(0x7497, 0x5023, 0xca60, 0xc749, 0x6c25, 0xb41d, 0x1, 0x0);
        gbc.writeMem(0x7497, { 0x91 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5023, gbc.sp());
        EXPECT(0x7498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0128
        gbc.setState(0xd405, 0xb1d0, 0x66d0, 0x8b13, 0xeadb, 0x28b2, 0x0, 0x1);
        gbc.writeMem(0xd405, { 0x91 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb1d0, gbc.sp());
        EXPECT(0xd406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd405));
        // 91 0129
        gbc.setState(0xa1c6, 0xa2d2, 0x8010, 0xa8a0, 0x3820, 0x9f82, 0x1, 0x1);
        gbc.writeMem(0xa1c6, { 0x91 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa2d2, gbc.sp());
        EXPECT(0xa1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa1c6));
        // 91 012A
        gbc.setState(0xe16e, 0xf353, 0xea90, 0x66f4, 0x7843, 0xb23f, 0x0, 0x1);
        gbc.writeMem(0xe16e, { 0x91 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf353, gbc.sp());
        EXPECT(0xe16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe16e));
        // 91 012B
        gbc.setState(0x559f, 0x714b, 0x4500, 0x56c6, 0xe33d, 0x3204, 0x1, 0x1);
        gbc.writeMem(0x559f, { 0x91 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x714b, gbc.sp());
        EXPECT(0x55a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 012C
        gbc.setState(0xe9df, 0x82dd, 0x15d0, 0xb2c9, 0xff35, 0x78dc, 0x1, 0x0);
        gbc.writeMem(0xe9df, { 0x91 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x82dd, gbc.sp());
        EXPECT(0xe9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe9df));
        // 91 012D
        gbc.setState(0x87b4, 0xfff, 0x84e0, 0xca2e, 0x220d, 0x359d, 0x1, 0x1);
        gbc.writeMem(0x87b4, { 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfff, gbc.sp());
        EXPECT(0x87b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x87b4));
        // 91 012F
        gbc.setState(0x2e4c, 0x50de, 0x20, 0x5109, 0x6966, 0x54b6, 0x1, 0x1);
        gbc.writeMem(0x2e4c, { 0x91 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x50de, gbc.sp());
        EXPECT(0x2e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0130
        gbc.setState(0x2019, 0x3db, 0x1da0, 0xabb2, 0x7a34, 0x45c4, 0x1, 0x1);
        gbc.writeMem(0x2019, { 0x91 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3db, gbc.sp());
        EXPECT(0x201a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0131
        gbc.setState(0x3ccb, 0x2eac, 0xa570, 0x7982, 0xa1c4, 0x5272, 0x0, 0x1);
        gbc.writeMem(0x3ccb, { 0x91 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2eac, gbc.sp());
        EXPECT(0x3ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0132
        gbc.setState(0xe18f, 0x254b, 0x4400, 0x78f2, 0x1bb9, 0x36d1, 0x1, 0x1);
        gbc.writeMem(0xe18f, { 0x91 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x254b, gbc.sp());
        EXPECT(0xe190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe18f));
        // 91 0133
        gbc.setState(0x53d6, 0xc58d, 0x360, 0xd4f, 0x6401, 0xb872, 0x1, 0x1);
        gbc.writeMem(0x53d6, { 0x91 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc58d, gbc.sp());
        EXPECT(0x53d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0134
        gbc.setState(0x61d1, 0x2c54, 0x7920, 0x76c5, 0xde2c, 0x3b98, 0x1, 0x1);
        gbc.writeMem(0x61d1, { 0x91 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2c54, gbc.sp());
        EXPECT(0x61d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0135
        gbc.setState(0x5f8a, 0x34d2, 0x49f0, 0x96f5, 0x44d7, 0x8d7c, 0x1, 0x1);
        gbc.writeMem(0x5f8a, { 0x91 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x34d2, gbc.sp());
        EXPECT(0x5f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0136
        gbc.setState(0xcbaa, 0xbae0, 0x2260, 0x301b, 0x8623, 0x5f1, 0x0, 0x0);
        gbc.writeMem(0xcbaa, { 0x91 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbae0, gbc.sp());
        EXPECT(0xcbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcbaa));
        // 91 0137
        gbc.setState(0xa8dd, 0xa413, 0xf120, 0x1c3a, 0xf2aa, 0xb2ab, 0x0, 0x1);
        gbc.writeMem(0xa8dd, { 0x91 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa413, gbc.sp());
        EXPECT(0xa8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa8dd));
        // 91 0138
        gbc.setState(0x5e09, 0xb17d, 0xbea0, 0x4def, 0x2151, 0xdd24, 0x0, 0x1);
        gbc.writeMem(0x5e09, { 0x91 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb17d, gbc.sp());
        EXPECT(0x5e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0139
        gbc.setState(0x55c4, 0x5272, 0x9640, 0x417c, 0x33aa, 0x6569, 0x0, 0x1);
        gbc.writeMem(0x55c4, { 0x91 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5272, gbc.sp());
        EXPECT(0x55c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 013A
        gbc.setState(0x1396, 0x9bd3, 0x5910, 0x7121, 0x687d, 0x5b64, 0x1, 0x0);
        gbc.writeMem(0x1396, { 0x91 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9bd3, gbc.sp());
        EXPECT(0x1397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 013B
        gbc.setState(0x9540, 0x5a93, 0x5640, 0xb1f4, 0x3447, 0x9c5f, 0x0, 0x0);
        gbc.writeMem(0x9540, { 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5a93, gbc.sp());
        EXPECT(0x9541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9540));
        // 91 013D
        gbc.setState(0xa07c, 0x8174, 0xd260, 0x84f4, 0xdfaa, 0x39ec, 0x1, 0x0);
        gbc.writeMem(0xa07c, { 0x91 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8174, gbc.sp());
        EXPECT(0xa07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa07c));
        // 91 013E
        gbc.setState(0x4c68, 0x133e, 0xfcb0, 0xda7c, 0x2e4a, 0x2974, 0x0, 0x0);
        gbc.writeMem(0x4c68, { 0x91 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x133e, gbc.sp());
        EXPECT(0x4c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 013F
        gbc.setState(0x8d31, 0x9cb6, 0xc9e0, 0x1103, 0x3a55, 0x203b, 0x1, 0x0);
        gbc.writeMem(0x8d31, { 0x91 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9cb6, gbc.sp());
        EXPECT(0x8d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8d31));
        // 91 0140
        gbc.setState(0x8731, 0x93ff, 0xa610, 0x110f, 0x2ed7, 0xaa46, 0x0, 0x1);
        gbc.writeMem(0x8731, { 0x91 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x93ff, gbc.sp());
        EXPECT(0x8732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8731));
        // 91 0141
        gbc.setState(0x22aa, 0x1976, 0xd710, 0x2fbe, 0x8c15, 0xc166, 0x0, 0x0);
        gbc.writeMem(0x22aa, { 0x91 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1976, gbc.sp());
        EXPECT(0x22ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0142
        gbc.setState(0xc8d2, 0xc380, 0x2fa0, 0x6f82, 0x3fe1, 0xd6ca, 0x0, 0x1);
        gbc.writeMem(0xc8d2, { 0x91 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc380, gbc.sp());
        EXPECT(0xc8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc8d2));
        // 91 0143
        gbc.setState(0x806c, 0x5c99, 0xb300, 0x5c4, 0xebfa, 0xc2c7, 0x1, 0x0);
        gbc.writeMem(0x806c, { 0x91 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5c99, gbc.sp());
        EXPECT(0x806d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x806c));
        // 91 0144
        gbc.setState(0xaae1, 0x3eca, 0xbb40, 0x8424, 0x1e32, 0x67cf, 0x0, 0x1);
        gbc.writeMem(0xaae1, { 0x91 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3eca, gbc.sp());
        EXPECT(0xaae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xaae1));
        // 91 0145
        gbc.setState(0xb207, 0x9b8c, 0x5480, 0x8e90, 0xaa36, 0x61, 0x1, 0x1);
        gbc.writeMem(0xb207, { 0x91 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9b8c, gbc.sp());
        EXPECT(0xb208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb207));
        // 91 0146
        gbc.setState(0x4372, 0xd512, 0xee10, 0x4a77, 0xf3e8, 0xeeeb, 0x1, 0x1);
        gbc.writeMem(0x4372, { 0x91 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd512, gbc.sp());
        EXPECT(0x4373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0147
        gbc.setState(0x2207, 0x11ec, 0x66e0, 0xa797, 0xd4c1, 0xdb60, 0x1, 0x0);
        gbc.writeMem(0x2207, { 0x91 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x11ec, gbc.sp());
        EXPECT(0x2208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0148
        gbc.setState(0xa1a5, 0x9abd, 0xae20, 0x18d0, 0xe03f, 0xc99e, 0x1, 0x1);
        gbc.writeMem(0xa1a5, { 0x91 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9abd, gbc.sp());
        EXPECT(0xa1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa1a5));
        // 91 014A
        gbc.setState(0xcda1, 0x5fd3, 0xf3d0, 0x3126, 0xe8fd, 0xd127, 0x0, 0x0);
        gbc.writeMem(0xcda1, { 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5fd3, gbc.sp());
        EXPECT(0xcda2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcda1));
        // 91 014B
        gbc.setState(0xe7, 0xf9ba, 0x18d0, 0x2626, 0x3e6f, 0x888a, 0x1, 0x0);
        gbc.writeMem(0xe7, { 0x91 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf9ba, gbc.sp());
        EXPECT(0xe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 014C
        gbc.setState(0x784c, 0x827b, 0xaa40, 0xccd3, 0xea4c, 0xd6b8, 0x1, 0x1);
        gbc.writeMem(0x784c, { 0x91 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x827b, gbc.sp());
        EXPECT(0x784d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 014D
        gbc.setState(0xa8fc, 0xccd5, 0x96f0, 0xc72a, 0x1e0c, 0xdabd, 0x1, 0x0);
        gbc.writeMem(0xa8fc, { 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xccd5, gbc.sp());
        EXPECT(0xa8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa8fc));
        // 91 014E
        gbc.setState(0x5208, 0x3e6a, 0xa1c0, 0x74de, 0xcdcb, 0x6540, 0x0, 0x0);
        gbc.writeMem(0x5208, { 0x91 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3e6a, gbc.sp());
        EXPECT(0x5209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 014F
        gbc.setState(0x64d2, 0xd4d6, 0x25a0, 0xafa6, 0x7124, 0x4af0, 0x0, 0x0);
        gbc.writeMem(0x64d2, { 0x91 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd4d6, gbc.sp());
        EXPECT(0x64d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0150
        gbc.setState(0xd103, 0x60cc, 0xf090, 0xfaeb, 0x4bc7, 0x77d7, 0x1, 0x0);
        gbc.writeMem(0xd103, { 0x91 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x60cc, gbc.sp());
        EXPECT(0xd104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd103));
        // 91 0151
        gbc.setState(0xea79, 0x983b, 0x5010, 0x4d06, 0xe140, 0xf2b1, 0x0, 0x0);
        gbc.writeMem(0xea79, { 0x91 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x983b, gbc.sp());
        EXPECT(0xea7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xea79));
        // 91 0152
        gbc.setState(0x8d5b, 0xf21b, 0xc9c0, 0x131f, 0xdda3, 0x1812, 0x0, 0x0);
        gbc.writeMem(0x8d5b, { 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf21b, gbc.sp());
        EXPECT(0x8d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8d5b));
        // 91 0153
        gbc.setState(0xa846, 0x3ae3, 0x2900, 0xff5d, 0x9a8e, 0x3dbb, 0x1, 0x1);
        gbc.writeMem(0xa846, { 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3ae3, gbc.sp());
        EXPECT(0xa847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa846));
        // 91 0156
        gbc.setState(0xb26f, 0xb556, 0xd710, 0x32ba, 0x14ce, 0xa922, 0x0, 0x0);
        gbc.writeMem(0xb26f, { 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb556, gbc.sp());
        EXPECT(0xb270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb26f));
        // 91 0158
        gbc.setState(0x84e, 0x6080, 0xca60, 0xe165, 0xd828, 0x3e44, 0x0, 0x0);
        gbc.writeMem(0x84e, { 0x91 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6080, gbc.sp());
        EXPECT(0x84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0159
        gbc.setState(0xb694, 0x2545, 0x3b90, 0xf1e5, 0x6ea4, 0xb9a7, 0x0, 0x0);
        gbc.writeMem(0xb694, { 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2545, gbc.sp());
        EXPECT(0xb695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb694));
        // 91 015A
        gbc.setState(0x7185, 0x3389, 0xedc0, 0x2610, 0x7958, 0xc93d, 0x0, 0x1);
        gbc.writeMem(0x7185, { 0x91 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3389, gbc.sp());
        EXPECT(0x7186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 015B
        gbc.setState(0x905d, 0xa699, 0x6390, 0xbb0c, 0x3ae9, 0x1913, 0x0, 0x0);
        gbc.writeMem(0x905d, { 0x91 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa699, gbc.sp());
        EXPECT(0x905e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x905d));
        // 91 015C
        gbc.setState(0x8ad4, 0x1a8c, 0xee20, 0xd421, 0xdcb0, 0x96ea, 0x1, 0x1);
        gbc.writeMem(0x8ad4, { 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1a8c, gbc.sp());
        EXPECT(0x8ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8ad4));
        // 91 015D
        gbc.setState(0x77c5, 0x3ce5, 0x2bf0, 0xabc7, 0xd9a5, 0xb843, 0x0, 0x0);
        gbc.writeMem(0x77c5, { 0x91 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3ce5, gbc.sp());
        EXPECT(0x77c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 015E
        gbc.setState(0x3d3c, 0x2d02, 0x39c0, 0x47dd, 0xd8a4, 0x8b61, 0x1, 0x1);
        gbc.writeMem(0x3d3c, { 0x91 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2d02, gbc.sp());
        EXPECT(0x3d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 015F
        gbc.setState(0xb4b0, 0xf683, 0x44f0, 0x1dea, 0xd983, 0xb214, 0x1, 0x1);
        gbc.writeMem(0xb4b0, { 0x91 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf683, gbc.sp());
        EXPECT(0xb4b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb4b0));
        // 91 0160
        gbc.setState(0x85e2, 0xe1b2, 0x5de0, 0xdf76, 0x23cb, 0x9f23, 0x1, 0x0);
        gbc.writeMem(0x85e2, { 0x91 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe1b2, gbc.sp());
        EXPECT(0x85e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x85e2));
        // 91 0161
        gbc.setState(0xb003, 0x2d2e, 0xb560, 0x7d5f, 0x612a, 0x9a24, 0x1, 0x1);
        gbc.writeMem(0xb003, { 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2d2e, gbc.sp());
        EXPECT(0xb004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb003));
        // 91 0163
        gbc.setState(0x9b9a, 0xea5e, 0xadf0, 0xd8dd, 0x7c5c, 0x5365, 0x0, 0x0);
        gbc.writeMem(0x9b9a, { 0x91 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xea5e, gbc.sp());
        EXPECT(0x9b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9b9a));
        // 91 0164
        gbc.setState(0x1874, 0xac14, 0x3e30, 0xce5, 0x7187, 0xdecc, 0x1, 0x1);
        gbc.writeMem(0x1874, { 0x91 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xac14, gbc.sp());
        EXPECT(0x1875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0165
        gbc.setState(0x3553, 0xa553, 0xd5e0, 0x53f3, 0x884c, 0x2a4, 0x0, 0x1);
        gbc.writeMem(0x3553, { 0x91 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa553, gbc.sp());
        EXPECT(0x3554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0166
        gbc.setState(0x2950, 0xa823, 0x8de0, 0xa6df, 0xd8ff, 0xb985, 0x0, 0x1);
        gbc.writeMem(0x2950, { 0x91 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa823, gbc.sp());
        EXPECT(0x2951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0167
        gbc.setState(0x15df, 0x1091, 0xc070, 0x601a, 0xad85, 0xf092, 0x1, 0x0);
        gbc.writeMem(0x15df, { 0x91 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1091, gbc.sp());
        EXPECT(0x15e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0169
        gbc.setState(0x41d1, 0x61b6, 0x7f10, 0x8588, 0xaae8, 0xc7f1, 0x0, 0x1);
        gbc.writeMem(0x41d1, { 0x91 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x61b6, gbc.sp());
        EXPECT(0x41d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 016A
        gbc.setState(0x4803, 0xdf2c, 0xdf90, 0xc42d, 0x8440, 0xd74f, 0x1, 0x0);
        gbc.writeMem(0x4803, { 0x91 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdf2c, gbc.sp());
        EXPECT(0x4804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 016B
        gbc.setState(0x681e, 0x2be8, 0x150, 0xca4b, 0x5a6, 0x1164, 0x0, 0x0);
        gbc.writeMem(0x681e, { 0x91 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2be8, gbc.sp());
        EXPECT(0x681f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 016C
        gbc.setState(0x6751, 0xb633, 0x430, 0x6264, 0x3169, 0x7a6c, 0x1, 0x1);
        gbc.writeMem(0x6751, { 0x91 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb633, gbc.sp());
        EXPECT(0x6752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 016E
        gbc.setState(0xd1e5, 0xacb0, 0xa980, 0x58db, 0xc163, 0xe675, 0x1, 0x0);
        gbc.writeMem(0xd1e5, { 0x91 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xacb0, gbc.sp());
        EXPECT(0xd1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd1e5));
        // 91 016F
        gbc.setState(0x14f1, 0x6752, 0x79a0, 0xfe90, 0xc1d9, 0xa2b4, 0x1, 0x0);
        gbc.writeMem(0x14f1, { 0x91 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6752, gbc.sp());
        EXPECT(0x14f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0170
        gbc.setState(0xa9c9, 0x64ff, 0x6750, 0x3c86, 0xe2f4, 0xdb79, 0x0, 0x0);
        gbc.writeMem(0xa9c9, { 0x91 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x64ff, gbc.sp());
        EXPECT(0xa9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa9c9));
        // 91 0171
        gbc.setState(0xdce4, 0xf40a, 0x49d0, 0x1db0, 0xe195, 0xc619, 0x0, 0x0);
        gbc.writeMem(0xdce4, { 0x91 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf40a, gbc.sp());
        EXPECT(0xdce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdce4));
        // 91 0172
        gbc.setState(0x3de3, 0x1670, 0x8cb0, 0x68d3, 0x6735, 0x8861, 0x1, 0x0);
        gbc.writeMem(0x3de3, { 0x91 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1670, gbc.sp());
        EXPECT(0x3de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0174
        gbc.setState(0x8a9a, 0x8969, 0x7dc0, 0xbf28, 0xabce, 0xedaa, 0x0, 0x1);
        gbc.writeMem(0x8a9a, { 0x91 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8969, gbc.sp());
        EXPECT(0x8a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8a9a));
        // 91 0175
        gbc.setState(0xdc7, 0x20ec, 0x6f50, 0x71d5, 0x78d5, 0x56c5, 0x0, 0x0);
        gbc.writeMem(0xdc7, { 0x91 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x20ec, gbc.sp());
        EXPECT(0xdc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0176
        gbc.setState(0x2ead, 0x8ec2, 0x99e0, 0x3acc, 0x6d28, 0xfbdf, 0x1, 0x0);
        gbc.writeMem(0x2ead, { 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8ec2, gbc.sp());
        EXPECT(0x2eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0177
        gbc.setState(0x764a, 0x5400, 0xb9e0, 0x99fa, 0x31cf, 0x99f4, 0x1, 0x1);
        gbc.writeMem(0x764a, { 0x91 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5400, gbc.sp());
        EXPECT(0x764b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0178
        gbc.setState(0xa81a, 0xb27c, 0xcd00, 0x3c99, 0x2145, 0xfbe, 0x1, 0x0);
        gbc.writeMem(0xa81a, { 0x91 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb27c, gbc.sp());
        EXPECT(0xa81b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa81a));
        // 91 0179
        gbc.setState(0xb601, 0xc8f6, 0x8b0, 0xab8d, 0xb5d6, 0x14f1, 0x0, 0x1);
        gbc.writeMem(0xb601, { 0x91 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc8f6, gbc.sp());
        EXPECT(0xb602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb601));
        // 91 017A
        gbc.setState(0x1cfc, 0x11d5, 0xcd40, 0x9f85, 0x9fa8, 0xc742, 0x0, 0x0);
        gbc.writeMem(0x1cfc, { 0x91 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x11d5, gbc.sp());
        EXPECT(0x1cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 017B
        gbc.setState(0xe598, 0x7a56, 0xde60, 0x93a, 0xdbbe, 0x7ac2, 0x0, 0x0);
        gbc.writeMem(0xe598, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7a56, gbc.sp());
        EXPECT(0xe599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe598));
        // 91 017C
        gbc.setState(0xdb06, 0xadff, 0x20b0, 0xddeb, 0x362, 0x2276, 0x1, 0x1);
        gbc.writeMem(0xdb06, { 0x91 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xadff, gbc.sp());
        EXPECT(0xdb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdb06));
        // 91 017D
        gbc.setState(0x1afe, 0x9a9, 0x6730, 0xab28, 0xf840, 0xfcf4, 0x1, 0x0);
        gbc.writeMem(0x1afe, { 0x91 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9a9, gbc.sp());
        EXPECT(0x1aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 017E
        gbc.setState(0x7f20, 0x6d2a, 0x81d0, 0x832a, 0x7edb, 0x50c3, 0x0, 0x1);
        gbc.writeMem(0x7f20, { 0x91 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6d2a, gbc.sp());
        EXPECT(0x7f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 017F
        gbc.setState(0xe415, 0xebed, 0x8db0, 0x9fa2, 0x59d5, 0x4553, 0x1, 0x0);
        gbc.writeMem(0xe415, { 0x91 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xebed, gbc.sp());
        EXPECT(0xe416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe415));
        // 91 0180
        gbc.setState(0xd52f, 0x8ff5, 0xe6d0, 0xa20e, 0xdf72, 0xc7bf, 0x1, 0x0);
        gbc.writeMem(0xd52f, { 0x91 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8ff5, gbc.sp());
        EXPECT(0xd530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd52f));
        // 91 0182
        gbc.setState(0x33a2, 0xde7b, 0xa820, 0xb0b0, 0xaa5d, 0x7254, 0x0, 0x0);
        gbc.writeMem(0x33a2, { 0x91 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xde7b, gbc.sp());
        EXPECT(0x33a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0183
        gbc.setState(0x4c88, 0x3ea0, 0x5e70, 0xa415, 0x92f1, 0xf2f, 0x0, 0x1);
        gbc.writeMem(0x4c88, { 0x91 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3ea0, gbc.sp());
        EXPECT(0x4c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0184
        gbc.setState(0xc53, 0xa6b2, 0x2e00, 0x5084, 0x9808, 0xa7de, 0x0, 0x1);
        gbc.writeMem(0xc53, { 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa6b2, gbc.sp());
        EXPECT(0xc54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0186
        gbc.setState(0x23cb, 0x5fc0, 0x6420, 0xa891, 0x7503, 0x284b, 0x1, 0x0);
        gbc.writeMem(0x23cb, { 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0x23cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0187
        gbc.setState(0xaa0b, 0xa6ff, 0xb0b0, 0xce8, 0x1b27, 0xb66f, 0x0, 0x1);
        gbc.writeMem(0xaa0b, { 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa6ff, gbc.sp());
        EXPECT(0xaa0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xaa0b));
        // 91 0188
        gbc.setState(0x5cce, 0x503a, 0x9b00, 0x21f, 0x45c4, 0x2d24, 0x0, 0x1);
        gbc.writeMem(0x5cce, { 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x503a, gbc.sp());
        EXPECT(0x5ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0189
        gbc.setState(0x62d8, 0x19d0, 0x5af0, 0xb510, 0x73d9, 0x1ec8, 0x0, 0x1);
        gbc.writeMem(0x62d8, { 0x91 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x19d0, gbc.sp());
        EXPECT(0x62d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 018A
        gbc.setState(0x240c, 0xb302, 0x2a60, 0xbd21, 0xbbe8, 0x9e07, 0x1, 0x1);
        gbc.writeMem(0x240c, { 0x91 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb302, gbc.sp());
        EXPECT(0x240d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 018B
        gbc.setState(0x177c, 0xa3c3, 0xd3c0, 0xccd4, 0x6b7f, 0x231a, 0x0, 0x0);
        gbc.writeMem(0x177c, { 0x91 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa3c3, gbc.sp());
        EXPECT(0x177d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 018C
        gbc.setState(0x7fcf, 0xc8ae, 0xff50, 0x3d4a, 0xe1e8, 0x3ff5, 0x1, 0x0);
        gbc.writeMem(0x7fcf, { 0x91 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc8ae, gbc.sp());
        EXPECT(0x7fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 018E
        gbc.setState(0x2c81, 0xe1cf, 0x6290, 0xaf96, 0x9f32, 0x42eb, 0x1, 0x0);
        gbc.writeMem(0x2c81, { 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe1cf, gbc.sp());
        EXPECT(0x2c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 018F
        gbc.setState(0xc424, 0x7427, 0x66d0, 0x4800, 0xeeec, 0x9a6, 0x1, 0x0);
        gbc.writeMem(0xc424, { 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7427, gbc.sp());
        EXPECT(0xc425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc424));
        // 91 0190
        gbc.setState(0x652b, 0xdc06, 0x180, 0x3d57, 0xf068, 0xa285, 0x1, 0x1);
        gbc.writeMem(0x652b, { 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdc06, gbc.sp());
        EXPECT(0x652c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0191
        gbc.setState(0xbf8c, 0xafce, 0xb140, 0xb117, 0x76e8, 0x7d9a, 0x0, 0x1);
        gbc.writeMem(0xbf8c, { 0x91 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xafce, gbc.sp());
        EXPECT(0xbf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbf8c));
        // 91 0193
        gbc.setState(0x4977, 0x1544, 0x2b30, 0xb582, 0xe179, 0x2551, 0x0, 0x1);
        gbc.writeMem(0x4977, { 0x91 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1544, gbc.sp());
        EXPECT(0x4978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0194
        gbc.setState(0xa06e, 0xf1b, 0x91c0, 0xd838, 0xce36, 0xec41, 0x1, 0x1);
        gbc.writeMem(0xa06e, { 0x91 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf1b, gbc.sp());
        EXPECT(0xa06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa06e));
        // 91 0195
        gbc.setState(0x2fd0, 0xf02c, 0x2490, 0x4cff, 0x6ce0, 0xd91d, 0x1, 0x1);
        gbc.writeMem(0x2fd0, { 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf02c, gbc.sp());
        EXPECT(0x2fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0196
        gbc.setState(0xbf72, 0xbcd0, 0x99b0, 0x3a35, 0x744b, 0x600a, 0x1, 0x0);
        gbc.writeMem(0xbf72, { 0x91 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbcd0, gbc.sp());
        EXPECT(0xbf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbf72));
        // 91 0197
        gbc.setState(0x8ea0, 0xa406, 0x9300, 0xaffc, 0xc7a, 0x5f9, 0x0, 0x1);
        gbc.writeMem(0x8ea0, { 0x91 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa406, gbc.sp());
        EXPECT(0x8ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8ea0));
        // 91 0198
        gbc.setState(0x7175, 0x5bdb, 0x720, 0x1e58, 0x92f9, 0xbf51, 0x1, 0x1);
        gbc.writeMem(0x7175, { 0x91 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5bdb, gbc.sp());
        EXPECT(0x7176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 019A
        gbc.setState(0x734b, 0x3af9, 0x1940, 0x18d4, 0x9cbb, 0xd042, 0x0, 0x1);
        gbc.writeMem(0x734b, { 0x91 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0x734c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 019B
        gbc.setState(0xb8fb, 0xef1f, 0x7280, 0x59cd, 0x32a2, 0xc217, 0x0, 0x1);
        gbc.writeMem(0xb8fb, { 0x91 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xef1f, gbc.sp());
        EXPECT(0xb8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb8fb));
        // 91 019C
        gbc.setState(0xef97, 0x1532, 0x1e70, 0xfec1, 0x8a0d, 0x860d, 0x1, 0x0);
        gbc.writeMem(0xef97, { 0x91 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1532, gbc.sp());
        EXPECT(0xef98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xef97));
        // 91 019D
        gbc.setState(0x7288, 0x47ae, 0xbea0, 0x8623, 0x8339, 0x29a7, 0x1, 0x0);
        gbc.writeMem(0x7288, { 0x91 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x47ae, gbc.sp());
        EXPECT(0x7289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 019E
        gbc.setState(0xb880, 0xfcac, 0xc260, 0xf877, 0xb78b, 0xd0bc, 0x1, 0x1);
        gbc.writeMem(0xb880, { 0x91 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfcac, gbc.sp());
        EXPECT(0xb881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb880));
        // 91 019F
        gbc.setState(0x7cf9, 0xdda8, 0xb830, 0x5f72, 0x20ab, 0xb9da, 0x0, 0x1);
        gbc.writeMem(0x7cf9, { 0x91 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdda8, gbc.sp());
        EXPECT(0x7cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01A0
        gbc.setState(0xd10e, 0xf6b5, 0x2a00, 0x631a, 0x4a54, 0x4126, 0x0, 0x1);
        gbc.writeMem(0xd10e, { 0x91 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf6b5, gbc.sp());
        EXPECT(0xd10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd10e));
        // 91 01A1
        gbc.setState(0x3f67, 0x5e90, 0x67e0, 0x214b, 0x41a1, 0xea16, 0x1, 0x1);
        gbc.writeMem(0x3f67, { 0x91 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5e90, gbc.sp());
        EXPECT(0x3f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01A2
        gbc.setState(0x5b84, 0xb606, 0x9010, 0x710, 0x9318, 0x5024, 0x0, 0x0);
        gbc.writeMem(0x5b84, { 0x91 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb606, gbc.sp());
        EXPECT(0x5b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01A4
        gbc.setState(0xc8f3, 0x7647, 0x5e60, 0x7dc8, 0x71b3, 0x8ae4, 0x1, 0x0);
        gbc.writeMem(0xc8f3, { 0x91 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7647, gbc.sp());
        EXPECT(0xc8f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc8f3));
        // 91 01A6
        gbc.setState(0xe182, 0x170f, 0x9fa0, 0x832d, 0x48c, 0x83bd, 0x0, 0x0);
        gbc.writeMem(0xe182, { 0x91 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x170f, gbc.sp());
        EXPECT(0xe183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe182));
        // 91 01A7
        gbc.setState(0x3333, 0x4882, 0x30f0, 0x9eac, 0xf4e0, 0xc77f, 0x0, 0x0);
        gbc.writeMem(0x3333, { 0x91 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4882, gbc.sp());
        EXPECT(0x3334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01A8
        gbc.setState(0x42e1, 0xcae6, 0xb440, 0xb55, 0x72b5, 0x583e, 0x1, 0x0);
        gbc.writeMem(0x42e1, { 0x91 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcae6, gbc.sp());
        EXPECT(0x42e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01A9
        gbc.setState(0xc642, 0xe90a, 0x6ce0, 0x37b2, 0x654d, 0xb59f, 0x1, 0x0);
        gbc.writeMem(0xc642, { 0x91 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe90a, gbc.sp());
        EXPECT(0xc643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc642));
        // 91 01AA
        gbc.setState(0x1f6f, 0xa65, 0x34b0, 0x63f5, 0x6c5d, 0x725a, 0x1, 0x1);
        gbc.writeMem(0x1f6f, { 0x91 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa65, gbc.sp());
        EXPECT(0x1f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01AB
        gbc.setState(0xb106, 0xc2f0, 0x8b0, 0x7198, 0x88c0, 0x61d1, 0x1, 0x0);
        gbc.writeMem(0xb106, { 0x91 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc2f0, gbc.sp());
        EXPECT(0xb107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb106));
        // 91 01AC
        gbc.setState(0x4b2a, 0x7b2, 0xd930, 0x4b73, 0xd3ca, 0xa115, 0x0, 0x1);
        gbc.writeMem(0x4b2a, { 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7b2, gbc.sp());
        EXPECT(0x4b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01AD
        gbc.setState(0x8212, 0x98d5, 0x3d30, 0x51c6, 0xa01f, 0xdd02, 0x0, 0x0);
        gbc.writeMem(0x8212, { 0x91 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x98d5, gbc.sp());
        EXPECT(0x8213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8212));
        // 91 01AE
        gbc.setState(0xab79, 0x4101, 0x8ee0, 0xc881, 0x27c9, 0xc8b8, 0x1, 0x0);
        gbc.writeMem(0xab79, { 0x91 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4101, gbc.sp());
        EXPECT(0xab7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xab79));
        // 91 01AF
        gbc.setState(0xe82d, 0x3f20, 0x1ca0, 0xfad, 0x27ec, 0xff70, 0x0, 0x1);
        gbc.writeMem(0xe82d, { 0x91 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3f20, gbc.sp());
        EXPECT(0xe82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe82d));
        // 91 01B0
        gbc.setState(0x9a1f, 0xbfa4, 0x7e60, 0x3166, 0xd9a5, 0xed56, 0x1, 0x1);
        gbc.writeMem(0x9a1f, { 0x91 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbfa4, gbc.sp());
        EXPECT(0x9a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9a1f));
        // 91 01B1
        gbc.setState(0x4873, 0x62dd, 0x270, 0x2cae, 0x9339, 0xf1e6, 0x0, 0x0);
        gbc.writeMem(0x4873, { 0x91 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x62dd, gbc.sp());
        EXPECT(0x4874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01B2
        gbc.setState(0xe79e, 0xf21e, 0x2430, 0x7be0, 0xd79d, 0x6a96, 0x0, 0x1);
        gbc.writeMem(0xe79e, { 0x91 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf21e, gbc.sp());
        EXPECT(0xe79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe79e));
        // 91 01B3
        gbc.setState(0x6b70, 0x41e4, 0xf0a0, 0xa1e9, 0xc50f, 0x16f3, 0x1, 0x1);
        gbc.writeMem(0x6b70, { 0x91 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x41e4, gbc.sp());
        EXPECT(0x6b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01B4
        gbc.setState(0xd032, 0xb5e0, 0x7de0, 0x13bf, 0x8127, 0xc27c, 0x1, 0x0);
        gbc.writeMem(0xd032, { 0x91 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb5e0, gbc.sp());
        EXPECT(0xd033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd032));
        // 91 01B5
        gbc.setState(0x5c09, 0x837c, 0x1720, 0xac3d, 0xb4d6, 0x92d, 0x0, 0x1);
        gbc.writeMem(0x5c09, { 0x91 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x837c, gbc.sp());
        EXPECT(0x5c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01B6
        gbc.setState(0x4a79, 0x48a2, 0x1640, 0x6b26, 0x22b6, 0x74ca, 0x0, 0x0);
        gbc.writeMem(0x4a79, { 0x91 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x48a2, gbc.sp());
        EXPECT(0x4a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01B7
        gbc.setState(0x2b06, 0x1c43, 0x7af0, 0x755f, 0xe16e, 0x7cd9, 0x0, 0x0);
        gbc.writeMem(0x2b06, { 0x91 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1c43, gbc.sp());
        EXPECT(0x2b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01B8
        gbc.setState(0xbbf5, 0x3901, 0x5210, 0xdcf7, 0xac7c, 0x6f97, 0x1, 0x1);
        gbc.writeMem(0xbbf5, { 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3901, gbc.sp());
        EXPECT(0xbbf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbbf5));
        // 91 01BA
        gbc.setState(0x662e, 0x5ad0, 0xca70, 0x50d7, 0xee42, 0x492e, 0x1, 0x1);
        gbc.writeMem(0x662e, { 0x91 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5ad0, gbc.sp());
        EXPECT(0x662f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01BB
        gbc.setState(0xba43, 0x57f2, 0x5ab0, 0x5f72, 0x5737, 0x67ef, 0x0, 0x0);
        gbc.writeMem(0xba43, { 0x91 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x57f2, gbc.sp());
        EXPECT(0xba44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xba43));
        // 91 01BD
        gbc.setState(0x6d3c, 0xeb6e, 0x9f40, 0x4237, 0x14be, 0x4180, 0x0, 0x0);
        gbc.writeMem(0x6d3c, { 0x91 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xeb6e, gbc.sp());
        EXPECT(0x6d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01BE
        gbc.setState(0x9283, 0xe546, 0x85b0, 0xe68, 0x42f2, 0x4c5a, 0x1, 0x1);
        gbc.writeMem(0x9283, { 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0x9284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9283));
        // 91 01BF
        gbc.setState(0x8a89, 0xec05, 0xdd70, 0x785f, 0x999c, 0x7c3c, 0x1, 0x1);
        gbc.writeMem(0x8a89, { 0x91 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xec05, gbc.sp());
        EXPECT(0x8a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8a89));
        // 91 01C0
        gbc.setState(0xb675, 0x4c13, 0x9e50, 0x7607, 0x3178, 0xd9ec, 0x0, 0x0);
        gbc.writeMem(0xb675, { 0x91 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4c13, gbc.sp());
        EXPECT(0xb676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb675));
        // 91 01C1
        gbc.setState(0x7981, 0xf6df, 0x67b0, 0x8e01, 0xc2a4, 0xdfae, 0x1, 0x0);
        gbc.writeMem(0x7981, { 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf6df, gbc.sp());
        EXPECT(0x7982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01C2
        gbc.setState(0x6ac6, 0xb898, 0xb440, 0xed64, 0x2ee2, 0x8644, 0x1, 0x0);
        gbc.writeMem(0x6ac6, { 0x91 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb898, gbc.sp());
        EXPECT(0x6ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01C3
        gbc.setState(0x75e3, 0xdb54, 0x90, 0xcd3d, 0x1087, 0x33ba, 0x0, 0x1);
        gbc.writeMem(0x75e3, { 0x91 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdb54, gbc.sp());
        EXPECT(0x75e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01C4
        gbc.setState(0x5f1c, 0x90b9, 0x9920, 0x247d, 0x1ff5, 0x65b, 0x0, 0x0);
        gbc.writeMem(0x5f1c, { 0x91 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x90b9, gbc.sp());
        EXPECT(0x5f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01C5
        gbc.setState(0xb017, 0x359a, 0x4210, 0xc47a, 0xdab, 0x9fb8, 0x0, 0x0);
        gbc.writeMem(0xb017, { 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x359a, gbc.sp());
        EXPECT(0xb018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb017));
        // 91 01C6
        gbc.setState(0x7ad2, 0x1e6e, 0x660, 0xb323, 0xd4ee, 0xeda3, 0x1, 0x0);
        gbc.writeMem(0x7ad2, { 0x91 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1e6e, gbc.sp());
        EXPECT(0x7ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01C7
        gbc.setState(0xe592, 0x6c1d, 0x9d40, 0x87, 0x6e34, 0xa01e, 0x0, 0x1);
        gbc.writeMem(0xe592, { 0x91 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6c1d, gbc.sp());
        EXPECT(0xe593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe592));
        // 91 01C8
        gbc.setState(0xc5f6, 0xdf0c, 0x3ec0, 0x3af2, 0xf9d, 0x296a, 0x0, 0x1);
        gbc.writeMem(0xc5f6, { 0x91 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdf0c, gbc.sp());
        EXPECT(0xc5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc5f6));
        // 91 01C9
        gbc.setState(0x471d, 0x43e8, 0x24e0, 0x31cd, 0x85fa, 0xaa89, 0x0, 0x1);
        gbc.writeMem(0x471d, { 0x91 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x43e8, gbc.sp());
        EXPECT(0x471e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01CA
        gbc.setState(0x39ac, 0xc95e, 0xd3d0, 0xc7be, 0x5c2e, 0xae1a, 0x0, 0x0);
        gbc.writeMem(0x39ac, { 0x91 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc95e, gbc.sp());
        EXPECT(0x39ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01CB
        gbc.setState(0x1b8d, 0xe2a4, 0xc020, 0x6284, 0x361e, 0xc235, 0x1, 0x0);
        gbc.writeMem(0x1b8d, { 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe2a4, gbc.sp());
        EXPECT(0x1b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01CC
        gbc.setState(0xd3ee, 0x82f8, 0x5a00, 0xba9f, 0x96c2, 0x5c23, 0x1, 0x1);
        gbc.writeMem(0xd3ee, { 0x91 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x82f8, gbc.sp());
        EXPECT(0xd3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd3ee));
        // 91 01CD
        gbc.setState(0xd5a1, 0x2e4d, 0xde70, 0x5a70, 0x550a, 0x519e, 0x1, 0x0);
        gbc.writeMem(0xd5a1, { 0x91 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2e4d, gbc.sp());
        EXPECT(0xd5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd5a1));
        // 91 01CE
        gbc.setState(0x35f7, 0x8e2f, 0x7f10, 0xa54, 0x3765, 0xb0f3, 0x0, 0x0);
        gbc.writeMem(0x35f7, { 0x91 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8e2f, gbc.sp());
        EXPECT(0x35f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01CF
        gbc.setState(0xc54e, 0x33c7, 0x1ff0, 0xffce, 0x7f83, 0xce80, 0x0, 0x1);
        gbc.writeMem(0xc54e, { 0x91 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x33c7, gbc.sp());
        EXPECT(0xc54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc54e));
        // 91 01D0
        gbc.setState(0x74ad, 0xc664, 0x7070, 0xdfe8, 0x7ecf, 0x49cb, 0x0, 0x0);
        gbc.writeMem(0x74ad, { 0x91 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc664, gbc.sp());
        EXPECT(0x74ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01D1
        gbc.setState(0x1c06, 0xac2, 0x8660, 0xac57, 0x8c3c, 0x2863, 0x1, 0x1);
        gbc.writeMem(0x1c06, { 0x91 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xac2, gbc.sp());
        EXPECT(0x1c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01D2
        gbc.setState(0xb5a9, 0x8e0, 0x5d70, 0x7245, 0xfce7, 0xe00f, 0x1, 0x1);
        gbc.writeMem(0xb5a9, { 0x91 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8e0, gbc.sp());
        EXPECT(0xb5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb5a9));
        // 91 01D3
        gbc.setState(0xd121, 0xb930, 0x7da0, 0xe572, 0x6929, 0xc8a9, 0x1, 0x0);
        gbc.writeMem(0xd121, { 0x91 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb930, gbc.sp());
        EXPECT(0xd122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd121));
        // 91 01D4
        gbc.setState(0xd43, 0x1b7f, 0x1e10, 0xe460, 0xb476, 0x3902, 0x0, 0x1);
        gbc.writeMem(0xd43, { 0x91 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1b7f, gbc.sp());
        EXPECT(0xd44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01D5
        gbc.setState(0xd565, 0x2623, 0xabe0, 0x98fb, 0xc594, 0xc0ed, 0x0, 0x1);
        gbc.writeMem(0xd565, { 0x91 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2623, gbc.sp());
        EXPECT(0xd566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd565));
        // 91 01D6
        gbc.setState(0xee82, 0xb2ad, 0xa4f0, 0x481, 0xbcde, 0x731f, 0x0, 0x1);
        gbc.writeMem(0xee82, { 0x91 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb2ad, gbc.sp());
        EXPECT(0xee83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xee82));
        // 91 01D7
        gbc.setState(0x2070, 0x72e4, 0x6bf0, 0x2239, 0xd516, 0x4ad3, 0x1, 0x0);
        gbc.writeMem(0x2070, { 0x91 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x72e4, gbc.sp());
        EXPECT(0x2071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01D8
        gbc.setState(0xa889, 0xe2d2, 0x6c20, 0xbbe2, 0x4654, 0x5007, 0x1, 0x0);
        gbc.writeMem(0xa889, { 0x91 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe2d2, gbc.sp());
        EXPECT(0xa88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa889));
        // 91 01D9
        gbc.setState(0xbbbf, 0x1b1e, 0x6e0, 0x3b65, 0xacbb, 0x35a5, 0x0, 0x0);
        gbc.writeMem(0xbbbf, { 0x91 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1b1e, gbc.sp());
        EXPECT(0xbbc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbbbf));
        // 91 01DA
        gbc.setState(0x186f, 0x4610, 0x41e0, 0x88e3, 0x1ee7, 0x60c1, 0x0, 0x0);
        gbc.writeMem(0x186f, { 0x91 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4610, gbc.sp());
        EXPECT(0x1870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01DB
        gbc.setState(0x27d1, 0xf929, 0x1bf0, 0x5799, 0xaf55, 0x8b17, 0x0, 0x0);
        gbc.writeMem(0x27d1, { 0x91 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf929, gbc.sp());
        EXPECT(0x27d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01DC
        gbc.setState(0x7c7d, 0xf0dc, 0xb4c0, 0x32d7, 0x9173, 0x3749, 0x1, 0x0);
        gbc.writeMem(0x7c7d, { 0x91 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf0dc, gbc.sp());
        EXPECT(0x7c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01DD
        gbc.setState(0xb1cd, 0x45a4, 0xd090, 0x971f, 0xd85a, 0xf06d, 0x1, 0x0);
        gbc.writeMem(0xb1cd, { 0x91 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x45a4, gbc.sp());
        EXPECT(0xb1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb1cd));
        // 91 01DE
        gbc.setState(0x8106, 0x59b8, 0x85a0, 0x3eca, 0x9646, 0xf893, 0x1, 0x0);
        gbc.writeMem(0x8106, { 0x91 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x59b8, gbc.sp());
        EXPECT(0x8107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8106));
        // 91 01DF
        gbc.setState(0xfae, 0xccb1, 0x3e40, 0xbc8, 0xbed6, 0xaae0, 0x1, 0x0);
        gbc.writeMem(0xfae, { 0x91 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xccb1, gbc.sp());
        EXPECT(0xfaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01E1
        gbc.setState(0xc6b3, 0x5c00, 0xaf60, 0xadcc, 0x7501, 0x33, 0x0, 0x0);
        gbc.writeMem(0xc6b3, { 0x91 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5c00, gbc.sp());
        EXPECT(0xc6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc6b3));
        // 91 01E2
        gbc.setState(0xd55, 0x2151, 0xdc80, 0xb605, 0x3deb, 0x16b7, 0x0, 0x1);
        gbc.writeMem(0xd55, { 0x91 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2151, gbc.sp());
        EXPECT(0xd56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01E3
        gbc.setState(0x2267, 0x9412, 0x3140, 0xc5fb, 0xf53, 0x7f97, 0x0, 0x1);
        gbc.writeMem(0x2267, { 0x91 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9412, gbc.sp());
        EXPECT(0x2268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01E4
        gbc.setState(0x259d, 0x303c, 0xea40, 0x1b47, 0x392e, 0xf9c3, 0x1, 0x0);
        gbc.writeMem(0x259d, { 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x303c, gbc.sp());
        EXPECT(0x259e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01E5
        gbc.setState(0x84e3, 0x3adf, 0x3b40, 0x2a15, 0xd02c, 0x2f3e, 0x1, 0x0);
        gbc.writeMem(0x84e3, { 0x91 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3adf, gbc.sp());
        EXPECT(0x84e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x84e3));
        // 91 01E6
        gbc.setState(0x9216, 0x2c39, 0xb310, 0x3577, 0x261d, 0x944b, 0x1, 0x0);
        gbc.writeMem(0x9216, { 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2c39, gbc.sp());
        EXPECT(0x9217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9216));
        // 91 01E7
        gbc.setState(0x8b10, 0x4339, 0xb3a0, 0x6bfa, 0x90a3, 0x6d63, 0x0, 0x1);
        gbc.writeMem(0x8b10, { 0x91 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4339, gbc.sp());
        EXPECT(0x8b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8b10));
        // 91 01E8
        gbc.setState(0x7a56, 0x7e13, 0x2730, 0xcd84, 0xc2fb, 0xee86, 0x1, 0x1);
        gbc.writeMem(0x7a56, { 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7e13, gbc.sp());
        EXPECT(0x7a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01E9
        gbc.setState(0xd20e, 0x162f, 0xff80, 0xb485, 0x8d0b, 0xa46d, 0x1, 0x0);
        gbc.writeMem(0xd20e, { 0x91 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x162f, gbc.sp());
        EXPECT(0xd20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd20e));
        // 91 01EA
        gbc.setState(0x4aaa, 0x27f8, 0xb7b0, 0x7639, 0xf95a, 0x751c, 0x1, 0x1);
        gbc.writeMem(0x4aaa, { 0x91 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x27f8, gbc.sp());
        EXPECT(0x4aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01EB
        gbc.setState(0x2a9c, 0xd006, 0x39a0, 0xdd7a, 0x4979, 0x7dc1, 0x1, 0x0);
        gbc.writeMem(0x2a9c, { 0x91 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd006, gbc.sp());
        EXPECT(0x2a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01EC
        gbc.setState(0x7c92, 0x236f, 0x2a20, 0xd35d, 0x3148, 0xb5b9, 0x1, 0x1);
        gbc.writeMem(0x7c92, { 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x236f, gbc.sp());
        EXPECT(0x7c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01ED
        gbc.setState(0x7a5b, 0xbc9f, 0xd830, 0xccfd, 0x506a, 0xba78, 0x0, 0x0);
        gbc.writeMem(0x7a5b, { 0x91 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbc9f, gbc.sp());
        EXPECT(0x7a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01EE
        gbc.setState(0x4a34, 0x705d, 0xb8e0, 0xfc18, 0xcbb4, 0xab76, 0x1, 0x0);
        gbc.writeMem(0x4a34, { 0x91 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x705d, gbc.sp());
        EXPECT(0x4a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01EF
        gbc.setState(0xa730, 0xc74e, 0x2a00, 0x8e5a, 0xee89, 0xbc40, 0x0, 0x1);
        gbc.writeMem(0xa730, { 0x91 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc74e, gbc.sp());
        EXPECT(0xa731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa730));
        // 91 01F0
        gbc.setState(0x5752, 0x6dce, 0xc730, 0xd0f7, 0xf65f, 0xe6f7, 0x1, 0x0);
        gbc.writeMem(0x5752, { 0x91 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6dce, gbc.sp());
        EXPECT(0x5753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01F1
        gbc.setState(0x9583, 0xef3, 0xb930, 0xdfe1, 0x39f2, 0xae11, 0x0, 0x1);
        gbc.writeMem(0x9583, { 0x91 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xef3, gbc.sp());
        EXPECT(0x9584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9583));
        // 91 01F3
        gbc.setState(0x139e, 0xc63e, 0x1250, 0xd09, 0x36b0, 0x7d, 0x0, 0x1);
        gbc.writeMem(0x139e, { 0x91 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc63e, gbc.sp());
        EXPECT(0x139f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01F4
        gbc.setState(0x7c2f, 0xfc55, 0xf420, 0x53e4, 0x6df2, 0x4e6, 0x1, 0x1);
        gbc.writeMem(0x7c2f, { 0x91 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfc55, gbc.sp());
        EXPECT(0x7c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01F5
        gbc.setState(0xa6c6, 0x95f5, 0x2b40, 0x5e56, 0xbbb1, 0x82c0, 0x0, 0x1);
        gbc.writeMem(0xa6c6, { 0x91 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x95f5, gbc.sp());
        EXPECT(0xa6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa6c6));
        // 91 01F6
        gbc.setState(0x522b, 0xc2bf, 0xedc0, 0xfc8b, 0x8692, 0xa494, 0x1, 0x0);
        gbc.writeMem(0x522b, { 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc2bf, gbc.sp());
        EXPECT(0x522c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01F7
        gbc.setState(0x62c1, 0x863a, 0xfb20, 0x8fd5, 0x210c, 0x8d0b, 0x1, 0x1);
        gbc.writeMem(0x62c1, { 0x91 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x863a, gbc.sp());
        EXPECT(0x62c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01F8
        gbc.setState(0x417c, 0x72e7, 0x570, 0x97fc, 0x2e69, 0x80e6, 0x1, 0x1);
        gbc.writeMem(0x417c, { 0x91 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x72e7, gbc.sp());
        EXPECT(0x417d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01F9
        gbc.setState(0x718e, 0x3125, 0x6a50, 0xf999, 0x76d9, 0x46b1, 0x0, 0x0);
        gbc.writeMem(0x718e, { 0x91 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3125, gbc.sp());
        EXPECT(0x718f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01FB
        gbc.setState(0x2ccb, 0xfae4, 0x14d0, 0x14b2, 0x6434, 0xf4bc, 0x1, 0x0);
        gbc.writeMem(0x2ccb, { 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfae4, gbc.sp());
        EXPECT(0x2ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01FC
        gbc.setState(0x895d, 0x78cd, 0xc860, 0x6f6f, 0x56c4, 0x19b0, 0x1, 0x1);
        gbc.writeMem(0x895d, { 0x91 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x78cd, gbc.sp());
        EXPECT(0x895e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x895d));
        // 91 01FD
        gbc.setState(0x3247, 0x1a0, 0xec10, 0xe79f, 0xc093, 0x1e0f, 0x1, 0x0);
        gbc.writeMem(0x3247, { 0x91 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1a0, gbc.sp());
        EXPECT(0x3248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 01FE
        gbc.setState(0x1303, 0x2d71, 0x5ed0, 0x62b8, 0xe0c6, 0x5e81, 0x1, 0x1);
        gbc.writeMem(0x1303, { 0x91 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2d71, gbc.sp());
        EXPECT(0x1304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 01FF
        gbc.setState(0xcad7, 0x20cd, 0x3d30, 0xf2d8, 0xaf05, 0xaaf7, 0x0, 0x1);
        gbc.writeMem(0xcad7, { 0x91 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x20cd, gbc.sp());
        EXPECT(0xcad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcad7));
        // 91 0200
        gbc.setState(0x9e6b, 0x805a, 0x5ed0, 0x7bb0, 0x48df, 0x9524, 0x0, 0x1);
        gbc.writeMem(0x9e6b, { 0x91 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x805a, gbc.sp());
        EXPECT(0x9e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9e6b));
        // 91 0201
        gbc.setState(0x59f5, 0xa11d, 0xc840, 0x88f5, 0xe19e, 0xc675, 0x0, 0x1);
        gbc.writeMem(0x59f5, { 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa11d, gbc.sp());
        EXPECT(0x59f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0202
        gbc.setState(0x4303, 0x17e2, 0xb070, 0x375e, 0x3f4, 0xf7cd, 0x0, 0x0);
        gbc.writeMem(0x4303, { 0x91 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x17e2, gbc.sp());
        EXPECT(0x4304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0203
        gbc.setState(0x73fb, 0xfc67, 0x4870, 0xd4f2, 0xd42c, 0x5141, 0x0, 0x0);
        gbc.writeMem(0x73fb, { 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfc67, gbc.sp());
        EXPECT(0x73fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0204
        gbc.setState(0xc6b8, 0xe90c, 0x20c0, 0x9c22, 0x3fa8, 0x2532, 0x1, 0x0);
        gbc.writeMem(0xc6b8, { 0x91 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe90c, gbc.sp());
        EXPECT(0xc6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc6b8));
        // 91 0205
        gbc.setState(0x1320, 0x795c, 0x1d90, 0x47f3, 0x3214, 0xa69, 0x1, 0x0);
        gbc.writeMem(0x1320, { 0x91 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x795c, gbc.sp());
        EXPECT(0x1321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0206
        gbc.setState(0xa263, 0xca27, 0xee00, 0xb015, 0x6dab, 0xd261, 0x1, 0x1);
        gbc.writeMem(0xa263, { 0x91 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xca27, gbc.sp());
        EXPECT(0xa264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa263));
        // 91 0207
        gbc.setState(0xd6b, 0xc456, 0x8950, 0x1eb8, 0x1b7b, 0xe83e, 0x1, 0x0);
        gbc.writeMem(0xd6b, { 0x91 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc456, gbc.sp());
        EXPECT(0xd6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0208
        gbc.setState(0xb529, 0x9699, 0x9ed0, 0xe933, 0x5532, 0xaf46, 0x1, 0x1);
        gbc.writeMem(0xb529, { 0x91 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9699, gbc.sp());
        EXPECT(0xb52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb529));
        // 91 020A
        gbc.setState(0x5433, 0x7303, 0x4000, 0xa91c, 0xe13, 0x8dfd, 0x1, 0x0);
        gbc.writeMem(0x5433, { 0x91 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7303, gbc.sp());
        EXPECT(0x5434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 020B
        gbc.setState(0xe8e5, 0x8ef8, 0x2d10, 0x6356, 0x80c1, 0x3dfd, 0x1, 0x0);
        gbc.writeMem(0xe8e5, { 0x91 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8ef8, gbc.sp());
        EXPECT(0xe8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe8e5));
        // 91 020C
        gbc.setState(0x4a14, 0x7ebf, 0xe440, 0x7fb8, 0x1731, 0xc5f0, 0x0, 0x1);
        gbc.writeMem(0x4a14, { 0x91 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7ebf, gbc.sp());
        EXPECT(0x4a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 020D
        gbc.setState(0xc341, 0xb9d4, 0xd170, 0xade3, 0xcae8, 0xa926, 0x1, 0x0);
        gbc.writeMem(0xc341, { 0x91 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb9d4, gbc.sp());
        EXPECT(0xc342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc341));
        // 91 020E
        gbc.setState(0x5d16, 0x3e65, 0xfe10, 0x2929, 0x6956, 0xea2a, 0x0, 0x0);
        gbc.writeMem(0x5d16, { 0x91 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3e65, gbc.sp());
        EXPECT(0x5d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 020F
        gbc.setState(0x566f, 0x81a0, 0xf350, 0xaa79, 0xf14e, 0xa36a, 0x0, 0x0);
        gbc.writeMem(0x566f, { 0x91 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x81a0, gbc.sp());
        EXPECT(0x5670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0210
        gbc.setState(0x26d1, 0x6251, 0xdde0, 0x991c, 0xd99, 0xa88f, 0x1, 0x1);
        gbc.writeMem(0x26d1, { 0x91 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6251, gbc.sp());
        EXPECT(0x26d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0211
        gbc.setState(0x98ea, 0x4957, 0xa1a0, 0x47cf, 0x97f9, 0xe738, 0x0, 0x1);
        gbc.writeMem(0x98ea, { 0x91 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4957, gbc.sp());
        EXPECT(0x98eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x98ea));
        // 91 0212
        gbc.setState(0xb2b8, 0x546e, 0x9620, 0x99f7, 0xf2d8, 0xbeba, 0x0, 0x0);
        gbc.writeMem(0xb2b8, { 0x91 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x546e, gbc.sp());
        EXPECT(0xb2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb2b8));
        // 91 0213
        gbc.setState(0xbce8, 0x1835, 0x1b70, 0x165b, 0x3ab9, 0x62a9, 0x0, 0x1);
        gbc.writeMem(0xbce8, { 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1835, gbc.sp());
        EXPECT(0xbce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbce8));
        // 91 0214
        gbc.setState(0xcafe, 0xe0a4, 0xfd50, 0xbe7c, 0xdcee, 0x543f, 0x0, 0x0);
        gbc.writeMem(0xcafe, { 0x91 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe0a4, gbc.sp());
        EXPECT(0xcaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcafe));
        // 91 0215
        gbc.setState(0x2ca, 0xea82, 0x6e20, 0x1f02, 0x2597, 0x4e18, 0x0, 0x0);
        gbc.writeMem(0x2ca, { 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xea82, gbc.sp());
        EXPECT(0x2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0216
        gbc.setState(0x9d27, 0xc81f, 0xc870, 0x235f, 0x601b, 0xad63, 0x1, 0x1);
        gbc.writeMem(0x9d27, { 0x91 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc81f, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9d27));
        // 91 0217
        gbc.setState(0x2809, 0xb135, 0x9900, 0xc618, 0xb739, 0x2f4b, 0x0, 0x1);
        gbc.writeMem(0x2809, { 0x91 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb135, gbc.sp());
        EXPECT(0x280a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0218
        gbc.setState(0x2cf6, 0xd280, 0xfc60, 0xf4bd, 0x22e4, 0x254a, 0x1, 0x0);
        gbc.writeMem(0x2cf6, { 0x91 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd280, gbc.sp());
        EXPECT(0x2cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0219
        gbc.setState(0xe9e0, 0xd808, 0xcd00, 0x26f8, 0xa20d, 0xd18c, 0x0, 0x1);
        gbc.writeMem(0xe9e0, { 0x91 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd808, gbc.sp());
        EXPECT(0xe9e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe9e0));
        // 91 021A
        gbc.setState(0xdbac, 0xef17, 0x3a30, 0x9dda, 0xb9f7, 0xb2c1, 0x1, 0x0);
        gbc.writeMem(0xdbac, { 0x91 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xef17, gbc.sp());
        EXPECT(0xdbad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdbac));
        // 91 021B
        gbc.setState(0x1bd1, 0x14b6, 0x2aa0, 0x2c60, 0x5f2c, 0xcdda, 0x0, 0x0);
        gbc.writeMem(0x1bd1, { 0x91 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x14b6, gbc.sp());
        EXPECT(0x1bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 021C
        gbc.setState(0x79f1, 0x5d18, 0xca0, 0x8f31, 0xc52d, 0x1cbc, 0x1, 0x0);
        gbc.writeMem(0x79f1, { 0x91 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5d18, gbc.sp());
        EXPECT(0x79f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 021D
        gbc.setState(0x54df, 0x4e7, 0x4970, 0x1135, 0x96a8, 0xd609, 0x0, 0x1);
        gbc.writeMem(0x54df, { 0x91 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4e7, gbc.sp());
        EXPECT(0x54e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 021E
        gbc.setState(0xe4d9, 0x7687, 0xb6e0, 0x9b71, 0xa90, 0xd815, 0x1, 0x1);
        gbc.writeMem(0xe4d9, { 0x91 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7687, gbc.sp());
        EXPECT(0xe4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe4d9));
        // 91 021F
        gbc.setState(0xdf6, 0x9054, 0x7e90, 0xbea7, 0xe649, 0xa42b, 0x0, 0x0);
        gbc.writeMem(0xdf6, { 0x91 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9054, gbc.sp());
        EXPECT(0xdf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0220
        gbc.setState(0x3a48, 0x7d18, 0xc6d0, 0xb77b, 0xef62, 0x3378, 0x1, 0x1);
        gbc.writeMem(0x3a48, { 0x91 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7d18, gbc.sp());
        EXPECT(0x3a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0221
        gbc.setState(0x74d0, 0xdaa7, 0xcb90, 0x549, 0x5d90, 0x3267, 0x0, 0x0);
        gbc.writeMem(0x74d0, { 0x91 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdaa7, gbc.sp());
        EXPECT(0x74d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0222
        gbc.setState(0xa305, 0x1857, 0x79d0, 0x280d, 0x6a79, 0xd30, 0x1, 0x1);
        gbc.writeMem(0xa305, { 0x91 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1857, gbc.sp());
        EXPECT(0xa306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa305));
        // 91 0223
        gbc.setState(0x67c1, 0x88e4, 0x3d00, 0xf445, 0xfe61, 0xe398, 0x1, 0x1);
        gbc.writeMem(0x67c1, { 0x91 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x88e4, gbc.sp());
        EXPECT(0x67c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0224
        gbc.setState(0x86a6, 0x694e, 0x76b0, 0x38d2, 0x7e13, 0xb639, 0x0, 0x1);
        gbc.writeMem(0x86a6, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x694e, gbc.sp());
        EXPECT(0x86a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x86a6));
        // 91 0225
        gbc.setState(0x4de8, 0x8a3c, 0x5eb0, 0x5d1b, 0x2988, 0x8bb6, 0x1, 0x0);
        gbc.writeMem(0x4de8, { 0x91 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8a3c, gbc.sp());
        EXPECT(0x4de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0227
        gbc.setState(0x880c, 0x87b1, 0x47e0, 0x8622, 0x2b8a, 0xfca3, 0x1, 0x1);
        gbc.writeMem(0x880c, { 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x87b1, gbc.sp());
        EXPECT(0x880d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x880c));
        // 91 0228
        gbc.setState(0x1705, 0x151, 0x7eb0, 0x1d64, 0xbfeb, 0x1299, 0x1, 0x1);
        gbc.writeMem(0x1705, { 0x91 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x151, gbc.sp());
        EXPECT(0x1706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 022A
        gbc.setState(0xe08, 0xfee1, 0x7af0, 0xec2a, 0x2c44, 0x1a1d, 0x0, 0x0);
        gbc.writeMem(0xe08, { 0x91 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfee1, gbc.sp());
        EXPECT(0xe09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 022B
        gbc.setState(0xdbbc, 0x7e07, 0xba70, 0x8932, 0x53a2, 0xfa99, 0x1, 0x1);
        gbc.writeMem(0xdbbc, { 0x91 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7e07, gbc.sp());
        EXPECT(0xdbbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdbbc));
        // 91 022D
        gbc.setState(0x3e7b, 0x605, 0xce90, 0x8e49, 0x8b43, 0x49fa, 0x1, 0x1);
        gbc.writeMem(0x3e7b, { 0x91 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x605, gbc.sp());
        EXPECT(0x3e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 022E
        gbc.setState(0xb203, 0x3185, 0xdab0, 0x1b30, 0x66b8, 0xcaba, 0x1, 0x1);
        gbc.writeMem(0xb203, { 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3185, gbc.sp());
        EXPECT(0xb204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb203));
        // 91 022F
        gbc.setState(0xb099, 0x458e, 0x3c40, 0x3366, 0xece5, 0x85fb, 0x1, 0x1);
        gbc.writeMem(0xb099, { 0x91 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x458e, gbc.sp());
        EXPECT(0xb09a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb099));
        // 91 0230
        gbc.setState(0x87bc, 0x8de3, 0x6860, 0x3c7a, 0x8, 0x90b7, 0x1, 0x0);
        gbc.writeMem(0x87bc, { 0x91 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8de3, gbc.sp());
        EXPECT(0x87bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x87bc));
        // 91 0231
        gbc.setState(0xe122, 0xd589, 0x6b0, 0xefe0, 0xa595, 0x36da, 0x1, 0x0);
        gbc.writeMem(0xe122, { 0x91 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd589, gbc.sp());
        EXPECT(0xe123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe122));
        // 91 0232
        gbc.setState(0x4561, 0x87fa, 0x5950, 0x698c, 0x7cb9, 0x2371, 0x1, 0x0);
        gbc.writeMem(0x4561, { 0x91 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x87fa, gbc.sp());
        EXPECT(0x4562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0233
        gbc.setState(0xa0a3, 0x158b, 0x7f40, 0x75db, 0xc276, 0xf97b, 0x1, 0x1);
        gbc.writeMem(0xa0a3, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x158b, gbc.sp());
        EXPECT(0xa0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa0a3));
        // 91 0235
        gbc.setState(0x773a, 0x25aa, 0x9310, 0x5ad9, 0xf9e3, 0xbe4c, 0x1, 0x0);
        gbc.writeMem(0x773a, { 0x91 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x25aa, gbc.sp());
        EXPECT(0x773b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0236
        gbc.setState(0xed07, 0x972c, 0x8cc0, 0x2acb, 0xf777, 0x4e69, 0x1, 0x0);
        gbc.writeMem(0xed07, { 0x91 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x972c, gbc.sp());
        EXPECT(0xed08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xed07));
        // 91 0237
        gbc.setState(0xa51d, 0x232a, 0x97a0, 0x6b2e, 0xa744, 0xe6c2, 0x1, 0x0);
        gbc.writeMem(0xa51d, { 0x91 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x232a, gbc.sp());
        EXPECT(0xa51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa51d));
        // 91 0238
        gbc.setState(0xd351, 0x7ae8, 0xc730, 0xc6e3, 0xff4c, 0xbd1b, 0x0, 0x0);
        gbc.writeMem(0xd351, { 0x91 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7ae8, gbc.sp());
        EXPECT(0xd352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd351));
        // 91 0239
        gbc.setState(0x313f, 0xe27f, 0x2080, 0x8c90, 0x6426, 0xdaff, 0x0, 0x1);
        gbc.writeMem(0x313f, { 0x91 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe27f, gbc.sp());
        EXPECT(0x3140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 023A
        gbc.setState(0xe70f, 0xde4a, 0x82c0, 0x1afd, 0x30e2, 0x4282, 0x1, 0x0);
        gbc.writeMem(0xe70f, { 0x91 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xde4a, gbc.sp());
        EXPECT(0xe710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe70f));
        // 91 023B
        gbc.setState(0xd16f, 0xa2a8, 0x4960, 0x1d24, 0x3a6f, 0x634b, 0x1, 0x0);
        gbc.writeMem(0xd16f, { 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa2a8, gbc.sp());
        EXPECT(0xd170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd16f));
        // 91 023C
        gbc.setState(0x17ed, 0x8e42, 0xecb0, 0xe1b, 0xef30, 0xcc68, 0x1, 0x0);
        gbc.writeMem(0x17ed, { 0x91 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8e42, gbc.sp());
        EXPECT(0x17ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 023D
        gbc.setState(0x1344, 0x9685, 0x5900, 0xb068, 0x9d7c, 0xa151, 0x1, 0x1);
        gbc.writeMem(0x1344, { 0x91 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9685, gbc.sp());
        EXPECT(0x1345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 023E
        gbc.setState(0x6110, 0xd8d, 0x4130, 0x9325, 0xab5e, 0x713, 0x1, 0x1);
        gbc.writeMem(0x6110, { 0x91 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd8d, gbc.sp());
        EXPECT(0x6111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 023F
        gbc.setState(0x5ef, 0xd647, 0x6de0, 0x8448, 0xa6ad, 0x3643, 0x0, 0x0);
        gbc.writeMem(0x5ef, { 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd647, gbc.sp());
        EXPECT(0x5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0240
        gbc.setState(0x454b, 0xa07d, 0x6f0, 0xd91d, 0x4908, 0xba06, 0x1, 0x0);
        gbc.writeMem(0x454b, { 0x91 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa07d, gbc.sp());
        EXPECT(0x454c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0241
        gbc.setState(0x32d1, 0x4020, 0xe880, 0x8ee, 0x16ad, 0x2ce, 0x1, 0x0);
        gbc.writeMem(0x32d1, { 0x91 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4020, gbc.sp());
        EXPECT(0x32d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0242
        gbc.setState(0x8eac, 0x3c1b, 0xacb0, 0x2ce, 0xf19b, 0x1286, 0x0, 0x1);
        gbc.writeMem(0x8eac, { 0x91 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3c1b, gbc.sp());
        EXPECT(0x8ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8eac));
        // 91 0243
        gbc.setState(0x759c, 0x8727, 0xa7d0, 0xe122, 0x54f, 0x54bb, 0x1, 0x1);
        gbc.writeMem(0x759c, { 0x91 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8727, gbc.sp());
        EXPECT(0x759d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0244
        gbc.setState(0x4cb4, 0x9307, 0xdc0, 0x3229, 0x76cb, 0x2618, 0x0, 0x1);
        gbc.writeMem(0x4cb4, { 0x91 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9307, gbc.sp());
        EXPECT(0x4cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0245
        gbc.setState(0x5234, 0xb208, 0x2c20, 0xaafa, 0xc92, 0x4bf4, 0x0, 0x1);
        gbc.writeMem(0x5234, { 0x91 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb208, gbc.sp());
        EXPECT(0x5235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0246
        gbc.setState(0x44b1, 0xaea8, 0x77b0, 0x92c2, 0xf841, 0xf465, 0x0, 0x1);
        gbc.writeMem(0x44b1, { 0x91 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xaea8, gbc.sp());
        EXPECT(0x44b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0247
        gbc.setState(0x2d0e, 0x57db, 0x5000, 0xe6a5, 0x7dbd, 0x8690, 0x0, 0x0);
        gbc.writeMem(0x2d0e, { 0x91 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x57db, gbc.sp());
        EXPECT(0x2d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0248
        gbc.setState(0x9dcd, 0x46b3, 0xbc70, 0xaa30, 0x54c, 0xe96f, 0x0, 0x1);
        gbc.writeMem(0x9dcd, { 0x91 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x46b3, gbc.sp());
        EXPECT(0x9dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9dcd));
        // 91 0249
        gbc.setState(0x3fff, 0x17f7, 0x92d0, 0xbd5c, 0xbbc3, 0xf83d, 0x1, 0x1);
        gbc.writeMem(0x3fff, { 0x91 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x17f7, gbc.sp());
        EXPECT(0x4000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 024A
        gbc.setState(0x394e, 0x6f94, 0xbf20, 0x5cec, 0x96ee, 0xef54, 0x1, 0x0);
        gbc.writeMem(0x394e, { 0x91 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6f94, gbc.sp());
        EXPECT(0x394f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 024B
        gbc.setState(0xcafc, 0xdaf6, 0x7880, 0x789d, 0x5471, 0x8429, 0x1, 0x0);
        gbc.writeMem(0xcafc, { 0x91 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdaf6, gbc.sp());
        EXPECT(0xcafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcafc));
        // 91 024C
        gbc.setState(0xad1b, 0x233c, 0x780, 0xb098, 0x7a7, 0xeea7, 0x0, 0x1);
        gbc.writeMem(0xad1b, { 0x91 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x233c, gbc.sp());
        EXPECT(0xad1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xad1b));
        // 91 024D
        gbc.setState(0xb1c5, 0x864c, 0x9b60, 0x8bb5, 0xc4e1, 0x2552, 0x1, 0x1);
        gbc.writeMem(0xb1c5, { 0x91 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x864c, gbc.sp());
        EXPECT(0xb1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb1c5));
        // 91 024E
        gbc.setState(0x8dd9, 0xdd2c, 0x3cd0, 0x7a99, 0x2758, 0x80af, 0x0, 0x0);
        gbc.writeMem(0x8dd9, { 0x91 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdd2c, gbc.sp());
        EXPECT(0x8dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8dd9));
        // 91 024F
        gbc.setState(0x6169, 0xc1dd, 0xb1a0, 0x7200, 0x200f, 0x43e1, 0x1, 0x1);
        gbc.writeMem(0x6169, { 0x91 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc1dd, gbc.sp());
        EXPECT(0x616a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0250
        gbc.setState(0x701d, 0xf9e2, 0xc280, 0x2678, 0x3a4d, 0x1e04, 0x1, 0x0);
        gbc.writeMem(0x701d, { 0x91 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf9e2, gbc.sp());
        EXPECT(0x701e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0251
        gbc.setState(0x5632, 0x299c, 0xde40, 0x498e, 0xc76, 0x5ecf, 0x0, 0x0);
        gbc.writeMem(0x5632, { 0x91 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x299c, gbc.sp());
        EXPECT(0x5633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0252
        gbc.setState(0xe84c, 0xc832, 0xff0, 0xb7a8, 0x4d55, 0x12db, 0x0, 0x0);
        gbc.writeMem(0xe84c, { 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc832, gbc.sp());
        EXPECT(0xe84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe84c));
        // 91 0253
        gbc.setState(0x26ba, 0xbb97, 0x4be0, 0xf8ce, 0x2abf, 0xb357, 0x1, 0x0);
        gbc.writeMem(0x26ba, { 0x91 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbb97, gbc.sp());
        EXPECT(0x26bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0254
        gbc.setState(0xc2fd, 0x1749, 0xc400, 0xd712, 0x224d, 0xe8f2, 0x0, 0x0);
        gbc.writeMem(0xc2fd, { 0x91 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1749, gbc.sp());
        EXPECT(0xc2fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc2fd));
        // 91 0255
        gbc.setState(0x25cb, 0x6993, 0xc850, 0xf21e, 0xf48f, 0xca85, 0x1, 0x1);
        gbc.writeMem(0x25cb, { 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6993, gbc.sp());
        EXPECT(0x25cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0256
        gbc.setState(0x57bc, 0xcd6e, 0x1190, 0x241d, 0x9293, 0x228d, 0x0, 0x0);
        gbc.writeMem(0x57bc, { 0x91 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcd6e, gbc.sp());
        EXPECT(0x57bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0257
        gbc.setState(0x6c9, 0xa6f1, 0x5420, 0xba53, 0xf574, 0x5f43, 0x1, 0x1);
        gbc.writeMem(0x6c9, { 0x91 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa6f1, gbc.sp());
        EXPECT(0x6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0258
        gbc.setState(0x2517, 0x9fc6, 0x9260, 0x8d93, 0x54ac, 0xde9, 0x0, 0x0);
        gbc.writeMem(0x2517, { 0x91 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9fc6, gbc.sp());
        EXPECT(0x2518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 025A
        gbc.setState(0x3504, 0x99ee, 0xc8c0, 0x2fb7, 0x1d3c, 0xbb51, 0x1, 0x1);
        gbc.writeMem(0x3504, { 0x91 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x99ee, gbc.sp());
        EXPECT(0x3505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 025B
        gbc.setState(0xba73, 0x720e, 0x8ec0, 0xa245, 0x1cd8, 0x585c, 0x1, 0x0);
        gbc.writeMem(0xba73, { 0x91 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x720e, gbc.sp());
        EXPECT(0xba74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xba73));
        // 91 025C
        gbc.setState(0xc5ee, 0xfb3f, 0x1810, 0xc2ed, 0x7fb9, 0x2428, 0x1, 0x1);
        gbc.writeMem(0xc5ee, { 0x91 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfb3f, gbc.sp());
        EXPECT(0xc5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc5ee));
        // 91 025D
        gbc.setState(0xebb4, 0x4f15, 0x23d0, 0x354b, 0xfeaa, 0x706a, 0x1, 0x1);
        gbc.writeMem(0xebb4, { 0x91 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4f15, gbc.sp());
        EXPECT(0xebb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xebb4));
        // 91 025E
        gbc.setState(0x487a, 0x155a, 0x87c0, 0x3264, 0xa3d1, 0x727, 0x1, 0x0);
        gbc.writeMem(0x487a, { 0x91 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x155a, gbc.sp());
        EXPECT(0x487b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 025F
        gbc.setState(0x3fc4, 0x17c8, 0xc000, 0xb72, 0x46ae, 0xbcbb, 0x1, 0x0);
        gbc.writeMem(0x3fc4, { 0x91 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x17c8, gbc.sp());
        EXPECT(0x3fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0260
        gbc.setState(0x3dd9, 0x888f, 0xaa20, 0x6c0a, 0xeef3, 0xdab0, 0x0, 0x0);
        gbc.writeMem(0x3dd9, { 0x91 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x888f, gbc.sp());
        EXPECT(0x3dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0261
        gbc.setState(0xecfc, 0x863b, 0x92f0, 0x10f4, 0xd69f, 0xe4de, 0x1, 0x0);
        gbc.writeMem(0xecfc, { 0x91 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x863b, gbc.sp());
        EXPECT(0xecfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xecfc));
        // 91 0262
        gbc.setState(0x5b60, 0x4522, 0xf050, 0x4cff, 0x2ce, 0xc64a, 0x0, 0x1);
        gbc.writeMem(0x5b60, { 0x91 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4522, gbc.sp());
        EXPECT(0x5b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0263
        gbc.setState(0x2904, 0xa707, 0x2690, 0x23d8, 0x40ab, 0x4d81, 0x1, 0x1);
        gbc.writeMem(0x2904, { 0x91 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa707, gbc.sp());
        EXPECT(0x2905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0264
        gbc.setState(0x9ddc, 0xc0a4, 0xc9d0, 0xed4e, 0xd8ff, 0xdcfe, 0x1, 0x0);
        gbc.writeMem(0x9ddc, { 0x91 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc0a4, gbc.sp());
        EXPECT(0x9ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9ddc));
        // 91 0265
        gbc.setState(0x2728, 0xfd75, 0x6710, 0xf4dc, 0xed47, 0xa31a, 0x1, 0x1);
        gbc.writeMem(0x2728, { 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfd75, gbc.sp());
        EXPECT(0x2729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0266
        gbc.setState(0x5daf, 0xac7, 0x3740, 0x59e, 0xe5fd, 0x7de9, 0x0, 0x0);
        gbc.writeMem(0x5daf, { 0x91 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xac7, gbc.sp());
        EXPECT(0x5db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0267
        gbc.setState(0x9b2c, 0xa3c3, 0x4650, 0x148e, 0xe30, 0x22fd, 0x1, 0x0);
        gbc.writeMem(0x9b2c, { 0x91 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa3c3, gbc.sp());
        EXPECT(0x9b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9b2c));
        // 91 0269
        gbc.setState(0x7a93, 0x35f8, 0xaa00, 0x77e, 0x6fea, 0x4cd9, 0x1, 0x1);
        gbc.writeMem(0x7a93, { 0x91 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x35f8, gbc.sp());
        EXPECT(0x7a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 026A
        gbc.setState(0x90c6, 0x63b0, 0x7000, 0x7e1d, 0xb306, 0xb82f, 0x0, 0x0);
        gbc.writeMem(0x90c6, { 0x91 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x63b0, gbc.sp());
        EXPECT(0x90c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x90c6));
        // 91 026B
        gbc.setState(0x487b, 0x55d9, 0x1cb0, 0xc037, 0x4066, 0x498c, 0x0, 0x0);
        gbc.writeMem(0x487b, { 0x91 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x55d9, gbc.sp());
        EXPECT(0x487c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 026C
        gbc.setState(0xe47, 0x4ffc, 0xbf30, 0x7a75, 0x62de, 0x7e20, 0x0, 0x0);
        gbc.writeMem(0xe47, { 0x91 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4ffc, gbc.sp());
        EXPECT(0xe48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 026D
        gbc.setState(0x9401, 0x4fb4, 0x5430, 0x671, 0xb894, 0xf69f, 0x1, 0x1);
        gbc.writeMem(0x9401, { 0x91 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4fb4, gbc.sp());
        EXPECT(0x9402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9401));
        // 91 026E
        gbc.setState(0xe0b8, 0xd979, 0xc00, 0x3811, 0xe898, 0xf5fe, 0x0, 0x1);
        gbc.writeMem(0xe0b8, { 0x91 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd979, gbc.sp());
        EXPECT(0xe0b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe0b8));
        // 91 026F
        gbc.setState(0x9922, 0x4b54, 0xdfa0, 0x3d09, 0x786b, 0x7ad, 0x0, 0x0);
        gbc.writeMem(0x9922, { 0x91 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4b54, gbc.sp());
        EXPECT(0x9923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9922));
        // 91 0270
        gbc.setState(0xd553, 0x5358, 0x6c90, 0x6f34, 0x7d54, 0x738b, 0x0, 0x0);
        gbc.writeMem(0xd553, { 0x91 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5358, gbc.sp());
        EXPECT(0xd554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd553));
        // 91 0271
        gbc.setState(0x5919, 0xd7f8, 0x59a0, 0xc6f0, 0x61d, 0x5093, 0x0, 0x0);
        gbc.writeMem(0x5919, { 0x91 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd7f8, gbc.sp());
        EXPECT(0x591a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0272
        gbc.setState(0xc03c, 0x31dc, 0x27c0, 0x50dd, 0xba62, 0x3e91, 0x1, 0x0);
        gbc.writeMem(0xc03c, { 0x91 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x31dc, gbc.sp());
        EXPECT(0xc03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc03c));
        // 91 0273
        gbc.setState(0x7d08, 0x8670, 0xdab0, 0x8e23, 0x7448, 0xb2d9, 0x1, 0x0);
        gbc.writeMem(0x7d08, { 0x91 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8670, gbc.sp());
        EXPECT(0x7d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0274
        gbc.setState(0xa0dd, 0x2dcc, 0x4320, 0x90d1, 0x5e04, 0xd4a6, 0x1, 0x0);
        gbc.writeMem(0xa0dd, { 0x91 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2dcc, gbc.sp());
        EXPECT(0xa0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa0dd));
        // 91 0275
        gbc.setState(0x9ab3, 0x436b, 0x1b50, 0xf3bf, 0x36ba, 0x39e4, 0x0, 0x1);
        gbc.writeMem(0x9ab3, { 0x91 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x436b, gbc.sp());
        EXPECT(0x9ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9ab3));
        // 91 0276
        gbc.setState(0xba95, 0x7806, 0xa100, 0x7d1f, 0x2ea, 0x7a92, 0x0, 0x0);
        gbc.writeMem(0xba95, { 0x91 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7806, gbc.sp());
        EXPECT(0xba96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xba95));
        // 91 0277
        gbc.setState(0xc2d4, 0x876f, 0xe380, 0x609c, 0x52de, 0x19d8, 0x0, 0x0);
        gbc.writeMem(0xc2d4, { 0x91 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x876f, gbc.sp());
        EXPECT(0xc2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc2d4));
        // 91 0278
        gbc.setState(0x8892, 0x5f73, 0x1d00, 0xb8e5, 0xc0ac, 0x52de, 0x0, 0x0);
        gbc.writeMem(0x8892, { 0x91 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5f73, gbc.sp());
        EXPECT(0x8893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8892));
        // 91 0279
        gbc.setState(0x65c1, 0xafd5, 0xa4a0, 0xd561, 0x39c2, 0xa2c9, 0x0, 0x0);
        gbc.writeMem(0x65c1, { 0x91 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xafd5, gbc.sp());
        EXPECT(0x65c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 027A
        gbc.setState(0xb0a0, 0x8d69, 0xe9c0, 0x9a92, 0x79d5, 0x6c0c, 0x0, 0x1);
        gbc.writeMem(0xb0a0, { 0x91 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8d69, gbc.sp());
        EXPECT(0xb0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb0a0));
        // 91 027B
        gbc.setState(0xcbc1, 0xdf4a, 0x73b0, 0x689, 0xa2d9, 0xf722, 0x0, 0x0);
        gbc.writeMem(0xcbc1, { 0x91 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdf4a, gbc.sp());
        EXPECT(0xcbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcbc1));
        // 91 027C
        gbc.setState(0x2e0d, 0x8205, 0x2a30, 0xe156, 0xb779, 0xac04, 0x1, 0x1);
        gbc.writeMem(0x2e0d, { 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8205, gbc.sp());
        EXPECT(0x2e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 027D
        gbc.setState(0x5df6, 0x3494, 0x95f0, 0x63ab, 0xe6e, 0x7f2d, 0x1, 0x1);
        gbc.writeMem(0x5df6, { 0x91 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3494, gbc.sp());
        EXPECT(0x5df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 027E
        gbc.setState(0x130e, 0x2f7d, 0x3440, 0x566c, 0xe785, 0xc483, 0x0, 0x0);
        gbc.writeMem(0x130e, { 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2f7d, gbc.sp());
        EXPECT(0x130f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 027F
        gbc.setState(0x2fee, 0xfa1b, 0x5fc0, 0x6b69, 0x1dec, 0x9a1c, 0x1, 0x0);
        gbc.writeMem(0x2fee, { 0x91 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfa1b, gbc.sp());
        EXPECT(0x2fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0280
        gbc.setState(0x6bde, 0xc2c4, 0xf7f0, 0xb21c, 0xb2ea, 0x7021, 0x0, 0x1);
        gbc.writeMem(0x6bde, { 0x91 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc2c4, gbc.sp());
        EXPECT(0x6bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0281
        gbc.setState(0x62ec, 0x875e, 0x9790, 0xc7f3, 0x3c93, 0xc1a4, 0x0, 0x1);
        gbc.writeMem(0x62ec, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x875e, gbc.sp());
        EXPECT(0x62ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0282
        gbc.setState(0x14a1, 0x852f, 0x6fb0, 0xa87, 0x48e6, 0xdf8b, 0x1, 0x0);
        gbc.writeMem(0x14a1, { 0x91 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x852f, gbc.sp());
        EXPECT(0x14a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0283
        gbc.setState(0x71a, 0xfcba, 0x3a90, 0x9a9f, 0x9ae7, 0x77a9, 0x0, 0x1);
        gbc.writeMem(0x71a, { 0x91 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfcba, gbc.sp());
        EXPECT(0x71b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0284
        gbc.setState(0xe9fc, 0x3d2f, 0x48e0, 0x230f, 0x9ea7, 0xd069, 0x1, 0x0);
        gbc.writeMem(0xe9fc, { 0x91 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3d2f, gbc.sp());
        EXPECT(0xe9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe9fc));
        // 91 0285
        gbc.setState(0x85f8, 0xf439, 0x8f60, 0xd876, 0x7c54, 0xb6cd, 0x1, 0x0);
        gbc.writeMem(0x85f8, { 0x91 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf439, gbc.sp());
        EXPECT(0x85f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x85f8));
        // 91 0286
        gbc.setState(0x780f, 0x7b17, 0x7de0, 0xc9e0, 0xdbf2, 0xec63, 0x1, 0x1);
        gbc.writeMem(0x780f, { 0x91 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7b17, gbc.sp());
        EXPECT(0x7810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0288
        gbc.setState(0x3363, 0x617, 0xebc0, 0x6fb7, 0x32b2, 0xc4d3, 0x1, 0x0);
        gbc.writeMem(0x3363, { 0x91 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x617, gbc.sp());
        EXPECT(0x3364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0289
        gbc.setState(0x3591, 0x35b, 0x5f20, 0x8de2, 0xa1, 0x5e4f, 0x0, 0x1);
        gbc.writeMem(0x3591, { 0x91 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x35b, gbc.sp());
        EXPECT(0x3592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 028A
        gbc.setState(0x36e5, 0x31d9, 0xd980, 0x4c35, 0xd51, 0x8897, 0x1, 0x0);
        gbc.writeMem(0x36e5, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x31d9, gbc.sp());
        EXPECT(0x36e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 028B
        gbc.setState(0x7a0f, 0x796, 0xecd0, 0x8ef, 0x6c48, 0x911a, 0x0, 0x1);
        gbc.writeMem(0x7a0f, { 0x91 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x796, gbc.sp());
        EXPECT(0x7a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 028C
        gbc.setState(0x41d1, 0x357d, 0x4db0, 0x6b35, 0xd250, 0x722d, 0x0, 0x1);
        gbc.writeMem(0x41d1, { 0x91 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x357d, gbc.sp());
        EXPECT(0x41d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 028D
        gbc.setState(0xa936, 0xbaf4, 0xdd70, 0x6a4e, 0xd490, 0xe1d0, 0x0, 0x1);
        gbc.writeMem(0xa936, { 0x91 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbaf4, gbc.sp());
        EXPECT(0xa937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa936));
        // 91 028E
        gbc.setState(0x95b3, 0xc669, 0xdc0, 0xb81e, 0xa685, 0x3d0b, 0x1, 0x1);
        gbc.writeMem(0x95b3, { 0x91 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc669, gbc.sp());
        EXPECT(0x95b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x95b3));
        // 91 028F
        gbc.setState(0x14a9, 0xf034, 0xf350, 0x248b, 0xf141, 0x67cd, 0x0, 0x1);
        gbc.writeMem(0x14a9, { 0x91 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf034, gbc.sp());
        EXPECT(0x14aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0290
        gbc.setState(0x55dd, 0x6a6, 0xb740, 0xf0fd, 0x944, 0xf5f, 0x1, 0x0);
        gbc.writeMem(0x55dd, { 0x91 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6a6, gbc.sp());
        EXPECT(0x55de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0291
        gbc.setState(0x35a7, 0x70ed, 0x9310, 0xe85f, 0x5c3d, 0x9b25, 0x1, 0x0);
        gbc.writeMem(0x35a7, { 0x91 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x70ed, gbc.sp());
        EXPECT(0x35a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0292
        gbc.setState(0x21eb, 0x3b5b, 0x9d70, 0xeaf7, 0x7bb, 0x6d4d, 0x1, 0x1);
        gbc.writeMem(0x21eb, { 0x91 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3b5b, gbc.sp());
        EXPECT(0x21ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0293
        gbc.setState(0x5b28, 0xc96e, 0x8320, 0x9213, 0xf386, 0xdcb5, 0x1, 0x1);
        gbc.writeMem(0x5b28, { 0x91 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc96e, gbc.sp());
        EXPECT(0x5b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0294
        gbc.setState(0xa2b, 0x1fcd, 0xec80, 0x88b2, 0x21d6, 0x5252, 0x1, 0x0);
        gbc.writeMem(0xa2b, { 0x91 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1fcd, gbc.sp());
        EXPECT(0xa2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0295
        gbc.setState(0x712, 0x94ea, 0xbb10, 0xad8c, 0x5baa, 0x7d19, 0x0, 0x1);
        gbc.writeMem(0x712, { 0x91 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x94ea, gbc.sp());
        EXPECT(0x713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0296
        gbc.setState(0xcea8, 0x17da, 0x4240, 0x53ce, 0xd83d, 0xdc44, 0x0, 0x1);
        gbc.writeMem(0xcea8, { 0x91 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x17da, gbc.sp());
        EXPECT(0xcea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcea8));
        // 91 0297
        gbc.setState(0x24f3, 0x82ac, 0x6940, 0xcbbf, 0x808c, 0xc5ae, 0x1, 0x1);
        gbc.writeMem(0x24f3, { 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x82ac, gbc.sp());
        EXPECT(0x24f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0298
        gbc.setState(0x2cb5, 0xbb2d, 0x7570, 0xce63, 0xc992, 0xe33a, 0x0, 0x1);
        gbc.writeMem(0x2cb5, { 0x91 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbb2d, gbc.sp());
        EXPECT(0x2cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 029A
        gbc.setState(0x7bc6, 0x521e, 0x3ba0, 0xa3ff, 0x1e1f, 0xf05a, 0x0, 0x0);
        gbc.writeMem(0x7bc6, { 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x521e, gbc.sp());
        EXPECT(0x7bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 029B
        gbc.setState(0x9d02, 0xac3f, 0xdd40, 0x4295, 0xdd11, 0x8933, 0x0, 0x0);
        gbc.writeMem(0x9d02, { 0x91 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xac3f, gbc.sp());
        EXPECT(0x9d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9d02));
        // 91 029C
        gbc.setState(0x6c66, 0xcc37, 0x7b90, 0xe726, 0xb4af, 0x650a, 0x1, 0x1);
        gbc.writeMem(0x6c66, { 0x91 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcc37, gbc.sp());
        EXPECT(0x6c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 029D
        gbc.setState(0xc2e9, 0x1f24, 0x9360, 0xa047, 0x1577, 0x8afe, 0x0, 0x0);
        gbc.writeMem(0xc2e9, { 0x91 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1f24, gbc.sp());
        EXPECT(0xc2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc2e9));
        // 91 029F
        gbc.setState(0x764b, 0xdc32, 0x5b00, 0x3daf, 0x8393, 0xa88d, 0x1, 0x1);
        gbc.writeMem(0x764b, { 0x91 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdc32, gbc.sp());
        EXPECT(0x764c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02A0
        gbc.setState(0x2513, 0xd8b5, 0x8430, 0xd435, 0xfe3c, 0xe13, 0x0, 0x1);
        gbc.writeMem(0x2513, { 0x91 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd8b5, gbc.sp());
        EXPECT(0x2514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02A1
        gbc.setState(0x8685, 0x7921, 0x1ee0, 0xe72c, 0xa780, 0x52f8, 0x0, 0x0);
        gbc.writeMem(0x8685, { 0x91 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7921, gbc.sp());
        EXPECT(0x8686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8685));
        // 91 02A3
        gbc.setState(0x492f, 0x1238, 0xb3b0, 0x43ae, 0xad31, 0x2e6, 0x1, 0x0);
        gbc.writeMem(0x492f, { 0x91 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1238, gbc.sp());
        EXPECT(0x4930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02A4
        gbc.setState(0x5dd9, 0xc114, 0xe640, 0x229a, 0xa8d8, 0xf8d6, 0x0, 0x1);
        gbc.writeMem(0x5dd9, { 0x91 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc114, gbc.sp());
        EXPECT(0x5dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02A5
        gbc.setState(0x4f66, 0xde7d, 0xceb0, 0xdc1d, 0xb610, 0x4d2a, 0x0, 0x1);
        gbc.writeMem(0x4f66, { 0x91 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xde7d, gbc.sp());
        EXPECT(0x4f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02A6
        gbc.setState(0xa5f2, 0x1a7f, 0x1e0, 0x8a8c, 0xa5ac, 0x667, 0x0, 0x1);
        gbc.writeMem(0xa5f2, { 0x91 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1a7f, gbc.sp());
        EXPECT(0xa5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa5f2));
        // 91 02A7
        gbc.setState(0xdd86, 0xa4a3, 0xb280, 0xebd, 0x9507, 0x66e1, 0x1, 0x0);
        gbc.writeMem(0xdd86, { 0x91 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa4a3, gbc.sp());
        EXPECT(0xdd87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdd86));
        // 91 02A8
        gbc.setState(0xd795, 0xa97d, 0x4ee0, 0xce3b, 0x4b4e, 0xa669, 0x1, 0x1);
        gbc.writeMem(0xd795, { 0x91 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa97d, gbc.sp());
        EXPECT(0xd796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd795));
        // 91 02A9
        gbc.setState(0xae74, 0x834b, 0xed00, 0xa2ad, 0x5446, 0xc515, 0x1, 0x0);
        gbc.writeMem(0xae74, { 0x91 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x834b, gbc.sp());
        EXPECT(0xae75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xae74));
        // 91 02AA
        gbc.setState(0x633c, 0x166e, 0x6860, 0xf313, 0x6dab, 0x215b, 0x0, 0x1);
        gbc.writeMem(0x633c, { 0x91 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x166e, gbc.sp());
        EXPECT(0x633d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02AB
        gbc.setState(0x7676, 0x1f0d, 0x26d0, 0xc33a, 0x9a95, 0xe8fc, 0x0, 0x1);
        gbc.writeMem(0x7676, { 0x91 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1f0d, gbc.sp());
        EXPECT(0x7677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02AC
        gbc.setState(0x6cfc, 0xa47f, 0xf1a0, 0xe0f3, 0x94d9, 0xe586, 0x1, 0x0);
        gbc.writeMem(0x6cfc, { 0x91 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa47f, gbc.sp());
        EXPECT(0x6cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02AD
        gbc.setState(0x6fe1, 0xaac9, 0x1310, 0x2f5c, 0x5454, 0xdf00, 0x0, 0x0);
        gbc.writeMem(0x6fe1, { 0x91 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaac9, gbc.sp());
        EXPECT(0x6fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02AE
        gbc.setState(0x37, 0x2b04, 0xaca0, 0x2043, 0xf3bb, 0x8810, 0x1, 0x0);
        gbc.writeMem(0x37, { 0x91 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2b04, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02AF
        gbc.setState(0x23a, 0x739d, 0x8e0, 0x2a2, 0xfcd9, 0xff1c, 0x1, 0x0);
        gbc.writeMem(0x23a, { 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x739d, gbc.sp());
        EXPECT(0x23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02B0
        gbc.setState(0xca39, 0x90b1, 0xbad0, 0xd5a5, 0xecf0, 0xa6fb, 0x0, 0x0);
        gbc.writeMem(0xca39, { 0x91 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x90b1, gbc.sp());
        EXPECT(0xca3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xca39));
        // 91 02B1
        gbc.setState(0x8171, 0xe65c, 0x2a90, 0xfad2, 0xaaad, 0x950f, 0x1, 0x1);
        gbc.writeMem(0x8171, { 0x91 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe65c, gbc.sp());
        EXPECT(0x8172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8171));
        // 91 02B2
        gbc.setState(0x7fef, 0xbddc, 0xd7a0, 0xd5bc, 0x238e, 0xfba4, 0x0, 0x1);
        gbc.writeMem(0x7fef, { 0x91 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbddc, gbc.sp());
        EXPECT(0x7ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02B3
        gbc.setState(0x2b58, 0xa54b, 0x5190, 0xf0ab, 0xbe7, 0xd49b, 0x0, 0x1);
        gbc.writeMem(0x2b58, { 0x91 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa54b, gbc.sp());
        EXPECT(0x2b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02B4
        gbc.setState(0x379d, 0x4c60, 0x3ff0, 0xdbe9, 0x2643, 0x73cf, 0x1, 0x1);
        gbc.writeMem(0x379d, { 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4c60, gbc.sp());
        EXPECT(0x379e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02B5
        gbc.setState(0x5412, 0x9f0d, 0xfd00, 0x4197, 0xa0e1, 0x8387, 0x0, 0x1);
        gbc.writeMem(0x5412, { 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9f0d, gbc.sp());
        EXPECT(0x5413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02B6
        gbc.setState(0x323e, 0x8514, 0x92c0, 0x9e28, 0x7b7, 0xf0cc, 0x0, 0x0);
        gbc.writeMem(0x323e, { 0x91 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8514, gbc.sp());
        EXPECT(0x323f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02B7
        gbc.setState(0x1bae, 0x5db1, 0x9ca0, 0x1ec8, 0xfa4a, 0x71a0, 0x1, 0x1);
        gbc.writeMem(0x1bae, { 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5db1, gbc.sp());
        EXPECT(0x1baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02B8
        gbc.setState(0x1aeb, 0xfada, 0x9740, 0x3084, 0x5dcd, 0x6da, 0x1, 0x0);
        gbc.writeMem(0x1aeb, { 0x91 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfada, gbc.sp());
        EXPECT(0x1aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02B9
        gbc.setState(0x4f0, 0xb23c, 0x87e0, 0x88e3, 0x8292, 0x3363, 0x1, 0x0);
        gbc.writeMem(0x4f0, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb23c, gbc.sp());
        EXPECT(0x4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02BA
        gbc.setState(0xd54f, 0x248, 0x2460, 0x942e, 0x9d5d, 0x6cc, 0x0, 0x1);
        gbc.writeMem(0xd54f, { 0x91 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x248, gbc.sp());
        EXPECT(0xd550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd54f));
        // 91 02BB
        gbc.setState(0x65f6, 0xc42e, 0xcbb0, 0x5f04, 0x2a9d, 0xc7fc, 0x1, 0x0);
        gbc.writeMem(0x65f6, { 0x91 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc42e, gbc.sp());
        EXPECT(0x65f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02BC
        gbc.setState(0xacfb, 0x22b6, 0x5520, 0x491e, 0x935, 0xb87b, 0x1, 0x1);
        gbc.writeMem(0xacfb, { 0x91 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x22b6, gbc.sp());
        EXPECT(0xacfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xacfb));
        // 91 02BD
        gbc.setState(0x8044, 0xebf, 0x5660, 0x3ed0, 0x4351, 0xce88, 0x0, 0x1);
        gbc.writeMem(0x8044, { 0x91 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xebf, gbc.sp());
        EXPECT(0x8045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8044));
        // 91 02BE
        gbc.setState(0x8312, 0xb182, 0xb460, 0x51c0, 0x6d91, 0x816, 0x1, 0x1);
        gbc.writeMem(0x8312, { 0x91 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb182, gbc.sp());
        EXPECT(0x8313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8312));
        // 91 02BF
        gbc.setState(0x8304, 0x1d1d, 0xe900, 0xc5c4, 0x8d1a, 0xb9de, 0x0, 0x0);
        gbc.writeMem(0x8304, { 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1d1d, gbc.sp());
        EXPECT(0x8305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8304));
        // 91 02C0
        gbc.setState(0x497f, 0x1178, 0xca90, 0x69c3, 0x286c, 0xaf71, 0x0, 0x0);
        gbc.writeMem(0x497f, { 0x91 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1178, gbc.sp());
        EXPECT(0x4980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02C1
        gbc.setState(0x865f, 0xd451, 0x5190, 0x3989, 0x9051, 0xf38d, 0x0, 0x1);
        gbc.writeMem(0x865f, { 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd451, gbc.sp());
        EXPECT(0x8660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x865f));
        // 91 02C3
        gbc.setState(0x301e, 0x85e6, 0xa3a0, 0x28fd, 0x4bbd, 0x35a4, 0x1, 0x1);
        gbc.writeMem(0x301e, { 0x91 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x85e6, gbc.sp());
        EXPECT(0x301f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02C4
        gbc.setState(0xeb64, 0x2974, 0xc260, 0x8417, 0x5996, 0x977, 0x0, 0x1);
        gbc.writeMem(0xeb64, { 0x91 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2974, gbc.sp());
        EXPECT(0xeb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xeb64));
        // 91 02C5
        gbc.setState(0x935d, 0x90b, 0xad0, 0x4d8f, 0x52e5, 0x2828, 0x0, 0x1);
        gbc.writeMem(0x935d, { 0x91 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x90b, gbc.sp());
        EXPECT(0x935e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x935d));
        // 91 02C6
        gbc.setState(0x2c16, 0xf97c, 0x3070, 0x51cc, 0xabdf, 0x4c17, 0x1, 0x1);
        gbc.writeMem(0x2c16, { 0x91 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf97c, gbc.sp());
        EXPECT(0x2c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02C7
        gbc.setState(0x5637, 0x8f94, 0x65c0, 0xeb2b, 0xde46, 0xcfbb, 0x1, 0x1);
        gbc.writeMem(0x5637, { 0x91 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8f94, gbc.sp());
        EXPECT(0x5638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02C9
        gbc.setState(0xc736, 0xfe65, 0x8a90, 0xe0e6, 0xc8b7, 0xad18, 0x0, 0x0);
        gbc.writeMem(0xc736, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfe65, gbc.sp());
        EXPECT(0xc737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc736));
        // 91 02CA
        gbc.setState(0x91bc, 0xf6b8, 0x6f00, 0x1562, 0x95be, 0xb57a, 0x0, 0x1);
        gbc.writeMem(0x91bc, { 0x91 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf6b8, gbc.sp());
        EXPECT(0x91bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x91bc));
        // 91 02CB
        gbc.setState(0x8b98, 0x1140, 0x2340, 0x370b, 0xa294, 0x5dfa, 0x0, 0x1);
        gbc.writeMem(0x8b98, { 0x91 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1140, gbc.sp());
        EXPECT(0x8b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8b98));
        // 91 02CD
        gbc.setState(0x64c4, 0xc983, 0xea40, 0x7fa1, 0x3cf3, 0x454b, 0x1, 0x0);
        gbc.writeMem(0x64c4, { 0x91 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc983, gbc.sp());
        EXPECT(0x64c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02CE
        gbc.setState(0x87a5, 0xdd5a, 0xe50, 0xa6b2, 0x5d8e, 0xff8d, 0x1, 0x0);
        gbc.writeMem(0x87a5, { 0x91 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdd5a, gbc.sp());
        EXPECT(0x87a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x87a5));
        // 91 02CF
        gbc.setState(0x9ab4, 0xeaa8, 0xe630, 0xeff4, 0xad55, 0xc9a2, 0x1, 0x1);
        gbc.writeMem(0x9ab4, { 0x91 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeaa8, gbc.sp());
        EXPECT(0x9ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9ab4));
        // 91 02D0
        gbc.setState(0xe4b, 0xa80b, 0x9820, 0x6450, 0x8bff, 0x5880, 0x0, 0x0);
        gbc.writeMem(0xe4b, { 0x91 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa80b, gbc.sp());
        EXPECT(0xe4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02D1
        gbc.setState(0x7bfb, 0xfc5, 0x53a0, 0x4936, 0xf16, 0x1442, 0x1, 0x0);
        gbc.writeMem(0x7bfb, { 0x91 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfc5, gbc.sp());
        EXPECT(0x7bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02D2
        gbc.setState(0xdac9, 0xc20e, 0x1480, 0x689c, 0x4253, 0xcbe0, 0x0, 0x1);
        gbc.writeMem(0xdac9, { 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc20e, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdac9));
        // 91 02D3
        gbc.setState(0xe80a, 0x62f1, 0x46d0, 0x85d5, 0xe807, 0xdb9e, 0x0, 0x0);
        gbc.writeMem(0xe80a, { 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x62f1, gbc.sp());
        EXPECT(0xe80b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe80a));
        // 91 02D4
        gbc.setState(0x5771, 0xf68e, 0xa480, 0x7c40, 0xb8a9, 0xfd55, 0x1, 0x1);
        gbc.writeMem(0x5771, { 0x91 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf68e, gbc.sp());
        EXPECT(0x5772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02D5
        gbc.setState(0x15b9, 0xa168, 0xde30, 0x40a3, 0x31a3, 0xe36a, 0x1, 0x1);
        gbc.writeMem(0x15b9, { 0x91 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa168, gbc.sp());
        EXPECT(0x15ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02D7
        gbc.setState(0x9249, 0x23cc, 0xf950, 0xb5ce, 0x703b, 0x574f, 0x1, 0x1);
        gbc.writeMem(0x9249, { 0x91 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x23cc, gbc.sp());
        EXPECT(0x924a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9249));
        // 91 02D8
        gbc.setState(0x1d62, 0xcc10, 0xc9c0, 0xa4db, 0xc8e2, 0x8556, 0x1, 0x0);
        gbc.writeMem(0x1d62, { 0x91 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcc10, gbc.sp());
        EXPECT(0x1d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02D9
        gbc.setState(0x47ae, 0xacc7, 0x8610, 0xb8aa, 0x6c60, 0xaf38, 0x0, 0x1);
        gbc.writeMem(0x47ae, { 0x91 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xacc7, gbc.sp());
        EXPECT(0x47af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02DA
        gbc.setState(0x5367, 0x3f5, 0x3a70, 0xcd29, 0xd3fc, 0xa5f0, 0x0, 0x0);
        gbc.writeMem(0x5367, { 0x91 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3f5, gbc.sp());
        EXPECT(0x5368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02DB
        gbc.setState(0x1dde, 0xdc1, 0x7c70, 0xa0de, 0x6815, 0xbf12, 0x0, 0x1);
        gbc.writeMem(0x1dde, { 0x91 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdc1, gbc.sp());
        EXPECT(0x1ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02DC
        gbc.setState(0x4aa6, 0xc26c, 0x4c60, 0x53f6, 0x483d, 0x7607, 0x1, 0x0);
        gbc.writeMem(0x4aa6, { 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc26c, gbc.sp());
        EXPECT(0x4aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02DD
        gbc.setState(0x5eae, 0x5b12, 0x9e00, 0xe8cc, 0x1a14, 0xe4fa, 0x1, 0x1);
        gbc.writeMem(0x5eae, { 0x91 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5b12, gbc.sp());
        EXPECT(0x5eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02DE
        gbc.setState(0x6b10, 0x2a66, 0x14c0, 0x8916, 0x6442, 0xc677, 0x0, 0x0);
        gbc.writeMem(0x6b10, { 0x91 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2a66, gbc.sp());
        EXPECT(0x6b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02DF
        gbc.setState(0x7959, 0x9c4f, 0xdf90, 0x400b, 0xf637, 0x77e3, 0x1, 0x0);
        gbc.writeMem(0x7959, { 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9c4f, gbc.sp());
        EXPECT(0x795a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02E0
        gbc.setState(0x7142, 0x121c, 0x3e80, 0x6304, 0x533e, 0xc9e1, 0x0, 0x1);
        gbc.writeMem(0x7142, { 0x91 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x121c, gbc.sp());
        EXPECT(0x7143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02E1
        gbc.setState(0x343c, 0x9955, 0x2730, 0xfcc3, 0x542c, 0x4096, 0x1, 0x0);
        gbc.writeMem(0x343c, { 0x91 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9955, gbc.sp());
        EXPECT(0x343d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02E2
        gbc.setState(0x6946, 0x647c, 0x8090, 0xf76c, 0x47e1, 0xaf2a, 0x1, 0x1);
        gbc.writeMem(0x6946, { 0x91 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x647c, gbc.sp());
        EXPECT(0x6947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02E4
        gbc.setState(0x5620, 0x9476, 0x7d90, 0x3729, 0xd30f, 0x5e6b, 0x1, 0x1);
        gbc.writeMem(0x5620, { 0x91 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9476, gbc.sp());
        EXPECT(0x5621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02E5
        gbc.setState(0xa375, 0xa546, 0xbd60, 0xb80d, 0x8d6, 0xafb1, 0x1, 0x0);
        gbc.writeMem(0xa375, { 0x91 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa546, gbc.sp());
        EXPECT(0xa376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa375));
        // 91 02E6
        gbc.setState(0x5794, 0xd1b6, 0xc2d0, 0x311a, 0x31fc, 0xc714, 0x0, 0x0);
        gbc.writeMem(0x5794, { 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd1b6, gbc.sp());
        EXPECT(0x5795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02E7
        gbc.setState(0xa608, 0x5e84, 0x7dd0, 0xd806, 0xe56b, 0x1e23, 0x1, 0x0);
        gbc.writeMem(0xa608, { 0x91 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5e84, gbc.sp());
        EXPECT(0xa609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa608));
        // 91 02E8
        gbc.setState(0x2b04, 0xea58, 0xba60, 0xe8c1, 0xbbd9, 0x2114, 0x0, 0x0);
        gbc.writeMem(0x2b04, { 0x91 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xea58, gbc.sp());
        EXPECT(0x2b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02E9
        gbc.setState(0xb030, 0xbecf, 0xef40, 0xb714, 0x2258, 0x8142, 0x0, 0x1);
        gbc.writeMem(0xb030, { 0x91 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbecf, gbc.sp());
        EXPECT(0xb031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb030));
        // 91 02EA
        gbc.setState(0x736b, 0x8131, 0x88d0, 0xa45d, 0xd2a8, 0x8381, 0x0, 0x1);
        gbc.writeMem(0x736b, { 0x91 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8131, gbc.sp());
        EXPECT(0x736c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02EB
        gbc.setState(0xd30e, 0x4d4b, 0x2140, 0xd067, 0x9433, 0x27f5, 0x1, 0x1);
        gbc.writeMem(0xd30e, { 0x91 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4d4b, gbc.sp());
        EXPECT(0xd30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd30e));
        // 91 02EC
        gbc.setState(0xd054, 0xb68a, 0xcdd0, 0xa038, 0x6b8b, 0xa119, 0x1, 0x1);
        gbc.writeMem(0xd054, { 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb68a, gbc.sp());
        EXPECT(0xd055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd054));
        // 91 02ED
        gbc.setState(0x6392, 0x18d, 0xc290, 0x4eb8, 0xd120, 0xcf8f, 0x0, 0x0);
        gbc.writeMem(0x6392, { 0x91 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x18d, gbc.sp());
        EXPECT(0x6393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02F1
        gbc.setState(0x4662, 0x3a52, 0x13e0, 0x91d7, 0xe25b, 0xae11, 0x1, 0x1);
        gbc.writeMem(0x4662, { 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3a52, gbc.sp());
        EXPECT(0x4663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 02F2
        gbc.setState(0x5e70, 0x4eef, 0xb1d0, 0x3e0b, 0x98b9, 0xa95c, 0x1, 0x1);
        gbc.writeMem(0x5e70, { 0x91 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4eef, gbc.sp());
        EXPECT(0x5e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02F3
        gbc.setState(0xd1cd, 0x28e9, 0x3e80, 0xe7ba, 0x6134, 0xf938, 0x0, 0x1);
        gbc.writeMem(0xd1cd, { 0x91 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x28e9, gbc.sp());
        EXPECT(0xd1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd1cd));
        // 91 02F4
        gbc.setState(0x2673, 0x5bbe, 0xe9a0, 0x982c, 0x6db, 0x5f0a, 0x1, 0x1);
        gbc.writeMem(0x2673, { 0x91 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5bbe, gbc.sp());
        EXPECT(0x2674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02F5
        gbc.setState(0x6f0, 0xf2c4, 0xbfe0, 0x6a4e, 0x9118, 0xec7e, 0x0, 0x0);
        gbc.writeMem(0x6f0, { 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf2c4, gbc.sp());
        EXPECT(0x6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02F7
        gbc.setState(0x98df, 0x8da7, 0x8040, 0x68e, 0x9fa, 0x9bfe, 0x0, 0x1);
        gbc.writeMem(0x98df, { 0x91 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8da7, gbc.sp());
        EXPECT(0x98e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x98df));
        // 91 02F8
        gbc.setState(0x2cf2, 0xc7c9, 0xcbc0, 0xcd12, 0x7dc2, 0x1a4e, 0x0, 0x1);
        gbc.writeMem(0x2cf2, { 0x91 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc7c9, gbc.sp());
        EXPECT(0x2cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 02F9
        gbc.setState(0xdf31, 0x7ef, 0xec60, 0x9589, 0x8c0d, 0xd6ea, 0x0, 0x1);
        gbc.writeMem(0xdf31, { 0x91 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7ef, gbc.sp());
        EXPECT(0xdf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdf31));
        // 91 02FA
        gbc.setState(0xba2f, 0x6904, 0x3500, 0x6ad3, 0x8ebb, 0x284a, 0x0, 0x1);
        gbc.writeMem(0xba2f, { 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6904, gbc.sp());
        EXPECT(0xba30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xba2f));
        // 91 02FB
        gbc.setState(0xb58a, 0xa4f, 0x5710, 0x2fb5, 0xf345, 0xf066, 0x0, 0x0);
        gbc.writeMem(0xb58a, { 0x91 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa4f, gbc.sp());
        EXPECT(0xb58b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb58a));
        // 91 02FC
        gbc.setState(0xcb3c, 0x54c6, 0x57e0, 0xc0fa, 0x636, 0x76e6, 0x1, 0x1);
        gbc.writeMem(0xcb3c, { 0x91 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x54c6, gbc.sp());
        EXPECT(0xcb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcb3c));
        // 91 02FD
        gbc.setState(0x918e, 0x89b, 0x9860, 0xbccc, 0xc545, 0x5372, 0x1, 0x1);
        gbc.writeMem(0x918e, { 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x89b, gbc.sp());
        EXPECT(0x918f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x918e));
        // 91 02FE
        gbc.setState(0xed10, 0x771c, 0x2eb0, 0x762d, 0xa352, 0x3faf, 0x0, 0x0);
        gbc.writeMem(0xed10, { 0x91 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x771c, gbc.sp());
        EXPECT(0xed11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xed10));
        // 91 02FF
        gbc.setState(0xb0a0, 0x29f, 0xe580, 0x83d4, 0x1d8d, 0x5013, 0x1, 0x1);
        gbc.writeMem(0xb0a0, { 0x91 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x29f, gbc.sp());
        EXPECT(0xb0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb0a0));
        // 91 0300
        gbc.setState(0x8681, 0x7f22, 0xd1e0, 0x2a59, 0x903f, 0x7c0e, 0x1, 0x0);
        gbc.writeMem(0x8681, { 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7f22, gbc.sp());
        EXPECT(0x8682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8681));
        // 91 0301
        gbc.setState(0x2804, 0x74a4, 0x9cf0, 0xba6e, 0x4596, 0x7fb8, 0x1, 0x1);
        gbc.writeMem(0x2804, { 0x91 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x74a4, gbc.sp());
        EXPECT(0x2805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0302
        gbc.setState(0x287d, 0x4ce6, 0x5dd0, 0x4be2, 0xa00c, 0x754d, 0x1, 0x1);
        gbc.writeMem(0x287d, { 0x91 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4ce6, gbc.sp());
        EXPECT(0x287e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0303
        gbc.setState(0xd86f, 0x906f, 0xf3e0, 0xd6c4, 0x66c8, 0x3468, 0x1, 0x0);
        gbc.writeMem(0xd86f, { 0x91 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x906f, gbc.sp());
        EXPECT(0xd870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd86f));
        // 91 0304
        gbc.setState(0x661, 0xf376, 0x37a0, 0x2e99, 0xb86a, 0x2def, 0x1, 0x0);
        gbc.writeMem(0x661, { 0x91 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf376, gbc.sp());
        EXPECT(0x662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0305
        gbc.setState(0x3c14, 0x7de3, 0x48d0, 0x6c00, 0x16bb, 0xc5f5, 0x1, 0x0);
        gbc.writeMem(0x3c14, { 0x91 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7de3, gbc.sp());
        EXPECT(0x3c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0306
        gbc.setState(0x935d, 0x2fb0, 0x49c0, 0xcc98, 0xeeda, 0x39, 0x0, 0x1);
        gbc.writeMem(0x935d, { 0x91 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2fb0, gbc.sp());
        EXPECT(0x935e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x935d));
        // 91 0307
        gbc.setState(0xa951, 0x1fc4, 0xfb60, 0x5d51, 0xf6b6, 0xb041, 0x0, 0x1);
        gbc.writeMem(0xa951, { 0x91 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1fc4, gbc.sp());
        EXPECT(0xa952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa951));
        // 91 0308
        gbc.setState(0x2c06, 0x5fe9, 0xb750, 0x2246, 0x9ca2, 0x92d0, 0x1, 0x0);
        gbc.writeMem(0x2c06, { 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5fe9, gbc.sp());
        EXPECT(0x2c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0309
        gbc.setState(0x5dc0, 0xe620, 0x2bd0, 0xb07a, 0x4429, 0xa167, 0x1, 0x1);
        gbc.writeMem(0x5dc0, { 0x91 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe620, gbc.sp());
        EXPECT(0x5dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 030A
        gbc.setState(0x87be, 0x1c77, 0xadb0, 0xd3d6, 0xead1, 0xd139, 0x0, 0x1);
        gbc.writeMem(0x87be, { 0x91 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1c77, gbc.sp());
        EXPECT(0x87bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x87be));
        // 91 030B
        gbc.setState(0xef68, 0x7a91, 0xfa10, 0xe989, 0x251b, 0x7e2a, 0x1, 0x0);
        gbc.writeMem(0xef68, { 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7a91, gbc.sp());
        EXPECT(0xef69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xef68));
        // 91 030C
        gbc.setState(0x41ca, 0x6741, 0x9760, 0x433c, 0xc272, 0x81a7, 0x1, 0x1);
        gbc.writeMem(0x41ca, { 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6741, gbc.sp());
        EXPECT(0x41cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 030D
        gbc.setState(0xd002, 0x3ebe, 0x5b40, 0xc063, 0xbd53, 0x995c, 0x1, 0x1);
        gbc.writeMem(0xd002, { 0x91 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3ebe, gbc.sp());
        EXPECT(0xd003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd002));
        // 91 030E
        gbc.setState(0x71d0, 0x549d, 0x99c0, 0xdf3e, 0xc451, 0xe88b, 0x0, 0x0);
        gbc.writeMem(0x71d0, { 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x549d, gbc.sp());
        EXPECT(0x71d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 030F
        gbc.setState(0x7187, 0x484f, 0x17d0, 0x8e0c, 0x835d, 0x9be6, 0x0, 0x0);
        gbc.writeMem(0x7187, { 0x91 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x484f, gbc.sp());
        EXPECT(0x7188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0310
        gbc.setState(0x89cd, 0xb2bd, 0x4fc0, 0xc14d, 0x9b66, 0x54c3, 0x0, 0x1);
        gbc.writeMem(0x89cd, { 0x91 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb2bd, gbc.sp());
        EXPECT(0x89ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x89cd));
        // 91 0311
        gbc.setState(0x6096, 0x55cd, 0x2560, 0xaf5, 0xa437, 0xbe48, 0x0, 0x0);
        gbc.writeMem(0x6096, { 0x91 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x55cd, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0312
        gbc.setState(0x6fa1, 0x3be7, 0xa810, 0x4f13, 0x36a9, 0xc853, 0x0, 0x0);
        gbc.writeMem(0x6fa1, { 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3be7, gbc.sp());
        EXPECT(0x6fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0313
        gbc.setState(0x109a, 0xc5e8, 0x53d0, 0x60e4, 0x4557, 0xdfe0, 0x0, 0x1);
        gbc.writeMem(0x109a, { 0x91 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc5e8, gbc.sp());
        EXPECT(0x109b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0314
        gbc.setState(0x99e0, 0x6485, 0xfec0, 0x2afa, 0xada6, 0x7597, 0x1, 0x1);
        gbc.writeMem(0x99e0, { 0x91 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0x99e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x99e0));
        // 91 0315
        gbc.setState(0xd33b, 0xeccb, 0x9c30, 0x7bd0, 0xfa24, 0x86ac, 0x0, 0x0);
        gbc.writeMem(0xd33b, { 0x91 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xeccb, gbc.sp());
        EXPECT(0xd33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd33b));
        // 91 0316
        gbc.setState(0x42d5, 0xf5d9, 0x9d40, 0x4d60, 0x1032, 0x26ac, 0x0, 0x1);
        gbc.writeMem(0x42d5, { 0x91 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf5d9, gbc.sp());
        EXPECT(0x42d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0317
        gbc.setState(0x2674, 0x7abc, 0xca0, 0x72b1, 0xef1, 0xf51e, 0x0, 0x0);
        gbc.writeMem(0x2674, { 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7abc, gbc.sp());
        EXPECT(0x2675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0318
        gbc.setState(0x19fa, 0x6492, 0x9dc0, 0xac4d, 0x551d, 0x2c66, 0x0, 0x1);
        gbc.writeMem(0x19fa, { 0x91 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6492, gbc.sp());
        EXPECT(0x19fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0319
        gbc.setState(0x79c7, 0x201a, 0xde00, 0xbd87, 0xf9d8, 0xfd37, 0x0, 0x0);
        gbc.writeMem(0x79c7, { 0x91 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x201a, gbc.sp());
        EXPECT(0x79c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 031A
        gbc.setState(0x8d3f, 0x7530, 0x9f60, 0x7094, 0x414, 0xa46d, 0x1, 0x1);
        gbc.writeMem(0x8d3f, { 0x91 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7530, gbc.sp());
        EXPECT(0x8d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8d3f));
        // 91 031B
        gbc.setState(0xcb22, 0x2ea8, 0xf0a0, 0xf607, 0x8e2f, 0x8fa4, 0x1, 0x1);
        gbc.writeMem(0xcb22, { 0x91 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2ea8, gbc.sp());
        EXPECT(0xcb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcb22));
        // 91 031C
        gbc.setState(0x2e57, 0xa11, 0x4540, 0xa155, 0x7d30, 0xe78d, 0x1, 0x0);
        gbc.writeMem(0x2e57, { 0x91 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa11, gbc.sp());
        EXPECT(0x2e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 031E
        gbc.setState(0x91b0, 0x1aca, 0xe00, 0x94fc, 0xebe3, 0x4d0a, 0x0, 0x0);
        gbc.writeMem(0x91b0, { 0x91 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1aca, gbc.sp());
        EXPECT(0x91b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x91b0));
        // 91 0320
        gbc.setState(0x8c44, 0xa46c, 0xde20, 0xb2bc, 0x3b36, 0x5da3, 0x1, 0x0);
        gbc.writeMem(0x8c44, { 0x91 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa46c, gbc.sp());
        EXPECT(0x8c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8c44));
        // 91 0321
        gbc.setState(0x25fe, 0x7ebb, 0x9d50, 0xa73, 0xe414, 0x2a84, 0x1, 0x0);
        gbc.writeMem(0x25fe, { 0x91 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7ebb, gbc.sp());
        EXPECT(0x25ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0322
        gbc.setState(0x2af2, 0x18d9, 0x2220, 0x31d5, 0x389e, 0xf032, 0x0, 0x1);
        gbc.writeMem(0x2af2, { 0x91 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x18d9, gbc.sp());
        EXPECT(0x2af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0323
        gbc.setState(0x1bec, 0x7532, 0x990, 0x974b, 0x67c9, 0xe66f, 0x1, 0x0);
        gbc.writeMem(0x1bec, { 0x91 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7532, gbc.sp());
        EXPECT(0x1bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0324
        gbc.setState(0x37cd, 0xd640, 0x1090, 0x70c, 0x39b8, 0x80dd, 0x0, 0x1);
        gbc.writeMem(0x37cd, { 0x91 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd640, gbc.sp());
        EXPECT(0x37ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0325
        gbc.setState(0x63be, 0xd781, 0x7fa0, 0x3d8a, 0xa371, 0xdf69, 0x0, 0x0);
        gbc.writeMem(0x63be, { 0x91 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd781, gbc.sp());
        EXPECT(0x63bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0326
        gbc.setState(0x234d, 0x2635, 0xb1d0, 0x2fec, 0x63f4, 0xf50d, 0x0, 0x0);
        gbc.writeMem(0x234d, { 0x91 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2635, gbc.sp());
        EXPECT(0x234e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0327
        gbc.setState(0x5404, 0xf1ba, 0x93e0, 0x25fa, 0xaa8a, 0x13d5, 0x0, 0x1);
        gbc.writeMem(0x5404, { 0x91 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf1ba, gbc.sp());
        EXPECT(0x5405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0328
        gbc.setState(0xed0e, 0x59f4, 0xaaf0, 0x408, 0x30a, 0x3d2, 0x0, 0x1);
        gbc.writeMem(0xed0e, { 0x91 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x59f4, gbc.sp());
        EXPECT(0xed0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xed0e));
        // 91 0329
        gbc.setState(0xb790, 0x5e7a, 0x3180, 0xa56a, 0x42a, 0x4f10, 0x1, 0x1);
        gbc.writeMem(0xb790, { 0x91 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5e7a, gbc.sp());
        EXPECT(0xb791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb790));
        // 91 032A
        gbc.setState(0x1166, 0x2c9, 0x9b80, 0x52dd, 0xc030, 0x1a51, 0x0, 0x0);
        gbc.writeMem(0x1166, { 0x91 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2c9, gbc.sp());
        EXPECT(0x1167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 032C
        gbc.setState(0x2850, 0x1cca, 0xde30, 0xa721, 0x3641, 0x28b4, 0x0, 0x0);
        gbc.writeMem(0x2850, { 0x91 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1cca, gbc.sp());
        EXPECT(0x2851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 032D
        gbc.setState(0x7fa1, 0x7d5a, 0x9a70, 0xc85, 0x48c7, 0xf5a3, 0x0, 0x1);
        gbc.writeMem(0x7fa1, { 0x91 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7d5a, gbc.sp());
        EXPECT(0x7fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 032E
        gbc.setState(0x4dd4, 0x9802, 0x74e0, 0x28d4, 0xf838, 0x62c7, 0x0, 0x0);
        gbc.writeMem(0x4dd4, { 0x91 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9802, gbc.sp());
        EXPECT(0x4dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 032F
        gbc.setState(0x6db8, 0x4425, 0xf490, 0xed17, 0xec49, 0x91e8, 0x1, 0x0);
        gbc.writeMem(0x6db8, { 0x91 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4425, gbc.sp());
        EXPECT(0x6db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0330
        gbc.setState(0x50f7, 0x5b0e, 0x1850, 0x8a1, 0x4b57, 0xf563, 0x1, 0x1);
        gbc.writeMem(0x50f7, { 0x91 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5b0e, gbc.sp());
        EXPECT(0x50f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0331
        gbc.setState(0x5f32, 0xe458, 0x6410, 0x9fbd, 0x5966, 0x9f3, 0x0, 0x1);
        gbc.writeMem(0x5f32, { 0x91 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe458, gbc.sp());
        EXPECT(0x5f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0332
        gbc.setState(0xc2f6, 0x1fea, 0xa1f0, 0x462e, 0xf5e4, 0x57b5, 0x0, 0x1);
        gbc.writeMem(0xc2f6, { 0x91 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1fea, gbc.sp());
        EXPECT(0xc2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc2f6));
        // 91 0333
        gbc.setState(0x6396, 0x3a90, 0x83e0, 0xaddb, 0xf95, 0x160c, 0x1, 0x1);
        gbc.writeMem(0x6396, { 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3a90, gbc.sp());
        EXPECT(0x6397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0334
        gbc.setState(0xd473, 0x33e3, 0x6850, 0x5964, 0xfc67, 0x5adc, 0x1, 0x1);
        gbc.writeMem(0xd473, { 0x91 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x33e3, gbc.sp());
        EXPECT(0xd474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd473));
        // 91 0335
        gbc.setState(0x123a, 0x7fc7, 0x9e70, 0x67fc, 0x68b0, 0x744f, 0x1, 0x0);
        gbc.writeMem(0x123a, { 0x91 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7fc7, gbc.sp());
        EXPECT(0x123b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0337
        gbc.setState(0x9eea, 0xae88, 0x46f0, 0xbd50, 0x7b8f, 0x732d, 0x0, 0x0);
        gbc.writeMem(0x9eea, { 0x91 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xae88, gbc.sp());
        EXPECT(0x9eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9eea));
        // 91 0338
        gbc.setState(0xbc6e, 0xd925, 0x13d0, 0x6387, 0x94bc, 0x7644, 0x1, 0x0);
        gbc.writeMem(0xbc6e, { 0x91 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd925, gbc.sp());
        EXPECT(0xbc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbc6e));
        // 91 0339
        gbc.setState(0x5b36, 0xe130, 0xf990, 0x685a, 0xa4de, 0x3bfb, 0x0, 0x0);
        gbc.writeMem(0x5b36, { 0x91 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe130, gbc.sp());
        EXPECT(0x5b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 033A
        gbc.setState(0x4484, 0xf6b3, 0xd00, 0x9e50, 0xdd5d, 0x6298, 0x0, 0x1);
        gbc.writeMem(0x4484, { 0x91 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf6b3, gbc.sp());
        EXPECT(0x4485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 033B
        gbc.setState(0x735f, 0x1891, 0x4cc0, 0xb34a, 0x21c0, 0xa2f9, 0x1, 0x0);
        gbc.writeMem(0x735f, { 0x91 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1891, gbc.sp());
        EXPECT(0x7360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 033C
        gbc.setState(0xdc49, 0xd524, 0x160, 0x163, 0x1ef4, 0x1897, 0x1, 0x1);
        gbc.writeMem(0xdc49, { 0x91 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd524, gbc.sp());
        EXPECT(0xdc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdc49));
        // 91 033D
        gbc.setState(0x49a0, 0xbcd7, 0xd7c0, 0x8c78, 0xc5a5, 0x4c07, 0x0, 0x1);
        gbc.writeMem(0x49a0, { 0x91 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbcd7, gbc.sp());
        EXPECT(0x49a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 033E
        gbc.setState(0x1c86, 0xc486, 0xc160, 0x70f8, 0xd717, 0xea1e, 0x0, 0x1);
        gbc.writeMem(0x1c86, { 0x91 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc486, gbc.sp());
        EXPECT(0x1c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 033F
        gbc.setState(0x71f1, 0xda22, 0x740, 0x3a7d, 0xe68, 0xf90, 0x0, 0x0);
        gbc.writeMem(0x71f1, { 0x91 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xda22, gbc.sp());
        EXPECT(0x71f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0340
        gbc.setState(0x1dd2, 0xaa43, 0x5330, 0xedd6, 0x14b5, 0xe7ec, 0x0, 0x0);
        gbc.writeMem(0x1dd2, { 0x91 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xaa43, gbc.sp());
        EXPECT(0x1dd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0341
        gbc.setState(0xa368, 0xe0ff, 0x9650, 0xdb14, 0x2cf3, 0x131e, 0x1, 0x0);
        gbc.writeMem(0xa368, { 0x91 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe0ff, gbc.sp());
        EXPECT(0xa369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa368));
        // 91 0342
        gbc.setState(0x61e7, 0xd3b8, 0xa3b0, 0x92bc, 0xc3dc, 0x964a, 0x0, 0x0);
        gbc.writeMem(0x61e7, { 0x91 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd3b8, gbc.sp());
        EXPECT(0x61e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0343
        gbc.setState(0x46b5, 0xc821, 0xa2e0, 0xa2d1, 0xa360, 0x8fa0, 0x1, 0x0);
        gbc.writeMem(0x46b5, { 0x91 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc821, gbc.sp());
        EXPECT(0x46b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0344
        gbc.setState(0x82ed, 0x81c5, 0x8c40, 0x4cb4, 0x5b4d, 0x603f, 0x0, 0x1);
        gbc.writeMem(0x82ed, { 0x91 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x81c5, gbc.sp());
        EXPECT(0x82ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x82ed));
        // 91 0346
        gbc.setState(0xcd7c, 0xeeeb, 0x6d50, 0x6354, 0xab13, 0xd2ac, 0x0, 0x1);
        gbc.writeMem(0xcd7c, { 0x91 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xeeeb, gbc.sp());
        EXPECT(0xcd7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xcd7c));
        // 91 0347
        gbc.setState(0xde08, 0xe62d, 0x26e0, 0x51de, 0x4ffd, 0xd468, 0x1, 0x0);
        gbc.writeMem(0xde08, { 0x91 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe62d, gbc.sp());
        EXPECT(0xde09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xde08));
        // 91 0348
        gbc.setState(0x25e8, 0x7282, 0xed90, 0x4f9d, 0xcdbb, 0xa6af, 0x1, 0x0);
        gbc.writeMem(0x25e8, { 0x91 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7282, gbc.sp());
        EXPECT(0x25e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 034A
        gbc.setState(0x716f, 0x4567, 0xb430, 0xbaba, 0xdb0a, 0x910d, 0x0, 0x0);
        gbc.writeMem(0x716f, { 0x91 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4567, gbc.sp());
        EXPECT(0x7170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 034B
        gbc.setState(0xddc1, 0xe2d6, 0x1400, 0xac18, 0x87aa, 0xa242, 0x0, 0x0);
        gbc.writeMem(0xddc1, { 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe2d6, gbc.sp());
        EXPECT(0xddc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xddc1));
        // 91 034C
        gbc.setState(0xa67d, 0x4e4, 0xb1d0, 0x492b, 0x28d4, 0x446a, 0x0, 0x0);
        gbc.writeMem(0xa67d, { 0x91 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4e4, gbc.sp());
        EXPECT(0xa67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa67d));
        // 91 034D
        gbc.setState(0x120e, 0x8dd5, 0xd370, 0x32f, 0x559, 0x804, 0x0, 0x1);
        gbc.writeMem(0x120e, { 0x91 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8dd5, gbc.sp());
        EXPECT(0x120f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 034E
        gbc.setState(0x72d6, 0x5d89, 0xe140, 0x2a2e, 0x148, 0xfb08, 0x1, 0x1);
        gbc.writeMem(0x72d6, { 0x91 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5d89, gbc.sp());
        EXPECT(0x72d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 034F
        gbc.setState(0x8dce, 0x3290, 0x9440, 0xab27, 0x42f5, 0x2ee4, 0x1, 0x1);
        gbc.writeMem(0x8dce, { 0x91 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3290, gbc.sp());
        EXPECT(0x8dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8dce));
        // 91 0350
        gbc.setState(0xecc3, 0x3edb, 0x8f40, 0xc5dd, 0xf175, 0xed83, 0x1, 0x0);
        gbc.writeMem(0xecc3, { 0x91 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3edb, gbc.sp());
        EXPECT(0xecc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xecc3));
        // 91 0351
        gbc.setState(0x213b, 0xb67f, 0x4ee0, 0x498c, 0x630e, 0xeb4a, 0x1, 0x1);
        gbc.writeMem(0x213b, { 0x91 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb67f, gbc.sp());
        EXPECT(0x213c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0352
        gbc.setState(0xc25c, 0x7942, 0x1770, 0xc6b8, 0xc96d, 0x5497, 0x0, 0x1);
        gbc.writeMem(0xc25c, { 0x91 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7942, gbc.sp());
        EXPECT(0xc25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc25c));
        // 91 0354
        gbc.setState(0xe692, 0x7ace, 0xf240, 0x5c18, 0xeea9, 0xf57d, 0x1, 0x0);
        gbc.writeMem(0xe692, { 0x91 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7ace, gbc.sp());
        EXPECT(0xe693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe692));
        // 91 0355
        gbc.setState(0xe31c, 0x5e5a, 0xc030, 0xa24f, 0x32af, 0x3f93, 0x1, 0x0);
        gbc.writeMem(0xe31c, { 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5e5a, gbc.sp());
        EXPECT(0xe31d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe31c));
        // 91 0356
        gbc.setState(0x661e, 0x1046, 0x6150, 0x141d, 0x116d, 0x4e27, 0x0, 0x0);
        gbc.writeMem(0x661e, { 0x91 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1046, gbc.sp());
        EXPECT(0x661f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0357
        gbc.setState(0x3faa, 0x8e82, 0x9210, 0x8ec8, 0xc25f, 0x9492, 0x0, 0x1);
        gbc.writeMem(0x3faa, { 0x91 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8e82, gbc.sp());
        EXPECT(0x3fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0358
        gbc.setState(0xc6a9, 0x7131, 0xd270, 0xae0d, 0xb574, 0x546e, 0x1, 0x1);
        gbc.writeMem(0xc6a9, { 0x91 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7131, gbc.sp());
        EXPECT(0xc6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc6a9));
        // 91 0359
        gbc.setState(0x9281, 0xa9eb, 0xc490, 0xcb05, 0x6ee6, 0x3f53, 0x0, 0x1);
        gbc.writeMem(0x9281, { 0x91 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa9eb, gbc.sp());
        EXPECT(0x9282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9281));
        // 91 035A
        gbc.setState(0xe164, 0x77fa, 0xac10, 0x4d90, 0xae93, 0x641b, 0x1, 0x0);
        gbc.writeMem(0xe164, { 0x91 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x77fa, gbc.sp());
        EXPECT(0xe165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe164));
        // 91 035C
        gbc.setState(0x4c8e, 0x7d33, 0xa260, 0xdc7a, 0xc41a, 0x3bc6, 0x1, 0x1);
        gbc.writeMem(0x4c8e, { 0x91 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7d33, gbc.sp());
        EXPECT(0x4c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 035D
        gbc.setState(0x48bd, 0xf888, 0xc760, 0xe1d2, 0x4963, 0x6cab, 0x0, 0x1);
        gbc.writeMem(0x48bd, { 0x91 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf888, gbc.sp());
        EXPECT(0x48be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 035E
        gbc.setState(0xe383, 0xed22, 0xcf90, 0xc3ce, 0x7d8e, 0xc878, 0x1, 0x0);
        gbc.writeMem(0xe383, { 0x91 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xed22, gbc.sp());
        EXPECT(0xe384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe383));
        // 91 035F
        gbc.setState(0x6ebf, 0x4f56, 0x4460, 0x1a3, 0x44ae, 0x7ade, 0x1, 0x1);
        gbc.writeMem(0x6ebf, { 0x91 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4f56, gbc.sp());
        EXPECT(0x6ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0360
        gbc.setState(0x883e, 0xe1db, 0x8830, 0x57d9, 0xa003, 0x1ddd, 0x0, 0x1);
        gbc.writeMem(0x883e, { 0x91 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe1db, gbc.sp());
        EXPECT(0x883f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x883e));
        // 91 0361
        gbc.setState(0x4064, 0x6602, 0xf360, 0x831b, 0x8c0d, 0x5d1c, 0x1, 0x1);
        gbc.writeMem(0x4064, { 0x91 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6602, gbc.sp());
        EXPECT(0x4065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0362
        gbc.setState(0xa009, 0x94ae, 0x8240, 0x577d, 0x7889, 0xe77a, 0x0, 0x0);
        gbc.writeMem(0xa009, { 0x91 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x94ae, gbc.sp());
        EXPECT(0xa00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa009));
        // 91 0363
        gbc.setState(0x601f, 0x7025, 0xb1d0, 0x9bf3, 0xae6f, 0x6078, 0x1, 0x0);
        gbc.writeMem(0x601f, { 0x91 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7025, gbc.sp());
        EXPECT(0x6020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0364
        gbc.setState(0x3f39, 0xda69, 0x2d80, 0xa939, 0xc80c, 0x4494, 0x1, 0x1);
        gbc.writeMem(0x3f39, { 0x91 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xda69, gbc.sp());
        EXPECT(0x3f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0365
        gbc.setState(0xa1e3, 0xbd88, 0x6290, 0xd3df, 0x7295, 0x4640, 0x0, 0x0);
        gbc.writeMem(0xa1e3, { 0x91 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbd88, gbc.sp());
        EXPECT(0xa1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa1e3));
        // 91 0366
        gbc.setState(0x4c02, 0x66c3, 0x7810, 0x2fc6, 0xea61, 0x35a5, 0x0, 0x0);
        gbc.writeMem(0x4c02, { 0x91 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x66c3, gbc.sp());
        EXPECT(0x4c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0367
        gbc.setState(0x57db, 0xbb15, 0x3400, 0x690e, 0x73a7, 0xefda, 0x1, 0x1);
        gbc.writeMem(0x57db, { 0x91 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbb15, gbc.sp());
        EXPECT(0x57dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0368
        gbc.setState(0x5cd6, 0xf687, 0xa720, 0x5192, 0x5a40, 0xcaf7, 0x0, 0x1);
        gbc.writeMem(0x5cd6, { 0x91 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf687, gbc.sp());
        EXPECT(0x5cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0369
        gbc.setState(0xb5d5, 0x791e, 0x26e0, 0xe408, 0x1b1d, 0x5a11, 0x1, 0x1);
        gbc.writeMem(0xb5d5, { 0x91 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x791e, gbc.sp());
        EXPECT(0xb5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb5d5));
        // 91 036A
        gbc.setState(0xa6a8, 0xc1c, 0x9fb0, 0xf009, 0x2540, 0x53ab, 0x0, 0x0);
        gbc.writeMem(0xa6a8, { 0x91 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc1c, gbc.sp());
        EXPECT(0xa6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa6a8));
        // 91 036B
        gbc.setState(0x4498, 0x84d1, 0x8cd0, 0xbd89, 0x57b6, 0x3c1d, 0x1, 0x0);
        gbc.writeMem(0x4498, { 0x91 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x84d1, gbc.sp());
        EXPECT(0x4499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 036D
        gbc.setState(0xa648, 0x14d3, 0xe9c0, 0x4df7, 0x7f2f, 0xec8e, 0x1, 0x1);
        gbc.writeMem(0xa648, { 0x91 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x14d3, gbc.sp());
        EXPECT(0xa649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa648));
        // 91 036E
        gbc.setState(0x8193, 0x4041, 0x1040, 0x7e29, 0xd9b0, 0xc618, 0x1, 0x1);
        gbc.writeMem(0x8193, { 0x91 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4041, gbc.sp());
        EXPECT(0x8194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8193));
        // 91 036F
        gbc.setState(0x8613, 0x7f32, 0xf050, 0x68c0, 0xc2dc, 0xd330, 0x0, 0x0);
        gbc.writeMem(0x8613, { 0x91 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7f32, gbc.sp());
        EXPECT(0x8614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8613));
        // 91 0370
        gbc.setState(0x6a18, 0x5e5a, 0x4e90, 0x9ad2, 0x8e2e, 0x42ae, 0x0, 0x0);
        gbc.writeMem(0x6a18, { 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5e5a, gbc.sp());
        EXPECT(0x6a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0371
        gbc.setState(0x36ae, 0x2ce1, 0xf940, 0x66, 0x3416, 0x6500, 0x0, 0x0);
        gbc.writeMem(0x36ae, { 0x91 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2ce1, gbc.sp());
        EXPECT(0x36af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0372
        gbc.setState(0xd200, 0x1b2d, 0x3610, 0xca89, 0xf1b4, 0xd9f9, 0x0, 0x0);
        gbc.writeMem(0xd200, { 0x91 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1b2d, gbc.sp());
        EXPECT(0xd201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd200));
        // 91 0373
        gbc.setState(0xd21c, 0x569, 0x510, 0x90c9, 0x8570, 0xbb3d, 0x0, 0x0);
        gbc.writeMem(0xd21c, { 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x569, gbc.sp());
        EXPECT(0xd21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd21c));
        // 91 0374
        gbc.setState(0xdf0e, 0xc8b3, 0x53c0, 0x81c4, 0x18dc, 0xbdda, 0x1, 0x0);
        gbc.writeMem(0xdf0e, { 0x91 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc8b3, gbc.sp());
        EXPECT(0xdf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdf0e));
        // 91 0375
        gbc.setState(0xbfeb, 0x8151, 0xaf0, 0x7c5d, 0xc37c, 0xa76a, 0x1, 0x1);
        gbc.writeMem(0xbfeb, { 0x91 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8151, gbc.sp());
        EXPECT(0xbfec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbfeb));
        // 91 0377
        gbc.setState(0xda46, 0xe198, 0xb640, 0xb97e, 0x341, 0x13af, 0x1, 0x1);
        gbc.writeMem(0xda46, { 0x91 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe198, gbc.sp());
        EXPECT(0xda47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xda46));
        // 91 0378
        gbc.setState(0x97de, 0xc477, 0x5d80, 0x52dc, 0xf90f, 0xd4a7, 0x1, 0x1);
        gbc.writeMem(0x97de, { 0x91 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc477, gbc.sp());
        EXPECT(0x97df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x97de));
        // 91 0379
        gbc.setState(0x79d, 0x326a, 0xa570, 0xf1b2, 0x6d80, 0x908e, 0x1, 0x0);
        gbc.writeMem(0x79d, { 0x91 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x326a, gbc.sp());
        EXPECT(0x79e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 037A
        gbc.setState(0xf1a, 0x87e3, 0x1e70, 0x970, 0xa3ba, 0xec30, 0x0, 0x0);
        gbc.writeMem(0xf1a, { 0x91 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x87e3, gbc.sp());
        EXPECT(0xf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 037B
        gbc.setState(0xccfe, 0x2a71, 0xed0, 0xf74a, 0xf7d4, 0x6bf7, 0x1, 0x1);
        gbc.writeMem(0xccfe, { 0x91 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2a71, gbc.sp());
        EXPECT(0xccff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xccfe));
        // 91 037C
        gbc.setState(0xe5a1, 0xea27, 0x75a0, 0xb370, 0xa07, 0xb799, 0x0, 0x1);
        gbc.writeMem(0xe5a1, { 0x91 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xea27, gbc.sp());
        EXPECT(0xe5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe5a1));
        // 91 037D
        gbc.setState(0x343, 0x5623, 0xd0f0, 0x193a, 0xccdc, 0x7a52, 0x0, 0x1);
        gbc.writeMem(0x343, { 0x91 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5623, gbc.sp());
        EXPECT(0x344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 037E
        gbc.setState(0x82e2, 0x3e02, 0xd510, 0xf9c6, 0x493e, 0x3a1b, 0x0, 0x0);
        gbc.writeMem(0x82e2, { 0x91 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3e02, gbc.sp());
        EXPECT(0x82e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x82e2));
        // 91 037F
        gbc.setState(0x87c5, 0xa49e, 0x4890, 0xeabc, 0x382c, 0x7fd1, 0x1, 0x0);
        gbc.writeMem(0x87c5, { 0x91 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa49e, gbc.sp());
        EXPECT(0x87c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x87c5));
        // 91 0380
        gbc.setState(0xc8bb, 0xcf45, 0x6ba0, 0xa383, 0x867b, 0xb9fd, 0x1, 0x0);
        gbc.writeMem(0xc8bb, { 0x91 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcf45, gbc.sp());
        EXPECT(0xc8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc8bb));
        // 91 0381
        gbc.setState(0xe5e9, 0x7329, 0xf410, 0xf031, 0xe66c, 0x66c9, 0x0, 0x0);
        gbc.writeMem(0xe5e9, { 0x91 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7329, gbc.sp());
        EXPECT(0xe5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe5e9));
        // 91 0382
        gbc.setState(0x9555, 0x7b2b, 0xc6e0, 0xa255, 0xfa67, 0xf3f7, 0x0, 0x0);
        gbc.writeMem(0x9555, { 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7b2b, gbc.sp());
        EXPECT(0x9556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9555));
        // 91 0383
        gbc.setState(0x541b, 0xd090, 0x4150, 0x221c, 0x297a, 0x588d, 0x1, 0x1);
        gbc.writeMem(0x541b, { 0x91 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd090, gbc.sp());
        EXPECT(0x541c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0384
        gbc.setState(0x7a4, 0xde36, 0xcff0, 0x5775, 0xd359, 0xbfdc, 0x0, 0x0);
        gbc.writeMem(0x7a4, { 0x91 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xde36, gbc.sp());
        EXPECT(0x7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0385
        gbc.setState(0x4b10, 0x4acc, 0x4d0, 0x4a6f, 0x8d22, 0xdb8c, 0x0, 0x1);
        gbc.writeMem(0x4b10, { 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4acc, gbc.sp());
        EXPECT(0x4b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0386
        gbc.setState(0xa393, 0x6fd9, 0x4cc0, 0xe9cc, 0x9d29, 0x4cb7, 0x1, 0x0);
        gbc.writeMem(0xa393, { 0x91 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6fd9, gbc.sp());
        EXPECT(0xa394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa393));
        // 91 0387
        gbc.setState(0xbfb6, 0x8e54, 0xd930, 0xa8fe, 0xf4f1, 0xd116, 0x1, 0x1);
        gbc.writeMem(0xbfb6, { 0x91 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8e54, gbc.sp());
        EXPECT(0xbfb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbfb6));
        // 91 0388
        gbc.setState(0x991d, 0x8112, 0x60e0, 0x2235, 0xa9c, 0x3de0, 0x1, 0x1);
        gbc.writeMem(0x991d, { 0x91 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8112, gbc.sp());
        EXPECT(0x991e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x991d));
        // 91 0389
        gbc.setState(0x8acd, 0x3a56, 0xff40, 0xe837, 0x7c93, 0xd0c2, 0x1, 0x0);
        gbc.writeMem(0x8acd, { 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3a56, gbc.sp());
        EXPECT(0x8ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8acd));
        // 91 038A
        gbc.setState(0x58b0, 0xabc6, 0x7450, 0x9ecb, 0xc81, 0xb67c, 0x0, 0x1);
        gbc.writeMem(0x58b0, { 0x91 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xabc6, gbc.sp());
        EXPECT(0x58b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 038B
        gbc.setState(0xb200, 0xecdb, 0x430, 0x7d25, 0x41f, 0xa451, 0x1, 0x1);
        gbc.writeMem(0xb200, { 0x91 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xecdb, gbc.sp());
        EXPECT(0xb201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb200));
        // 91 038C
        gbc.setState(0x3f57, 0x5b50, 0x4750, 0x8cdf, 0xbce1, 0xc28c, 0x0, 0x1);
        gbc.writeMem(0x3f57, { 0x91 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5b50, gbc.sp());
        EXPECT(0x3f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 038D
        gbc.setState(0xa803, 0x4173, 0xb400, 0x6cd9, 0x43c7, 0xfde5, 0x0, 0x1);
        gbc.writeMem(0xa803, { 0x91 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4173, gbc.sp());
        EXPECT(0xa804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa803));
        // 91 038E
        gbc.setState(0xaa0d, 0xd3bc, 0xd200, 0x358f, 0xf11b, 0x104a, 0x0, 0x1);
        gbc.writeMem(0xaa0d, { 0x91 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd3bc, gbc.sp());
        EXPECT(0xaa0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xaa0d));
        // 91 038F
        gbc.setState(0xd286, 0xe20b, 0x9eb0, 0xfb55, 0x9d8d, 0x6350, 0x1, 0x0);
        gbc.writeMem(0xd286, { 0x91 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe20b, gbc.sp());
        EXPECT(0xd287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd286));
        // 91 0390
        gbc.setState(0x28fb, 0x77f5, 0xca50, 0x4fbd, 0xd626, 0x54a8, 0x1, 0x0);
        gbc.writeMem(0x28fb, { 0x91 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x77f5, gbc.sp());
        EXPECT(0x28fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0391
        gbc.setState(0x26b5, 0x6c88, 0x9040, 0x1d68, 0x1e7b, 0x98aa, 0x1, 0x0);
        gbc.writeMem(0x26b5, { 0x91 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6c88, gbc.sp());
        EXPECT(0x26b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0392
        gbc.setState(0x7889, 0x3865, 0x2cd0, 0xb94d, 0x5df5, 0xe753, 0x0, 0x1);
        gbc.writeMem(0x7889, { 0x91 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3865, gbc.sp());
        EXPECT(0x788a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 0393
        gbc.setState(0xd28b, 0x9828, 0x2120, 0xeda9, 0xe5bb, 0x4c16, 0x0, 0x1);
        gbc.writeMem(0xd28b, { 0x91 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9828, gbc.sp());
        EXPECT(0xd28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd28b));
        // 91 0394
        gbc.setState(0x1f24, 0xdc50, 0xdf00, 0x1e52, 0x9cf7, 0x9cde, 0x0, 0x1);
        gbc.writeMem(0x1f24, { 0x91 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdc50, gbc.sp());
        EXPECT(0x1f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0395
        gbc.setState(0x8fd6, 0x1d1e, 0x4a60, 0x2be, 0xb608, 0x4598, 0x0, 0x0);
        gbc.writeMem(0x8fd6, { 0x91 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1d1e, gbc.sp());
        EXPECT(0x8fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8fd6));
        // 91 0396
        gbc.setState(0xbde9, 0x75dd, 0x6f40, 0xa8c0, 0x578, 0x2018, 0x1, 0x1);
        gbc.writeMem(0xbde9, { 0x91 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x75dd, gbc.sp());
        EXPECT(0xbdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbde9));
        // 91 0397
        gbc.setState(0x2914, 0xe9df, 0x8450, 0xb26d, 0x307, 0xdc6e, 0x0, 0x1);
        gbc.writeMem(0x2914, { 0x91 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe9df, gbc.sp());
        EXPECT(0x2915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0398
        gbc.setState(0x17bc, 0x11df, 0xfbf0, 0x25c6, 0xfb84, 0xed94, 0x0, 0x0);
        gbc.writeMem(0x17bc, { 0x91 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x11df, gbc.sp());
        EXPECT(0x17bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 0399
        gbc.setState(0xeeef, 0x4460, 0x5f40, 0x2986, 0xe02d, 0xcece, 0x1, 0x0);
        gbc.writeMem(0xeeef, { 0x91 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4460, gbc.sp());
        EXPECT(0xeef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xeeef));
        // 91 039A
        gbc.setState(0x7baf, 0xb00b, 0x75a0, 0x75f1, 0x278e, 0xd7de, 0x0, 0x0);
        gbc.writeMem(0x7baf, { 0x91 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb00b, gbc.sp());
        EXPECT(0x7bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 039B
        gbc.setState(0x6493, 0xa82, 0x3a30, 0xcd76, 0xc9ae, 0xec99, 0x0, 0x1);
        gbc.writeMem(0x6493, { 0x91 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa82, gbc.sp());
        EXPECT(0x6494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 039C
        gbc.setState(0x2f6b, 0xfaf3, 0xf3e0, 0xe36f, 0xc534, 0x33fe, 0x1, 0x0);
        gbc.writeMem(0x2f6b, { 0x91 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfaf3, gbc.sp());
        EXPECT(0x2f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 039D
        gbc.setState(0x87, 0x8de9, 0x81b0, 0x4cca, 0xa6d9, 0x5742, 0x0, 0x0);
        gbc.writeMem(0x87, { 0x91 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8de9, gbc.sp());
        EXPECT(0x88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 039E
        gbc.setState(0x1f0e, 0x15f1, 0x2510, 0x20f2, 0xa4dd, 0x8f0, 0x0, 0x0);
        gbc.writeMem(0x1f0e, { 0x91 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x15f1, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 039F
        gbc.setState(0xa2dc, 0xae6f, 0xa0a0, 0x8db8, 0x6f7d, 0x2d53, 0x0, 0x0);
        gbc.writeMem(0xa2dc, { 0x91 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xae6f, gbc.sp());
        EXPECT(0xa2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa2dc));
        // 91 03A0
        gbc.setState(0x32ba, 0x4879, 0x39f0, 0xd27d, 0xf7d5, 0x500, 0x1, 0x1);
        gbc.writeMem(0x32ba, { 0x91 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4879, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03A1
        gbc.setState(0x4083, 0x6ea8, 0x46b0, 0x94f0, 0x42ba, 0x3a25, 0x1, 0x0);
        gbc.writeMem(0x4083, { 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0x4084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03A2
        gbc.setState(0xd8d6, 0x6846, 0xbfc0, 0x7a3b, 0xbd77, 0x6919, 0x1, 0x0);
        gbc.writeMem(0xd8d6, { 0x91 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6846, gbc.sp());
        EXPECT(0xd8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd8d6));
        // 91 03A3
        gbc.setState(0xb105, 0x458b, 0x1780, 0x1a6f, 0xe0f7, 0x116e, 0x1, 0x1);
        gbc.writeMem(0xb105, { 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x458b, gbc.sp());
        EXPECT(0xb106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb105));
        // 91 03A4
        gbc.setState(0x6665, 0x513, 0x5fe0, 0x78ce, 0x122b, 0x55cf, 0x1, 0x1);
        gbc.writeMem(0x6665, { 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x513, gbc.sp());
        EXPECT(0x6666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03A5
        gbc.setState(0xba52, 0xa66d, 0xb8b0, 0x98f9, 0x3d16, 0x40d6, 0x1, 0x1);
        gbc.writeMem(0xba52, { 0x91 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa66d, gbc.sp());
        EXPECT(0xba53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xba52));
        // 91 03A6
        gbc.setState(0x5f31, 0x5367, 0x7cd0, 0x7f44, 0x3d75, 0x9f47, 0x1, 0x0);
        gbc.writeMem(0x5f31, { 0x91 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5367, gbc.sp());
        EXPECT(0x5f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 03A7
        gbc.setState(0x1ac, 0xc48a, 0xc8a0, 0x7272, 0x42a6, 0x4d4a, 0x1, 0x0);
        gbc.writeMem(0x1ac, { 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc48a, gbc.sp());
        EXPECT(0x1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 03A8
        gbc.setState(0x9b31, 0x7b9c, 0x4660, 0x1dfa, 0xbfc6, 0x5653, 0x0, 0x0);
        gbc.writeMem(0x9b31, { 0x91 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7b9c, gbc.sp());
        EXPECT(0x9b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9b31));
        // 91 03A9
        gbc.setState(0xee3b, 0xe1cc, 0x4ca0, 0x3097, 0x84e4, 0x4d1, 0x0, 0x0);
        gbc.writeMem(0xee3b, { 0x91 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe1cc, gbc.sp());
        EXPECT(0xee3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xee3b));
        // 91 03AA
        gbc.setState(0xba63, 0xc742, 0xca20, 0x6123, 0xeea0, 0x8cc0, 0x1, 0x0);
        gbc.writeMem(0xba63, { 0x91 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc742, gbc.sp());
        EXPECT(0xba64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xba63));
        // 91 03AB
        gbc.setState(0x9e98, 0x7554, 0x1470, 0x29e5, 0xbbcc, 0xd80, 0x0, 0x0);
        gbc.writeMem(0x9e98, { 0x91 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7554, gbc.sp());
        EXPECT(0x9e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9e98));
        // 91 03AC
        gbc.setState(0x95ab, 0x12d2, 0xa70, 0xb64d, 0xa03e, 0xfdf9, 0x1, 0x0);
        gbc.writeMem(0x95ab, { 0x91 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x12d2, gbc.sp());
        EXPECT(0x95ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x95ab));
        // 91 03AD
        gbc.setState(0xdbc6, 0x76a3, 0xd310, 0x1948, 0x2476, 0xb8a3, 0x0, 0x0);
        gbc.writeMem(0xdbc6, { 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x76a3, gbc.sp());
        EXPECT(0xdbc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdbc6));
        // 91 03AE
        gbc.setState(0x2e58, 0x3966, 0x15c0, 0x5554, 0xcf3a, 0xa403, 0x1, 0x0);
        gbc.writeMem(0x2e58, { 0x91 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3966, gbc.sp());
        EXPECT(0x2e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03AF
        gbc.setState(0xdd28, 0x2c89, 0xc930, 0xf8e2, 0x6905, 0x33df, 0x0, 0x1);
        gbc.writeMem(0xdd28, { 0x91 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2c89, gbc.sp());
        EXPECT(0xdd29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdd28));
        // 91 03B0
        gbc.setState(0xeea8, 0xf54c, 0xe250, 0x683a, 0xd3e8, 0x38f3, 0x0, 0x1);
        gbc.writeMem(0xeea8, { 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf54c, gbc.sp());
        EXPECT(0xeea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xeea8));
        // 91 03B1
        gbc.setState(0xc6e8, 0xba52, 0xa1d0, 0x7092, 0xf2c2, 0xb789, 0x0, 0x0);
        gbc.writeMem(0xc6e8, { 0x91 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xba52, gbc.sp());
        EXPECT(0xc6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc6e8));
        // 91 03B2
        gbc.setState(0x8379, 0x8882, 0xb110, 0xd0e3, 0x6fd, 0x5789, 0x1, 0x0);
        gbc.writeMem(0x8379, { 0x91 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8882, gbc.sp());
        EXPECT(0x837a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8379));
        // 91 03B3
        gbc.setState(0xab57, 0x99e0, 0x5840, 0xa379, 0x428, 0x6a13, 0x0, 0x1);
        gbc.writeMem(0xab57, { 0x91 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x99e0, gbc.sp());
        EXPECT(0xab58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xab57));
        // 91 03B4
        gbc.setState(0xb9bc, 0x2f7b, 0xfa90, 0x33c7, 0xbc54, 0x902c, 0x1, 0x1);
        gbc.writeMem(0xb9bc, { 0x91 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2f7b, gbc.sp());
        EXPECT(0xb9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb9bc));
        // 91 03B5
        gbc.setState(0xd198, 0xf34b, 0x8490, 0xe748, 0x820c, 0x4e48, 0x0, 0x0);
        gbc.writeMem(0xd198, { 0x91 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf34b, gbc.sp());
        EXPECT(0xd199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd198));
        // 91 03B6
        gbc.setState(0x4469, 0xc6d, 0x7fd0, 0xc4aa, 0x950b, 0x88f6, 0x1, 0x0);
        gbc.writeMem(0x4469, { 0x91 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc6d, gbc.sp());
        EXPECT(0x446a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03B7
        gbc.setState(0x42ce, 0x53eb, 0x9230, 0xdd2b, 0x30ad, 0x5183, 0x0, 0x1);
        gbc.writeMem(0x42ce, { 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x53eb, gbc.sp());
        EXPECT(0x42cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 03B8
        gbc.setState(0xdfa0, 0x4d1e, 0xe480, 0xe1f0, 0x2fb, 0xf104, 0x1, 0x1);
        gbc.writeMem(0xdfa0, { 0x91 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4d1e, gbc.sp());
        EXPECT(0xdfa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdfa0));
        // 91 03B9
        gbc.setState(0x9ada, 0x438d, 0x6c50, 0xc670, 0x978f, 0x705, 0x1, 0x1);
        gbc.writeMem(0x9ada, { 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x438d, gbc.sp());
        EXPECT(0x9adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9ada));
        // 91 03BB
        gbc.setState(0xddf3, 0x3ef7, 0xe40, 0x9f10, 0x5515, 0x6424, 0x0, 0x1);
        gbc.writeMem(0xddf3, { 0x91 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3ef7, gbc.sp());
        EXPECT(0xddf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xddf3));
        // 91 03BC
        gbc.setState(0x1fb, 0xbe4f, 0x60c0, 0x4181, 0x9d39, 0xfa6f, 0x0, 0x1);
        gbc.writeMem(0x1fb, { 0x91 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbe4f, gbc.sp());
        EXPECT(0x1fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03BD
        gbc.setState(0x5faa, 0x963a, 0xaf70, 0x4ef0, 0x948a, 0xef72, 0x1, 0x1);
        gbc.writeMem(0x5faa, { 0x91 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x963a, gbc.sp());
        EXPECT(0x5fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03BE
        gbc.setState(0x4ea3, 0x6697, 0xe2b0, 0xe9fb, 0xc12a, 0x1304, 0x0, 0x0);
        gbc.writeMem(0x4ea3, { 0x91 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6697, gbc.sp());
        EXPECT(0x4ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03C0
        gbc.setState(0x7549, 0x85de, 0x6210, 0x4c65, 0xfd9f, 0x32d9, 0x0, 0x1);
        gbc.writeMem(0x7549, { 0x91 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x85de, gbc.sp());
        EXPECT(0x754a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03C1
        gbc.setState(0x7184, 0x51dd, 0x9d20, 0x760e, 0x344d, 0x506b, 0x0, 0x0);
        gbc.writeMem(0x7184, { 0x91 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x51dd, gbc.sp());
        EXPECT(0x7185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 03C2
        gbc.setState(0x9b0e, 0x6375, 0xaa60, 0x757a, 0x6d8b, 0xa29e, 0x1, 0x1);
        gbc.writeMem(0x9b0e, { 0x91 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6375, gbc.sp());
        EXPECT(0x9b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9b0e));
        // 91 03C3
        gbc.setState(0xad3d, 0x7c89, 0x9500, 0x7f66, 0x927d, 0x7319, 0x0, 0x0);
        gbc.writeMem(0xad3d, { 0x91 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7c89, gbc.sp());
        EXPECT(0xad3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xad3d));
        // 91 03C4
        gbc.setState(0x8b51, 0xfe9a, 0xc760, 0x1d60, 0x97c8, 0xa57b, 0x0, 0x0);
        gbc.writeMem(0x8b51, { 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfe9a, gbc.sp());
        EXPECT(0x8b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8b51));
        // 91 03C5
        gbc.setState(0xbed3, 0x8f72, 0x31f0, 0x1b7c, 0x9a1, 0x7ed3, 0x0, 0x1);
        gbc.writeMem(0xbed3, { 0x91 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8f72, gbc.sp());
        EXPECT(0xbed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbed3));
        // 91 03C6
        gbc.setState(0x10c0, 0x4eb4, 0x41a0, 0xf988, 0x23a7, 0x86b4, 0x1, 0x0);
        gbc.writeMem(0x10c0, { 0x91 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4eb4, gbc.sp());
        EXPECT(0x10c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03C7
        gbc.setState(0xe687, 0xb108, 0x8740, 0x12bf, 0x3d0e, 0x9ac7, 0x1, 0x1);
        gbc.writeMem(0xe687, { 0x91 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb108, gbc.sp());
        EXPECT(0xe688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe687));
        // 91 03C8
        gbc.setState(0xb888, 0x1495, 0x4f50, 0x879b, 0x1647, 0x4296, 0x1, 0x1);
        gbc.writeMem(0xb888, { 0x91 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1495, gbc.sp());
        EXPECT(0xb889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb888));
        // 91 03C9
        gbc.setState(0x9366, 0xc006, 0x56c0, 0xb1e3, 0x94b0, 0xb153, 0x1, 0x1);
        gbc.writeMem(0x9366, { 0x91 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc006, gbc.sp());
        EXPECT(0x9367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9366));
        // 91 03CA
        gbc.setState(0x4749, 0x1434, 0x1f00, 0x5cf5, 0x2b16, 0xfd4f, 0x1, 0x1);
        gbc.writeMem(0x4749, { 0x91 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1434, gbc.sp());
        EXPECT(0x474a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03CB
        gbc.setState(0x1706, 0x7209, 0x41a0, 0x242a, 0x4610, 0x7938, 0x1, 0x1);
        gbc.writeMem(0x1706, { 0x91 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7209, gbc.sp());
        EXPECT(0x1707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 03CC
        gbc.setState(0xa688, 0x6dad, 0xc500, 0xa8c8, 0x7d3f, 0x3f2f, 0x0, 0x1);
        gbc.writeMem(0xa688, { 0x91 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6dad, gbc.sp());
        EXPECT(0xa689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa688));
        // 91 03CD
        gbc.setState(0xa641, 0xd234, 0x6750, 0xcd68, 0x2f6c, 0x6866, 0x1, 0x0);
        gbc.writeMem(0xa641, { 0x91 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd234, gbc.sp());
        EXPECT(0xa642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa641));
        // 91 03CE
        gbc.setState(0x4834, 0x1ff2, 0x27e0, 0xb9c9, 0x1902, 0xbd84, 0x0, 0x1);
        gbc.writeMem(0x4834, { 0x91 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1ff2, gbc.sp());
        EXPECT(0x4835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03CF
        gbc.setState(0xed4d, 0xe7ea, 0xdcb0, 0xebe8, 0x10fa, 0xf7b5, 0x0, 0x0);
        gbc.writeMem(0xed4d, { 0x91 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe7ea, gbc.sp());
        EXPECT(0xed4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xed4d));
        // 91 03D0
        gbc.setState(0xa468, 0xd65a, 0x2ce0, 0xfbc, 0xa4, 0xf218, 0x0, 0x0);
        gbc.writeMem(0xa468, { 0x91 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd65a, gbc.sp());
        EXPECT(0xa469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa468));
        // 91 03D1
        gbc.setState(0x6253, 0xbc1c, 0x8b0, 0x58d4, 0xbfc0, 0xa4ad, 0x0, 0x0);
        gbc.writeMem(0x6253, { 0x91 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbc1c, gbc.sp());
        EXPECT(0x6254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03D2
        gbc.setState(0xd658, 0xf207, 0x86c0, 0x875e, 0xc753, 0x7cac, 0x1, 0x0);
        gbc.writeMem(0xd658, { 0x91 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf207, gbc.sp());
        EXPECT(0xd659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd658));
        // 91 03D3
        gbc.setState(0x3b4e, 0x4f3e, 0x1800, 0x748f, 0xaa2b, 0x712b, 0x1, 0x1);
        gbc.writeMem(0x3b4e, { 0x91 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4f3e, gbc.sp());
        EXPECT(0x3b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03D4
        gbc.setState(0x3497, 0x9703, 0x4af0, 0x10e7, 0x8365, 0x8c0, 0x0, 0x0);
        gbc.writeMem(0x3497, { 0x91 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9703, gbc.sp());
        EXPECT(0x3498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03D5
        gbc.setState(0x93d4, 0x3cba, 0x8c80, 0xedd5, 0xd41b, 0x1320, 0x1, 0x0);
        gbc.writeMem(0x93d4, { 0x91 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3cba, gbc.sp());
        EXPECT(0x93d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x93d4));
        // 91 03D7
        gbc.setState(0xb159, 0xa0db, 0x2e80, 0x8ed8, 0xa930, 0xdb6, 0x0, 0x1);
        gbc.writeMem(0xb159, { 0x91 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa0db, gbc.sp());
        EXPECT(0xb15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb159));
        // 91 03D8
        gbc.setState(0x771c, 0xd4b0, 0x28b0, 0x1eaa, 0x11e0, 0xf869, 0x0, 0x1);
        gbc.writeMem(0x771c, { 0x91 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd4b0, gbc.sp());
        EXPECT(0x771d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03D9
        gbc.setState(0x2a07, 0xcc52, 0x9b0, 0x3aa3, 0x4cea, 0x1dbe, 0x0, 0x1);
        gbc.writeMem(0x2a07, { 0x91 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcc52, gbc.sp());
        EXPECT(0x2a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03DA
        gbc.setState(0x95fe, 0xd80b, 0xf040, 0x8974, 0x7dc4, 0x5796, 0x0, 0x0);
        gbc.writeMem(0x95fe, { 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd80b, gbc.sp());
        EXPECT(0x95ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x95fe));
        // 91 03DB
        gbc.setState(0xb91d, 0xf448, 0x9f10, 0xd68, 0xf15c, 0x3ca8, 0x0, 0x0);
        gbc.writeMem(0xb91d, { 0x91 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf448, gbc.sp());
        EXPECT(0xb91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb91d));
        // 91 03DC
        gbc.setState(0x39e8, 0x694c, 0x5290, 0x9724, 0xc812, 0x2090, 0x1, 0x0);
        gbc.writeMem(0x39e8, { 0x91 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0x39e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 03DD
        gbc.setState(0x5067, 0xd16c, 0xfd70, 0x32a0, 0xab00, 0xc33, 0x1, 0x0);
        gbc.writeMem(0x5067, { 0x91 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd16c, gbc.sp());
        EXPECT(0x5068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 03DE
        gbc.setState(0x8bfc, 0x1abe, 0x2030, 0x63b9, 0x83ee, 0xc740, 0x1, 0x1);
        gbc.writeMem(0x8bfc, { 0x91 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1abe, gbc.sp());
        EXPECT(0x8bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8bfc));
        // 91 03DF
        gbc.setState(0x5be1, 0xb330, 0x84b0, 0x27f5, 0x685e, 0x38b2, 0x0, 0x1);
        gbc.writeMem(0x5be1, { 0x91 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb330, gbc.sp());
        EXPECT(0x5be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03E0
        gbc.setState(0x7912, 0xb382, 0x2120, 0xa1e6, 0x2f4a, 0x74ad, 0x1, 0x1);
        gbc.writeMem(0x7912, { 0x91 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb382, gbc.sp());
        EXPECT(0x7913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03E2
        gbc.setState(0xb66e, 0x6153, 0x59a0, 0x86c5, 0xea10, 0xa27c, 0x0, 0x1);
        gbc.writeMem(0xb66e, { 0x91 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6153, gbc.sp());
        EXPECT(0xb66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb66e));
        // 91 03E3
        gbc.setState(0x86d2, 0x72fe, 0xf800, 0x13dc, 0xd152, 0x6c8d, 0x1, 0x0);
        gbc.writeMem(0x86d2, { 0x91 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x72fe, gbc.sp());
        EXPECT(0x86d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x86d2));
        // 91 03E4
        gbc.setState(0x7fe, 0x92cc, 0xe7c0, 0x2f19, 0xd2f1, 0xd2d5, 0x0, 0x0);
        gbc.writeMem(0x7fe, { 0x91 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x92cc, gbc.sp());
        EXPECT(0x7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 91 03E5
        gbc.setState(0xb6fd, 0xb84e, 0x9990, 0x91bf, 0x9f02, 0x6dfc, 0x0, 0x1);
        gbc.writeMem(0xb6fd, { 0x91 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb84e, gbc.sp());
        EXPECT(0xb6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb6fd));
        // 91 03E6
        gbc.setState(0x32aa, 0x23ff, 0x79c0, 0xe4d9, 0x83c1, 0x2cb2, 0x0, 0x1);
        gbc.writeMem(0x32aa, { 0x91 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x23ff, gbc.sp());
        EXPECT(0x32ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 91 03E7
        gbc.setState(0x63a7, 0x74aa, 0xd4a0, 0x41ad, 0xe8de, 0x5cde, 0x1, 0x0);
        gbc.writeMem(0x63a7, { 0x91 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x74aa, gbc.sp());
        EXPECT(0x63a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
