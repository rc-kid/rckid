    TEST(gbcemu, opcode_cb_27) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 27 0000
        gbc.setState(0x5622, 0x3b3f, 0xa960, 0xcc8e, 0x82ee, 0xbd39, 0x1, 0x0);
        gbc.writeMem(0x5622, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3b3f, gbc.sp());
        EXPECT(0x5624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0001
        gbc.setState(0xa2dd, 0x601e, 0x99b0, 0xbcda, 0xb822, 0x6cd5, 0x0, 0x0);
        gbc.writeMem(0xa2dd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x601e, gbc.sp());
        EXPECT(0xa2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2dd));
        EXPECT(0x27, gbc.readMem(0xa2de));
        // CB 27 0002
        gbc.setState(0xad0a, 0xb31, 0xb5d0, 0xaa54, 0xcafb, 0xec3a, 0x0, 0x1);
        gbc.writeMem(0xad0a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb31, gbc.sp());
        EXPECT(0xad0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0a));
        EXPECT(0x27, gbc.readMem(0xad0b));
        // CB 27 0003
        gbc.setState(0xd2a1, 0x21be, 0x8ab0, 0xebd6, 0x436a, 0x4156, 0x1, 0x0);
        gbc.writeMem(0xd2a1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x21be, gbc.sp());
        EXPECT(0xd2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a1));
        EXPECT(0x27, gbc.readMem(0xd2a2));
        // CB 27 0004
        gbc.setState(0x9777, 0xaf4b, 0x52e0, 0xcba0, 0xf0a6, 0x9c2c, 0x0, 0x1);
        gbc.writeMem(0x9777, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xaf4b, gbc.sp());
        EXPECT(0x9779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9777));
        EXPECT(0x27, gbc.readMem(0x9778));
        // CB 27 0005
        gbc.setState(0x3352, 0x162d, 0x89b0, 0xc06, 0xb470, 0x64ca, 0x1, 0x0);
        gbc.writeMem(0x3352, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x162d, gbc.sp());
        EXPECT(0x3354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0006
        gbc.setState(0x1021, 0xff15, 0xa6c0, 0x8c23, 0x829b, 0xd540, 0x1, 0x0);
        gbc.writeMem(0x1021, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xff15, gbc.sp());
        EXPECT(0x1023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0007
        gbc.setState(0x1d75, 0x28a3, 0x4770, 0xc533, 0x30f7, 0xfcfe, 0x1, 0x1);
        gbc.writeMem(0x1d75, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x28a3, gbc.sp());
        EXPECT(0x1d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0008
        gbc.setState(0x6ad7, 0x375b, 0x6e60, 0x2682, 0xef0, 0x998b, 0x1, 0x0);
        gbc.writeMem(0x6ad7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x375b, gbc.sp());
        EXPECT(0x6ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0009
        gbc.setState(0x255e, 0xa9f, 0x150, 0x155e, 0xf37, 0x3356, 0x0, 0x1);
        gbc.writeMem(0x255e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa9f, gbc.sp());
        EXPECT(0x2560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 000A
        gbc.setState(0x3bc3, 0x856, 0x3500, 0xbd27, 0x6ae, 0xbdcf, 0x1, 0x0);
        gbc.writeMem(0x3bc3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x856, gbc.sp());
        EXPECT(0x3bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 000B
        gbc.setState(0xc3f6, 0xd9f6, 0x5c80, 0x7c53, 0x8e2c, 0xd9a8, 0x0, 0x0);
        gbc.writeMem(0xc3f6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd9f6, gbc.sp());
        EXPECT(0xc3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f6));
        EXPECT(0x27, gbc.readMem(0xc3f7));
        // CB 27 000C
        gbc.setState(0x4f37, 0x1d5e, 0xe0b0, 0x833f, 0x682a, 0xf2ab, 0x1, 0x1);
        gbc.writeMem(0x4f37, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1d5e, gbc.sp());
        EXPECT(0x4f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 000D
        gbc.setState(0xb7c3, 0x685, 0x1850, 0x3199, 0x5f90, 0x511a, 0x1, 0x1);
        gbc.writeMem(0xb7c3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x685, gbc.sp());
        EXPECT(0xb7c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c3));
        EXPECT(0x27, gbc.readMem(0xb7c4));
        // CB 27 000E
        gbc.setState(0x7792, 0xf1da, 0xe7a0, 0x43ca, 0xd5e1, 0xac43, 0x0, 0x0);
        gbc.writeMem(0x7792, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf1da, gbc.sp());
        EXPECT(0x7794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 000F
        gbc.setState(0x3bac, 0x2a5d, 0xceb0, 0x9e0a, 0x1919, 0x64dc, 0x0, 0x0);
        gbc.writeMem(0x3bac, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2a5d, gbc.sp());
        EXPECT(0x3bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0010
        gbc.setState(0xd0a8, 0x7b68, 0x8490, 0x603, 0x7c45, 0x9e64, 0x0, 0x1);
        gbc.writeMem(0xd0a8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7b68, gbc.sp());
        EXPECT(0xd0aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a8));
        EXPECT(0x27, gbc.readMem(0xd0a9));
        // CB 27 0011
        gbc.setState(0x1fa7, 0x7d39, 0x4140, 0x87fd, 0x96c9, 0x8b6b, 0x0, 0x1);
        gbc.writeMem(0x1fa7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7d39, gbc.sp());
        EXPECT(0x1fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0012
        gbc.setState(0xe5a4, 0x788b, 0x6800, 0x15ab, 0xaeee, 0xfa92, 0x0, 0x0);
        gbc.writeMem(0xe5a4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x788b, gbc.sp());
        EXPECT(0xe5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a4));
        EXPECT(0x27, gbc.readMem(0xe5a5));
        // CB 27 0013
        gbc.setState(0x8eb, 0x6005, 0x1350, 0xa8d1, 0x93c8, 0x328a, 0x1, 0x1);
        gbc.writeMem(0x8eb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6005, gbc.sp());
        EXPECT(0x8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0014
        gbc.setState(0xd4ff, 0x5ea6, 0xd000, 0x836f, 0xb219, 0xca6b, 0x0, 0x0);
        gbc.writeMem(0xd4ff, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5ea6, gbc.sp());
        EXPECT(0xd501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ff));
        EXPECT(0x27, gbc.readMem(0xd500));
        // CB 27 0015
        gbc.setState(0x8288, 0x54d6, 0xa0e0, 0xcbb9, 0xe113, 0xc478, 0x1, 0x1);
        gbc.writeMem(0x8288, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x54d6, gbc.sp());
        EXPECT(0x828a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8288));
        EXPECT(0x27, gbc.readMem(0x8289));
        // CB 27 0016
        gbc.setState(0x62e6, 0x576e, 0x1500, 0x644d, 0xf993, 0x352b, 0x1, 0x1);
        gbc.writeMem(0x62e6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x576e, gbc.sp());
        EXPECT(0x62e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0017
        gbc.setState(0x63e3, 0x56, 0xc590, 0x29c7, 0x3b4f, 0x4680, 0x0, 0x0);
        gbc.writeMem(0x63e3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x56, gbc.sp());
        EXPECT(0x63e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0019
        gbc.setState(0xdb57, 0xe9b2, 0xcfe0, 0x4694, 0xe909, 0x1c05, 0x1, 0x1);
        gbc.writeMem(0xdb57, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe9b2, gbc.sp());
        EXPECT(0xdb59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb57));
        EXPECT(0x27, gbc.readMem(0xdb58));
        // CB 27 001A
        gbc.setState(0x5fa8, 0x7449, 0x3440, 0xf880, 0xe131, 0xb6db, 0x1, 0x0);
        gbc.writeMem(0x5fa8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7449, gbc.sp());
        EXPECT(0x5faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 001B
        gbc.setState(0x2279, 0x5c0d, 0x21d0, 0x8ac, 0x4376, 0x5867, 0x1, 0x1);
        gbc.writeMem(0x2279, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5c0d, gbc.sp());
        EXPECT(0x227b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 001C
        gbc.setState(0x9f28, 0x6994, 0x6780, 0x3cd5, 0xcaa2, 0x6839, 0x1, 0x1);
        gbc.writeMem(0x9f28, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6994, gbc.sp());
        EXPECT(0x9f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f28));
        EXPECT(0x27, gbc.readMem(0x9f29));
        // CB 27 001D
        gbc.setState(0xa62f, 0x6539, 0x1470, 0x8937, 0x7094, 0x861b, 0x1, 0x1);
        gbc.writeMem(0xa62f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6539, gbc.sp());
        EXPECT(0xa631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa62f));
        EXPECT(0x27, gbc.readMem(0xa630));
        // CB 27 001E
        gbc.setState(0x58c1, 0xd890, 0x6a00, 0x50f, 0xbfb2, 0x1654, 0x1, 0x1);
        gbc.writeMem(0x58c1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd890, gbc.sp());
        EXPECT(0x58c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 001F
        gbc.setState(0xee04, 0xab90, 0x4920, 0x5adc, 0x57e4, 0xf579, 0x1, 0x1);
        gbc.writeMem(0xee04, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xab90, gbc.sp());
        EXPECT(0xee06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee04));
        EXPECT(0x27, gbc.readMem(0xee05));
        // CB 27 0020
        gbc.setState(0x3f1b, 0x4cb2, 0x48f0, 0x73c4, 0xb60e, 0x6163, 0x1, 0x1);
        gbc.writeMem(0x3f1b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4cb2, gbc.sp());
        EXPECT(0x3f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0021
        gbc.setState(0x5edb, 0xe90c, 0x5170, 0xef71, 0xaed4, 0xcd98, 0x0, 0x1);
        gbc.writeMem(0x5edb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe90c, gbc.sp());
        EXPECT(0x5edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0022
        gbc.setState(0xa6b, 0x5c3f, 0x6b80, 0xa02b, 0xc6cd, 0xd55d, 0x1, 0x1);
        gbc.writeMem(0xa6b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5c3f, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0023
        gbc.setState(0xc762, 0x7e4d, 0x95c0, 0x7f29, 0x17cf, 0xcf19, 0x0, 0x0);
        gbc.writeMem(0xc762, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7e4d, gbc.sp());
        EXPECT(0xc764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc762));
        EXPECT(0x27, gbc.readMem(0xc763));
        // CB 27 0024
        gbc.setState(0x4a66, 0x1a12, 0xc4e0, 0x8aac, 0xec1f, 0x2415, 0x1, 0x0);
        gbc.writeMem(0x4a66, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1a12, gbc.sp());
        EXPECT(0x4a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0025
        gbc.setState(0xef86, 0xc358, 0x38b0, 0xa23f, 0xba5a, 0xdac3, 0x1, 0x0);
        gbc.writeMem(0xef86, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc358, gbc.sp());
        EXPECT(0xef88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef86));
        EXPECT(0x27, gbc.readMem(0xef87));
        // CB 27 0026
        gbc.setState(0x5420, 0x4096, 0xc440, 0xadc6, 0x7dec, 0x747c, 0x1, 0x0);
        gbc.writeMem(0x5420, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4096, gbc.sp());
        EXPECT(0x5422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0027
        gbc.setState(0x4cef, 0x1214, 0x8720, 0xc9cd, 0x97da, 0x8908, 0x0, 0x1);
        gbc.writeMem(0x4cef, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1214, gbc.sp());
        EXPECT(0x4cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0028
        gbc.setState(0x7e3a, 0x5b07, 0xd430, 0x40ca, 0xe6b4, 0x88a7, 0x1, 0x0);
        gbc.writeMem(0x7e3a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5b07, gbc.sp());
        EXPECT(0x7e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0029
        gbc.setState(0x84ea, 0xcb30, 0x4f10, 0xb66e, 0x5bb6, 0x759d, 0x0, 0x1);
        gbc.writeMem(0x84ea, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcb30, gbc.sp());
        EXPECT(0x84ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ea));
        EXPECT(0x27, gbc.readMem(0x84eb));
        // CB 27 002A
        gbc.setState(0x9103, 0x5aa4, 0x8520, 0xffb4, 0x8600, 0xbfe9, 0x1, 0x1);
        gbc.writeMem(0x9103, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5aa4, gbc.sp());
        EXPECT(0x9105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9103));
        EXPECT(0x27, gbc.readMem(0x9104));
        // CB 27 002B
        gbc.setState(0x1201, 0x83bc, 0x3fc0, 0x2472, 0x1ca3, 0x58f, 0x1, 0x1);
        gbc.writeMem(0x1201, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x83bc, gbc.sp());
        EXPECT(0x1203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 002C
        gbc.setState(0x7271, 0x9121, 0x3d00, 0xaeea, 0x63bb, 0xd033, 0x1, 0x0);
        gbc.writeMem(0x7271, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9121, gbc.sp());
        EXPECT(0x7273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 002D
        gbc.setState(0x678c, 0xf548, 0xb760, 0xf140, 0x3bc6, 0xad2e, 0x1, 0x1);
        gbc.writeMem(0x678c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf548, gbc.sp());
        EXPECT(0x678e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 002E
        gbc.setState(0xc2ca, 0xd326, 0x10, 0x5349, 0x2fd7, 0x6b85, 0x1, 0x0);
        gbc.writeMem(0xc2ca, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd326, gbc.sp());
        EXPECT(0xc2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ca));
        EXPECT(0x27, gbc.readMem(0xc2cb));
        // CB 27 0030
        gbc.setState(0x65e4, 0x8036, 0x8480, 0x6dc, 0xc452, 0x2bd5, 0x1, 0x1);
        gbc.writeMem(0x65e4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8036, gbc.sp());
        EXPECT(0x65e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0031
        gbc.setState(0x4422, 0xeb13, 0xa9d0, 0x3ecf, 0x1c2c, 0xf727, 0x1, 0x1);
        gbc.writeMem(0x4422, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xeb13, gbc.sp());
        EXPECT(0x4424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0032
        gbc.setState(0xd797, 0x5126, 0x6290, 0x7c7c, 0x28df, 0x3e50, 0x0, 0x1);
        gbc.writeMem(0xd797, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5126, gbc.sp());
        EXPECT(0xd799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd797));
        EXPECT(0x27, gbc.readMem(0xd798));
        // CB 27 0033
        gbc.setState(0xe039, 0x9317, 0x5ec0, 0xcedf, 0x8446, 0xc2c3, 0x1, 0x0);
        gbc.writeMem(0xe039, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9317, gbc.sp());
        EXPECT(0xe03b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe039));
        EXPECT(0x27, gbc.readMem(0xe03a));
        // CB 27 0034
        gbc.setState(0x4eaf, 0x8dc3, 0xe650, 0xef99, 0x44ff, 0x3b48, 0x1, 0x1);
        gbc.writeMem(0x4eaf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8dc3, gbc.sp());
        EXPECT(0x4eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0035
        gbc.setState(0x6a1d, 0x8c64, 0x8b80, 0x7d58, 0xf377, 0x6ffa, 0x0, 0x0);
        gbc.writeMem(0x6a1d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8c64, gbc.sp());
        EXPECT(0x6a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0036
        gbc.setState(0xe157, 0x7937, 0xfeb0, 0x6d59, 0x7989, 0xe145, 0x1, 0x0);
        gbc.writeMem(0xe157, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7937, gbc.sp());
        EXPECT(0xe159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe157));
        EXPECT(0x27, gbc.readMem(0xe158));
        // CB 27 0037
        gbc.setState(0xe7ed, 0x56e3, 0x3bf0, 0xdc4d, 0x995, 0xa2e2, 0x0, 0x1);
        gbc.writeMem(0xe7ed, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x56e3, gbc.sp());
        EXPECT(0xe7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ed));
        EXPECT(0x27, gbc.readMem(0xe7ee));
        // CB 27 0038
        gbc.setState(0x13df, 0x6749, 0x5d10, 0x57e, 0xab39, 0x6a0d, 0x1, 0x1);
        gbc.writeMem(0x13df, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6749, gbc.sp());
        EXPECT(0x13e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0039
        gbc.setState(0x1e75, 0x2afd, 0xdb90, 0x557b, 0xdc80, 0x2b43, 0x0, 0x0);
        gbc.writeMem(0x1e75, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2afd, gbc.sp());
        EXPECT(0x1e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 003A
        gbc.setState(0x3d2f, 0xa22e, 0x6370, 0xe1e4, 0x9d8c, 0x6bd0, 0x1, 0x1);
        gbc.writeMem(0x3d2f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa22e, gbc.sp());
        EXPECT(0x3d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 003C
        gbc.setState(0x5b68, 0x8fa5, 0x1e60, 0x2665, 0x3b96, 0x925c, 0x1, 0x0);
        gbc.writeMem(0x5b68, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8fa5, gbc.sp());
        EXPECT(0x5b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 003D
        gbc.setState(0x9587, 0x9dd0, 0x4ed0, 0x4c6f, 0x21a3, 0xb623, 0x1, 0x0);
        gbc.writeMem(0x9587, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9dd0, gbc.sp());
        EXPECT(0x9589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9587));
        EXPECT(0x27, gbc.readMem(0x9588));
        // CB 27 003F
        gbc.setState(0xe703, 0xb5b9, 0xf4f0, 0xe1e6, 0x5b8b, 0x464, 0x1, 0x0);
        gbc.writeMem(0xe703, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb5b9, gbc.sp());
        EXPECT(0xe705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe703));
        EXPECT(0x27, gbc.readMem(0xe704));
        // CB 27 0040
        gbc.setState(0x4409, 0xd05d, 0xc040, 0x3fae, 0xf016, 0xfbef, 0x1, 0x0);
        gbc.writeMem(0x4409, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd05d, gbc.sp());
        EXPECT(0x440b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0041
        gbc.setState(0x6309, 0x597c, 0x8110, 0x9301, 0xe5a5, 0x4f8, 0x0, 0x0);
        gbc.writeMem(0x6309, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x597c, gbc.sp());
        EXPECT(0x630b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0042
        gbc.setState(0xd2fa, 0x88a7, 0x20f0, 0x1dae, 0xe24f, 0x10b8, 0x0, 0x0);
        gbc.writeMem(0xd2fa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x88a7, gbc.sp());
        EXPECT(0xd2fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fa));
        EXPECT(0x27, gbc.readMem(0xd2fb));
        // CB 27 0043
        gbc.setState(0xcc1b, 0x61c5, 0xfc90, 0x3912, 0xe93d, 0x3aa0, 0x1, 0x0);
        gbc.writeMem(0xcc1b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x61c5, gbc.sp());
        EXPECT(0xcc1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1b));
        EXPECT(0x27, gbc.readMem(0xcc1c));
        // CB 27 0044
        gbc.setState(0x9c36, 0x628, 0x71f0, 0x2c4d, 0x6fe5, 0xbb39, 0x0, 0x0);
        gbc.writeMem(0x9c36, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x628, gbc.sp());
        EXPECT(0x9c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c36));
        EXPECT(0x27, gbc.readMem(0x9c37));
        // CB 27 0045
        gbc.setState(0xe221, 0x7633, 0x3c40, 0x734, 0x99fc, 0x125d, 0x1, 0x0);
        gbc.writeMem(0xe221, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7633, gbc.sp());
        EXPECT(0xe223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe221));
        EXPECT(0x27, gbc.readMem(0xe222));
        // CB 27 0046
        gbc.setState(0xd792, 0xf64c, 0x79b0, 0xaca9, 0xa81d, 0x2e72, 0x1, 0x1);
        gbc.writeMem(0xd792, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf64c, gbc.sp());
        EXPECT(0xd794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd792));
        EXPECT(0x27, gbc.readMem(0xd793));
        // CB 27 0047
        gbc.setState(0x2429, 0xbc65, 0xcc90, 0x4cbd, 0x8729, 0xbc0, 0x1, 0x0);
        gbc.writeMem(0x2429, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbc65, gbc.sp());
        EXPECT(0x242b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0048
        gbc.setState(0xc1d2, 0x547f, 0xfa50, 0x6bf8, 0xb13e, 0xf769, 0x1, 0x0);
        gbc.writeMem(0xc1d2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x547f, gbc.sp());
        EXPECT(0xc1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d2));
        EXPECT(0x27, gbc.readMem(0xc1d3));
        // CB 27 004A
        gbc.setState(0x3ef5, 0x82dd, 0x5fa0, 0x287a, 0x1a3f, 0xeb8f, 0x0, 0x1);
        gbc.writeMem(0x3ef5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x82dd, gbc.sp());
        EXPECT(0x3ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 004B
        gbc.setState(0x8fa3, 0xb7dd, 0x7210, 0x3d2a, 0x29e5, 0xa475, 0x1, 0x1);
        gbc.writeMem(0x8fa3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb7dd, gbc.sp());
        EXPECT(0x8fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa3));
        EXPECT(0x27, gbc.readMem(0x8fa4));
        // CB 27 004C
        gbc.setState(0xd1fb, 0xe7a, 0xf370, 0x5cc6, 0xd393, 0xccce, 0x1, 0x1);
        gbc.writeMem(0xd1fb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe7a, gbc.sp());
        EXPECT(0xd1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1fb));
        EXPECT(0x27, gbc.readMem(0xd1fc));
        // CB 27 004D
        gbc.setState(0xc864, 0xd6cf, 0xab0, 0x3363, 0xa7c1, 0x5a9e, 0x0, 0x0);
        gbc.writeMem(0xc864, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd6cf, gbc.sp());
        EXPECT(0xc866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc864));
        EXPECT(0x27, gbc.readMem(0xc865));
        // CB 27 004E
        gbc.setState(0x4694, 0x5ad7, 0x9e10, 0x9ed5, 0x735a, 0x6d19, 0x1, 0x0);
        gbc.writeMem(0x4694, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5ad7, gbc.sp());
        EXPECT(0x4696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 004F
        gbc.setState(0x98ae, 0x9c03, 0xf060, 0x6137, 0xbd3, 0x950c, 0x1, 0x1);
        gbc.writeMem(0x98ae, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9c03, gbc.sp());
        EXPECT(0x98b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ae));
        EXPECT(0x27, gbc.readMem(0x98af));
        // CB 27 0050
        gbc.setState(0x5bf, 0x4b56, 0x8c80, 0xb2af, 0xec19, 0x4617, 0x1, 0x0);
        gbc.writeMem(0x5bf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4b56, gbc.sp());
        EXPECT(0x5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0051
        gbc.setState(0xbcad, 0x26ef, 0x3320, 0x118, 0xb56b, 0x8c9b, 0x0, 0x1);
        gbc.writeMem(0xbcad, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x26ef, gbc.sp());
        EXPECT(0xbcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcad));
        EXPECT(0x27, gbc.readMem(0xbcae));
        // CB 27 0052
        gbc.setState(0x5bce, 0x2a96, 0x36f0, 0xf941, 0xbab4, 0x6c79, 0x0, 0x0);
        gbc.writeMem(0x5bce, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2a96, gbc.sp());
        EXPECT(0x5bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0053
        gbc.setState(0x7545, 0x5973, 0x5d60, 0x3766, 0xbffe, 0xae49, 0x0, 0x0);
        gbc.writeMem(0x7545, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5973, gbc.sp());
        EXPECT(0x7547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0054
        gbc.setState(0x56e9, 0xeac3, 0xd3d0, 0x403e, 0x274a, 0x296c, 0x1, 0x1);
        gbc.writeMem(0x56e9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xeac3, gbc.sp());
        EXPECT(0x56eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0055
        gbc.setState(0x7345, 0x2088, 0x64b0, 0xeb78, 0x8d6, 0xe424, 0x0, 0x0);
        gbc.writeMem(0x7345, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2088, gbc.sp());
        EXPECT(0x7347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0056
        gbc.setState(0xd453, 0xbdc3, 0xb520, 0x5a51, 0x6a64, 0x71f1, 0x0, 0x1);
        gbc.writeMem(0xd453, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbdc3, gbc.sp());
        EXPECT(0xd455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd453));
        EXPECT(0x27, gbc.readMem(0xd454));
        // CB 27 0057
        gbc.setState(0x1832, 0xfbc4, 0x5170, 0x4730, 0x5e51, 0x613c, 0x1, 0x0);
        gbc.writeMem(0x1832, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfbc4, gbc.sp());
        EXPECT(0x1834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0058
        gbc.setState(0x4649, 0x2333, 0x18c0, 0xc840, 0x9058, 0x1297, 0x0, 0x0);
        gbc.writeMem(0x4649, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2333, gbc.sp());
        EXPECT(0x464b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0059
        gbc.setState(0x15c2, 0x2c7f, 0x95a0, 0x54ca, 0xdcc3, 0x345f, 0x0, 0x1);
        gbc.writeMem(0x15c2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2c7f, gbc.sp());
        EXPECT(0x15c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 005A
        gbc.setState(0x74c7, 0x4532, 0xb5d0, 0x7988, 0x5026, 0x77d, 0x1, 0x1);
        gbc.writeMem(0x74c7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4532, gbc.sp());
        EXPECT(0x74c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 005B
        gbc.setState(0xcf82, 0x49f2, 0x9c0, 0x6778, 0xa0f9, 0xbb8b, 0x1, 0x1);
        gbc.writeMem(0xcf82, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x49f2, gbc.sp());
        EXPECT(0xcf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf82));
        EXPECT(0x27, gbc.readMem(0xcf83));
        // CB 27 005C
        gbc.setState(0x17cc, 0xa2da, 0xcce0, 0xfbc3, 0x934a, 0xc898, 0x1, 0x0);
        gbc.writeMem(0x17cc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa2da, gbc.sp());
        EXPECT(0x17ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 005D
        gbc.setState(0xcfd2, 0x1d99, 0xd380, 0xded3, 0x7755, 0xbb0b, 0x1, 0x0);
        gbc.writeMem(0xcfd2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1d99, gbc.sp());
        EXPECT(0xcfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd2));
        EXPECT(0x27, gbc.readMem(0xcfd3));
        // CB 27 0060
        gbc.setState(0xcd70, 0x287f, 0x2550, 0x50df, 0xfcb5, 0xf3dc, 0x0, 0x0);
        gbc.writeMem(0xcd70, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x287f, gbc.sp());
        EXPECT(0xcd72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd70));
        EXPECT(0x27, gbc.readMem(0xcd71));
        // CB 27 0061
        gbc.setState(0x8a8c, 0xc641, 0x3c10, 0x9263, 0x96d4, 0x57db, 0x1, 0x0);
        gbc.writeMem(0x8a8c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc641, gbc.sp());
        EXPECT(0x8a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8c));
        EXPECT(0x27, gbc.readMem(0x8a8d));
        // CB 27 0062
        gbc.setState(0x9bb6, 0x9b4a, 0x50b0, 0x860e, 0x3a10, 0xbbda, 0x0, 0x0);
        gbc.writeMem(0x9bb6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9b4a, gbc.sp());
        EXPECT(0x9bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb6));
        EXPECT(0x27, gbc.readMem(0x9bb7));
        // CB 27 0063
        gbc.setState(0xa143, 0x53fa, 0x9630, 0x51c3, 0xb028, 0xe056, 0x0, 0x1);
        gbc.writeMem(0xa143, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x53fa, gbc.sp());
        EXPECT(0xa145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa143));
        EXPECT(0x27, gbc.readMem(0xa144));
        // CB 27 0064
        gbc.setState(0xa452, 0x6c12, 0x1460, 0xf83e, 0xc14c, 0xbdec, 0x1, 0x1);
        gbc.writeMem(0xa452, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6c12, gbc.sp());
        EXPECT(0xa454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa452));
        EXPECT(0x27, gbc.readMem(0xa453));
        // CB 27 0065
        gbc.setState(0x9ac9, 0x1eb2, 0x8860, 0x204, 0xb9d8, 0xd555, 0x0, 0x0);
        gbc.writeMem(0x9ac9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1eb2, gbc.sp());
        EXPECT(0x9acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac9));
        EXPECT(0x27, gbc.readMem(0x9aca));
        // CB 27 0066
        gbc.setState(0x8a1f, 0x68de, 0xd30, 0x5a4f, 0x769, 0x12eb, 0x0, 0x1);
        gbc.writeMem(0x8a1f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x68de, gbc.sp());
        EXPECT(0x8a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1f));
        EXPECT(0x27, gbc.readMem(0x8a20));
        // CB 27 0067
        gbc.setState(0x1b64, 0xa6fd, 0x93a0, 0xcd37, 0xced4, 0x367f, 0x0, 0x0);
        gbc.writeMem(0x1b64, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa6fd, gbc.sp());
        EXPECT(0x1b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0068
        gbc.setState(0x2a3, 0x6c22, 0x2d70, 0xe775, 0x101f, 0x7010, 0x1, 0x1);
        gbc.writeMem(0x2a3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6c22, gbc.sp());
        EXPECT(0x2a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0069
        gbc.setState(0x2070, 0x671d, 0xfa60, 0xb058, 0x129a, 0xfe6c, 0x0, 0x1);
        gbc.writeMem(0x2070, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x671d, gbc.sp());
        EXPECT(0x2072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 006A
        gbc.setState(0x1fd9, 0xff04, 0x6a00, 0xe92d, 0x346, 0xd9c0, 0x1, 0x0);
        gbc.writeMem(0x1fd9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xff04, gbc.sp());
        EXPECT(0x1fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 006B
        gbc.setState(0xbca, 0x756d, 0xefa0, 0xebe2, 0x6925, 0x5813, 0x1, 0x0);
        gbc.writeMem(0xbca, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x756d, gbc.sp());
        EXPECT(0xbcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 006C
        gbc.setState(0x1944, 0x49b0, 0x8420, 0xd26c, 0x95d8, 0x392f, 0x1, 0x0);
        gbc.writeMem(0x1944, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x49b0, gbc.sp());
        EXPECT(0x1946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 006D
        gbc.setState(0xeab, 0xfbd0, 0x8cd0, 0x776a, 0x304, 0x1d5, 0x1, 0x1);
        gbc.writeMem(0xeab, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfbd0, gbc.sp());
        EXPECT(0xead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 006E
        gbc.setState(0x2598, 0xf6a4, 0xa350, 0xb606, 0xbc9, 0xe932, 0x1, 0x1);
        gbc.writeMem(0x2598, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf6a4, gbc.sp());
        EXPECT(0x259a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 006F
        gbc.setState(0x6ae8, 0xd6c2, 0xf930, 0x5373, 0xd87f, 0x48b, 0x0, 0x1);
        gbc.writeMem(0x6ae8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd6c2, gbc.sp());
        EXPECT(0x6aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0070
        gbc.setState(0x870e, 0x2bee, 0x91d0, 0x9368, 0xe63c, 0xb7ca, 0x1, 0x0);
        gbc.writeMem(0x870e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2bee, gbc.sp());
        EXPECT(0x8710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870e));
        EXPECT(0x27, gbc.readMem(0x870f));
        // CB 27 0071
        gbc.setState(0x5edb, 0x3391, 0x53a0, 0x71ff, 0x3966, 0x6816, 0x0, 0x1);
        gbc.writeMem(0x5edb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3391, gbc.sp());
        EXPECT(0x5edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0072
        gbc.setState(0x2b21, 0xa561, 0xf860, 0x43fe, 0x9e56, 0x2585, 0x1, 0x0);
        gbc.writeMem(0x2b21, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa561, gbc.sp());
        EXPECT(0x2b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0073
        gbc.setState(0xb4e0, 0x44e5, 0x2f50, 0xb391, 0x606f, 0x992e, 0x1, 0x0);
        gbc.writeMem(0xb4e0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x44e5, gbc.sp());
        EXPECT(0xb4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e0));
        EXPECT(0x27, gbc.readMem(0xb4e1));
        // CB 27 0074
        gbc.setState(0xae07, 0xa55a, 0x9430, 0xe296, 0xcdee, 0xde2c, 0x0, 0x0);
        gbc.writeMem(0xae07, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa55a, gbc.sp());
        EXPECT(0xae09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae07));
        EXPECT(0x27, gbc.readMem(0xae08));
        // CB 27 0075
        gbc.setState(0xb739, 0xeae9, 0x5be0, 0xf560, 0xc909, 0x1b6a, 0x0, 0x1);
        gbc.writeMem(0xb739, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xeae9, gbc.sp());
        EXPECT(0xb73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb739));
        EXPECT(0x27, gbc.readMem(0xb73a));
        // CB 27 0076
        gbc.setState(0xce40, 0x8d4b, 0x88e0, 0x9784, 0xd2aa, 0x46ee, 0x0, 0x0);
        gbc.writeMem(0xce40, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8d4b, gbc.sp());
        EXPECT(0xce42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce40));
        EXPECT(0x27, gbc.readMem(0xce41));
        // CB 27 0077
        gbc.setState(0x2e65, 0x286e, 0x900, 0xe972, 0x1cc0, 0x76b9, 0x0, 0x1);
        gbc.writeMem(0x2e65, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x286e, gbc.sp());
        EXPECT(0x2e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0078
        gbc.setState(0x37d1, 0xe2e6, 0x3150, 0xa519, 0x8d16, 0x4547, 0x1, 0x0);
        gbc.writeMem(0x37d1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe2e6, gbc.sp());
        EXPECT(0x37d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0079
        gbc.setState(0x6468, 0x49e3, 0xe2f0, 0xba04, 0x8929, 0xe09c, 0x1, 0x0);
        gbc.writeMem(0x6468, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x49e3, gbc.sp());
        EXPECT(0x646a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 007A
        gbc.setState(0x58f1, 0x28a5, 0x9220, 0x1dfa, 0x8a97, 0x12c8, 0x0, 0x0);
        gbc.writeMem(0x58f1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x28a5, gbc.sp());
        EXPECT(0x58f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 007B
        gbc.setState(0x16ea, 0xabcc, 0x4010, 0xeebc, 0x6c1a, 0x6b8e, 0x0, 0x0);
        gbc.writeMem(0x16ea, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xabcc, gbc.sp());
        EXPECT(0x16ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 007C
        gbc.setState(0x8a06, 0x77b3, 0xbbc0, 0xa096, 0xfb4d, 0x348, 0x0, 0x0);
        gbc.writeMem(0x8a06, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x77b3, gbc.sp());
        EXPECT(0x8a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a06));
        EXPECT(0x27, gbc.readMem(0x8a07));
        // CB 27 007D
        gbc.setState(0xde96, 0xa2b2, 0xb3a0, 0x893e, 0xfc57, 0xf55c, 0x0, 0x1);
        gbc.writeMem(0xde96, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa2b2, gbc.sp());
        EXPECT(0xde98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde96));
        EXPECT(0x27, gbc.readMem(0xde97));
        // CB 27 007E
        gbc.setState(0x12c, 0xed90, 0x3c60, 0xc547, 0x9a7a, 0x67d4, 0x1, 0x0);
        gbc.writeMem(0x12c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xed90, gbc.sp());
        EXPECT(0x12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 007F
        gbc.setState(0x9f54, 0x8b32, 0x75b0, 0xebbf, 0x28dd, 0x3122, 0x0, 0x0);
        gbc.writeMem(0x9f54, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8b32, gbc.sp());
        EXPECT(0x9f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f54));
        EXPECT(0x27, gbc.readMem(0x9f55));
        // CB 27 0080
        gbc.setState(0x5aba, 0xf545, 0xc370, 0xdf81, 0xbe6f, 0x12f7, 0x0, 0x1);
        gbc.writeMem(0x5aba, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf545, gbc.sp());
        EXPECT(0x5abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0081
        gbc.setState(0xd8a6, 0x5b54, 0x63f0, 0x53c6, 0x3837, 0x29ed, 0x1, 0x0);
        gbc.writeMem(0xd8a6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5b54, gbc.sp());
        EXPECT(0xd8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a6));
        EXPECT(0x27, gbc.readMem(0xd8a7));
        // CB 27 0082
        gbc.setState(0x1e1f, 0xe816, 0x2eb0, 0x1a5, 0xd152, 0x2978, 0x0, 0x1);
        gbc.writeMem(0x1e1f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe816, gbc.sp());
        EXPECT(0x1e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0083
        gbc.setState(0xeb6a, 0x2677, 0x6a10, 0x833c, 0x4f35, 0xeb3c, 0x1, 0x1);
        gbc.writeMem(0xeb6a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0xeb6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6a));
        EXPECT(0x27, gbc.readMem(0xeb6b));
        // CB 27 0085
        gbc.setState(0x3dbb, 0xf868, 0x5c00, 0x2e14, 0x67bd, 0x8629, 0x0, 0x0);
        gbc.writeMem(0x3dbb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf868, gbc.sp());
        EXPECT(0x3dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0087
        gbc.setState(0xb816, 0xcbd7, 0x2880, 0x54d4, 0x316f, 0x48ac, 0x0, 0x0);
        gbc.writeMem(0xb816, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcbd7, gbc.sp());
        EXPECT(0xb818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb816));
        EXPECT(0x27, gbc.readMem(0xb817));
        // CB 27 0089
        gbc.setState(0x7e05, 0x47e9, 0x810, 0x49a5, 0x3683, 0x5739, 0x0, 0x0);
        gbc.writeMem(0x7e05, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x47e9, gbc.sp());
        EXPECT(0x7e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 008B
        gbc.setState(0xc85d, 0x3eb0, 0x4300, 0x5692, 0x43c9, 0x759d, 0x1, 0x0);
        gbc.writeMem(0xc85d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3eb0, gbc.sp());
        EXPECT(0xc85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85d));
        EXPECT(0x27, gbc.readMem(0xc85e));
        // CB 27 008C
        gbc.setState(0x5151, 0xf6c4, 0xe590, 0x999e, 0x8294, 0x9406, 0x1, 0x1);
        gbc.writeMem(0x5151, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf6c4, gbc.sp());
        EXPECT(0x5153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 008D
        gbc.setState(0xa43, 0x4448, 0x1d30, 0x26d1, 0xe5b7, 0xc988, 0x0, 0x1);
        gbc.writeMem(0xa43, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4448, gbc.sp());
        EXPECT(0xa45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 008E
        gbc.setState(0x58b9, 0xbc18, 0x9690, 0xd558, 0xdb92, 0xfa66, 0x0, 0x0);
        gbc.writeMem(0x58b9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbc18, gbc.sp());
        EXPECT(0x58bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 008F
        gbc.setState(0xafe, 0xdc12, 0xe260, 0x45cf, 0x86ef, 0xec64, 0x1, 0x0);
        gbc.writeMem(0xafe, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdc12, gbc.sp());
        EXPECT(0xb00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0090
        gbc.setState(0x288c, 0x659, 0x1730, 0x8543, 0x26d3, 0x3aca, 0x0, 0x1);
        gbc.writeMem(0x288c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x659, gbc.sp());
        EXPECT(0x288e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0091
        gbc.setState(0x57a, 0xf2b0, 0x2e00, 0x2ccb, 0x1792, 0xc05d, 0x1, 0x0);
        gbc.writeMem(0x57a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf2b0, gbc.sp());
        EXPECT(0x57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0092
        gbc.setState(0xd36c, 0x4a72, 0x7d90, 0x332f, 0x1c63, 0x6c07, 0x1, 0x0);
        gbc.writeMem(0xd36c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4a72, gbc.sp());
        EXPECT(0xd36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36c));
        EXPECT(0x27, gbc.readMem(0xd36d));
        // CB 27 0093
        gbc.setState(0x11e7, 0x9abd, 0xd780, 0x418f, 0xa8a6, 0xb07e, 0x0, 0x0);
        gbc.writeMem(0x11e7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9abd, gbc.sp());
        EXPECT(0x11e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0094
        gbc.setState(0x2c57, 0x54ba, 0xc060, 0xf631, 0x1b43, 0x6aee, 0x0, 0x1);
        gbc.writeMem(0x2c57, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x54ba, gbc.sp());
        EXPECT(0x2c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0095
        gbc.setState(0xcbf5, 0xda2b, 0xa5c0, 0xec5a, 0x2059, 0x7193, 0x0, 0x1);
        gbc.writeMem(0xcbf5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xda2b, gbc.sp());
        EXPECT(0xcbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf5));
        EXPECT(0x27, gbc.readMem(0xcbf6));
        // CB 27 0096
        gbc.setState(0xc078, 0xdde8, 0xd140, 0x381c, 0xc9e2, 0x6302, 0x0, 0x0);
        gbc.writeMem(0xc078, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdde8, gbc.sp());
        EXPECT(0xc07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc078));
        EXPECT(0x27, gbc.readMem(0xc079));
        // CB 27 0097
        gbc.setState(0x727e, 0x1907, 0x92b0, 0x6769, 0x9018, 0x6551, 0x1, 0x1);
        gbc.writeMem(0x727e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1907, gbc.sp());
        EXPECT(0x7280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0098
        gbc.setState(0xe69d, 0x89a1, 0x4620, 0x5232, 0xc61a, 0x42a5, 0x1, 0x0);
        gbc.writeMem(0xe69d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x89a1, gbc.sp());
        EXPECT(0xe69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69d));
        EXPECT(0x27, gbc.readMem(0xe69e));
        // CB 27 0099
        gbc.setState(0x665c, 0x524b, 0x9310, 0x6b9a, 0x85db, 0x4606, 0x1, 0x1);
        gbc.writeMem(0x665c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x524b, gbc.sp());
        EXPECT(0x665e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 009A
        gbc.setState(0xac7a, 0xe35, 0xfe10, 0x7927, 0x9022, 0x166f, 0x1, 0x0);
        gbc.writeMem(0xac7a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe35, gbc.sp());
        EXPECT(0xac7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7a));
        EXPECT(0x27, gbc.readMem(0xac7b));
        // CB 27 009B
        gbc.setState(0x8077, 0xcdc9, 0x17b0, 0x6f93, 0x63d7, 0x264a, 0x1, 0x1);
        gbc.writeMem(0x8077, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcdc9, gbc.sp());
        EXPECT(0x8079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8077));
        EXPECT(0x27, gbc.readMem(0x8078));
        // CB 27 009C
        gbc.setState(0x8e5c, 0xe767, 0x3480, 0xc1cd, 0x93a2, 0x5db5, 0x0, 0x0);
        gbc.writeMem(0x8e5c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe767, gbc.sp());
        EXPECT(0x8e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5c));
        EXPECT(0x27, gbc.readMem(0x8e5d));
        // CB 27 009D
        gbc.setState(0x6c1, 0xdd35, 0x5340, 0x8912, 0x3c02, 0xda0a, 0x1, 0x0);
        gbc.writeMem(0x6c1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdd35, gbc.sp());
        EXPECT(0x6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 009E
        gbc.setState(0x78bf, 0x3802, 0x56b0, 0x1918, 0x7ca3, 0x57e5, 0x0, 0x0);
        gbc.writeMem(0x78bf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3802, gbc.sp());
        EXPECT(0x78c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 009F
        gbc.setState(0xa54, 0x6451, 0x4110, 0xe94e, 0x1e70, 0xf012, 0x1, 0x0);
        gbc.writeMem(0xa54, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6451, gbc.sp());
        EXPECT(0xa56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00A0
        gbc.setState(0x2ae8, 0x6601, 0x6e50, 0xe369, 0x1f81, 0xb7f3, 0x0, 0x1);
        gbc.writeMem(0x2ae8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6601, gbc.sp());
        EXPECT(0x2aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00A1
        gbc.setState(0x7a87, 0x6d9f, 0xa770, 0xbe0d, 0x7b0, 0xba40, 0x1, 0x0);
        gbc.writeMem(0x7a87, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6d9f, gbc.sp());
        EXPECT(0x7a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00A2
        gbc.setState(0x2df7, 0xb98d, 0xaeb0, 0xd4bd, 0x5692, 0x624f, 0x0, 0x1);
        gbc.writeMem(0x2df7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb98d, gbc.sp());
        EXPECT(0x2df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00A3
        gbc.setState(0x2190, 0xc240, 0x1d20, 0x115a, 0xa7dc, 0x9c25, 0x0, 0x0);
        gbc.writeMem(0x2190, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc240, gbc.sp());
        EXPECT(0x2192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00A4
        gbc.setState(0x16ee, 0xfe9f, 0x58c0, 0x5f4c, 0x71, 0xec8, 0x1, 0x1);
        gbc.writeMem(0x16ee, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfe9f, gbc.sp());
        EXPECT(0x16f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00A5
        gbc.setState(0xc658, 0x244c, 0x5240, 0x2ae0, 0xb524, 0x1f3f, 0x1, 0x1);
        gbc.writeMem(0xc658, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x244c, gbc.sp());
        EXPECT(0xc65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc658));
        EXPECT(0x27, gbc.readMem(0xc659));
        // CB 27 00A6
        gbc.setState(0x6901, 0x16a2, 0x1950, 0xcf74, 0x7d63, 0x207, 0x1, 0x0);
        gbc.writeMem(0x6901, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x16a2, gbc.sp());
        EXPECT(0x6903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00A7
        gbc.setState(0x277d, 0xc1d9, 0x8fa0, 0xaa43, 0x2360, 0x2327, 0x1, 0x0);
        gbc.writeMem(0x277d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc1d9, gbc.sp());
        EXPECT(0x277f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00A8
        gbc.setState(0x7484, 0xad1f, 0x4b30, 0x30a5, 0x749f, 0xdb1b, 0x0, 0x0);
        gbc.writeMem(0x7484, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xad1f, gbc.sp());
        EXPECT(0x7486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00A9
        gbc.setState(0x583, 0x6310, 0x4560, 0xfd34, 0xb602, 0xdbdd, 0x0, 0x0);
        gbc.writeMem(0x583, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6310, gbc.sp());
        EXPECT(0x585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00AA
        gbc.setState(0xc574, 0xbe3b, 0x90e0, 0x94fc, 0x3dca, 0x997a, 0x1, 0x0);
        gbc.writeMem(0xc574, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbe3b, gbc.sp());
        EXPECT(0xc576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc574));
        EXPECT(0x27, gbc.readMem(0xc575));
        // CB 27 00AB
        gbc.setState(0xc5c5, 0xce85, 0xe870, 0xfde1, 0x9676, 0xf730, 0x0, 0x0);
        gbc.writeMem(0xc5c5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xce85, gbc.sp());
        EXPECT(0xc5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c5));
        EXPECT(0x27, gbc.readMem(0xc5c6));
        // CB 27 00AC
        gbc.setState(0x61d4, 0x7f3, 0x11e0, 0xb37c, 0x38d0, 0x5924, 0x1, 0x0);
        gbc.writeMem(0x61d4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7f3, gbc.sp());
        EXPECT(0x61d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00AD
        gbc.setState(0xd3ca, 0x8b7e, 0x8520, 0x4163, 0x58de, 0x7875, 0x0, 0x0);
        gbc.writeMem(0xd3ca, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8b7e, gbc.sp());
        EXPECT(0xd3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ca));
        EXPECT(0x27, gbc.readMem(0xd3cb));
        // CB 27 00AE
        gbc.setState(0x7593, 0x38b6, 0x38f0, 0x484a, 0xb02b, 0x9896, 0x0, 0x0);
        gbc.writeMem(0x7593, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x38b6, gbc.sp());
        EXPECT(0x7595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00AF
        gbc.setState(0x31dd, 0x2ebe, 0xc800, 0xd0a5, 0xb4c6, 0xffb3, 0x1, 0x0);
        gbc.writeMem(0x31dd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2ebe, gbc.sp());
        EXPECT(0x31df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00B0
        gbc.setState(0x1dd8, 0x23c6, 0x2650, 0x861f, 0x769, 0xb3c2, 0x1, 0x0);
        gbc.writeMem(0x1dd8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x23c6, gbc.sp());
        EXPECT(0x1dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00B1
        gbc.setState(0xe76, 0x2ff7, 0xbc70, 0x8f2c, 0x3b15, 0xd40b, 0x1, 0x0);
        gbc.writeMem(0xe76, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2ff7, gbc.sp());
        EXPECT(0xe78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00B2
        gbc.setState(0x123d, 0x2577, 0x4820, 0x8ee9, 0xa8cf, 0x6f12, 0x0, 0x1);
        gbc.writeMem(0x123d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2577, gbc.sp());
        EXPECT(0x123f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00B4
        gbc.setState(0xb2ab, 0xbd77, 0xae90, 0x38ba, 0x307c, 0xbcf2, 0x1, 0x0);
        gbc.writeMem(0xb2ab, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbd77, gbc.sp());
        EXPECT(0xb2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ab));
        EXPECT(0x27, gbc.readMem(0xb2ac));
        // CB 27 00B5
        gbc.setState(0x1060, 0xb0ad, 0x9890, 0x9174, 0x68a7, 0x9df5, 0x0, 0x0);
        gbc.writeMem(0x1060, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb0ad, gbc.sp());
        EXPECT(0x1062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00B6
        gbc.setState(0x4283, 0x7a3d, 0xa490, 0x1311, 0x263b, 0xc4bc, 0x0, 0x1);
        gbc.writeMem(0x4283, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7a3d, gbc.sp());
        EXPECT(0x4285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00B7
        gbc.setState(0xd0d7, 0x82fc, 0xd3a0, 0xbfa3, 0x3b6e, 0x7d99, 0x1, 0x1);
        gbc.writeMem(0xd0d7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x82fc, gbc.sp());
        EXPECT(0xd0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d7));
        EXPECT(0x27, gbc.readMem(0xd0d8));
        // CB 27 00B8
        gbc.setState(0x3b89, 0xfb7, 0x7320, 0x11e, 0xe5df, 0x8f8, 0x0, 0x0);
        gbc.writeMem(0x3b89, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfb7, gbc.sp());
        EXPECT(0x3b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00B9
        gbc.setState(0xd1aa, 0xcd92, 0xac20, 0x425f, 0x3fe4, 0xeeb3, 0x1, 0x0);
        gbc.writeMem(0xd1aa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcd92, gbc.sp());
        EXPECT(0xd1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1aa));
        EXPECT(0x27, gbc.readMem(0xd1ab));
        // CB 27 00BA
        gbc.setState(0x1c16, 0x8024, 0x8ed0, 0xccc2, 0x8507, 0xddd3, 0x1, 0x1);
        gbc.writeMem(0x1c16, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8024, gbc.sp());
        EXPECT(0x1c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00BB
        gbc.setState(0x4f7, 0x955f, 0xc0b0, 0xd75e, 0x6d17, 0x69d1, 0x0, 0x1);
        gbc.writeMem(0x4f7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x955f, gbc.sp());
        EXPECT(0x4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00BC
        gbc.setState(0x6711, 0xfac2, 0xd0a0, 0x4eb1, 0xfdb5, 0xd888, 0x1, 0x1);
        gbc.writeMem(0x6711, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfac2, gbc.sp());
        EXPECT(0x6713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00BD
        gbc.setState(0xc503, 0xb8d7, 0x2650, 0xb73a, 0x5ad1, 0xd63e, 0x0, 0x1);
        gbc.writeMem(0xc503, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb8d7, gbc.sp());
        EXPECT(0xc505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc503));
        EXPECT(0x27, gbc.readMem(0xc504));
        // CB 27 00BF
        gbc.setState(0x8068, 0x277f, 0xc740, 0xae89, 0x8c94, 0x985e, 0x0, 0x0);
        gbc.writeMem(0x8068, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x277f, gbc.sp());
        EXPECT(0x806a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8068));
        EXPECT(0x27, gbc.readMem(0x8069));
        // CB 27 00C0
        gbc.setState(0xefd, 0xe444, 0x1780, 0xa708, 0x3850, 0x6cb1, 0x0, 0x1);
        gbc.writeMem(0xefd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe444, gbc.sp());
        EXPECT(0xeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00C1
        gbc.setState(0xf6e, 0xe387, 0x5e60, 0xd92f, 0xb716, 0x13fb, 0x1, 0x1);
        gbc.writeMem(0xf6e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe387, gbc.sp());
        EXPECT(0xf70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00C2
        gbc.setState(0x8358, 0x1b7f, 0xdd50, 0x810d, 0x9edf, 0x524, 0x1, 0x0);
        gbc.writeMem(0x8358, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1b7f, gbc.sp());
        EXPECT(0x835a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8358));
        EXPECT(0x27, gbc.readMem(0x8359));
        // CB 27 00C3
        gbc.setState(0xf44, 0x637, 0x1f00, 0x950, 0x7883, 0xc2bd, 0x0, 0x0);
        gbc.writeMem(0xf44, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x637, gbc.sp());
        EXPECT(0xf46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00C4
        gbc.setState(0xce39, 0x7d0a, 0x9ba0, 0xe678, 0xe3e9, 0xcf46, 0x0, 0x1);
        gbc.writeMem(0xce39, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7d0a, gbc.sp());
        EXPECT(0xce3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce39));
        EXPECT(0x27, gbc.readMem(0xce3a));
        // CB 27 00C5
        gbc.setState(0x41af, 0x7254, 0x4c00, 0xc687, 0x526b, 0x3c1a, 0x1, 0x0);
        gbc.writeMem(0x41af, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7254, gbc.sp());
        EXPECT(0x41b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00C6
        gbc.setState(0xe5d9, 0x583f, 0x41f0, 0x851, 0xb8e0, 0xf54b, 0x0, 0x1);
        gbc.writeMem(0xe5d9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x583f, gbc.sp());
        EXPECT(0xe5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d9));
        EXPECT(0x27, gbc.readMem(0xe5da));
        // CB 27 00C7
        gbc.setState(0x7bdd, 0x59e1, 0x96a0, 0x130, 0x7cf8, 0x9fb3, 0x1, 0x1);
        gbc.writeMem(0x7bdd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x59e1, gbc.sp());
        EXPECT(0x7bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00C8
        gbc.setState(0x63f8, 0x410a, 0x75b0, 0x9aa9, 0x42cd, 0x45e8, 0x1, 0x1);
        gbc.writeMem(0x63f8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x410a, gbc.sp());
        EXPECT(0x63fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00C9
        gbc.setState(0x2f9b, 0x5bfb, 0x1d0, 0x9c6b, 0x997d, 0x6f58, 0x1, 0x1);
        gbc.writeMem(0x2f9b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5bfb, gbc.sp());
        EXPECT(0x2f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00CA
        gbc.setState(0x1755, 0x19e1, 0xc0a0, 0x8c39, 0x304f, 0x78c9, 0x1, 0x0);
        gbc.writeMem(0x1755, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x19e1, gbc.sp());
        EXPECT(0x1757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00CB
        gbc.setState(0x440f, 0xd155, 0x2640, 0xbb09, 0xd128, 0xea93, 0x1, 0x1);
        gbc.writeMem(0x440f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd155, gbc.sp());
        EXPECT(0x4411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00CC
        gbc.setState(0x2292, 0x6239, 0x5c40, 0x8c52, 0x6370, 0xc0e7, 0x1, 0x1);
        gbc.writeMem(0x2292, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6239, gbc.sp());
        EXPECT(0x2294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00CD
        gbc.setState(0xc419, 0x56b5, 0xece0, 0x6341, 0x5cd4, 0x7b2a, 0x0, 0x1);
        gbc.writeMem(0xc419, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x56b5, gbc.sp());
        EXPECT(0xc41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc419));
        EXPECT(0x27, gbc.readMem(0xc41a));
        // CB 27 00CE
        gbc.setState(0xee2f, 0x4d77, 0x1580, 0x5d29, 0x68ea, 0x72c, 0x0, 0x0);
        gbc.writeMem(0xee2f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4d77, gbc.sp());
        EXPECT(0xee31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2f));
        EXPECT(0x27, gbc.readMem(0xee30));
        // CB 27 00CF
        gbc.setState(0x4df, 0x3f03, 0xdcd0, 0xc814, 0x36cf, 0xb4f8, 0x0, 0x0);
        gbc.writeMem(0x4df, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3f03, gbc.sp());
        EXPECT(0x4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00D0
        gbc.setState(0x6207, 0xeafe, 0xf8a0, 0xf3cc, 0x8e84, 0xeefc, 0x1, 0x0);
        gbc.writeMem(0x6207, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xeafe, gbc.sp());
        EXPECT(0x6209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00D1
        gbc.setState(0x8cfa, 0xf8bb, 0xb850, 0x7652, 0x8b14, 0xc8f1, 0x1, 0x0);
        gbc.writeMem(0x8cfa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf8bb, gbc.sp());
        EXPECT(0x8cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cfa));
        EXPECT(0x27, gbc.readMem(0x8cfb));
        // CB 27 00D2
        gbc.setState(0xe4e7, 0xc70a, 0x240, 0xee00, 0xf724, 0xaaef, 0x0, 0x1);
        gbc.writeMem(0xe4e7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc70a, gbc.sp());
        EXPECT(0xe4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e7));
        EXPECT(0x27, gbc.readMem(0xe4e8));
        // CB 27 00D3
        gbc.setState(0xc5c6, 0x2e13, 0x2950, 0x5ee, 0x2e40, 0x5436, 0x0, 0x0);
        gbc.writeMem(0xc5c6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2e13, gbc.sp());
        EXPECT(0xc5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c6));
        EXPECT(0x27, gbc.readMem(0xc5c7));
        // CB 27 00D4
        gbc.setState(0x241d, 0xa651, 0x7530, 0xcb73, 0x1d82, 0x3c83, 0x0, 0x1);
        gbc.writeMem(0x241d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa651, gbc.sp());
        EXPECT(0x241f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00D5
        gbc.setState(0xb6d5, 0xb6ee, 0x2860, 0xdce3, 0x1c61, 0x1777, 0x1, 0x1);
        gbc.writeMem(0xb6d5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb6ee, gbc.sp());
        EXPECT(0xb6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d5));
        EXPECT(0x27, gbc.readMem(0xb6d6));
        // CB 27 00D6
        gbc.setState(0x366a, 0x6a51, 0x6150, 0x5546, 0xb0d8, 0x5608, 0x1, 0x0);
        gbc.writeMem(0x366a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6a51, gbc.sp());
        EXPECT(0x366c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00D7
        gbc.setState(0xe1ca, 0xf4d4, 0xe4d0, 0xd9eb, 0x3f8, 0x202, 0x1, 0x0);
        gbc.writeMem(0xe1ca, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf4d4, gbc.sp());
        EXPECT(0xe1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ca));
        EXPECT(0x27, gbc.readMem(0xe1cb));
        // CB 27 00D8
        gbc.setState(0x6c69, 0x6fe2, 0x9100, 0xf078, 0x7735, 0x743e, 0x1, 0x1);
        gbc.writeMem(0x6c69, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6fe2, gbc.sp());
        EXPECT(0x6c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00DA
        gbc.setState(0x72e8, 0x6ab6, 0xba40, 0x4e59, 0xdb68, 0xf91b, 0x1, 0x1);
        gbc.writeMem(0x72e8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6ab6, gbc.sp());
        EXPECT(0x72ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00DB
        gbc.setState(0xe5e6, 0x6e89, 0x21b0, 0x2991, 0xc93f, 0x9765, 0x1, 0x1);
        gbc.writeMem(0xe5e6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6e89, gbc.sp());
        EXPECT(0xe5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e6));
        EXPECT(0x27, gbc.readMem(0xe5e7));
        // CB 27 00DC
        gbc.setState(0xe4bf, 0xf25b, 0xa9f0, 0xd77, 0xe0c1, 0x4e1f, 0x1, 0x1);
        gbc.writeMem(0xe4bf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf25b, gbc.sp());
        EXPECT(0xe4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bf));
        EXPECT(0x27, gbc.readMem(0xe4c0));
        // CB 27 00DD
        gbc.setState(0x9834, 0x47be, 0x59b0, 0x21b9, 0x5fb, 0x4778, 0x1, 0x0);
        gbc.writeMem(0x9834, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x47be, gbc.sp());
        EXPECT(0x9836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9834));
        EXPECT(0x27, gbc.readMem(0x9835));
        // CB 27 00DE
        gbc.setState(0x5027, 0x109a, 0xb640, 0x9cc0, 0x9319, 0xd5d6, 0x0, 0x1);
        gbc.writeMem(0x5027, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x109a, gbc.sp());
        EXPECT(0x5029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00DF
        gbc.setState(0xcf1f, 0x6724, 0xe090, 0x9e49, 0x99e, 0xbc64, 0x0, 0x1);
        gbc.writeMem(0xcf1f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6724, gbc.sp());
        EXPECT(0xcf21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1f));
        EXPECT(0x27, gbc.readMem(0xcf20));
        // CB 27 00E0
        gbc.setState(0xcbdf, 0xace, 0x7840, 0xabc9, 0xf577, 0x6f65, 0x1, 0x0);
        gbc.writeMem(0xcbdf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xace, gbc.sp());
        EXPECT(0xcbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbdf));
        EXPECT(0x27, gbc.readMem(0xcbe0));
        // CB 27 00E1
        gbc.setState(0xe9a0, 0xc6f5, 0x9d50, 0x11da, 0x1bc6, 0x58ac, 0x0, 0x0);
        gbc.writeMem(0xe9a0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc6f5, gbc.sp());
        EXPECT(0xe9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a0));
        EXPECT(0x27, gbc.readMem(0xe9a1));
        // CB 27 00E2
        gbc.setState(0x6c69, 0x5908, 0xc10, 0x6a48, 0x4144, 0xe1f5, 0x1, 0x1);
        gbc.writeMem(0x6c69, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5908, gbc.sp());
        EXPECT(0x6c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00E3
        gbc.setState(0xe95c, 0xa9ea, 0x9d20, 0xbe7b, 0x443, 0xc097, 0x0, 0x0);
        gbc.writeMem(0xe95c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa9ea, gbc.sp());
        EXPECT(0xe95e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95c));
        EXPECT(0x27, gbc.readMem(0xe95d));
        // CB 27 00E4
        gbc.setState(0xa461, 0x288e, 0x6200, 0x822a, 0x61c3, 0x7a47, 0x0, 0x1);
        gbc.writeMem(0xa461, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x288e, gbc.sp());
        EXPECT(0xa463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa461));
        EXPECT(0x27, gbc.readMem(0xa462));
        // CB 27 00E5
        gbc.setState(0x1f6b, 0x29aa, 0x6360, 0x257b, 0xd8fb, 0x6fa3, 0x1, 0x1);
        gbc.writeMem(0x1f6b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x29aa, gbc.sp());
        EXPECT(0x1f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00E7
        gbc.setState(0x53d7, 0xcc74, 0x5b70, 0x1ff0, 0xb285, 0x670e, 0x0, 0x0);
        gbc.writeMem(0x53d7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcc74, gbc.sp());
        EXPECT(0x53d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00E8
        gbc.setState(0x5949, 0xce53, 0x8510, 0x20c4, 0x2c73, 0x75f1, 0x1, 0x0);
        gbc.writeMem(0x5949, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xce53, gbc.sp());
        EXPECT(0x594b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00E9
        gbc.setState(0x30b6, 0x6819, 0xdc40, 0x22b0, 0xd702, 0x2b86, 0x1, 0x0);
        gbc.writeMem(0x30b6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6819, gbc.sp());
        EXPECT(0x30b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00EA
        gbc.setState(0x74df, 0x1461, 0xd190, 0x3e11, 0xb2d, 0x4574, 0x1, 0x0);
        gbc.writeMem(0x74df, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1461, gbc.sp());
        EXPECT(0x74e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00EB
        gbc.setState(0x4048, 0xadd6, 0xd580, 0xacd4, 0x6284, 0x1e84, 0x1, 0x0);
        gbc.writeMem(0x4048, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xadd6, gbc.sp());
        EXPECT(0x404a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00EC
        gbc.setState(0x2b95, 0xf223, 0x7ff0, 0x95e1, 0x880, 0x1927, 0x0, 0x1);
        gbc.writeMem(0x2b95, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf223, gbc.sp());
        EXPECT(0x2b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00ED
        gbc.setState(0x2b83, 0x46eb, 0x7490, 0x5f7e, 0x2430, 0xccb0, 0x1, 0x1);
        gbc.writeMem(0x2b83, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x46eb, gbc.sp());
        EXPECT(0x2b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00EE
        gbc.setState(0xd9f3, 0x6d27, 0x4d00, 0x4d14, 0x1c88, 0x131c, 0x1, 0x1);
        gbc.writeMem(0xd9f3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6d27, gbc.sp());
        EXPECT(0xd9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f3));
        EXPECT(0x27, gbc.readMem(0xd9f4));
        // CB 27 00EF
        gbc.setState(0x8c30, 0x8963, 0x6780, 0xca0f, 0xe36, 0x9c47, 0x0, 0x1);
        gbc.writeMem(0x8c30, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8963, gbc.sp());
        EXPECT(0x8c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c30));
        EXPECT(0x27, gbc.readMem(0x8c31));
        // CB 27 00F0
        gbc.setState(0x31f9, 0xa66c, 0xf560, 0xf809, 0xe60, 0x7313, 0x0, 0x1);
        gbc.writeMem(0x31f9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa66c, gbc.sp());
        EXPECT(0x31fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00F1
        gbc.setState(0x73d7, 0x968d, 0xbb00, 0x97c4, 0x8698, 0xd2f, 0x0, 0x0);
        gbc.writeMem(0x73d7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x968d, gbc.sp());
        EXPECT(0x73d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00F2
        gbc.setState(0x31c7, 0x5b93, 0x8fa0, 0x380e, 0xe865, 0xea67, 0x1, 0x0);
        gbc.writeMem(0x31c7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5b93, gbc.sp());
        EXPECT(0x31c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00F3
        gbc.setState(0x69b9, 0xc246, 0xda10, 0xcb47, 0x17a7, 0xfb0d, 0x0, 0x1);
        gbc.writeMem(0x69b9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc246, gbc.sp());
        EXPECT(0x69bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00F5
        gbc.setState(0x8f63, 0xef5, 0x2190, 0x776, 0x2823, 0x4a25, 0x1, 0x0);
        gbc.writeMem(0x8f63, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xef5, gbc.sp());
        EXPECT(0x8f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f63));
        EXPECT(0x27, gbc.readMem(0x8f64));
        // CB 27 00F6
        gbc.setState(0x7305, 0xce69, 0x1f30, 0xe655, 0x49d8, 0xc6fb, 0x0, 0x1);
        gbc.writeMem(0x7305, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xce69, gbc.sp());
        EXPECT(0x7307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00F7
        gbc.setState(0x1c19, 0xcd85, 0x46d0, 0xa363, 0xe42a, 0x38fe, 0x0, 0x1);
        gbc.writeMem(0x1c19, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcd85, gbc.sp());
        EXPECT(0x1c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00F8
        gbc.setState(0x12c2, 0x49fa, 0x2b40, 0x6770, 0x5a83, 0x3876, 0x0, 0x0);
        gbc.writeMem(0x12c2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x49fa, gbc.sp());
        EXPECT(0x12c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00F9
        gbc.setState(0xac43, 0x6bf7, 0xf070, 0x753e, 0xb4f8, 0x905b, 0x1, 0x0);
        gbc.writeMem(0xac43, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6bf7, gbc.sp());
        EXPECT(0xac45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac43));
        EXPECT(0x27, gbc.readMem(0xac44));
        // CB 27 00FA
        gbc.setState(0x659b, 0x1bd6, 0xac90, 0xe166, 0xfd1b, 0xd39e, 0x1, 0x0);
        gbc.writeMem(0x659b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1bd6, gbc.sp());
        EXPECT(0x659d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 00FB
        gbc.setState(0xa871, 0xb73b, 0x6ad0, 0x88dd, 0x357b, 0xb35f, 0x0, 0x0);
        gbc.writeMem(0xa871, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb73b, gbc.sp());
        EXPECT(0xa873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa871));
        EXPECT(0x27, gbc.readMem(0xa872));
        // CB 27 00FC
        gbc.setState(0x6442, 0x6000, 0x4a90, 0xb66f, 0x98fd, 0xee8d, 0x0, 0x1);
        gbc.writeMem(0x6442, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6000, gbc.sp());
        EXPECT(0x6444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 00FE
        gbc.setState(0xb1ba, 0xe163, 0xcd20, 0x3009, 0xfd1c, 0x870e, 0x0, 0x0);
        gbc.writeMem(0xb1ba, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe163, gbc.sp());
        EXPECT(0xb1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ba));
        EXPECT(0x27, gbc.readMem(0xb1bb));
        // CB 27 00FF
        gbc.setState(0xc737, 0x41ea, 0xee50, 0x7b89, 0x2d6, 0x91f0, 0x0, 0x0);
        gbc.writeMem(0xc737, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x41ea, gbc.sp());
        EXPECT(0xc739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc737));
        EXPECT(0x27, gbc.readMem(0xc738));
        // CB 27 0100
        gbc.setState(0xbc53, 0xa598, 0x2180, 0xcc75, 0x2e8d, 0x6390, 0x1, 0x1);
        gbc.writeMem(0xbc53, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa598, gbc.sp());
        EXPECT(0xbc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc53));
        EXPECT(0x27, gbc.readMem(0xbc54));
        // CB 27 0101
        gbc.setState(0xb7f4, 0x47f3, 0x7500, 0x156b, 0xa106, 0x72c7, 0x1, 0x0);
        gbc.writeMem(0xb7f4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x47f3, gbc.sp());
        EXPECT(0xb7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f4));
        EXPECT(0x27, gbc.readMem(0xb7f5));
        // CB 27 0102
        gbc.setState(0xb09, 0x2b85, 0xa50, 0xb7e4, 0xb733, 0xf11c, 0x1, 0x1);
        gbc.writeMem(0xb09, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2b85, gbc.sp());
        EXPECT(0xb0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0103
        gbc.setState(0xba89, 0x96be, 0x95c0, 0x10aa, 0x778b, 0xa6f9, 0x1, 0x1);
        gbc.writeMem(0xba89, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x96be, gbc.sp());
        EXPECT(0xba8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba89));
        EXPECT(0x27, gbc.readMem(0xba8a));
        // CB 27 0104
        gbc.setState(0xdbb0, 0xb91a, 0xdd80, 0x9bef, 0x7baf, 0x2431, 0x0, 0x1);
        gbc.writeMem(0xdbb0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb91a, gbc.sp());
        EXPECT(0xdbb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb0));
        EXPECT(0x27, gbc.readMem(0xdbb1));
        // CB 27 0105
        gbc.setState(0xeb60, 0xb070, 0x4840, 0xbf3e, 0x3161, 0x7a1a, 0x1, 0x0);
        gbc.writeMem(0xeb60, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb070, gbc.sp());
        EXPECT(0xeb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb60));
        EXPECT(0x27, gbc.readMem(0xeb61));
        // CB 27 0106
        gbc.setState(0x5938, 0x15bd, 0x1710, 0x1bed, 0x7bf0, 0xe8fe, 0x0, 0x1);
        gbc.writeMem(0x5938, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x15bd, gbc.sp());
        EXPECT(0x593a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0107
        gbc.setState(0x7345, 0x39db, 0xbed0, 0x3f6b, 0x273f, 0x5010, 0x0, 0x0);
        gbc.writeMem(0x7345, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x39db, gbc.sp());
        EXPECT(0x7347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0108
        gbc.setState(0x4600, 0xc, 0x4620, 0xf137, 0x1899, 0x5472, 0x0, 0x0);
        gbc.writeMem(0x4600, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc, gbc.sp());
        EXPECT(0x4602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0109
        gbc.setState(0x73db, 0xed93, 0xbf70, 0x250c, 0xc284, 0x2c95, 0x0, 0x0);
        gbc.writeMem(0x73db, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xed93, gbc.sp());
        EXPECT(0x73dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 010A
        gbc.setState(0x88e3, 0xa056, 0x7500, 0x1dcf, 0x5b70, 0xc11d, 0x0, 0x0);
        gbc.writeMem(0x88e3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa056, gbc.sp());
        EXPECT(0x88e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e3));
        EXPECT(0x27, gbc.readMem(0x88e4));
        // CB 27 010B
        gbc.setState(0x6cb0, 0xbb4, 0x8600, 0x1880, 0xba7f, 0x74c0, 0x1, 0x0);
        gbc.writeMem(0x6cb0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbb4, gbc.sp());
        EXPECT(0x6cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 010C
        gbc.setState(0x9659, 0x1feb, 0xdb90, 0xfdc6, 0x3227, 0x3a41, 0x1, 0x0);
        gbc.writeMem(0x9659, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1feb, gbc.sp());
        EXPECT(0x965b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9659));
        EXPECT(0x27, gbc.readMem(0x965a));
        // CB 27 010D
        gbc.setState(0x7c51, 0x274e, 0x9320, 0xea22, 0x7f03, 0xc3b3, 0x0, 0x0);
        gbc.writeMem(0x7c51, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x274e, gbc.sp());
        EXPECT(0x7c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 010E
        gbc.setState(0x39de, 0x7664, 0xf8d0, 0xae51, 0x4eef, 0xa0df, 0x1, 0x0);
        gbc.writeMem(0x39de, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7664, gbc.sp());
        EXPECT(0x39e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 010F
        gbc.setState(0x4334, 0x24b6, 0x1980, 0xd09a, 0x7660, 0xc66c, 0x1, 0x0);
        gbc.writeMem(0x4334, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x24b6, gbc.sp());
        EXPECT(0x4336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0110
        gbc.setState(0x9afa, 0x6bb, 0x4e60, 0x1d5f, 0x3ea0, 0xaad1, 0x1, 0x1);
        gbc.writeMem(0x9afa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6bb, gbc.sp());
        EXPECT(0x9afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afa));
        EXPECT(0x27, gbc.readMem(0x9afb));
        // CB 27 0111
        gbc.setState(0x4aa3, 0xf67d, 0x8bc0, 0x946f, 0x3387, 0xff57, 0x1, 0x1);
        gbc.writeMem(0x4aa3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf67d, gbc.sp());
        EXPECT(0x4aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0112
        gbc.setState(0xb992, 0xf93, 0x7690, 0x22b8, 0xa1e6, 0x889a, 0x0, 0x0);
        gbc.writeMem(0xb992, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf93, gbc.sp());
        EXPECT(0xb994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb992));
        EXPECT(0x27, gbc.readMem(0xb993));
        // CB 27 0113
        gbc.setState(0x8bfa, 0xa01c, 0x5130, 0x6cab, 0x2ba8, 0x7e3f, 0x0, 0x1);
        gbc.writeMem(0x8bfa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa01c, gbc.sp());
        EXPECT(0x8bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfa));
        EXPECT(0x27, gbc.readMem(0x8bfb));
        // CB 27 0114
        gbc.setState(0x7325, 0x1695, 0xe4e0, 0x4ea2, 0x637a, 0xd4b, 0x1, 0x0);
        gbc.writeMem(0x7325, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1695, gbc.sp());
        EXPECT(0x7327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0116
        gbc.setState(0x23ef, 0x80c2, 0x6390, 0x84e, 0x1032, 0xee7d, 0x1, 0x0);
        gbc.writeMem(0x23ef, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x80c2, gbc.sp());
        EXPECT(0x23f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0118
        gbc.setState(0x31c4, 0x1336, 0xb290, 0x2cd3, 0xb3e0, 0x27, 0x0, 0x0);
        gbc.writeMem(0x31c4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1336, gbc.sp());
        EXPECT(0x31c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0119
        gbc.setState(0xc0d5, 0x7f3a, 0x5e20, 0x1c7e, 0x7bf2, 0x9050, 0x1, 0x1);
        gbc.writeMem(0xc0d5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7f3a, gbc.sp());
        EXPECT(0xc0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d5));
        EXPECT(0x27, gbc.readMem(0xc0d6));
        // CB 27 011B
        gbc.setState(0x4d45, 0x1a48, 0xdc50, 0xafa1, 0xa1b0, 0x6706, 0x0, 0x1);
        gbc.writeMem(0x4d45, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1a48, gbc.sp());
        EXPECT(0x4d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 011C
        gbc.setState(0x8dcf, 0x7562, 0x66e0, 0xa8f6, 0x9fd6, 0xeac4, 0x1, 0x0);
        gbc.writeMem(0x8dcf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7562, gbc.sp());
        EXPECT(0x8dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dcf));
        EXPECT(0x27, gbc.readMem(0x8dd0));
        // CB 27 011D
        gbc.setState(0xd03f, 0x73ce, 0x7dc0, 0xaed4, 0x2e, 0x9550, 0x0, 0x0);
        gbc.writeMem(0xd03f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x73ce, gbc.sp());
        EXPECT(0xd041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03f));
        EXPECT(0x27, gbc.readMem(0xd040));
        // CB 27 011E
        gbc.setState(0x5b1f, 0xf40e, 0xd850, 0x241e, 0x3e67, 0x8262, 0x1, 0x0);
        gbc.writeMem(0x5b1f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf40e, gbc.sp());
        EXPECT(0x5b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 011F
        gbc.setState(0x116b, 0xde56, 0x1f50, 0x7c34, 0x339c, 0xc6f2, 0x1, 0x0);
        gbc.writeMem(0x116b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xde56, gbc.sp());
        EXPECT(0x116d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0120
        gbc.setState(0x4d58, 0xc231, 0xe5f0, 0x20e, 0x4548, 0x5195, 0x0, 0x0);
        gbc.writeMem(0x4d58, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc231, gbc.sp());
        EXPECT(0x4d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0121
        gbc.setState(0x74d8, 0xac38, 0x55b0, 0x9f0c, 0x50b0, 0x3697, 0x0, 0x1);
        gbc.writeMem(0x74d8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xac38, gbc.sp());
        EXPECT(0x74da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0122
        gbc.setState(0x7cd, 0x8cf4, 0x4500, 0xef0e, 0x7977, 0x72cb, 0x0, 0x1);
        gbc.writeMem(0x7cd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8cf4, gbc.sp());
        EXPECT(0x7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0123
        gbc.setState(0x549d, 0xa324, 0xe150, 0xcf88, 0xd0ca, 0xf06c, 0x0, 0x1);
        gbc.writeMem(0x549d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa324, gbc.sp());
        EXPECT(0x549f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0124
        gbc.setState(0x42a3, 0xa111, 0x72e0, 0x458e, 0xa00d, 0xba54, 0x0, 0x1);
        gbc.writeMem(0x42a3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa111, gbc.sp());
        EXPECT(0x42a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0125
        gbc.setState(0x67ee, 0x35da, 0x7870, 0x89f9, 0x5482, 0x7a3, 0x1, 0x1);
        gbc.writeMem(0x67ee, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x35da, gbc.sp());
        EXPECT(0x67f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0126
        gbc.setState(0x61a2, 0x259a, 0xfc60, 0xddcc, 0xcbda, 0xf936, 0x1, 0x0);
        gbc.writeMem(0x61a2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x259a, gbc.sp());
        EXPECT(0x61a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0128
        gbc.setState(0x219d, 0xc3b, 0xbcb0, 0xa38e, 0x5e05, 0x73d1, 0x1, 0x0);
        gbc.writeMem(0x219d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc3b, gbc.sp());
        EXPECT(0x219f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0129
        gbc.setState(0xb222, 0xb55e, 0xed80, 0x522e, 0x1d3a, 0xf573, 0x0, 0x0);
        gbc.writeMem(0xb222, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb55e, gbc.sp());
        EXPECT(0xb224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb222));
        EXPECT(0x27, gbc.readMem(0xb223));
        // CB 27 012A
        gbc.setState(0x242e, 0xcba3, 0x8e90, 0xc37d, 0xed67, 0x8008, 0x0, 0x1);
        gbc.writeMem(0x242e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcba3, gbc.sp());
        EXPECT(0x2430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 012B
        gbc.setState(0xaecc, 0x27d0, 0xda60, 0xdc6b, 0xc5f3, 0x76f5, 0x1, 0x0);
        gbc.writeMem(0xaecc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x27d0, gbc.sp());
        EXPECT(0xaece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaecc));
        EXPECT(0x27, gbc.readMem(0xaecd));
        // CB 27 012C
        gbc.setState(0x1572, 0x9eca, 0xd930, 0x9fb8, 0x2ac0, 0xbdb8, 0x1, 0x1);
        gbc.writeMem(0x1572, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9eca, gbc.sp());
        EXPECT(0x1574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 012D
        gbc.setState(0x13b5, 0x5bb0, 0x4950, 0x2f8, 0x41e0, 0x43a9, 0x0, 0x1);
        gbc.writeMem(0x13b5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5bb0, gbc.sp());
        EXPECT(0x13b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 012E
        gbc.setState(0xb73a, 0x8fcf, 0x9000, 0xe14c, 0x5063, 0xd87f, 0x0, 0x0);
        gbc.writeMem(0xb73a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8fcf, gbc.sp());
        EXPECT(0xb73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73a));
        EXPECT(0x27, gbc.readMem(0xb73b));
        // CB 27 012F
        gbc.setState(0x969d, 0xa924, 0x82f0, 0x1d22, 0x4932, 0xb9c5, 0x1, 0x1);
        gbc.writeMem(0x969d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa924, gbc.sp());
        EXPECT(0x969f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x969d));
        EXPECT(0x27, gbc.readMem(0x969e));
        // CB 27 0130
        gbc.setState(0xda4a, 0x611e, 0x4550, 0xf109, 0xbcd4, 0xe5ec, 0x0, 0x1);
        gbc.writeMem(0xda4a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x611e, gbc.sp());
        EXPECT(0xda4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda4a));
        EXPECT(0x27, gbc.readMem(0xda4b));
        // CB 27 0131
        gbc.setState(0x5d27, 0x1537, 0xdf20, 0xd58b, 0x512d, 0x3542, 0x1, 0x0);
        gbc.writeMem(0x5d27, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1537, gbc.sp());
        EXPECT(0x5d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0132
        gbc.setState(0xb4aa, 0x97da, 0x5600, 0xfd8, 0x2d94, 0x3be2, 0x1, 0x0);
        gbc.writeMem(0xb4aa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x97da, gbc.sp());
        EXPECT(0xb4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4aa));
        EXPECT(0x27, gbc.readMem(0xb4ab));
        // CB 27 0133
        gbc.setState(0xcb44, 0x7b5d, 0xdd50, 0x99d3, 0x9519, 0x98fa, 0x1, 0x1);
        gbc.writeMem(0xcb44, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7b5d, gbc.sp());
        EXPECT(0xcb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb44));
        EXPECT(0x27, gbc.readMem(0xcb45));
        // CB 27 0134
        gbc.setState(0x3005, 0x5fe8, 0xa290, 0xa26, 0x75bf, 0x7864, 0x1, 0x1);
        gbc.writeMem(0x3005, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5fe8, gbc.sp());
        EXPECT(0x3007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0135
        gbc.setState(0xeb58, 0x82a1, 0x3e40, 0x139c, 0x84cb, 0x4bed, 0x1, 0x1);
        gbc.writeMem(0xeb58, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x82a1, gbc.sp());
        EXPECT(0xeb5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb58));
        EXPECT(0x27, gbc.readMem(0xeb59));
        // CB 27 0136
        gbc.setState(0x7e3d, 0xf7a0, 0xbf50, 0x5cee, 0xdb6b, 0x10ae, 0x1, 0x1);
        gbc.writeMem(0x7e3d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf7a0, gbc.sp());
        EXPECT(0x7e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0137
        gbc.setState(0x8462, 0x5686, 0x8b90, 0x4edf, 0x7ba, 0xdfcf, 0x0, 0x0);
        gbc.writeMem(0x8462, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5686, gbc.sp());
        EXPECT(0x8464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8462));
        EXPECT(0x27, gbc.readMem(0x8463));
        // CB 27 0138
        gbc.setState(0x8fe7, 0x28ce, 0x8300, 0x1d2c, 0x91b2, 0xb92, 0x0, 0x0);
        gbc.writeMem(0x8fe7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x28ce, gbc.sp());
        EXPECT(0x8fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe7));
        EXPECT(0x27, gbc.readMem(0x8fe8));
        // CB 27 0139
        gbc.setState(0x3178, 0x8e25, 0x72a0, 0xec9b, 0xaeb8, 0xee76, 0x1, 0x1);
        gbc.writeMem(0x3178, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8e25, gbc.sp());
        EXPECT(0x317a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 013A
        gbc.setState(0x53dd, 0xff3f, 0x5820, 0x6741, 0xc0b0, 0x3b07, 0x0, 0x0);
        gbc.writeMem(0x53dd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xff3f, gbc.sp());
        EXPECT(0x53df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 013B
        gbc.setState(0x9d40, 0xa572, 0xd810, 0xd35a, 0x28f8, 0x1bf3, 0x0, 0x1);
        gbc.writeMem(0x9d40, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa572, gbc.sp());
        EXPECT(0x9d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d40));
        EXPECT(0x27, gbc.readMem(0x9d41));
        // CB 27 013C
        gbc.setState(0x3138, 0xe338, 0x740, 0x2c0d, 0x2200, 0x54d7, 0x0, 0x0);
        gbc.writeMem(0x3138, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe338, gbc.sp());
        EXPECT(0x313a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 013D
        gbc.setState(0xce9e, 0x6a4f, 0xf490, 0x348, 0xfac1, 0x48b1, 0x1, 0x0);
        gbc.writeMem(0xce9e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6a4f, gbc.sp());
        EXPECT(0xcea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce9e));
        EXPECT(0x27, gbc.readMem(0xce9f));
        // CB 27 013E
        gbc.setState(0x3290, 0x5e6b, 0xee60, 0xa2b4, 0x9aa, 0x73a4, 0x0, 0x0);
        gbc.writeMem(0x3290, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5e6b, gbc.sp());
        EXPECT(0x3292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 013F
        gbc.setState(0x224f, 0x8632, 0xec70, 0xd2cc, 0x6734, 0x279b, 0x1, 0x1);
        gbc.writeMem(0x224f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8632, gbc.sp());
        EXPECT(0x2251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0140
        gbc.setState(0x1649, 0x1b85, 0xc4b0, 0xc2a3, 0x4670, 0x1a24, 0x0, 0x1);
        gbc.writeMem(0x1649, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1b85, gbc.sp());
        EXPECT(0x164b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0141
        gbc.setState(0xa3be, 0xa1ac, 0xcaa0, 0x12c4, 0x4f73, 0xf074, 0x1, 0x1);
        gbc.writeMem(0xa3be, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa1ac, gbc.sp());
        EXPECT(0xa3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3be));
        EXPECT(0x27, gbc.readMem(0xa3bf));
        // CB 27 0142
        gbc.setState(0x92c9, 0x8af0, 0x9120, 0x2d11, 0xd064, 0x1570, 0x1, 0x1);
        gbc.writeMem(0x92c9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8af0, gbc.sp());
        EXPECT(0x92cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c9));
        EXPECT(0x27, gbc.readMem(0x92ca));
        // CB 27 0143
        gbc.setState(0x9260, 0x384a, 0xb4b0, 0xae63, 0xe495, 0x597, 0x0, 0x1);
        gbc.writeMem(0x9260, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x384a, gbc.sp());
        EXPECT(0x9262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9260));
        EXPECT(0x27, gbc.readMem(0x9261));
        // CB 27 0144
        gbc.setState(0x1593, 0x9d61, 0x7410, 0xe9f2, 0xc2dc, 0x6750, 0x1, 0x0);
        gbc.writeMem(0x1593, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9d61, gbc.sp());
        EXPECT(0x1595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0145
        gbc.setState(0xb10c, 0x2f8a, 0x75b0, 0x5345, 0xd0d4, 0xd65c, 0x0, 0x1);
        gbc.writeMem(0xb10c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2f8a, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10c));
        EXPECT(0x27, gbc.readMem(0xb10d));
        // CB 27 0146
        gbc.setState(0x251b, 0x4e6c, 0xdfb0, 0xd6d6, 0xe4f8, 0xc117, 0x1, 0x0);
        gbc.writeMem(0x251b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4e6c, gbc.sp());
        EXPECT(0x251d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0147
        gbc.setState(0x565f, 0x5b1a, 0x9830, 0x11b5, 0xa908, 0xf71b, 0x1, 0x0);
        gbc.writeMem(0x565f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5b1a, gbc.sp());
        EXPECT(0x5661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0148
        gbc.setState(0xb6f0, 0x57b2, 0xd9b0, 0x7270, 0x4428, 0xb874, 0x0, 0x0);
        gbc.writeMem(0xb6f0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x57b2, gbc.sp());
        EXPECT(0xb6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f0));
        EXPECT(0x27, gbc.readMem(0xb6f1));
        // CB 27 0149
        gbc.setState(0xbc82, 0x93dd, 0x80a0, 0x4b7a, 0x4232, 0xe5e5, 0x1, 0x0);
        gbc.writeMem(0xbc82, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x93dd, gbc.sp());
        EXPECT(0xbc84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc82));
        EXPECT(0x27, gbc.readMem(0xbc83));
        // CB 27 014A
        gbc.setState(0x95bd, 0x30be, 0xad30, 0x949b, 0xac39, 0xdba, 0x0, 0x0);
        gbc.writeMem(0x95bd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x30be, gbc.sp());
        EXPECT(0x95bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95bd));
        EXPECT(0x27, gbc.readMem(0x95be));
        // CB 27 014B
        gbc.setState(0x218d, 0xd2fe, 0x9b00, 0xb74c, 0x6812, 0x84fe, 0x1, 0x0);
        gbc.writeMem(0x218d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd2fe, gbc.sp());
        EXPECT(0x218f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 014C
        gbc.setState(0xbbf7, 0xd938, 0xe700, 0x9ca8, 0x693a, 0x84f1, 0x1, 0x1);
        gbc.writeMem(0xbbf7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd938, gbc.sp());
        EXPECT(0xbbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf7));
        EXPECT(0x27, gbc.readMem(0xbbf8));
        // CB 27 014D
        gbc.setState(0xd537, 0xd33, 0x9310, 0x8c36, 0x875c, 0xe584, 0x0, 0x0);
        gbc.writeMem(0xd537, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd33, gbc.sp());
        EXPECT(0xd539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd537));
        EXPECT(0x27, gbc.readMem(0xd538));
        // CB 27 014E
        gbc.setState(0x5012, 0xd486, 0x63b0, 0x6e34, 0x78ac, 0x1923, 0x0, 0x0);
        gbc.writeMem(0x5012, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd486, gbc.sp());
        EXPECT(0x5014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 014F
        gbc.setState(0x6a38, 0x5f1a, 0x4e60, 0x70cd, 0x7af7, 0xd542, 0x1, 0x1);
        gbc.writeMem(0x6a38, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5f1a, gbc.sp());
        EXPECT(0x6a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0150
        gbc.setState(0xa83a, 0x7282, 0xa8f0, 0x1ecf, 0x2eb3, 0xdb4e, 0x1, 0x0);
        gbc.writeMem(0xa83a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7282, gbc.sp());
        EXPECT(0xa83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83a));
        EXPECT(0x27, gbc.readMem(0xa83b));
        // CB 27 0151
        gbc.setState(0x7673, 0xeb93, 0xd8c0, 0x106d, 0x3bce, 0xd2b5, 0x0, 0x0);
        gbc.writeMem(0x7673, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xeb93, gbc.sp());
        EXPECT(0x7675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0152
        gbc.setState(0x4fe4, 0x31ad, 0x5890, 0x5159, 0x87f5, 0xa022, 0x0, 0x1);
        gbc.writeMem(0x4fe4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x31ad, gbc.sp());
        EXPECT(0x4fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0153
        gbc.setState(0xa74b, 0x25db, 0x4ca0, 0xe998, 0x2de1, 0xba72, 0x1, 0x1);
        gbc.writeMem(0xa74b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x25db, gbc.sp());
        EXPECT(0xa74d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74b));
        EXPECT(0x27, gbc.readMem(0xa74c));
        // CB 27 0154
        gbc.setState(0x93cf, 0x7c8c, 0xba20, 0xa82a, 0xdc47, 0x229c, 0x1, 0x1);
        gbc.writeMem(0x93cf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7c8c, gbc.sp());
        EXPECT(0x93d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93cf));
        EXPECT(0x27, gbc.readMem(0x93d0));
        // CB 27 0155
        gbc.setState(0xd156, 0xdc46, 0x4a60, 0x690b, 0x8fd6, 0x12a6, 0x1, 0x1);
        gbc.writeMem(0xd156, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdc46, gbc.sp());
        EXPECT(0xd158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd156));
        EXPECT(0x27, gbc.readMem(0xd157));
        // CB 27 0156
        gbc.setState(0xec32, 0x1f8e, 0x62f0, 0xadf4, 0x45ae, 0xd2b9, 0x0, 0x0);
        gbc.writeMem(0xec32, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1f8e, gbc.sp());
        EXPECT(0xec34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec32));
        EXPECT(0x27, gbc.readMem(0xec33));
        // CB 27 0157
        gbc.setState(0x325b, 0x22b0, 0x220, 0x75c2, 0x431a, 0xfef1, 0x1, 0x0);
        gbc.writeMem(0x325b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x22b0, gbc.sp());
        EXPECT(0x325d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0158
        gbc.setState(0x718a, 0xbd8e, 0x170, 0x34b4, 0x5f50, 0xcab0, 0x0, 0x1);
        gbc.writeMem(0x718a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbd8e, gbc.sp());
        EXPECT(0x718c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0159
        gbc.setState(0x62eb, 0xeaf, 0xc8a0, 0x12df, 0xe4cb, 0x6fde, 0x0, 0x0);
        gbc.writeMem(0x62eb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeaf, gbc.sp());
        EXPECT(0x62ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 015A
        gbc.setState(0x60a8, 0x769f, 0x7e00, 0x953b, 0xf92b, 0xc3ac, 0x1, 0x1);
        gbc.writeMem(0x60a8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x769f, gbc.sp());
        EXPECT(0x60aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 015B
        gbc.setState(0xeb04, 0x32da, 0x3330, 0xf652, 0x64b7, 0x9793, 0x1, 0x0);
        gbc.writeMem(0xeb04, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x32da, gbc.sp());
        EXPECT(0xeb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb04));
        EXPECT(0x27, gbc.readMem(0xeb05));
        // CB 27 015C
        gbc.setState(0xbd68, 0x5299, 0x5080, 0xdcf9, 0x472a, 0xcd1a, 0x0, 0x1);
        gbc.writeMem(0xbd68, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5299, gbc.sp());
        EXPECT(0xbd6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd68));
        EXPECT(0x27, gbc.readMem(0xbd69));
        // CB 27 015D
        gbc.setState(0x9aac, 0x78b8, 0x8c30, 0xa098, 0x79a6, 0x4795, 0x1, 0x0);
        gbc.writeMem(0x9aac, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x78b8, gbc.sp());
        EXPECT(0x9aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aac));
        EXPECT(0x27, gbc.readMem(0x9aad));
        // CB 27 015E
        gbc.setState(0xb904, 0x28e9, 0x3f80, 0x6e8c, 0x68e, 0x153a, 0x0, 0x0);
        gbc.writeMem(0xb904, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x28e9, gbc.sp());
        EXPECT(0xb906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb904));
        EXPECT(0x27, gbc.readMem(0xb905));
        // CB 27 015F
        gbc.setState(0x976a, 0x521c, 0xf7d0, 0x3e55, 0xb08b, 0x92fd, 0x1, 0x0);
        gbc.writeMem(0x976a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x521c, gbc.sp());
        EXPECT(0x976c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x976a));
        EXPECT(0x27, gbc.readMem(0x976b));
        // CB 27 0160
        gbc.setState(0xb04f, 0xabb9, 0xf720, 0x605e, 0xee, 0xcadf, 0x0, 0x0);
        gbc.writeMem(0xb04f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xabb9, gbc.sp());
        EXPECT(0xb051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04f));
        EXPECT(0x27, gbc.readMem(0xb050));
        // CB 27 0161
        gbc.setState(0x1b80, 0x21fb, 0xf6b0, 0x446f, 0x49d9, 0xedd0, 0x0, 0x0);
        gbc.writeMem(0x1b80, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x21fb, gbc.sp());
        EXPECT(0x1b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0162
        gbc.setState(0x4aaa, 0xaa5, 0xc780, 0x675d, 0x5ff8, 0x8526, 0x1, 0x0);
        gbc.writeMem(0x4aaa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaa5, gbc.sp());
        EXPECT(0x4aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0163
        gbc.setState(0x7f82, 0x1bfc, 0x6550, 0xe8f1, 0xa46d, 0x68f, 0x0, 0x1);
        gbc.writeMem(0x7f82, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1bfc, gbc.sp());
        EXPECT(0x7f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0164
        gbc.setState(0x7e15, 0x3ad, 0x38c0, 0xfa64, 0x1db2, 0x1e17, 0x1, 0x0);
        gbc.writeMem(0x7e15, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3ad, gbc.sp());
        EXPECT(0x7e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0165
        gbc.setState(0xa5b3, 0x7b28, 0xfb50, 0x7258, 0xa5e6, 0xb9f5, 0x1, 0x1);
        gbc.writeMem(0xa5b3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7b28, gbc.sp());
        EXPECT(0xa5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b3));
        EXPECT(0x27, gbc.readMem(0xa5b4));
        // CB 27 0166
        gbc.setState(0x1192, 0x3c9a, 0xd20, 0xd134, 0x1d70, 0xb1ec, 0x0, 0x0);
        gbc.writeMem(0x1192, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3c9a, gbc.sp());
        EXPECT(0x1194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0167
        gbc.setState(0xb3cb, 0xfcf7, 0x9400, 0x9a01, 0x2c4b, 0x2dfe, 0x0, 0x0);
        gbc.writeMem(0xb3cb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfcf7, gbc.sp());
        EXPECT(0xb3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cb));
        EXPECT(0x27, gbc.readMem(0xb3cc));
        // CB 27 0168
        gbc.setState(0xa79e, 0xf5bb, 0xf7f0, 0x14af, 0xfb7f, 0x92fa, 0x0, 0x1);
        gbc.writeMem(0xa79e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf5bb, gbc.sp());
        EXPECT(0xa7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79e));
        EXPECT(0x27, gbc.readMem(0xa79f));
        // CB 27 0169
        gbc.setState(0xeff8, 0x6dbf, 0x2e50, 0xd9be, 0x259d, 0xcdc4, 0x1, 0x1);
        gbc.writeMem(0xeff8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6dbf, gbc.sp());
        EXPECT(0xeffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff8));
        EXPECT(0x27, gbc.readMem(0xeff9));
        // CB 27 016A
        gbc.setState(0x730e, 0x93b4, 0x5f60, 0xa4bd, 0x80f, 0x767d, 0x0, 0x0);
        gbc.writeMem(0x730e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x93b4, gbc.sp());
        EXPECT(0x7310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 016B
        gbc.setState(0xedcd, 0xcf7c, 0xf060, 0x3fd1, 0xdc6d, 0x2257, 0x0, 0x0);
        gbc.writeMem(0xedcd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcf7c, gbc.sp());
        EXPECT(0xedcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedcd));
        EXPECT(0x27, gbc.readMem(0xedce));
        // CB 27 016C
        gbc.setState(0xeea9, 0x8197, 0x1fe0, 0xaad1, 0xb7bd, 0x8851, 0x0, 0x0);
        gbc.writeMem(0xeea9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8197, gbc.sp());
        EXPECT(0xeeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea9));
        EXPECT(0x27, gbc.readMem(0xeeaa));
        // CB 27 016D
        gbc.setState(0x1884, 0x4092, 0x1200, 0x7eb2, 0x3cc6, 0x5203, 0x1, 0x0);
        gbc.writeMem(0x1884, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4092, gbc.sp());
        EXPECT(0x1886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 016E
        gbc.setState(0x9609, 0xb4c9, 0x3040, 0x7b47, 0xab9a, 0x3d93, 0x1, 0x1);
        gbc.writeMem(0x9609, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb4c9, gbc.sp());
        EXPECT(0x960b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9609));
        EXPECT(0x27, gbc.readMem(0x960a));
        // CB 27 016F
        gbc.setState(0xeb03, 0xf484, 0x9040, 0x1a9d, 0xf07a, 0x9382, 0x0, 0x1);
        gbc.writeMem(0xeb03, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf484, gbc.sp());
        EXPECT(0xeb05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb03));
        EXPECT(0x27, gbc.readMem(0xeb04));
        // CB 27 0170
        gbc.setState(0x8cc4, 0x80e, 0xdc90, 0xfb9d, 0xd73f, 0x6c1, 0x1, 0x1);
        gbc.writeMem(0x8cc4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x80e, gbc.sp());
        EXPECT(0x8cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc4));
        EXPECT(0x27, gbc.readMem(0x8cc5));
        // CB 27 0171
        gbc.setState(0xbcb3, 0xf35f, 0xd90, 0x9577, 0x2f26, 0xa0a0, 0x1, 0x1);
        gbc.writeMem(0xbcb3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf35f, gbc.sp());
        EXPECT(0xbcb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb3));
        EXPECT(0x27, gbc.readMem(0xbcb4));
        // CB 27 0172
        gbc.setState(0x555f, 0xfcfb, 0x56e0, 0x4a64, 0x3b92, 0x6562, 0x1, 0x1);
        gbc.writeMem(0x555f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfcfb, gbc.sp());
        EXPECT(0x5561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0173
        gbc.setState(0x70cd, 0x7559, 0xe840, 0x44c5, 0x2cd2, 0x155d, 0x0, 0x1);
        gbc.writeMem(0x70cd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7559, gbc.sp());
        EXPECT(0x70cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0174
        gbc.setState(0x4780, 0x9cad, 0xc190, 0xb4fa, 0x7007, 0xb888, 0x0, 0x0);
        gbc.writeMem(0x4780, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9cad, gbc.sp());
        EXPECT(0x4782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0175
        gbc.setState(0x43f0, 0x3223, 0x40d0, 0xa31f, 0x2bd8, 0xa85f, 0x1, 0x0);
        gbc.writeMem(0x43f0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3223, gbc.sp());
        EXPECT(0x43f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0176
        gbc.setState(0x1433, 0x571f, 0x9da0, 0x483a, 0x86d3, 0x2ec0, 0x1, 0x1);
        gbc.writeMem(0x1433, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x571f, gbc.sp());
        EXPECT(0x1435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0177
        gbc.setState(0xd4b6, 0x9495, 0x4f80, 0x72df, 0xac2c, 0xe3cc, 0x1, 0x1);
        gbc.writeMem(0xd4b6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9495, gbc.sp());
        EXPECT(0xd4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b6));
        EXPECT(0x27, gbc.readMem(0xd4b7));
        // CB 27 0178
        gbc.setState(0x3bd9, 0x4578, 0x8590, 0xeee9, 0xcd29, 0xec10, 0x0, 0x0);
        gbc.writeMem(0x3bd9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4578, gbc.sp());
        EXPECT(0x3bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0179
        gbc.setState(0x262c, 0xe88d, 0xfa80, 0xef4b, 0xae2, 0x30be, 0x1, 0x0);
        gbc.writeMem(0x262c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe88d, gbc.sp());
        EXPECT(0x262e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 017A
        gbc.setState(0x43a7, 0xc1be, 0x3750, 0x2305, 0x936f, 0x1d5b, 0x1, 0x1);
        gbc.writeMem(0x43a7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc1be, gbc.sp());
        EXPECT(0x43a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 017B
        gbc.setState(0xd713, 0x286f, 0xe2c0, 0xf803, 0x1515, 0xb19, 0x0, 0x1);
        gbc.writeMem(0xd713, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x286f, gbc.sp());
        EXPECT(0xd715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd713));
        EXPECT(0x27, gbc.readMem(0xd714));
        // CB 27 017C
        gbc.setState(0xf53, 0x31ae, 0x8380, 0x34e6, 0xcc1c, 0xb6ff, 0x1, 0x1);
        gbc.writeMem(0xf53, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x31ae, gbc.sp());
        EXPECT(0xf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 017D
        gbc.setState(0x294d, 0xcf43, 0xd150, 0xda5d, 0xbbfa, 0xcd2f, 0x0, 0x0);
        gbc.writeMem(0x294d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcf43, gbc.sp());
        EXPECT(0x294f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 017E
        gbc.setState(0x63ba, 0x44b3, 0x9df0, 0xc65e, 0x2794, 0x6221, 0x0, 0x1);
        gbc.writeMem(0x63ba, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x44b3, gbc.sp());
        EXPECT(0x63bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 017F
        gbc.setState(0x66c6, 0x76a6, 0xf5f0, 0x2a66, 0xe1a9, 0x6893, 0x1, 0x1);
        gbc.writeMem(0x66c6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x76a6, gbc.sp());
        EXPECT(0x66c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0180
        gbc.setState(0x2d8d, 0x1f49, 0xdc00, 0x8b81, 0x7f2, 0x9362, 0x1, 0x0);
        gbc.writeMem(0x2d8d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1f49, gbc.sp());
        EXPECT(0x2d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0181
        gbc.setState(0x5fb8, 0x6e63, 0x1850, 0x66bc, 0xe119, 0x8bc2, 0x0, 0x0);
        gbc.writeMem(0x5fb8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6e63, gbc.sp());
        EXPECT(0x5fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0182
        gbc.setState(0x24b9, 0x648e, 0x1330, 0x63f, 0x5637, 0x83ea, 0x1, 0x0);
        gbc.writeMem(0x24b9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x648e, gbc.sp());
        EXPECT(0x24bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0183
        gbc.setState(0x50e0, 0xc4ac, 0x92c0, 0x4f4d, 0x8e9b, 0x6fef, 0x1, 0x0);
        gbc.writeMem(0x50e0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc4ac, gbc.sp());
        EXPECT(0x50e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0184
        gbc.setState(0x4f83, 0x3793, 0x4cc0, 0x345, 0x2731, 0xdc54, 0x0, 0x0);
        gbc.writeMem(0x4f83, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3793, gbc.sp());
        EXPECT(0x4f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0185
        gbc.setState(0xaac5, 0xfcc7, 0x8e50, 0xb0aa, 0xcd1b, 0xc427, 0x0, 0x0);
        gbc.writeMem(0xaac5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfcc7, gbc.sp());
        EXPECT(0xaac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac5));
        EXPECT(0x27, gbc.readMem(0xaac6));
        // CB 27 0186
        gbc.setState(0x9da9, 0x2f7f, 0xdfd0, 0x6864, 0x45bb, 0x31f7, 0x1, 0x0);
        gbc.writeMem(0x9da9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2f7f, gbc.sp());
        EXPECT(0x9dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da9));
        EXPECT(0x27, gbc.readMem(0x9daa));
        // CB 27 0187
        gbc.setState(0xea1c, 0x167f, 0x430, 0x8cc9, 0x1494, 0x7705, 0x1, 0x0);
        gbc.writeMem(0xea1c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x167f, gbc.sp());
        EXPECT(0xea1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea1c));
        EXPECT(0x27, gbc.readMem(0xea1d));
        // CB 27 0189
        gbc.setState(0xdd7d, 0xd350, 0xe100, 0xe60d, 0x5183, 0xcc8d, 0x1, 0x1);
        gbc.writeMem(0xdd7d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd350, gbc.sp());
        EXPECT(0xdd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd7d));
        EXPECT(0x27, gbc.readMem(0xdd7e));
        // CB 27 018A
        gbc.setState(0x1064, 0xf1b4, 0x9c30, 0x6772, 0x2984, 0x831c, 0x1, 0x1);
        gbc.writeMem(0x1064, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf1b4, gbc.sp());
        EXPECT(0x1066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 018B
        gbc.setState(0x3547, 0x7e4b, 0xd4d0, 0xb684, 0xa6c7, 0xbcbd, 0x1, 0x1);
        gbc.writeMem(0x3547, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7e4b, gbc.sp());
        EXPECT(0x3549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 018C
        gbc.setState(0x1c4b, 0x16ca, 0xad0, 0x8e2c, 0x84f6, 0xad7a, 0x0, 0x1);
        gbc.writeMem(0x1c4b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x16ca, gbc.sp());
        EXPECT(0x1c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 018D
        gbc.setState(0x6566, 0x4828, 0xf40, 0x374b, 0x4ea1, 0xb750, 0x0, 0x1);
        gbc.writeMem(0x6566, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4828, gbc.sp());
        EXPECT(0x6568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 018E
        gbc.setState(0x819a, 0x8cc8, 0x6fa0, 0xcf22, 0xa340, 0x320f, 0x0, 0x0);
        gbc.writeMem(0x819a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8cc8, gbc.sp());
        EXPECT(0x819c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x819a));
        EXPECT(0x27, gbc.readMem(0x819b));
        // CB 27 018F
        gbc.setState(0xc033, 0x2843, 0xa610, 0x35c, 0xfd97, 0x8115, 0x1, 0x0);
        gbc.writeMem(0xc033, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2843, gbc.sp());
        EXPECT(0xc035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc033));
        EXPECT(0x27, gbc.readMem(0xc034));
        // CB 27 0190
        gbc.setState(0x8824, 0xd07c, 0xc270, 0x5512, 0xc8f0, 0x3cc5, 0x0, 0x1);
        gbc.writeMem(0x8824, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd07c, gbc.sp());
        EXPECT(0x8826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8824));
        EXPECT(0x27, gbc.readMem(0x8825));
        // CB 27 0192
        gbc.setState(0xddd8, 0x5df6, 0x1e0, 0xd424, 0xca10, 0x2330, 0x0, 0x0);
        gbc.writeMem(0xddd8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5df6, gbc.sp());
        EXPECT(0xddda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd8));
        EXPECT(0x27, gbc.readMem(0xddd9));
        // CB 27 0193
        gbc.setState(0xb6c4, 0xddfa, 0x44b0, 0x9f4e, 0x2a36, 0x258a, 0x1, 0x0);
        gbc.writeMem(0xb6c4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xddfa, gbc.sp());
        EXPECT(0xb6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c4));
        EXPECT(0x27, gbc.readMem(0xb6c5));
        // CB 27 0194
        gbc.setState(0x9ef9, 0x300e, 0x3f70, 0x2a02, 0x64b3, 0xde0d, 0x0, 0x0);
        gbc.writeMem(0x9ef9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x300e, gbc.sp());
        EXPECT(0x9efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef9));
        EXPECT(0x27, gbc.readMem(0x9efa));
        // CB 27 0195
        gbc.setState(0x47f2, 0x4d31, 0x5a10, 0x9e38, 0x509d, 0x3141, 0x0, 0x0);
        gbc.writeMem(0x47f2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4d31, gbc.sp());
        EXPECT(0x47f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0196
        gbc.setState(0x1bbc, 0x9e3e, 0xa740, 0x9825, 0xaf1, 0x12e6, 0x0, 0x1);
        gbc.writeMem(0x1bbc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9e3e, gbc.sp());
        EXPECT(0x1bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0197
        gbc.setState(0x1631, 0x5bae, 0x88b0, 0xd6a6, 0xe6c2, 0xd260, 0x1, 0x0);
        gbc.writeMem(0x1631, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5bae, gbc.sp());
        EXPECT(0x1633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0198
        gbc.setState(0x62d0, 0xa646, 0xf5e0, 0xd697, 0xfd7f, 0xa289, 0x1, 0x0);
        gbc.writeMem(0x62d0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa646, gbc.sp());
        EXPECT(0x62d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0199
        gbc.setState(0xbaf0, 0x2ed8, 0xc6c0, 0x8f27, 0x7edb, 0x277a, 0x1, 0x0);
        gbc.writeMem(0xbaf0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2ed8, gbc.sp());
        EXPECT(0xbaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf0));
        EXPECT(0x27, gbc.readMem(0xbaf1));
        // CB 27 019A
        gbc.setState(0x1d40, 0xfc58, 0xb590, 0x1c74, 0x179b, 0xaf6e, 0x1, 0x0);
        gbc.writeMem(0x1d40, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfc58, gbc.sp());
        EXPECT(0x1d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 019B
        gbc.setState(0xdfc, 0x2bb2, 0x8360, 0xb471, 0x3ccc, 0x4756, 0x0, 0x0);
        gbc.writeMem(0xdfc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2bb2, gbc.sp());
        EXPECT(0xdfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 019C
        gbc.setState(0x9975, 0xf77d, 0x1fa0, 0x1600, 0xa35a, 0xd680, 0x0, 0x0);
        gbc.writeMem(0x9975, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf77d, gbc.sp());
        EXPECT(0x9977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9975));
        EXPECT(0x27, gbc.readMem(0x9976));
        // CB 27 019D
        gbc.setState(0x5f90, 0x7fed, 0x8730, 0x9dd1, 0x377, 0xcc75, 0x1, 0x1);
        gbc.writeMem(0x5f90, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7fed, gbc.sp());
        EXPECT(0x5f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 019E
        gbc.setState(0x3886, 0xbf5f, 0x8c30, 0xd661, 0x4160, 0x2d41, 0x1, 0x0);
        gbc.writeMem(0x3886, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbf5f, gbc.sp());
        EXPECT(0x3888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 019F
        gbc.setState(0xcc8e, 0xce97, 0x88f0, 0x215e, 0x5f8d, 0xe74d, 0x0, 0x1);
        gbc.writeMem(0xcc8e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xce97, gbc.sp());
        EXPECT(0xcc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8e));
        EXPECT(0x27, gbc.readMem(0xcc8f));
        // CB 27 01A0
        gbc.setState(0x8e73, 0xc64, 0x7820, 0xfe56, 0x1d05, 0x8944, 0x1, 0x1);
        gbc.writeMem(0x8e73, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc64, gbc.sp());
        EXPECT(0x8e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e73));
        EXPECT(0x27, gbc.readMem(0x8e74));
        // CB 27 01A1
        gbc.setState(0xe5c8, 0xea3a, 0x3f10, 0xf33f, 0xd674, 0x35b2, 0x1, 0x1);
        gbc.writeMem(0xe5c8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xea3a, gbc.sp());
        EXPECT(0xe5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c8));
        EXPECT(0x27, gbc.readMem(0xe5c9));
        // CB 27 01A3
        gbc.setState(0x61c9, 0x1b8a, 0x5410, 0xc970, 0xd0c5, 0xa3d8, 0x0, 0x1);
        gbc.writeMem(0x61c9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1b8a, gbc.sp());
        EXPECT(0x61cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01A4
        gbc.setState(0xe6ee, 0xf4f2, 0x5580, 0x127f, 0xde9d, 0xd512, 0x0, 0x0);
        gbc.writeMem(0xe6ee, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf4f2, gbc.sp());
        EXPECT(0xe6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ee));
        EXPECT(0x27, gbc.readMem(0xe6ef));
        // CB 27 01A5
        gbc.setState(0x310d, 0xd71d, 0xc0e0, 0xbd4, 0x6e09, 0x79c8, 0x0, 0x1);
        gbc.writeMem(0x310d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd71d, gbc.sp());
        EXPECT(0x310f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01A6
        gbc.setState(0x149d, 0x3b7, 0xb050, 0xaf17, 0x436c, 0x4010, 0x0, 0x1);
        gbc.writeMem(0x149d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3b7, gbc.sp());
        EXPECT(0x149f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01A7
        gbc.setState(0xadc, 0x3f90, 0x430, 0x1236, 0xea6b, 0x5ac1, 0x1, 0x0);
        gbc.writeMem(0xadc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3f90, gbc.sp());
        EXPECT(0xade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01A8
        gbc.setState(0xba52, 0x665c, 0x4ce0, 0x23d0, 0x1b63, 0x8254, 0x1, 0x0);
        gbc.writeMem(0xba52, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x665c, gbc.sp());
        EXPECT(0xba54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba52));
        EXPECT(0x27, gbc.readMem(0xba53));
        // CB 27 01A9
        gbc.setState(0xa734, 0x3b3d, 0x5100, 0xf451, 0x8740, 0xe902, 0x0, 0x1);
        gbc.writeMem(0xa734, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3b3d, gbc.sp());
        EXPECT(0xa736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa734));
        EXPECT(0x27, gbc.readMem(0xa735));
        // CB 27 01AA
        gbc.setState(0x232a, 0x71dc, 0x7870, 0x395e, 0xce64, 0x6cb4, 0x1, 0x1);
        gbc.writeMem(0x232a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x71dc, gbc.sp());
        EXPECT(0x232c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01AB
        gbc.setState(0x13e9, 0x945a, 0x2700, 0x6ef0, 0xe204, 0x9fae, 0x0, 0x1);
        gbc.writeMem(0x13e9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x945a, gbc.sp());
        EXPECT(0x13eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01AC
        gbc.setState(0x7878, 0x7d54, 0x1860, 0x7526, 0xbc21, 0xc8c4, 0x1, 0x1);
        gbc.writeMem(0x7878, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7d54, gbc.sp());
        EXPECT(0x787a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01AD
        gbc.setState(0xa950, 0x48ae, 0x4bb0, 0xd255, 0xf1ed, 0x7be5, 0x0, 0x1);
        gbc.writeMem(0xa950, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x48ae, gbc.sp());
        EXPECT(0xa952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa950));
        EXPECT(0x27, gbc.readMem(0xa951));
        // CB 27 01AE
        gbc.setState(0x56d4, 0x7648, 0x79a0, 0x9e15, 0x4d69, 0x804, 0x1, 0x0);
        gbc.writeMem(0x56d4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7648, gbc.sp());
        EXPECT(0x56d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01AF
        gbc.setState(0x2688, 0x59f, 0x3e90, 0x178d, 0xc213, 0xf63d, 0x0, 0x0);
        gbc.writeMem(0x2688, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x59f, gbc.sp());
        EXPECT(0x268a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01B0
        gbc.setState(0xe5b2, 0x1683, 0xa660, 0x634f, 0x9d5f, 0xe1b4, 0x1, 0x1);
        gbc.writeMem(0xe5b2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1683, gbc.sp());
        EXPECT(0xe5b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b2));
        EXPECT(0x27, gbc.readMem(0xe5b3));
        // CB 27 01B1
        gbc.setState(0xb221, 0x9f84, 0x3740, 0xef40, 0xc4, 0x1258, 0x0, 0x0);
        gbc.writeMem(0xb221, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9f84, gbc.sp());
        EXPECT(0xb223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb221));
        EXPECT(0x27, gbc.readMem(0xb222));
        // CB 27 01B4
        gbc.setState(0xe9e3, 0x8520, 0x6b80, 0x776e, 0x63b3, 0x29e9, 0x0, 0x0);
        gbc.writeMem(0xe9e3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8520, gbc.sp());
        EXPECT(0xe9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e3));
        EXPECT(0x27, gbc.readMem(0xe9e4));
        // CB 27 01B5
        gbc.setState(0x11e0, 0xa47, 0xd780, 0x5211, 0xde, 0x9d47, 0x0, 0x0);
        gbc.writeMem(0x11e0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa47, gbc.sp());
        EXPECT(0x11e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01B6
        gbc.setState(0xab7a, 0x3bb5, 0x6a50, 0x58be, 0xd5c0, 0xf035, 0x0, 0x1);
        gbc.writeMem(0xab7a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3bb5, gbc.sp());
        EXPECT(0xab7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7a));
        EXPECT(0x27, gbc.readMem(0xab7b));
        // CB 27 01B7
        gbc.setState(0xc19b, 0xa739, 0x8fc0, 0x53bd, 0x4d98, 0xd563, 0x1, 0x1);
        gbc.writeMem(0xc19b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa739, gbc.sp());
        EXPECT(0xc19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc19b));
        EXPECT(0x27, gbc.readMem(0xc19c));
        // CB 27 01B8
        gbc.setState(0xb85c, 0x3050, 0x3770, 0x2a64, 0x5ae, 0x65ef, 0x0, 0x0);
        gbc.writeMem(0xb85c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3050, gbc.sp());
        EXPECT(0xb85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85c));
        EXPECT(0x27, gbc.readMem(0xb85d));
        // CB 27 01B9
        gbc.setState(0x37a7, 0x63e5, 0xebb0, 0xc074, 0xf7b1, 0x2620, 0x1, 0x1);
        gbc.writeMem(0x37a7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x63e5, gbc.sp());
        EXPECT(0x37a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01BA
        gbc.setState(0x2ac6, 0xa62d, 0x280, 0x8f1, 0x49cd, 0x4f25, 0x0, 0x0);
        gbc.writeMem(0x2ac6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa62d, gbc.sp());
        EXPECT(0x2ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01BB
        gbc.setState(0xdc6a, 0x8290, 0x9320, 0xb700, 0x8e73, 0xf965, 0x0, 0x1);
        gbc.writeMem(0xdc6a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8290, gbc.sp());
        EXPECT(0xdc6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6a));
        EXPECT(0x27, gbc.readMem(0xdc6b));
        // CB 27 01BC
        gbc.setState(0xbd59, 0x9c32, 0x32d0, 0x8bce, 0x8591, 0xfafd, 0x1, 0x1);
        gbc.writeMem(0xbd59, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9c32, gbc.sp());
        EXPECT(0xbd5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd59));
        EXPECT(0x27, gbc.readMem(0xbd5a));
        // CB 27 01BD
        gbc.setState(0x6ef6, 0x24cb, 0x6570, 0x51f6, 0x8038, 0x5f20, 0x0, 0x0);
        gbc.writeMem(0x6ef6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x24cb, gbc.sp());
        EXPECT(0x6ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01BE
        gbc.setState(0x1edf, 0xe7ba, 0xa770, 0x6157, 0xa121, 0x673f, 0x1, 0x1);
        gbc.writeMem(0x1edf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe7ba, gbc.sp());
        EXPECT(0x1ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01BF
        gbc.setState(0x70ba, 0xf33d, 0xdfc0, 0xb352, 0x5a15, 0x1ecb, 0x1, 0x1);
        gbc.writeMem(0x70ba, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf33d, gbc.sp());
        EXPECT(0x70bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01C3
        gbc.setState(0x544e, 0xa9db, 0xa10, 0xb4be, 0xd1c8, 0xe37a, 0x1, 0x0);
        gbc.writeMem(0x544e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa9db, gbc.sp());
        EXPECT(0x5450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01C4
        gbc.setState(0xd48f, 0x9758, 0x3e70, 0xc6ba, 0x31b6, 0x6e5d, 0x0, 0x0);
        gbc.writeMem(0xd48f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9758, gbc.sp());
        EXPECT(0xd491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd48f));
        EXPECT(0x27, gbc.readMem(0xd490));
        // CB 27 01C5
        gbc.setState(0x4838, 0x8b1f, 0xa8a0, 0xb276, 0xbd42, 0xeb0e, 0x0, 0x1);
        gbc.writeMem(0x4838, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8b1f, gbc.sp());
        EXPECT(0x483a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01C6
        gbc.setState(0x7403, 0x5896, 0xeca0, 0xf008, 0xdfe6, 0x7a0e, 0x0, 0x1);
        gbc.writeMem(0x7403, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5896, gbc.sp());
        EXPECT(0x7405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01C7
        gbc.setState(0x5148, 0xf153, 0xd8e0, 0x6185, 0x5a41, 0x2317, 0x1, 0x0);
        gbc.writeMem(0x5148, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf153, gbc.sp());
        EXPECT(0x514a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01C8
        gbc.setState(0x8f9, 0x132, 0x4f30, 0x6ddc, 0xfa58, 0xc78, 0x0, 0x0);
        gbc.writeMem(0x8f9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x132, gbc.sp());
        EXPECT(0x8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01C9
        gbc.setState(0xe18f, 0x9e76, 0xb500, 0x45f0, 0xebd7, 0xbe85, 0x0, 0x1);
        gbc.writeMem(0xe18f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9e76, gbc.sp());
        EXPECT(0xe191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18f));
        EXPECT(0x27, gbc.readMem(0xe190));
        // CB 27 01CA
        gbc.setState(0x64f3, 0xfc4b, 0x3800, 0xb52b, 0x93f7, 0x1554, 0x1, 0x1);
        gbc.writeMem(0x64f3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfc4b, gbc.sp());
        EXPECT(0x64f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01CB
        gbc.setState(0x321, 0xa70e, 0xf0b0, 0xbfd3, 0x3091, 0xef46, 0x0, 0x0);
        gbc.writeMem(0x321, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa70e, gbc.sp());
        EXPECT(0x323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01CC
        gbc.setState(0x1e95, 0x5ad2, 0xf070, 0x5d9d, 0xd3b0, 0x24f, 0x1, 0x0);
        gbc.writeMem(0x1e95, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5ad2, gbc.sp());
        EXPECT(0x1e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01CD
        gbc.setState(0x1e62, 0xcc9e, 0xb740, 0x3cd1, 0x2d77, 0x2bf6, 0x0, 0x0);
        gbc.writeMem(0x1e62, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcc9e, gbc.sp());
        EXPECT(0x1e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01CE
        gbc.setState(0x508a, 0x88b1, 0x21b0, 0xb28a, 0xc98d, 0x5f82, 0x1, 0x1);
        gbc.writeMem(0x508a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x88b1, gbc.sp());
        EXPECT(0x508c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01CF
        gbc.setState(0xbadf, 0x9fb6, 0x42a0, 0x9d61, 0xb6d4, 0x4007, 0x1, 0x0);
        gbc.writeMem(0xbadf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9fb6, gbc.sp());
        EXPECT(0xbae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadf));
        EXPECT(0x27, gbc.readMem(0xbae0));
        // CB 27 01D0
        gbc.setState(0xb11a, 0x502e, 0x8d80, 0x8188, 0x7534, 0x28e2, 0x1, 0x0);
        gbc.writeMem(0xb11a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x502e, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11a));
        EXPECT(0x27, gbc.readMem(0xb11b));
        // CB 27 01D1
        gbc.setState(0x8611, 0x47ad, 0xba50, 0x12d1, 0x5939, 0xd3a8, 0x0, 0x1);
        gbc.writeMem(0x8611, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x47ad, gbc.sp());
        EXPECT(0x8613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8611));
        EXPECT(0x27, gbc.readMem(0x8612));
        // CB 27 01D2
        gbc.setState(0x35e4, 0xc72a, 0x9760, 0x66d6, 0x5588, 0x808e, 0x1, 0x0);
        gbc.writeMem(0x35e4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc72a, gbc.sp());
        EXPECT(0x35e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01D3
        gbc.setState(0x4ef3, 0x9229, 0xe530, 0xc8f0, 0xae0c, 0x46d0, 0x1, 0x1);
        gbc.writeMem(0x4ef3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9229, gbc.sp());
        EXPECT(0x4ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01D4
        gbc.setState(0xe8a7, 0x25af, 0xe560, 0xc2ed, 0x54b4, 0x553f, 0x0, 0x1);
        gbc.writeMem(0xe8a7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x25af, gbc.sp());
        EXPECT(0xe8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a7));
        EXPECT(0x27, gbc.readMem(0xe8a8));
        // CB 27 01D5
        gbc.setState(0x732, 0xd3fe, 0xde00, 0xeeac, 0x2698, 0x9696, 0x1, 0x1);
        gbc.writeMem(0x732, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd3fe, gbc.sp());
        EXPECT(0x734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01D6
        gbc.setState(0xd3d4, 0x961c, 0x9d50, 0x11bc, 0xcb3f, 0x5a35, 0x0, 0x0);
        gbc.writeMem(0xd3d4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x961c, gbc.sp());
        EXPECT(0xd3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d4));
        EXPECT(0x27, gbc.readMem(0xd3d5));
        // CB 27 01D7
        gbc.setState(0x97fc, 0x1e5f, 0xe8e0, 0x8de5, 0x1247, 0xe616, 0x0, 0x1);
        gbc.writeMem(0x97fc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1e5f, gbc.sp());
        EXPECT(0x97fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97fc));
        EXPECT(0x27, gbc.readMem(0x97fd));
        // CB 27 01D8
        gbc.setState(0x1407, 0x9706, 0xd0f0, 0xca7b, 0xd124, 0x2578, 0x1, 0x0);
        gbc.writeMem(0x1407, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9706, gbc.sp());
        EXPECT(0x1409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01D9
        gbc.setState(0x40d, 0x9a31, 0xa610, 0xa362, 0x28be, 0xc45d, 0x0, 0x1);
        gbc.writeMem(0x40d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9a31, gbc.sp());
        EXPECT(0x40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01DA
        gbc.setState(0x4ec, 0xbb9f, 0x1c90, 0x17d4, 0xb3be, 0x6fa7, 0x0, 0x0);
        gbc.writeMem(0x4ec, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbb9f, gbc.sp());
        EXPECT(0x4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01DC
        gbc.setState(0xafee, 0xdefc, 0x72a0, 0x6429, 0xd706, 0xf70, 0x1, 0x1);
        gbc.writeMem(0xafee, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdefc, gbc.sp());
        EXPECT(0xaff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafee));
        EXPECT(0x27, gbc.readMem(0xafef));
        // CB 27 01DD
        gbc.setState(0x2c80, 0xa97c, 0x70f0, 0xd6b9, 0xea6, 0x8da2, 0x1, 0x0);
        gbc.writeMem(0x2c80, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa97c, gbc.sp());
        EXPECT(0x2c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01DE
        gbc.setState(0xee08, 0x490b, 0x5c30, 0x2f92, 0x5c79, 0xc377, 0x0, 0x1);
        gbc.writeMem(0xee08, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x490b, gbc.sp());
        EXPECT(0xee0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee08));
        EXPECT(0x27, gbc.readMem(0xee09));
        // CB 27 01DF
        gbc.setState(0x59fd, 0x95cd, 0x2c10, 0xec34, 0xb14e, 0x570, 0x1, 0x1);
        gbc.writeMem(0x59fd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x95cd, gbc.sp());
        EXPECT(0x59ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01E0
        gbc.setState(0xce25, 0x1905, 0xa90, 0x90f4, 0x7c42, 0x4517, 0x1, 0x0);
        gbc.writeMem(0xce25, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1905, gbc.sp());
        EXPECT(0xce27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce25));
        EXPECT(0x27, gbc.readMem(0xce26));
        // CB 27 01E1
        gbc.setState(0x5c00, 0x4b3d, 0xb1e0, 0x759c, 0x8669, 0xa3e2, 0x1, 0x0);
        gbc.writeMem(0x5c00, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4b3d, gbc.sp());
        EXPECT(0x5c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01E2
        gbc.setState(0xe2f5, 0x1e72, 0xf9b0, 0xc5dc, 0x5c2f, 0xc2a1, 0x1, 0x1);
        gbc.writeMem(0xe2f5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1e72, gbc.sp());
        EXPECT(0xe2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f5));
        EXPECT(0x27, gbc.readMem(0xe2f6));
        // CB 27 01E3
        gbc.setState(0xea26, 0x20c4, 0x53e0, 0xd7f3, 0x5c98, 0x55b, 0x1, 0x1);
        gbc.writeMem(0xea26, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x20c4, gbc.sp());
        EXPECT(0xea28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea26));
        EXPECT(0x27, gbc.readMem(0xea27));
        // CB 27 01E4
        gbc.setState(0xa8cc, 0x391a, 0x5ed0, 0xc734, 0xcc3b, 0x603b, 0x0, 0x1);
        gbc.writeMem(0xa8cc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x391a, gbc.sp());
        EXPECT(0xa8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8cc));
        EXPECT(0x27, gbc.readMem(0xa8cd));
        // CB 27 01E5
        gbc.setState(0xcc12, 0xdab5, 0xc6d0, 0x6fdf, 0xb25, 0x93d6, 0x0, 0x1);
        gbc.writeMem(0xcc12, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdab5, gbc.sp());
        EXPECT(0xcc14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc12));
        EXPECT(0x27, gbc.readMem(0xcc13));
        // CB 27 01E6
        gbc.setState(0x9031, 0x56ba, 0xd750, 0x832d, 0x8484, 0xe10, 0x1, 0x1);
        gbc.writeMem(0x9031, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x56ba, gbc.sp());
        EXPECT(0x9033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9031));
        EXPECT(0x27, gbc.readMem(0x9032));
        // CB 27 01E7
        gbc.setState(0x36e8, 0x1f9f, 0x42d0, 0xcc90, 0xd408, 0xc9, 0x0, 0x0);
        gbc.writeMem(0x36e8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1f9f, gbc.sp());
        EXPECT(0x36ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01E8
        gbc.setState(0x7351, 0xb706, 0xb1b0, 0x538c, 0xef07, 0x7baa, 0x1, 0x0);
        gbc.writeMem(0x7351, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb706, gbc.sp());
        EXPECT(0x7353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01E9
        gbc.setState(0x5f31, 0x54e8, 0x5810, 0x347c, 0xffcc, 0x7601, 0x0, 0x1);
        gbc.writeMem(0x5f31, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x54e8, gbc.sp());
        EXPECT(0x5f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01EA
        gbc.setState(0x1ce2, 0x2c3c, 0xb80, 0x25f4, 0xd5d3, 0xa20f, 0x0, 0x1);
        gbc.writeMem(0x1ce2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2c3c, gbc.sp());
        EXPECT(0x1ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01EB
        gbc.setState(0xa639, 0x472c, 0x7010, 0xa592, 0xa83f, 0x7532, 0x0, 0x0);
        gbc.writeMem(0xa639, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x472c, gbc.sp());
        EXPECT(0xa63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa639));
        EXPECT(0x27, gbc.readMem(0xa63a));
        // CB 27 01EC
        gbc.setState(0x5842, 0x16ad, 0x9d60, 0x2d89, 0x756, 0xf4d, 0x1, 0x0);
        gbc.writeMem(0x5842, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x16ad, gbc.sp());
        EXPECT(0x5844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01ED
        gbc.setState(0xa94f, 0xeda3, 0xd9d0, 0xfd94, 0xe483, 0xb9ec, 0x0, 0x0);
        gbc.writeMem(0xa94f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeda3, gbc.sp());
        EXPECT(0xa951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94f));
        EXPECT(0x27, gbc.readMem(0xa950));
        // CB 27 01EE
        gbc.setState(0x9f60, 0xa7ba, 0xa3c0, 0x634, 0xf8fb, 0x5287, 0x0, 0x1);
        gbc.writeMem(0x9f60, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa7ba, gbc.sp());
        EXPECT(0x9f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f60));
        EXPECT(0x27, gbc.readMem(0x9f61));
        // CB 27 01EF
        gbc.setState(0x7b39, 0xe5ce, 0x4260, 0x7366, 0x736e, 0x92e1, 0x0, 0x1);
        gbc.writeMem(0x7b39, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe5ce, gbc.sp());
        EXPECT(0x7b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01F0
        gbc.setState(0x669c, 0x1cbf, 0x9440, 0x54ed, 0x6e5e, 0x90be, 0x0, 0x1);
        gbc.writeMem(0x669c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1cbf, gbc.sp());
        EXPECT(0x669e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01F1
        gbc.setState(0x4460, 0xec7f, 0xca60, 0xf9f2, 0xbcad, 0xf91a, 0x1, 0x1);
        gbc.writeMem(0x4460, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xec7f, gbc.sp());
        EXPECT(0x4462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01F2
        gbc.setState(0x39fa, 0xc348, 0xc6a0, 0xb393, 0x51c3, 0x7cd8, 0x1, 0x0);
        gbc.writeMem(0x39fa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc348, gbc.sp());
        EXPECT(0x39fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01F3
        gbc.setState(0x693d, 0xe9e, 0x6950, 0x34a8, 0x84f5, 0xe443, 0x0, 0x0);
        gbc.writeMem(0x693d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe9e, gbc.sp());
        EXPECT(0x693f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01F4
        gbc.setState(0x6c61, 0x4f74, 0xded0, 0x75d3, 0x6254, 0x5281, 0x0, 0x1);
        gbc.writeMem(0x6c61, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4f74, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01F5
        gbc.setState(0x75cc, 0x4e54, 0x56a0, 0x6c9f, 0x94f6, 0x868e, 0x0, 0x0);
        gbc.writeMem(0x75cc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4e54, gbc.sp());
        EXPECT(0x75ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01F6
        gbc.setState(0x130e, 0x73ab, 0x43f0, 0x22fe, 0xd19c, 0x141b, 0x1, 0x1);
        gbc.writeMem(0x130e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x73ab, gbc.sp());
        EXPECT(0x1310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01F7
        gbc.setState(0xe56, 0xbd1e, 0x6f0, 0x860e, 0x49b2, 0xaad3, 0x1, 0x1);
        gbc.writeMem(0xe56, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbd1e, gbc.sp());
        EXPECT(0xe58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01F8
        gbc.setState(0x7f8, 0xbae8, 0xcf30, 0x114b, 0x2240, 0x5ec8, 0x1, 0x0);
        gbc.writeMem(0x7f8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbae8, gbc.sp());
        EXPECT(0x7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01F9
        gbc.setState(0x1cdb, 0xe55d, 0x5b30, 0x9957, 0x8560, 0xc616, 0x0, 0x0);
        gbc.writeMem(0x1cdb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe55d, gbc.sp());
        EXPECT(0x1cdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01FA
        gbc.setState(0x683e, 0x25b2, 0xf8f0, 0xa93c, 0x29f, 0x8838, 0x0, 0x0);
        gbc.writeMem(0x683e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x25b2, gbc.sp());
        EXPECT(0x6840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 01FC
        gbc.setState(0x3c2b, 0x545c, 0x2120, 0x96be, 0xecd, 0x809c, 0x1, 0x1);
        gbc.writeMem(0x3c2b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x545c, gbc.sp());
        EXPECT(0x3c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01FD
        gbc.setState(0x2479, 0x9cd8, 0x2470, 0x615, 0x9d95, 0x9208, 0x0, 0x1);
        gbc.writeMem(0x2479, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9cd8, gbc.sp());
        EXPECT(0x247b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01FE
        gbc.setState(0x77be, 0xf5e7, 0x1880, 0xa5ab, 0x3cd, 0xcd87, 0x1, 0x1);
        gbc.writeMem(0x77be, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf5e7, gbc.sp());
        EXPECT(0x77c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 01FF
        gbc.setState(0x5f63, 0x557f, 0xb950, 0xb548, 0xc251, 0x498d, 0x1, 0x1);
        gbc.writeMem(0x5f63, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x557f, gbc.sp());
        EXPECT(0x5f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0200
        gbc.setState(0xebfa, 0x6c35, 0xe030, 0x2666, 0x127a, 0x855d, 0x1, 0x1);
        gbc.writeMem(0xebfa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6c35, gbc.sp());
        EXPECT(0xebfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfa));
        EXPECT(0x27, gbc.readMem(0xebfb));
        // CB 27 0201
        gbc.setState(0xd242, 0xea06, 0x730, 0xaaf8, 0x4287, 0x39ba, 0x1, 0x0);
        gbc.writeMem(0xd242, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xea06, gbc.sp());
        EXPECT(0xd244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd242));
        EXPECT(0x27, gbc.readMem(0xd243));
        // CB 27 0202
        gbc.setState(0x7b7c, 0x7b03, 0x9690, 0xb0f, 0x4996, 0xb1f4, 0x1, 0x1);
        gbc.writeMem(0x7b7c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7b03, gbc.sp());
        EXPECT(0x7b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0203
        gbc.setState(0x7bfb, 0x592, 0x4100, 0x32e8, 0xc859, 0xf4c9, 0x1, 0x1);
        gbc.writeMem(0x7bfb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x592, gbc.sp());
        EXPECT(0x7bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0204
        gbc.setState(0x148f, 0x7ead, 0x6080, 0xd448, 0x9cf9, 0xb7bd, 0x0, 0x0);
        gbc.writeMem(0x148f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7ead, gbc.sp());
        EXPECT(0x1491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0205
        gbc.setState(0xa788, 0xed84, 0x2ec0, 0xab20, 0x5d8f, 0x2dbd, 0x0, 0x1);
        gbc.writeMem(0xa788, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xed84, gbc.sp());
        EXPECT(0xa78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa788));
        EXPECT(0x27, gbc.readMem(0xa789));
        // CB 27 0206
        gbc.setState(0x44, 0x93bb, 0xbcd0, 0x277c, 0xdb5d, 0x431d, 0x0, 0x0);
        gbc.writeMem(0x44, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x93bb, gbc.sp());
        EXPECT(0x46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0207
        gbc.setState(0x47cb, 0x848c, 0x7590, 0xb29f, 0x2564, 0xc557, 0x1, 0x1);
        gbc.writeMem(0x47cb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x848c, gbc.sp());
        EXPECT(0x47cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0208
        gbc.setState(0x1892, 0x9da3, 0xdeb0, 0xcc32, 0x5f63, 0x1bff, 0x1, 0x0);
        gbc.writeMem(0x1892, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9da3, gbc.sp());
        EXPECT(0x1894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0209
        gbc.setState(0x4ef5, 0xa2b5, 0xfb00, 0xbe30, 0x6169, 0xe021, 0x1, 0x1);
        gbc.writeMem(0x4ef5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa2b5, gbc.sp());
        EXPECT(0x4ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 020A
        gbc.setState(0x8876, 0x2af3, 0x1fa0, 0x738b, 0x9595, 0x3a08, 0x1, 0x0);
        gbc.writeMem(0x8876, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2af3, gbc.sp());
        EXPECT(0x8878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8876));
        EXPECT(0x27, gbc.readMem(0x8877));
        // CB 27 020B
        gbc.setState(0xca84, 0x6b4a, 0x3ff0, 0x6996, 0x3d45, 0xf4c7, 0x0, 0x1);
        gbc.writeMem(0xca84, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6b4a, gbc.sp());
        EXPECT(0xca86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca84));
        EXPECT(0x27, gbc.readMem(0xca85));
        // CB 27 020C
        gbc.setState(0x2bbb, 0x8efb, 0xca10, 0x4df, 0xaf50, 0x53e2, 0x0, 0x0);
        gbc.writeMem(0x2bbb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8efb, gbc.sp());
        EXPECT(0x2bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 020D
        gbc.setState(0xbfc3, 0x3ddf, 0x12c0, 0x9d4c, 0x26b5, 0xdaff, 0x0, 0x0);
        gbc.writeMem(0xbfc3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3ddf, gbc.sp());
        EXPECT(0xbfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc3));
        EXPECT(0x27, gbc.readMem(0xbfc4));
        // CB 27 020E
        gbc.setState(0x8ce9, 0xaf7e, 0xcca0, 0xff47, 0x5bd, 0x7803, 0x1, 0x0);
        gbc.writeMem(0x8ce9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaf7e, gbc.sp());
        EXPECT(0x8ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce9));
        EXPECT(0x27, gbc.readMem(0x8cea));
        // CB 27 020F
        gbc.setState(0xb192, 0xe3d9, 0xeef0, 0xe11d, 0x4e54, 0x1ffd, 0x0, 0x0);
        gbc.writeMem(0xb192, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe3d9, gbc.sp());
        EXPECT(0xb194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb192));
        EXPECT(0x27, gbc.readMem(0xb193));
        // CB 27 0210
        gbc.setState(0xc3fc, 0x6e25, 0x39b0, 0x1add, 0x2913, 0x3ed, 0x1, 0x1);
        gbc.writeMem(0xc3fc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6e25, gbc.sp());
        EXPECT(0xc3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fc));
        EXPECT(0x27, gbc.readMem(0xc3fd));
        // CB 27 0211
        gbc.setState(0x59a0, 0x1523, 0xc210, 0x9e88, 0x6dc3, 0xe3fd, 0x0, 0x1);
        gbc.writeMem(0x59a0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1523, gbc.sp());
        EXPECT(0x59a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0212
        gbc.setState(0xea5b, 0x5068, 0x3b60, 0xad1c, 0xe73d, 0x6eb6, 0x1, 0x0);
        gbc.writeMem(0xea5b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5068, gbc.sp());
        EXPECT(0xea5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea5b));
        EXPECT(0x27, gbc.readMem(0xea5c));
        // CB 27 0214
        gbc.setState(0xa37e, 0xbab2, 0x2be0, 0x7439, 0x7042, 0x31a8, 0x1, 0x1);
        gbc.writeMem(0xa37e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbab2, gbc.sp());
        EXPECT(0xa380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37e));
        EXPECT(0x27, gbc.readMem(0xa37f));
        // CB 27 0215
        gbc.setState(0x16a7, 0x1d18, 0x2fb0, 0xae2f, 0x940, 0xaa35, 0x0, 0x1);
        gbc.writeMem(0x16a7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1d18, gbc.sp());
        EXPECT(0x16a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0216
        gbc.setState(0xeda7, 0x505c, 0x16b0, 0x8e13, 0x1a94, 0x64c0, 0x1, 0x0);
        gbc.writeMem(0xeda7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0xeda9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda7));
        EXPECT(0x27, gbc.readMem(0xeda8));
        // CB 27 0217
        gbc.setState(0x790a, 0x66c4, 0x2520, 0x7cb4, 0x4b7c, 0x5bd2, 0x0, 0x1);
        gbc.writeMem(0x790a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x66c4, gbc.sp());
        EXPECT(0x790c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0218
        gbc.setState(0x1443, 0x4716, 0x5270, 0x7021, 0x1028, 0xf3f2, 0x0, 0x0);
        gbc.writeMem(0x1443, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4716, gbc.sp());
        EXPECT(0x1445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0219
        gbc.setState(0xb5b6, 0x19e0, 0x22c0, 0x6d9f, 0x2f89, 0x9fc4, 0x0, 0x1);
        gbc.writeMem(0xb5b6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x19e0, gbc.sp());
        EXPECT(0xb5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b6));
        EXPECT(0x27, gbc.readMem(0xb5b7));
        // CB 27 021A
        gbc.setState(0x28d8, 0x6349, 0x2fb0, 0x3e24, 0x3101, 0x9512, 0x0, 0x0);
        gbc.writeMem(0x28d8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6349, gbc.sp());
        EXPECT(0x28da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 021B
        gbc.setState(0xe9f, 0x2740, 0xc7c0, 0x8c34, 0xa3b3, 0xc7d2, 0x0, 0x0);
        gbc.writeMem(0xe9f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2740, gbc.sp());
        EXPECT(0xea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 021C
        gbc.setState(0xd1df, 0xd317, 0x2290, 0xd55f, 0xda40, 0x69bd, 0x1, 0x1);
        gbc.writeMem(0xd1df, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd317, gbc.sp());
        EXPECT(0xd1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1df));
        EXPECT(0x27, gbc.readMem(0xd1e0));
        // CB 27 021D
        gbc.setState(0xc075, 0x40a2, 0x7770, 0xd7be, 0xa558, 0x92d1, 0x1, 0x0);
        gbc.writeMem(0xc075, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x40a2, gbc.sp());
        EXPECT(0xc077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc075));
        EXPECT(0x27, gbc.readMem(0xc076));
        // CB 27 021E
        gbc.setState(0x4e5d, 0x9575, 0x8520, 0x7895, 0x2ea3, 0xa106, 0x0, 0x1);
        gbc.writeMem(0x4e5d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9575, gbc.sp());
        EXPECT(0x4e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 021F
        gbc.setState(0x65c1, 0xe16f, 0xf2b0, 0x3068, 0x9534, 0xc94f, 0x1, 0x1);
        gbc.writeMem(0x65c1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe16f, gbc.sp());
        EXPECT(0x65c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0220
        gbc.setState(0x6443, 0x82a4, 0x2a70, 0xf119, 0xc17e, 0xabbd, 0x0, 0x0);
        gbc.writeMem(0x6443, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x82a4, gbc.sp());
        EXPECT(0x6445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0221
        gbc.setState(0xbf18, 0xc89e, 0xf0a0, 0xbe79, 0x5b66, 0xa006, 0x0, 0x0);
        gbc.writeMem(0xbf18, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc89e, gbc.sp());
        EXPECT(0xbf1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf18));
        EXPECT(0x27, gbc.readMem(0xbf19));
        // CB 27 0222
        gbc.setState(0xb410, 0x55db, 0xe400, 0x4026, 0xd05d, 0x3565, 0x1, 0x1);
        gbc.writeMem(0xb410, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x55db, gbc.sp());
        EXPECT(0xb412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb410));
        EXPECT(0x27, gbc.readMem(0xb411));
        // CB 27 0223
        gbc.setState(0x40fe, 0xc5ed, 0x4f70, 0x6d91, 0x9426, 0x3a75, 0x1, 0x1);
        gbc.writeMem(0x40fe, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc5ed, gbc.sp());
        EXPECT(0x4100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0224
        gbc.setState(0x38be, 0xab5, 0xb7d0, 0xfc7f, 0x28e4, 0x39e1, 0x0, 0x0);
        gbc.writeMem(0x38be, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xab5, gbc.sp());
        EXPECT(0x38c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0225
        gbc.setState(0xb357, 0xff19, 0x8ee0, 0x6a85, 0x7791, 0xc4f6, 0x0, 0x0);
        gbc.writeMem(0xb357, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xff19, gbc.sp());
        EXPECT(0xb359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb357));
        EXPECT(0x27, gbc.readMem(0xb358));
        // CB 27 0226
        gbc.setState(0x1e5f, 0x5b5a, 0x4bf0, 0xf177, 0xa62c, 0x544, 0x0, 0x0);
        gbc.writeMem(0x1e5f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5b5a, gbc.sp());
        EXPECT(0x1e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0227
        gbc.setState(0xcf34, 0xa51f, 0xcff0, 0xcf18, 0xaffa, 0xe6ef, 0x0, 0x1);
        gbc.writeMem(0xcf34, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa51f, gbc.sp());
        EXPECT(0xcf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf34));
        EXPECT(0x27, gbc.readMem(0xcf35));
        // CB 27 0228
        gbc.setState(0xba4a, 0x1eab, 0x5770, 0x243f, 0xf9b7, 0x274a, 0x0, 0x1);
        gbc.writeMem(0xba4a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1eab, gbc.sp());
        EXPECT(0xba4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba4a));
        EXPECT(0x27, gbc.readMem(0xba4b));
        // CB 27 0229
        gbc.setState(0x2cad, 0x95ba, 0x12a0, 0x5e0d, 0x4b21, 0x9c13, 0x1, 0x0);
        gbc.writeMem(0x2cad, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x95ba, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 022A
        gbc.setState(0xbf53, 0x3db3, 0x2140, 0x97f5, 0x4ad3, 0x7b6a, 0x0, 0x1);
        gbc.writeMem(0xbf53, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3db3, gbc.sp());
        EXPECT(0xbf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf53));
        EXPECT(0x27, gbc.readMem(0xbf54));
        // CB 27 022B
        gbc.setState(0x762, 0x8f7c, 0x3610, 0x9e5b, 0xc114, 0x191d, 0x1, 0x0);
        gbc.writeMem(0x762, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8f7c, gbc.sp());
        EXPECT(0x764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 022C
        gbc.setState(0x9e7e, 0xe461, 0x5200, 0xbd5c, 0x27c5, 0xc18f, 0x0, 0x0);
        gbc.writeMem(0x9e7e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe461, gbc.sp());
        EXPECT(0x9e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7e));
        EXPECT(0x27, gbc.readMem(0x9e7f));
        // CB 27 022D
        gbc.setState(0x62f, 0xa35a, 0x5270, 0xd669, 0xa0cd, 0x6931, 0x0, 0x0);
        gbc.writeMem(0x62f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa35a, gbc.sp());
        EXPECT(0x631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 022E
        gbc.setState(0x8ef8, 0x6a22, 0x2d70, 0x1de, 0xb40c, 0x3068, 0x1, 0x1);
        gbc.writeMem(0x8ef8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6a22, gbc.sp());
        EXPECT(0x8efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef8));
        EXPECT(0x27, gbc.readMem(0x8ef9));
        // CB 27 022F
        gbc.setState(0x121e, 0xba75, 0xe790, 0x6925, 0x47ab, 0x62d7, 0x1, 0x1);
        gbc.writeMem(0x121e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xba75, gbc.sp());
        EXPECT(0x1220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0231
        gbc.setState(0xbdc3, 0x1bc7, 0x2880, 0x8126, 0x2ea6, 0x9f4e, 0x0, 0x0);
        gbc.writeMem(0xbdc3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1bc7, gbc.sp());
        EXPECT(0xbdc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc3));
        EXPECT(0x27, gbc.readMem(0xbdc4));
        // CB 27 0232
        gbc.setState(0x9d1b, 0x4df6, 0xe010, 0x2b03, 0xa1e5, 0xb5ab, 0x0, 0x1);
        gbc.writeMem(0x9d1b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4df6, gbc.sp());
        EXPECT(0x9d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1b));
        EXPECT(0x27, gbc.readMem(0x9d1c));
        // CB 27 0233
        gbc.setState(0x1b95, 0x52db, 0xe440, 0xc225, 0xf276, 0x3a77, 0x1, 0x1);
        gbc.writeMem(0x1b95, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x52db, gbc.sp());
        EXPECT(0x1b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0234
        gbc.setState(0xa6b9, 0x29e5, 0x7130, 0x241e, 0x6492, 0xb914, 0x0, 0x0);
        gbc.writeMem(0xa6b9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x29e5, gbc.sp());
        EXPECT(0xa6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b9));
        EXPECT(0x27, gbc.readMem(0xa6ba));
        // CB 27 0236
        gbc.setState(0x8d2c, 0x5ba8, 0xf7f0, 0xd574, 0x28bf, 0xed4, 0x1, 0x1);
        gbc.writeMem(0x8d2c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5ba8, gbc.sp());
        EXPECT(0x8d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d2c));
        EXPECT(0x27, gbc.readMem(0x8d2d));
        // CB 27 0237
        gbc.setState(0xd811, 0xc185, 0xf660, 0x3a51, 0xd3a4, 0x9464, 0x1, 0x1);
        gbc.writeMem(0xd811, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc185, gbc.sp());
        EXPECT(0xd813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd811));
        EXPECT(0x27, gbc.readMem(0xd812));
        // CB 27 0238
        gbc.setState(0x1763, 0xaf09, 0xf360, 0x5919, 0xffb8, 0x4321, 0x1, 0x1);
        gbc.writeMem(0x1763, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xaf09, gbc.sp());
        EXPECT(0x1765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0239
        gbc.setState(0xc13a, 0xb206, 0x25a0, 0xc23d, 0x5ca, 0x8aab, 0x1, 0x0);
        gbc.writeMem(0xc13a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb206, gbc.sp());
        EXPECT(0xc13c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc13a));
        EXPECT(0x27, gbc.readMem(0xc13b));
        // CB 27 023A
        gbc.setState(0xec51, 0xc8e2, 0xd120, 0xfdc3, 0x664d, 0x3706, 0x1, 0x0);
        gbc.writeMem(0xec51, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc8e2, gbc.sp());
        EXPECT(0xec53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec51));
        EXPECT(0x27, gbc.readMem(0xec52));
        // CB 27 023B
        gbc.setState(0xe401, 0xde01, 0x1eb0, 0x424f, 0x3f73, 0xb1e7, 0x1, 0x0);
        gbc.writeMem(0xe401, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xde01, gbc.sp());
        EXPECT(0xe403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe401));
        EXPECT(0x27, gbc.readMem(0xe402));
        // CB 27 023C
        gbc.setState(0x43dd, 0x636f, 0xb150, 0x6981, 0x7075, 0xbe2a, 0x0, 0x0);
        gbc.writeMem(0x43dd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x636f, gbc.sp());
        EXPECT(0x43df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 023D
        gbc.setState(0xa4be, 0x2ffa, 0x8660, 0x6b80, 0xa25a, 0xb237, 0x1, 0x0);
        gbc.writeMem(0xa4be, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2ffa, gbc.sp());
        EXPECT(0xa4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4be));
        EXPECT(0x27, gbc.readMem(0xa4bf));
        // CB 27 023E
        gbc.setState(0xac72, 0x49ee, 0x66a0, 0xa16, 0x57e9, 0x548d, 0x0, 0x0);
        gbc.writeMem(0xac72, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x49ee, gbc.sp());
        EXPECT(0xac74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac72));
        EXPECT(0x27, gbc.readMem(0xac73));
        // CB 27 023F
        gbc.setState(0xa8c, 0xf61e, 0x2290, 0x2704, 0xfd6d, 0x528e, 0x1, 0x1);
        gbc.writeMem(0xa8c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf61e, gbc.sp());
        EXPECT(0xa8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0240
        gbc.setState(0xdb91, 0x73b6, 0x8d00, 0x3552, 0x783d, 0x83e, 0x0, 0x0);
        gbc.writeMem(0xdb91, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x73b6, gbc.sp());
        EXPECT(0xdb93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb91));
        EXPECT(0x27, gbc.readMem(0xdb92));
        // CB 27 0241
        gbc.setState(0x3278, 0xaee3, 0xcfe0, 0x41d3, 0x1641, 0x1baf, 0x0, 0x0);
        gbc.writeMem(0x3278, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaee3, gbc.sp());
        EXPECT(0x327a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0242
        gbc.setState(0x2f28, 0x9fc6, 0x1030, 0x5b4d, 0x4f7d, 0x3c62, 0x1, 0x1);
        gbc.writeMem(0x2f28, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9fc6, gbc.sp());
        EXPECT(0x2f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0243
        gbc.setState(0x3ce1, 0x7eed, 0x3570, 0x6d8f, 0xd3de, 0xaf03, 0x0, 0x1);
        gbc.writeMem(0x3ce1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7eed, gbc.sp());
        EXPECT(0x3ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0244
        gbc.setState(0x46f6, 0xb510, 0x69a0, 0x740a, 0xb453, 0xd303, 0x1, 0x1);
        gbc.writeMem(0x46f6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb510, gbc.sp());
        EXPECT(0x46f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0245
        gbc.setState(0x2ce7, 0x90d, 0x210, 0xf418, 0x6572, 0x5178, 0x0, 0x1);
        gbc.writeMem(0x2ce7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x90d, gbc.sp());
        EXPECT(0x2ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0246
        gbc.setState(0x8a23, 0x14ec, 0xc500, 0x3a24, 0x81e9, 0xd4ac, 0x1, 0x0);
        gbc.writeMem(0x8a23, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x14ec, gbc.sp());
        EXPECT(0x8a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a23));
        EXPECT(0x27, gbc.readMem(0x8a24));
        // CB 27 0247
        gbc.setState(0x6f26, 0x654e, 0x9f80, 0xef4b, 0x4723, 0x32df, 0x1, 0x0);
        gbc.writeMem(0x6f26, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x654e, gbc.sp());
        EXPECT(0x6f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0248
        gbc.setState(0x5fcd, 0x3943, 0xd050, 0xbf99, 0x4af4, 0xd58c, 0x1, 0x1);
        gbc.writeMem(0x5fcd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3943, gbc.sp());
        EXPECT(0x5fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0249
        gbc.setState(0x1272, 0xae0f, 0xbf20, 0x91c5, 0x8035, 0xf723, 0x1, 0x0);
        gbc.writeMem(0x1272, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xae0f, gbc.sp());
        EXPECT(0x1274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 024A
        gbc.setState(0x888a, 0x866, 0x3ef0, 0x5974, 0x2c9c, 0xf963, 0x1, 0x0);
        gbc.writeMem(0x888a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x866, gbc.sp());
        EXPECT(0x888c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888a));
        EXPECT(0x27, gbc.readMem(0x888b));
        // CB 27 024B
        gbc.setState(0xc2e8, 0x7362, 0x78e0, 0xeee4, 0xc3ef, 0x3e34, 0x0, 0x1);
        gbc.writeMem(0xc2e8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7362, gbc.sp());
        EXPECT(0xc2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e8));
        EXPECT(0x27, gbc.readMem(0xc2e9));
        // CB 27 024C
        gbc.setState(0x80ea, 0xe7d, 0x1cf0, 0xa072, 0x6240, 0xdfb2, 0x1, 0x1);
        gbc.writeMem(0x80ea, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe7d, gbc.sp());
        EXPECT(0x80ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ea));
        EXPECT(0x27, gbc.readMem(0x80eb));
        // CB 27 024E
        gbc.setState(0xaa0f, 0x91f3, 0xd140, 0xcc4c, 0x1aa5, 0xa5af, 0x1, 0x1);
        gbc.writeMem(0xaa0f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x91f3, gbc.sp());
        EXPECT(0xaa11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0f));
        EXPECT(0x27, gbc.readMem(0xaa10));
        // CB 27 024F
        gbc.setState(0xd2c7, 0x66bf, 0xbfd0, 0x68a1, 0x8bc9, 0x33cb, 0x1, 0x0);
        gbc.writeMem(0xd2c7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x66bf, gbc.sp());
        EXPECT(0xd2c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c7));
        EXPECT(0x27, gbc.readMem(0xd2c8));
        // CB 27 0250
        gbc.setState(0x2267, 0xd2f1, 0x7a60, 0x87e8, 0xb118, 0x947d, 0x0, 0x1);
        gbc.writeMem(0x2267, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd2f1, gbc.sp());
        EXPECT(0x2269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0251
        gbc.setState(0xe328, 0x1f9c, 0xd570, 0xa15e, 0xfc79, 0xd403, 0x0, 0x0);
        gbc.writeMem(0xe328, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1f9c, gbc.sp());
        EXPECT(0xe32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe328));
        EXPECT(0x27, gbc.readMem(0xe329));
        // CB 27 0252
        gbc.setState(0xe8e2, 0x9e48, 0x34a0, 0x9e0, 0x6260, 0x4b40, 0x0, 0x0);
        gbc.writeMem(0xe8e2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9e48, gbc.sp());
        EXPECT(0xe8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e2));
        EXPECT(0x27, gbc.readMem(0xe8e3));
        // CB 27 0253
        gbc.setState(0xe200, 0xf3a8, 0x1be0, 0x4259, 0x16ea, 0x7830, 0x1, 0x1);
        gbc.writeMem(0xe200, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf3a8, gbc.sp());
        EXPECT(0xe202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe200));
        EXPECT(0x27, gbc.readMem(0xe201));
        // CB 27 0254
        gbc.setState(0xc9ce, 0xa1ac, 0x890, 0x60c8, 0x565e, 0x2e33, 0x0, 0x0);
        gbc.writeMem(0xc9ce, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa1ac, gbc.sp());
        EXPECT(0xc9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ce));
        EXPECT(0x27, gbc.readMem(0xc9cf));
        // CB 27 0255
        gbc.setState(0xa700, 0x61d6, 0xd30, 0x430a, 0x12c5, 0xaa42, 0x1, 0x1);
        gbc.writeMem(0xa700, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x61d6, gbc.sp());
        EXPECT(0xa702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa700));
        EXPECT(0x27, gbc.readMem(0xa701));
        // CB 27 0256
        gbc.setState(0xbe13, 0x5423, 0x4000, 0x1cb6, 0x926d, 0x7963, 0x0, 0x1);
        gbc.writeMem(0xbe13, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5423, gbc.sp());
        EXPECT(0xbe15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe13));
        EXPECT(0x27, gbc.readMem(0xbe14));
        // CB 27 0257
        gbc.setState(0xd37, 0x7673, 0x9670, 0xc069, 0x7a61, 0xc63c, 0x1, 0x0);
        gbc.writeMem(0xd37, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7673, gbc.sp());
        EXPECT(0xd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0258
        gbc.setState(0x7ab4, 0x89b9, 0x5d10, 0xa131, 0x665, 0x647a, 0x0, 0x1);
        gbc.writeMem(0x7ab4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x89b9, gbc.sp());
        EXPECT(0x7ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0259
        gbc.setState(0xd3da, 0xf4df, 0xa650, 0x807c, 0xf14b, 0xb01, 0x0, 0x0);
        gbc.writeMem(0xd3da, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf4df, gbc.sp());
        EXPECT(0xd3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3da));
        EXPECT(0x27, gbc.readMem(0xd3db));
        // CB 27 025A
        gbc.setState(0x79c8, 0x6505, 0x43b0, 0xc2d6, 0x8d05, 0xb168, 0x0, 0x1);
        gbc.writeMem(0x79c8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6505, gbc.sp());
        EXPECT(0x79ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 025B
        gbc.setState(0x89f5, 0x1634, 0x12b0, 0xfa6f, 0xe9dc, 0x396f, 0x1, 0x1);
        gbc.writeMem(0x89f5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1634, gbc.sp());
        EXPECT(0x89f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f5));
        EXPECT(0x27, gbc.readMem(0x89f6));
        // CB 27 025C
        gbc.setState(0x8934, 0x80a6, 0x30e0, 0x7497, 0x756f, 0xf22, 0x1, 0x1);
        gbc.writeMem(0x8934, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x80a6, gbc.sp());
        EXPECT(0x8936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8934));
        EXPECT(0x27, gbc.readMem(0x8935));
        // CB 27 025D
        gbc.setState(0xba0e, 0x309e, 0x4fa0, 0xccaa, 0x7f72, 0x975e, 0x0, 0x1);
        gbc.writeMem(0xba0e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x309e, gbc.sp());
        EXPECT(0xba10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0e));
        EXPECT(0x27, gbc.readMem(0xba0f));
        // CB 27 025E
        gbc.setState(0x6b45, 0x8d66, 0x850, 0x417f, 0xc5a0, 0x3d07, 0x1, 0x0);
        gbc.writeMem(0x6b45, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8d66, gbc.sp());
        EXPECT(0x6b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 025F
        gbc.setState(0x387f, 0x8774, 0xec00, 0x4e00, 0x6c1, 0x5640, 0x1, 0x0);
        gbc.writeMem(0x387f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8774, gbc.sp());
        EXPECT(0x3881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0260
        gbc.setState(0x11e3, 0xea41, 0xcae0, 0x3fb1, 0x4bb1, 0xd1b, 0x0, 0x1);
        gbc.writeMem(0x11e3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xea41, gbc.sp());
        EXPECT(0x11e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0261
        gbc.setState(0xda42, 0xe0b4, 0xcbd0, 0x7223, 0x6a88, 0x6de1, 0x0, 0x0);
        gbc.writeMem(0xda42, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe0b4, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda42));
        EXPECT(0x27, gbc.readMem(0xda43));
        // CB 27 0262
        gbc.setState(0xc0cd, 0xb7f5, 0xa0a0, 0x3267, 0x721f, 0xe118, 0x0, 0x0);
        gbc.writeMem(0xc0cd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb7f5, gbc.sp());
        EXPECT(0xc0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0cd));
        EXPECT(0x27, gbc.readMem(0xc0ce));
        // CB 27 0264
        gbc.setState(0x26df, 0x30bf, 0x920, 0x7372, 0xd3b0, 0xdd0d, 0x0, 0x1);
        gbc.writeMem(0x26df, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x30bf, gbc.sp());
        EXPECT(0x26e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0265
        gbc.setState(0x88b0, 0x35a0, 0x6ee0, 0x556e, 0x2d4a, 0x2453, 0x1, 0x1);
        gbc.writeMem(0x88b0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x35a0, gbc.sp());
        EXPECT(0x88b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b0));
        EXPECT(0x27, gbc.readMem(0x88b1));
        // CB 27 0266
        gbc.setState(0xaace, 0xdc4f, 0x32f0, 0x7a4e, 0xe3e8, 0x965f, 0x1, 0x1);
        gbc.writeMem(0xaace, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdc4f, gbc.sp());
        EXPECT(0xaad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaace));
        EXPECT(0x27, gbc.readMem(0xaacf));
        // CB 27 0267
        gbc.setState(0x2e69, 0xfff0, 0x8a60, 0x93c6, 0xbdad, 0xbdb3, 0x1, 0x1);
        gbc.writeMem(0x2e69, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfff0, gbc.sp());
        EXPECT(0x2e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0268
        gbc.setState(0x8f2a, 0x9908, 0x1ce0, 0xe04c, 0xe2b8, 0x6c6c, 0x0, 0x0);
        gbc.writeMem(0x8f2a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9908, gbc.sp());
        EXPECT(0x8f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2a));
        EXPECT(0x27, gbc.readMem(0x8f2b));
        // CB 27 0269
        gbc.setState(0xacfd, 0x5f33, 0xf10, 0xd42e, 0xc493, 0xc67e, 0x1, 0x0);
        gbc.writeMem(0xacfd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5f33, gbc.sp());
        EXPECT(0xacff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfd));
        EXPECT(0x27, gbc.readMem(0xacfe));
        // CB 27 026A
        gbc.setState(0x14f5, 0x7be4, 0x1100, 0x3efb, 0xc4df, 0xada5, 0x0, 0x1);
        gbc.writeMem(0x14f5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7be4, gbc.sp());
        EXPECT(0x14f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 026C
        gbc.setState(0xed81, 0x93a6, 0x4840, 0x5626, 0x28bd, 0x8fbd, 0x1, 0x0);
        gbc.writeMem(0xed81, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x93a6, gbc.sp());
        EXPECT(0xed83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed81));
        EXPECT(0x27, gbc.readMem(0xed82));
        // CB 27 026D
        gbc.setState(0xab06, 0x74db, 0xbd50, 0xe1e, 0x6c2, 0x9781, 0x1, 0x0);
        gbc.writeMem(0xab06, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x74db, gbc.sp());
        EXPECT(0xab08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab06));
        EXPECT(0x27, gbc.readMem(0xab07));
        // CB 27 026E
        gbc.setState(0x2693, 0x282c, 0x22f0, 0x10c0, 0x335f, 0xd0b6, 0x1, 0x1);
        gbc.writeMem(0x2693, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x282c, gbc.sp());
        EXPECT(0x2695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 026F
        gbc.setState(0x6e11, 0xf04c, 0x5610, 0xe9f5, 0x3809, 0x3726, 0x0, 0x0);
        gbc.writeMem(0x6e11, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf04c, gbc.sp());
        EXPECT(0x6e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0270
        gbc.setState(0xe33f, 0xeeb, 0xdb10, 0x15b1, 0x2cbf, 0xdbe2, 0x1, 0x0);
        gbc.writeMem(0xe33f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xeeb, gbc.sp());
        EXPECT(0xe341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33f));
        EXPECT(0x27, gbc.readMem(0xe340));
        // CB 27 0271
        gbc.setState(0x56e, 0xc808, 0x4b30, 0x82, 0xcda7, 0xdf94, 0x1, 0x1);
        gbc.writeMem(0x56e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc808, gbc.sp());
        EXPECT(0x570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0272
        gbc.setState(0x981b, 0x7210, 0x42d0, 0x3f68, 0x5656, 0x38de, 0x1, 0x0);
        gbc.writeMem(0x981b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7210, gbc.sp());
        EXPECT(0x981d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981b));
        EXPECT(0x27, gbc.readMem(0x981c));
        // CB 27 0273
        gbc.setState(0x5f12, 0x5bf2, 0xd8b0, 0xd6d2, 0x7cab, 0x1cd, 0x1, 0x1);
        gbc.writeMem(0x5f12, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5bf2, gbc.sp());
        EXPECT(0x5f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0274
        gbc.setState(0x2825, 0xbb65, 0xd560, 0x99b8, 0x5dc, 0x13b9, 0x0, 0x1);
        gbc.writeMem(0x2825, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbb65, gbc.sp());
        EXPECT(0x2827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0276
        gbc.setState(0x7ba9, 0xd1b3, 0x88a0, 0x7f83, 0x1654, 0x384d, 0x0, 0x0);
        gbc.writeMem(0x7ba9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd1b3, gbc.sp());
        EXPECT(0x7bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0277
        gbc.setState(0x3fea, 0xad1c, 0x1cc0, 0x6f5d, 0x6366, 0x718f, 0x0, 0x1);
        gbc.writeMem(0x3fea, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xad1c, gbc.sp());
        EXPECT(0x3fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0279
        gbc.setState(0xbd2d, 0x6513, 0xca50, 0x6493, 0xf86c, 0x47ad, 0x0, 0x0);
        gbc.writeMem(0xbd2d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6513, gbc.sp());
        EXPECT(0xbd2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2d));
        EXPECT(0x27, gbc.readMem(0xbd2e));
        // CB 27 027A
        gbc.setState(0x1e09, 0x80c8, 0xabd0, 0x608f, 0xcce, 0xa8e6, 0x0, 0x1);
        gbc.writeMem(0x1e09, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x80c8, gbc.sp());
        EXPECT(0x1e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 027B
        gbc.setState(0x63bf, 0x2f49, 0x9db0, 0xd982, 0x22d8, 0xc4aa, 0x1, 0x1);
        gbc.writeMem(0x63bf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2f49, gbc.sp());
        EXPECT(0x63c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 027C
        gbc.setState(0x3594, 0xa3b9, 0xc0a0, 0x71c6, 0xd3cc, 0x693b, 0x1, 0x0);
        gbc.writeMem(0x3594, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa3b9, gbc.sp());
        EXPECT(0x3596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 027D
        gbc.setState(0xb554, 0x6eff, 0x3d10, 0xcf99, 0x154e, 0x2009, 0x0, 0x1);
        gbc.writeMem(0xb554, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6eff, gbc.sp());
        EXPECT(0xb556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb554));
        EXPECT(0x27, gbc.readMem(0xb555));
        // CB 27 027E
        gbc.setState(0x6cbc, 0x9d6a, 0xdb60, 0xdb8, 0x2446, 0x7692, 0x0, 0x1);
        gbc.writeMem(0x6cbc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9d6a, gbc.sp());
        EXPECT(0x6cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 027F
        gbc.setState(0xd913, 0x775f, 0xefa0, 0x271a, 0xe6fe, 0x85cd, 0x1, 0x1);
        gbc.writeMem(0xd913, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x775f, gbc.sp());
        EXPECT(0xd915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd913));
        EXPECT(0x27, gbc.readMem(0xd914));
        // CB 27 0280
        gbc.setState(0x8f4, 0xee2a, 0x90, 0xc7f1, 0x4370, 0x7b35, 0x1, 0x0);
        gbc.writeMem(0x8f4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xee2a, gbc.sp());
        EXPECT(0x8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0281
        gbc.setState(0xa23, 0x4526, 0xd1f0, 0x19e6, 0x6a9, 0x286a, 0x1, 0x0);
        gbc.writeMem(0xa23, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4526, gbc.sp());
        EXPECT(0xa25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0282
        gbc.setState(0x233f, 0x8ed7, 0x8800, 0x6573, 0x8e41, 0xa08, 0x1, 0x0);
        gbc.writeMem(0x233f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8ed7, gbc.sp());
        EXPECT(0x2341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0283
        gbc.setState(0x42e1, 0x3bf8, 0x9580, 0x249a, 0x25b2, 0xbec4, 0x0, 0x0);
        gbc.writeMem(0x42e1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3bf8, gbc.sp());
        EXPECT(0x42e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0284
        gbc.setState(0x250a, 0xc746, 0x40c0, 0x1324, 0x245, 0x5d0e, 0x0, 0x1);
        gbc.writeMem(0x250a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc746, gbc.sp());
        EXPECT(0x250c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0285
        gbc.setState(0x1e32, 0x92fd, 0xbe90, 0xb443, 0x7797, 0xa250, 0x0, 0x1);
        gbc.writeMem(0x1e32, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x92fd, gbc.sp());
        EXPECT(0x1e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0286
        gbc.setState(0xaec, 0x39b7, 0x2300, 0x610f, 0x778f, 0x93a1, 0x0, 0x1);
        gbc.writeMem(0xaec, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x39b7, gbc.sp());
        EXPECT(0xaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0287
        gbc.setState(0xb522, 0xb10c, 0xd6c0, 0x5ff, 0x179e, 0x4cb8, 0x1, 0x1);
        gbc.writeMem(0xb522, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb10c, gbc.sp());
        EXPECT(0xb524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb522));
        EXPECT(0x27, gbc.readMem(0xb523));
        // CB 27 0288
        gbc.setState(0xd5b8, 0xa765, 0xe480, 0x5b0, 0x7051, 0x4dfa, 0x0, 0x0);
        gbc.writeMem(0xd5b8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa765, gbc.sp());
        EXPECT(0xd5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b8));
        EXPECT(0x27, gbc.readMem(0xd5b9));
        // CB 27 0289
        gbc.setState(0x644d, 0x6a70, 0x78c0, 0x4da4, 0x3179, 0x2a11, 0x0, 0x1);
        gbc.writeMem(0x644d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6a70, gbc.sp());
        EXPECT(0x644f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 028A
        gbc.setState(0xbcb3, 0xaa31, 0xbe60, 0x96bd, 0x8cc0, 0x41aa, 0x0, 0x0);
        gbc.writeMem(0xbcb3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xaa31, gbc.sp());
        EXPECT(0xbcb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb3));
        EXPECT(0x27, gbc.readMem(0xbcb4));
        // CB 27 028B
        gbc.setState(0xdaff, 0xa9f9, 0xb4f0, 0x779c, 0x5cff, 0xf325, 0x1, 0x0);
        gbc.writeMem(0xdaff, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa9f9, gbc.sp());
        EXPECT(0xdb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaff));
        EXPECT(0x27, gbc.readMem(0xdb00));
        // CB 27 028C
        gbc.setState(0x748f, 0x45c9, 0x7630, 0x7ad1, 0x6d82, 0xe1a3, 0x0, 0x1);
        gbc.writeMem(0x748f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x45c9, gbc.sp());
        EXPECT(0x7491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 028D
        gbc.setState(0x8c39, 0xfbf0, 0x4210, 0x81e8, 0xcaaf, 0x39af, 0x0, 0x0);
        gbc.writeMem(0x8c39, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfbf0, gbc.sp());
        EXPECT(0x8c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c39));
        EXPECT(0x27, gbc.readMem(0x8c3a));
        // CB 27 028E
        gbc.setState(0x6ecc, 0x9698, 0x4f20, 0x4525, 0xcfb2, 0x2694, 0x0, 0x0);
        gbc.writeMem(0x6ecc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9698, gbc.sp());
        EXPECT(0x6ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 028F
        gbc.setState(0xefd4, 0xf1b6, 0xa0b0, 0xadb1, 0x91a4, 0xe620, 0x0, 0x0);
        gbc.writeMem(0xefd4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf1b6, gbc.sp());
        EXPECT(0xefd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd4));
        EXPECT(0x27, gbc.readMem(0xefd5));
        // CB 27 0290
        gbc.setState(0x8aa9, 0x8727, 0x52e0, 0xf00f, 0x565d, 0xb936, 0x0, 0x0);
        gbc.writeMem(0x8aa9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8727, gbc.sp());
        EXPECT(0x8aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa9));
        EXPECT(0x27, gbc.readMem(0x8aaa));
        // CB 27 0291
        gbc.setState(0x452, 0x48cd, 0xdb0, 0xc1da, 0xf3f1, 0x6954, 0x1, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x48cd, gbc.sp());
        EXPECT(0x454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0292
        gbc.setState(0x5acd, 0xe821, 0x1fc0, 0xacc8, 0xfb2d, 0x44e6, 0x0, 0x0);
        gbc.writeMem(0x5acd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe821, gbc.sp());
        EXPECT(0x5acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0293
        gbc.setState(0xdb69, 0xa436, 0x7e80, 0x5da2, 0x20be, 0xc0c0, 0x0, 0x1);
        gbc.writeMem(0xdb69, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa436, gbc.sp());
        EXPECT(0xdb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb69));
        EXPECT(0x27, gbc.readMem(0xdb6a));
        // CB 27 0294
        gbc.setState(0x5aff, 0xa66c, 0xf2f0, 0xdbfe, 0x138c, 0x1f49, 0x0, 0x0);
        gbc.writeMem(0x5aff, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa66c, gbc.sp());
        EXPECT(0x5b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0295
        gbc.setState(0xbf9f, 0xbc17, 0xf270, 0xfa31, 0xb5f2, 0x684b, 0x1, 0x1);
        gbc.writeMem(0xbf9f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbc17, gbc.sp());
        EXPECT(0xbfa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf9f));
        EXPECT(0x27, gbc.readMem(0xbfa0));
        // CB 27 0296
        gbc.setState(0x75e, 0x3676, 0xd690, 0xf04e, 0xe473, 0x3e96, 0x0, 0x0);
        gbc.writeMem(0x75e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3676, gbc.sp());
        EXPECT(0x760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0297
        gbc.setState(0x6d59, 0xe5b5, 0xc200, 0x50cd, 0x3981, 0xaedb, 0x1, 0x0);
        gbc.writeMem(0x6d59, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe5b5, gbc.sp());
        EXPECT(0x6d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0298
        gbc.setState(0xc9a7, 0x9f5, 0x4130, 0xa8b6, 0x87d3, 0x1d46, 0x1, 0x1);
        gbc.writeMem(0xc9a7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9f5, gbc.sp());
        EXPECT(0xc9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a7));
        EXPECT(0x27, gbc.readMem(0xc9a8));
        // CB 27 0299
        gbc.setState(0x182f, 0x6f1c, 0x6170, 0x2e1b, 0x2b7b, 0x8871, 0x0, 0x0);
        gbc.writeMem(0x182f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6f1c, gbc.sp());
        EXPECT(0x1831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 029A
        gbc.setState(0x831b, 0x6f35, 0xd4b0, 0xa560, 0x2717, 0xd077, 0x1, 0x1);
        gbc.writeMem(0x831b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6f35, gbc.sp());
        EXPECT(0x831d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831b));
        EXPECT(0x27, gbc.readMem(0x831c));
        // CB 27 029B
        gbc.setState(0xd10b, 0xe415, 0xd800, 0x2073, 0xa109, 0x24b5, 0x0, 0x0);
        gbc.writeMem(0xd10b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe415, gbc.sp());
        EXPECT(0xd10d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10b));
        EXPECT(0x27, gbc.readMem(0xd10c));
        // CB 27 029C
        gbc.setState(0x18a4, 0x13d8, 0x1b50, 0x1b01, 0x13cb, 0x7be1, 0x0, 0x0);
        gbc.writeMem(0x18a4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x13d8, gbc.sp());
        EXPECT(0x18a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 029D
        gbc.setState(0x4367, 0xe15, 0x1260, 0xfbdd, 0x9eb6, 0x7ba3, 0x0, 0x1);
        gbc.writeMem(0x4367, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe15, gbc.sp());
        EXPECT(0x4369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 029E
        gbc.setState(0xd0a0, 0x19ef, 0x7780, 0x9d87, 0x29f5, 0x9013, 0x1, 0x0);
        gbc.writeMem(0xd0a0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x19ef, gbc.sp());
        EXPECT(0xd0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a0));
        EXPECT(0x27, gbc.readMem(0xd0a1));
        // CB 27 029F
        gbc.setState(0x54cb, 0xc802, 0xedb0, 0x9675, 0xc907, 0xa8a9, 0x1, 0x1);
        gbc.writeMem(0x54cb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc802, gbc.sp());
        EXPECT(0x54cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02A0
        gbc.setState(0x6fb0, 0xaec8, 0xd7c0, 0xae68, 0x7050, 0xb17c, 0x0, 0x1);
        gbc.writeMem(0x6fb0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xaec8, gbc.sp());
        EXPECT(0x6fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02A1
        gbc.setState(0xeb7f, 0x459d, 0x3b70, 0x869, 0x1f16, 0xf76b, 0x0, 0x0);
        gbc.writeMem(0xeb7f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x459d, gbc.sp());
        EXPECT(0xeb81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7f));
        EXPECT(0x27, gbc.readMem(0xeb80));
        // CB 27 02A2
        gbc.setState(0x7f98, 0x8301, 0xab40, 0xfaed, 0x5acc, 0xf6da, 0x1, 0x1);
        gbc.writeMem(0x7f98, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8301, gbc.sp());
        EXPECT(0x7f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02A3
        gbc.setState(0xa149, 0x480d, 0x61b0, 0x5def, 0x7822, 0xb635, 0x1, 0x1);
        gbc.writeMem(0xa149, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x480d, gbc.sp());
        EXPECT(0xa14b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa149));
        EXPECT(0x27, gbc.readMem(0xa14a));
        // CB 27 02A4
        gbc.setState(0x910, 0xa558, 0x6860, 0xb596, 0x244, 0x1508, 0x0, 0x1);
        gbc.writeMem(0x910, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa558, gbc.sp());
        EXPECT(0x912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02A5
        gbc.setState(0x1002, 0x278f, 0x8220, 0x89a0, 0x82c2, 0x4106, 0x1, 0x1);
        gbc.writeMem(0x1002, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x278f, gbc.sp());
        EXPECT(0x1004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02A6
        gbc.setState(0xdb92, 0x2653, 0xf8b0, 0x5597, 0xb19f, 0x9ce0, 0x0, 0x0);
        gbc.writeMem(0xdb92, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2653, gbc.sp());
        EXPECT(0xdb94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb92));
        EXPECT(0x27, gbc.readMem(0xdb93));
        // CB 27 02A7
        gbc.setState(0x1ebc, 0x8daf, 0x3090, 0xfa58, 0x6147, 0x201, 0x0, 0x0);
        gbc.writeMem(0x1ebc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8daf, gbc.sp());
        EXPECT(0x1ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02A8
        gbc.setState(0xe78f, 0x8b65, 0x1a50, 0xd51d, 0x2be5, 0x4c32, 0x0, 0x0);
        gbc.writeMem(0xe78f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8b65, gbc.sp());
        EXPECT(0xe791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78f));
        EXPECT(0x27, gbc.readMem(0xe790));
        // CB 27 02A9
        gbc.setState(0x5757, 0x2501, 0xdc80, 0x779c, 0xd744, 0xa498, 0x1, 0x1);
        gbc.writeMem(0x5757, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2501, gbc.sp());
        EXPECT(0x5759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02AA
        gbc.setState(0xa4e5, 0x6a6b, 0xe6e0, 0xcdfc, 0x488a, 0xff76, 0x1, 0x0);
        gbc.writeMem(0xa4e5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6a6b, gbc.sp());
        EXPECT(0xa4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e5));
        EXPECT(0x27, gbc.readMem(0xa4e6));
        // CB 27 02AD
        gbc.setState(0x5370, 0x3257, 0x9c00, 0x9a9d, 0xd5f4, 0xfa20, 0x1, 0x0);
        gbc.writeMem(0x5370, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3257, gbc.sp());
        EXPECT(0x5372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02AE
        gbc.setState(0x151c, 0x868, 0xfe70, 0xae6a, 0xdbb5, 0xc086, 0x0, 0x1);
        gbc.writeMem(0x151c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x868, gbc.sp());
        EXPECT(0x151e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02AF
        gbc.setState(0x7b71, 0x657a, 0xca00, 0xf1ea, 0x870e, 0x62b3, 0x0, 0x1);
        gbc.writeMem(0x7b71, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x657a, gbc.sp());
        EXPECT(0x7b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02B0
        gbc.setState(0x5cb6, 0x630a, 0x4590, 0xa8cc, 0x208e, 0x4537, 0x1, 0x1);
        gbc.writeMem(0x5cb6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x630a, gbc.sp());
        EXPECT(0x5cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02B1
        gbc.setState(0x713c, 0xad6a, 0xe120, 0x7997, 0xd398, 0x99af, 0x0, 0x1);
        gbc.writeMem(0x713c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xad6a, gbc.sp());
        EXPECT(0x713e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02B2
        gbc.setState(0x991c, 0x68aa, 0x7530, 0xc695, 0x5920, 0x5cee, 0x1, 0x0);
        gbc.writeMem(0x991c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x68aa, gbc.sp());
        EXPECT(0x991e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991c));
        EXPECT(0x27, gbc.readMem(0x991d));
        // CB 27 02B3
        gbc.setState(0xc460, 0x8f84, 0x3a50, 0x71f8, 0x7596, 0x807b, 0x1, 0x1);
        gbc.writeMem(0xc460, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8f84, gbc.sp());
        EXPECT(0xc462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc460));
        EXPECT(0x27, gbc.readMem(0xc461));
        // CB 27 02B4
        gbc.setState(0x2ce0, 0xd6b4, 0x1030, 0x7a2e, 0xd057, 0x80bc, 0x1, 0x1);
        gbc.writeMem(0x2ce0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd6b4, gbc.sp());
        EXPECT(0x2ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02B5
        gbc.setState(0xea84, 0xe2b0, 0x64f0, 0xb265, 0xc115, 0x566a, 0x1, 0x1);
        gbc.writeMem(0xea84, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe2b0, gbc.sp());
        EXPECT(0xea86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea84));
        EXPECT(0x27, gbc.readMem(0xea85));
        // CB 27 02B6
        gbc.setState(0x2230, 0x7fc1, 0x4cb0, 0x5f13, 0x429c, 0x71bc, 0x1, 0x0);
        gbc.writeMem(0x2230, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7fc1, gbc.sp());
        EXPECT(0x2232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02B7
        gbc.setState(0xaf01, 0x9290, 0xb850, 0xe110, 0x9086, 0xcea2, 0x0, 0x1);
        gbc.writeMem(0xaf01, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9290, gbc.sp());
        EXPECT(0xaf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf01));
        EXPECT(0x27, gbc.readMem(0xaf02));
        // CB 27 02B8
        gbc.setState(0x456f, 0xb281, 0x6280, 0x3cf9, 0x6a7b, 0x2c29, 0x0, 0x0);
        gbc.writeMem(0x456f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb281, gbc.sp());
        EXPECT(0x4571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02B9
        gbc.setState(0xe8e0, 0x9adf, 0x1f0, 0x7c28, 0x4855, 0x7814, 0x0, 0x1);
        gbc.writeMem(0xe8e0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9adf, gbc.sp());
        EXPECT(0xe8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e0));
        EXPECT(0x27, gbc.readMem(0xe8e1));
        // CB 27 02BA
        gbc.setState(0x5115, 0x3db9, 0x46f0, 0x9e19, 0xd2f2, 0x2a08, 0x0, 0x1);
        gbc.writeMem(0x5115, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3db9, gbc.sp());
        EXPECT(0x5117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02BC
        gbc.setState(0x5a1a, 0xc560, 0xa8c0, 0x5f1d, 0x8479, 0xb96a, 0x0, 0x1);
        gbc.writeMem(0x5a1a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc560, gbc.sp());
        EXPECT(0x5a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02BD
        gbc.setState(0x8c6e, 0x68d8, 0x6320, 0x5c70, 0x3e48, 0xbe34, 0x1, 0x1);
        gbc.writeMem(0x8c6e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x68d8, gbc.sp());
        EXPECT(0x8c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6e));
        EXPECT(0x27, gbc.readMem(0x8c6f));
        // CB 27 02BE
        gbc.setState(0x8bba, 0xe8db, 0xdf60, 0x782c, 0x5147, 0xebd1, 0x0, 0x0);
        gbc.writeMem(0x8bba, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe8db, gbc.sp());
        EXPECT(0x8bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bba));
        EXPECT(0x27, gbc.readMem(0x8bbb));
        // CB 27 02BF
        gbc.setState(0x601e, 0x2453, 0xab40, 0x8130, 0x89f5, 0x63bc, 0x0, 0x0);
        gbc.writeMem(0x601e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2453, gbc.sp());
        EXPECT(0x6020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02C0
        gbc.setState(0xc896, 0x8aee, 0x1290, 0x160, 0x3647, 0xc27, 0x0, 0x0);
        gbc.writeMem(0xc896, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8aee, gbc.sp());
        EXPECT(0xc898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc896));
        EXPECT(0x27, gbc.readMem(0xc897));
        // CB 27 02C1
        gbc.setState(0x3a7f, 0x1ed3, 0x9a70, 0x516b, 0x6dcf, 0xa076, 0x0, 0x0);
        gbc.writeMem(0x3a7f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1ed3, gbc.sp());
        EXPECT(0x3a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02C2
        gbc.setState(0x3615, 0x7c86, 0xab70, 0x9113, 0xdf9, 0xf343, 0x0, 0x0);
        gbc.writeMem(0x3615, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7c86, gbc.sp());
        EXPECT(0x3617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02C3
        gbc.setState(0x63a9, 0x961d, 0xec50, 0x2382, 0xf614, 0x12ca, 0x1, 0x0);
        gbc.writeMem(0x63a9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x961d, gbc.sp());
        EXPECT(0x63ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02C4
        gbc.setState(0x2e6e, 0xcf25, 0x9570, 0xd37d, 0xc908, 0x3271, 0x1, 0x1);
        gbc.writeMem(0x2e6e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcf25, gbc.sp());
        EXPECT(0x2e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02C5
        gbc.setState(0xe855, 0xed1d, 0x94d0, 0xffc2, 0x28c7, 0x6242, 0x0, 0x0);
        gbc.writeMem(0xe855, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xed1d, gbc.sp());
        EXPECT(0xe857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe855));
        EXPECT(0x27, gbc.readMem(0xe856));
        // CB 27 02C7
        gbc.setState(0xc54d, 0x1d79, 0xb2f0, 0xa934, 0x6e0f, 0x1431, 0x0, 0x0);
        gbc.writeMem(0xc54d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1d79, gbc.sp());
        EXPECT(0xc54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54d));
        EXPECT(0x27, gbc.readMem(0xc54e));
        // CB 27 02C8
        gbc.setState(0x1bc5, 0xe653, 0x7dc0, 0x6884, 0x9191, 0xafc1, 0x1, 0x0);
        gbc.writeMem(0x1bc5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe653, gbc.sp());
        EXPECT(0x1bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02C9
        gbc.setState(0xd478, 0x67f3, 0x8ab0, 0x5e4c, 0xc4cf, 0xfbad, 0x1, 0x1);
        gbc.writeMem(0xd478, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x67f3, gbc.sp());
        EXPECT(0xd47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd478));
        EXPECT(0x27, gbc.readMem(0xd479));
        // CB 27 02CA
        gbc.setState(0x288, 0x4ba2, 0x70d0, 0xe992, 0x2d06, 0x8638, 0x0, 0x1);
        gbc.writeMem(0x288, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4ba2, gbc.sp());
        EXPECT(0x28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02CB
        gbc.setState(0xd20b, 0x5c6f, 0x7cd0, 0x80b6, 0x1015, 0x20c0, 0x0, 0x1);
        gbc.writeMem(0xd20b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5c6f, gbc.sp());
        EXPECT(0xd20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20b));
        EXPECT(0x27, gbc.readMem(0xd20c));
        // CB 27 02CC
        gbc.setState(0x72d4, 0x90f4, 0xc20, 0x2c9f, 0xee9a, 0x9acc, 0x1, 0x0);
        gbc.writeMem(0x72d4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x90f4, gbc.sp());
        EXPECT(0x72d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02CD
        gbc.setState(0x5e94, 0x2c4c, 0x4b20, 0x6b7a, 0xf817, 0x2cd7, 0x1, 0x1);
        gbc.writeMem(0x5e94, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2c4c, gbc.sp());
        EXPECT(0x5e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02CE
        gbc.setState(0x70ee, 0xe13e, 0x69f0, 0xeb92, 0xd3fd, 0xa8f, 0x1, 0x1);
        gbc.writeMem(0x70ee, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0x70f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02CF
        gbc.setState(0xd5a7, 0x46d2, 0xefe0, 0xde17, 0x5f73, 0x7567, 0x0, 0x1);
        gbc.writeMem(0xd5a7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x46d2, gbc.sp());
        EXPECT(0xd5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a7));
        EXPECT(0x27, gbc.readMem(0xd5a8));
        // CB 27 02D1
        gbc.setState(0x8650, 0x8e7b, 0x65a0, 0xc06c, 0x6aa2, 0x1d77, 0x0, 0x0);
        gbc.writeMem(0x8650, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8e7b, gbc.sp());
        EXPECT(0x8652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8650));
        EXPECT(0x27, gbc.readMem(0x8651));
        // CB 27 02D2
        gbc.setState(0x622f, 0x486d, 0x3e90, 0x1332, 0xb299, 0xeba3, 0x0, 0x1);
        gbc.writeMem(0x622f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x486d, gbc.sp());
        EXPECT(0x6231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02D3
        gbc.setState(0xa5af, 0xf4fc, 0xa390, 0x5a1, 0xad0f, 0x71bc, 0x0, 0x1);
        gbc.writeMem(0xa5af, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf4fc, gbc.sp());
        EXPECT(0xa5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5af));
        EXPECT(0x27, gbc.readMem(0xa5b0));
        // CB 27 02D4
        gbc.setState(0xa9aa, 0x8bfa, 0x8b30, 0xdcf4, 0xa044, 0x182a, 0x1, 0x0);
        gbc.writeMem(0xa9aa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8bfa, gbc.sp());
        EXPECT(0xa9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9aa));
        EXPECT(0x27, gbc.readMem(0xa9ab));
        // CB 27 02D6
        gbc.setState(0xa4c6, 0xb5dc, 0xc4b0, 0xdfa5, 0xe512, 0x6ea1, 0x0, 0x1);
        gbc.writeMem(0xa4c6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb5dc, gbc.sp());
        EXPECT(0xa4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c6));
        EXPECT(0x27, gbc.readMem(0xa4c7));
        // CB 27 02D7
        gbc.setState(0x72de, 0x25bb, 0x7050, 0x883c, 0xc328, 0x613c, 0x1, 0x0);
        gbc.writeMem(0x72de, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x25bb, gbc.sp());
        EXPECT(0x72e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02D8
        gbc.setState(0xa45c, 0x79c8, 0xbc10, 0xe583, 0xe91e, 0xde98, 0x0, 0x0);
        gbc.writeMem(0xa45c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x79c8, gbc.sp());
        EXPECT(0xa45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45c));
        EXPECT(0x27, gbc.readMem(0xa45d));
        // CB 27 02D9
        gbc.setState(0xda46, 0xf395, 0x3410, 0x82e8, 0x1203, 0x7cdf, 0x1, 0x1);
        gbc.writeMem(0xda46, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf395, gbc.sp());
        EXPECT(0xda48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda46));
        EXPECT(0x27, gbc.readMem(0xda47));
        // CB 27 02DA
        gbc.setState(0x9bad, 0x7b98, 0x9e30, 0xfb3d, 0x3eb7, 0x1d84, 0x0, 0x1);
        gbc.writeMem(0x9bad, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7b98, gbc.sp());
        EXPECT(0x9baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bad));
        EXPECT(0x27, gbc.readMem(0x9bae));
        // CB 27 02DB
        gbc.setState(0xc0bb, 0x1f1e, 0x94e0, 0xf95b, 0x4516, 0x54c9, 0x1, 0x0);
        gbc.writeMem(0xc0bb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1f1e, gbc.sp());
        EXPECT(0xc0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0bb));
        EXPECT(0x27, gbc.readMem(0xc0bc));
        // CB 27 02DC
        gbc.setState(0x87cc, 0xee55, 0xc3b0, 0xb807, 0xf38e, 0x2425, 0x1, 0x0);
        gbc.writeMem(0x87cc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xee55, gbc.sp());
        EXPECT(0x87ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87cc));
        EXPECT(0x27, gbc.readMem(0x87cd));
        // CB 27 02DD
        gbc.setState(0xbcdc, 0xd7ba, 0x550, 0x329, 0x316e, 0xeb9c, 0x1, 0x0);
        gbc.writeMem(0xbcdc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd7ba, gbc.sp());
        EXPECT(0xbcde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdc));
        EXPECT(0x27, gbc.readMem(0xbcdd));
        // CB 27 02DE
        gbc.setState(0x3529, 0xbb1b, 0xff30, 0x8ced, 0xb70e, 0xeaab, 0x1, 0x1);
        gbc.writeMem(0x3529, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbb1b, gbc.sp());
        EXPECT(0x352b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02DF
        gbc.setState(0x6629, 0xe90c, 0x9c00, 0xda4, 0x9342, 0xdd93, 0x0, 0x0);
        gbc.writeMem(0x6629, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe90c, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02E0
        gbc.setState(0x9fd1, 0xb59c, 0x6140, 0x7dfa, 0xeddc, 0x5ea2, 0x1, 0x0);
        gbc.writeMem(0x9fd1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb59c, gbc.sp());
        EXPECT(0x9fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd1));
        EXPECT(0x27, gbc.readMem(0x9fd2));
        // CB 27 02E1
        gbc.setState(0x66b, 0xa207, 0x78f0, 0x288d, 0xfb52, 0x95e9, 0x0, 0x0);
        gbc.writeMem(0x66b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa207, gbc.sp());
        EXPECT(0x66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02E2
        gbc.setState(0x6682, 0x1ebf, 0x7d10, 0x4618, 0x3175, 0xcda4, 0x0, 0x0);
        gbc.writeMem(0x6682, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1ebf, gbc.sp());
        EXPECT(0x6684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02E3
        gbc.setState(0xb746, 0x3c5f, 0x4db0, 0xd693, 0x379d, 0xed1b, 0x0, 0x1);
        gbc.writeMem(0xb746, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3c5f, gbc.sp());
        EXPECT(0xb748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb746));
        EXPECT(0x27, gbc.readMem(0xb747));
        // CB 27 02E4
        gbc.setState(0xdac, 0x342a, 0xd3f0, 0x4c6a, 0xac40, 0x6da5, 0x0, 0x1);
        gbc.writeMem(0xdac, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x342a, gbc.sp());
        EXPECT(0xdae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02E5
        gbc.setState(0x68a4, 0xeee0, 0xc770, 0xbfc4, 0xf5a0, 0xb1c, 0x1, 0x1);
        gbc.writeMem(0x68a4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xeee0, gbc.sp());
        EXPECT(0x68a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02E6
        gbc.setState(0x64bf, 0xd16e, 0xa1f0, 0xd5a5, 0x170d, 0xb7a2, 0x0, 0x1);
        gbc.writeMem(0x64bf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd16e, gbc.sp());
        EXPECT(0x64c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02E7
        gbc.setState(0x507a, 0x4670, 0x9130, 0x817, 0x8f9e, 0xcb42, 0x0, 0x1);
        gbc.writeMem(0x507a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4670, gbc.sp());
        EXPECT(0x507c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02E9
        gbc.setState(0xe1c0, 0xbe0c, 0x8e40, 0x8c10, 0x72c, 0x12d5, 0x0, 0x0);
        gbc.writeMem(0xe1c0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbe0c, gbc.sp());
        EXPECT(0xe1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c0));
        EXPECT(0x27, gbc.readMem(0xe1c1));
        // CB 27 02EA
        gbc.setState(0x16e4, 0x3a34, 0x4520, 0x6e39, 0xca1a, 0xddb4, 0x1, 0x0);
        gbc.writeMem(0x16e4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3a34, gbc.sp());
        EXPECT(0x16e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02EB
        gbc.setState(0x7247, 0xfbfb, 0x55e0, 0x652f, 0xeb6c, 0xbd0a, 0x0, 0x0);
        gbc.writeMem(0x7247, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfbfb, gbc.sp());
        EXPECT(0x7249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02EC
        gbc.setState(0x979a, 0xbc21, 0x8b70, 0x7e74, 0x8949, 0xc8eb, 0x0, 0x0);
        gbc.writeMem(0x979a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbc21, gbc.sp());
        EXPECT(0x979c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979a));
        EXPECT(0x27, gbc.readMem(0x979b));
        // CB 27 02ED
        gbc.setState(0xdb21, 0xee9d, 0xab80, 0x2cb0, 0xdb04, 0x4f60, 0x0, 0x0);
        gbc.writeMem(0xdb21, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xee9d, gbc.sp());
        EXPECT(0xdb23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb21));
        EXPECT(0x27, gbc.readMem(0xdb22));
        // CB 27 02EF
        gbc.setState(0x8f6e, 0xca5, 0xd860, 0xf7ae, 0x2bf1, 0xbf4b, 0x1, 0x1);
        gbc.writeMem(0x8f6e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xca5, gbc.sp());
        EXPECT(0x8f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6e));
        EXPECT(0x27, gbc.readMem(0x8f6f));
        // CB 27 02F0
        gbc.setState(0x2960, 0x6fee, 0xba30, 0x973b, 0x35a1, 0xec64, 0x0, 0x1);
        gbc.writeMem(0x2960, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6fee, gbc.sp());
        EXPECT(0x2962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02F1
        gbc.setState(0xc718, 0x5a90, 0x9de0, 0x428, 0x6a89, 0x9b29, 0x1, 0x1);
        gbc.writeMem(0xc718, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5a90, gbc.sp());
        EXPECT(0xc71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc718));
        EXPECT(0x27, gbc.readMem(0xc719));
        // CB 27 02F2
        gbc.setState(0x8b48, 0xb8cd, 0x96d0, 0x4f89, 0x1260, 0xafbb, 0x1, 0x0);
        gbc.writeMem(0x8b48, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb8cd, gbc.sp());
        EXPECT(0x8b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b48));
        EXPECT(0x27, gbc.readMem(0x8b49));
        // CB 27 02F3
        gbc.setState(0x3faf, 0x6e3c, 0xdd90, 0xe8e, 0x4ea5, 0x2957, 0x0, 0x0);
        gbc.writeMem(0x3faf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6e3c, gbc.sp());
        EXPECT(0x3fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02F4
        gbc.setState(0x39fb, 0x6e5a, 0xfd90, 0xe7ef, 0x41c5, 0xe4e2, 0x0, 0x1);
        gbc.writeMem(0x39fb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6e5a, gbc.sp());
        EXPECT(0x39fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02F5
        gbc.setState(0x5667, 0x8587, 0xa1a0, 0xa6cb, 0x543c, 0x59e7, 0x0, 0x0);
        gbc.writeMem(0x5667, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8587, gbc.sp());
        EXPECT(0x5669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02F6
        gbc.setState(0x35f4, 0x1116, 0x53b0, 0xfe74, 0xf015, 0x1f9a, 0x0, 0x0);
        gbc.writeMem(0x35f4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1116, gbc.sp());
        EXPECT(0x35f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02F7
        gbc.setState(0xa4f, 0xe9e0, 0x95d0, 0x2b35, 0x3e72, 0xd8f7, 0x1, 0x0);
        gbc.writeMem(0xa4f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe9e0, gbc.sp());
        EXPECT(0xa51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02F8
        gbc.setState(0x1a74, 0x24e9, 0x1540, 0x8247, 0x85fb, 0xf7d5, 0x1, 0x1);
        gbc.writeMem(0x1a74, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x24e9, gbc.sp());
        EXPECT(0x1a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 02F9
        gbc.setState(0xa8cf, 0x87ac, 0xada0, 0xd6dc, 0x67cf, 0xec99, 0x0, 0x0);
        gbc.writeMem(0xa8cf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x87ac, gbc.sp());
        EXPECT(0xa8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8cf));
        EXPECT(0x27, gbc.readMem(0xa8d0));
        // CB 27 02FA
        gbc.setState(0x1edb, 0x13ad, 0xe1d0, 0x3ac4, 0xa98e, 0x1341, 0x1, 0x1);
        gbc.writeMem(0x1edb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x13ad, gbc.sp());
        EXPECT(0x1edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02FB
        gbc.setState(0x51f4, 0x44be, 0xa990, 0x6c9d, 0xbe7, 0xb7e0, 0x0, 0x0);
        gbc.writeMem(0x51f4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x44be, gbc.sp());
        EXPECT(0x51f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02FC
        gbc.setState(0x84fa, 0x9583, 0xbcd0, 0x9137, 0x97ee, 0x74d, 0x0, 0x0);
        gbc.writeMem(0x84fa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9583, gbc.sp());
        EXPECT(0x84fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84fa));
        EXPECT(0x27, gbc.readMem(0x84fb));
        // CB 27 02FD
        gbc.setState(0x6835, 0xa0a8, 0x8a80, 0x71c7, 0x5062, 0xfd57, 0x1, 0x0);
        gbc.writeMem(0x6835, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa0a8, gbc.sp());
        EXPECT(0x6837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 02FE
        gbc.setState(0xc7c5, 0x1970, 0x4060, 0xde10, 0x3edb, 0x47ca, 0x1, 0x0);
        gbc.writeMem(0xc7c5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1970, gbc.sp());
        EXPECT(0xc7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c5));
        EXPECT(0x27, gbc.readMem(0xc7c6));
        // CB 27 02FF
        gbc.setState(0xa5e3, 0x8885, 0x6fa0, 0x2293, 0x67c3, 0xb165, 0x1, 0x1);
        gbc.writeMem(0xa5e3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8885, gbc.sp());
        EXPECT(0xa5e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e3));
        EXPECT(0x27, gbc.readMem(0xa5e4));
        // CB 27 0300
        gbc.setState(0xbd04, 0x5354, 0x1e80, 0x7b05, 0x5434, 0x38a0, 0x0, 0x1);
        gbc.writeMem(0xbd04, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5354, gbc.sp());
        EXPECT(0xbd06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd04));
        EXPECT(0x27, gbc.readMem(0xbd05));
        // CB 27 0301
        gbc.setState(0x95bb, 0xa815, 0xd470, 0x4721, 0x75b7, 0x59f5, 0x1, 0x0);
        gbc.writeMem(0x95bb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa815, gbc.sp());
        EXPECT(0x95bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95bb));
        EXPECT(0x27, gbc.readMem(0x95bc));
        // CB 27 0302
        gbc.setState(0x9ac8, 0x31fd, 0xe450, 0x441d, 0xf320, 0xf815, 0x1, 0x1);
        gbc.writeMem(0x9ac8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x31fd, gbc.sp());
        EXPECT(0x9aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac8));
        EXPECT(0x27, gbc.readMem(0x9ac9));
        // CB 27 0303
        gbc.setState(0x42ba, 0x4383, 0x1590, 0x270d, 0xc520, 0x377, 0x0, 0x1);
        gbc.writeMem(0x42ba, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4383, gbc.sp());
        EXPECT(0x42bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0304
        gbc.setState(0xb768, 0x1a43, 0xe620, 0xe16e, 0x595f, 0xa014, 0x0, 0x0);
        gbc.writeMem(0xb768, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1a43, gbc.sp());
        EXPECT(0xb76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb768));
        EXPECT(0x27, gbc.readMem(0xb769));
        // CB 27 0305
        gbc.setState(0x2403, 0x459e, 0x8b60, 0xe7ca, 0x535a, 0x925c, 0x0, 0x1);
        gbc.writeMem(0x2403, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x459e, gbc.sp());
        EXPECT(0x2405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0306
        gbc.setState(0x668a, 0x7c5, 0x8450, 0xf36b, 0x273f, 0xfdda, 0x0, 0x0);
        gbc.writeMem(0x668a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7c5, gbc.sp());
        EXPECT(0x668c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0307
        gbc.setState(0xac3, 0x3409, 0x1b60, 0x1878, 0x71ae, 0xf34, 0x1, 0x1);
        gbc.writeMem(0xac3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3409, gbc.sp());
        EXPECT(0xac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0308
        gbc.setState(0xab6f, 0xe5, 0x1e80, 0xffe9, 0xd9ae, 0x1e3a, 0x0, 0x0);
        gbc.writeMem(0xab6f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe5, gbc.sp());
        EXPECT(0xab71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab6f));
        EXPECT(0x27, gbc.readMem(0xab70));
        // CB 27 0309
        gbc.setState(0xbd54, 0x4e6a, 0xc610, 0xf7c6, 0xb63b, 0x9c55, 0x0, 0x0);
        gbc.writeMem(0xbd54, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4e6a, gbc.sp());
        EXPECT(0xbd56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd54));
        EXPECT(0x27, gbc.readMem(0xbd55));
        // CB 27 030A
        gbc.setState(0x2b32, 0xaceb, 0x92a0, 0xfb23, 0x8c7, 0xfba2, 0x0, 0x0);
        gbc.writeMem(0x2b32, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaceb, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 030B
        gbc.setState(0x6377, 0x21eb, 0x5f0, 0x1309, 0x5862, 0x5132, 0x1, 0x1);
        gbc.writeMem(0x6377, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x21eb, gbc.sp());
        EXPECT(0x6379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 030C
        gbc.setState(0xa5be, 0x7080, 0x2f0, 0xa27, 0x6b0e, 0x5e1f, 0x1, 0x1);
        gbc.writeMem(0xa5be, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7080, gbc.sp());
        EXPECT(0xa5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5be));
        EXPECT(0x27, gbc.readMem(0xa5bf));
        // CB 27 030D
        gbc.setState(0xd058, 0x3da, 0x9d20, 0xcc80, 0xf02b, 0x7880, 0x0, 0x1);
        gbc.writeMem(0xd058, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3da, gbc.sp());
        EXPECT(0xd05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd058));
        EXPECT(0x27, gbc.readMem(0xd059));
        // CB 27 030E
        gbc.setState(0xd9ae, 0x9595, 0x6c80, 0xc579, 0x49b6, 0x8ec, 0x0, 0x0);
        gbc.writeMem(0xd9ae, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9595, gbc.sp());
        EXPECT(0xd9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ae));
        EXPECT(0x27, gbc.readMem(0xd9af));
        // CB 27 030F
        gbc.setState(0xcf4d, 0x6614, 0x8c20, 0xad97, 0x9b9a, 0x5a6e, 0x1, 0x0);
        gbc.writeMem(0xcf4d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6614, gbc.sp());
        EXPECT(0xcf4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4d));
        EXPECT(0x27, gbc.readMem(0xcf4e));
        // CB 27 0310
        gbc.setState(0x57ad, 0x2a79, 0x4ce0, 0x6f6e, 0x2c31, 0xb1f0, 0x1, 0x1);
        gbc.writeMem(0x57ad, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2a79, gbc.sp());
        EXPECT(0x57af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0311
        gbc.setState(0x5c3a, 0xedd9, 0x95a0, 0xdb19, 0xe35a, 0x746f, 0x1, 0x1);
        gbc.writeMem(0x5c3a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xedd9, gbc.sp());
        EXPECT(0x5c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0312
        gbc.setState(0x7e82, 0x892f, 0x5a30, 0xa8a3, 0x299d, 0x968d, 0x1, 0x0);
        gbc.writeMem(0x7e82, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x892f, gbc.sp());
        EXPECT(0x7e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0313
        gbc.setState(0xcb1b, 0x6a18, 0x8660, 0xe23d, 0x970a, 0x3023, 0x0, 0x0);
        gbc.writeMem(0xcb1b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6a18, gbc.sp());
        EXPECT(0xcb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1b));
        EXPECT(0x27, gbc.readMem(0xcb1c));
        // CB 27 0314
        gbc.setState(0xb3d1, 0x2c94, 0x9f90, 0xeb7c, 0x101e, 0x3ce5, 0x0, 0x0);
        gbc.writeMem(0xb3d1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2c94, gbc.sp());
        EXPECT(0xb3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d1));
        EXPECT(0x27, gbc.readMem(0xb3d2));
        // CB 27 0315
        gbc.setState(0xd97a, 0x7e07, 0x8cd0, 0x5c73, 0x8352, 0x9c74, 0x1, 0x0);
        gbc.writeMem(0xd97a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7e07, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97a));
        EXPECT(0x27, gbc.readMem(0xd97b));
        // CB 27 0316
        gbc.setState(0x64e7, 0x9b15, 0x2620, 0x8243, 0x8ba3, 0xb4e7, 0x1, 0x0);
        gbc.writeMem(0x64e7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9b15, gbc.sp());
        EXPECT(0x64e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0317
        gbc.setState(0xac7b, 0x316a, 0x6290, 0x229d, 0xcf3e, 0xaa98, 0x1, 0x1);
        gbc.writeMem(0xac7b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x316a, gbc.sp());
        EXPECT(0xac7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7b));
        EXPECT(0x27, gbc.readMem(0xac7c));
        // CB 27 0318
        gbc.setState(0x3e11, 0xc7b7, 0x9d30, 0x9901, 0x13b5, 0x5170, 0x0, 0x1);
        gbc.writeMem(0x3e11, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc7b7, gbc.sp());
        EXPECT(0x3e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0319
        gbc.setState(0xdd7a, 0x966e, 0x8f50, 0x839f, 0xa02c, 0x3204, 0x0, 0x0);
        gbc.writeMem(0xdd7a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x966e, gbc.sp());
        EXPECT(0xdd7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd7a));
        EXPECT(0x27, gbc.readMem(0xdd7b));
        // CB 27 031A
        gbc.setState(0x37a4, 0x1963, 0x2480, 0x71c1, 0xc211, 0x70e3, 0x0, 0x1);
        gbc.writeMem(0x37a4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1963, gbc.sp());
        EXPECT(0x37a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 031B
        gbc.setState(0x678d, 0x4063, 0xf770, 0x9ab3, 0xbbf6, 0x7c5, 0x1, 0x1);
        gbc.writeMem(0x678d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4063, gbc.sp());
        EXPECT(0x678f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 031C
        gbc.setState(0x68d4, 0x1dda, 0x78e0, 0xf2c4, 0x1035, 0x5bcd, 0x1, 0x0);
        gbc.writeMem(0x68d4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1dda, gbc.sp());
        EXPECT(0x68d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 031D
        gbc.setState(0xe8ae, 0x27f4, 0x18d0, 0x8a0a, 0xa9e3, 0x200d, 0x0, 0x1);
        gbc.writeMem(0xe8ae, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x27f4, gbc.sp());
        EXPECT(0xe8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ae));
        EXPECT(0x27, gbc.readMem(0xe8af));
        // CB 27 031E
        gbc.setState(0x21c2, 0xdb2c, 0xcba0, 0xee56, 0x7ce, 0x7cfb, 0x0, 0x1);
        gbc.writeMem(0x21c2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdb2c, gbc.sp());
        EXPECT(0x21c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 031F
        gbc.setState(0x757d, 0x51ef, 0xb720, 0xfe24, 0xf673, 0x72ff, 0x1, 0x0);
        gbc.writeMem(0x757d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x51ef, gbc.sp());
        EXPECT(0x757f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0320
        gbc.setState(0x64dd, 0xe0c1, 0xa4c0, 0xdd5a, 0xd95, 0x401e, 0x0, 0x0);
        gbc.writeMem(0x64dd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe0c1, gbc.sp());
        EXPECT(0x64df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0321
        gbc.setState(0xa63a, 0xacd5, 0xe660, 0x49b1, 0x6bee, 0x6f5c, 0x0, 0x1);
        gbc.writeMem(0xa63a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xacd5, gbc.sp());
        EXPECT(0xa63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa63a));
        EXPECT(0x27, gbc.readMem(0xa63b));
        // CB 27 0322
        gbc.setState(0x8ab2, 0x6313, 0xf570, 0x9383, 0xcd3d, 0x9fb9, 0x1, 0x1);
        gbc.writeMem(0x8ab2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6313, gbc.sp());
        EXPECT(0x8ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab2));
        EXPECT(0x27, gbc.readMem(0x8ab3));
        // CB 27 0323
        gbc.setState(0xbbee, 0x52a0, 0x5320, 0xa7d9, 0xa438, 0xdb98, 0x1, 0x1);
        gbc.writeMem(0xbbee, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x52a0, gbc.sp());
        EXPECT(0xbbf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbee));
        EXPECT(0x27, gbc.readMem(0xbbef));
        // CB 27 0324
        gbc.setState(0xc2a4, 0x45f1, 0x9830, 0xbe2e, 0x4569, 0x9f95, 0x0, 0x0);
        gbc.writeMem(0xc2a4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x45f1, gbc.sp());
        EXPECT(0xc2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a4));
        EXPECT(0x27, gbc.readMem(0xc2a5));
        // CB 27 0326
        gbc.setState(0xc7a3, 0x50a6, 0xe760, 0xb888, 0x5b1c, 0x128c, 0x0, 0x1);
        gbc.writeMem(0xc7a3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x50a6, gbc.sp());
        EXPECT(0xc7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a3));
        EXPECT(0x27, gbc.readMem(0xc7a4));
        // CB 27 0327
        gbc.setState(0x649d, 0x16b9, 0x5fc0, 0xf481, 0x1ad6, 0xb30c, 0x1, 0x0);
        gbc.writeMem(0x649d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x16b9, gbc.sp());
        EXPECT(0x649f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0328
        gbc.setState(0x3715, 0x38c3, 0x9310, 0x2f4b, 0x816e, 0x895c, 0x1, 0x0);
        gbc.writeMem(0x3715, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x38c3, gbc.sp());
        EXPECT(0x3717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0329
        gbc.setState(0x2167, 0x40be, 0xb80, 0xd004, 0xe0ba, 0xc245, 0x1, 0x0);
        gbc.writeMem(0x2167, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x40be, gbc.sp());
        EXPECT(0x2169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 032A
        gbc.setState(0x2af9, 0xbce5, 0xc4a0, 0x9cf5, 0xae56, 0xd7d4, 0x0, 0x1);
        gbc.writeMem(0x2af9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbce5, gbc.sp());
        EXPECT(0x2afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 032B
        gbc.setState(0x27ce, 0x804a, 0x7fa0, 0x33, 0x7072, 0x5939, 0x0, 0x0);
        gbc.writeMem(0x27ce, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x804a, gbc.sp());
        EXPECT(0x27d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 032C
        gbc.setState(0x6200, 0x288e, 0x4b90, 0x768c, 0x94a6, 0x4395, 0x1, 0x1);
        gbc.writeMem(0x6200, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x288e, gbc.sp());
        EXPECT(0x6202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 032D
        gbc.setState(0x33c3, 0xe28a, 0xda40, 0x3055, 0x28fa, 0xe796, 0x0, 0x1);
        gbc.writeMem(0x33c3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe28a, gbc.sp());
        EXPECT(0x33c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 032E
        gbc.setState(0x9ef6, 0x9533, 0x6530, 0x3429, 0x9db7, 0x385e, 0x0, 0x1);
        gbc.writeMem(0x9ef6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9533, gbc.sp());
        EXPECT(0x9ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef6));
        EXPECT(0x27, gbc.readMem(0x9ef7));
        // CB 27 032F
        gbc.setState(0xe314, 0x68db, 0x24c0, 0x117f, 0x9a29, 0x309b, 0x1, 0x0);
        gbc.writeMem(0xe314, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x68db, gbc.sp());
        EXPECT(0xe316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe314));
        EXPECT(0x27, gbc.readMem(0xe315));
        // CB 27 0330
        gbc.setState(0x8394, 0xd6d0, 0x9c0, 0xc88c, 0x5f29, 0xacf6, 0x1, 0x0);
        gbc.writeMem(0x8394, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd6d0, gbc.sp());
        EXPECT(0x8396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8394));
        EXPECT(0x27, gbc.readMem(0x8395));
        // CB 27 0331
        gbc.setState(0xe84f, 0x28d7, 0xda40, 0xe86c, 0x5a2c, 0xba38, 0x0, 0x1);
        gbc.writeMem(0xe84f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x28d7, gbc.sp());
        EXPECT(0xe851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe84f));
        EXPECT(0x27, gbc.readMem(0xe850));
        // CB 27 0332
        gbc.setState(0x98e4, 0x73f5, 0xf510, 0xb844, 0x764b, 0xe176, 0x1, 0x1);
        gbc.writeMem(0x98e4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x73f5, gbc.sp());
        EXPECT(0x98e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e4));
        EXPECT(0x27, gbc.readMem(0x98e5));
        // CB 27 0333
        gbc.setState(0x2781, 0x819a, 0xcd0, 0x6bcf, 0xd4ff, 0x35cf, 0x1, 0x0);
        gbc.writeMem(0x2781, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x819a, gbc.sp());
        EXPECT(0x2783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0334
        gbc.setState(0x604a, 0x8886, 0x2bc0, 0xf8e8, 0x85f8, 0x95ba, 0x1, 0x0);
        gbc.writeMem(0x604a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8886, gbc.sp());
        EXPECT(0x604c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0335
        gbc.setState(0xefd8, 0x17bc, 0xd8f0, 0x2190, 0xe810, 0x2ca6, 0x0, 0x1);
        gbc.writeMem(0xefd8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x17bc, gbc.sp());
        EXPECT(0xefda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd8));
        EXPECT(0x27, gbc.readMem(0xefd9));
        // CB 27 0337
        gbc.setState(0x632d, 0x46e9, 0x2210, 0x252c, 0x5b95, 0x6755, 0x0, 0x0);
        gbc.writeMem(0x632d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x46e9, gbc.sp());
        EXPECT(0x632f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0338
        gbc.setState(0xa8eb, 0x32a1, 0xe7f0, 0x5dd4, 0xa08c, 0x2d9f, 0x0, 0x1);
        gbc.writeMem(0xa8eb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x32a1, gbc.sp());
        EXPECT(0xa8ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8eb));
        EXPECT(0x27, gbc.readMem(0xa8ec));
        // CB 27 0339
        gbc.setState(0xe241, 0x15e6, 0x4470, 0x68ec, 0xcfb1, 0xd56c, 0x0, 0x0);
        gbc.writeMem(0xe241, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x15e6, gbc.sp());
        EXPECT(0xe243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe241));
        EXPECT(0x27, gbc.readMem(0xe242));
        // CB 27 033A
        gbc.setState(0x379, 0x6393, 0xf680, 0x3a54, 0x54d9, 0xd2bc, 0x1, 0x1);
        gbc.writeMem(0x379, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6393, gbc.sp());
        EXPECT(0x37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 033B
        gbc.setState(0x1df6, 0x5d2f, 0xeb00, 0x95a6, 0xee45, 0xe532, 0x1, 0x1);
        gbc.writeMem(0x1df6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5d2f, gbc.sp());
        EXPECT(0x1df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 033C
        gbc.setState(0x8b2d, 0x5227, 0x1880, 0x261c, 0x971a, 0x573a, 0x0, 0x1);
        gbc.writeMem(0x8b2d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5227, gbc.sp());
        EXPECT(0x8b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b2d));
        EXPECT(0x27, gbc.readMem(0x8b2e));
        // CB 27 033D
        gbc.setState(0x674f, 0xae4a, 0xab30, 0xe1c9, 0x710d, 0x51f6, 0x0, 0x0);
        gbc.writeMem(0x674f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xae4a, gbc.sp());
        EXPECT(0x6751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 033E
        gbc.setState(0xcd7d, 0x4b21, 0x440, 0x6f89, 0x633a, 0x8e73, 0x1, 0x0);
        gbc.writeMem(0xcd7d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4b21, gbc.sp());
        EXPECT(0xcd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd7d));
        EXPECT(0x27, gbc.readMem(0xcd7e));
        // CB 27 0340
        gbc.setState(0xb2c9, 0xe2dc, 0x5600, 0xb70a, 0x67f0, 0x44ca, 0x1, 0x1);
        gbc.writeMem(0xb2c9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe2dc, gbc.sp());
        EXPECT(0xb2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c9));
        EXPECT(0x27, gbc.readMem(0xb2ca));
        // CB 27 0341
        gbc.setState(0x3157, 0xa42, 0xea0, 0x5f07, 0x4dfc, 0x223e, 0x0, 0x1);
        gbc.writeMem(0x3157, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa42, gbc.sp());
        EXPECT(0x3159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0342
        gbc.setState(0x26da, 0xee80, 0xf9b0, 0xa43e, 0xc36d, 0x514f, 0x1, 0x0);
        gbc.writeMem(0x26da, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xee80, gbc.sp());
        EXPECT(0x26dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0345
        gbc.setState(0xa79c, 0xb800, 0x7380, 0xb601, 0x74c7, 0x4b6d, 0x1, 0x0);
        gbc.writeMem(0xa79c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb800, gbc.sp());
        EXPECT(0xa79e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79c));
        EXPECT(0x27, gbc.readMem(0xa79d));
        // CB 27 0346
        gbc.setState(0xda6, 0x6685, 0x5c60, 0x590d, 0x6db5, 0x6e6e, 0x0, 0x0);
        gbc.writeMem(0xda6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6685, gbc.sp());
        EXPECT(0xda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0347
        gbc.setState(0x2fb9, 0x6a8, 0xcc60, 0x87b, 0x6300, 0xdae, 0x1, 0x0);
        gbc.writeMem(0x2fb9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6a8, gbc.sp());
        EXPECT(0x2fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0348
        gbc.setState(0xa696, 0x672, 0x4580, 0x3866, 0x3281, 0x709d, 0x1, 0x1);
        gbc.writeMem(0xa696, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x672, gbc.sp());
        EXPECT(0xa698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa696));
        EXPECT(0x27, gbc.readMem(0xa697));
        // CB 27 0349
        gbc.setState(0x7dad, 0xcd9f, 0xe630, 0xb1a7, 0xbe76, 0xe279, 0x1, 0x0);
        gbc.writeMem(0x7dad, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcd9f, gbc.sp());
        EXPECT(0x7daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 034A
        gbc.setState(0x2ba1, 0xa8d, 0x8d70, 0x5aa8, 0xc9d, 0x6aaf, 0x0, 0x1);
        gbc.writeMem(0x2ba1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa8d, gbc.sp());
        EXPECT(0x2ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 034B
        gbc.setState(0xe4, 0x72c8, 0x8c50, 0x8420, 0x177a, 0xd893, 0x0, 0x0);
        gbc.writeMem(0xe4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x72c8, gbc.sp());
        EXPECT(0xe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 034C
        gbc.setState(0x52cb, 0xf0c7, 0x6c50, 0x30dd, 0xaf65, 0x90c7, 0x0, 0x0);
        gbc.writeMem(0x52cb, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf0c7, gbc.sp());
        EXPECT(0x52cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 034D
        gbc.setState(0x6a9, 0xa1f2, 0xc0, 0x87ac, 0x9aa, 0x150e, 0x1, 0x1);
        gbc.writeMem(0x6a9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa1f2, gbc.sp());
        EXPECT(0x6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 034E
        gbc.setState(0x9d37, 0x5412, 0x4920, 0x478e, 0xd577, 0x3cbc, 0x1, 0x0);
        gbc.writeMem(0x9d37, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5412, gbc.sp());
        EXPECT(0x9d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d37));
        EXPECT(0x27, gbc.readMem(0x9d38));
        // CB 27 0350
        gbc.setState(0xa700, 0x1787, 0x58d0, 0xa506, 0xa4fa, 0x9c81, 0x1, 0x0);
        gbc.writeMem(0xa700, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1787, gbc.sp());
        EXPECT(0xa702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa700));
        EXPECT(0x27, gbc.readMem(0xa701));
        // CB 27 0351
        gbc.setState(0xd63b, 0xabe7, 0x7670, 0xd41a, 0x7bc, 0x1145, 0x1, 0x1);
        gbc.writeMem(0xd63b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xabe7, gbc.sp());
        EXPECT(0xd63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd63b));
        EXPECT(0x27, gbc.readMem(0xd63c));
        // CB 27 0352
        gbc.setState(0x6455, 0x8de8, 0x4800, 0xe53f, 0x4822, 0x6e1a, 0x0, 0x1);
        gbc.writeMem(0x6455, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8de8, gbc.sp());
        EXPECT(0x6457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0353
        gbc.setState(0x1747, 0x3071, 0xa5a0, 0xf663, 0x9abd, 0xe126, 0x1, 0x0);
        gbc.writeMem(0x1747, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3071, gbc.sp());
        EXPECT(0x1749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0354
        gbc.setState(0x1faf, 0x492f, 0x3740, 0xa58d, 0x25c2, 0x666c, 0x1, 0x1);
        gbc.writeMem(0x1faf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x492f, gbc.sp());
        EXPECT(0x1fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0355
        gbc.setState(0x13ea, 0x76dc, 0x88e0, 0x1170, 0xb7de, 0x67ae, 0x1, 0x1);
        gbc.writeMem(0x13ea, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x76dc, gbc.sp());
        EXPECT(0x13ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0356
        gbc.setState(0x3ed3, 0x509c, 0x20e0, 0x7282, 0x908f, 0x22fc, 0x0, 0x1);
        gbc.writeMem(0x3ed3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x509c, gbc.sp());
        EXPECT(0x3ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0357
        gbc.setState(0xd4a0, 0x26cc, 0xe1a0, 0x1b97, 0x826a, 0x6318, 0x0, 0x0);
        gbc.writeMem(0xd4a0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x26cc, gbc.sp());
        EXPECT(0xd4a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a0));
        EXPECT(0x27, gbc.readMem(0xd4a1));
        // CB 27 0358
        gbc.setState(0x2625, 0x10a2, 0xbda0, 0x7826, 0xe15, 0x91c9, 0x0, 0x1);
        gbc.writeMem(0x2625, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x10a2, gbc.sp());
        EXPECT(0x2627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0359
        gbc.setState(0x5362, 0xdd0c, 0x120, 0x3adf, 0x7f9c, 0xdbcd, 0x0, 0x0);
        gbc.writeMem(0x5362, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdd0c, gbc.sp());
        EXPECT(0x5364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 035B
        gbc.setState(0xd1b0, 0x195e, 0xfa0, 0x4b7, 0xe29c, 0xe6d2, 0x0, 0x1);
        gbc.writeMem(0xd1b0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x195e, gbc.sp());
        EXPECT(0xd1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b0));
        EXPECT(0x27, gbc.readMem(0xd1b1));
        // CB 27 035C
        gbc.setState(0xd10d, 0x6ded, 0xebb0, 0x944b, 0xa756, 0x9622, 0x0, 0x1);
        gbc.writeMem(0xd10d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6ded, gbc.sp());
        EXPECT(0xd10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10d));
        EXPECT(0x27, gbc.readMem(0xd10e));
        // CB 27 035D
        gbc.setState(0x56f9, 0xc920, 0x8ee0, 0xe5aa, 0x67a3, 0xbaf0, 0x1, 0x0);
        gbc.writeMem(0x56f9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc920, gbc.sp());
        EXPECT(0x56fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 035E
        gbc.setState(0xaae9, 0xe1ae, 0x45f0, 0x6298, 0x8499, 0x8511, 0x0, 0x1);
        gbc.writeMem(0xaae9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe1ae, gbc.sp());
        EXPECT(0xaaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae9));
        EXPECT(0x27, gbc.readMem(0xaaea));
        // CB 27 035F
        gbc.setState(0xcaaf, 0x19cb, 0x2e20, 0xb17d, 0x3708, 0x1583, 0x0, 0x0);
        gbc.writeMem(0xcaaf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x19cb, gbc.sp());
        EXPECT(0xcab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaaf));
        EXPECT(0x27, gbc.readMem(0xcab0));
        // CB 27 0360
        gbc.setState(0x2c40, 0x30c2, 0x2950, 0x79b8, 0x5dda, 0xb594, 0x1, 0x0);
        gbc.writeMem(0x2c40, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x30c2, gbc.sp());
        EXPECT(0x2c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0361
        gbc.setState(0x3434, 0x5af0, 0xaec0, 0xe613, 0x5e31, 0xa50a, 0x0, 0x1);
        gbc.writeMem(0x3434, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5af0, gbc.sp());
        EXPECT(0x3436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0362
        gbc.setState(0xdda1, 0x88cb, 0xf0a0, 0x46ca, 0x337b, 0x2788, 0x0, 0x0);
        gbc.writeMem(0xdda1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x88cb, gbc.sp());
        EXPECT(0xdda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda1));
        EXPECT(0x27, gbc.readMem(0xdda2));
        // CB 27 0364
        gbc.setState(0x24c7, 0xd68, 0xe0f0, 0x4e35, 0xf2e6, 0x8040, 0x0, 0x1);
        gbc.writeMem(0x24c7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd68, gbc.sp());
        EXPECT(0x24c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0365
        gbc.setState(0xd015, 0x399, 0x86d0, 0x351e, 0x5887, 0x35e9, 0x0, 0x0);
        gbc.writeMem(0xd015, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x399, gbc.sp());
        EXPECT(0xd017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd015));
        EXPECT(0x27, gbc.readMem(0xd016));
        // CB 27 0366
        gbc.setState(0xacc1, 0x59e2, 0x7cd0, 0xd309, 0x2ef6, 0x23fe, 0x1, 0x0);
        gbc.writeMem(0xacc1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x59e2, gbc.sp());
        EXPECT(0xacc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc1));
        EXPECT(0x27, gbc.readMem(0xacc2));
        // CB 27 0367
        gbc.setState(0xa22e, 0x2da2, 0xc1e0, 0xe491, 0xd8de, 0x5d97, 0x1, 0x1);
        gbc.writeMem(0xa22e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2da2, gbc.sp());
        EXPECT(0xa230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa22e));
        EXPECT(0x27, gbc.readMem(0xa22f));
        // CB 27 0368
        gbc.setState(0x654a, 0x9a97, 0xb9d0, 0x902e, 0x18df, 0x3936, 0x0, 0x1);
        gbc.writeMem(0x654a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9a97, gbc.sp());
        EXPECT(0x654c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0369
        gbc.setState(0xcbd3, 0x45e3, 0x2c60, 0x6f8a, 0xcc8b, 0x41bc, 0x1, 0x0);
        gbc.writeMem(0xcbd3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x45e3, gbc.sp());
        EXPECT(0xcbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd3));
        EXPECT(0x27, gbc.readMem(0xcbd4));
        // CB 27 036A
        gbc.setState(0x7958, 0x3168, 0xc550, 0xbdbe, 0xf56a, 0x393b, 0x1, 0x1);
        gbc.writeMem(0x7958, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3168, gbc.sp());
        EXPECT(0x795a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 036B
        gbc.setState(0xd9b, 0x9612, 0x8540, 0x516e, 0x2284, 0xd719, 0x1, 0x1);
        gbc.writeMem(0xd9b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9612, gbc.sp());
        EXPECT(0xd9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 036C
        gbc.setState(0x5d2b, 0xe678, 0xf5d0, 0x6303, 0x1181, 0x4960, 0x1, 0x0);
        gbc.writeMem(0x5d2b, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe678, gbc.sp());
        EXPECT(0x5d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 036D
        gbc.setState(0xa285, 0xcbb4, 0x8ed0, 0x7a57, 0x2604, 0x91ed, 0x0, 0x0);
        gbc.writeMem(0xa285, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcbb4, gbc.sp());
        EXPECT(0xa287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa285));
        EXPECT(0x27, gbc.readMem(0xa286));
        // CB 27 036E
        gbc.setState(0x8cd8, 0xb4c0, 0x3cf0, 0xe14a, 0xe0ea, 0xbcb, 0x0, 0x1);
        gbc.writeMem(0x8cd8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb4c0, gbc.sp());
        EXPECT(0x8cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd8));
        EXPECT(0x27, gbc.readMem(0x8cd9));
        // CB 27 036F
        gbc.setState(0xcd85, 0xcaa2, 0x900, 0x4d95, 0xe7ac, 0x643f, 0x1, 0x0);
        gbc.writeMem(0xcd85, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcaa2, gbc.sp());
        EXPECT(0xcd87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd85));
        EXPECT(0x27, gbc.readMem(0xcd86));
        // CB 27 0370
        gbc.setState(0xb570, 0xe727, 0x1960, 0xffb0, 0x3306, 0x255f, 0x1, 0x1);
        gbc.writeMem(0xb570, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe727, gbc.sp());
        EXPECT(0xb572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb570));
        EXPECT(0x27, gbc.readMem(0xb571));
        // CB 27 0371
        gbc.setState(0xd325, 0x3307, 0x7ee0, 0xc9cf, 0x8d4e, 0x965a, 0x1, 0x1);
        gbc.writeMem(0xd325, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3307, gbc.sp());
        EXPECT(0xd327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd325));
        EXPECT(0x27, gbc.readMem(0xd326));
        // CB 27 0372
        gbc.setState(0xda1f, 0x49f1, 0x6030, 0x4574, 0x7831, 0x9ade, 0x0, 0x1);
        gbc.writeMem(0xda1f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x49f1, gbc.sp());
        EXPECT(0xda21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1f));
        EXPECT(0x27, gbc.readMem(0xda20));
        // CB 27 0373
        gbc.setState(0xdf62, 0x958e, 0x7d80, 0x635b, 0xa9d2, 0x678d, 0x1, 0x1);
        gbc.writeMem(0xdf62, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x958e, gbc.sp());
        EXPECT(0xdf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf62));
        EXPECT(0x27, gbc.readMem(0xdf63));
        // CB 27 0374
        gbc.setState(0x8524, 0x8f96, 0xae30, 0xd6c4, 0x8971, 0x842b, 0x1, 0x0);
        gbc.writeMem(0x8524, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8f96, gbc.sp());
        EXPECT(0x8526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8524));
        EXPECT(0x27, gbc.readMem(0x8525));
        // CB 27 0375
        gbc.setState(0xaa58, 0x10e7, 0x8ee0, 0x865b, 0x1b1, 0x5d00, 0x1, 0x1);
        gbc.writeMem(0xaa58, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x10e7, gbc.sp());
        EXPECT(0xaa5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa58));
        EXPECT(0x27, gbc.readMem(0xaa59));
        // CB 27 0376
        gbc.setState(0x5d4, 0xd9df, 0xb920, 0xe496, 0xa7a5, 0x89dc, 0x0, 0x0);
        gbc.writeMem(0x5d4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd9df, gbc.sp());
        EXPECT(0x5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0377
        gbc.setState(0xae6, 0xa1b3, 0xf370, 0xf83d, 0xd0bd, 0x3125, 0x1, 0x1);
        gbc.writeMem(0xae6, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa1b3, gbc.sp());
        EXPECT(0xae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0378
        gbc.setState(0x2531, 0xac96, 0x8a10, 0xcefd, 0xfa5b, 0xcf98, 0x0, 0x0);
        gbc.writeMem(0x2531, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xac96, gbc.sp());
        EXPECT(0x2533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0379
        gbc.setState(0x65ad, 0xf7df, 0x4f10, 0x14ce, 0x6db, 0x582c, 0x0, 0x0);
        gbc.writeMem(0x65ad, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf7df, gbc.sp());
        EXPECT(0x65af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 037A
        gbc.setState(0x642, 0x504d, 0x75d0, 0x7d54, 0xe87b, 0x3e31, 0x0, 0x0);
        gbc.writeMem(0x642, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x504d, gbc.sp());
        EXPECT(0x644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 037B
        gbc.setState(0xdcc9, 0x5cd2, 0x3340, 0x6d5c, 0x9fc8, 0x88b9, 0x0, 0x0);
        gbc.writeMem(0xdcc9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5cd2, gbc.sp());
        EXPECT(0xdccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc9));
        EXPECT(0x27, gbc.readMem(0xdcca));
        // CB 27 037C
        gbc.setState(0x9ee3, 0x7782, 0x7830, 0x7df0, 0xe110, 0xaa54, 0x0, 0x1);
        gbc.writeMem(0x9ee3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7782, gbc.sp());
        EXPECT(0x9ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee3));
        EXPECT(0x27, gbc.readMem(0x9ee4));
        // CB 27 037D
        gbc.setState(0xabf5, 0xe78d, 0x7e90, 0x76fa, 0xbe03, 0x460d, 0x0, 0x0);
        gbc.writeMem(0xabf5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe78d, gbc.sp());
        EXPECT(0xabf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf5));
        EXPECT(0x27, gbc.readMem(0xabf6));
        // CB 27 037E
        gbc.setState(0x1963, 0x40e5, 0x9ee0, 0x9802, 0x9a41, 0x4b91, 0x0, 0x1);
        gbc.writeMem(0x1963, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x40e5, gbc.sp());
        EXPECT(0x1965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 037F
        gbc.setState(0xc7e4, 0x1dc9, 0xd190, 0x11d0, 0x7417, 0xefb1, 0x0, 0x0);
        gbc.writeMem(0xc7e4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1dc9, gbc.sp());
        EXPECT(0xc7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e4));
        EXPECT(0x27, gbc.readMem(0xc7e5));
        // CB 27 0380
        gbc.setState(0x7a56, 0xf9c7, 0x5a60, 0x4781, 0x5947, 0x8761, 0x0, 0x0);
        gbc.writeMem(0x7a56, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf9c7, gbc.sp());
        EXPECT(0x7a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0381
        gbc.setState(0x7a08, 0x7e63, 0x320, 0xba1c, 0xce6d, 0xf93a, 0x1, 0x1);
        gbc.writeMem(0x7a08, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7e63, gbc.sp());
        EXPECT(0x7a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0383
        gbc.setState(0x1f41, 0x6a98, 0x3150, 0x402a, 0x3ebb, 0xeb3b, 0x1, 0x1);
        gbc.writeMem(0x1f41, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6a98, gbc.sp());
        EXPECT(0x1f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0384
        gbc.setState(0x363c, 0xf65c, 0xc370, 0x102f, 0xa05f, 0xb70b, 0x1, 0x0);
        gbc.writeMem(0x363c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf65c, gbc.sp());
        EXPECT(0x363e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0385
        gbc.setState(0x738, 0xe2aa, 0xfbc0, 0x4f21, 0x6b21, 0xf1e8, 0x1, 0x0);
        gbc.writeMem(0x738, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe2aa, gbc.sp());
        EXPECT(0x73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0386
        gbc.setState(0xa475, 0xf9d9, 0xb4f0, 0xa5dc, 0x7837, 0xa409, 0x0, 0x0);
        gbc.writeMem(0xa475, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf9d9, gbc.sp());
        EXPECT(0xa477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa475));
        EXPECT(0x27, gbc.readMem(0xa476));
        // CB 27 0387
        gbc.setState(0x52aa, 0xa4a0, 0x50, 0x7bdb, 0xb41b, 0x51fd, 0x1, 0x1);
        gbc.writeMem(0x52aa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa4a0, gbc.sp());
        EXPECT(0x52ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0388
        gbc.setState(0x1cd, 0x7ded, 0xac0, 0x9340, 0xc69, 0xacb5, 0x0, 0x0);
        gbc.writeMem(0x1cd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7ded, gbc.sp());
        EXPECT(0x1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0389
        gbc.setState(0xebff, 0x2139, 0xa750, 0xbeed, 0xcb5f, 0x16b5, 0x0, 0x1);
        gbc.writeMem(0xebff, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2139, gbc.sp());
        EXPECT(0xec01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebff));
        EXPECT(0x27, gbc.readMem(0xec00));
        // CB 27 038A
        gbc.setState(0x84b5, 0x6e1d, 0xc9d0, 0xec0b, 0xf48, 0xc222, 0x0, 0x1);
        gbc.writeMem(0x84b5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6e1d, gbc.sp());
        EXPECT(0x84b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b5));
        EXPECT(0x27, gbc.readMem(0x84b6));
        // CB 27 038C
        gbc.setState(0x657a, 0xaeb4, 0x3f70, 0x214, 0x3e14, 0x1262, 0x0, 0x1);
        gbc.writeMem(0x657a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaeb4, gbc.sp());
        EXPECT(0x657c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 038D
        gbc.setState(0x637c, 0x703e, 0xf760, 0x1a6, 0xf494, 0xfa5, 0x0, 0x0);
        gbc.writeMem(0x637c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x703e, gbc.sp());
        EXPECT(0x637e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 038E
        gbc.setState(0x520c, 0x4d84, 0xd8a0, 0x8d95, 0x8855, 0x186c, 0x1, 0x0);
        gbc.writeMem(0x520c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4d84, gbc.sp());
        EXPECT(0x520e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 038F
        gbc.setState(0x777d, 0x29db, 0x8bf0, 0xadf3, 0xc2b1, 0xdd5a, 0x0, 0x0);
        gbc.writeMem(0x777d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x29db, gbc.sp());
        EXPECT(0x777f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0390
        gbc.setState(0x77b0, 0xcf2a, 0x1e80, 0xbb10, 0x42ff, 0x644e, 0x0, 0x1);
        gbc.writeMem(0x77b0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcf2a, gbc.sp());
        EXPECT(0x77b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0391
        gbc.setState(0x43c2, 0x8838, 0xf3e0, 0x32e, 0x3121, 0x3fd, 0x0, 0x1);
        gbc.writeMem(0x43c2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8838, gbc.sp());
        EXPECT(0x43c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0392
        gbc.setState(0x4552, 0x193c, 0xab70, 0x47ea, 0x8fd7, 0x91c2, 0x1, 0x1);
        gbc.writeMem(0x4552, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x193c, gbc.sp());
        EXPECT(0x4554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0394
        gbc.setState(0x81aa, 0xcb94, 0xb30, 0x2f11, 0x526c, 0xfcb8, 0x0, 0x0);
        gbc.writeMem(0x81aa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcb94, gbc.sp());
        EXPECT(0x81ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81aa));
        EXPECT(0x27, gbc.readMem(0x81ab));
        // CB 27 0395
        gbc.setState(0x3b3f, 0xa776, 0x5c30, 0x419, 0xe3e, 0xcbbb, 0x0, 0x1);
        gbc.writeMem(0x3b3f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa776, gbc.sp());
        EXPECT(0x3b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0396
        gbc.setState(0x93cc, 0xb4db, 0xa9d0, 0xdf71, 0x85da, 0xe99e, 0x1, 0x1);
        gbc.writeMem(0x93cc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb4db, gbc.sp());
        EXPECT(0x93ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93cc));
        EXPECT(0x27, gbc.readMem(0x93cd));
        // CB 27 0397
        gbc.setState(0xd5, 0x792e, 0x7170, 0x9049, 0x822a, 0xd6f5, 0x0, 0x0);
        gbc.writeMem(0xd5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x792e, gbc.sp());
        EXPECT(0xd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 0398
        gbc.setState(0x4625, 0x95cf, 0xf3b0, 0x11de, 0x94ce, 0xb63f, 0x1, 0x1);
        gbc.writeMem(0x4625, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x95cf, gbc.sp());
        EXPECT(0x4627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 0399
        gbc.setState(0x3b87, 0xb07f, 0x2930, 0xdffa, 0x5f6b, 0x282a, 0x0, 0x0);
        gbc.writeMem(0x3b87, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb07f, gbc.sp());
        EXPECT(0x3b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 039A
        gbc.setState(0x6271, 0xfa1, 0x2f10, 0x5b9, 0xe3b2, 0x9ca3, 0x1, 0x0);
        gbc.writeMem(0x6271, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfa1, gbc.sp());
        EXPECT(0x6273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 039B
        gbc.setState(0xdffc, 0x963d, 0x70e0, 0xa5e2, 0xf89b, 0xbb86, 0x1, 0x0);
        gbc.writeMem(0xdffc, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x963d, gbc.sp());
        EXPECT(0xdffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdffc));
        EXPECT(0x27, gbc.readMem(0xdffd));
        // CB 27 039C
        gbc.setState(0x14ea, 0xa461, 0xc980, 0xe772, 0x2d26, 0xb2e3, 0x1, 0x0);
        gbc.writeMem(0x14ea, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa461, gbc.sp());
        EXPECT(0x14ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 039D
        gbc.setState(0x8818, 0x8024, 0xa700, 0x5ced, 0x1c4f, 0x8763, 0x0, 0x1);
        gbc.writeMem(0x8818, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8024, gbc.sp());
        EXPECT(0x881a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8818));
        EXPECT(0x27, gbc.readMem(0x8819));
        // CB 27 039E
        gbc.setState(0xe0ff, 0xc1d3, 0x76d0, 0x501, 0xd0db, 0xb6b0, 0x0, 0x1);
        gbc.writeMem(0xe0ff, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc1d3, gbc.sp());
        EXPECT(0xe101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ff));
        EXPECT(0x27, gbc.readMem(0xe100));
        // CB 27 039F
        gbc.setState(0x3e48, 0x1afc, 0x2ea0, 0x8f5e, 0x4cdc, 0xfb11, 0x1, 0x1);
        gbc.writeMem(0x3e48, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1afc, gbc.sp());
        EXPECT(0x3e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03A0
        gbc.setState(0x8dab, 0x8fb8, 0xb170, 0x2f1e, 0xf641, 0xe8b6, 0x0, 0x0);
        gbc.writeMem(0x8dab, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8fb8, gbc.sp());
        EXPECT(0x8dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dab));
        EXPECT(0x27, gbc.readMem(0x8dac));
        // CB 27 03A1
        gbc.setState(0x7cb7, 0x7d01, 0x940, 0xcd3, 0xba99, 0x5c00, 0x1, 0x0);
        gbc.writeMem(0x7cb7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7d01, gbc.sp());
        EXPECT(0x7cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03A2
        gbc.setState(0xab33, 0x8d61, 0x3540, 0xfbb4, 0x66b, 0xdda4, 0x0, 0x1);
        gbc.writeMem(0xab33, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8d61, gbc.sp());
        EXPECT(0xab35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab33));
        EXPECT(0x27, gbc.readMem(0xab34));
        // CB 27 03A3
        gbc.setState(0xc1cf, 0x886c, 0xeaf0, 0xd54f, 0xb35, 0xbbf1, 0x0, 0x1);
        gbc.writeMem(0xc1cf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x886c, gbc.sp());
        EXPECT(0xc1d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1cf));
        EXPECT(0x27, gbc.readMem(0xc1d0));
        // CB 27 03A4
        gbc.setState(0x7517, 0xc23, 0xf3d0, 0x56bc, 0x9313, 0xb7b4, 0x1, 0x1);
        gbc.writeMem(0x7517, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc23, gbc.sp());
        EXPECT(0x7519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03A5
        gbc.setState(0xc237, 0x1871, 0x4410, 0x480c, 0xfdd6, 0xa9b7, 0x0, 0x0);
        gbc.writeMem(0xc237, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1871, gbc.sp());
        EXPECT(0xc239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc237));
        EXPECT(0x27, gbc.readMem(0xc238));
        // CB 27 03A6
        gbc.setState(0xc69, 0x7cd, 0x4b80, 0x1f69, 0x477a, 0x5549, 0x0, 0x1);
        gbc.writeMem(0xc69, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7cd, gbc.sp());
        EXPECT(0xc6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03A7
        gbc.setState(0xa26d, 0x6a00, 0xd920, 0x69e6, 0x8efe, 0xc821, 0x1, 0x1);
        gbc.writeMem(0xa26d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6a00, gbc.sp());
        EXPECT(0xa26f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26d));
        EXPECT(0x27, gbc.readMem(0xa26e));
        // CB 27 03A8
        gbc.setState(0x973, 0x83d7, 0xa250, 0x676c, 0x24e5, 0xf5e, 0x1, 0x0);
        gbc.writeMem(0x973, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x83d7, gbc.sp());
        EXPECT(0x975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03A9
        gbc.setState(0xe17a, 0x49c1, 0x8ec0, 0x5dee, 0x1527, 0x6bae, 0x1, 0x0);
        gbc.writeMem(0xe17a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x49c1, gbc.sp());
        EXPECT(0xe17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17a));
        EXPECT(0x27, gbc.readMem(0xe17b));
        // CB 27 03AA
        gbc.setState(0xaffe, 0xbe41, 0x4c10, 0xe9b0, 0x330c, 0xc8da, 0x1, 0x1);
        gbc.writeMem(0xaffe, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbe41, gbc.sp());
        EXPECT(0xb000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaffe));
        EXPECT(0x27, gbc.readMem(0xafff));
        // CB 27 03AB
        gbc.setState(0x9005, 0xbbf5, 0xe6d0, 0xcc58, 0x789b, 0x6fe1, 0x1, 0x1);
        gbc.writeMem(0x9005, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbbf5, gbc.sp());
        EXPECT(0x9007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9005));
        EXPECT(0x27, gbc.readMem(0x9006));
        // CB 27 03AD
        gbc.setState(0xb69c, 0xaa5d, 0x7cf0, 0x11ec, 0xb5d7, 0x6c3c, 0x0, 0x1);
        gbc.writeMem(0xb69c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaa5d, gbc.sp());
        EXPECT(0xb69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69c));
        EXPECT(0x27, gbc.readMem(0xb69d));
        // CB 27 03AE
        gbc.setState(0x934a, 0xf4dd, 0x1920, 0xca74, 0x9a47, 0x6d2e, 0x0, 0x0);
        gbc.writeMem(0x934a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf4dd, gbc.sp());
        EXPECT(0x934c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934a));
        EXPECT(0x27, gbc.readMem(0x934b));
        // CB 27 03AF
        gbc.setState(0xb769, 0x1c8e, 0x99d0, 0x62d4, 0xc2e7, 0x8667, 0x1, 0x0);
        gbc.writeMem(0xb769, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1c8e, gbc.sp());
        EXPECT(0xb76b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb769));
        EXPECT(0x27, gbc.readMem(0xb76a));
        // CB 27 03B0
        gbc.setState(0x861d, 0x95b4, 0x4b80, 0x8dda, 0x851d, 0xa7a0, 0x1, 0x1);
        gbc.writeMem(0x861d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x95b4, gbc.sp());
        EXPECT(0x861f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861d));
        EXPECT(0x27, gbc.readMem(0x861e));
        // CB 27 03B1
        gbc.setState(0xf91, 0x23d7, 0xae40, 0xa2c2, 0xca3a, 0x7f62, 0x0, 0x1);
        gbc.writeMem(0xf91, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x23d7, gbc.sp());
        EXPECT(0xf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03B2
        gbc.setState(0xb048, 0x96e2, 0x3a20, 0x8b18, 0x5b31, 0x2e71, 0x1, 0x0);
        gbc.writeMem(0xb048, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x96e2, gbc.sp());
        EXPECT(0xb04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb048));
        EXPECT(0x27, gbc.readMem(0xb049));
        // CB 27 03B3
        gbc.setState(0xb0a2, 0xdb9, 0x43f0, 0x6138, 0x772f, 0x80f3, 0x1, 0x1);
        gbc.writeMem(0xb0a2, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdb9, gbc.sp());
        EXPECT(0xb0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a2));
        EXPECT(0x27, gbc.readMem(0xb0a3));
        // CB 27 03B4
        gbc.setState(0x5da4, 0xda22, 0x1ef0, 0xedd6, 0x4182, 0x70fd, 0x0, 0x0);
        gbc.writeMem(0x5da4, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xda22, gbc.sp());
        EXPECT(0x5da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03B5
        gbc.setState(0x3f19, 0x990c, 0x7c60, 0xf7fe, 0xa09b, 0x4214, 0x0, 0x0);
        gbc.writeMem(0x3f19, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x990c, gbc.sp());
        EXPECT(0x3f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03B6
        gbc.setState(0xc5e7, 0xc521, 0xdbd0, 0x5ab7, 0xa3ee, 0x88df, 0x1, 0x1);
        gbc.writeMem(0xc5e7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc521, gbc.sp());
        EXPECT(0xc5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e7));
        EXPECT(0x27, gbc.readMem(0xc5e8));
        // CB 27 03B7
        gbc.setState(0x17a7, 0x168d, 0x910, 0x3ba9, 0xd960, 0x9297, 0x0, 0x0);
        gbc.writeMem(0x17a7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x168d, gbc.sp());
        EXPECT(0x17a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03B8
        gbc.setState(0xa8ad, 0x7df6, 0x5b00, 0x2c74, 0x97af, 0xa6ee, 0x0, 0x1);
        gbc.writeMem(0xa8ad, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7df6, gbc.sp());
        EXPECT(0xa8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ad));
        EXPECT(0x27, gbc.readMem(0xa8ae));
        // CB 27 03B9
        gbc.setState(0x7985, 0xdb0c, 0x24b0, 0x76df, 0xcb55, 0x7650, 0x0, 0x0);
        gbc.writeMem(0x7985, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdb0c, gbc.sp());
        EXPECT(0x7987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03BB
        gbc.setState(0x8ef3, 0x88b2, 0x76f0, 0x38ca, 0xad7f, 0x91bd, 0x1, 0x1);
        gbc.writeMem(0x8ef3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x88b2, gbc.sp());
        EXPECT(0x8ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef3));
        EXPECT(0x27, gbc.readMem(0x8ef4));
        // CB 27 03BD
        gbc.setState(0x70fa, 0x87a6, 0x3240, 0xb84c, 0xe433, 0xf087, 0x1, 0x0);
        gbc.writeMem(0x70fa, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x87a6, gbc.sp());
        EXPECT(0x70fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03BE
        gbc.setState(0x65e7, 0x3995, 0xefc0, 0x8cd3, 0xd70f, 0x7dac, 0x0, 0x0);
        gbc.writeMem(0x65e7, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3995, gbc.sp());
        EXPECT(0x65e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03BF
        gbc.setState(0x5c46, 0xdaff, 0xc3b0, 0x8908, 0xe05f, 0xbe22, 0x0, 0x1);
        gbc.writeMem(0x5c46, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdaff, gbc.sp());
        EXPECT(0x5c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03C0
        gbc.setState(0x92c0, 0x774, 0x96a0, 0xb2f6, 0x433f, 0xce86, 0x1, 0x0);
        gbc.writeMem(0x92c0, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x774, gbc.sp());
        EXPECT(0x92c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c0));
        EXPECT(0x27, gbc.readMem(0x92c1));
        // CB 27 03C1
        gbc.setState(0x4bb5, 0x9125, 0xfd60, 0x98f1, 0xc2fe, 0xb52b, 0x0, 0x1);
        gbc.writeMem(0x4bb5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9125, gbc.sp());
        EXPECT(0x4bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03C2
        gbc.setState(0x21c1, 0xdc46, 0x8420, 0x7008, 0x5f66, 0x1b14, 0x0, 0x1);
        gbc.writeMem(0x21c1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdc46, gbc.sp());
        EXPECT(0x21c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03C3
        gbc.setState(0x3ad8, 0xdbd0, 0xfd50, 0xd4d6, 0x5684, 0xd0c7, 0x0, 0x0);
        gbc.writeMem(0x3ad8, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdbd0, gbc.sp());
        EXPECT(0x3ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03C4
        gbc.setState(0x7dee, 0x7464, 0xe3a0, 0xded4, 0xefc1, 0x464c, 0x0, 0x1);
        gbc.writeMem(0x7dee, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7464, gbc.sp());
        EXPECT(0x7df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03C5
        gbc.setState(0xe80f, 0xe430, 0xf3e0, 0x4992, 0x5c71, 0xde, 0x1, 0x1);
        gbc.writeMem(0xe80f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe430, gbc.sp());
        EXPECT(0xe811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe80f));
        EXPECT(0x27, gbc.readMem(0xe810));
        // CB 27 03C6
        gbc.setState(0xd00d, 0x8e2e, 0x3aa0, 0x8571, 0x6358, 0x1ba9, 0x1, 0x1);
        gbc.writeMem(0xd00d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8e2e, gbc.sp());
        EXPECT(0xd00f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00d));
        EXPECT(0x27, gbc.readMem(0xd00e));
        // CB 27 03C7
        gbc.setState(0x9e2a, 0x950a, 0x32b0, 0x95c4, 0xc8e, 0x5dc4, 0x1, 0x1);
        gbc.writeMem(0x9e2a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x950a, gbc.sp());
        EXPECT(0x9e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2a));
        EXPECT(0x27, gbc.readMem(0x9e2b));
        // CB 27 03C8
        gbc.setState(0x5a0d, 0x3b71, 0x9200, 0xf6f1, 0x733a, 0xb67b, 0x1, 0x1);
        gbc.writeMem(0x5a0d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3b71, gbc.sp());
        EXPECT(0x5a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03C9
        gbc.setState(0x814, 0xc381, 0x8f40, 0xbe3d, 0xa0d5, 0xd8f7, 0x1, 0x1);
        gbc.writeMem(0x814, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc381, gbc.sp());
        EXPECT(0x816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03CA
        gbc.setState(0xc518, 0x9531, 0x7a30, 0xf7f4, 0x91ad, 0xb744, 0x1, 0x0);
        gbc.writeMem(0xc518, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9531, gbc.sp());
        EXPECT(0xc51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc518));
        EXPECT(0x27, gbc.readMem(0xc519));
        // CB 27 03CB
        gbc.setState(0x5d52, 0x647e, 0x3be0, 0x371, 0x51e3, 0xd813, 0x0, 0x0);
        gbc.writeMem(0x5d52, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x647e, gbc.sp());
        EXPECT(0x5d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03CC
        gbc.setState(0x4ba9, 0x32ee, 0xb10, 0x9868, 0x6bdd, 0x69c7, 0x0, 0x1);
        gbc.writeMem(0x4ba9, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x32ee, gbc.sp());
        EXPECT(0x4bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03CD
        gbc.setState(0x854c, 0x7764, 0x8560, 0x1037, 0x8eb1, 0xd0d4, 0x1, 0x0);
        gbc.writeMem(0x854c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7764, gbc.sp());
        EXPECT(0x854e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854c));
        EXPECT(0x27, gbc.readMem(0x854d));
        // CB 27 03CE
        gbc.setState(0x828, 0x9937, 0x71a0, 0xa485, 0xef7f, 0x5287, 0x0, 0x0);
        gbc.writeMem(0x828, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9937, gbc.sp());
        EXPECT(0x82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03CF
        gbc.setState(0x7e65, 0xde72, 0xc400, 0x58c7, 0xd95a, 0x6499, 0x1, 0x0);
        gbc.writeMem(0x7e65, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xde72, gbc.sp());
        EXPECT(0x7e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03D0
        gbc.setState(0x5a90, 0xfeb1, 0x2ab0, 0x6ba4, 0x29a0, 0x97e1, 0x0, 0x0);
        gbc.writeMem(0x5a90, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfeb1, gbc.sp());
        EXPECT(0x5a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03D2
        gbc.setState(0x1ae5, 0x2cce, 0xccf0, 0xaaf4, 0xe37, 0xbe70, 0x1, 0x0);
        gbc.writeMem(0x1ae5, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2cce, gbc.sp());
        EXPECT(0x1ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03D3
        gbc.setState(0x8a57, 0xf543, 0x18d0, 0xb0ef, 0xbd, 0x2cf5, 0x0, 0x0);
        gbc.writeMem(0x8a57, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf543, gbc.sp());
        EXPECT(0x8a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a57));
        EXPECT(0x27, gbc.readMem(0x8a58));
        // CB 27 03D4
        gbc.setState(0x67d3, 0x5594, 0x4ad0, 0x65e6, 0x453a, 0xa2b1, 0x1, 0x0);
        gbc.writeMem(0x67d3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5594, gbc.sp());
        EXPECT(0x67d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03D5
        gbc.setState(0x8ae1, 0xcf3e, 0x9bb0, 0x3bb5, 0xc70, 0x43c3, 0x1, 0x0);
        gbc.writeMem(0x8ae1, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcf3e, gbc.sp());
        EXPECT(0x8ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae1));
        EXPECT(0x27, gbc.readMem(0x8ae2));
        // CB 27 03D6
        gbc.setState(0xe893, 0xedf, 0x6130, 0x7076, 0x624c, 0x406, 0x1, 0x1);
        gbc.writeMem(0xe893, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xedf, gbc.sp());
        EXPECT(0xe895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe893));
        EXPECT(0x27, gbc.readMem(0xe894));
        // CB 27 03D7
        gbc.setState(0x26cd, 0x6b10, 0xa3d0, 0xb453, 0x27a9, 0x7c45, 0x1, 0x1);
        gbc.writeMem(0x26cd, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6b10, gbc.sp());
        EXPECT(0x26cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03D8
        gbc.setState(0x656c, 0x9459, 0x7340, 0x3547, 0x4ab3, 0x387d, 0x1, 0x0);
        gbc.writeMem(0x656c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9459, gbc.sp());
        EXPECT(0x656e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03D9
        gbc.setState(0xc04a, 0xfc2, 0xf410, 0x66ae, 0x5ca3, 0x816a, 0x0, 0x1);
        gbc.writeMem(0xc04a, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfc2, gbc.sp());
        EXPECT(0xc04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04a));
        EXPECT(0x27, gbc.readMem(0xc04b));
        // CB 27 03DA
        gbc.setState(0xb2bf, 0x4623, 0x1010, 0xf5ab, 0xf81, 0x7169, 0x1, 0x0);
        gbc.writeMem(0xb2bf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4623, gbc.sp());
        EXPECT(0xb2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2bf));
        EXPECT(0x27, gbc.readMem(0xb2c0));
        // CB 27 03DB
        gbc.setState(0xd2f, 0xf348, 0x9d40, 0xe552, 0xeb75, 0x5ba0, 0x1, 0x1);
        gbc.writeMem(0xd2f, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf348, gbc.sp());
        EXPECT(0xd31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03DC
        gbc.setState(0x7b60, 0xabd0, 0x80c0, 0x1685, 0x4414, 0x791c, 0x1, 0x1);
        gbc.writeMem(0x7b60, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xabd0, gbc.sp());
        EXPECT(0x7b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03DD
        gbc.setState(0x49a3, 0xa111, 0xc010, 0x3ecf, 0x342c, 0x3ceb, 0x1, 0x0);
        gbc.writeMem(0x49a3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa111, gbc.sp());
        EXPECT(0x49a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03DE
        gbc.setState(0xc77d, 0xe2f8, 0x9ad0, 0xf0ec, 0x6a33, 0x9832, 0x1, 0x1);
        gbc.writeMem(0xc77d, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe2f8, gbc.sp());
        EXPECT(0xc77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77d));
        EXPECT(0x27, gbc.readMem(0xc77e));
        // CB 27 03DF
        gbc.setState(0x52ab, 0x123a, 0x2660, 0xf8e7, 0x84e1, 0x7093, 0x1, 0x0);
        gbc.writeMem(0x52ab, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x123a, gbc.sp());
        EXPECT(0x52ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03E0
        gbc.setState(0x490e, 0x4b28, 0x9330, 0x9bf8, 0x90d, 0x95e3, 0x0, 0x1);
        gbc.writeMem(0x490e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4b28, gbc.sp());
        EXPECT(0x4910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03E2
        gbc.setState(0x3985, 0xb759, 0x8070, 0x51ac, 0xa3b7, 0x1027, 0x1, 0x0);
        gbc.writeMem(0x3985, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb759, gbc.sp());
        EXPECT(0x3987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03E3
        gbc.setState(0xef0c, 0xd88e, 0xdfc0, 0x38c0, 0x81ec, 0x46a2, 0x0, 0x1);
        gbc.writeMem(0xef0c, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd88e, gbc.sp());
        EXPECT(0xef0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef0c));
        EXPECT(0x27, gbc.readMem(0xef0d));
        // CB 27 03E4
        gbc.setState(0xfbf, 0xc937, 0x38c0, 0x1402, 0x2644, 0x1f27, 0x0, 0x1);
        gbc.writeMem(0xfbf, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc937, gbc.sp());
        EXPECT(0xfc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 27 03E5
        gbc.setState(0x1028, 0xbd6b, 0x91d0, 0x51f7, 0x9a47, 0x21cd, 0x1, 0x1);
        gbc.writeMem(0x1028, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbd6b, gbc.sp());
        EXPECT(0x102a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03E6
        gbc.setState(0x4a6e, 0x7949, 0xa790, 0xda18, 0xde14, 0x87c0, 0x1, 0x1);
        gbc.writeMem(0x4a6e, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7949, gbc.sp());
        EXPECT(0x4a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 27 03E7
        gbc.setState(0x31f3, 0xafbc, 0x45e0, 0xdd69, 0xcfd2, 0xae42, 0x0, 0x0);
        gbc.writeMem(0x31f3, { 0xcb, 0x27 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xafbc, gbc.sp());
        EXPECT(0x31f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
