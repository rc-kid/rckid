#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_de)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_de) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // DE 0000
        gbc.setState(0x2368, 0x1209, 0xda50, 0x8c2f, 0x30a0, 0x23ad, 0x0, 0x1);
        gbc.writeMem(0x2368, { 0xde, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1209);
        EXPECT(gbc.pc(), 0x236a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0001
        gbc.setState(0x81cb, 0xd6fa, 0x6710, 0x5517, 0xf533, 0x70f6, 0x1, 0x0);
        gbc.writeMem(0x81cb, { 0xde, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd6fa);
        EXPECT(gbc.pc(), 0x81cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81cb), 0xde);
        EXPECT(gbc.readMem(0x81cc), 0x6d);
        // DE 0003
        gbc.setState(0xfea, 0x37c4, 0xda40, 0x7d9b, 0xd435, 0x173d, 0x0, 0x1);
        gbc.writeMem(0xfea, { 0xde, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x37c4);
        EXPECT(gbc.pc(), 0xfec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0004
        gbc.setState(0x8757, 0xd6ba, 0x50, 0xe9fe, 0x8212, 0x68ae, 0x1, 0x0);
        gbc.writeMem(0x8757, { 0xde, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd6ba);
        EXPECT(gbc.pc(), 0x8759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8757), 0xde);
        EXPECT(gbc.readMem(0x8758), 0x8);
        // DE 0005
        gbc.setState(0xe755, 0xa8b0, 0x9510, 0x5aff, 0x2525, 0x478b, 0x1, 0x1);
        gbc.writeMem(0xe755, { 0xde, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa8b0);
        EXPECT(gbc.pc(), 0xe757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe755), 0xde);
        EXPECT(gbc.readMem(0xe756), 0xa4);
        // DE 0006
        gbc.setState(0x6c45, 0x8d39, 0xbf80, 0xee31, 0xe1d5, 0x53e8, 0x0, 0x1);
        gbc.writeMem(0x6c45, { 0xde, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8d39);
        EXPECT(gbc.pc(), 0x6c47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0007
        gbc.setState(0x9825, 0x57c3, 0x73a0, 0x7130, 0xe754, 0x4b60, 0x0, 0x0);
        gbc.writeMem(0x9825, { 0xde, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x57c3);
        EXPECT(gbc.pc(), 0x9827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9825), 0xde);
        EXPECT(gbc.readMem(0x9826), 0x49);
        // DE 0008
        gbc.setState(0xacbe, 0xf8b4, 0x40, 0x8ce7, 0x7cb2, 0xa3cc, 0x0, 0x0);
        gbc.writeMem(0xacbe, { 0xde, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf8b4);
        EXPECT(gbc.pc(), 0xacc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacbe), 0xde);
        EXPECT(gbc.readMem(0xacbf), 0x8d);
        // DE 0009
        gbc.setState(0xec67, 0xc2ed, 0x3420, 0xa97b, 0x862d, 0x1f5b, 0x1, 0x1);
        gbc.writeMem(0xec67, { 0xde, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc2ed);
        EXPECT(gbc.pc(), 0xec69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec67), 0xde);
        EXPECT(gbc.readMem(0xec68), 0xe0);
        // DE 000A
        gbc.setState(0x3438, 0xbac1, 0xe830, 0xe39d, 0xa56e, 0x563c, 0x1, 0x1);
        gbc.writeMem(0x3438, { 0xde, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xbac1);
        EXPECT(gbc.pc(), 0x343a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 000B
        gbc.setState(0x8c16, 0x9296, 0xc530, 0x5327, 0x65c8, 0xf09c, 0x0, 0x1);
        gbc.writeMem(0x8c16, { 0xde, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9296);
        EXPECT(gbc.pc(), 0x8c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c16), 0xde);
        EXPECT(gbc.readMem(0x8c17), 0x36);
        // DE 000D
        gbc.setState(0xb83, 0xac4c, 0x1360, 0x34e1, 0x991d, 0x2568, 0x1, 0x0);
        gbc.writeMem(0xb83, { 0xde, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xac4c);
        EXPECT(gbc.pc(), 0xb85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 000E
        gbc.setState(0xa132, 0x8c10, 0xdf10, 0x217f, 0xa9cc, 0x484a, 0x1, 0x1);
        gbc.writeMem(0xa132, { 0xde, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8c10);
        EXPECT(gbc.pc(), 0xa134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa132), 0xde);
        EXPECT(gbc.readMem(0xa133), 0xa2);
        // DE 000F
        gbc.setState(0xcd3a, 0x35b7, 0x4010, 0x5398, 0x3bea, 0x2d87, 0x0, 0x1);
        gbc.writeMem(0xcd3a, { 0xde, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x35b7);
        EXPECT(gbc.pc(), 0xcd3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3a), 0xde);
        EXPECT(gbc.readMem(0xcd3b), 0x18);
        // DE 0010
        gbc.setState(0xbde5, 0x977a, 0xef30, 0x1dcd, 0xd28d, 0x7c1, 0x0, 0x1);
        gbc.writeMem(0xbde5, { 0xde, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x977a);
        EXPECT(gbc.pc(), 0xbde7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde5), 0xde);
        EXPECT(gbc.readMem(0xbde6), 0xa4);
        // DE 0011
        gbc.setState(0xcda8, 0xc56a, 0xa3a0, 0xeb25, 0x3cde, 0xca4f, 0x0, 0x1);
        gbc.writeMem(0xcda8, { 0xde, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc56a);
        EXPECT(gbc.pc(), 0xcdaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcda8), 0xde);
        EXPECT(gbc.readMem(0xcda9), 0xed);
        // DE 0012
        gbc.setState(0x8178, 0xd542, 0xa9d0, 0xb6a2, 0xfad7, 0x3343, 0x1, 0x0);
        gbc.writeMem(0x8178, { 0xde, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd542);
        EXPECT(gbc.pc(), 0x817a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8178), 0xde);
        EXPECT(gbc.readMem(0x8179), 0xd8);
        // DE 0013
        gbc.setState(0x74f6, 0xc51, 0x6d30, 0xf0f, 0x5204, 0xa826, 0x1, 0x0);
        gbc.writeMem(0x74f6, { 0xde, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc51);
        EXPECT(gbc.pc(), 0x74f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0014
        gbc.setState(0x59b5, 0x2c8a, 0xa980, 0xe9bc, 0xd340, 0x11d3, 0x0, 0x1);
        gbc.writeMem(0x59b5, { 0xde, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2c8a);
        EXPECT(gbc.pc(), 0x59b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0015
        gbc.setState(0x2151, 0x4e7e, 0x7360, 0x17d3, 0x5609, 0x1e14, 0x0, 0x1);
        gbc.writeMem(0x2151, { 0xde, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4e7e);
        EXPECT(gbc.pc(), 0x2153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0016
        gbc.setState(0xd767, 0xe94c, 0xb630, 0xd8f9, 0xd093, 0xd38d, 0x1, 0x1);
        gbc.writeMem(0xd767, { 0xde, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe94c);
        EXPECT(gbc.pc(), 0xd769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd767), 0xde);
        EXPECT(gbc.readMem(0xd768), 0xf7);
        // DE 0017
        gbc.setState(0x2a28, 0x5f38, 0x8b00, 0xd342, 0x50e1, 0xd0bf, 0x0, 0x0);
        gbc.writeMem(0x2a28, { 0xde, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5f38);
        EXPECT(gbc.pc(), 0x2a2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0018
        gbc.setState(0xe5a6, 0xb04c, 0x78c0, 0xa73d, 0x7df, 0xa85a, 0x1, 0x0);
        gbc.writeMem(0xe5a6, { 0xde, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb04c);
        EXPECT(gbc.pc(), 0xe5a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a6), 0xde);
        EXPECT(gbc.readMem(0xe5a7), 0xfd);
        // DE 0019
        gbc.setState(0x6d8a, 0x903a, 0x4760, 0x812a, 0x5bd0, 0x8eb4, 0x1, 0x0);
        gbc.writeMem(0x6d8a, { 0xde, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x903a);
        EXPECT(gbc.pc(), 0x6d8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 001A
        gbc.setState(0xc6c, 0xf291, 0x13a0, 0xd5a5, 0xe4bb, 0x2e4e, 0x1, 0x0);
        gbc.writeMem(0xc6c, { 0xde, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf291);
        EXPECT(gbc.pc(), 0xc6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 001B
        gbc.setState(0x362, 0xb020, 0x8b60, 0xfd7d, 0xec26, 0xd746, 0x0, 0x0);
        gbc.writeMem(0x362, { 0xde, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb020);
        EXPECT(gbc.pc(), 0x364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 001C
        gbc.setState(0x2bcf, 0xd961, 0x1e60, 0x1d33, 0x8fc, 0x7395, 0x1, 0x1);
        gbc.writeMem(0x2bcf, { 0xde, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd961);
        EXPECT(gbc.pc(), 0x2bd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 001D
        gbc.setState(0x259b, 0xa66a, 0x610, 0xc0bc, 0xc7f5, 0xb05c, 0x0, 0x1);
        gbc.writeMem(0x259b, { 0xde, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa66a);
        EXPECT(gbc.pc(), 0x259d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 001E
        gbc.setState(0xc79a, 0x2a5f, 0xcc00, 0x2f24, 0x5557, 0x117, 0x0, 0x0);
        gbc.writeMem(0xc79a, { 0xde, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2a5f);
        EXPECT(gbc.pc(), 0xc79c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc79a), 0xde);
        EXPECT(gbc.readMem(0xc79b), 0x8c);
        // DE 0020
        gbc.setState(0x4325, 0xead, 0x830, 0xa7d, 0x6f64, 0x4da2, 0x0, 0x1);
        gbc.writeMem(0x4325, { 0xde, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xead);
        EXPECT(gbc.pc(), 0x4327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0021
        gbc.setState(0x161, 0x25f4, 0xfdb0, 0x12c7, 0xdacd, 0x68c7, 0x0, 0x1);
        gbc.writeMem(0x161, { 0xde, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x25f4);
        EXPECT(gbc.pc(), 0x163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0022
        gbc.setState(0x24be, 0x3e0d, 0xbd20, 0x60e9, 0x5a4d, 0x518, 0x0, 0x0);
        gbc.writeMem(0x24be, { 0xde, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3e0d);
        EXPECT(gbc.pc(), 0x24c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0023
        gbc.setState(0x344c, 0x41d, 0x6fe0, 0xc93f, 0xc3e2, 0xb300, 0x0, 0x0);
        gbc.writeMem(0x344c, { 0xde, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x41d);
        EXPECT(gbc.pc(), 0x344e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0024
        gbc.setState(0x39d1, 0xeb09, 0xb1e0, 0x6de1, 0x420f, 0x4542, 0x0, 0x0);
        gbc.writeMem(0x39d1, { 0xde, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xeb09);
        EXPECT(gbc.pc(), 0x39d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0025
        gbc.setState(0x2445, 0x3443, 0xead0, 0xbfb7, 0x2d3a, 0x240e, 0x1, 0x1);
        gbc.writeMem(0x2445, { 0xde, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3443);
        EXPECT(gbc.pc(), 0x2447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0026
        gbc.setState(0x85b6, 0x63d3, 0xed40, 0x7c83, 0x80a8, 0xde44, 0x0, 0x1);
        gbc.writeMem(0x85b6, { 0xde, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x63d3);
        EXPECT(gbc.pc(), 0x85b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b6), 0xde);
        EXPECT(gbc.readMem(0x85b7), 0x7e);
        // DE 0027
        gbc.setState(0x7c1e, 0xe134, 0x4080, 0x5a4e, 0x6d16, 0x7a75, 0x0, 0x0);
        gbc.writeMem(0x7c1e, { 0xde, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe134);
        EXPECT(gbc.pc(), 0x7c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0028
        gbc.setState(0xbd77, 0xb38d, 0x84c0, 0x9f56, 0x8659, 0x51dd, 0x0, 0x1);
        gbc.writeMem(0xbd77, { 0xde, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb38d);
        EXPECT(gbc.pc(), 0xbd79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd77), 0xde);
        EXPECT(gbc.readMem(0xbd78), 0xf7);
        // DE 0029
        gbc.setState(0x331a, 0xf21b, 0x3bd0, 0x6604, 0x864b, 0x5f9d, 0x1, 0x1);
        gbc.writeMem(0x331a, { 0xde, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf21b);
        EXPECT(gbc.pc(), 0x331c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 002A
        gbc.setState(0x4530, 0x8e18, 0x4090, 0x9bd1, 0x62c7, 0x2654, 0x0, 0x0);
        gbc.writeMem(0x4530, { 0xde, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8e18);
        EXPECT(gbc.pc(), 0x4532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 002B
        gbc.setState(0x44d4, 0x2b55, 0x1e70, 0xf0eb, 0x3e5c, 0xbcf9, 0x0, 0x0);
        gbc.writeMem(0x44d4, { 0xde, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2b55);
        EXPECT(gbc.pc(), 0x44d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 002C
        gbc.setState(0xab82, 0x2a43, 0x580, 0xef45, 0x5a4, 0x7661, 0x0, 0x0);
        gbc.writeMem(0xab82, { 0xde, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2a43);
        EXPECT(gbc.pc(), 0xab84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab82), 0xde);
        EXPECT(gbc.readMem(0xab83), 0xc3);
        // DE 002D
        gbc.setState(0xee45, 0xa56a, 0xf960, 0x9b34, 0xe443, 0xb47e, 0x1, 0x1);
        gbc.writeMem(0xee45, { 0xde, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa56a);
        EXPECT(gbc.pc(), 0xee47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee45), 0xde);
        EXPECT(gbc.readMem(0xee46), 0x69);
        // DE 002E
        gbc.setState(0x2234, 0x5839, 0xa0a0, 0x1dd9, 0xbfd6, 0x8d08, 0x1, 0x1);
        gbc.writeMem(0x2234, { 0xde, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5839);
        EXPECT(gbc.pc(), 0x2236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 002F
        gbc.setState(0xa664, 0xf3b6, 0x4520, 0xeb8f, 0x9450, 0xf616, 0x0, 0x0);
        gbc.writeMem(0xa664, { 0xde, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf3b6);
        EXPECT(gbc.pc(), 0xa666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa664), 0xde);
        EXPECT(gbc.readMem(0xa665), 0x86);
        // DE 0030
        gbc.setState(0x1939, 0xd0d8, 0xecd0, 0x3aa8, 0x5bed, 0xd497, 0x1, 0x1);
        gbc.writeMem(0x1939, { 0xde, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd0d8);
        EXPECT(gbc.pc(), 0x193b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0031
        gbc.setState(0x4876, 0x7fa8, 0x7e30, 0xc5e9, 0x9cb1, 0x64a9, 0x1, 0x1);
        gbc.writeMem(0x4876, { 0xde, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7fa8);
        EXPECT(gbc.pc(), 0x4878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0032
        gbc.setState(0x4a57, 0xf0ae, 0xa300, 0xd139, 0x700, 0xce78, 0x0, 0x1);
        gbc.writeMem(0x4a57, { 0xde, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf0ae);
        EXPECT(gbc.pc(), 0x4a59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0033
        gbc.setState(0x9fb, 0x27a2, 0x4fd0, 0xcd97, 0x7add, 0xbec2, 0x0, 0x1);
        gbc.writeMem(0x9fb, { 0xde, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x27a2);
        EXPECT(gbc.pc(), 0x9fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0034
        gbc.setState(0x80f1, 0x525, 0x9e90, 0xc459, 0xc1e4, 0xeaf3, 0x1, 0x0);
        gbc.writeMem(0x80f1, { 0xde, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x525);
        EXPECT(gbc.pc(), 0x80f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f1), 0xde);
        EXPECT(gbc.readMem(0x80f2), 0x15);
        // DE 0035
        gbc.setState(0x6b4b, 0x28f, 0x15c0, 0xfdfe, 0x851e, 0x6e29, 0x1, 0x0);
        gbc.writeMem(0x6b4b, { 0xde, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x28f);
        EXPECT(gbc.pc(), 0x6b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0036
        gbc.setState(0x4aae, 0xb504, 0x3640, 0x3ba4, 0x505e, 0xb90a, 0x1, 0x1);
        gbc.writeMem(0x4aae, { 0xde, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb504);
        EXPECT(gbc.pc(), 0x4ab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0038
        gbc.setState(0x59c4, 0x8c4c, 0x17e0, 0x2921, 0x215b, 0xaed6, 0x0, 0x1);
        gbc.writeMem(0x59c4, { 0xde, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8c4c);
        EXPECT(gbc.pc(), 0x59c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0039
        gbc.setState(0xa65a, 0x1063, 0x9a70, 0x9afc, 0xee68, 0x9269, 0x0, 0x1);
        gbc.writeMem(0xa65a, { 0xde, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1063);
        EXPECT(gbc.pc(), 0xa65c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa65a), 0xde);
        EXPECT(gbc.readMem(0xa65b), 0x19);
        // DE 003A
        gbc.setState(0x2560, 0x9d89, 0x3b10, 0x579c, 0x919b, 0xeaeb, 0x1, 0x0);
        gbc.writeMem(0x2560, { 0xde, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9d89);
        EXPECT(gbc.pc(), 0x2562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 003B
        gbc.setState(0x5a65, 0x19eb, 0x77a0, 0x2a01, 0xd2b0, 0xeed4, 0x0, 0x0);
        gbc.writeMem(0x5a65, { 0xde, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x19eb);
        EXPECT(gbc.pc(), 0x5a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 003D
        gbc.setState(0x5263, 0x6d23, 0x4150, 0x8290, 0x595a, 0xdf44, 0x0, 0x0);
        gbc.writeMem(0x5263, { 0xde, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6d23);
        EXPECT(gbc.pc(), 0x5265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 003E
        gbc.setState(0x3e77, 0x3800, 0xfe0, 0x12c3, 0x9d74, 0x35b6, 0x0, 0x1);
        gbc.writeMem(0x3e77, { 0xde, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3800);
        EXPECT(gbc.pc(), 0x3e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 003F
        gbc.setState(0xd8be, 0xc45b, 0xb260, 0x8c8a, 0x5213, 0x3ac4, 0x0, 0x1);
        gbc.writeMem(0xd8be, { 0xde, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc45b);
        EXPECT(gbc.pc(), 0xd8c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8be), 0xde);
        EXPECT(gbc.readMem(0xd8bf), 0x7f);
        // DE 0040
        gbc.setState(0xc834, 0xe2d5, 0x4fb0, 0x87c0, 0x778a, 0xb518, 0x1, 0x1);
        gbc.writeMem(0xc834, { 0xde, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe2d5);
        EXPECT(gbc.pc(), 0xc836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc834), 0xde);
        EXPECT(gbc.readMem(0xc835), 0xd7);
        // DE 0041
        gbc.setState(0xada1, 0xa24f, 0x4370, 0x3423, 0xee67, 0x7a59, 0x0, 0x0);
        gbc.writeMem(0xada1, { 0xde, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa24f);
        EXPECT(gbc.pc(), 0xada3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada1), 0xde);
        EXPECT(gbc.readMem(0xada2), 0x20);
        // DE 0042
        gbc.setState(0x5538, 0x5a12, 0x8050, 0x8334, 0xc7d5, 0x216f, 0x0, 0x1);
        gbc.writeMem(0x5538, { 0xde, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5a12);
        EXPECT(gbc.pc(), 0x553a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0043
        gbc.setState(0x7998, 0x2034, 0xf220, 0xa3c8, 0x8bab, 0x191d, 0x1, 0x1);
        gbc.writeMem(0x7998, { 0xde, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2034);
        EXPECT(gbc.pc(), 0x799a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0044
        gbc.setState(0x3ca4, 0xa19a, 0x9b40, 0xb920, 0x36ac, 0xb2a3, 0x1, 0x1);
        gbc.writeMem(0x3ca4, { 0xde, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa19a);
        EXPECT(gbc.pc(), 0x3ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0045
        gbc.setState(0xe1f9, 0xed52, 0x9fa0, 0xe931, 0x2114, 0xbe96, 0x1, 0x0);
        gbc.writeMem(0xe1f9, { 0xde, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xed52);
        EXPECT(gbc.pc(), 0xe1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f9), 0xde);
        EXPECT(gbc.readMem(0xe1fa), 0xa6);
        // DE 0046
        gbc.setState(0xb259, 0x68aa, 0x5200, 0xf29e, 0x8637, 0x2917, 0x1, 0x1);
        gbc.writeMem(0xb259, { 0xde, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x68aa);
        EXPECT(gbc.pc(), 0xb25b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb259), 0xde);
        EXPECT(gbc.readMem(0xb25a), 0xda);
        // DE 0047
        gbc.setState(0x59ba, 0x5c7c, 0xeae0, 0x5219, 0x1999, 0xe357, 0x1, 0x1);
        gbc.writeMem(0x59ba, { 0xde, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5c7c);
        EXPECT(gbc.pc(), 0x59bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0048
        gbc.setState(0x87d6, 0xbcb9, 0x3370, 0x45d4, 0x8e64, 0xa7c, 0x1, 0x0);
        gbc.writeMem(0x87d6, { 0xde, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbcb9);
        EXPECT(gbc.pc(), 0x87d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d6), 0xde);
        EXPECT(gbc.readMem(0x87d7), 0x4a);
        // DE 0049
        gbc.setState(0xdc82, 0xbb84, 0x8620, 0x3868, 0x3a4c, 0x6c16, 0x1, 0x0);
        gbc.writeMem(0xdc82, { 0xde, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbb84);
        EXPECT(gbc.pc(), 0xdc84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc82), 0xde);
        EXPECT(gbc.readMem(0xdc83), 0xc6);
        // DE 004A
        gbc.setState(0x7b76, 0x4a80, 0x4930, 0xf17, 0xd5dc, 0x18d0, 0x0, 0x0);
        gbc.writeMem(0x7b76, { 0xde, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4a80);
        EXPECT(gbc.pc(), 0x7b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 004B
        gbc.setState(0x8b54, 0x903a, 0xf330, 0xfaa, 0x3177, 0xa864, 0x0, 0x0);
        gbc.writeMem(0x8b54, { 0xde, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x903a);
        EXPECT(gbc.pc(), 0x8b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b54), 0xde);
        EXPECT(gbc.readMem(0x8b55), 0xaa);
        // DE 004C
        gbc.setState(0xc34b, 0x5d30, 0x5ad0, 0xc4df, 0xb83f, 0x89ed, 0x1, 0x0);
        gbc.writeMem(0xc34b, { 0xde, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5d30);
        EXPECT(gbc.pc(), 0xc34d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc34b), 0xde);
        EXPECT(gbc.readMem(0xc34c), 0xed);
        // DE 004D
        gbc.setState(0x9d3f, 0x53c4, 0x9aa0, 0xfd04, 0x8f32, 0xc37a, 0x0, 0x0);
        gbc.writeMem(0x9d3f, { 0xde, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x53c4);
        EXPECT(gbc.pc(), 0x9d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d3f), 0xde);
        EXPECT(gbc.readMem(0x9d40), 0xe1);
        // DE 004E
        gbc.setState(0x1b7f, 0xd077, 0x3ff0, 0x1e9b, 0xd33b, 0xec8a, 0x1, 0x0);
        gbc.writeMem(0x1b7f, { 0xde, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd077);
        EXPECT(gbc.pc(), 0x1b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 004F
        gbc.setState(0xa922, 0xce2d, 0xd7c0, 0x69ab, 0x564a, 0x46de, 0x0, 0x0);
        gbc.writeMem(0xa922, { 0xde, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xce2d);
        EXPECT(gbc.pc(), 0xa924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa922), 0xde);
        EXPECT(gbc.readMem(0xa923), 0xd3);
        // DE 0050
        gbc.setState(0xab5a, 0x6cdb, 0x2dd0, 0xabd6, 0xba99, 0x9f2a, 0x0, 0x0);
        gbc.writeMem(0xab5a, { 0xde, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6cdb);
        EXPECT(gbc.pc(), 0xab5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab5a), 0xde);
        EXPECT(gbc.readMem(0xab5b), 0x45);
        // DE 0051
        gbc.setState(0x99ef, 0x82ce, 0x60f0, 0x286, 0x8aba, 0x5647, 0x0, 0x0);
        gbc.writeMem(0x99ef, { 0xde, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x82ce);
        EXPECT(gbc.pc(), 0x99f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99ef), 0xde);
        EXPECT(gbc.readMem(0x99f0), 0x90);
        // DE 0052
        gbc.setState(0x8ba1, 0x3eaf, 0x3920, 0xcce0, 0xa661, 0xe25a, 0x0, 0x1);
        gbc.writeMem(0x8ba1, { 0xde, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3eaf);
        EXPECT(gbc.pc(), 0x8ba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba1), 0xde);
        EXPECT(gbc.readMem(0x8ba2), 0xeb);
        // DE 0053
        gbc.setState(0xeda9, 0x8af1, 0xd750, 0x6514, 0x7555, 0x536, 0x0, 0x1);
        gbc.writeMem(0xeda9, { 0xde, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8af1);
        EXPECT(gbc.pc(), 0xedab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda9), 0xde);
        EXPECT(gbc.readMem(0xedaa), 0x12);
        // DE 0054
        gbc.setState(0x6b98, 0x7672, 0xc0f0, 0xd0e6, 0x790f, 0x6d02, 0x0, 0x0);
        gbc.writeMem(0x6b98, { 0xde, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7672);
        EXPECT(gbc.pc(), 0x6b9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0055
        gbc.setState(0x68be, 0xaa96, 0xd050, 0x5ce2, 0x65ac, 0x5023, 0x0, 0x1);
        gbc.writeMem(0x68be, { 0xde, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xaa96);
        EXPECT(gbc.pc(), 0x68c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0056
        gbc.setState(0x235, 0x8176, 0x3dd0, 0x90a5, 0x6531, 0xbda4, 0x0, 0x1);
        gbc.writeMem(0x235, { 0xde, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8176);
        EXPECT(gbc.pc(), 0x237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0057
        gbc.setState(0xe67b, 0x5dd8, 0xd980, 0xfef6, 0x2df7, 0xad36, 0x0, 0x1);
        gbc.writeMem(0xe67b, { 0xde, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5dd8);
        EXPECT(gbc.pc(), 0xe67d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe67b), 0xde);
        EXPECT(gbc.readMem(0xe67c), 0xbc);
        // DE 0058
        gbc.setState(0xbf92, 0xc0a1, 0xb710, 0x18ff, 0xf1f5, 0xa44e, 0x0, 0x0);
        gbc.writeMem(0xbf92, { 0xde, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc0a1);
        EXPECT(gbc.pc(), 0xbf94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf92), 0xde);
        EXPECT(gbc.readMem(0xbf93), 0x9d);
        // DE 0059
        gbc.setState(0x886f, 0xa5a9, 0xbc60, 0x4601, 0xea81, 0x3966, 0x0, 0x0);
        gbc.writeMem(0x886f, { 0xde, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa5a9);
        EXPECT(gbc.pc(), 0x8871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886f), 0xde);
        EXPECT(gbc.readMem(0x8870), 0xb3);
        // DE 005A
        gbc.setState(0x9d91, 0x299f, 0xd830, 0x27eb, 0xfe20, 0xea42, 0x1, 0x1);
        gbc.writeMem(0x9d91, { 0xde, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x299f);
        EXPECT(gbc.pc(), 0x9d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d91), 0xde);
        EXPECT(gbc.readMem(0x9d92), 0x15);
        // DE 005B
        gbc.setState(0x98f3, 0xd7e4, 0x1460, 0xbb48, 0x3cdf, 0x612b, 0x1, 0x0);
        gbc.writeMem(0x98f3, { 0xde, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd7e4);
        EXPECT(gbc.pc(), 0x98f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f3), 0xde);
        EXPECT(gbc.readMem(0x98f4), 0xa3);
        // DE 005C
        gbc.setState(0x3031, 0x87c0, 0x9bc0, 0xb279, 0xb709, 0x9137, 0x1, 0x0);
        gbc.writeMem(0x3031, { 0xde, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x87c0);
        EXPECT(gbc.pc(), 0x3033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 005D
        gbc.setState(0x6492, 0x31b9, 0xe110, 0x444a, 0xa775, 0xd597, 0x1, 0x1);
        gbc.writeMem(0x6492, { 0xde, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x31b9);
        EXPECT(gbc.pc(), 0x6494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 005F
        gbc.setState(0x55e4, 0x35c9, 0xa430, 0xa71d, 0x87d7, 0x5ba6, 0x0, 0x1);
        gbc.writeMem(0x55e4, { 0xde, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x35c9);
        EXPECT(gbc.pc(), 0x55e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0060
        gbc.setState(0x6985, 0x2be2, 0x7e0, 0xedf0, 0xf7bd, 0xc670, 0x1, 0x1);
        gbc.writeMem(0x6985, { 0xde, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2be2);
        EXPECT(gbc.pc(), 0x6987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0061
        gbc.setState(0x369, 0xaf29, 0x79b0, 0xd6ad, 0xe0cc, 0xa592, 0x0, 0x0);
        gbc.writeMem(0x369, { 0xde, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xaf29);
        EXPECT(gbc.pc(), 0x36b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0062
        gbc.setState(0x8f6, 0x5912, 0xadb0, 0x1584, 0x2397, 0x64db, 0x1, 0x0);
        gbc.writeMem(0x8f6, { 0xde, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5912);
        EXPECT(gbc.pc(), 0x8f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0063
        gbc.setState(0x5b28, 0xfddf, 0x28d0, 0x8f91, 0x149c, 0x5a8d, 0x1, 0x1);
        gbc.writeMem(0x5b28, { 0xde, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xfddf);
        EXPECT(gbc.pc(), 0x5b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0064
        gbc.setState(0x5df1, 0xb8be, 0x87d0, 0xe672, 0xde33, 0x5a88, 0x0, 0x0);
        gbc.writeMem(0x5df1, { 0xde, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb8be);
        EXPECT(gbc.pc(), 0x5df3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0065
        gbc.setState(0x7f0c, 0xa1fb, 0xa7c0, 0x117a, 0xc804, 0x46cf, 0x1, 0x0);
        gbc.writeMem(0x7f0c, { 0xde, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa1fb);
        EXPECT(gbc.pc(), 0x7f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0066
        gbc.setState(0xacc3, 0x1f97, 0xbcb0, 0x9199, 0xdd68, 0xdc77, 0x0, 0x0);
        gbc.writeMem(0xacc3, { 0xde, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1f97);
        EXPECT(gbc.pc(), 0xacc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc3), 0xde);
        EXPECT(gbc.readMem(0xacc4), 0x47);
        // DE 0068
        gbc.setState(0x36aa, 0xa642, 0x78a0, 0x39d1, 0x5937, 0xcaec, 0x1, 0x0);
        gbc.writeMem(0x36aa, { 0xde, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa642);
        EXPECT(gbc.pc(), 0x36ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0069
        gbc.setState(0xbb5, 0xebe3, 0x92a0, 0x1e69, 0xf98d, 0xb06d, 0x1, 0x1);
        gbc.writeMem(0xbb5, { 0xde, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xebe3);
        EXPECT(gbc.pc(), 0xbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 006A
        gbc.setState(0x486c, 0x2656, 0x6770, 0xb39b, 0x1b6d, 0xeeaf, 0x0, 0x1);
        gbc.writeMem(0x486c, { 0xde, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2656);
        EXPECT(gbc.pc(), 0x486e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 006B
        gbc.setState(0xb7dc, 0x7ef, 0x1f40, 0x947, 0x1bb5, 0xcb9e, 0x1, 0x1);
        gbc.writeMem(0xb7dc, { 0xde, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7ef);
        EXPECT(gbc.pc(), 0xb7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7dc), 0xde);
        EXPECT(gbc.readMem(0xb7dd), 0x28);
        // DE 006C
        gbc.setState(0x5c82, 0xd6b6, 0x140, 0x1851, 0xdc18, 0x717b, 0x0, 0x1);
        gbc.writeMem(0x5c82, { 0xde, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd6b6);
        EXPECT(gbc.pc(), 0x5c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 006D
        gbc.setState(0x634b, 0x38ff, 0x6720, 0x4077, 0x4df9, 0x9bae, 0x1, 0x1);
        gbc.writeMem(0x634b, { 0xde, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x38ff);
        EXPECT(gbc.pc(), 0x634d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 006E
        gbc.setState(0xb909, 0x8a5b, 0xebd0, 0x6a37, 0xdfbe, 0x99f0, 0x1, 0x0);
        gbc.writeMem(0xb909, { 0xde, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8a5b);
        EXPECT(gbc.pc(), 0xb90b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb909), 0xde);
        EXPECT(gbc.readMem(0xb90a), 0x5);
        // DE 006F
        gbc.setState(0xda25, 0x8a70, 0x4620, 0x234, 0xa83b, 0x7e85, 0x0, 0x0);
        gbc.writeMem(0xda25, { 0xde, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8a70);
        EXPECT(gbc.pc(), 0xda27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda25), 0xde);
        EXPECT(gbc.readMem(0xda26), 0x9f);
        // DE 0070
        gbc.setState(0x4eaa, 0x796a, 0x6ec0, 0x218c, 0xe3a9, 0x6284, 0x1, 0x1);
        gbc.writeMem(0x4eaa, { 0xde, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x796a);
        EXPECT(gbc.pc(), 0x4eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0071
        gbc.setState(0xefc0, 0xb3de, 0xd3a0, 0xbb1d, 0xc928, 0x1111, 0x0, 0x0);
        gbc.writeMem(0xefc0, { 0xde, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb3de);
        EXPECT(gbc.pc(), 0xefc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc0), 0xde);
        EXPECT(gbc.readMem(0xefc1), 0xab);
        // DE 0072
        gbc.setState(0x3c69, 0xd58a, 0xd360, 0x95a1, 0xdaa9, 0x971e, 0x0, 0x1);
        gbc.writeMem(0x3c69, { 0xde, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd58a);
        EXPECT(gbc.pc(), 0x3c6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0074
        gbc.setState(0x74d5, 0xd2bc, 0xfb90, 0x3db6, 0x4042, 0xbd16, 0x1, 0x1);
        gbc.writeMem(0x74d5, { 0xde, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd2bc);
        EXPECT(gbc.pc(), 0x74d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0075
        gbc.setState(0x4968, 0x93ba, 0x84b0, 0x5714, 0xd68f, 0x979f, 0x0, 0x1);
        gbc.writeMem(0x4968, { 0xde, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x93ba);
        EXPECT(gbc.pc(), 0x496a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0076
        gbc.setState(0x3a97, 0xc361, 0xd100, 0xb67d, 0x50bd, 0xdcf7, 0x1, 0x0);
        gbc.writeMem(0x3a97, { 0xde, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc361);
        EXPECT(gbc.pc(), 0x3a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0078
        gbc.setState(0xbc5d, 0xe2c9, 0x17d0, 0xcf5c, 0xf039, 0x77ee, 0x0, 0x1);
        gbc.writeMem(0xbc5d, { 0xde, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe2c9);
        EXPECT(gbc.pc(), 0xbc5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc5d), 0xde);
        EXPECT(gbc.readMem(0xbc5e), 0xb);
        // DE 0079
        gbc.setState(0x314c, 0xe50d, 0x8800, 0xd856, 0x43d0, 0xbeec, 0x1, 0x0);
        gbc.writeMem(0x314c, { 0xde, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe50d);
        EXPECT(gbc.pc(), 0x314e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 007A
        gbc.setState(0xc74f, 0xd72d, 0x1e80, 0x216a, 0x3c1d, 0xd986, 0x1, 0x0);
        gbc.writeMem(0xc74f, { 0xde, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd72d);
        EXPECT(gbc.pc(), 0xc751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc74f), 0xde);
        EXPECT(gbc.readMem(0xc750), 0xb5);
        // DE 007B
        gbc.setState(0x87e7, 0xf555, 0xa140, 0xac0d, 0x7f53, 0x1be9, 0x1, 0x1);
        gbc.writeMem(0x87e7, { 0xde, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf555);
        EXPECT(gbc.pc(), 0x87e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e7), 0xde);
        EXPECT(gbc.readMem(0x87e8), 0xc4);
        // DE 007C
        gbc.setState(0x325f, 0x36fe, 0x2ff0, 0x8998, 0x8682, 0xf0e6, 0x1, 0x1);
        gbc.writeMem(0x325f, { 0xde, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x36fe);
        EXPECT(gbc.pc(), 0x3261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 007D
        gbc.setState(0x6aaa, 0x21db, 0xffa0, 0x1b6b, 0x563f, 0xcf0e, 0x1, 0x1);
        gbc.writeMem(0x6aaa, { 0xde, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x21db);
        EXPECT(gbc.pc(), 0x6aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 007F
        gbc.setState(0x5019, 0x36b3, 0x4cb0, 0x945f, 0x3615, 0x28e6, 0x1, 0x0);
        gbc.writeMem(0x5019, { 0xde, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x36b3);
        EXPECT(gbc.pc(), 0x501b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0080
        gbc.setState(0xdfba, 0xa08e, 0x63d0, 0x7787, 0xbbf7, 0x5753, 0x1, 0x0);
        gbc.writeMem(0xdfba, { 0xde, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa08e);
        EXPECT(gbc.pc(), 0xdfbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfba), 0xde);
        EXPECT(gbc.readMem(0xdfbb), 0xa1);
        // DE 0081
        gbc.setState(0x2731, 0x3fb9, 0x300, 0x5c15, 0x9ff, 0xdc57, 0x0, 0x1);
        gbc.writeMem(0x2731, { 0xde, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3fb9);
        EXPECT(gbc.pc(), 0x2733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0082
        gbc.setState(0x1769, 0xbb0e, 0xed40, 0xd4e9, 0x5de4, 0x25a8, 0x1, 0x0);
        gbc.writeMem(0x1769, { 0xde, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbb0e);
        EXPECT(gbc.pc(), 0x176b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0083
        gbc.setState(0xc939, 0xa395, 0x22c0, 0x6f4d, 0x74ca, 0x2043, 0x1, 0x1);
        gbc.writeMem(0xc939, { 0xde, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa395);
        EXPECT(gbc.pc(), 0xc93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc939), 0xde);
        EXPECT(gbc.readMem(0xc93a), 0xf5);
        // DE 0084
        gbc.setState(0x32a3, 0x36a7, 0xcd00, 0x55b9, 0x1903, 0xa0f5, 0x0, 0x1);
        gbc.writeMem(0x32a3, { 0xde, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x36a7);
        EXPECT(gbc.pc(), 0x32a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0085
        gbc.setState(0xd595, 0x76ce, 0xa050, 0x1306, 0xbe81, 0x55, 0x0, 0x1);
        gbc.writeMem(0xd595, { 0xde, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x76ce);
        EXPECT(gbc.pc(), 0xd597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd595), 0xde);
        EXPECT(gbc.readMem(0xd596), 0xaa);
        // DE 0086
        gbc.setState(0x5d5, 0xd481, 0xf50, 0x923c, 0xf0a6, 0x4039, 0x0, 0x1);
        gbc.writeMem(0x5d5, { 0xde, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd481);
        EXPECT(gbc.pc(), 0x5d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0087
        gbc.setState(0x3815, 0xeffc, 0x6f40, 0x4927, 0x317f, 0xb808, 0x1, 0x1);
        gbc.writeMem(0x3815, { 0xde, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xeffc);
        EXPECT(gbc.pc(), 0x3817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0088
        gbc.setState(0xb029, 0x75de, 0xb110, 0x5909, 0xe1f9, 0xd6a7, 0x0, 0x0);
        gbc.writeMem(0xb029, { 0xde, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x75de);
        EXPECT(gbc.pc(), 0xb02b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb029), 0xde);
        EXPECT(gbc.readMem(0xb02a), 0x29);
        // DE 0089
        gbc.setState(0x3fa1, 0x5c26, 0xd280, 0xce36, 0xbc26, 0xf753, 0x0, 0x0);
        gbc.writeMem(0x3fa1, { 0xde, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5c26);
        EXPECT(gbc.pc(), 0x3fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 008B
        gbc.setState(0x8994, 0x828b, 0x8da0, 0xb5cd, 0x78a0, 0x89e, 0x1, 0x0);
        gbc.writeMem(0x8994, { 0xde, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x828b);
        EXPECT(gbc.pc(), 0x8996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8994), 0xde);
        EXPECT(gbc.readMem(0x8995), 0x9b);
        // DE 008C
        gbc.setState(0x2858, 0x1bac, 0x75c0, 0x12c7, 0x4575, 0xe786, 0x0, 0x0);
        gbc.writeMem(0x2858, { 0xde, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1bac);
        EXPECT(gbc.pc(), 0x285a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 008D
        gbc.setState(0x6214, 0x7731, 0x7f20, 0x57d7, 0x5ec0, 0x86bc, 0x1, 0x1);
        gbc.writeMem(0x6214, { 0xde, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7731);
        EXPECT(gbc.pc(), 0x6216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 008E
        gbc.setState(0xa6a4, 0xba5a, 0x5d90, 0x650d, 0xc149, 0x3967, 0x0, 0x0);
        gbc.writeMem(0xa6a4, { 0xde, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xba5a);
        EXPECT(gbc.pc(), 0xa6a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a4), 0xde);
        EXPECT(gbc.readMem(0xa6a5), 0x21);
        // DE 0090
        gbc.setState(0x924e, 0xef4a, 0x5520, 0xec20, 0x3321, 0xc393, 0x1, 0x0);
        gbc.writeMem(0x924e, { 0xde, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xef4a);
        EXPECT(gbc.pc(), 0x9250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x924e), 0xde);
        EXPECT(gbc.readMem(0x924f), 0x6b);
        // DE 0091
        gbc.setState(0x9a52, 0xe670, 0x3160, 0x2fb5, 0xc32, 0xb65b, 0x0, 0x1);
        gbc.writeMem(0x9a52, { 0xde, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe670);
        EXPECT(gbc.pc(), 0x9a54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a52), 0xde);
        EXPECT(gbc.readMem(0x9a53), 0x31);
        // DE 0092
        gbc.setState(0x8bf4, 0xe06b, 0x62e0, 0xdbe6, 0x911a, 0xac9e, 0x1, 0x0);
        gbc.writeMem(0x8bf4, { 0xde, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe06b);
        EXPECT(gbc.pc(), 0x8bf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf4), 0xde);
        EXPECT(gbc.readMem(0x8bf5), 0xe8);
        // DE 0093
        gbc.setState(0xe407, 0xd2ca, 0x82d0, 0x4df8, 0xc6bd, 0xa78e, 0x0, 0x0);
        gbc.writeMem(0xe407, { 0xde, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd2ca);
        EXPECT(gbc.pc(), 0xe409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe407), 0xde);
        EXPECT(gbc.readMem(0xe408), 0x2c);
        // DE 0094
        gbc.setState(0xa97a, 0x6b0, 0x2d60, 0xb094, 0x4070, 0x2a2f, 0x1, 0x0);
        gbc.writeMem(0xa97a, { 0xde, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6b0);
        EXPECT(gbc.pc(), 0xa97c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa97a), 0xde);
        EXPECT(gbc.readMem(0xa97b), 0xa2);
        // DE 0095
        gbc.setState(0x59d3, 0xeb71, 0x9520, 0x100c, 0x5b1d, 0x3f80, 0x0, 0x1);
        gbc.writeMem(0x59d3, { 0xde, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xeb71);
        EXPECT(gbc.pc(), 0x59d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0096
        gbc.setState(0x4646, 0x64cf, 0x3930, 0xf868, 0xb830, 0x7acf, 0x0, 0x0);
        gbc.writeMem(0x4646, { 0xde, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x64cf);
        EXPECT(gbc.pc(), 0x4648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0097
        gbc.setState(0xcf3f, 0xb931, 0x3fb0, 0xa70e, 0x394f, 0xfe34, 0x0, 0x1);
        gbc.writeMem(0xcf3f, { 0xde, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb931);
        EXPECT(gbc.pc(), 0xcf41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf3f), 0xde);
        EXPECT(gbc.readMem(0xcf40), 0x6f);
        // DE 0098
        gbc.setState(0xb1e2, 0x1f5b, 0xeef0, 0xf32e, 0x39fe, 0x964a, 0x1, 0x0);
        gbc.writeMem(0xb1e2, { 0xde, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1f5b);
        EXPECT(gbc.pc(), 0xb1e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1e2), 0xde);
        EXPECT(gbc.readMem(0xb1e3), 0x8b);
        // DE 0099
        gbc.setState(0x4cf9, 0x4574, 0x62d0, 0x3ee5, 0x1b90, 0xeaa5, 0x0, 0x1);
        gbc.writeMem(0x4cf9, { 0xde, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4574);
        EXPECT(gbc.pc(), 0x4cfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 009A
        gbc.setState(0x558f, 0x2bf2, 0x8ef0, 0x7cfd, 0x950d, 0xd6fe, 0x0, 0x0);
        gbc.writeMem(0x558f, { 0xde, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2bf2);
        EXPECT(gbc.pc(), 0x5591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 009B
        gbc.setState(0x2424, 0x7b00, 0x57f0, 0xa3c6, 0xecb4, 0xfbb, 0x1, 0x1);
        gbc.writeMem(0x2424, { 0xde, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7b00);
        EXPECT(gbc.pc(), 0x2426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 009C
        gbc.setState(0xb79, 0x2db2, 0xc2e0, 0x14c3, 0x9de1, 0xfad4, 0x1, 0x0);
        gbc.writeMem(0xb79, { 0xde, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2db2);
        EXPECT(gbc.pc(), 0xb7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 009D
        gbc.setState(0xd889, 0x84b1, 0xc580, 0x48f5, 0xd817, 0x5a13, 0x1, 0x0);
        gbc.writeMem(0xd889, { 0xde, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x84b1);
        EXPECT(gbc.pc(), 0xd88b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd889), 0xde);
        EXPECT(gbc.readMem(0xd88a), 0xba);
        // DE 009E
        gbc.setState(0xefff, 0x71b8, 0x86c0, 0xf9a0, 0x5fe9, 0xb779, 0x0, 0x0);
        gbc.writeMem(0xefff, { 0xde, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x71b8);
        EXPECT(gbc.pc(), 0xf001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefff), 0xde);
        EXPECT(gbc.readMem(0xf000), 0x27);
        // DE 009F
        gbc.setState(0x5686, 0xab1b, 0x650, 0x728a, 0x4909, 0x378b, 0x1, 0x0);
        gbc.writeMem(0x5686, { 0xde, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xab1b);
        EXPECT(gbc.pc(), 0x5688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00A0
        gbc.setState(0xe956, 0x550f, 0xe880, 0x9fc, 0x41a3, 0x54d1, 0x1, 0x1);
        gbc.writeMem(0xe956, { 0xde, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x550f);
        EXPECT(gbc.pc(), 0xe958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe956), 0xde);
        EXPECT(gbc.readMem(0xe957), 0x55);
        // DE 00A1
        gbc.setState(0x5eca, 0x6ba0, 0x4700, 0x4402, 0x86a6, 0x9782, 0x0, 0x1);
        gbc.writeMem(0x5eca, { 0xde, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6ba0);
        EXPECT(gbc.pc(), 0x5ecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00A2
        gbc.setState(0x8155, 0x8ea9, 0xd370, 0x5d54, 0x893a, 0x90ee, 0x1, 0x1);
        gbc.writeMem(0x8155, { 0xde, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8ea9);
        EXPECT(gbc.pc(), 0x8157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8155), 0xde);
        EXPECT(gbc.readMem(0x8156), 0x1e);
        // DE 00A3
        gbc.setState(0x998f, 0xda68, 0x4490, 0x2fb0, 0xcf44, 0x2301, 0x0, 0x1);
        gbc.writeMem(0x998f, { 0xde, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xda68);
        EXPECT(gbc.pc(), 0x9991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998f), 0xde);
        EXPECT(gbc.readMem(0x9990), 0xef);
        // DE 00A4
        gbc.setState(0xafb6, 0x665d, 0x6ee0, 0x1c70, 0xc8b0, 0xb5b8, 0x1, 0x1);
        gbc.writeMem(0xafb6, { 0xde, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x665d);
        EXPECT(gbc.pc(), 0xafb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb6), 0xde);
        EXPECT(gbc.readMem(0xafb7), 0x6c);
        // DE 00A5
        gbc.setState(0xb06e, 0xdc92, 0xf980, 0x5ca, 0x5aaa, 0x4de, 0x1, 0x1);
        gbc.writeMem(0xb06e, { 0xde, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xdc92);
        EXPECT(gbc.pc(), 0xb070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb06e), 0xde);
        EXPECT(gbc.readMem(0xb06f), 0x3d);
        // DE 00A6
        gbc.setState(0x2e77, 0xe23d, 0x24e0, 0x8bbf, 0xe52d, 0xe7d8, 0x0, 0x1);
        gbc.writeMem(0x2e77, { 0xde, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe23d);
        EXPECT(gbc.pc(), 0x2e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00A7
        gbc.setState(0xb7e6, 0xb3a3, 0x3b90, 0x7389, 0x216, 0x7f06, 0x0, 0x0);
        gbc.writeMem(0xb7e6, { 0xde, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb3a3);
        EXPECT(gbc.pc(), 0xb7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e6), 0xde);
        EXPECT(gbc.readMem(0xb7e7), 0x58);
        // DE 00A8
        gbc.setState(0x1b16, 0x39b, 0x3d30, 0x4e51, 0x1b08, 0xe9ad, 0x0, 0x0);
        gbc.writeMem(0x1b16, { 0xde, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x39b);
        EXPECT(gbc.pc(), 0x1b18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00A9
        gbc.setState(0x1c6, 0x6896, 0x57e0, 0xccc9, 0x3e48, 0x8cb, 0x1, 0x0);
        gbc.writeMem(0x1c6, { 0xde, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6896);
        EXPECT(gbc.pc(), 0x1c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00AA
        gbc.setState(0x408e, 0xb4ea, 0xcbb0, 0xcc83, 0x3c3c, 0x4b2a, 0x0, 0x1);
        gbc.writeMem(0x408e, { 0xde, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb4ea);
        EXPECT(gbc.pc(), 0x4090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 00AB
        gbc.setState(0x6a38, 0xe052, 0xfe80, 0x7327, 0x3fad, 0x8ea4, 0x0, 0x0);
        gbc.writeMem(0x6a38, { 0xde, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe052);
        EXPECT(gbc.pc(), 0x6a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 00AC
        gbc.setState(0xe4ad, 0x89cc, 0x69e0, 0x1858, 0xbbe, 0x2748, 0x1, 0x0);
        gbc.writeMem(0xe4ad, { 0xde, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x89cc);
        EXPECT(gbc.pc(), 0xe4af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ad), 0xde);
        EXPECT(gbc.readMem(0xe4ae), 0x4c);
        // DE 00AD
        gbc.setState(0x6c7e, 0xb142, 0x3330, 0x6daa, 0x15d9, 0xbf5e, 0x0, 0x0);
        gbc.writeMem(0x6c7e, { 0xde, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb142);
        EXPECT(gbc.pc(), 0x6c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00AE
        gbc.setState(0x9df9, 0x5be, 0x65c0, 0xa5ae, 0x1a0b, 0xd3cd, 0x1, 0x1);
        gbc.writeMem(0x9df9, { 0xde, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5be);
        EXPECT(gbc.pc(), 0x9dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df9), 0xde);
        EXPECT(gbc.readMem(0x9dfa), 0x52);
        // DE 00AF
        gbc.setState(0xb2a1, 0x525b, 0xe4d0, 0xf3ec, 0xb18d, 0xe8c8, 0x1, 0x1);
        gbc.writeMem(0xb2a1, { 0xde, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x525b);
        EXPECT(gbc.pc(), 0xb2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a1), 0xde);
        EXPECT(gbc.readMem(0xb2a2), 0x74);
        // DE 00B0
        gbc.setState(0xc6d1, 0x957f, 0xd490, 0x9ff4, 0xed86, 0x4ab7, 0x0, 0x0);
        gbc.writeMem(0xc6d1, { 0xde, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x957f);
        EXPECT(gbc.pc(), 0xc6d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d1), 0xde);
        EXPECT(gbc.readMem(0xc6d2), 0xca);
        // DE 00B1
        gbc.setState(0x760c, 0x89d6, 0x6420, 0x6255, 0xe956, 0xc55b, 0x0, 0x0);
        gbc.writeMem(0x760c, { 0xde, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x89d6);
        EXPECT(gbc.pc(), 0x760e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00B2
        gbc.setState(0x5043, 0x5446, 0xa4e0, 0x3d08, 0xc183, 0xdb78, 0x1, 0x0);
        gbc.writeMem(0x5043, { 0xde, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5446);
        EXPECT(gbc.pc(), 0x5045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 00B3
        gbc.setState(0x6f9c, 0xca2c, 0xd950, 0x4bf1, 0x5f13, 0xad26, 0x0, 0x0);
        gbc.writeMem(0x6f9c, { 0xde, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xca2c);
        EXPECT(gbc.pc(), 0x6f9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 00B4
        gbc.setState(0x2ca1, 0x823c, 0xeb20, 0xcb62, 0xb987, 0x600e, 0x0, 0x0);
        gbc.writeMem(0x2ca1, { 0xde, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x823c);
        EXPECT(gbc.pc(), 0x2ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 00B5
        gbc.setState(0x138, 0xd457, 0xb730, 0xd91f, 0xf3b7, 0x18c, 0x0, 0x1);
        gbc.writeMem(0x138, { 0xde, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd457);
        EXPECT(gbc.pc(), 0x13a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 00B6
        gbc.setState(0xa599, 0xfc62, 0x98a0, 0xe830, 0x2c6a, 0xa57a, 0x0, 0x1);
        gbc.writeMem(0xa599, { 0xde, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xfc62);
        EXPECT(gbc.pc(), 0xa59b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa599), 0xde);
        EXPECT(gbc.readMem(0xa59a), 0x4b);
        // DE 00B7
        gbc.setState(0x8c5d, 0xe7b3, 0x1400, 0x2a30, 0x5154, 0xcee7, 0x1, 0x1);
        gbc.writeMem(0x8c5d, { 0xde, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe7b3);
        EXPECT(gbc.pc(), 0x8c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c5d), 0xde);
        EXPECT(gbc.readMem(0x8c5e), 0x72);
        // DE 00B8
        gbc.setState(0x87f0, 0x9236, 0x6b00, 0x74d2, 0x76c3, 0xbb3a, 0x0, 0x0);
        gbc.writeMem(0x87f0, { 0xde, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9236);
        EXPECT(gbc.pc(), 0x87f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f0), 0xde);
        EXPECT(gbc.readMem(0x87f1), 0x55);
        // DE 00B9
        gbc.setState(0xd3f5, 0x43a5, 0xefb0, 0x9d8d, 0xaa9e, 0xa3a, 0x1, 0x1);
        gbc.writeMem(0xd3f5, { 0xde, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x43a5);
        EXPECT(gbc.pc(), 0xd3f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3f5), 0xde);
        EXPECT(gbc.readMem(0xd3f6), 0xc3);
        // DE 00BA
        gbc.setState(0x3c31, 0x8481, 0x92c0, 0x7047, 0x30ee, 0xe941, 0x0, 0x0);
        gbc.writeMem(0x3c31, { 0xde, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8481);
        EXPECT(gbc.pc(), 0x3c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00BB
        gbc.setState(0xcef7, 0x3ea1, 0x7050, 0x663d, 0xd117, 0x578e, 0x0, 0x1);
        gbc.writeMem(0xcef7, { 0xde, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3ea1);
        EXPECT(gbc.pc(), 0xcef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef7), 0xde);
        EXPECT(gbc.readMem(0xcef8), 0x18);
        // DE 00BC
        gbc.setState(0xe9b0, 0x5d81, 0xe3b0, 0x632e, 0xa95e, 0x976c, 0x0, 0x0);
        gbc.writeMem(0xe9b0, { 0xde, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5d81);
        EXPECT(gbc.pc(), 0xe9b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b0), 0xde);
        EXPECT(gbc.readMem(0xe9b1), 0x81);
        // DE 00BD
        gbc.setState(0x6d6a, 0x72f0, 0x6f70, 0x411, 0xa7c0, 0x61a5, 0x1, 0x1);
        gbc.writeMem(0x6d6a, { 0xde, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x72f0);
        EXPECT(gbc.pc(), 0x6d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 00BE
        gbc.setState(0x5fdb, 0xa01, 0x3390, 0x2c36, 0xba80, 0xa601, 0x1, 0x1);
        gbc.writeMem(0x5fdb, { 0xde, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa01);
        EXPECT(gbc.pc(), 0x5fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00BF
        gbc.setState(0x839, 0xe733, 0x940, 0x89aa, 0x18d6, 0x99b0, 0x1, 0x0);
        gbc.writeMem(0x839, { 0xde, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe733);
        EXPECT(gbc.pc(), 0x83b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00C0
        gbc.setState(0x5a9a, 0x7fed, 0xc9f0, 0x966b, 0x24ff, 0xd3c3, 0x0, 0x0);
        gbc.writeMem(0x5a9a, { 0xde, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7fed);
        EXPECT(gbc.pc(), 0x5a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 00C1
        gbc.setState(0x1f32, 0x1f0e, 0x8980, 0x9948, 0x5d46, 0x55ab, 0x1, 0x1);
        gbc.writeMem(0x1f32, { 0xde, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1f0e);
        EXPECT(gbc.pc(), 0x1f34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00C2
        gbc.setState(0x9384, 0x133d, 0x5a00, 0x471d, 0xee14, 0x8116, 0x0, 0x1);
        gbc.writeMem(0x9384, { 0xde, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x133d);
        EXPECT(gbc.pc(), 0x9386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9384), 0xde);
        EXPECT(gbc.readMem(0x9385), 0xf2);
        // DE 00C3
        gbc.setState(0x4826, 0xaea8, 0x5280, 0x2e93, 0x34de, 0x1235, 0x1, 0x0);
        gbc.writeMem(0x4826, { 0xde, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xaea8);
        EXPECT(gbc.pc(), 0x4828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 00C4
        gbc.setState(0x981d, 0xf7ea, 0x36c0, 0xc891, 0x44d1, 0xb33d, 0x0, 0x0);
        gbc.writeMem(0x981d, { 0xde, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf7ea);
        EXPECT(gbc.pc(), 0x981f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x981d), 0xde);
        EXPECT(gbc.readMem(0x981e), 0x56);
        // DE 00C5
        gbc.setState(0x654a, 0x4f01, 0x3af0, 0x9a6a, 0xdfcb, 0x401, 0x0, 0x0);
        gbc.writeMem(0x654a, { 0xde, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4f01);
        EXPECT(gbc.pc(), 0x654c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00C6
        gbc.setState(0x5a5f, 0xd34b, 0xe8a0, 0xe24e, 0x8ac7, 0xd6d, 0x0, 0x0);
        gbc.writeMem(0x5a5f, { 0xde, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd34b);
        EXPECT(gbc.pc(), 0x5a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 00C7
        gbc.setState(0x5333, 0x1ef3, 0x6760, 0x6cb5, 0xec34, 0xf72f, 0x1, 0x0);
        gbc.writeMem(0x5333, { 0xde, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1ef3);
        EXPECT(gbc.pc(), 0x5335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00C8
        gbc.setState(0x9ba7, 0x8071, 0xa220, 0x2dec, 0xc81e, 0xa7f9, 0x0, 0x1);
        gbc.writeMem(0x9ba7, { 0xde, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8071);
        EXPECT(gbc.pc(), 0x9ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ba7), 0xde);
        EXPECT(gbc.readMem(0x9ba8), 0x63);
        // DE 00CB
        gbc.setState(0x34f5, 0x68ba, 0x1b60, 0x91c9, 0x1caa, 0x887a, 0x0, 0x0);
        gbc.writeMem(0x34f5, { 0xde, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x68ba);
        EXPECT(gbc.pc(), 0x34f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00CC
        gbc.setState(0x8ed7, 0x925d, 0x3480, 0x3016, 0x1f28, 0xbf90, 0x1, 0x0);
        gbc.writeMem(0x8ed7, { 0xde, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x925d);
        EXPECT(gbc.pc(), 0x8ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed7), 0xde);
        EXPECT(gbc.readMem(0x8ed8), 0xf);
        // DE 00CD
        gbc.setState(0xe29, 0x1895, 0x2550, 0x4f47, 0xd541, 0xc08, 0x1, 0x0);
        gbc.writeMem(0xe29, { 0xde, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1895);
        EXPECT(gbc.pc(), 0xe2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00CE
        gbc.setState(0x8320, 0x3cb8, 0xdf20, 0xbf2e, 0x8dd6, 0x1d5, 0x1, 0x1);
        gbc.writeMem(0x8320, { 0xde, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3cb8);
        EXPECT(gbc.pc(), 0x8322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8320), 0xde);
        EXPECT(gbc.readMem(0x8321), 0x16);
        // DE 00CF
        gbc.setState(0x5868, 0x5555, 0xc700, 0x9748, 0x46cb, 0x1df1, 0x0, 0x0);
        gbc.writeMem(0x5868, { 0xde, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5555);
        EXPECT(gbc.pc(), 0x586a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 00D1
        gbc.setState(0x6a87, 0xc9fa, 0x2a50, 0xad0, 0xf756, 0xfca6, 0x1, 0x0);
        gbc.writeMem(0x6a87, { 0xde, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc9fa);
        EXPECT(gbc.pc(), 0x6a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00D2
        gbc.setState(0xa3fb, 0x1b98, 0xa8c0, 0xe1a1, 0x89a6, 0x8bb4, 0x0, 0x1);
        gbc.writeMem(0xa3fb, { 0xde, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1b98);
        EXPECT(gbc.pc(), 0xa3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3fb), 0xde);
        EXPECT(gbc.readMem(0xa3fc), 0x86);
        // DE 00D4
        gbc.setState(0xa05a, 0x161f, 0x4b00, 0x9b6a, 0x7557, 0x435e, 0x1, 0x1);
        gbc.writeMem(0xa05a, { 0xde, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x161f);
        EXPECT(gbc.pc(), 0xa05c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa05a), 0xde);
        EXPECT(gbc.readMem(0xa05b), 0xe0);
        // DE 00D5
        gbc.setState(0x547c, 0x5a89, 0xe760, 0xbe8e, 0xc114, 0x1e4f, 0x0, 0x0);
        gbc.writeMem(0x547c, { 0xde, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5a89);
        EXPECT(gbc.pc(), 0x547e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 00D6
        gbc.setState(0x5af, 0x47df, 0x5b90, 0x7e76, 0x355f, 0x8ac7, 0x1, 0x0);
        gbc.writeMem(0x5af, { 0xde, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x47df);
        EXPECT(gbc.pc(), 0x5b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00D7
        gbc.setState(0x2cf4, 0xba11, 0x9d0, 0xb955, 0x4f2f, 0xcce3, 0x0, 0x1);
        gbc.writeMem(0x2cf4, { 0xde, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xba11);
        EXPECT(gbc.pc(), 0x2cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00D8
        gbc.setState(0xa41d, 0xcbe6, 0x8c0, 0x83fd, 0x3516, 0x5574, 0x1, 0x0);
        gbc.writeMem(0xa41d, { 0xde, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xcbe6);
        EXPECT(gbc.pc(), 0xa41f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa41d), 0xde);
        EXPECT(gbc.readMem(0xa41e), 0xcf);
        // DE 00D9
        gbc.setState(0x5687, 0x83da, 0xf5d0, 0x4a65, 0x2589, 0x2e3b, 0x0, 0x0);
        gbc.writeMem(0x5687, { 0xde, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x83da);
        EXPECT(gbc.pc(), 0x5689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 00DA
        gbc.setState(0x6d4a, 0xdb44, 0xbf80, 0x632b, 0x7af2, 0x66ef, 0x0, 0x1);
        gbc.writeMem(0x6d4a, { 0xde, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdb44);
        EXPECT(gbc.pc(), 0x6d4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 00DB
        gbc.setState(0xb423, 0x161c, 0x78b0, 0x79, 0x9623, 0x8532, 0x0, 0x0);
        gbc.writeMem(0xb423, { 0xde, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x161c);
        EXPECT(gbc.pc(), 0xb425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb423), 0xde);
        EXPECT(gbc.readMem(0xb424), 0x6f);
        // DE 00DC
        gbc.setState(0xdad9, 0x64d5, 0xb000, 0xb32f, 0x1a6e, 0xa7a8, 0x1, 0x0);
        gbc.writeMem(0xdad9, { 0xde, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x64d5);
        EXPECT(gbc.pc(), 0xdadb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad9), 0xde);
        EXPECT(gbc.readMem(0xdada), 0x22);
        // DE 00DD
        gbc.setState(0xc401, 0xb0af, 0xce90, 0x5773, 0x98b3, 0x6ecf, 0x1, 0x0);
        gbc.writeMem(0xc401, { 0xde, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb0af);
        EXPECT(gbc.pc(), 0xc403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc401), 0xde);
        EXPECT(gbc.readMem(0xc402), 0x93);
        // DE 00DE
        gbc.setState(0x3361, 0xa76b, 0x5db0, 0xf01, 0x8ef5, 0x27dd, 0x0, 0x0);
        gbc.writeMem(0x3361, { 0xde, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa76b);
        EXPECT(gbc.pc(), 0x3363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00DF
        gbc.setState(0x51d2, 0xfd88, 0x7380, 0xba7c, 0x293f, 0x999e, 0x1, 0x0);
        gbc.writeMem(0x51d2, { 0xde, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfd88);
        EXPECT(gbc.pc(), 0x51d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00E0
        gbc.setState(0x8be3, 0x2f28, 0x4d80, 0xfb83, 0x8c1, 0x260d, 0x1, 0x1);
        gbc.writeMem(0x8be3, { 0xde, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2f28);
        EXPECT(gbc.pc(), 0x8be5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be3), 0xde);
        EXPECT(gbc.readMem(0x8be4), 0x4e);
        // DE 00E1
        gbc.setState(0xca3a, 0xffea, 0xc640, 0xf385, 0x72be, 0xdba7, 0x1, 0x1);
        gbc.writeMem(0xca3a, { 0xde, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xffea);
        EXPECT(gbc.pc(), 0xca3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca3a), 0xde);
        EXPECT(gbc.readMem(0xca3b), 0x22);
        // DE 00E2
        gbc.setState(0x14e2, 0x6276, 0xb0f0, 0x76dc, 0x45c1, 0x19d7, 0x0, 0x1);
        gbc.writeMem(0x14e2, { 0xde, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6276);
        EXPECT(gbc.pc(), 0x14e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00E3
        gbc.setState(0x44c6, 0xa20d, 0x190, 0x357b, 0x8232, 0x732f, 0x1, 0x0);
        gbc.writeMem(0x44c6, { 0xde, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa20d);
        EXPECT(gbc.pc(), 0x44c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00E4
        gbc.setState(0xe927, 0x682d, 0x20a0, 0x8fac, 0xf9ab, 0xdb8f, 0x1, 0x1);
        gbc.writeMem(0xe927, { 0xde, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x682d);
        EXPECT(gbc.pc(), 0xe929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe927), 0xde);
        EXPECT(gbc.readMem(0xe928), 0x77);
        // DE 00E5
        gbc.setState(0x18cd, 0xf42e, 0x9890, 0x291, 0xbd99, 0x56f2, 0x1, 0x0);
        gbc.writeMem(0x18cd, { 0xde, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf42e);
        EXPECT(gbc.pc(), 0x18cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 00E6
        gbc.setState(0x1979, 0xebf4, 0x6a10, 0xf640, 0xe8df, 0x7100, 0x1, 0x1);
        gbc.writeMem(0x1979, { 0xde, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xebf4);
        EXPECT(gbc.pc(), 0x197b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00E7
        gbc.setState(0xdea3, 0xf9bc, 0xf610, 0x3404, 0x6d11, 0x2aea, 0x1, 0x0);
        gbc.writeMem(0xdea3, { 0xde, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf9bc);
        EXPECT(gbc.pc(), 0xdea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea3), 0xde);
        EXPECT(gbc.readMem(0xdea4), 0x69);
        // DE 00E8
        gbc.setState(0x1a3, 0xe2be, 0xc4e0, 0x6ae2, 0xa180, 0xd452, 0x0, 0x1);
        gbc.writeMem(0x1a3, { 0xde, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe2be);
        EXPECT(gbc.pc(), 0x1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00E9
        gbc.setState(0xc4b7, 0x6e57, 0xfa30, 0xdb3, 0x552e, 0xc2ff, 0x1, 0x1);
        gbc.writeMem(0xc4b7, { 0xde, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6e57);
        EXPECT(gbc.pc(), 0xc4b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b7), 0xde);
        EXPECT(gbc.readMem(0xc4b8), 0xb);
        // DE 00EA
        gbc.setState(0x9b20, 0xd2e6, 0xd130, 0x15a9, 0xa3ae, 0xe84e, 0x1, 0x0);
        gbc.writeMem(0x9b20, { 0xde, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd2e6);
        EXPECT(gbc.pc(), 0x9b22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b20), 0xde);
        EXPECT(gbc.readMem(0x9b21), 0xcc);
        // DE 00EB
        gbc.setState(0x7dcc, 0x2a7f, 0xfb50, 0x20e1, 0x83c6, 0xa411, 0x0, 0x1);
        gbc.writeMem(0x7dcc, { 0xde, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2a7f);
        EXPECT(gbc.pc(), 0x7dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 00EC
        gbc.setState(0xe8d3, 0x3852, 0xc080, 0x3360, 0x284, 0xa333, 0x0, 0x1);
        gbc.writeMem(0xe8d3, { 0xde, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3852);
        EXPECT(gbc.pc(), 0xe8d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d3), 0xde);
        EXPECT(gbc.readMem(0xe8d4), 0x42);
        // DE 00ED
        gbc.setState(0x10dc, 0x6dce, 0x72a0, 0xd21b, 0xe923, 0x9d2c, 0x1, 0x1);
        gbc.writeMem(0x10dc, { 0xde, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6dce);
        EXPECT(gbc.pc(), 0x10de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00EE
        gbc.setState(0xdad4, 0xccce, 0xdaf0, 0xd3a3, 0x3789, 0xb20f, 0x0, 0x0);
        gbc.writeMem(0xdad4, { 0xde, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xccce);
        EXPECT(gbc.pc(), 0xdad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad4), 0xde);
        EXPECT(gbc.readMem(0xdad5), 0x2);
        // DE 00EF
        gbc.setState(0x3a5f, 0xad31, 0x2170, 0x905, 0x45e2, 0x8976, 0x0, 0x0);
        gbc.writeMem(0x3a5f, { 0xde, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xad31);
        EXPECT(gbc.pc(), 0x3a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 00F0
        gbc.setState(0x90f5, 0x71a5, 0x9ff0, 0x3d67, 0x3277, 0xbf4, 0x1, 0x0);
        gbc.writeMem(0x90f5, { 0xde, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x71a5);
        EXPECT(gbc.pc(), 0x90f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90f5), 0xde);
        EXPECT(gbc.readMem(0x90f6), 0x48);
        // DE 00F1
        gbc.setState(0x9732, 0x9a92, 0x3e70, 0x77ca, 0x97f9, 0x2fca, 0x0, 0x1);
        gbc.writeMem(0x9732, { 0xde, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9a92);
        EXPECT(gbc.pc(), 0x9734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9732), 0xde);
        EXPECT(gbc.readMem(0x9733), 0x3c);
        // DE 00F2
        gbc.setState(0x3410, 0x6ef8, 0x73b0, 0x878b, 0x46e3, 0xf759, 0x1, 0x0);
        gbc.writeMem(0x3410, { 0xde, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6ef8);
        EXPECT(gbc.pc(), 0x3412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00F3
        gbc.setState(0xdece, 0xec94, 0xc2d0, 0x9445, 0xace1, 0x5355, 0x0, 0x1);
        gbc.writeMem(0xdece, { 0xde, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xec94);
        EXPECT(gbc.pc(), 0xded0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdece), 0xde);
        EXPECT(gbc.readMem(0xdecf), 0x8e);
        // DE 00F4
        gbc.setState(0xd04d, 0x8d74, 0xcea0, 0x63e9, 0xab80, 0x808a, 0x0, 0x1);
        gbc.writeMem(0xd04d, { 0xde, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8d74);
        EXPECT(gbc.pc(), 0xd04f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd04d), 0xde);
        EXPECT(gbc.readMem(0xd04e), 0xce);
        // DE 00F5
        gbc.setState(0x30b1, 0x12c5, 0x18d0, 0x8b26, 0x23a3, 0xf148, 0x0, 0x0);
        gbc.writeMem(0x30b1, { 0xde, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x12c5);
        EXPECT(gbc.pc(), 0x30b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 00F6
        gbc.setState(0x4232, 0xff71, 0x1200, 0xa3c, 0x3a3b, 0x8011, 0x1, 0x0);
        gbc.writeMem(0x4232, { 0xde, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xff71);
        EXPECT(gbc.pc(), 0x4234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00F7
        gbc.setState(0x2a2c, 0x20c0, 0xaee0, 0x2bb4, 0xede9, 0x68f6, 0x1, 0x0);
        gbc.writeMem(0x2a2c, { 0xde, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x20c0);
        EXPECT(gbc.pc(), 0x2a2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 00F8
        gbc.setState(0x4518, 0x6bcc, 0xc9d0, 0x5730, 0x4a3d, 0x6348, 0x0, 0x0);
        gbc.writeMem(0x4518, { 0xde, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6bcc);
        EXPECT(gbc.pc(), 0x451a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 00F9
        gbc.setState(0x95e3, 0x8769, 0xa680, 0x156e, 0x3aa7, 0x4781, 0x0, 0x1);
        gbc.writeMem(0x95e3, { 0xde, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8769);
        EXPECT(gbc.pc(), 0x95e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e3), 0xde);
        EXPECT(gbc.readMem(0x95e4), 0xf5);
        // DE 00FA
        gbc.setState(0x1939, 0x512e, 0x2540, 0x8abc, 0xbc3b, 0x21b6, 0x0, 0x0);
        gbc.writeMem(0x1939, { 0xde, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x512e);
        EXPECT(gbc.pc(), 0x193b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 00FB
        gbc.setState(0xee37, 0xa120, 0x2d30, 0x383a, 0x62b2, 0xeb60, 0x1, 0x1);
        gbc.writeMem(0xee37, { 0xde, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa120);
        EXPECT(gbc.pc(), 0xee39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee37), 0xde);
        EXPECT(gbc.readMem(0xee38), 0xc4);
        // DE 00FC
        gbc.setState(0x49a9, 0x54b3, 0xf330, 0x6f7a, 0xe3ba, 0x297f, 0x0, 0x0);
        gbc.writeMem(0x49a9, { 0xde, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x54b3);
        EXPECT(gbc.pc(), 0x49ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 00FD
        gbc.setState(0x94c8, 0xa089, 0x4430, 0xa6b5, 0xe53f, 0x5349, 0x0, 0x0);
        gbc.writeMem(0x94c8, { 0xde, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa089);
        EXPECT(gbc.pc(), 0x94ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94c8), 0xde);
        EXPECT(gbc.readMem(0x94c9), 0xfa);
        // DE 00FE
        gbc.setState(0xbe10, 0x66e, 0xf870, 0x132a, 0x61bf, 0x15b8, 0x0, 0x0);
        gbc.writeMem(0xbe10, { 0xde, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x66e);
        EXPECT(gbc.pc(), 0xbe12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe10), 0xde);
        EXPECT(gbc.readMem(0xbe11), 0x95);
        // DE 00FF
        gbc.setState(0x2429, 0x8c98, 0xc970, 0x20de, 0xaa5d, 0xf35b, 0x0, 0x0);
        gbc.writeMem(0x2429, { 0xde, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8c98);
        EXPECT(gbc.pc(), 0x242b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0100
        gbc.setState(0xd9cf, 0xc9f2, 0x5470, 0xa3bf, 0x4f09, 0xc653, 0x0, 0x0);
        gbc.writeMem(0xd9cf, { 0xde, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc9f2);
        EXPECT(gbc.pc(), 0xd9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9cf), 0xde);
        EXPECT(gbc.readMem(0xd9d0), 0xe9);
        // DE 0102
        gbc.setState(0x9629, 0x36bb, 0xc680, 0x5704, 0xa8ee, 0x88ad, 0x1, 0x1);
        gbc.writeMem(0x9629, { 0xde, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x36bb);
        EXPECT(gbc.pc(), 0x962b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9629), 0xde);
        EXPECT(gbc.readMem(0x962a), 0xe8);
        // DE 0103
        gbc.setState(0x61eb, 0xf83e, 0x3b70, 0x44ea, 0x4910, 0x27b2, 0x0, 0x0);
        gbc.writeMem(0x61eb, { 0xde, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf83e);
        EXPECT(gbc.pc(), 0x61ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0104
        gbc.setState(0x46ab, 0xeb16, 0x42e0, 0xcd9d, 0x58c, 0x4ddd, 0x1, 0x1);
        gbc.writeMem(0x46ab, { 0xde, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xeb16);
        EXPECT(gbc.pc(), 0x46ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0105
        gbc.setState(0x6919, 0x8265, 0x1130, 0x959, 0xbd55, 0xa7d2, 0x1, 0x1);
        gbc.writeMem(0x6919, { 0xde, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8265);
        EXPECT(gbc.pc(), 0x691b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0106
        gbc.setState(0x691, 0xe98e, 0xbbd0, 0xc4f7, 0xd883, 0x7ff, 0x1, 0x0);
        gbc.writeMem(0x691, { 0xde, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe98e);
        EXPECT(gbc.pc(), 0x693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0107
        gbc.setState(0xc05a, 0x34d2, 0x3d10, 0xcdc8, 0xbea5, 0x555d, 0x0, 0x1);
        gbc.writeMem(0xc05a, { 0xde, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x34d2);
        EXPECT(gbc.pc(), 0xc05c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc05a), 0xde);
        EXPECT(gbc.readMem(0xc05b), 0x67);
        // DE 0108
        gbc.setState(0xc7b7, 0x3685, 0x2120, 0x5ad9, 0xceb1, 0x6a22, 0x1, 0x0);
        gbc.writeMem(0xc7b7, { 0xde, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3685);
        EXPECT(gbc.pc(), 0xc7b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b7), 0xde);
        EXPECT(gbc.readMem(0xc7b8), 0x31);
        // DE 0109
        gbc.setState(0x2c6b, 0xd4f7, 0xc1f0, 0xebf4, 0xa7e, 0xf143, 0x0, 0x0);
        gbc.writeMem(0x2c6b, { 0xde, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd4f7);
        EXPECT(gbc.pc(), 0x2c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 010A
        gbc.setState(0x80ce, 0xfc82, 0x7c80, 0x27cd, 0x5b63, 0x1d97, 0x1, 0x0);
        gbc.writeMem(0x80ce, { 0xde, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfc82);
        EXPECT(gbc.pc(), 0x80d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ce), 0xde);
        EXPECT(gbc.readMem(0x80cf), 0x3a);
        // DE 010B
        gbc.setState(0x84eb, 0xb706, 0x8a60, 0xdecc, 0x319f, 0xf917, 0x1, 0x1);
        gbc.writeMem(0x84eb, { 0xde, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb706);
        EXPECT(gbc.pc(), 0x84ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84eb), 0xde);
        EXPECT(gbc.readMem(0x84ec), 0x26);
        // DE 010C
        gbc.setState(0xd748, 0x9ee4, 0xa130, 0x41b4, 0x9479, 0xd383, 0x1, 0x1);
        gbc.writeMem(0xd748, { 0xde, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9ee4);
        EXPECT(gbc.pc(), 0xd74a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd748), 0xde);
        EXPECT(gbc.readMem(0xd749), 0x3c);
        // DE 010D
        gbc.setState(0x1a24, 0xa33, 0xcda0, 0x5bb6, 0x4cb9, 0x83fd, 0x1, 0x0);
        gbc.writeMem(0x1a24, { 0xde, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa33);
        EXPECT(gbc.pc(), 0x1a26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 010E
        gbc.setState(0x22ac, 0x576b, 0x8510, 0xbbf1, 0x3875, 0x8f42, 0x1, 0x0);
        gbc.writeMem(0x22ac, { 0xde, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x576b);
        EXPECT(gbc.pc(), 0x22ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 010F
        gbc.setState(0xc4dc, 0xbbc0, 0xb280, 0xc5da, 0xa7bf, 0x8bcd, 0x1, 0x1);
        gbc.writeMem(0xc4dc, { 0xde, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xbbc0);
        EXPECT(gbc.pc(), 0xc4de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4dc), 0xde);
        EXPECT(gbc.readMem(0xc4dd), 0x33);
        // DE 0110
        gbc.setState(0x5b87, 0x9460, 0xf7c0, 0x9c66, 0x2341, 0xaf01, 0x1, 0x0);
        gbc.writeMem(0x5b87, { 0xde, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9460);
        EXPECT(gbc.pc(), 0x5b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0111
        gbc.setState(0x35ff, 0x84b2, 0xdc0, 0x83a9, 0xc567, 0x7c83, 0x0, 0x1);
        gbc.writeMem(0x35ff, { 0xde, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x84b2);
        EXPECT(gbc.pc(), 0x3601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0112
        gbc.setState(0x8003, 0x7627, 0xa8e0, 0x997d, 0xa5a8, 0x68eb, 0x0, 0x0);
        gbc.writeMem(0x8003, { 0xde, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7627);
        EXPECT(gbc.pc(), 0x8005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8003), 0xde);
        EXPECT(gbc.readMem(0x8004), 0xba);
        // DE 0113
        gbc.setState(0x47d7, 0xa71c, 0x4b40, 0xcac9, 0x1d3a, 0x1e9, 0x1, 0x1);
        gbc.writeMem(0x47d7, { 0xde, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa71c);
        EXPECT(gbc.pc(), 0x47d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0114
        gbc.setState(0x77d4, 0x714, 0x36e0, 0xac6c, 0x11b2, 0x6104, 0x1, 0x1);
        gbc.writeMem(0x77d4, { 0xde, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x714);
        EXPECT(gbc.pc(), 0x77d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0115
        gbc.setState(0x900e, 0xb5ed, 0x2760, 0x7141, 0x4b64, 0x1e6a, 0x1, 0x1);
        gbc.writeMem(0x900e, { 0xde, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb5ed);
        EXPECT(gbc.pc(), 0x9010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x900e), 0xde);
        EXPECT(gbc.readMem(0x900f), 0x4c);
        // DE 0116
        gbc.setState(0x2f36, 0xfb36, 0x3b50, 0xa2be, 0x6096, 0x3019, 0x0, 0x1);
        gbc.writeMem(0x2f36, { 0xde, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfb36);
        EXPECT(gbc.pc(), 0x2f38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0117
        gbc.setState(0xda70, 0xa4ca, 0xbbd0, 0xc0c5, 0xfcc7, 0xc0c5, 0x0, 0x0);
        gbc.writeMem(0xda70, { 0xde, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa4ca);
        EXPECT(gbc.pc(), 0xda72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda70), 0xde);
        EXPECT(gbc.readMem(0xda71), 0xe1);
        // DE 0118
        gbc.setState(0xa022, 0x7ca5, 0x2590, 0xd287, 0x3334, 0x3185, 0x0, 0x1);
        gbc.writeMem(0xa022, { 0xde, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7ca5);
        EXPECT(gbc.pc(), 0xa024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa022), 0xde);
        EXPECT(gbc.readMem(0xa023), 0x63);
        // DE 0119
        gbc.setState(0xb38e, 0xf639, 0xa30, 0x4895, 0x7d4a, 0x3022, 0x1, 0x1);
        gbc.writeMem(0xb38e, { 0xde, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf639);
        EXPECT(gbc.pc(), 0xb390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb38e), 0xde);
        EXPECT(gbc.readMem(0xb38f), 0x31);
        // DE 011A
        gbc.setState(0x5490, 0x9ef, 0xbe80, 0x2722, 0x38ce, 0xac66, 0x1, 0x0);
        gbc.writeMem(0x5490, { 0xde, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9ef);
        EXPECT(gbc.pc(), 0x5492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 011B
        gbc.setState(0xed1d, 0x16cb, 0x42a0, 0x682c, 0xd099, 0x4e6b, 0x1, 0x0);
        gbc.writeMem(0xed1d, { 0xde, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x16cb);
        EXPECT(gbc.pc(), 0xed1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed1d), 0xde);
        EXPECT(gbc.readMem(0xed1e), 0xa2);
        // DE 011C
        gbc.setState(0x9c48, 0xa1e7, 0xe790, 0xfb4e, 0xfe1d, 0x716f, 0x1, 0x0);
        gbc.writeMem(0x9c48, { 0xde, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa1e7);
        EXPECT(gbc.pc(), 0x9c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c48), 0xde);
        EXPECT(gbc.readMem(0x9c49), 0xf);
        // DE 011D
        gbc.setState(0xa84a, 0x608f, 0x1c40, 0x7b14, 0xaaa0, 0x3caf, 0x1, 0x0);
        gbc.writeMem(0xa84a, { 0xde, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x608f);
        EXPECT(gbc.pc(), 0xa84c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa84a), 0xde);
        EXPECT(gbc.readMem(0xa84b), 0x96);
        // DE 011E
        gbc.setState(0xb2d7, 0xd7fa, 0x2800, 0xa33a, 0x9ef6, 0xb476, 0x1, 0x0);
        gbc.writeMem(0xb2d7, { 0xde, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd7fa);
        EXPECT(gbc.pc(), 0xb2d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d7), 0xde);
        EXPECT(gbc.readMem(0xb2d8), 0x76);
        // DE 011F
        gbc.setState(0xd91, 0x72c2, 0xa1a0, 0x4aee, 0xa8b, 0x21b3, 0x1, 0x0);
        gbc.writeMem(0xd91, { 0xde, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x72c2);
        EXPECT(gbc.pc(), 0xd93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0120
        gbc.setState(0x65f5, 0x644d, 0x7100, 0x450, 0x390a, 0x8e79, 0x1, 0x0);
        gbc.writeMem(0x65f5, { 0xde, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x644d);
        EXPECT(gbc.pc(), 0x65f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0121
        gbc.setState(0x80ff, 0xeb, 0x80c0, 0xf853, 0x909e, 0xd91a, 0x1, 0x0);
        gbc.writeMem(0x80ff, { 0xde, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xeb);
        EXPECT(gbc.pc(), 0x8101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ff), 0xde);
        EXPECT(gbc.readMem(0x8100), 0xea);
        // DE 0122
        gbc.setState(0x31ea, 0xde79, 0x6e30, 0xfa2e, 0x3ece, 0xe685, 0x0, 0x0);
        gbc.writeMem(0x31ea, { 0xde, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xde79);
        EXPECT(gbc.pc(), 0x31ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0123
        gbc.setState(0xca83, 0x3d75, 0x6a0, 0x782c, 0xd70a, 0x7989, 0x0, 0x1);
        gbc.writeMem(0xca83, { 0xde, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3d75);
        EXPECT(gbc.pc(), 0xca85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca83), 0xde);
        EXPECT(gbc.readMem(0xca84), 0x22);
        // DE 0124
        gbc.setState(0x5968, 0x7837, 0x5280, 0xfd2c, 0x813d, 0xe7d0, 0x0, 0x1);
        gbc.writeMem(0x5968, { 0xde, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7837);
        EXPECT(gbc.pc(), 0x596a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0125
        gbc.setState(0x35db, 0x39f7, 0xdcb0, 0x9d08, 0xdb0d, 0xba23, 0x0, 0x1);
        gbc.writeMem(0x35db, { 0xde, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x39f7);
        EXPECT(gbc.pc(), 0x35dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0127
        gbc.setState(0x58b2, 0xfb10, 0x840, 0x657, 0x6a7c, 0x4fd5, 0x0, 0x1);
        gbc.writeMem(0x58b2, { 0xde, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfb10);
        EXPECT(gbc.pc(), 0x58b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0128
        gbc.setState(0xa0c2, 0x6343, 0x97f0, 0x509c, 0xf35, 0x28da, 0x1, 0x0);
        gbc.writeMem(0xa0c2, { 0xde, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6343);
        EXPECT(gbc.pc(), 0xa0c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c2), 0xde);
        EXPECT(gbc.readMem(0xa0c3), 0x6b);
        // DE 0129
        gbc.setState(0xd47e, 0xc382, 0x4f60, 0x70d8, 0xf173, 0x173, 0x1, 0x1);
        gbc.writeMem(0xd47e, { 0xde, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc382);
        EXPECT(gbc.pc(), 0xd480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47e), 0xde);
        EXPECT(gbc.readMem(0xd47f), 0xa2);
        // DE 012A
        gbc.setState(0xaa38, 0xa152, 0x45a0, 0x6eba, 0xcc73, 0x8094, 0x1, 0x1);
        gbc.writeMem(0xaa38, { 0xde, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa152);
        EXPECT(gbc.pc(), 0xaa3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa38), 0xde);
        EXPECT(gbc.readMem(0xaa39), 0xf6);
        // DE 012B
        gbc.setState(0xd740, 0xc3f1, 0x3090, 0x529c, 0x9fdf, 0xdb4f, 0x1, 0x0);
        gbc.writeMem(0xd740, { 0xde, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc3f1);
        EXPECT(gbc.pc(), 0xd742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd740), 0xde);
        EXPECT(gbc.readMem(0xd741), 0x4c);
        // DE 012C
        gbc.setState(0xa1d8, 0xd288, 0xa0d0, 0x77cb, 0x46a, 0xdd82, 0x1, 0x1);
        gbc.writeMem(0xa1d8, { 0xde, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd288);
        EXPECT(gbc.pc(), 0xa1da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d8), 0xde);
        EXPECT(gbc.readMem(0xa1d9), 0xd1);
        // DE 012D
        gbc.setState(0xe46c, 0xeac1, 0x41c0, 0x1483, 0xf04b, 0x88dc, 0x0, 0x1);
        gbc.writeMem(0xe46c, { 0xde, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xeac1);
        EXPECT(gbc.pc(), 0xe46e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe46c), 0xde);
        EXPECT(gbc.readMem(0xe46d), 0xeb);
        // DE 012E
        gbc.setState(0xc762, 0x937e, 0xb870, 0xa3b1, 0xfb04, 0x8964, 0x0, 0x1);
        gbc.writeMem(0xc762, { 0xde, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x937e);
        EXPECT(gbc.pc(), 0xc764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc762), 0xde);
        EXPECT(gbc.readMem(0xc763), 0xfd);
        // DE 012F
        gbc.setState(0x327e, 0x45fb, 0x5bf0, 0x69bd, 0x2dfb, 0xcad2, 0x1, 0x1);
        gbc.writeMem(0x327e, { 0xde, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x45fb);
        EXPECT(gbc.pc(), 0x3280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0130
        gbc.setState(0x72b0, 0xcfb8, 0xe170, 0xae9b, 0xfda1, 0x415e, 0x0, 0x1);
        gbc.writeMem(0x72b0, { 0xde, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcfb8);
        EXPECT(gbc.pc(), 0x72b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0131
        gbc.setState(0x6003, 0xc921, 0x2d20, 0x647c, 0x7a2d, 0xcaf1, 0x1, 0x0);
        gbc.writeMem(0x6003, { 0xde, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc921);
        EXPECT(gbc.pc(), 0x6005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0133
        gbc.setState(0x6f8e, 0x58b6, 0xf170, 0xf2d4, 0x5d3b, 0x4733, 0x0, 0x1);
        gbc.writeMem(0x6f8e, { 0xde, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x58b6);
        EXPECT(gbc.pc(), 0x6f90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0134
        gbc.setState(0x4087, 0x4b0c, 0xe8a0, 0xb572, 0x9dbd, 0xd85b, 0x0, 0x0);
        gbc.writeMem(0x4087, { 0xde, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4b0c);
        EXPECT(gbc.pc(), 0x4089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0135
        gbc.setState(0x2af7, 0x610a, 0xa9d0, 0x5bba, 0x1149, 0xb53f, 0x0, 0x1);
        gbc.writeMem(0x2af7, { 0xde, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x610a);
        EXPECT(gbc.pc(), 0x2af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0136
        gbc.setState(0x6527, 0xdeff, 0xb750, 0xca34, 0x4785, 0x1179, 0x1, 0x1);
        gbc.writeMem(0x6527, { 0xde, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdeff);
        EXPECT(gbc.pc(), 0x6529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0137
        gbc.setState(0xc87e, 0x8124, 0xfa30, 0x60bf, 0xb054, 0x435f, 0x1, 0x0);
        gbc.writeMem(0xc87e, { 0xde, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8124);
        EXPECT(gbc.pc(), 0xc880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc87e), 0xde);
        EXPECT(gbc.readMem(0xc87f), 0x83);
        // DE 0138
        gbc.setState(0x855a, 0xaa7, 0x19e0, 0xcaeb, 0x529e, 0x651, 0x0, 0x0);
        gbc.writeMem(0x855a, { 0xde, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xaa7);
        EXPECT(gbc.pc(), 0x855c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x855a), 0xde);
        EXPECT(gbc.readMem(0x855b), 0x6b);
        // DE 0139
        gbc.setState(0xa2ac, 0xd6b, 0xc50, 0x552a, 0x67c5, 0xc4d6, 0x0, 0x1);
        gbc.writeMem(0xa2ac, { 0xde, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd6b);
        EXPECT(gbc.pc(), 0xa2ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ac), 0xde);
        EXPECT(gbc.readMem(0xa2ad), 0x4c);
        // DE 013A
        gbc.setState(0x1b08, 0x3472, 0x5a60, 0x9084, 0x1302, 0xabd1, 0x0, 0x0);
        gbc.writeMem(0x1b08, { 0xde, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3472);
        EXPECT(gbc.pc(), 0x1b0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 013B
        gbc.setState(0x2bab, 0x90a1, 0x93a0, 0xafcb, 0x2689, 0xc655, 0x0, 0x0);
        gbc.writeMem(0x2bab, { 0xde, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x90a1);
        EXPECT(gbc.pc(), 0x2bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 013C
        gbc.setState(0xd3cd, 0x2a27, 0x1d40, 0xcc12, 0x57fe, 0x281, 0x1, 0x1);
        gbc.writeMem(0xd3cd, { 0xde, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2a27);
        EXPECT(gbc.pc(), 0xd3cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3cd), 0xde);
        EXPECT(gbc.readMem(0xd3ce), 0x5c);
        // DE 013D
        gbc.setState(0xe9e0, 0x4a5b, 0x4690, 0x7133, 0xa746, 0x1a97, 0x1, 0x0);
        gbc.writeMem(0xe9e0, { 0xde, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4a5b);
        EXPECT(gbc.pc(), 0xe9e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e0), 0xde);
        EXPECT(gbc.readMem(0xe9e1), 0xff);
        // DE 013E
        gbc.setState(0xddd1, 0xd75a, 0x8030, 0xe6af, 0x46a9, 0x6f46, 0x0, 0x0);
        gbc.writeMem(0xddd1, { 0xde, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd75a);
        EXPECT(gbc.pc(), 0xddd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd1), 0xde);
        EXPECT(gbc.readMem(0xddd2), 0xf8);
        // DE 013F
        gbc.setState(0x1e3c, 0x58cc, 0xb9e0, 0x174, 0xbff6, 0x98d0, 0x0, 0x0);
        gbc.writeMem(0x1e3c, { 0xde, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x58cc);
        EXPECT(gbc.pc(), 0x1e3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0140
        gbc.setState(0x98, 0xc66d, 0x2850, 0x5d2, 0xa761, 0x8ff, 0x0, 0x0);
        gbc.writeMem(0x98, { 0xde, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc66d);
        EXPECT(gbc.pc(), 0x9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0141
        gbc.setState(0x218c, 0x3838, 0x46c0, 0x8169, 0x8ba5, 0x9ba5, 0x0, 0x0);
        gbc.writeMem(0x218c, { 0xde, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3838);
        EXPECT(gbc.pc(), 0x218e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0142
        gbc.setState(0xd08b, 0x615b, 0x6fb0, 0xbb00, 0x8b27, 0xe54e, 0x0, 0x1);
        gbc.writeMem(0xd08b, { 0xde, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x615b);
        EXPECT(gbc.pc(), 0xd08d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd08b), 0xde);
        EXPECT(gbc.readMem(0xd08c), 0x9c);
        // DE 0143
        gbc.setState(0x52b3, 0x67e, 0xb5b0, 0x68c0, 0xd665, 0xb604, 0x1, 0x1);
        gbc.writeMem(0x52b3, { 0xde, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x67e);
        EXPECT(gbc.pc(), 0x52b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0144
        gbc.setState(0x7bc2, 0xda58, 0x8d50, 0x2fe6, 0xbe59, 0xf83b, 0x1, 0x0);
        gbc.writeMem(0x7bc2, { 0xde, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xda58);
        EXPECT(gbc.pc(), 0x7bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0145
        gbc.setState(0xcb58, 0x961e, 0x4e0, 0x80e5, 0xa984, 0x7408, 0x1, 0x1);
        gbc.writeMem(0xcb58, { 0xde, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x961e);
        EXPECT(gbc.pc(), 0xcb5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb58), 0xde);
        EXPECT(gbc.readMem(0xcb59), 0xc);
        // DE 0146
        gbc.setState(0x6c03, 0xfcdc, 0x8720, 0x28f8, 0xe4d1, 0x3a42, 0x0, 0x0);
        gbc.writeMem(0x6c03, { 0xde, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfcdc);
        EXPECT(gbc.pc(), 0x6c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0147
        gbc.setState(0x57c4, 0xe5f2, 0xce0, 0x3a11, 0xc424, 0xccce, 0x1, 0x1);
        gbc.writeMem(0x57c4, { 0xde, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe5f2);
        EXPECT(gbc.pc(), 0x57c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0148
        gbc.setState(0xbbba, 0x8535, 0x9500, 0x24b4, 0xc693, 0x50da, 0x0, 0x0);
        gbc.writeMem(0xbbba, { 0xde, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8535);
        EXPECT(gbc.pc(), 0xbbbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbba), 0xde);
        EXPECT(gbc.readMem(0xbbbb), 0xde);
        // DE 0149
        gbc.setState(0xe904, 0x823b, 0x8070, 0xdda6, 0x4ba7, 0xc590, 0x0, 0x0);
        gbc.writeMem(0xe904, { 0xde, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x823b);
        EXPECT(gbc.pc(), 0xe906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe904), 0xde);
        EXPECT(gbc.readMem(0xe905), 0xad);
        // DE 014A
        gbc.setState(0xe9cc, 0x3cb4, 0x2e80, 0x1fd2, 0xa19c, 0x36a, 0x0, 0x0);
        gbc.writeMem(0xe9cc, { 0xde, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3cb4);
        EXPECT(gbc.pc(), 0xe9ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9cc), 0xde);
        EXPECT(gbc.readMem(0xe9cd), 0xd);
        // DE 014B
        gbc.setState(0x2ace, 0xd7, 0x6d0, 0xf02, 0x8590, 0x4381, 0x1, 0x0);
        gbc.writeMem(0x2ace, { 0xde, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd7);
        EXPECT(gbc.pc(), 0x2ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 014C
        gbc.setState(0x9490, 0xc9d6, 0xff00, 0xe113, 0x49b4, 0x4d82, 0x1, 0x0);
        gbc.writeMem(0x9490, { 0xde, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc9d6);
        EXPECT(gbc.pc(), 0x9492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9490), 0xde);
        EXPECT(gbc.readMem(0x9491), 0x53);
        // DE 014D
        gbc.setState(0x877a, 0xd42c, 0xa910, 0x1d0f, 0x2074, 0xa13c, 0x0, 0x0);
        gbc.writeMem(0x877a, { 0xde, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd42c);
        EXPECT(gbc.pc(), 0x877c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877a), 0xde);
        EXPECT(gbc.readMem(0x877b), 0x4);
        // DE 014E
        gbc.setState(0x2721, 0x9bad, 0x2c40, 0x4db0, 0x4f01, 0x8e3c, 0x1, 0x0);
        gbc.writeMem(0x2721, { 0xde, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9bad);
        EXPECT(gbc.pc(), 0x2723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 014F
        gbc.setState(0x3ec8, 0xac95, 0x7b90, 0x3c38, 0x9679, 0x89d5, 0x0, 0x1);
        gbc.writeMem(0x3ec8, { 0xde, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xac95);
        EXPECT(gbc.pc(), 0x3eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0150
        gbc.setState(0xcd13, 0xfbe2, 0xe910, 0xc2e9, 0xb92d, 0xc75, 0x0, 0x1);
        gbc.writeMem(0xcd13, { 0xde, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfbe2);
        EXPECT(gbc.pc(), 0xcd15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd13), 0xde);
        EXPECT(gbc.readMem(0xcd14), 0xbb);
        // DE 0151
        gbc.setState(0x617, 0xcb9b, 0x5710, 0xe73a, 0xb9cd, 0x423, 0x0, 0x0);
        gbc.writeMem(0x617, { 0xde, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcb9b);
        EXPECT(gbc.pc(), 0x619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0152
        gbc.setState(0x3054, 0x5549, 0x2e80, 0xb45b, 0x3041, 0x7e42, 0x1, 0x0);
        gbc.writeMem(0x3054, { 0xde, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5549);
        EXPECT(gbc.pc(), 0x3056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0153
        gbc.setState(0xa418, 0x4cd5, 0xb120, 0x3db7, 0x9914, 0x5b4f, 0x1, 0x1);
        gbc.writeMem(0xa418, { 0xde, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4cd5);
        EXPECT(gbc.pc(), 0xa41a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa418), 0xde);
        EXPECT(gbc.readMem(0xa419), 0xf1);
        // DE 0154
        gbc.setState(0x827c, 0x3e20, 0xf0e0, 0x92a1, 0xdab6, 0x3322, 0x0, 0x0);
        gbc.writeMem(0x827c, { 0xde, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3e20);
        EXPECT(gbc.pc(), 0x827e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x827c), 0xde);
        EXPECT(gbc.readMem(0x827d), 0x98);
        // DE 0155
        gbc.setState(0x6601, 0x1e43, 0x1ad0, 0x742e, 0xd7f7, 0xd4f0, 0x1, 0x1);
        gbc.writeMem(0x6601, { 0xde, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1e43);
        EXPECT(gbc.pc(), 0x6603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0156
        gbc.setState(0x54e3, 0x4b31, 0xc090, 0xcea, 0xf3f0, 0x38eb, 0x0, 0x1);
        gbc.writeMem(0x54e3, { 0xde, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4b31);
        EXPECT(gbc.pc(), 0x54e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0157
        gbc.setState(0xd00b, 0x4d1c, 0x2760, 0x7762, 0x462d, 0xb956, 0x0, 0x1);
        gbc.writeMem(0xd00b, { 0xde, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4d1c);
        EXPECT(gbc.pc(), 0xd00d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd00b), 0xde);
        EXPECT(gbc.readMem(0xd00c), 0x57);
        // DE 0158
        gbc.setState(0x248a, 0x419b, 0x4c40, 0x5cd3, 0x7816, 0xcf20, 0x1, 0x1);
        gbc.writeMem(0x248a, { 0xde, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x419b);
        EXPECT(gbc.pc(), 0x248c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0159
        gbc.setState(0x3bf, 0x2c55, 0x4320, 0x8ca4, 0x49b0, 0x3bc2, 0x0, 0x0);
        gbc.writeMem(0x3bf, { 0xde, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2c55);
        EXPECT(gbc.pc(), 0x3c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 015A
        gbc.setState(0xec35, 0xae18, 0x6ad0, 0x90b8, 0x607a, 0x904a, 0x1, 0x0);
        gbc.writeMem(0xec35, { 0xde, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xae18);
        EXPECT(gbc.pc(), 0xec37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec35), 0xde);
        EXPECT(gbc.readMem(0xec36), 0x68);
        // DE 015B
        gbc.setState(0x1ec, 0x8038, 0xa4d0, 0x1ae, 0xe121, 0xe06d, 0x0, 0x1);
        gbc.writeMem(0x1ec, { 0xde, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8038);
        EXPECT(gbc.pc(), 0x1ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 015C
        gbc.setState(0xaba5, 0xc75a, 0xe590, 0xeeff, 0xd09e, 0x5e94, 0x1, 0x0);
        gbc.writeMem(0xaba5, { 0xde, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc75a);
        EXPECT(gbc.pc(), 0xaba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba5), 0xde);
        EXPECT(gbc.readMem(0xaba6), 0xa6);
        // DE 015D
        gbc.setState(0xdd7, 0x7a0e, 0xc1a0, 0x87a8, 0xad33, 0xc3a, 0x0, 0x1);
        gbc.writeMem(0xdd7, { 0xde, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7a0e);
        EXPECT(gbc.pc(), 0xdd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 015E
        gbc.setState(0xa337, 0x2ea8, 0xdcb0, 0x9a3c, 0xba38, 0xecd3, 0x1, 0x1);
        gbc.writeMem(0xa337, { 0xde, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2ea8);
        EXPECT(gbc.pc(), 0xa339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa337), 0xde);
        EXPECT(gbc.readMem(0xa338), 0xb5);
        // DE 015F
        gbc.setState(0x94bb, 0x6961, 0xdc40, 0x795d, 0x5b24, 0x6cf5, 0x1, 0x0);
        gbc.writeMem(0x94bb, { 0xde, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6961);
        EXPECT(gbc.pc(), 0x94bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94bb), 0xde);
        EXPECT(gbc.readMem(0x94bc), 0x3);
        // DE 0160
        gbc.setState(0x5e83, 0xc5d1, 0xefc0, 0xd8bf, 0x4167, 0x1847, 0x0, 0x1);
        gbc.writeMem(0x5e83, { 0xde, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc5d1);
        EXPECT(gbc.pc(), 0x5e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0162
        gbc.setState(0x5f5f, 0x59e0, 0xf940, 0x423b, 0xbd50, 0x2b8d, 0x0, 0x1);
        gbc.writeMem(0x5f5f, { 0xde, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x59e0);
        EXPECT(gbc.pc(), 0x5f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0163
        gbc.setState(0x8441, 0x9192, 0x22e0, 0x2a1c, 0xb73b, 0xe121, 0x1, 0x1);
        gbc.writeMem(0x8441, { 0xde, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9192);
        EXPECT(gbc.pc(), 0x8443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8441), 0xde);
        EXPECT(gbc.readMem(0x8442), 0x43);
        // DE 0164
        gbc.setState(0x1ecd, 0x3d6d, 0x4340, 0xd162, 0xddb8, 0x9195, 0x0, 0x0);
        gbc.writeMem(0x1ecd, { 0xde, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3d6d);
        EXPECT(gbc.pc(), 0x1ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0165
        gbc.setState(0x7072, 0xca56, 0x8040, 0xb694, 0x9c72, 0xf5ae, 0x1, 0x1);
        gbc.writeMem(0x7072, { 0xde, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xca56);
        EXPECT(gbc.pc(), 0x7074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0166
        gbc.setState(0x2b78, 0xb0c2, 0xb370, 0xe193, 0x3841, 0xa150, 0x1, 0x1);
        gbc.writeMem(0x2b78, { 0xde, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb0c2);
        EXPECT(gbc.pc(), 0x2b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0167
        gbc.setState(0x694a, 0x8d2d, 0xced0, 0xd63, 0x335d, 0x3aa4, 0x1, 0x0);
        gbc.writeMem(0x694a, { 0xde, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8d2d);
        EXPECT(gbc.pc(), 0x694c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0168
        gbc.setState(0x5976, 0xe270, 0xb90, 0xb37a, 0xbfe0, 0xf971, 0x0, 0x0);
        gbc.writeMem(0x5976, { 0xde, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe270);
        EXPECT(gbc.pc(), 0x5978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0169
        gbc.setState(0x6e76, 0x8534, 0x2a50, 0x4c45, 0x9f35, 0xbc52, 0x1, 0x0);
        gbc.writeMem(0x6e76, { 0xde, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8534);
        EXPECT(gbc.pc(), 0x6e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 016A
        gbc.setState(0x2e61, 0x3d5e, 0x8770, 0x7387, 0x383f, 0xe8e2, 0x1, 0x0);
        gbc.writeMem(0x2e61, { 0xde, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3d5e);
        EXPECT(gbc.pc(), 0x2e63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 016B
        gbc.setState(0xb47e, 0xac00, 0x37c0, 0x3273, 0x2b1, 0x5eae, 0x1, 0x0);
        gbc.writeMem(0xb47e, { 0xde, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xac00);
        EXPECT(gbc.pc(), 0xb480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb47e), 0xde);
        EXPECT(gbc.readMem(0xb47f), 0xcb);
        // DE 016C
        gbc.setState(0xd40c, 0x4371, 0x2870, 0x2660, 0x7ec0, 0x5897, 0x0, 0x0);
        gbc.writeMem(0xd40c, { 0xde, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4371);
        EXPECT(gbc.pc(), 0xd40e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd40c), 0xde);
        EXPECT(gbc.readMem(0xd40d), 0x62);
        // DE 016D
        gbc.setState(0x9d0e, 0x797d, 0xd280, 0x95d, 0x4e5d, 0x7217, 0x0, 0x1);
        gbc.writeMem(0x9d0e, { 0xde, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x797d);
        EXPECT(gbc.pc(), 0x9d10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d0e), 0xde);
        EXPECT(gbc.readMem(0x9d0f), 0xc9);
        // DE 016E
        gbc.setState(0xc72f, 0x14b7, 0x1130, 0x919a, 0x2545, 0x60b1, 0x1, 0x0);
        gbc.writeMem(0xc72f, { 0xde, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x14b7);
        EXPECT(gbc.pc(), 0xc731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc72f), 0xde);
        EXPECT(gbc.readMem(0xc730), 0x30);
        // DE 016F
        gbc.setState(0xb197, 0x4c5b, 0x3ec0, 0xc248, 0x8b7c, 0xf2fb, 0x1, 0x1);
        gbc.writeMem(0xb197, { 0xde, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4c5b);
        EXPECT(gbc.pc(), 0xb199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb197), 0xde);
        EXPECT(gbc.readMem(0xb198), 0x27);
        // DE 0170
        gbc.setState(0xa52d, 0x9462, 0x2f10, 0xb87a, 0xb61, 0x499a, 0x1, 0x0);
        gbc.writeMem(0xa52d, { 0xde, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9462);
        EXPECT(gbc.pc(), 0xa52f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa52d), 0xde);
        EXPECT(gbc.readMem(0xa52e), 0x6a);
        // DE 0171
        gbc.setState(0xe290, 0x5f7, 0x9480, 0xe45, 0x5532, 0xd904, 0x0, 0x0);
        gbc.writeMem(0xe290, { 0xde, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5f7);
        EXPECT(gbc.pc(), 0xe292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe290), 0xde);
        EXPECT(gbc.readMem(0xe291), 0xcb);
        // DE 0172
        gbc.setState(0x197c, 0x8d16, 0x1270, 0x9b42, 0xaf7, 0x1a7f, 0x0, 0x0);
        gbc.writeMem(0x197c, { 0xde, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8d16);
        EXPECT(gbc.pc(), 0x197e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0173
        gbc.setState(0xb6ec, 0xdeb8, 0x3df0, 0x5f7e, 0xce6a, 0xbce7, 0x1, 0x0);
        gbc.writeMem(0xb6ec, { 0xde, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xdeb8);
        EXPECT(gbc.pc(), 0xb6ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ec), 0xde);
        EXPECT(gbc.readMem(0xb6ed), 0x1c);
        // DE 0174
        gbc.setState(0x8054, 0xe26d, 0x9680, 0x3b1b, 0x2496, 0xe26c, 0x0, 0x0);
        gbc.writeMem(0x8054, { 0xde, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe26d);
        EXPECT(gbc.pc(), 0x8056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8054), 0xde);
        EXPECT(gbc.readMem(0x8055), 0x45);
        // DE 0175
        gbc.setState(0x3642, 0xb61d, 0x2600, 0xd9d6, 0x9f52, 0xd8b8, 0x1, 0x0);
        gbc.writeMem(0x3642, { 0xde, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb61d);
        EXPECT(gbc.pc(), 0x3644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0176
        gbc.setState(0x3919, 0x8c01, 0x24b0, 0x5dd5, 0x9ae1, 0x60a1, 0x0, 0x0);
        gbc.writeMem(0x3919, { 0xde, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8c01);
        EXPECT(gbc.pc(), 0x391b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0177
        gbc.setState(0x93e3, 0x13fe, 0xec10, 0x6b64, 0xa4dd, 0x9607, 0x1, 0x1);
        gbc.writeMem(0x93e3, { 0xde, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x13fe);
        EXPECT(gbc.pc(), 0x93e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e3), 0xde);
        EXPECT(gbc.readMem(0x93e4), 0x9e);
        // DE 0178
        gbc.setState(0xd845, 0xe3b, 0xa330, 0xdc67, 0x1268, 0xf266, 0x1, 0x0);
        gbc.writeMem(0xd845, { 0xde, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe3b);
        EXPECT(gbc.pc(), 0xd847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd845), 0xde);
        EXPECT(gbc.readMem(0xd846), 0xd0);
        // DE 0179
        gbc.setState(0x7532, 0xc8dd, 0x83b0, 0xe89d, 0x816f, 0x90a9, 0x0, 0x0);
        gbc.writeMem(0x7532, { 0xde, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc8dd);
        EXPECT(gbc.pc(), 0x7534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 017B
        gbc.setState(0x1d39, 0x70f2, 0xea30, 0x56d0, 0xe2d1, 0xd2be, 0x1, 0x1);
        gbc.writeMem(0x1d39, { 0xde, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x70f2);
        EXPECT(gbc.pc(), 0x1d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 017C
        gbc.setState(0x14f2, 0xc451, 0x21a0, 0xdc, 0x7b46, 0x38cc, 0x0, 0x0);
        gbc.writeMem(0x14f2, { 0xde, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc451);
        EXPECT(gbc.pc(), 0x14f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 017D
        gbc.setState(0x3377, 0x9ff5, 0x5520, 0xc6b, 0xbb5a, 0x634b, 0x0, 0x1);
        gbc.writeMem(0x3377, { 0xde, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9ff5);
        EXPECT(gbc.pc(), 0x3379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 017E
        gbc.setState(0x971f, 0x43c5, 0x69c0, 0xfac9, 0x4e8f, 0x485c, 0x0, 0x1);
        gbc.writeMem(0x971f, { 0xde, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x43c5);
        EXPECT(gbc.pc(), 0x9721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x971f), 0xde);
        EXPECT(gbc.readMem(0x9720), 0xbc);
        // DE 017F
        gbc.setState(0xd16, 0xaa45, 0x6010, 0x5cc3, 0x25b, 0xa79a, 0x0, 0x1);
        gbc.writeMem(0xd16, { 0xde, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xaa45);
        EXPECT(gbc.pc(), 0xd18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0180
        gbc.setState(0xdbe2, 0x9535, 0x1c30, 0xb976, 0xfdf1, 0x168f, 0x0, 0x0);
        gbc.writeMem(0xdbe2, { 0xde, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9535);
        EXPECT(gbc.pc(), 0xdbe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe2), 0xde);
        EXPECT(gbc.readMem(0xdbe3), 0xcc);
        // DE 0181
        gbc.setState(0x7a64, 0xd553, 0xa030, 0xd39e, 0xacf8, 0x3d70, 0x0, 0x0);
        gbc.writeMem(0x7a64, { 0xde, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd553);
        EXPECT(gbc.pc(), 0x7a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0182
        gbc.setState(0x9682, 0x485f, 0x1730, 0x5268, 0x5d87, 0x6ac6, 0x1, 0x1);
        gbc.writeMem(0x9682, { 0xde, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x485f);
        EXPECT(gbc.pc(), 0x9684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9682), 0xde);
        EXPECT(gbc.readMem(0x9683), 0xed);
        // DE 0183
        gbc.setState(0xef72, 0x4c47, 0xc630, 0x2f4c, 0x101d, 0x5162, 0x1, 0x0);
        gbc.writeMem(0xef72, { 0xde, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4c47);
        EXPECT(gbc.pc(), 0xef74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef72), 0xde);
        EXPECT(gbc.readMem(0xef73), 0xee);
        // DE 0184
        gbc.setState(0x10ef, 0x696f, 0x3bb0, 0x847e, 0x31d5, 0xca12, 0x1, 0x0);
        gbc.writeMem(0x10ef, { 0xde, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x696f);
        EXPECT(gbc.pc(), 0x10f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0185
        gbc.setState(0x5631, 0xf71c, 0x5980, 0x4860, 0xf3f0, 0x8e1b, 0x1, 0x0);
        gbc.writeMem(0x5631, { 0xde, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf71c);
        EXPECT(gbc.pc(), 0x5633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0186
        gbc.setState(0x47c7, 0xa182, 0x30c0, 0xbc84, 0xe24b, 0xeb6, 0x1, 0x0);
        gbc.writeMem(0x47c7, { 0xde, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa182);
        EXPECT(gbc.pc(), 0x47c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0187
        gbc.setState(0x291c, 0x3863, 0x74e0, 0x1a93, 0xe732, 0xbc8c, 0x1, 0x0);
        gbc.writeMem(0x291c, { 0xde, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3863);
        EXPECT(gbc.pc(), 0x291e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0188
        gbc.setState(0x210c, 0x1bf0, 0x5760, 0x3b1b, 0x235a, 0x81c0, 0x1, 0x0);
        gbc.writeMem(0x210c, { 0xde, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1bf0);
        EXPECT(gbc.pc(), 0x210e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0189
        gbc.setState(0xb4f, 0xfa2a, 0x12e0, 0xc073, 0xf8b0, 0x1891, 0x0, 0x0);
        gbc.writeMem(0xb4f, { 0xde, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xfa2a);
        EXPECT(gbc.pc(), 0xb51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 018A
        gbc.setState(0x3863, 0x113a, 0xd060, 0x167d, 0x1407, 0xec6e, 0x0, 0x0);
        gbc.writeMem(0x3863, { 0xde, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x113a);
        EXPECT(gbc.pc(), 0x3865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 018B
        gbc.setState(0x1909, 0x7433, 0x8870, 0xef88, 0x2bb5, 0xa0cc, 0x1, 0x0);
        gbc.writeMem(0x1909, { 0xde, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7433);
        EXPECT(gbc.pc(), 0x190b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 018C
        gbc.setState(0xd0c3, 0xeac2, 0x8640, 0xfb43, 0x169b, 0x5ed7, 0x1, 0x0);
        gbc.writeMem(0xd0c3, { 0xde, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xeac2);
        EXPECT(gbc.pc(), 0xd0c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0c3), 0xde);
        EXPECT(gbc.readMem(0xd0c4), 0xb7);
        // DE 018D
        gbc.setState(0x41f8, 0x1242, 0xc250, 0x39b1, 0x6f48, 0xb9e4, 0x0, 0x1);
        gbc.writeMem(0x41f8, { 0xde, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1242);
        EXPECT(gbc.pc(), 0x41fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 018E
        gbc.setState(0x993c, 0x6333, 0x4fc0, 0x8c93, 0x3f14, 0xad88, 0x1, 0x1);
        gbc.writeMem(0x993c, { 0xde, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6333);
        EXPECT(gbc.pc(), 0x993e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993c), 0xde);
        EXPECT(gbc.readMem(0x993d), 0x5d);
        // DE 018F
        gbc.setState(0xb7a5, 0xf59f, 0x2c60, 0xd56, 0x816b, 0x3d6, 0x0, 0x0);
        gbc.writeMem(0xb7a5, { 0xde, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf59f);
        EXPECT(gbc.pc(), 0xb7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a5), 0xde);
        EXPECT(gbc.readMem(0xb7a6), 0xec);
        // DE 0190
        gbc.setState(0x5ce4, 0x5159, 0x3ff0, 0x6afd, 0x1044, 0x469b, 0x0, 0x0);
        gbc.writeMem(0x5ce4, { 0xde, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5159);
        EXPECT(gbc.pc(), 0x5ce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0191
        gbc.setState(0x49d7, 0x8b39, 0xd1d0, 0xc418, 0x7ff0, 0xc414, 0x1, 0x0);
        gbc.writeMem(0x49d7, { 0xde, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8b39);
        EXPECT(gbc.pc(), 0x49d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0192
        gbc.setState(0x4665, 0x1450, 0x3e20, 0x7b68, 0xa4dc, 0x9074, 0x1, 0x0);
        gbc.writeMem(0x4665, { 0xde, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1450);
        EXPECT(gbc.pc(), 0x4667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0193
        gbc.setState(0xca75, 0x625, 0x5260, 0xf69f, 0xd210, 0xafec, 0x1, 0x1);
        gbc.writeMem(0xca75, { 0xde, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x625);
        EXPECT(gbc.pc(), 0xca77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca75), 0xde);
        EXPECT(gbc.readMem(0xca76), 0x7);
        // DE 0194
        gbc.setState(0x28d7, 0x9452, 0xb70, 0x9238, 0xb5f0, 0xcded, 0x1, 0x0);
        gbc.writeMem(0x28d7, { 0xde, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9452);
        EXPECT(gbc.pc(), 0x28d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0195
        gbc.setState(0x6f15, 0x6b16, 0xf870, 0x1bc6, 0x437d, 0x7d30, 0x1, 0x0);
        gbc.writeMem(0x6f15, { 0xde, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6b16);
        EXPECT(gbc.pc(), 0x6f17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0196
        gbc.setState(0xde48, 0x7f54, 0xe9a0, 0xdc63, 0x411f, 0x7af0, 0x1, 0x0);
        gbc.writeMem(0xde48, { 0xde, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7f54);
        EXPECT(gbc.pc(), 0xde4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde48), 0xde);
        EXPECT(gbc.readMem(0xde49), 0x3d);
        // DE 0197
        gbc.setState(0x4b2c, 0x7076, 0x900, 0xf1a4, 0x6575, 0x64e, 0x0, 0x0);
        gbc.writeMem(0x4b2c, { 0xde, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7076);
        EXPECT(gbc.pc(), 0x4b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0199
        gbc.setState(0x181a, 0x642, 0x55b0, 0x6ddc, 0xa466, 0x3c2f, 0x1, 0x0);
        gbc.writeMem(0x181a, { 0xde, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x642);
        EXPECT(gbc.pc(), 0x181c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 019A
        gbc.setState(0x784a, 0x6fae, 0xbe0, 0x118c, 0x687f, 0x1dc6, 0x1, 0x1);
        gbc.writeMem(0x784a, { 0xde, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6fae);
        EXPECT(gbc.pc(), 0x784c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 019B
        gbc.setState(0x9c30, 0xe549, 0x6f00, 0xc6e0, 0x7d88, 0x8668, 0x1, 0x1);
        gbc.writeMem(0x9c30, { 0xde, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe549);
        EXPECT(gbc.pc(), 0x9c32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c30), 0xde);
        EXPECT(gbc.readMem(0x9c31), 0x89);
        // DE 019C
        gbc.setState(0x63cb, 0x8b87, 0x7af0, 0xda6e, 0x9717, 0xf536, 0x1, 0x0);
        gbc.writeMem(0x63cb, { 0xde, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8b87);
        EXPECT(gbc.pc(), 0x63cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 019E
        gbc.setState(0xa1dd, 0xcb10, 0xf130, 0x1e03, 0x969b, 0x187, 0x1, 0x1);
        gbc.writeMem(0xa1dd, { 0xde, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcb10);
        EXPECT(gbc.pc(), 0xa1df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1dd), 0xde);
        EXPECT(gbc.readMem(0xa1de), 0x0);
        // DE 019F
        gbc.setState(0x3d44, 0x66b0, 0xae50, 0x5160, 0x74a6, 0xb095, 0x1, 0x0);
        gbc.writeMem(0x3d44, { 0xde, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x66b0);
        EXPECT(gbc.pc(), 0x3d46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01A0
        gbc.setState(0x4d55, 0x2ad0, 0x7b20, 0xed78, 0x6518, 0x9c6, 0x0, 0x1);
        gbc.writeMem(0x4d55, { 0xde, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2ad0);
        EXPECT(gbc.pc(), 0x4d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01A1
        gbc.setState(0x9d48, 0x9b03, 0x2c70, 0xb58, 0xcb34, 0x3c2, 0x1, 0x1);
        gbc.writeMem(0x9d48, { 0xde, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9b03);
        EXPECT(gbc.pc(), 0x9d4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d48), 0xde);
        EXPECT(gbc.readMem(0x9d49), 0x64);
        // DE 01A2
        gbc.setState(0x3df, 0xe4b, 0xe700, 0xca9e, 0x752c, 0x7f0f, 0x0, 0x1);
        gbc.writeMem(0x3df, { 0xde, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe4b);
        EXPECT(gbc.pc(), 0x3e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01A4
        gbc.setState(0x5e81, 0x59b9, 0x4a60, 0xb57, 0x78eb, 0x4fd1, 0x1, 0x1);
        gbc.writeMem(0x5e81, { 0xde, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x59b9);
        EXPECT(gbc.pc(), 0x5e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01A5
        gbc.setState(0xb7fe, 0x727e, 0x7bf0, 0x3cc9, 0xaeb0, 0x1f41, 0x1, 0x1);
        gbc.writeMem(0xb7fe, { 0xde, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x727e);
        EXPECT(gbc.pc(), 0xb800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7fe), 0xde);
        EXPECT(gbc.readMem(0xb7ff), 0x73);
        // DE 01A6
        gbc.setState(0xe5e8, 0xe124, 0x1fc0, 0xd843, 0xa2ce, 0xbe16, 0x0, 0x1);
        gbc.writeMem(0xe5e8, { 0xde, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe124);
        EXPECT(gbc.pc(), 0xe5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e8), 0xde);
        EXPECT(gbc.readMem(0xe5e9), 0xd6);
        // DE 01A7
        gbc.setState(0x3775, 0x3d4a, 0xe960, 0xeba7, 0xaa6e, 0xb31d, 0x0, 0x0);
        gbc.writeMem(0x3775, { 0xde, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3d4a);
        EXPECT(gbc.pc(), 0x3777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01A8
        gbc.setState(0xacaa, 0xd3e9, 0xaeb0, 0xa44d, 0xcfc9, 0x32ab, 0x1, 0x1);
        gbc.writeMem(0xacaa, { 0xde, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd3e9);
        EXPECT(gbc.pc(), 0xacac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacaa), 0xde);
        EXPECT(gbc.readMem(0xacab), 0xa7);
        // DE 01A9
        gbc.setState(0x5126, 0xffa3, 0xbfc0, 0x1947, 0x90f5, 0x8bed, 0x0, 0x1);
        gbc.writeMem(0x5126, { 0xde, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xffa3);
        EXPECT(gbc.pc(), 0x5128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01AA
        gbc.setState(0x3d5, 0x9c7f, 0x4b90, 0x8c43, 0x63ab, 0x7023, 0x1, 0x1);
        gbc.writeMem(0x3d5, { 0xde, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9c7f);
        EXPECT(gbc.pc(), 0x3d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01AB
        gbc.setState(0x79f9, 0x287d, 0x5f20, 0x9d45, 0x3edb, 0xf5a0, 0x1, 0x1);
        gbc.writeMem(0x79f9, { 0xde, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x287d);
        EXPECT(gbc.pc(), 0x79fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01AC
        gbc.setState(0x9a78, 0x3295, 0xf170, 0x6470, 0xe58e, 0xa611, 0x1, 0x1);
        gbc.writeMem(0x9a78, { 0xde, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3295);
        EXPECT(gbc.pc(), 0x9a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a78), 0xde);
        EXPECT(gbc.readMem(0x9a79), 0x5);
        // DE 01AD
        gbc.setState(0x7ead, 0x3691, 0x3af0, 0x9c3b, 0xdd99, 0xc6e3, 0x1, 0x1);
        gbc.writeMem(0x7ead, { 0xde, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3691);
        EXPECT(gbc.pc(), 0x7eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01AE
        gbc.setState(0xd678, 0x8563, 0xad00, 0x6dc7, 0x214a, 0xc36d, 0x0, 0x0);
        gbc.writeMem(0xd678, { 0xde, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8563);
        EXPECT(gbc.pc(), 0xd67a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd678), 0xde);
        EXPECT(gbc.readMem(0xd679), 0xfa);
        // DE 01AF
        gbc.setState(0x28d5, 0x12a6, 0xd180, 0x430, 0xfbe4, 0x2c89, 0x0, 0x1);
        gbc.writeMem(0x28d5, { 0xde, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x12a6);
        EXPECT(gbc.pc(), 0x28d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01B0
        gbc.setState(0x949d, 0x87fc, 0xa760, 0xed4b, 0x72a2, 0xef0f, 0x0, 0x1);
        gbc.writeMem(0x949d, { 0xde, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x87fc);
        EXPECT(gbc.pc(), 0x949f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x949d), 0xde);
        EXPECT(gbc.readMem(0x949e), 0xa6);
        // DE 01B1
        gbc.setState(0xbddb, 0x10d9, 0xb340, 0x1e0, 0x53c8, 0x3d3d, 0x0, 0x0);
        gbc.writeMem(0xbddb, { 0xde, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x10d9);
        EXPECT(gbc.pc(), 0xbddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbddb), 0xde);
        EXPECT(gbc.readMem(0xbddc), 0x2);
        // DE 01B2
        gbc.setState(0xd914, 0x7b69, 0xa720, 0xa068, 0xca3, 0x6130, 0x0, 0x1);
        gbc.writeMem(0xd914, { 0xde, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7b69);
        EXPECT(gbc.pc(), 0xd916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd914), 0xde);
        EXPECT(gbc.readMem(0xd915), 0xc5);
        // DE 01B3
        gbc.setState(0xbac4, 0xbc13, 0x9a80, 0x219e, 0x3828, 0xffda, 0x1, 0x1);
        gbc.writeMem(0xbac4, { 0xde, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xbc13);
        EXPECT(gbc.pc(), 0xbac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac4), 0xde);
        EXPECT(gbc.readMem(0xbac5), 0x32);
        // DE 01B4
        gbc.setState(0xcea8, 0x2dc, 0xca80, 0x284, 0x75e5, 0xaf00, 0x0, 0x0);
        gbc.writeMem(0xcea8, { 0xde, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2dc);
        EXPECT(gbc.pc(), 0xceaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea8), 0xde);
        EXPECT(gbc.readMem(0xcea9), 0xca);
        // DE 01B5
        gbc.setState(0x914, 0xb6b5, 0x2af0, 0xc189, 0x781b, 0xdf68, 0x1, 0x1);
        gbc.writeMem(0x914, { 0xde, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb6b5);
        EXPECT(gbc.pc(), 0x916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01B6
        gbc.setState(0xb8b, 0x86a5, 0xd590, 0x9089, 0x8828, 0x5e38, 0x1, 0x1);
        gbc.writeMem(0xb8b, { 0xde, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x86a5);
        EXPECT(gbc.pc(), 0xb8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01B7
        gbc.setState(0x85fb, 0x5b84, 0x4b0, 0x2e5b, 0x641e, 0x6ee4, 0x1, 0x0);
        gbc.writeMem(0x85fb, { 0xde, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5b84);
        EXPECT(gbc.pc(), 0x85fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85fb), 0xde);
        EXPECT(gbc.readMem(0x85fc), 0xdc);
        // DE 01B8
        gbc.setState(0x274e, 0x7b28, 0x2860, 0xd5cf, 0xd467, 0x8b5, 0x1, 0x0);
        gbc.writeMem(0x274e, { 0xde, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7b28);
        EXPECT(gbc.pc(), 0x2750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01B9
        gbc.setState(0x1ede, 0x11c0, 0x480, 0x2c38, 0x8b34, 0x5f95, 0x0, 0x0);
        gbc.writeMem(0x1ede, { 0xde, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x11c0);
        EXPECT(gbc.pc(), 0x1ee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01BB
        gbc.setState(0x658a, 0x29f2, 0xf0e0, 0xbd79, 0x118f, 0x3eab, 0x1, 0x0);
        gbc.writeMem(0x658a, { 0xde, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x29f2);
        EXPECT(gbc.pc(), 0x658c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01BC
        gbc.setState(0xaa1b, 0xa5ae, 0xb460, 0xeacb, 0x44c7, 0x9bb8, 0x1, 0x0);
        gbc.writeMem(0xaa1b, { 0xde, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa5ae);
        EXPECT(gbc.pc(), 0xaa1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa1b), 0xde);
        EXPECT(gbc.readMem(0xaa1c), 0x6b);
        // DE 01BD
        gbc.setState(0x44b2, 0xf22a, 0x8390, 0x8eed, 0x527e, 0xd650, 0x0, 0x1);
        gbc.writeMem(0x44b2, { 0xde, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf22a);
        EXPECT(gbc.pc(), 0x44b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01BE
        gbc.setState(0x4f8d, 0x8e73, 0x4330, 0x9b53, 0xab37, 0xda6, 0x1, 0x0);
        gbc.writeMem(0x4f8d, { 0xde, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8e73);
        EXPECT(gbc.pc(), 0x4f8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01BF
        gbc.setState(0x897b, 0xcff1, 0x6480, 0x2bbf, 0xb2ad, 0xc69d, 0x0, 0x0);
        gbc.writeMem(0x897b, { 0xde, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcff1);
        EXPECT(gbc.pc(), 0x897d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x897b), 0xde);
        EXPECT(gbc.readMem(0x897c), 0x56);
        // DE 01C0
        gbc.setState(0x2216, 0xf689, 0xdbb0, 0xe38b, 0xea08, 0xea6b, 0x1, 0x0);
        gbc.writeMem(0x2216, { 0xde, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf689);
        EXPECT(gbc.pc(), 0x2218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01C1
        gbc.setState(0x8482, 0x4ebe, 0x78f0, 0x4272, 0x9c10, 0x417c, 0x0, 0x0);
        gbc.writeMem(0x8482, { 0xde, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4ebe);
        EXPECT(gbc.pc(), 0x8484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8482), 0xde);
        EXPECT(gbc.readMem(0x8483), 0x7f);
        // DE 01C2
        gbc.setState(0x9174, 0x96df, 0xcd30, 0xe55c, 0xd780, 0xcdb4, 0x1, 0x1);
        gbc.writeMem(0x9174, { 0xde, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x96df);
        EXPECT(gbc.pc(), 0x9176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9174), 0xde);
        EXPECT(gbc.readMem(0x9175), 0x5f);
        // DE 01C3
        gbc.setState(0x711b, 0x178b, 0x94c0, 0x719e, 0xba27, 0x7f37, 0x0, 0x1);
        gbc.writeMem(0x711b, { 0xde, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x178b);
        EXPECT(gbc.pc(), 0x711d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01C4
        gbc.setState(0x4dd9, 0xa0a2, 0x20d0, 0xa6bb, 0xa33, 0xe0c6, 0x0, 0x1);
        gbc.writeMem(0x4dd9, { 0xde, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa0a2);
        EXPECT(gbc.pc(), 0x4ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01C5
        gbc.setState(0x91e7, 0xc5ec, 0x6c70, 0xbcb, 0x5056, 0x6146, 0x0, 0x1);
        gbc.writeMem(0x91e7, { 0xde, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc5ec);
        EXPECT(gbc.pc(), 0x91e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e7), 0xde);
        EXPECT(gbc.readMem(0x91e8), 0x1);
        // DE 01C6
        gbc.setState(0xdb3a, 0xf2eb, 0x91a0, 0xa3bd, 0xeaad, 0x8064, 0x1, 0x1);
        gbc.writeMem(0xdb3a, { 0xde, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf2eb);
        EXPECT(gbc.pc(), 0xdb3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3a), 0xde);
        EXPECT(gbc.readMem(0xdb3b), 0xb0);
        // DE 01C7
        gbc.setState(0x3f7c, 0x3b1e, 0x3b0, 0xada8, 0x9161, 0xdc86, 0x1, 0x0);
        gbc.writeMem(0x3f7c, { 0xde, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3b1e);
        EXPECT(gbc.pc(), 0x3f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01C8
        gbc.setState(0x16a5, 0x2952, 0xd580, 0x1f53, 0x9bbe, 0xcbf6, 0x1, 0x1);
        gbc.writeMem(0x16a5, { 0xde, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2952);
        EXPECT(gbc.pc(), 0x16a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01C9
        gbc.setState(0xb06, 0x39ec, 0x2450, 0x25c0, 0x8332, 0xb130, 0x0, 0x1);
        gbc.writeMem(0xb06, { 0xde, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x39ec);
        EXPECT(gbc.pc(), 0xb08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01CA
        gbc.setState(0x4b37, 0xa700, 0x2760, 0xdacd, 0xc69e, 0xb7dc, 0x1, 0x1);
        gbc.writeMem(0x4b37, { 0xde, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa700);
        EXPECT(gbc.pc(), 0x4b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01CB
        gbc.setState(0x271d, 0xacbe, 0x97e0, 0xef67, 0xd9c9, 0xf787, 0x0, 0x1);
        gbc.writeMem(0x271d, { 0xde, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xacbe);
        EXPECT(gbc.pc(), 0x271f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01CC
        gbc.setState(0xb903, 0xc94b, 0xe000, 0xf6d7, 0xf7a8, 0xbca7, 0x0, 0x0);
        gbc.writeMem(0xb903, { 0xde, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc94b);
        EXPECT(gbc.pc(), 0xb905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb903), 0xde);
        EXPECT(gbc.readMem(0xb904), 0xf);
        // DE 01CD
        gbc.setState(0x49c7, 0xd248, 0x7dc0, 0x8942, 0x6854, 0x3086, 0x1, 0x1);
        gbc.writeMem(0x49c7, { 0xde, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd248);
        EXPECT(gbc.pc(), 0x49c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01CE
        gbc.setState(0x97b2, 0xb717, 0xf20, 0x340f, 0xc394, 0xd4c7, 0x0, 0x1);
        gbc.writeMem(0x97b2, { 0xde, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb717);
        EXPECT(gbc.pc(), 0x97b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b2), 0xde);
        EXPECT(gbc.readMem(0x97b3), 0xf3);
        // DE 01D0
        gbc.setState(0xed79, 0x9eb6, 0x6850, 0x14e4, 0x445d, 0xa91d, 0x1, 0x0);
        gbc.writeMem(0xed79, { 0xde, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9eb6);
        EXPECT(gbc.pc(), 0xed7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed79), 0xde);
        EXPECT(gbc.readMem(0xed7a), 0x3e);
        // DE 01D1
        gbc.setState(0x7d2a, 0x523, 0xfda0, 0xf1aa, 0x34b5, 0x4727, 0x1, 0x1);
        gbc.writeMem(0x7d2a, { 0xde, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x523);
        EXPECT(gbc.pc(), 0x7d2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01D2
        gbc.setState(0x5791, 0x8384, 0x5260, 0x85e3, 0xb5bd, 0x7195, 0x0, 0x0);
        gbc.writeMem(0x5791, { 0xde, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8384);
        EXPECT(gbc.pc(), 0x5793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01D3
        gbc.setState(0x4d92, 0xa1a9, 0xa720, 0x2a8d, 0x7841, 0xd4c0, 0x1, 0x0);
        gbc.writeMem(0x4d92, { 0xde, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa1a9);
        EXPECT(gbc.pc(), 0x4d94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01D4
        gbc.setState(0x6d2f, 0x2b39, 0x2d0, 0x6e59, 0xb858, 0xf652, 0x0, 0x1);
        gbc.writeMem(0x6d2f, { 0xde, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2b39);
        EXPECT(gbc.pc(), 0x6d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01D5
        gbc.setState(0x3d9a, 0x1d91, 0xac40, 0x4dad, 0x2ae3, 0xeffc, 0x0, 0x0);
        gbc.writeMem(0x3d9a, { 0xde, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1d91);
        EXPECT(gbc.pc(), 0x3d9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01D6
        gbc.setState(0x6b70, 0xfabe, 0xd360, 0xaa48, 0xd3b6, 0x64a5, 0x0, 0x0);
        gbc.writeMem(0x6b70, { 0xde, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfabe);
        EXPECT(gbc.pc(), 0x6b72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01D7
        gbc.setState(0x3afc, 0xeb13, 0x6d00, 0xbb2f, 0xe47a, 0xe553, 0x1, 0x0);
        gbc.writeMem(0x3afc, { 0xde, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xeb13);
        EXPECT(gbc.pc(), 0x3afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01D8
        gbc.setState(0xa628, 0xa572, 0x9f30, 0x7c07, 0xb1dc, 0x941b, 0x0, 0x0);
        gbc.writeMem(0xa628, { 0xde, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa572);
        EXPECT(gbc.pc(), 0xa62a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa628), 0xde);
        EXPECT(gbc.readMem(0xa629), 0x3f);
        // DE 01DA
        gbc.setState(0x66d7, 0xd475, 0x3910, 0x98ed, 0x2a21, 0x1ba9, 0x0, 0x1);
        gbc.writeMem(0x66d7, { 0xde, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd475);
        EXPECT(gbc.pc(), 0x66d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01DB
        gbc.setState(0x8ca1, 0xabc2, 0x50b0, 0x79d4, 0xb810, 0xef7e, 0x1, 0x1);
        gbc.writeMem(0x8ca1, { 0xde, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xabc2);
        EXPECT(gbc.pc(), 0x8ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca1), 0xde);
        EXPECT(gbc.readMem(0x8ca2), 0xfc);
        // DE 01DC
        gbc.setState(0x2676, 0x26c1, 0x5900, 0x4814, 0x34e2, 0xb721, 0x0, 0x1);
        gbc.writeMem(0x2676, { 0xde, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x26c1);
        EXPECT(gbc.pc(), 0x2678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01DD
        gbc.setState(0x6798, 0x955d, 0x4230, 0x879a, 0x63c1, 0x1e84, 0x1, 0x1);
        gbc.writeMem(0x6798, { 0xde, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x955d);
        EXPECT(gbc.pc(), 0x679a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01DE
        gbc.setState(0x7ae4, 0x5061, 0xe970, 0xdd98, 0x61f7, 0xedd4, 0x0, 0x0);
        gbc.writeMem(0x7ae4, { 0xde, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5061);
        EXPECT(gbc.pc(), 0x7ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01DF
        gbc.setState(0x1e6e, 0xf3a4, 0x3b10, 0x4f5a, 0xa51f, 0x4405, 0x0, 0x1);
        gbc.writeMem(0x1e6e, { 0xde, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf3a4);
        EXPECT(gbc.pc(), 0x1e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01E0
        gbc.setState(0x1b90, 0x8ced, 0x1b60, 0xdc39, 0xf47b, 0x8a18, 0x0, 0x1);
        gbc.writeMem(0x1b90, { 0xde, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8ced);
        EXPECT(gbc.pc(), 0x1b92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01E2
        gbc.setState(0x6678, 0x20a7, 0xdc00, 0xd423, 0xefd7, 0x3034, 0x1, 0x0);
        gbc.writeMem(0x6678, { 0xde, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x20a7);
        EXPECT(gbc.pc(), 0x667a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01E3
        gbc.setState(0x8af3, 0xc1d6, 0x55f0, 0x4dd, 0xcca7, 0x9001, 0x1, 0x1);
        gbc.writeMem(0x8af3, { 0xde, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc1d6);
        EXPECT(gbc.pc(), 0x8af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af3), 0xde);
        EXPECT(gbc.readMem(0x8af4), 0xe9);
        // DE 01E4
        gbc.setState(0x3087, 0x8439, 0xa390, 0xdcca, 0x5ab3, 0x909e, 0x0, 0x1);
        gbc.writeMem(0x3087, { 0xde, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8439);
        EXPECT(gbc.pc(), 0x3089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01E5
        gbc.setState(0x6462, 0xe61d, 0x33e0, 0x3ef5, 0x6dbd, 0xe8f6, 0x0, 0x1);
        gbc.writeMem(0x6462, { 0xde, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe61d);
        EXPECT(gbc.pc(), 0x6464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01E7
        gbc.setState(0xb6ab, 0x527a, 0x5240, 0x33fa, 0xb066, 0x20c3, 0x0, 0x1);
        gbc.writeMem(0xb6ab, { 0xde, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x527a);
        EXPECT(gbc.pc(), 0xb6ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ab), 0xde);
        EXPECT(gbc.readMem(0xb6ac), 0x3f);
        // DE 01E8
        gbc.setState(0x955f, 0x24bc, 0xd950, 0xe8eb, 0x15d9, 0xb2cc, 0x1, 0x1);
        gbc.writeMem(0x955f, { 0xde, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x24bc);
        EXPECT(gbc.pc(), 0x9561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x955f), 0xde);
        EXPECT(gbc.readMem(0x9560), 0xb1);
        // DE 01EA
        gbc.setState(0xd47c, 0x92b9, 0x5810, 0xf69b, 0xe360, 0xecab, 0x1, 0x1);
        gbc.writeMem(0xd47c, { 0xde, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x92b9);
        EXPECT(gbc.pc(), 0xd47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47c), 0xde);
        EXPECT(gbc.readMem(0xd47d), 0xe0);
        // DE 01EB
        gbc.setState(0x5c85, 0xa84a, 0x11d0, 0x3724, 0x38ee, 0x61dc, 0x0, 0x0);
        gbc.writeMem(0x5c85, { 0xde, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa84a);
        EXPECT(gbc.pc(), 0x5c87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01ED
        gbc.setState(0x2255, 0x927, 0x1230, 0x5329, 0xda96, 0x414a, 0x1, 0x0);
        gbc.writeMem(0x2255, { 0xde, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x927);
        EXPECT(gbc.pc(), 0x2257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 01EE
        gbc.setState(0x8248, 0xe603, 0x3e40, 0x9378, 0xf3b0, 0xab3f, 0x0, 0x0);
        gbc.writeMem(0x8248, { 0xde, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe603);
        EXPECT(gbc.pc(), 0x824a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8248), 0xde);
        EXPECT(gbc.readMem(0x8249), 0x9b);
        // DE 01EF
        gbc.setState(0x318a, 0xff2, 0x8f60, 0x9c1f, 0xd7f6, 0x9f5c, 0x0, 0x1);
        gbc.writeMem(0x318a, { 0xde, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xff2);
        EXPECT(gbc.pc(), 0x318c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01F0
        gbc.setState(0x9146, 0xc0e6, 0x1530, 0x72c3, 0x8bdf, 0xb4fa, 0x0, 0x0);
        gbc.writeMem(0x9146, { 0xde, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc0e6);
        EXPECT(gbc.pc(), 0x9148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9146), 0xde);
        EXPECT(gbc.readMem(0x9147), 0x9d);
        // DE 01F1
        gbc.setState(0x5ba9, 0xbe7, 0x2b60, 0x5fd7, 0x7eff, 0xe96d, 0x1, 0x1);
        gbc.writeMem(0x5ba9, { 0xde, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xbe7);
        EXPECT(gbc.pc(), 0x5bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01F2
        gbc.setState(0x57c4, 0x3217, 0x2f00, 0xddac, 0x1511, 0x9550, 0x0, 0x0);
        gbc.writeMem(0x57c4, { 0xde, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3217);
        EXPECT(gbc.pc(), 0x57c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01F3
        gbc.setState(0x3c89, 0x2368, 0xee60, 0x5950, 0x154d, 0xc599, 0x1, 0x0);
        gbc.writeMem(0x3c89, { 0xde, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2368);
        EXPECT(gbc.pc(), 0x3c8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01F4
        gbc.setState(0x6873, 0x93f, 0xaaa0, 0x1c3e, 0xa23f, 0xbfad, 0x0, 0x1);
        gbc.writeMem(0x6873, { 0xde, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x93f);
        EXPECT(gbc.pc(), 0x6875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01F5
        gbc.setState(0x248f, 0xd554, 0x6a70, 0xfe3, 0x686a, 0xbfcc, 0x1, 0x0);
        gbc.writeMem(0x248f, { 0xde, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd554);
        EXPECT(gbc.pc(), 0x2491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01F6
        gbc.setState(0x6ff5, 0xdfd6, 0xd80, 0x1b2d, 0xc5e8, 0xfae9, 0x0, 0x0);
        gbc.writeMem(0x6ff5, { 0xde, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdfd6);
        EXPECT(gbc.pc(), 0x6ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01F7
        gbc.setState(0x53cd, 0x4384, 0xf130, 0xd908, 0x11d8, 0xcfe5, 0x1, 0x0);
        gbc.writeMem(0x53cd, { 0xde, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4384);
        EXPECT(gbc.pc(), 0x53cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 01F9
        gbc.setState(0x31d5, 0x7cbb, 0x5e40, 0x6096, 0x459a, 0x204f, 0x1, 0x0);
        gbc.writeMem(0x31d5, { 0xde, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7cbb);
        EXPECT(gbc.pc(), 0x31d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 01FA
        gbc.setState(0x8689, 0xa06, 0x79a0, 0x1f09, 0x1848, 0x4214, 0x0, 0x1);
        gbc.writeMem(0x8689, { 0xde, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa06);
        EXPECT(gbc.pc(), 0x868b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8689), 0xde);
        EXPECT(gbc.readMem(0x868a), 0x39);
        // DE 01FB
        gbc.setState(0x714f, 0xc94, 0x4900, 0x3625, 0xb889, 0xe578, 0x0, 0x0);
        gbc.writeMem(0x714f, { 0xde, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc94);
        EXPECT(gbc.pc(), 0x7151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01FC
        gbc.setState(0xaee3, 0x27b, 0xd350, 0x26f6, 0x2f9c, 0xa274, 0x0, 0x1);
        gbc.writeMem(0xaee3, { 0xde, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x27b);
        EXPECT(gbc.pc(), 0xaee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee3), 0xde);
        EXPECT(gbc.readMem(0xaee4), 0xbb);
        // DE 01FD
        gbc.setState(0x5220, 0x67dd, 0xfc0, 0xf502, 0x98ed, 0x3391, 0x1, 0x0);
        gbc.writeMem(0x5220, { 0xde, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x67dd);
        EXPECT(gbc.pc(), 0x5222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 01FE
        gbc.setState(0xc3cf, 0x4cbf, 0xe2e0, 0x8aff, 0x16, 0x6793, 0x0, 0x1);
        gbc.writeMem(0xc3cf, { 0xde, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4cbf);
        EXPECT(gbc.pc(), 0xc3d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3cf), 0xde);
        EXPECT(gbc.readMem(0xc3d0), 0x3);
        // DE 01FF
        gbc.setState(0x2482, 0x897a, 0xe940, 0x933c, 0x9a0e, 0xf49, 0x0, 0x0);
        gbc.writeMem(0x2482, { 0xde, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x897a);
        EXPECT(gbc.pc(), 0x2484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0200
        gbc.setState(0x81a7, 0xf4eb, 0x40, 0xef97, 0x6983, 0x928b, 0x1, 0x1);
        gbc.writeMem(0x81a7, { 0xde, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf4eb);
        EXPECT(gbc.pc(), 0x81a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a7), 0xde);
        EXPECT(gbc.readMem(0x81a8), 0xfd);
        // DE 0201
        gbc.setState(0xd832, 0x3e69, 0xaa80, 0x1e79, 0x7cef, 0xb4ab, 0x0, 0x1);
        gbc.writeMem(0xd832, { 0xde, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3e69);
        EXPECT(gbc.pc(), 0xd834);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd832), 0xde);
        EXPECT(gbc.readMem(0xd833), 0xda);
        // DE 0202
        gbc.setState(0x5812, 0xefaf, 0x120, 0xbcae, 0xc996, 0xcf26, 0x1, 0x1);
        gbc.writeMem(0x5812, { 0xde, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xefaf);
        EXPECT(gbc.pc(), 0x5814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0203
        gbc.setState(0x1b16, 0xf14c, 0x8750, 0x1336, 0xa6d7, 0xe81c, 0x0, 0x1);
        gbc.writeMem(0x1b16, { 0xde, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf14c);
        EXPECT(gbc.pc(), 0x1b18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0204
        gbc.setState(0xb9ec, 0x27a5, 0x26a0, 0x42ed, 0x92be, 0x71d9, 0x1, 0x1);
        gbc.writeMem(0xb9ec, { 0xde, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x27a5);
        EXPECT(gbc.pc(), 0xb9ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ec), 0xde);
        EXPECT(gbc.readMem(0xb9ed), 0xa0);
        // DE 0205
        gbc.setState(0x7b0b, 0xb70d, 0x4da0, 0x631d, 0x9415, 0x211d, 0x0, 0x0);
        gbc.writeMem(0x7b0b, { 0xde, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb70d);
        EXPECT(gbc.pc(), 0x7b0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0206
        gbc.setState(0x59a6, 0x5fc2, 0x5a70, 0xefa6, 0xa17b, 0x75c1, 0x1, 0x1);
        gbc.writeMem(0x59a6, { 0xde, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5fc2);
        EXPECT(gbc.pc(), 0x59a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0207
        gbc.setState(0x618, 0xc778, 0xdb80, 0x7fe2, 0xcfa7, 0x8d26, 0x0, 0x0);
        gbc.writeMem(0x618, { 0xde, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc778);
        EXPECT(gbc.pc(), 0x61a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0208
        gbc.setState(0xc3ee, 0x5e34, 0xe590, 0x914f, 0x4716, 0xf255, 0x0, 0x1);
        gbc.writeMem(0xc3ee, { 0xde, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5e34);
        EXPECT(gbc.pc(), 0xc3f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ee), 0xde);
        EXPECT(gbc.readMem(0xc3ef), 0x74);
        // DE 0209
        gbc.setState(0xa498, 0x5df7, 0xa1f0, 0x485f, 0x7fb1, 0x1fb9, 0x0, 0x0);
        gbc.writeMem(0xa498, { 0xde, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5df7);
        EXPECT(gbc.pc(), 0xa49a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa498), 0xde);
        EXPECT(gbc.readMem(0xa499), 0x68);
        // DE 020A
        gbc.setState(0x524d, 0x9990, 0xadc0, 0xe2c2, 0xbe9e, 0xf71c, 0x0, 0x0);
        gbc.writeMem(0x524d, { 0xde, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9990);
        EXPECT(gbc.pc(), 0x524f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 020B
        gbc.setState(0x5f35, 0xda08, 0xb0a0, 0x34ba, 0xb6b, 0x2cec, 0x1, 0x0);
        gbc.writeMem(0x5f35, { 0xde, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xda08);
        EXPECT(gbc.pc(), 0x5f37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 020C
        gbc.setState(0xef23, 0xb8de, 0x7150, 0xcb2, 0x251e, 0xd2a, 0x0, 0x0);
        gbc.writeMem(0xef23, { 0xde, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb8de);
        EXPECT(gbc.pc(), 0xef25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef23), 0xde);
        EXPECT(gbc.readMem(0xef24), 0xa2);
        // DE 020D
        gbc.setState(0x76b9, 0xabeb, 0xebf0, 0xec4, 0x4e19, 0x816e, 0x0, 0x1);
        gbc.writeMem(0x76b9, { 0xde, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xabeb);
        EXPECT(gbc.pc(), 0x76bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 020E
        gbc.setState(0x8fe0, 0x2af9, 0xc3b0, 0x35a1, 0x7816, 0x5338, 0x0, 0x1);
        gbc.writeMem(0x8fe0, { 0xde, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2af9);
        EXPECT(gbc.pc(), 0x8fe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe0), 0xde);
        EXPECT(gbc.readMem(0x8fe1), 0x23);
        // DE 020F
        gbc.setState(0x39ea, 0x77e4, 0x1240, 0xd8b8, 0xde9e, 0xd26d, 0x1, 0x0);
        gbc.writeMem(0x39ea, { 0xde, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x77e4);
        EXPECT(gbc.pc(), 0x39ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0210
        gbc.setState(0xcf0e, 0x2ecd, 0x90f0, 0x6936, 0xade0, 0xd1b5, 0x0, 0x1);
        gbc.writeMem(0xcf0e, { 0xde, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2ecd);
        EXPECT(gbc.pc(), 0xcf10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf0e), 0xde);
        EXPECT(gbc.readMem(0xcf0f), 0x53);
        // DE 0211
        gbc.setState(0x8c58, 0xe0a0, 0xcd40, 0x8612, 0x81b7, 0xa27e, 0x0, 0x1);
        gbc.writeMem(0x8c58, { 0xde, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe0a0);
        EXPECT(gbc.pc(), 0x8c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c58), 0xde);
        EXPECT(gbc.readMem(0x8c59), 0x5d);
        // DE 0212
        gbc.setState(0x4700, 0x7c5f, 0xa320, 0x66d7, 0xcdd9, 0xce9c, 0x0, 0x1);
        gbc.writeMem(0x4700, { 0xde, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7c5f);
        EXPECT(gbc.pc(), 0x4702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0213
        gbc.setState(0x7cee, 0xeec8, 0xf820, 0xc7db, 0x9754, 0x83dd, 0x1, 0x0);
        gbc.writeMem(0x7cee, { 0xde, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xeec8);
        EXPECT(gbc.pc(), 0x7cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0214
        gbc.setState(0x5375, 0x4a70, 0x4800, 0x3f1a, 0xf6a, 0xb9f4, 0x0, 0x1);
        gbc.writeMem(0x5375, { 0xde, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4a70);
        EXPECT(gbc.pc(), 0x5377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0215
        gbc.setState(0xc242, 0x7d96, 0xcdf0, 0x3e93, 0x16d1, 0xba94, 0x1, 0x0);
        gbc.writeMem(0xc242, { 0xde, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7d96);
        EXPECT(gbc.pc(), 0xc244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc242), 0xde);
        EXPECT(gbc.readMem(0xc243), 0x74);
        // DE 0216
        gbc.setState(0xc84f, 0x76bd, 0x82f0, 0x4e91, 0xaee0, 0xffd6, 0x0, 0x0);
        gbc.writeMem(0xc84f, { 0xde, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x76bd);
        EXPECT(gbc.pc(), 0xc851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84f), 0xde);
        EXPECT(gbc.readMem(0xc850), 0x81);
        // DE 0217
        gbc.setState(0xb2b0, 0x6e1b, 0x6eb0, 0xbf98, 0xfcec, 0xb0c4, 0x1, 0x0);
        gbc.writeMem(0xb2b0, { 0xde, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6e1b);
        EXPECT(gbc.pc(), 0xb2b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b0), 0xde);
        EXPECT(gbc.readMem(0xb2b1), 0xc7);
        // DE 0218
        gbc.setState(0xd18d, 0x5545, 0xa900, 0x4d3, 0xa551, 0xbb5d, 0x1, 0x0);
        gbc.writeMem(0xd18d, { 0xde, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5545);
        EXPECT(gbc.pc(), 0xd18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd18d), 0xde);
        EXPECT(gbc.readMem(0xd18e), 0x0);
        // DE 0219
        gbc.setState(0x5437, 0xa6d6, 0xea30, 0xd987, 0x1907, 0x1b48, 0x1, 0x1);
        gbc.writeMem(0x5437, { 0xde, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa6d6);
        EXPECT(gbc.pc(), 0x5439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 021A
        gbc.setState(0x2a6d, 0x9ca3, 0xa5d0, 0x7098, 0x683c, 0x97fc, 0x0, 0x1);
        gbc.writeMem(0x2a6d, { 0xde, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9ca3);
        EXPECT(gbc.pc(), 0x2a6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 021B
        gbc.setState(0x8979, 0x9a64, 0x5a30, 0x7a7d, 0x9614, 0x76, 0x0, 0x1);
        gbc.writeMem(0x8979, { 0xde, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9a64);
        EXPECT(gbc.pc(), 0x897b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8979), 0xde);
        EXPECT(gbc.readMem(0x897a), 0xda);
        // DE 021D
        gbc.setState(0x967e, 0xc02a, 0xfa20, 0x6dc6, 0x8c0, 0x11f2, 0x1, 0x0);
        gbc.writeMem(0x967e, { 0xde, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc02a);
        EXPECT(gbc.pc(), 0x9680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x967e), 0xde);
        EXPECT(gbc.readMem(0x967f), 0x27);
        // DE 021E
        gbc.setState(0x2509, 0x3fc5, 0x1da0, 0x3847, 0xa47e, 0x9219, 0x0, 0x0);
        gbc.writeMem(0x2509, { 0xde, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3fc5);
        EXPECT(gbc.pc(), 0x250b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 021F
        gbc.setState(0xef1c, 0x8a85, 0x9240, 0xa60e, 0x9cd, 0x5d55, 0x0, 0x1);
        gbc.writeMem(0xef1c, { 0xde, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8a85);
        EXPECT(gbc.pc(), 0xef1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1c), 0xde);
        EXPECT(gbc.readMem(0xef1d), 0xc7);
        // DE 0220
        gbc.setState(0x52d5, 0x3012, 0x3550, 0x73d2, 0x45c5, 0x6343, 0x1, 0x1);
        gbc.writeMem(0x52d5, { 0xde, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3012);
        EXPECT(gbc.pc(), 0x52d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0221
        gbc.setState(0x4bc2, 0x53b, 0x74b0, 0xc570, 0x1f00, 0x7788, 0x1, 0x1);
        gbc.writeMem(0x4bc2, { 0xde, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x53b);
        EXPECT(gbc.pc(), 0x4bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0222
        gbc.setState(0x6973, 0x67aa, 0x1c0, 0x2644, 0xba8a, 0xb2a5, 0x1, 0x1);
        gbc.writeMem(0x6973, { 0xde, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x67aa);
        EXPECT(gbc.pc(), 0x6975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0223
        gbc.setState(0x57ab, 0xba5f, 0x4140, 0xab66, 0x2dde, 0xb6ff, 0x1, 0x0);
        gbc.writeMem(0x57ab, { 0xde, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xba5f);
        EXPECT(gbc.pc(), 0x57ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0224
        gbc.setState(0xd0, 0xc62a, 0x5cf0, 0x1508, 0x8eff, 0x25c, 0x0, 0x1);
        gbc.writeMem(0xd0, { 0xde, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc62a);
        EXPECT(gbc.pc(), 0xd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0225
        gbc.setState(0xaa99, 0xf37e, 0x90d0, 0x242f, 0x4ce4, 0xbf87, 0x1, 0x1);
        gbc.writeMem(0xaa99, { 0xde, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf37e);
        EXPECT(gbc.pc(), 0xaa9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa99), 0xde);
        EXPECT(gbc.readMem(0xaa9a), 0xca);
        // DE 0226
        gbc.setState(0x2857, 0x405a, 0xff20, 0xece5, 0x5e3a, 0x64d6, 0x0, 0x1);
        gbc.writeMem(0x2857, { 0xde, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x405a);
        EXPECT(gbc.pc(), 0x2859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0227
        gbc.setState(0x3b0e, 0x293f, 0x23b0, 0x49ca, 0x382c, 0xb25d, 0x0, 0x1);
        gbc.writeMem(0x3b0e, { 0xde, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x293f);
        EXPECT(gbc.pc(), 0x3b10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0228
        gbc.setState(0xad44, 0xe3e3, 0x3ad0, 0xfe73, 0x73c2, 0xc42d, 0x1, 0x1);
        gbc.writeMem(0xad44, { 0xde, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe3e3);
        EXPECT(gbc.pc(), 0xad46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad44), 0xde);
        EXPECT(gbc.readMem(0xad45), 0x6);
        // DE 022A
        gbc.setState(0x92df, 0x5937, 0x7cd0, 0x7ed6, 0x28df, 0x1488, 0x0, 0x0);
        gbc.writeMem(0x92df, { 0xde, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5937);
        EXPECT(gbc.pc(), 0x92e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92df), 0xde);
        EXPECT(gbc.readMem(0x92e0), 0x66);
        // DE 022B
        gbc.setState(0xbe03, 0xd186, 0xdbf0, 0xc131, 0x9c0a, 0x7560, 0x1, 0x1);
        gbc.writeMem(0xbe03, { 0xde, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd186);
        EXPECT(gbc.pc(), 0xbe05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe03), 0xde);
        EXPECT(gbc.readMem(0xbe04), 0xd);
        // DE 022C
        gbc.setState(0x1fdb, 0xabf2, 0x3690, 0x7d04, 0xac73, 0xb53a, 0x1, 0x1);
        gbc.writeMem(0x1fdb, { 0xde, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xabf2);
        EXPECT(gbc.pc(), 0x1fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 022D
        gbc.setState(0xa413, 0x1b84, 0x420, 0x6bca, 0x20c6, 0x17a5, 0x1, 0x0);
        gbc.writeMem(0xa413, { 0xde, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1b84);
        EXPECT(gbc.pc(), 0xa415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa413), 0xde);
        EXPECT(gbc.readMem(0xa414), 0x69);
        // DE 022E
        gbc.setState(0xecff, 0x30a1, 0xd980, 0x37c6, 0xc84a, 0xcc4b, 0x0, 0x0);
        gbc.writeMem(0xecff, { 0xde, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x30a1);
        EXPECT(gbc.pc(), 0xed01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecff), 0xde);
        EXPECT(gbc.readMem(0xed00), 0x23);
        // DE 022F
        gbc.setState(0xc594, 0x61e0, 0x16f0, 0x59a5, 0x1f00, 0x3291, 0x1, 0x1);
        gbc.writeMem(0xc594, { 0xde, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x61e0);
        EXPECT(gbc.pc(), 0xc596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc594), 0xde);
        EXPECT(gbc.readMem(0xc595), 0xf4);
        // DE 0230
        gbc.setState(0xc9d9, 0xc7cc, 0x2b40, 0xaeae, 0x5f75, 0x58ed, 0x1, 0x1);
        gbc.writeMem(0xc9d9, { 0xde, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc7cc);
        EXPECT(gbc.pc(), 0xc9db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9d9), 0xde);
        EXPECT(gbc.readMem(0xc9da), 0x53);
        // DE 0231
        gbc.setState(0x95e6, 0x5c08, 0x9400, 0x6abd, 0x79ff, 0xa274, 0x0, 0x0);
        gbc.writeMem(0x95e6, { 0xde, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5c08);
        EXPECT(gbc.pc(), 0x95e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e6), 0xde);
        EXPECT(gbc.readMem(0x95e7), 0x19);
        // DE 0232
        gbc.setState(0x7a94, 0xd7b3, 0x8900, 0x6a86, 0x3b5a, 0xac97, 0x1, 0x1);
        gbc.writeMem(0x7a94, { 0xde, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd7b3);
        EXPECT(gbc.pc(), 0x7a96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0233
        gbc.setState(0x435, 0xe2aa, 0x35e0, 0xdf3e, 0xedf2, 0x7906, 0x1, 0x1);
        gbc.writeMem(0x435, { 0xde, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe2aa);
        EXPECT(gbc.pc(), 0x437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0234
        gbc.setState(0xc803, 0x33d7, 0x8ff0, 0x6829, 0x81d5, 0x7ca2, 0x1, 0x1);
        gbc.writeMem(0xc803, { 0xde, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x33d7);
        EXPECT(gbc.pc(), 0xc805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc803), 0xde);
        EXPECT(gbc.readMem(0xc804), 0x56);
        // DE 0235
        gbc.setState(0x45ce, 0xf7f6, 0x5710, 0x78f0, 0x6d05, 0x10, 0x1, 0x1);
        gbc.writeMem(0x45ce, { 0xde, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf7f6);
        EXPECT(gbc.pc(), 0x45d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0236
        gbc.setState(0xe562, 0xf141, 0xfee0, 0xb21c, 0xebf0, 0x43c5, 0x0, 0x0);
        gbc.writeMem(0xe562, { 0xde, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf141);
        EXPECT(gbc.pc(), 0xe564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe562), 0xde);
        EXPECT(gbc.readMem(0xe563), 0x14);
        // DE 0237
        gbc.setState(0xe614, 0xac41, 0x6b80, 0x38f1, 0xd7a5, 0x43a4, 0x0, 0x0);
        gbc.writeMem(0xe614, { 0xde, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xac41);
        EXPECT(gbc.pc(), 0xe616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe614), 0xde);
        EXPECT(gbc.readMem(0xe615), 0x22);
        // DE 0238
        gbc.setState(0xb4dc, 0xc46f, 0xf100, 0x69f9, 0xbf7c, 0x308c, 0x1, 0x1);
        gbc.writeMem(0xb4dc, { 0xde, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc46f);
        EXPECT(gbc.pc(), 0xb4de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4dc), 0xde);
        EXPECT(gbc.readMem(0xb4dd), 0x0);
        // DE 0239
        gbc.setState(0xdc80, 0x93bc, 0x8320, 0x9fc2, 0xbb, 0x4d65, 0x1, 0x1);
        gbc.writeMem(0xdc80, { 0xde, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x93bc);
        EXPECT(gbc.pc(), 0xdc82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc80), 0xde);
        EXPECT(gbc.readMem(0xdc81), 0xbd);
        // DE 023A
        gbc.setState(0x2f08, 0xedfc, 0x24f0, 0x30e9, 0x39d9, 0x9a6d, 0x0, 0x0);
        gbc.writeMem(0x2f08, { 0xde, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xedfc);
        EXPECT(gbc.pc(), 0x2f0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 023B
        gbc.setState(0xa7c7, 0x288, 0x9fe0, 0xc5aa, 0x3475, 0x5398, 0x1, 0x0);
        gbc.writeMem(0xa7c7, { 0xde, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x288);
        EXPECT(gbc.pc(), 0xa7c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c7), 0xde);
        EXPECT(gbc.readMem(0xa7c8), 0x65);
        // DE 023C
        gbc.setState(0x8f3, 0x767, 0xc5c0, 0xf5dd, 0x19dd, 0xdb4a, 0x0, 0x0);
        gbc.writeMem(0x8f3, { 0xde, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x767);
        EXPECT(gbc.pc(), 0x8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 023E
        gbc.setState(0xc996, 0xd7c2, 0xa3e0, 0xbe7b, 0xc5f5, 0xcddf, 0x1, 0x1);
        gbc.writeMem(0xc996, { 0xde, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd7c2);
        EXPECT(gbc.pc(), 0xc998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc996), 0xde);
        EXPECT(gbc.readMem(0xc997), 0x5b);
        // DE 023F
        gbc.setState(0x6b65, 0xb2b6, 0xdc60, 0x78eb, 0xf1ff, 0x6b9f, 0x1, 0x0);
        gbc.writeMem(0x6b65, { 0xde, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb2b6);
        EXPECT(gbc.pc(), 0x6b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0240
        gbc.setState(0x3931, 0xda92, 0xabe0, 0xe90f, 0x5e02, 0x281c, 0x1, 0x1);
        gbc.writeMem(0x3931, { 0xde, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xda92);
        EXPECT(gbc.pc(), 0x3933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0241
        gbc.setState(0x7af1, 0xe916, 0xb600, 0xdd17, 0xdb27, 0x60c, 0x0, 0x1);
        gbc.writeMem(0x7af1, { 0xde, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe916);
        EXPECT(gbc.pc(), 0x7af3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0242
        gbc.setState(0x2a01, 0x22f2, 0xed40, 0x3837, 0x7e30, 0xa17a, 0x1, 0x1);
        gbc.writeMem(0x2a01, { 0xde, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x22f2);
        EXPECT(gbc.pc(), 0x2a03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0243
        gbc.setState(0x7568, 0xecd9, 0x9340, 0x6d7, 0x9a63, 0xb9a9, 0x1, 0x0);
        gbc.writeMem(0x7568, { 0xde, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xecd9);
        EXPECT(gbc.pc(), 0x756a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0244
        gbc.setState(0x4a7c, 0xf18d, 0x3840, 0x475b, 0xd482, 0xbf5e, 0x0, 0x0);
        gbc.writeMem(0x4a7c, { 0xde, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf18d);
        EXPECT(gbc.pc(), 0x4a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0245
        gbc.setState(0xb017, 0x3ec2, 0x4c50, 0x6d, 0x16e8, 0x3ad8, 0x1, 0x0);
        gbc.writeMem(0xb017, { 0xde, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3ec2);
        EXPECT(gbc.pc(), 0xb019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb017), 0xde);
        EXPECT(gbc.readMem(0xb018), 0x68);
        // DE 0246
        gbc.setState(0x125c, 0x94, 0x3c60, 0x5e16, 0x968a, 0xf4b1, 0x0, 0x0);
        gbc.writeMem(0x125c, { 0xde, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x94);
        EXPECT(gbc.pc(), 0x125e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0247
        gbc.setState(0x9c78, 0xe379, 0x67e0, 0x143, 0xa02a, 0xb751, 0x1, 0x1);
        gbc.writeMem(0x9c78, { 0xde, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe379);
        EXPECT(gbc.pc(), 0x9c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c78), 0xde);
        EXPECT(gbc.readMem(0x9c79), 0xd3);
        // DE 0248
        gbc.setState(0xbaa2, 0xf05e, 0x48a0, 0x76f0, 0x48a1, 0x7f7f, 0x0, 0x1);
        gbc.writeMem(0xbaa2, { 0xde, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf05e);
        EXPECT(gbc.pc(), 0xbaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa2), 0xde);
        EXPECT(gbc.readMem(0xbaa3), 0x33);
        // DE 0249
        gbc.setState(0xd930, 0x27c, 0x27b0, 0xc2b1, 0x4850, 0xf9f8, 0x0, 0x1);
        gbc.writeMem(0xd930, { 0xde, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x27c);
        EXPECT(gbc.pc(), 0xd932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd930), 0xde);
        EXPECT(gbc.readMem(0xd931), 0xc9);
        // DE 024A
        gbc.setState(0x2b1, 0xa8e1, 0x3c40, 0x2d3c, 0xa174, 0xe365, 0x1, 0x1);
        gbc.writeMem(0x2b1, { 0xde, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa8e1);
        EXPECT(gbc.pc(), 0x2b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 024B
        gbc.setState(0x1620, 0xba97, 0x3e80, 0x1874, 0x5477, 0x70a9, 0x1, 0x0);
        gbc.writeMem(0x1620, { 0xde, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xba97);
        EXPECT(gbc.pc(), 0x1622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 024C
        gbc.setState(0x2b5, 0x2688, 0xf920, 0x5730, 0x44d3, 0xd077, 0x1, 0x0);
        gbc.writeMem(0x2b5, { 0xde, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2688);
        EXPECT(gbc.pc(), 0x2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 024D
        gbc.setState(0x7c17, 0xcbfd, 0x1950, 0xcd3b, 0x51b6, 0xb036, 0x1, 0x0);
        gbc.writeMem(0x7c17, { 0xde, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xcbfd);
        EXPECT(gbc.pc(), 0x7c19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 024E
        gbc.setState(0xcb0c, 0x2e79, 0xfe50, 0x59ab, 0xd784, 0xa5e6, 0x0, 0x0);
        gbc.writeMem(0xcb0c, { 0xde, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2e79);
        EXPECT(gbc.pc(), 0xcb0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb0c), 0xde);
        EXPECT(gbc.readMem(0xcb0d), 0x72);
        // DE 024F
        gbc.setState(0x2cf8, 0xa823, 0x5ad0, 0xebeb, 0xca45, 0x1170, 0x1, 0x0);
        gbc.writeMem(0x2cf8, { 0xde, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa823);
        EXPECT(gbc.pc(), 0x2cfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0251
        gbc.setState(0xa1ef, 0x5550, 0xe70, 0x1010, 0x34cb, 0xa17a, 0x1, 0x0);
        gbc.writeMem(0xa1ef, { 0xde, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5550);
        EXPECT(gbc.pc(), 0xa1f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ef), 0xde);
        EXPECT(gbc.readMem(0xa1f0), 0x14);
        // DE 0252
        gbc.setState(0x83e8, 0xa01c, 0xf940, 0xf07c, 0xeef3, 0x4312, 0x0, 0x0);
        gbc.writeMem(0x83e8, { 0xde, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa01c);
        EXPECT(gbc.pc(), 0x83ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e8), 0xde);
        EXPECT(gbc.readMem(0x83e9), 0x12);
        // DE 0253
        gbc.setState(0x4d83, 0xced7, 0xa6b0, 0xd601, 0xcb67, 0xeb9f, 0x1, 0x1);
        gbc.writeMem(0x4d83, { 0xde, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xced7);
        EXPECT(gbc.pc(), 0x4d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0254
        gbc.setState(0x2806, 0x2a96, 0x9ce0, 0x7a18, 0x25db, 0x6bb8, 0x1, 0x0);
        gbc.writeMem(0x2806, { 0xde, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2a96);
        EXPECT(gbc.pc(), 0x2808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0255
        gbc.setState(0x438f, 0x106b, 0xfff0, 0xfcae, 0xf436, 0x498d, 0x0, 0x0);
        gbc.writeMem(0x438f, { 0xde, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x106b);
        EXPECT(gbc.pc(), 0x4391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0256
        gbc.setState(0x8c67, 0x434c, 0xf140, 0x5154, 0x2d0e, 0xd432, 0x0, 0x0);
        gbc.writeMem(0x8c67, { 0xde, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x434c);
        EXPECT(gbc.pc(), 0x8c69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c67), 0xde);
        EXPECT(gbc.readMem(0x8c68), 0x4c);
        // DE 0257
        gbc.setState(0xa30c, 0x5371, 0xf090, 0x350, 0x5b92, 0xc42c, 0x1, 0x1);
        gbc.writeMem(0xa30c, { 0xde, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5371);
        EXPECT(gbc.pc(), 0xa30e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa30c), 0xde);
        EXPECT(gbc.readMem(0xa30d), 0x56);
        // DE 0258
        gbc.setState(0xa9c5, 0x476c, 0xb0c0, 0xd85b, 0x5b77, 0x6a5a, 0x0, 0x1);
        gbc.writeMem(0xa9c5, { 0xde, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x476c);
        EXPECT(gbc.pc(), 0xa9c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c5), 0xde);
        EXPECT(gbc.readMem(0xa9c6), 0x16);
        // DE 0259
        gbc.setState(0x570a, 0x9a98, 0x6490, 0x6257, 0x5fc0, 0xdd4a, 0x1, 0x0);
        gbc.writeMem(0x570a, { 0xde, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9a98);
        EXPECT(gbc.pc(), 0x570c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 025A
        gbc.setState(0xc0c4, 0x934e, 0x9270, 0x3bc6, 0xf39, 0xda3a, 0x1, 0x0);
        gbc.writeMem(0xc0c4, { 0xde, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x934e);
        EXPECT(gbc.pc(), 0xc0c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c4), 0xde);
        EXPECT(gbc.readMem(0xc0c5), 0x12);
        // DE 025C
        gbc.setState(0x4f53, 0x7670, 0x5a10, 0x6b43, 0x4135, 0x6713, 0x0, 0x1);
        gbc.writeMem(0x4f53, { 0xde, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7670);
        EXPECT(gbc.pc(), 0x4f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 025D
        gbc.setState(0x2940, 0x866e, 0x5c80, 0xe500, 0xf30d, 0x9488, 0x0, 0x0);
        gbc.writeMem(0x2940, { 0xde, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x866e);
        EXPECT(gbc.pc(), 0x2942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 025E
        gbc.setState(0x9a13, 0x2519, 0x6080, 0xee25, 0x6480, 0xab9, 0x0, 0x1);
        gbc.writeMem(0x9a13, { 0xde, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2519);
        EXPECT(gbc.pc(), 0x9a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a13), 0xde);
        EXPECT(gbc.readMem(0x9a14), 0x14);
        // DE 025F
        gbc.setState(0x2103, 0x3e3a, 0xfd80, 0xc198, 0x7c71, 0x6eaf, 0x0, 0x0);
        gbc.writeMem(0x2103, { 0xde, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3e3a);
        EXPECT(gbc.pc(), 0x2105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0260
        gbc.setState(0xeccc, 0xe3a6, 0xeec0, 0x929a, 0x78e1, 0x62a7, 0x1, 0x0);
        gbc.writeMem(0xeccc, { 0xde, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe3a6);
        EXPECT(gbc.pc(), 0xecce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeccc), 0xde);
        EXPECT(gbc.readMem(0xeccd), 0x1b);
        // DE 0261
        gbc.setState(0x4ffb, 0x2de5, 0x560, 0x2790, 0x68b9, 0x44da, 0x0, 0x0);
        gbc.writeMem(0x4ffb, { 0xde, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2de5);
        EXPECT(gbc.pc(), 0x4ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0262
        gbc.setState(0x396, 0xeefc, 0x9a40, 0x3a3a, 0x63bb, 0x489, 0x0, 0x0);
        gbc.writeMem(0x396, { 0xde, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xeefc);
        EXPECT(gbc.pc(), 0x398);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0264
        gbc.setState(0x2bce, 0xbd1, 0xb7a0, 0x1fb9, 0x2ea, 0xbe13, 0x1, 0x0);
        gbc.writeMem(0x2bce, { 0xde, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbd1);
        EXPECT(gbc.pc(), 0x2bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0265
        gbc.setState(0xabf0, 0x42f8, 0xfc00, 0x3f46, 0x3c75, 0xa27a, 0x1, 0x1);
        gbc.writeMem(0xabf0, { 0xde, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x42f8);
        EXPECT(gbc.pc(), 0xabf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf0), 0xde);
        EXPECT(gbc.readMem(0xabf1), 0x98);
        // DE 0266
        gbc.setState(0x4ab2, 0x2f8b, 0x12f0, 0xcc4b, 0x545c, 0x6891, 0x1, 0x0);
        gbc.writeMem(0x4ab2, { 0xde, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2f8b);
        EXPECT(gbc.pc(), 0x4ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0267
        gbc.setState(0xc580, 0xddac, 0xf3e0, 0x28a3, 0x47c6, 0x1ff1, 0x1, 0x0);
        gbc.writeMem(0xc580, { 0xde, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xddac);
        EXPECT(gbc.pc(), 0xc582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc580), 0xde);
        EXPECT(gbc.readMem(0xc581), 0xa5);
        // DE 0268
        gbc.setState(0x2448, 0xb0c2, 0x3490, 0xe953, 0x546d, 0xa842, 0x0, 0x0);
        gbc.writeMem(0x2448, { 0xde, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb0c2);
        EXPECT(gbc.pc(), 0x244a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0269
        gbc.setState(0x439a, 0x3355, 0xee70, 0xfe22, 0x2cc6, 0x4da8, 0x0, 0x0);
        gbc.writeMem(0x439a, { 0xde, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3355);
        EXPECT(gbc.pc(), 0x439c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 026A
        gbc.setState(0xa7bc, 0x60d9, 0xd3b0, 0x5930, 0x2d35, 0x2b46, 0x1, 0x0);
        gbc.writeMem(0xa7bc, { 0xde, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x60d9);
        EXPECT(gbc.pc(), 0xa7be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7bc), 0xde);
        EXPECT(gbc.readMem(0xa7bd), 0x74);
        // DE 026B
        gbc.setState(0xe4a1, 0x9a4c, 0x3e50, 0xba2b, 0xfa50, 0xf970, 0x1, 0x0);
        gbc.writeMem(0xe4a1, { 0xde, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9a4c);
        EXPECT(gbc.pc(), 0xe4a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a1), 0xde);
        EXPECT(gbc.readMem(0xe4a2), 0x50);
        // DE 026C
        gbc.setState(0x1fe0, 0xe803, 0x5e90, 0x336e, 0x7fe4, 0xb8c5, 0x1, 0x1);
        gbc.writeMem(0x1fe0, { 0xde, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe803);
        EXPECT(gbc.pc(), 0x1fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 026D
        gbc.setState(0x476c, 0x5ece, 0x8df0, 0x679e, 0xb82c, 0x396a, 0x0, 0x0);
        gbc.writeMem(0x476c, { 0xde, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5ece);
        EXPECT(gbc.pc(), 0x476e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 026E
        gbc.setState(0xbc61, 0x3de9, 0x35a0, 0xe7db, 0x704c, 0xdf00, 0x1, 0x1);
        gbc.writeMem(0xbc61, { 0xde, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3de9);
        EXPECT(gbc.pc(), 0xbc63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc61), 0xde);
        EXPECT(gbc.readMem(0xbc62), 0x62);
        // DE 0270
        gbc.setState(0xd5c, 0xd55, 0x6e10, 0x9b2a, 0xd5f0, 0xf806, 0x0, 0x0);
        gbc.writeMem(0xd5c, { 0xde, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd55);
        EXPECT(gbc.pc(), 0xd5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0271
        gbc.setState(0xda18, 0x541a, 0x9c10, 0xdb2, 0xa442, 0x67a, 0x1, 0x1);
        gbc.writeMem(0xda18, { 0xde, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x541a);
        EXPECT(gbc.pc(), 0xda1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda18), 0xde);
        EXPECT(gbc.readMem(0xda19), 0x63);
        // DE 0272
        gbc.setState(0x9ec, 0x90b7, 0xa4b0, 0xb054, 0x89b6, 0x5c4f, 0x0, 0x1);
        gbc.writeMem(0x9ec, { 0xde, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x90b7);
        EXPECT(gbc.pc(), 0x9ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0273
        gbc.setState(0x4e55, 0xb6e2, 0xff40, 0xc4a9, 0x9683, 0x5229, 0x0, 0x1);
        gbc.writeMem(0x4e55, { 0xde, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb6e2);
        EXPECT(gbc.pc(), 0x4e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0274
        gbc.setState(0xb60, 0x54b7, 0x6720, 0x9526, 0xd7ee, 0x1e1, 0x0, 0x0);
        gbc.writeMem(0xb60, { 0xde, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x54b7);
        EXPECT(gbc.pc(), 0xb62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0275
        gbc.setState(0x7bfd, 0xa284, 0xb140, 0xb376, 0xa0cf, 0x5cb1, 0x1, 0x0);
        gbc.writeMem(0x7bfd, { 0xde, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa284);
        EXPECT(gbc.pc(), 0x7bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0276
        gbc.setState(0xe72a, 0x6f07, 0xe890, 0x639f, 0x61fd, 0xaad5, 0x1, 0x1);
        gbc.writeMem(0xe72a, { 0xde, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6f07);
        EXPECT(gbc.pc(), 0xe72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe72a), 0xde);
        EXPECT(gbc.readMem(0xe72b), 0xfd);
        // DE 0277
        gbc.setState(0x4223, 0x962f, 0x1040, 0xb48b, 0x840c, 0x507b, 0x1, 0x0);
        gbc.writeMem(0x4223, { 0xde, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x962f);
        EXPECT(gbc.pc(), 0x4225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0278
        gbc.setState(0x8a65, 0x7b95, 0x66b0, 0x3bec, 0x7185, 0xa1ec, 0x0, 0x0);
        gbc.writeMem(0x8a65, { 0xde, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7b95);
        EXPECT(gbc.pc(), 0x8a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a65), 0xde);
        EXPECT(gbc.readMem(0x8a66), 0x8b);
        // DE 0279
        gbc.setState(0x455b, 0x16e0, 0xffb0, 0x9e96, 0x4a40, 0x9001, 0x1, 0x1);
        gbc.writeMem(0x455b, { 0xde, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x16e0);
        EXPECT(gbc.pc(), 0x455d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 027A
        gbc.setState(0x9979, 0x3b9b, 0x2310, 0xd998, 0xf9b5, 0xc0d4, 0x1, 0x0);
        gbc.writeMem(0x9979, { 0xde, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3b9b);
        EXPECT(gbc.pc(), 0x997b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9979), 0xde);
        EXPECT(gbc.readMem(0x997a), 0xaa);
        // DE 027B
        gbc.setState(0x5502, 0xbdbc, 0x2ad0, 0x8cd3, 0xc5c0, 0x3c4a, 0x0, 0x1);
        gbc.writeMem(0x5502, { 0xde, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbdbc);
        EXPECT(gbc.pc(), 0x5504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 027C
        gbc.setState(0xb794, 0x131c, 0x5fb0, 0xaf33, 0xfe3b, 0x1ffc, 0x1, 0x1);
        gbc.writeMem(0xb794, { 0xde, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x131c);
        EXPECT(gbc.pc(), 0xb796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb794), 0xde);
        EXPECT(gbc.readMem(0xb795), 0xa7);
        // DE 027D
        gbc.setState(0x1726, 0xb629, 0x50a0, 0x2111, 0xbf6e, 0x81d6, 0x1, 0x1);
        gbc.writeMem(0x1726, { 0xde, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb629);
        EXPECT(gbc.pc(), 0x1728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 027F
        gbc.setState(0xe89, 0x136c, 0x560, 0x325d, 0xae1a, 0xbab5, 0x0, 0x1);
        gbc.writeMem(0xe89, { 0xde, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x136c);
        EXPECT(gbc.pc(), 0xe8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0280
        gbc.setState(0x669f, 0x794c, 0x180, 0xfb80, 0x2a33, 0x4818, 0x0, 0x0);
        gbc.writeMem(0x669f, { 0xde, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x794c);
        EXPECT(gbc.pc(), 0x66a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0281
        gbc.setState(0x68e6, 0x2c1f, 0x3ec0, 0x7f9d, 0x911b, 0x49e4, 0x1, 0x1);
        gbc.writeMem(0x68e6, { 0xde, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2c1f);
        EXPECT(gbc.pc(), 0x68e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0282
        gbc.setState(0x6d31, 0xd292, 0xa440, 0x9758, 0x4652, 0x889b, 0x1, 0x1);
        gbc.writeMem(0x6d31, { 0xde, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd292);
        EXPECT(gbc.pc(), 0x6d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0283
        gbc.setState(0x93b9, 0x2327, 0x5700, 0x5f17, 0x9a69, 0x8dfb, 0x1, 0x0);
        gbc.writeMem(0x93b9, { 0xde, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2327);
        EXPECT(gbc.pc(), 0x93bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93b9), 0xde);
        EXPECT(gbc.readMem(0x93ba), 0xd9);
        // DE 0284
        gbc.setState(0xcc6d, 0x26a4, 0x3b00, 0x8fa4, 0xb463, 0x94d8, 0x0, 0x0);
        gbc.writeMem(0xcc6d, { 0xde, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x26a4);
        EXPECT(gbc.pc(), 0xcc6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc6d), 0xde);
        EXPECT(gbc.readMem(0xcc6e), 0xd8);
        // DE 0285
        gbc.setState(0x63cf, 0x38d, 0xefd0, 0x5b18, 0x2aad, 0x9095, 0x0, 0x1);
        gbc.writeMem(0x63cf, { 0xde, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x38d);
        EXPECT(gbc.pc(), 0x63d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0286
        gbc.setState(0x3dc, 0x62bb, 0xac70, 0x98ce, 0x5e5a, 0x5d24, 0x0, 0x1);
        gbc.writeMem(0x3dc, { 0xde, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x62bb);
        EXPECT(gbc.pc(), 0x3de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0287
        gbc.setState(0x4be1, 0xa3fd, 0x4440, 0xd5fb, 0x1d7e, 0x85c3, 0x1, 0x0);
        gbc.writeMem(0x4be1, { 0xde, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa3fd);
        EXPECT(gbc.pc(), 0x4be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0288
        gbc.setState(0x9374, 0x22eb, 0xc790, 0x16dd, 0xb12d, 0x9486, 0x0, 0x1);
        gbc.writeMem(0x9374, { 0xde, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x22eb);
        EXPECT(gbc.pc(), 0x9376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9374), 0xde);
        EXPECT(gbc.readMem(0x9375), 0x3a);
        // DE 0289
        gbc.setState(0x38aa, 0x6da4, 0xe8f0, 0xf51a, 0xb442, 0xca05, 0x0, 0x0);
        gbc.writeMem(0x38aa, { 0xde, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6da4);
        EXPECT(gbc.pc(), 0x38ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 028A
        gbc.setState(0x547, 0x6ba4, 0xa000, 0x1bec, 0x353f, 0x163f, 0x1, 0x1);
        gbc.writeMem(0x547, { 0xde, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6ba4);
        EXPECT(gbc.pc(), 0x549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 028B
        gbc.setState(0xd08e, 0xc723, 0x3da0, 0xf096, 0x8209, 0x8f7d, 0x1, 0x1);
        gbc.writeMem(0xd08e, { 0xde, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc723);
        EXPECT(gbc.pc(), 0xd090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd08e), 0xde);
        EXPECT(gbc.readMem(0xd08f), 0x9b);
        // DE 028C
        gbc.setState(0x295, 0x199c, 0x8400, 0xb21b, 0x3b44, 0xd67a, 0x1, 0x1);
        gbc.writeMem(0x295, { 0xde, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x199c);
        EXPECT(gbc.pc(), 0x297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 028F
        gbc.setState(0x6193, 0x71b6, 0xd8e0, 0x42a9, 0xcd8b, 0xdca3, 0x1, 0x1);
        gbc.writeMem(0x6193, { 0xde, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x71b6);
        EXPECT(gbc.pc(), 0x6195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0290
        gbc.setState(0x6718, 0x6ce3, 0x1690, 0xad01, 0x632b, 0xd1c1, 0x1, 0x0);
        gbc.writeMem(0x6718, { 0xde, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6ce3);
        EXPECT(gbc.pc(), 0x671a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0291
        gbc.setState(0x6f06, 0x1c3c, 0x6dd0, 0xe589, 0xf7d5, 0xbb3c, 0x0, 0x0);
        gbc.writeMem(0x6f06, { 0xde, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1c3c);
        EXPECT(gbc.pc(), 0x6f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0292
        gbc.setState(0x8fdd, 0x90e6, 0xca0, 0x45b1, 0xd10f, 0x362d, 0x1, 0x0);
        gbc.writeMem(0x8fdd, { 0xde, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x90e6);
        EXPECT(gbc.pc(), 0x8fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fdd), 0xde);
        EXPECT(gbc.readMem(0x8fde), 0x5b);
        // DE 0293
        gbc.setState(0x3d84, 0x4e5f, 0x3900, 0x4c44, 0x5c95, 0x7799, 0x1, 0x1);
        gbc.writeMem(0x3d84, { 0xde, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4e5f);
        EXPECT(gbc.pc(), 0x3d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0294
        gbc.setState(0x835e, 0xf5e8, 0x94d0, 0xb071, 0x3094, 0x89a7, 0x0, 0x1);
        gbc.writeMem(0x835e, { 0xde, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf5e8);
        EXPECT(gbc.pc(), 0x8360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x835e), 0xde);
        EXPECT(gbc.readMem(0x835f), 0x27);
        // DE 0295
        gbc.setState(0x7648, 0x3da7, 0xc100, 0x75d, 0x95a8, 0x9ad5, 0x1, 0x1);
        gbc.writeMem(0x7648, { 0xde, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3da7);
        EXPECT(gbc.pc(), 0x764a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0296
        gbc.setState(0xeb7c, 0xf6e0, 0xab40, 0x4ba, 0xedac, 0x7595, 0x0, 0x0);
        gbc.writeMem(0xeb7c, { 0xde, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf6e0);
        EXPECT(gbc.pc(), 0xeb7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb7c), 0xde);
        EXPECT(gbc.readMem(0xeb7d), 0xfd);
        // DE 0297
        gbc.setState(0x3f99, 0x44d9, 0xe410, 0x6662, 0x1668, 0xc07f, 0x1, 0x1);
        gbc.writeMem(0x3f99, { 0xde, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x44d9);
        EXPECT(gbc.pc(), 0x3f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0298
        gbc.setState(0x4be6, 0xccdd, 0x5200, 0xa6e2, 0xb06b, 0xcee7, 0x1, 0x0);
        gbc.writeMem(0x4be6, { 0xde, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xccdd);
        EXPECT(gbc.pc(), 0x4be8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0299
        gbc.setState(0x8b16, 0x9233, 0xaed0, 0xf6cf, 0xfe6b, 0x1091, 0x1, 0x1);
        gbc.writeMem(0x8b16, { 0xde, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9233);
        EXPECT(gbc.pc(), 0x8b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b16), 0xde);
        EXPECT(gbc.readMem(0x8b17), 0x8c);
        // DE 029A
        gbc.setState(0x372c, 0x5a8c, 0x5e10, 0x74eb, 0xc182, 0xcacd, 0x0, 0x0);
        gbc.writeMem(0x372c, { 0xde, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5a8c);
        EXPECT(gbc.pc(), 0x372e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 029B
        gbc.setState(0xda6c, 0x3e63, 0x1580, 0xdd81, 0xb839, 0xbe35, 0x1, 0x1);
        gbc.writeMem(0xda6c, { 0xde, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3e63);
        EXPECT(gbc.pc(), 0xda6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda6c), 0xde);
        EXPECT(gbc.readMem(0xda6d), 0xb9);
        // DE 029C
        gbc.setState(0x62b5, 0x6ebe, 0x9010, 0xcc6b, 0xf1b2, 0x6e54, 0x0, 0x0);
        gbc.writeMem(0x62b5, { 0xde, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6ebe);
        EXPECT(gbc.pc(), 0x62b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 029D
        gbc.setState(0xcb4a, 0xb1ee, 0x95a0, 0xcc24, 0xa9dc, 0x60da, 0x1, 0x1);
        gbc.writeMem(0xcb4a, { 0xde, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb1ee);
        EXPECT(gbc.pc(), 0xcb4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb4a), 0xde);
        EXPECT(gbc.readMem(0xcb4b), 0x9a);
        // DE 029E
        gbc.setState(0xa0bf, 0x25de, 0xa760, 0x8bd9, 0x7560, 0xb24e, 0x0, 0x1);
        gbc.writeMem(0xa0bf, { 0xde, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x25de);
        EXPECT(gbc.pc(), 0xa0c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0bf), 0xde);
        EXPECT(gbc.readMem(0xa0c0), 0x87);
        // DE 029F
        gbc.setState(0xb911, 0xb2f0, 0x9ba0, 0x294b, 0xa8fc, 0xe743, 0x0, 0x0);
        gbc.writeMem(0xb911, { 0xde, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb2f0);
        EXPECT(gbc.pc(), 0xb913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb911), 0xde);
        EXPECT(gbc.readMem(0xb912), 0x8b);
        // DE 02A1
        gbc.setState(0x748a, 0x6727, 0xb980, 0xbd91, 0xff7b, 0x1660, 0x1, 0x0);
        gbc.writeMem(0x748a, { 0xde, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6727);
        EXPECT(gbc.pc(), 0x748c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 02A2
        gbc.setState(0x9ae9, 0x1930, 0xd720, 0x2791, 0x4488, 0xf7a, 0x1, 0x0);
        gbc.writeMem(0x9ae9, { 0xde, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1930);
        EXPECT(gbc.pc(), 0x9aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae9), 0xde);
        EXPECT(gbc.readMem(0x9aea), 0x13);
        // DE 02A3
        gbc.setState(0x1975, 0x2f23, 0x8f20, 0x4269, 0x6366, 0x691f, 0x0, 0x0);
        gbc.writeMem(0x1975, { 0xde, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2f23);
        EXPECT(gbc.pc(), 0x1977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02A4
        gbc.setState(0x5a9b, 0x146e, 0x3640, 0x8308, 0x6192, 0x39f6, 0x1, 0x0);
        gbc.writeMem(0x5a9b, { 0xde, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x146e);
        EXPECT(gbc.pc(), 0x5a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 02A5
        gbc.setState(0x225a, 0x2206, 0xef00, 0x6e19, 0x202a, 0xf72f, 0x1, 0x1);
        gbc.writeMem(0x225a, { 0xde, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2206);
        EXPECT(gbc.pc(), 0x225c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02A6
        gbc.setState(0xdbb2, 0xef93, 0x17e0, 0x79d6, 0xb559, 0xda3a, 0x0, 0x1);
        gbc.writeMem(0xdbb2, { 0xde, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xef93);
        EXPECT(gbc.pc(), 0xdbb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb2), 0xde);
        EXPECT(gbc.readMem(0xdbb3), 0xe2);
        // DE 02A7
        gbc.setState(0xd14f, 0x7fb7, 0xf330, 0x2871, 0xa337, 0xc0fd, 0x1, 0x0);
        gbc.writeMem(0xd14f, { 0xde, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7fb7);
        EXPECT(gbc.pc(), 0xd151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd14f), 0xde);
        EXPECT(gbc.readMem(0xd150), 0xee);
        // DE 02A9
        gbc.setState(0xccce, 0x7588, 0xed00, 0x42c9, 0xa02c, 0x879e, 0x1, 0x0);
        gbc.writeMem(0xccce, { 0xde, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7588);
        EXPECT(gbc.pc(), 0xccd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccce), 0xde);
        EXPECT(gbc.readMem(0xcccf), 0x4e);
        // DE 02AA
        gbc.setState(0x8f30, 0xde4, 0xab30, 0x9549, 0x9a20, 0xc9e3, 0x0, 0x0);
        gbc.writeMem(0x8f30, { 0xde, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xde4);
        EXPECT(gbc.pc(), 0x8f32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f30), 0xde);
        EXPECT(gbc.readMem(0x8f31), 0xcf);
        // DE 02AB
        gbc.setState(0x3adf, 0xd528, 0x5a40, 0xffd8, 0xda16, 0x8ec3, 0x1, 0x1);
        gbc.writeMem(0x3adf, { 0xde, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd528);
        EXPECT(gbc.pc(), 0x3ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02AC
        gbc.setState(0x14e1, 0x1f1a, 0x430, 0x5e7f, 0x29cc, 0xd6c1, 0x1, 0x1);
        gbc.writeMem(0x14e1, { 0xde, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1f1a);
        EXPECT(gbc.pc(), 0x14e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 02AD
        gbc.setState(0xc4f4, 0xd1a3, 0xc3c0, 0x5589, 0xc7ce, 0x3824, 0x1, 0x1);
        gbc.writeMem(0xc4f4, { 0xde, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd1a3);
        EXPECT(gbc.pc(), 0xc4f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4f4), 0xde);
        EXPECT(gbc.readMem(0xc4f5), 0x6e);
        // DE 02AE
        gbc.setState(0xb528, 0x8094, 0x740, 0x19f1, 0x2379, 0xfa33, 0x1, 0x0);
        gbc.writeMem(0xb528, { 0xde, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8094);
        EXPECT(gbc.pc(), 0xb52a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb528), 0xde);
        EXPECT(gbc.readMem(0xb529), 0xf4);
        // DE 02AF
        gbc.setState(0x2c44, 0xbeeb, 0x9a80, 0x4ed, 0x9043, 0x4640, 0x0, 0x1);
        gbc.writeMem(0x2c44, { 0xde, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbeeb);
        EXPECT(gbc.pc(), 0x2c46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 02B0
        gbc.setState(0x54e4, 0x291b, 0x6520, 0x8601, 0x33eb, 0xb1b8, 0x0, 0x0);
        gbc.writeMem(0x54e4, { 0xde, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x291b);
        EXPECT(gbc.pc(), 0x54e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 02B1
        gbc.setState(0xa3, 0x9107, 0x89c0, 0xd86b, 0xc1a1, 0x7942, 0x1, 0x0);
        gbc.writeMem(0xa3, { 0xde, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9107);
        EXPECT(gbc.pc(), 0xa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 02B2
        gbc.setState(0x70fa, 0x98e2, 0x3860, 0x7408, 0xf1bc, 0xae69, 0x0, 0x0);
        gbc.writeMem(0x70fa, { 0xde, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x98e2);
        EXPECT(gbc.pc(), 0x70fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 02B3
        gbc.setState(0xf2f, 0xd2f8, 0x55d0, 0x75f6, 0xaf2d, 0x2c2e, 0x0, 0x0);
        gbc.writeMem(0xf2f, { 0xde, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd2f8);
        EXPECT(gbc.pc(), 0xf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02B4
        gbc.setState(0x5dfd, 0xb4ef, 0xdeb0, 0x4b69, 0x61fd, 0x9e83, 0x0, 0x1);
        gbc.writeMem(0x5dfd, { 0xde, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb4ef);
        EXPECT(gbc.pc(), 0x5dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02B5
        gbc.setState(0xc220, 0xf729, 0xb6d0, 0x3bcb, 0xa11a, 0x111b, 0x1, 0x1);
        gbc.writeMem(0xc220, { 0xde, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf729);
        EXPECT(gbc.pc(), 0xc222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc220), 0xde);
        EXPECT(gbc.readMem(0xc221), 0xf9);
        // DE 02B6
        gbc.setState(0xa455, 0x3754, 0x93c0, 0x4dd7, 0xd5a9, 0xd0bf, 0x0, 0x0);
        gbc.writeMem(0xa455, { 0xde, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3754);
        EXPECT(gbc.pc(), 0xa457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa455), 0xde);
        EXPECT(gbc.readMem(0xa456), 0xfe);
        // DE 02B7
        gbc.setState(0x75f9, 0x7f49, 0xbc10, 0xe573, 0x4acf, 0x48b9, 0x1, 0x0);
        gbc.writeMem(0x75f9, { 0xde, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7f49);
        EXPECT(gbc.pc(), 0x75fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02B8
        gbc.setState(0xe98f, 0xadfa, 0x9b0, 0x7c81, 0xce64, 0xacf1, 0x1, 0x1);
        gbc.writeMem(0xe98f, { 0xde, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xadfa);
        EXPECT(gbc.pc(), 0xe991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe98f), 0xde);
        EXPECT(gbc.readMem(0xe990), 0xdc);
        // DE 02B9
        gbc.setState(0x9dcf, 0x6f2c, 0x85f0, 0x9dce, 0x304b, 0xd2e5, 0x1, 0x0);
        gbc.writeMem(0x9dcf, { 0xde, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6f2c);
        EXPECT(gbc.pc(), 0x9dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dcf), 0xde);
        EXPECT(gbc.readMem(0x9dd0), 0xc3);
        // DE 02BA
        gbc.setState(0x642c, 0x39fe, 0x93b0, 0x609e, 0xc608, 0x598d, 0x0, 0x1);
        gbc.writeMem(0x642c, { 0xde, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x39fe);
        EXPECT(gbc.pc(), 0x642e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 02BB
        gbc.setState(0x2015, 0x4ab8, 0x300, 0x97e1, 0xfcd1, 0xcf75, 0x0, 0x1);
        gbc.writeMem(0x2015, { 0xde, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4ab8);
        EXPECT(gbc.pc(), 0x2017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 02BC
        gbc.setState(0xbc5d, 0xbf51, 0xeb40, 0xb1bb, 0xffc7, 0x4a7, 0x1, 0x0);
        gbc.writeMem(0xbc5d, { 0xde, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbf51);
        EXPECT(gbc.pc(), 0xbc5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc5d), 0xde);
        EXPECT(gbc.readMem(0xbc5e), 0xb);
        // DE 02BD
        gbc.setState(0xa693, 0x7211, 0xba40, 0x12e8, 0x2877, 0xdfb1, 0x1, 0x0);
        gbc.writeMem(0xa693, { 0xde, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7211);
        EXPECT(gbc.pc(), 0xa695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa693), 0xde);
        EXPECT(gbc.readMem(0xa694), 0x13);
        // DE 02BE
        gbc.setState(0x47b8, 0x29f4, 0xb660, 0xd2b6, 0xca76, 0x4776, 0x0, 0x0);
        gbc.writeMem(0x47b8, { 0xde, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x29f4);
        EXPECT(gbc.pc(), 0x47ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 02BF
        gbc.setState(0x40a7, 0x67ac, 0x7770, 0xcf09, 0xad87, 0x76f1, 0x0, 0x1);
        gbc.writeMem(0x40a7, { 0xde, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x67ac);
        EXPECT(gbc.pc(), 0x40a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 02C1
        gbc.setState(0xb3d9, 0x88af, 0x3280, 0x9679, 0x342b, 0x588e, 0x0, 0x1);
        gbc.writeMem(0xb3d9, { 0xde, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x88af);
        EXPECT(gbc.pc(), 0xb3db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d9), 0xde);
        EXPECT(gbc.readMem(0xb3da), 0x87);
        // DE 02C2
        gbc.setState(0xb50, 0x805e, 0x4820, 0x17b, 0xe7e5, 0x36f1, 0x1, 0x1);
        gbc.writeMem(0xb50, { 0xde, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x805e);
        EXPECT(gbc.pc(), 0xb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02C3
        gbc.setState(0x31c4, 0x7acc, 0xfd50, 0xc362, 0x63a4, 0x7ef6, 0x0, 0x1);
        gbc.writeMem(0x31c4, { 0xde, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7acc);
        EXPECT(gbc.pc(), 0x31c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02C4
        gbc.setState(0x78e4, 0x3c03, 0x9e70, 0x95bc, 0x25ce, 0xfcb, 0x0, 0x0);
        gbc.writeMem(0x78e4, { 0xde, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3c03);
        EXPECT(gbc.pc(), 0x78e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02C5
        gbc.setState(0xdb87, 0xcb60, 0xea30, 0x6d26, 0x43a0, 0xeb97, 0x0, 0x1);
        gbc.writeMem(0xdb87, { 0xde, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xcb60);
        EXPECT(gbc.pc(), 0xdb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb87), 0xde);
        EXPECT(gbc.readMem(0xdb88), 0xcc);
        // DE 02C6
        gbc.setState(0x153a, 0xc3fb, 0xae10, 0xbd4d, 0xbaa1, 0x10e4, 0x0, 0x0);
        gbc.writeMem(0x153a, { 0xde, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc3fb);
        EXPECT(gbc.pc(), 0x153c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 02C7
        gbc.setState(0x3d09, 0xc99, 0xb8b0, 0x2550, 0xfa21, 0xee6b, 0x1, 0x0);
        gbc.writeMem(0x3d09, { 0xde, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc99);
        EXPECT(gbc.pc(), 0x3d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02C8
        gbc.setState(0xe1fb, 0xe881, 0x1280, 0x2d39, 0x7146, 0x977b, 0x1, 0x0);
        gbc.writeMem(0xe1fb, { 0xde, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe881);
        EXPECT(gbc.pc(), 0xe1fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1fb), 0xde);
        EXPECT(gbc.readMem(0xe1fc), 0x75);
        // DE 02C9
        gbc.setState(0xafff, 0xbacc, 0x51b0, 0x8e9f, 0xe3c7, 0xcbcd, 0x0, 0x1);
        gbc.writeMem(0xafff, { 0xde, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xbacc);
        EXPECT(gbc.pc(), 0xb001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafff), 0xde);
        EXPECT(gbc.readMem(0xb000), 0x74);
        // DE 02CA
        gbc.setState(0xc757, 0xc3f5, 0x1330, 0x9923, 0x3687, 0x5cf0, 0x0, 0x0);
        gbc.writeMem(0xc757, { 0xde, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc3f5);
        EXPECT(gbc.pc(), 0xc759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc757), 0xde);
        EXPECT(gbc.readMem(0xc758), 0xfe);
        // DE 02CB
        gbc.setState(0x1d02, 0xd691, 0xcc90, 0xcc19, 0x3d4c, 0x3aff, 0x0, 0x1);
        gbc.writeMem(0x1d02, { 0xde, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd691);
        EXPECT(gbc.pc(), 0x1d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02CC
        gbc.setState(0x7b09, 0x7b6d, 0xaff0, 0xea56, 0xe060, 0x4d39, 0x0, 0x0);
        gbc.writeMem(0x7b09, { 0xde, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7b6d);
        EXPECT(gbc.pc(), 0x7b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02CE
        gbc.setState(0x845, 0x97da, 0x63e0, 0x628a, 0x99ec, 0x3425, 0x1, 0x1);
        gbc.writeMem(0x845, { 0xde, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x97da);
        EXPECT(gbc.pc(), 0x847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 02CF
        gbc.setState(0xc78a, 0x8da3, 0xf390, 0x63e7, 0x2c36, 0xb304, 0x0, 0x0);
        gbc.writeMem(0xc78a, { 0xde, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8da3);
        EXPECT(gbc.pc(), 0xc78c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78a), 0xde);
        EXPECT(gbc.readMem(0xc78b), 0xd0);
        // DE 02D0
        gbc.setState(0x9a5, 0xc5c8, 0x8180, 0x6605, 0x2d4c, 0x543f, 0x1, 0x1);
        gbc.writeMem(0x9a5, { 0xde, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc5c8);
        EXPECT(gbc.pc(), 0x9a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 02D1
        gbc.setState(0xa9a0, 0xd020, 0xa790, 0x65be, 0xe2d1, 0x2c10, 0x1, 0x0);
        gbc.writeMem(0xa9a0, { 0xde, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd020);
        EXPECT(gbc.pc(), 0xa9a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a0), 0xde);
        EXPECT(gbc.readMem(0xa9a1), 0xf);
        // DE 02D2
        gbc.setState(0x5204, 0xd566, 0xbd0, 0xe172, 0xa7e2, 0x9e7, 0x0, 0x0);
        gbc.writeMem(0x5204, { 0xde, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd566);
        EXPECT(gbc.pc(), 0x5206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 02D3
        gbc.setState(0x43d9, 0x923b, 0x7560, 0x9036, 0x44ee, 0x340b, 0x0, 0x1);
        gbc.writeMem(0x43d9, { 0xde, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x923b);
        EXPECT(gbc.pc(), 0x43db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 02D4
        gbc.setState(0x38bc, 0x5700, 0x65c0, 0xfaca, 0xc840, 0x391e, 0x1, 0x0);
        gbc.writeMem(0x38bc, { 0xde, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5700);
        EXPECT(gbc.pc(), 0x38be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 02D5
        gbc.setState(0x34a1, 0x54cb, 0xc300, 0xf56, 0x71dc, 0x9a71, 0x1, 0x1);
        gbc.writeMem(0x34a1, { 0xde, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x54cb);
        EXPECT(gbc.pc(), 0x34a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 02D6
        gbc.setState(0x3e75, 0x1764, 0x86f0, 0x10db, 0x316c, 0xeab3, 0x0, 0x0);
        gbc.writeMem(0x3e75, { 0xde, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1764);
        EXPECT(gbc.pc(), 0x3e77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 02D7
        gbc.setState(0xb6e5, 0x97a1, 0xe40, 0xef8d, 0x2fc7, 0xe223, 0x1, 0x0);
        gbc.writeMem(0xb6e5, { 0xde, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x97a1);
        EXPECT(gbc.pc(), 0xb6e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e5), 0xde);
        EXPECT(gbc.readMem(0xb6e6), 0xd3);
        // DE 02D8
        gbc.setState(0x7368, 0x40d2, 0x3da0, 0xb537, 0x354e, 0x53fc, 0x0, 0x0);
        gbc.writeMem(0x7368, { 0xde, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x40d2);
        EXPECT(gbc.pc(), 0x736a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 02D9
        gbc.setState(0xe25a, 0x7ff6, 0x9430, 0xe0cb, 0x322b, 0xce82, 0x1, 0x0);
        gbc.writeMem(0xe25a, { 0xde, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7ff6);
        EXPECT(gbc.pc(), 0xe25c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe25a), 0xde);
        EXPECT(gbc.readMem(0xe25b), 0x3);
        // DE 02DA
        gbc.setState(0xdde6, 0x257f, 0x6ef0, 0xe5ff, 0x830e, 0x4aaa, 0x0, 0x0);
        gbc.writeMem(0xdde6, { 0xde, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x257f);
        EXPECT(gbc.pc(), 0xdde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde6), 0xde);
        EXPECT(gbc.readMem(0xdde7), 0x86);
        // DE 02DB
        gbc.setState(0x796f, 0xb751, 0x3ca0, 0x35e4, 0xa29c, 0xe3f2, 0x1, 0x1);
        gbc.writeMem(0x796f, { 0xde, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb751);
        EXPECT(gbc.pc(), 0x7971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02DC
        gbc.setState(0x9e1f, 0x7c02, 0x3630, 0xc090, 0x29d4, 0x9d71, 0x0, 0x0);
        gbc.writeMem(0x9e1f, { 0xde, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7c02);
        EXPECT(gbc.pc(), 0x9e21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e1f), 0xde);
        EXPECT(gbc.readMem(0x9e20), 0xd7);
        // DE 02DD
        gbc.setState(0x1508, 0x63d6, 0x5600, 0x494b, 0x7ae6, 0x728c, 0x0, 0x1);
        gbc.writeMem(0x1508, { 0xde, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x63d6);
        EXPECT(gbc.pc(), 0x150a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 02DE
        gbc.setState(0x1a8d, 0x48ac, 0xe6b0, 0x5acd, 0x49ec, 0x4d69, 0x1, 0x0);
        gbc.writeMem(0x1a8d, { 0xde, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x48ac);
        EXPECT(gbc.pc(), 0x1a8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 02DF
        gbc.setState(0x7790, 0xadb3, 0x3060, 0xbba5, 0xfd15, 0xdcb2, 0x0, 0x1);
        gbc.writeMem(0x7790, { 0xde, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xadb3);
        EXPECT(gbc.pc(), 0x7792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 02E0
        gbc.setState(0x2b94, 0x9fd8, 0xb6b0, 0x8545, 0x47ed, 0xbf1, 0x1, 0x0);
        gbc.writeMem(0x2b94, { 0xde, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9fd8);
        EXPECT(gbc.pc(), 0x2b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 02E1
        gbc.setState(0x40ff, 0x7999, 0xc910, 0x474b, 0xd69a, 0xf97d, 0x0, 0x1);
        gbc.writeMem(0x40ff, { 0xde, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7999);
        EXPECT(gbc.pc(), 0x4101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02E2
        gbc.setState(0x95c5, 0x8886, 0xe040, 0x8d3f, 0x7acd, 0x2e0c, 0x0, 0x0);
        gbc.writeMem(0x95c5, { 0xde, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8886);
        EXPECT(gbc.pc(), 0x95c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95c5), 0xde);
        EXPECT(gbc.readMem(0x95c6), 0xcd);
        // DE 02E3
        gbc.setState(0xab2e, 0x77a0, 0xffd0, 0x9322, 0xe61a, 0x7147, 0x1, 0x1);
        gbc.writeMem(0xab2e, { 0xde, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x77a0);
        EXPECT(gbc.pc(), 0xab30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab2e), 0xde);
        EXPECT(gbc.readMem(0xab2f), 0xa9);
        // DE 02E4
        gbc.setState(0x19d9, 0x7101, 0xe590, 0xc448, 0xd0ba, 0x1f4a, 0x0, 0x0);
        gbc.writeMem(0x19d9, { 0xde, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7101);
        EXPECT(gbc.pc(), 0x19db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 02E5
        gbc.setState(0xa235, 0x258e, 0x79c0, 0xdc9d, 0xb126, 0xf5b7, 0x1, 0x1);
        gbc.writeMem(0xa235, { 0xde, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x258e);
        EXPECT(gbc.pc(), 0xa237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa235), 0xde);
        EXPECT(gbc.readMem(0xa236), 0xa5);
        // DE 02E6
        gbc.setState(0x887f, 0x60ec, 0xb250, 0x4e52, 0xfedb, 0xbf1c, 0x1, 0x1);
        gbc.writeMem(0x887f, { 0xde, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x60ec);
        EXPECT(gbc.pc(), 0x8881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x887f), 0xde);
        EXPECT(gbc.readMem(0x8880), 0xd6);
        // DE 02E7
        gbc.setState(0x9d8d, 0x5693, 0x8b0, 0x55f, 0x4361, 0x2c5f, 0x0, 0x0);
        gbc.writeMem(0x9d8d, { 0xde, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5693);
        EXPECT(gbc.pc(), 0x9d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d8d), 0xde);
        EXPECT(gbc.readMem(0x9d8e), 0x7b);
        // DE 02E8
        gbc.setState(0xc51c, 0x59e0, 0x3e50, 0xb159, 0xbd5b, 0xcb75, 0x0, 0x0);
        gbc.writeMem(0xc51c, { 0xde, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x59e0);
        EXPECT(gbc.pc(), 0xc51e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc51c), 0xde);
        EXPECT(gbc.readMem(0xc51d), 0x58);
        // DE 02E9
        gbc.setState(0x94f4, 0x9979, 0x9ea0, 0x7da5, 0x273a, 0x5631, 0x1, 0x1);
        gbc.writeMem(0x94f4, { 0xde, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9979);
        EXPECT(gbc.pc(), 0x94f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f4), 0xde);
        EXPECT(gbc.readMem(0x94f5), 0x92);
        // DE 02EA
        gbc.setState(0xaea6, 0x684c, 0xaa20, 0x793c, 0x927f, 0x7cbd, 0x0, 0x1);
        gbc.writeMem(0xaea6, { 0xde, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x684c);
        EXPECT(gbc.pc(), 0xaea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea6), 0xde);
        EXPECT(gbc.readMem(0xaea7), 0x4d);
        // DE 02EB
        gbc.setState(0x67f2, 0x98a7, 0xbc50, 0xc8da, 0xfcfb, 0x9b8a, 0x0, 0x0);
        gbc.writeMem(0x67f2, { 0xde, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x98a7);
        EXPECT(gbc.pc(), 0x67f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02EC
        gbc.setState(0xe905, 0xaa70, 0xea10, 0xe97e, 0xd5c4, 0xe727, 0x1, 0x1);
        gbc.writeMem(0xe905, { 0xde, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xaa70);
        EXPECT(gbc.pc(), 0xe907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe905), 0xde);
        EXPECT(gbc.readMem(0xe906), 0x1c);
        // DE 02ED
        gbc.setState(0xba31, 0x6fe0, 0xed20, 0xb326, 0x362c, 0x7095, 0x0, 0x0);
        gbc.writeMem(0xba31, { 0xde, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6fe0);
        EXPECT(gbc.pc(), 0xba33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba31), 0xde);
        EXPECT(gbc.readMem(0xba32), 0x16);
        // DE 02EE
        gbc.setState(0x2877, 0xc40, 0x3700, 0x5ee5, 0xa8e5, 0x914c, 0x0, 0x0);
        gbc.writeMem(0x2877, { 0xde, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc40);
        EXPECT(gbc.pc(), 0x2879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02EF
        gbc.setState(0x776a, 0xc65c, 0x9530, 0xa181, 0x1159, 0x58f9, 0x0, 0x0);
        gbc.writeMem(0x776a, { 0xde, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc65c);
        EXPECT(gbc.pc(), 0x776c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 02F1
        gbc.setState(0x9a2e, 0x7145, 0x51e0, 0x8b4f, 0x5f67, 0x9fdb, 0x1, 0x0);
        gbc.writeMem(0x9a2e, { 0xde, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7145);
        EXPECT(gbc.pc(), 0x9a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2e), 0xde);
        EXPECT(gbc.readMem(0x9a2f), 0x18);
        // DE 02F2
        gbc.setState(0x6623, 0x2c04, 0xe760, 0xd777, 0xd8ba, 0x628b, 0x1, 0x1);
        gbc.writeMem(0x6623, { 0xde, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2c04);
        EXPECT(gbc.pc(), 0x6625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 02F3
        gbc.setState(0xc524, 0xe382, 0xd670, 0x40e8, 0xdcc9, 0x60db, 0x0, 0x0);
        gbc.writeMem(0xc524, { 0xde, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe382);
        EXPECT(gbc.pc(), 0xc526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc524), 0xde);
        EXPECT(gbc.readMem(0xc525), 0xf);
        // DE 02F4
        gbc.setState(0x4238, 0x7400, 0x3cc0, 0xe309, 0xac2c, 0xde56, 0x0, 0x1);
        gbc.writeMem(0x4238, { 0xde, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7400);
        EXPECT(gbc.pc(), 0x423a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 02F5
        gbc.setState(0x8e7a, 0x43d9, 0x90d0, 0x58b0, 0xb139, 0x94de, 0x1, 0x0);
        gbc.writeMem(0x8e7a, { 0xde, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x43d9);
        EXPECT(gbc.pc(), 0x8e7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7a), 0xde);
        EXPECT(gbc.readMem(0x8e7b), 0x94);
        // DE 02F6
        gbc.setState(0x1700, 0xb821, 0x47d0, 0x11fe, 0xa658, 0xf970, 0x0, 0x0);
        gbc.writeMem(0x1700, { 0xde, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb821);
        EXPECT(gbc.pc(), 0x1702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 02F7
        gbc.setState(0x80aa, 0xdd19, 0xbdf0, 0x7089, 0x45c9, 0x1808, 0x0, 0x1);
        gbc.writeMem(0x80aa, { 0xde, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xdd19);
        EXPECT(gbc.pc(), 0x80ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80aa), 0xde);
        EXPECT(gbc.readMem(0x80ab), 0x11);
        // DE 02F8
        gbc.setState(0xbcc1, 0x556a, 0x7b00, 0xca6a, 0x1801, 0xdf49, 0x0, 0x0);
        gbc.writeMem(0xbcc1, { 0xde, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x556a);
        EXPECT(gbc.pc(), 0xbcc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc1), 0xde);
        EXPECT(gbc.readMem(0xbcc2), 0xad);
        // DE 02F9
        gbc.setState(0x489f, 0x724d, 0x69a0, 0x993d, 0xfa75, 0x62fa, 0x1, 0x0);
        gbc.writeMem(0x489f, { 0xde, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x724d);
        EXPECT(gbc.pc(), 0x48a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 02FA
        gbc.setState(0xbde4, 0xb7eb, 0x2850, 0xd7b2, 0x79a7, 0x79fe, 0x0, 0x1);
        gbc.writeMem(0xbde4, { 0xde, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb7eb);
        EXPECT(gbc.pc(), 0xbde6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde4), 0xde);
        EXPECT(gbc.readMem(0xbde5), 0x24);
        // DE 02FB
        gbc.setState(0x3abf, 0x1806, 0x2860, 0xed19, 0xd4b3, 0x83c3, 0x0, 0x0);
        gbc.writeMem(0x3abf, { 0xde, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1806);
        EXPECT(gbc.pc(), 0x3ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 02FC
        gbc.setState(0x3b48, 0x990e, 0x6d90, 0xfbb3, 0x8909, 0x7965, 0x0, 0x1);
        gbc.writeMem(0x3b48, { 0xde, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x990e);
        EXPECT(gbc.pc(), 0x3b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 02FD
        gbc.setState(0xd7e0, 0x99f, 0xdb00, 0xc82e, 0xa571, 0x6afd, 0x0, 0x0);
        gbc.writeMem(0xd7e0, { 0xde, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x99f);
        EXPECT(gbc.pc(), 0xd7e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e0), 0xde);
        EXPECT(gbc.readMem(0xd7e1), 0xf0);
        // DE 02FE
        gbc.setState(0x2989, 0xbcbd, 0x66b0, 0x1dcb, 0x531a, 0x5dc7, 0x1, 0x0);
        gbc.writeMem(0x2989, { 0xde, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbcbd);
        EXPECT(gbc.pc(), 0x298b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0300
        gbc.setState(0xed3c, 0xe220, 0xffd0, 0xd3ae, 0xa08b, 0x157c, 0x0, 0x0);
        gbc.writeMem(0xed3c, { 0xde, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe220);
        EXPECT(gbc.pc(), 0xed3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3c), 0xde);
        EXPECT(gbc.readMem(0xed3d), 0x5);
        // DE 0301
        gbc.setState(0xba0c, 0xb7f9, 0x2860, 0xc8e5, 0xb285, 0x7380, 0x1, 0x1);
        gbc.writeMem(0xba0c, { 0xde, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb7f9);
        EXPECT(gbc.pc(), 0xba0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0c), 0xde);
        EXPECT(gbc.readMem(0xba0d), 0xdd);
        // DE 0302
        gbc.setState(0xe290, 0xb70f, 0x3e80, 0x78db, 0x8b91, 0x9d56, 0x1, 0x1);
        gbc.writeMem(0xe290, { 0xde, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb70f);
        EXPECT(gbc.pc(), 0xe292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe290), 0xde);
        EXPECT(gbc.readMem(0xe291), 0xcb);
        // DE 0303
        gbc.setState(0x132, 0x4761, 0x7d0, 0x7118, 0x1bc1, 0x4fb7, 0x1, 0x0);
        gbc.writeMem(0x132, { 0xde, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4761);
        EXPECT(gbc.pc(), 0x134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0304
        gbc.setState(0x462e, 0x5c0c, 0x6cf0, 0x9fd8, 0xef8e, 0x89a, 0x0, 0x1);
        gbc.writeMem(0x462e, { 0xde, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5c0c);
        EXPECT(gbc.pc(), 0x4630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0305
        gbc.setState(0xa9cc, 0x2bc6, 0xf140, 0x9120, 0x3b7d, 0x173b, 0x1, 0x1);
        gbc.writeMem(0xa9cc, { 0xde, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2bc6);
        EXPECT(gbc.pc(), 0xa9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9cc), 0xde);
        EXPECT(gbc.readMem(0xa9cd), 0x15);
        // DE 0306
        gbc.setState(0xecbd, 0x92d8, 0xd520, 0x3599, 0x52d5, 0x9408, 0x1, 0x1);
        gbc.writeMem(0xecbd, { 0xde, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x92d8);
        EXPECT(gbc.pc(), 0xecbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbd), 0xde);
        EXPECT(gbc.readMem(0xecbe), 0xae);
        // DE 0307
        gbc.setState(0x9bce, 0x7da9, 0xa5f0, 0xc828, 0xb401, 0xfadb, 0x0, 0x0);
        gbc.writeMem(0x9bce, { 0xde, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7da9);
        EXPECT(gbc.pc(), 0x9bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bce), 0xde);
        EXPECT(gbc.readMem(0x9bcf), 0x71);
        // DE 0308
        gbc.setState(0xe07, 0x8899, 0xb560, 0x43a6, 0x3e4, 0x7dc, 0x1, 0x1);
        gbc.writeMem(0xe07, { 0xde, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8899);
        EXPECT(gbc.pc(), 0xe09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 030A
        gbc.setState(0xe0dc, 0x1707, 0x3a50, 0xcb6, 0x225b, 0x6ae3, 0x0, 0x0);
        gbc.writeMem(0xe0dc, { 0xde, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1707);
        EXPECT(gbc.pc(), 0xe0de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0dc), 0xde);
        EXPECT(gbc.readMem(0xe0dd), 0xed);
        // DE 030B
        gbc.setState(0xe610, 0x5698, 0x7b90, 0x2659, 0xaae6, 0xa0a2, 0x1, 0x1);
        gbc.writeMem(0xe610, { 0xde, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5698);
        EXPECT(gbc.pc(), 0xe612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe610), 0xde);
        EXPECT(gbc.readMem(0xe611), 0x18);
        // DE 030C
        gbc.setState(0xd009, 0xffbb, 0xc2f0, 0x59b7, 0x6162, 0xd11e, 0x1, 0x0);
        gbc.writeMem(0xd009, { 0xde, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xffbb);
        EXPECT(gbc.pc(), 0xd00b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd009), 0xde);
        EXPECT(gbc.readMem(0xd00a), 0x41);
        // DE 030D
        gbc.setState(0x3679, 0xeba0, 0xee70, 0x8f3f, 0xa181, 0xf7bd, 0x0, 0x0);
        gbc.writeMem(0x3679, { 0xde, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xeba0);
        EXPECT(gbc.pc(), 0x367b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 030E
        gbc.setState(0xba5c, 0x91b0, 0x6a40, 0xf184, 0x46c5, 0xd85, 0x1, 0x1);
        gbc.writeMem(0xba5c, { 0xde, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x91b0);
        EXPECT(gbc.pc(), 0xba5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba5c), 0xde);
        EXPECT(gbc.readMem(0xba5d), 0xe5);
        // DE 030F
        gbc.setState(0xab39, 0x7c66, 0x32f0, 0x6883, 0xecdf, 0x3f39, 0x0, 0x1);
        gbc.writeMem(0xab39, { 0xde, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7c66);
        EXPECT(gbc.pc(), 0xab3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab39), 0xde);
        EXPECT(gbc.readMem(0xab3a), 0xfa);
        // DE 0310
        gbc.setState(0xac50, 0xd249, 0xecf0, 0xba5a, 0x4265, 0x2f67, 0x0, 0x0);
        gbc.writeMem(0xac50, { 0xde, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd249);
        EXPECT(gbc.pc(), 0xac52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac50), 0xde);
        EXPECT(gbc.readMem(0xac51), 0xff);
        // DE 0311
        gbc.setState(0x1030, 0xa740, 0xdd70, 0x4375, 0x913d, 0xc07a, 0x1, 0x0);
        gbc.writeMem(0x1030, { 0xde, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa740);
        EXPECT(gbc.pc(), 0x1032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0312
        gbc.setState(0x685, 0xdec8, 0xa790, 0xd787, 0x4f1, 0x263, 0x1, 0x0);
        gbc.writeMem(0x685, { 0xde, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xdec8);
        EXPECT(gbc.pc(), 0x687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0313
        gbc.setState(0x53a, 0x767f, 0x2370, 0x3549, 0x5d8a, 0xaa, 0x1, 0x1);
        gbc.writeMem(0x53a, { 0xde, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x767f);
        EXPECT(gbc.pc(), 0x53c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0314
        gbc.setState(0x5894, 0xb20f, 0x77b0, 0xbb93, 0x443f, 0xe0a, 0x1, 0x1);
        gbc.writeMem(0x5894, { 0xde, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb20f);
        EXPECT(gbc.pc(), 0x5896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0315
        gbc.setState(0xdbdf, 0xbacd, 0xad30, 0xab3a, 0x3acb, 0x4abb, 0x1, 0x0);
        gbc.writeMem(0xdbdf, { 0xde, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbacd);
        EXPECT(gbc.pc(), 0xdbe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbdf), 0xde);
        EXPECT(gbc.readMem(0xdbe0), 0x93);
        // DE 0316
        gbc.setState(0xbb50, 0x1429, 0xd370, 0xd0a, 0xc152, 0x34f5, 0x0, 0x0);
        gbc.writeMem(0xbb50, { 0xde, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1429);
        EXPECT(gbc.pc(), 0xbb52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb50), 0xde);
        EXPECT(gbc.readMem(0xbb51), 0x47);
        // DE 0317
        gbc.setState(0x779a, 0x97b9, 0x87e0, 0x7bc6, 0x7773, 0x889c, 0x1, 0x0);
        gbc.writeMem(0x779a, { 0xde, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x97b9);
        EXPECT(gbc.pc(), 0x779c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0318
        gbc.setState(0x8526, 0x69f8, 0x5130, 0x52af, 0x33a1, 0x9097, 0x1, 0x0);
        gbc.writeMem(0x8526, { 0xde, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x69f8);
        EXPECT(gbc.pc(), 0x8528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8526), 0xde);
        EXPECT(gbc.readMem(0x8527), 0xdf);
        // DE 031A
        gbc.setState(0x3480, 0x6705, 0x9760, 0x7857, 0x86e7, 0x7947, 0x1, 0x0);
        gbc.writeMem(0x3480, { 0xde, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6705);
        EXPECT(gbc.pc(), 0x3482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 031B
        gbc.setState(0x56fe, 0x6cec, 0xb8c0, 0x1ca7, 0x7f50, 0x7cf5, 0x1, 0x1);
        gbc.writeMem(0x56fe, { 0xde, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6cec);
        EXPECT(gbc.pc(), 0x5700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 031C
        gbc.setState(0x8dc7, 0x70c1, 0xbee0, 0xa8c, 0x8c1f, 0x950b, 0x0, 0x1);
        gbc.writeMem(0x8dc7, { 0xde, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x70c1);
        EXPECT(gbc.pc(), 0x8dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc7), 0xde);
        EXPECT(gbc.readMem(0x8dc8), 0x22);
        // DE 031D
        gbc.setState(0xe81, 0x4f8d, 0xa040, 0x2e78, 0xb0c1, 0xe079, 0x1, 0x0);
        gbc.writeMem(0xe81, { 0xde, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4f8d);
        EXPECT(gbc.pc(), 0xe83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 031E
        gbc.setState(0x8034, 0x7be6, 0xfdd0, 0x4b11, 0xb2fe, 0xe907, 0x0, 0x0);
        gbc.writeMem(0x8034, { 0xde, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7be6);
        EXPECT(gbc.pc(), 0x8036);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8034), 0xde);
        EXPECT(gbc.readMem(0x8035), 0x8a);
        // DE 031F
        gbc.setState(0x5e9e, 0xc044, 0xcb10, 0xbfe, 0x950d, 0x79b5, 0x1, 0x0);
        gbc.writeMem(0x5e9e, { 0xde, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc044);
        EXPECT(gbc.pc(), 0x5ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0320
        gbc.setState(0x1fb4, 0x30ef, 0x9870, 0xcad9, 0x2a32, 0x166f, 0x0, 0x0);
        gbc.writeMem(0x1fb4, { 0xde, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x30ef);
        EXPECT(gbc.pc(), 0x1fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0321
        gbc.setState(0xd9c1, 0x1634, 0xb990, 0x47ea, 0x2c6d, 0xb09d, 0x0, 0x0);
        gbc.writeMem(0xd9c1, { 0xde, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1634);
        EXPECT(gbc.pc(), 0xd9c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c1), 0xde);
        EXPECT(gbc.readMem(0xd9c2), 0x70);
        // DE 0323
        gbc.setState(0x63a1, 0xe979, 0x32c0, 0x5ec8, 0x83c8, 0x805c, 0x1, 0x1);
        gbc.writeMem(0x63a1, { 0xde, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe979);
        EXPECT(gbc.pc(), 0x63a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0324
        gbc.setState(0x64ff, 0xf89a, 0x7300, 0x51aa, 0x10bb, 0xf4c1, 0x0, 0x0);
        gbc.writeMem(0x64ff, { 0xde, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf89a);
        EXPECT(gbc.pc(), 0x6501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0325
        gbc.setState(0xb893, 0xe86f, 0x3f60, 0x301c, 0xcdc4, 0xad91, 0x0, 0x0);
        gbc.writeMem(0xb893, { 0xde, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe86f);
        EXPECT(gbc.pc(), 0xb895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb893), 0xde);
        EXPECT(gbc.readMem(0xb894), 0x1);
        // DE 0327
        gbc.setState(0x2455, 0x66c3, 0x1580, 0xb986, 0x8465, 0xa43c, 0x1, 0x0);
        gbc.writeMem(0x2455, { 0xde, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x66c3);
        EXPECT(gbc.pc(), 0x2457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0328
        gbc.setState(0x96df, 0xa6fa, 0xd630, 0x1fa9, 0xb0b0, 0xdefa, 0x1, 0x0);
        gbc.writeMem(0x96df, { 0xde, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa6fa);
        EXPECT(gbc.pc(), 0x96e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96df), 0xde);
        EXPECT(gbc.readMem(0x96e0), 0x9f);
        // DE 0329
        gbc.setState(0xc579, 0x6a90, 0x68e0, 0x9369, 0x8dbe, 0xe94, 0x1, 0x0);
        gbc.writeMem(0xc579, { 0xde, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6a90);
        EXPECT(gbc.pc(), 0xc57b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc579), 0xde);
        EXPECT(gbc.readMem(0xc57a), 0xb1);
        // DE 032A
        gbc.setState(0x2d1f, 0x58a6, 0x6940, 0x704, 0xdede, 0x7fe1, 0x1, 0x1);
        gbc.writeMem(0x2d1f, { 0xde, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x58a6);
        EXPECT(gbc.pc(), 0x2d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 032B
        gbc.setState(0x3ffc, 0x4e4b, 0x4d50, 0x5b0f, 0x8894, 0xc18e, 0x0, 0x0);
        gbc.writeMem(0x3ffc, { 0xde, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4e4b);
        EXPECT(gbc.pc(), 0x3ffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 032C
        gbc.setState(0x9614, 0xa9c5, 0x5b00, 0x527e, 0x94d6, 0xe8, 0x0, 0x0);
        gbc.writeMem(0x9614, { 0xde, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa9c5);
        EXPECT(gbc.pc(), 0x9616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9614), 0xde);
        EXPECT(gbc.readMem(0x9615), 0x40);
        // DE 032D
        gbc.setState(0x89f, 0x9814, 0x8ef0, 0xb987, 0xfcd4, 0x61dd, 0x1, 0x1);
        gbc.writeMem(0x89f, { 0xde, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9814);
        EXPECT(gbc.pc(), 0x8a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 032E
        gbc.setState(0x3413, 0xe4f6, 0x7f60, 0x5de4, 0xd73, 0xa1d4, 0x1, 0x0);
        gbc.writeMem(0x3413, { 0xde, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe4f6);
        EXPECT(gbc.pc(), 0x3415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 032F
        gbc.setState(0xcd71, 0x4928, 0xe560, 0xccba, 0xd7fe, 0xdc69, 0x0, 0x1);
        gbc.writeMem(0xcd71, { 0xde, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4928);
        EXPECT(gbc.pc(), 0xcd73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd71), 0xde);
        EXPECT(gbc.readMem(0xcd72), 0xf2);
        // DE 0330
        gbc.setState(0x65cb, 0x4c1a, 0xca80, 0xec31, 0x8d22, 0x75ce, 0x0, 0x1);
        gbc.writeMem(0x65cb, { 0xde, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4c1a);
        EXPECT(gbc.pc(), 0x65cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0331
        gbc.setState(0x4f5b, 0xf4be, 0xa470, 0xe6ae, 0x13a2, 0x896b, 0x0, 0x0);
        gbc.writeMem(0x4f5b, { 0xde, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf4be);
        EXPECT(gbc.pc(), 0x4f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0332
        gbc.setState(0xbd23, 0x1638, 0x66d0, 0x9e7d, 0x2862, 0x27fa, 0x0, 0x1);
        gbc.writeMem(0xbd23, { 0xde, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1638);
        EXPECT(gbc.pc(), 0xbd25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd23), 0xde);
        EXPECT(gbc.readMem(0xbd24), 0x1f);
        // DE 0333
        gbc.setState(0x3bce, 0xe7c5, 0xafa0, 0x845a, 0xfe61, 0x6902, 0x1, 0x1);
        gbc.writeMem(0x3bce, { 0xde, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe7c5);
        EXPECT(gbc.pc(), 0x3bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0334
        gbc.setState(0xabea, 0xc51b, 0x1c0, 0x8c2d, 0xeb55, 0x5ecf, 0x1, 0x0);
        gbc.writeMem(0xabea, { 0xde, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc51b);
        EXPECT(gbc.pc(), 0xabec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabea), 0xde);
        EXPECT(gbc.readMem(0xabeb), 0xf8);
        // DE 0335
        gbc.setState(0x1555, 0xb62, 0xcb20, 0x8efb, 0x9e8c, 0x9b76, 0x1, 0x1);
        gbc.writeMem(0x1555, { 0xde, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb62);
        EXPECT(gbc.pc(), 0x1557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0336
        gbc.setState(0xe111, 0x9272, 0xba00, 0xd137, 0xc863, 0x4b35, 0x0, 0x0);
        gbc.writeMem(0xe111, { 0xde, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9272);
        EXPECT(gbc.pc(), 0xe113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe111), 0xde);
        EXPECT(gbc.readMem(0xe112), 0xc3);
        // DE 0337
        gbc.setState(0xd7b7, 0xd660, 0xa000, 0xe3e2, 0x8699, 0xc349, 0x1, 0x0);
        gbc.writeMem(0xd7b7, { 0xde, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd660);
        EXPECT(gbc.pc(), 0xd7b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b7), 0xde);
        EXPECT(gbc.readMem(0xd7b8), 0xfc);
        // DE 0338
        gbc.setState(0x829d, 0xd89d, 0x4fb0, 0xadc8, 0x4350, 0x6cb2, 0x0, 0x0);
        gbc.writeMem(0x829d, { 0xde, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd89d);
        EXPECT(gbc.pc(), 0x829f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x829d), 0xde);
        EXPECT(gbc.readMem(0x829e), 0xea);
        // DE 0339
        gbc.setState(0xa154, 0x2aa9, 0xbbf0, 0xd22b, 0x6dad, 0x7df0, 0x0, 0x1);
        gbc.writeMem(0xa154, { 0xde, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2aa9);
        EXPECT(gbc.pc(), 0xa156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa154), 0xde);
        EXPECT(gbc.readMem(0xa155), 0x5f);
        // DE 033A
        gbc.setState(0xe1ff, 0x5eca, 0xd6e0, 0x55e2, 0x68e9, 0xbdbd, 0x1, 0x0);
        gbc.writeMem(0xe1ff, { 0xde, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5eca);
        EXPECT(gbc.pc(), 0xe201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ff), 0xde);
        EXPECT(gbc.readMem(0xe200), 0x5e);
        // DE 033B
        gbc.setState(0x128c, 0xcb72, 0xa950, 0xd129, 0xc46a, 0x29f7, 0x0, 0x0);
        gbc.writeMem(0x128c, { 0xde, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcb72);
        EXPECT(gbc.pc(), 0x128e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 033C
        gbc.setState(0xa152, 0x258a, 0x1ca0, 0x704c, 0x474c, 0xc848, 0x0, 0x0);
        gbc.writeMem(0xa152, { 0xde, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x258a);
        EXPECT(gbc.pc(), 0xa154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa152), 0xde);
        EXPECT(gbc.readMem(0xa153), 0xe1);
        // DE 033D
        gbc.setState(0xb8d6, 0xa690, 0x3630, 0xef26, 0x54d1, 0xc2c1, 0x0, 0x0);
        gbc.writeMem(0xb8d6, { 0xde, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa690);
        EXPECT(gbc.pc(), 0xb8d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d6), 0xde);
        EXPECT(gbc.readMem(0xb8d7), 0x7c);
        // DE 033E
        gbc.setState(0x3694, 0xb09, 0x780, 0xdce6, 0x673, 0x7045, 0x1, 0x1);
        gbc.writeMem(0x3694, { 0xde, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb09);
        EXPECT(gbc.pc(), 0x3696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 033F
        gbc.setState(0x3b5f, 0x306a, 0x4380, 0x8d37, 0xc83a, 0x35fa, 0x0, 0x1);
        gbc.writeMem(0x3b5f, { 0xde, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x306a);
        EXPECT(gbc.pc(), 0x3b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0340
        gbc.setState(0x9ba0, 0x466b, 0xbd20, 0xdf1e, 0x317b, 0xc87f, 0x1, 0x1);
        gbc.writeMem(0x9ba0, { 0xde, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x466b);
        EXPECT(gbc.pc(), 0x9ba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ba0), 0xde);
        EXPECT(gbc.readMem(0x9ba1), 0x3);
        // DE 0341
        gbc.setState(0xab92, 0x698c, 0xaaf0, 0x273d, 0xafa6, 0x3fac, 0x0, 0x0);
        gbc.writeMem(0xab92, { 0xde, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x698c);
        EXPECT(gbc.pc(), 0xab94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab92), 0xde);
        EXPECT(gbc.readMem(0xab93), 0x2);
        // DE 0342
        gbc.setState(0x5ef2, 0x1540, 0x9970, 0xc100, 0xf5e5, 0x4c65, 0x1, 0x1);
        gbc.writeMem(0x5ef2, { 0xde, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1540);
        EXPECT(gbc.pc(), 0x5ef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0343
        gbc.setState(0x2c45, 0x39ff, 0x510, 0xa43a, 0xc9a0, 0x9652, 0x1, 0x0);
        gbc.writeMem(0x2c45, { 0xde, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x39ff);
        EXPECT(gbc.pc(), 0x2c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0344
        gbc.setState(0x9265, 0xdff2, 0xcbb0, 0x3341, 0xf1c5, 0xeaf2, 0x0, 0x0);
        gbc.writeMem(0x9265, { 0xde, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xdff2);
        EXPECT(gbc.pc(), 0x9267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9265), 0xde);
        EXPECT(gbc.readMem(0x9266), 0xb5);
        // DE 0345
        gbc.setState(0x2a88, 0xff, 0xad0, 0xc1f2, 0x5502, 0x5276, 0x1, 0x1);
        gbc.writeMem(0x2a88, { 0xde, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xff);
        EXPECT(gbc.pc(), 0x2a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0346
        gbc.setState(0x5079, 0xbfed, 0x7e80, 0xf629, 0xcffc, 0x2877, 0x0, 0x1);
        gbc.writeMem(0x5079, { 0xde, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xbfed);
        EXPECT(gbc.pc(), 0x507b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0347
        gbc.setState(0x6e3a, 0x2805, 0xd010, 0x3b81, 0xcbfc, 0x4136, 0x0, 0x1);
        gbc.writeMem(0x6e3a, { 0xde, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2805);
        EXPECT(gbc.pc(), 0x6e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0348
        gbc.setState(0x1cd0, 0xee3e, 0x3a70, 0x7376, 0x3fc1, 0x2176, 0x0, 0x1);
        gbc.writeMem(0x1cd0, { 0xde, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xee3e);
        EXPECT(gbc.pc(), 0x1cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0349
        gbc.setState(0x57d0, 0x9886, 0x1eb0, 0xf0ea, 0xe6fc, 0xd5d, 0x1, 0x1);
        gbc.writeMem(0x57d0, { 0xde, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9886);
        EXPECT(gbc.pc(), 0x57d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 034A
        gbc.setState(0x2b1c, 0xb7e9, 0x8d00, 0xf5fe, 0x7855, 0xddde, 0x1, 0x0);
        gbc.writeMem(0x2b1c, { 0xde, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb7e9);
        EXPECT(gbc.pc(), 0x2b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 034B
        gbc.setState(0x5038, 0xbfcc, 0xbdd0, 0xc70e, 0x3f2e, 0x1beb, 0x1, 0x0);
        gbc.writeMem(0x5038, { 0xde, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbfcc);
        EXPECT(gbc.pc(), 0x503a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 034C
        gbc.setState(0x758d, 0x69a8, 0xaf80, 0x5e74, 0x65d5, 0xdbf2, 0x1, 0x0);
        gbc.writeMem(0x758d, { 0xde, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x69a8);
        EXPECT(gbc.pc(), 0x758f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 034D
        gbc.setState(0x694e, 0x9177, 0xd250, 0xf8bd, 0x67fc, 0x10e2, 0x1, 0x0);
        gbc.writeMem(0x694e, { 0xde, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9177);
        EXPECT(gbc.pc(), 0x6950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 034E
        gbc.setState(0x3db7, 0x2c72, 0x140, 0xb6e1, 0xf804, 0xc64, 0x1, 0x0);
        gbc.writeMem(0x3db7, { 0xde, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2c72);
        EXPECT(gbc.pc(), 0x3db9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 034F
        gbc.setState(0x1500, 0xf04e, 0x52d0, 0x5347, 0x55eb, 0xb013, 0x1, 0x1);
        gbc.writeMem(0x1500, { 0xde, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf04e);
        EXPECT(gbc.pc(), 0x1502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0350
        gbc.setState(0xb56c, 0x1bc7, 0x4640, 0xfc2f, 0xa3b9, 0x329e, 0x0, 0x1);
        gbc.writeMem(0xb56c, { 0xde, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1bc7);
        EXPECT(gbc.pc(), 0xb56e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb56c), 0xde);
        EXPECT(gbc.readMem(0xb56d), 0xd);
        // DE 0351
        gbc.setState(0x182e, 0x1349, 0x2d0, 0x7c31, 0xd476, 0xed30, 0x0, 0x0);
        gbc.writeMem(0x182e, { 0xde, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1349);
        EXPECT(gbc.pc(), 0x1830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0352
        gbc.setState(0x9648, 0x948b, 0x1f60, 0xfe2e, 0xbaa8, 0xa061, 0x0, 0x0);
        gbc.writeMem(0x9648, { 0xde, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x948b);
        EXPECT(gbc.pc(), 0x964a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9648), 0xde);
        EXPECT(gbc.readMem(0x9649), 0x2d);
        // DE 0353
        gbc.setState(0x2f1f, 0x2054, 0x5ee0, 0xe6ea, 0x6b4f, 0xb61f, 0x0, 0x1);
        gbc.writeMem(0x2f1f, { 0xde, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2054);
        EXPECT(gbc.pc(), 0x2f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0354
        gbc.setState(0x2ce5, 0xfaac, 0xcbf0, 0x8420, 0xaabc, 0xfb1a, 0x0, 0x1);
        gbc.writeMem(0x2ce5, { 0xde, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfaac);
        EXPECT(gbc.pc(), 0x2ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0355
        gbc.setState(0xdf70, 0x7b11, 0x72a0, 0xd3a8, 0x690d, 0x9616, 0x0, 0x1);
        gbc.writeMem(0xdf70, { 0xde, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7b11);
        EXPECT(gbc.pc(), 0xdf72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf70), 0xde);
        EXPECT(gbc.readMem(0xdf71), 0x90);
        // DE 0356
        gbc.setState(0x93c1, 0xacb3, 0x3b90, 0xfd17, 0x7573, 0x7ef2, 0x0, 0x1);
        gbc.writeMem(0x93c1, { 0xde, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xacb3);
        EXPECT(gbc.pc(), 0x93c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c1), 0xde);
        EXPECT(gbc.readMem(0x93c2), 0x9e);
        // DE 0357
        gbc.setState(0x3892, 0x27fe, 0xa1f0, 0xc289, 0xb8ad, 0xf58f, 0x0, 0x0);
        gbc.writeMem(0x3892, { 0xde, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x27fe);
        EXPECT(gbc.pc(), 0x3894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0358
        gbc.setState(0x3772, 0x29f8, 0x5a10, 0x8e78, 0x18b5, 0x679e, 0x1, 0x0);
        gbc.writeMem(0x3772, { 0xde, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x29f8);
        EXPECT(gbc.pc(), 0x3774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0359
        gbc.setState(0x15c2, 0x8380, 0xafc0, 0xb792, 0xb58c, 0x2da0, 0x1, 0x1);
        gbc.writeMem(0x15c2, { 0xde, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8380);
        EXPECT(gbc.pc(), 0x15c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 035A
        gbc.setState(0x9824, 0xf957, 0xceb0, 0x9c17, 0xf6e7, 0xfa48, 0x0, 0x1);
        gbc.writeMem(0x9824, { 0xde, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf957);
        EXPECT(gbc.pc(), 0x9826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9824), 0xde);
        EXPECT(gbc.readMem(0x9825), 0x5a);
        // DE 035B
        gbc.setState(0x4621, 0x414f, 0x14c0, 0x35c1, 0xc30, 0xc20d, 0x0, 0x1);
        gbc.writeMem(0x4621, { 0xde, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x414f);
        EXPECT(gbc.pc(), 0x4623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 035C
        gbc.setState(0xcc34, 0x6bf2, 0x3360, 0x7861, 0x6602, 0x8358, 0x1, 0x0);
        gbc.writeMem(0xcc34, { 0xde, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6bf2);
        EXPECT(gbc.pc(), 0xcc36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc34), 0xde);
        EXPECT(gbc.readMem(0xcc35), 0xe4);
        // DE 035D
        gbc.setState(0x6a11, 0xc496, 0x72c0, 0xfb22, 0xfaf3, 0x3b07, 0x1, 0x1);
        gbc.writeMem(0x6a11, { 0xde, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc496);
        EXPECT(gbc.pc(), 0x6a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 035E
        gbc.setState(0xd406, 0x1592, 0x53b0, 0xf1d7, 0x85fe, 0x936a, 0x0, 0x0);
        gbc.writeMem(0xd406, { 0xde, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1592);
        EXPECT(gbc.pc(), 0xd408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd406), 0xde);
        EXPECT(gbc.readMem(0xd407), 0xc3);
        // DE 035F
        gbc.setState(0x75a9, 0x94d, 0x2900, 0x1b53, 0x2434, 0x6062, 0x1, 0x1);
        gbc.writeMem(0x75a9, { 0xde, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x94d);
        EXPECT(gbc.pc(), 0x75ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0360
        gbc.setState(0xd057, 0x9ca9, 0x90c0, 0x3b19, 0x51d8, 0x6d47, 0x1, 0x0);
        gbc.writeMem(0xd057, { 0xde, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9ca9);
        EXPECT(gbc.pc(), 0xd059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd057), 0xde);
        EXPECT(gbc.readMem(0xd058), 0xe0);
        // DE 0361
        gbc.setState(0xb72c, 0x6e21, 0xc580, 0x1653, 0xa696, 0xf606, 0x1, 0x1);
        gbc.writeMem(0xb72c, { 0xde, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6e21);
        EXPECT(gbc.pc(), 0xb72e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb72c), 0xde);
        EXPECT(gbc.readMem(0xb72d), 0x90);
        // DE 0362
        gbc.setState(0x8e9a, 0x8fff, 0x1890, 0x514b, 0x2fe9, 0xf74e, 0x1, 0x1);
        gbc.writeMem(0x8e9a, { 0xde, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8fff);
        EXPECT(gbc.pc(), 0x8e9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e9a), 0xde);
        EXPECT(gbc.readMem(0x8e9b), 0x7d);
        // DE 0363
        gbc.setState(0x70e7, 0x54d4, 0x3f0, 0x8dee, 0x3b4c, 0x26bb, 0x1, 0x0);
        gbc.writeMem(0x70e7, { 0xde, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x54d4);
        EXPECT(gbc.pc(), 0x70e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0364
        gbc.setState(0x2d57, 0x7e2e, 0x85d0, 0x59ae, 0x9e19, 0x277b, 0x1, 0x1);
        gbc.writeMem(0x2d57, { 0xde, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7e2e);
        EXPECT(gbc.pc(), 0x2d59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0365
        gbc.setState(0xd13e, 0x670c, 0x300, 0x2cda, 0xd4ed, 0xe9db, 0x0, 0x1);
        gbc.writeMem(0xd13e, { 0xde, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x670c);
        EXPECT(gbc.pc(), 0xd140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd13e), 0xde);
        EXPECT(gbc.readMem(0xd13f), 0x8d);
        // DE 0366
        gbc.setState(0x44eb, 0x935, 0xce50, 0x1cd, 0x5ef, 0xcaa0, 0x1, 0x0);
        gbc.writeMem(0x44eb, { 0xde, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x935);
        EXPECT(gbc.pc(), 0x44ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0367
        gbc.setState(0x4177, 0x9b2d, 0xa910, 0x2dde, 0x18c4, 0x3d50, 0x1, 0x0);
        gbc.writeMem(0x4177, { 0xde, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9b2d);
        EXPECT(gbc.pc(), 0x4179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0368
        gbc.setState(0xbe61, 0xb413, 0xbc0, 0xc0c2, 0xb6fd, 0x9407, 0x0, 0x1);
        gbc.writeMem(0xbe61, { 0xde, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb413);
        EXPECT(gbc.pc(), 0xbe63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe61), 0xde);
        EXPECT(gbc.readMem(0xbe62), 0xd9);
        // DE 0369
        gbc.setState(0x2a3a, 0x4db4, 0x3bc0, 0x49d5, 0x7b8, 0x6850, 0x0, 0x0);
        gbc.writeMem(0x2a3a, { 0xde, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4db4);
        EXPECT(gbc.pc(), 0x2a3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 036A
        gbc.setState(0xc67d, 0x6bcc, 0x49c0, 0xcba3, 0xf23a, 0x28b8, 0x1, 0x0);
        gbc.writeMem(0xc67d, { 0xde, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6bcc);
        EXPECT(gbc.pc(), 0xc67f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67d), 0xde);
        EXPECT(gbc.readMem(0xc67e), 0x38);
        // DE 036B
        gbc.setState(0xc5e0, 0x4f8f, 0xc5e0, 0xbd61, 0x8e64, 0x4017, 0x0, 0x0);
        gbc.writeMem(0xc5e0, { 0xde, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4f8f);
        EXPECT(gbc.pc(), 0xc5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e0), 0xde);
        EXPECT(gbc.readMem(0xc5e1), 0x87);
        // DE 036C
        gbc.setState(0xe1d4, 0xe38b, 0x2c30, 0xfb2d, 0xe027, 0x3ff4, 0x0, 0x0);
        gbc.writeMem(0xe1d4, { 0xde, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe38b);
        EXPECT(gbc.pc(), 0xe1d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d4), 0xde);
        EXPECT(gbc.readMem(0xe1d5), 0xf4);
        // DE 036D
        gbc.setState(0x7dbc, 0x6a33, 0x9260, 0x8f1, 0x442d, 0xe6a5, 0x1, 0x0);
        gbc.writeMem(0x7dbc, { 0xde, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6a33);
        EXPECT(gbc.pc(), 0x7dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 036E
        gbc.setState(0xe240, 0x1b92, 0xc2b0, 0x4c96, 0x28c9, 0x94bc, 0x1, 0x1);
        gbc.writeMem(0xe240, { 0xde, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1b92);
        EXPECT(gbc.pc(), 0xe242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe240), 0xde);
        EXPECT(gbc.readMem(0xe241), 0xe5);
        // DE 036F
        gbc.setState(0x52a1, 0xabfa, 0x8b00, 0xb9e8, 0xe68a, 0x7a3f, 0x1, 0x0);
        gbc.writeMem(0x52a1, { 0xde, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xabfa);
        EXPECT(gbc.pc(), 0x52a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0370
        gbc.setState(0xbb5, 0x848a, 0x2de0, 0x8f5c, 0x1c57, 0x80d9, 0x0, 0x1);
        gbc.writeMem(0xbb5, { 0xde, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x848a);
        EXPECT(gbc.pc(), 0xbb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0371
        gbc.setState(0x8046, 0xcda9, 0x7590, 0x5690, 0x6d4d, 0xea32, 0x0, 0x0);
        gbc.writeMem(0x8046, { 0xde, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcda9);
        EXPECT(gbc.pc(), 0x8048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8046), 0xde);
        EXPECT(gbc.readMem(0x8047), 0xae);
        // DE 0372
        gbc.setState(0x5ce3, 0xdc0d, 0xbe00, 0x7140, 0xc27e, 0xd1ba, 0x1, 0x0);
        gbc.writeMem(0x5ce3, { 0xde, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdc0d);
        EXPECT(gbc.pc(), 0x5ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0373
        gbc.setState(0x94f8, 0xcab2, 0x76c0, 0x5a79, 0xd19f, 0xe03, 0x0, 0x0);
        gbc.writeMem(0x94f8, { 0xde, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xcab2);
        EXPECT(gbc.pc(), 0x94fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f8), 0xde);
        EXPECT(gbc.readMem(0x94f9), 0x35);
        // DE 0374
        gbc.setState(0x4d81, 0xc661, 0x23d0, 0x7f75, 0x7106, 0x97f5, 0x0, 0x1);
        gbc.writeMem(0x4d81, { 0xde, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc661);
        EXPECT(gbc.pc(), 0x4d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0375
        gbc.setState(0xd3e6, 0x1cd, 0xfb70, 0xc7c2, 0xf783, 0xe331, 0x0, 0x1);
        gbc.writeMem(0xd3e6, { 0xde, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1cd);
        EXPECT(gbc.pc(), 0xd3e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3e6), 0xde);
        EXPECT(gbc.readMem(0xd3e7), 0xe5);
        // DE 0376
        gbc.setState(0x110, 0x2f04, 0x970, 0xcf97, 0xf03b, 0x5413, 0x1, 0x1);
        gbc.writeMem(0x110, { 0xde, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2f04);
        EXPECT(gbc.pc(), 0x112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0378
        gbc.setState(0x6f72, 0xd36c, 0x56e0, 0x6c6b, 0x9fd9, 0xed87, 0x1, 0x1);
        gbc.writeMem(0x6f72, { 0xde, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd36c);
        EXPECT(gbc.pc(), 0x6f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 037A
        gbc.setState(0x2256, 0xed5d, 0x8b30, 0x135c, 0xa8ab, 0x88d, 0x0, 0x0);
        gbc.writeMem(0x2256, { 0xde, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xed5d);
        EXPECT(gbc.pc(), 0x2258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 037B
        gbc.setState(0x566a, 0x22d6, 0x1f70, 0xaf98, 0x1178, 0x939b, 0x1, 0x1);
        gbc.writeMem(0x566a, { 0xde, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x22d6);
        EXPECT(gbc.pc(), 0x566c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 037C
        gbc.setState(0xcb8e, 0x1ef4, 0x1bc0, 0xa5b6, 0xbc6d, 0xe801, 0x0, 0x1);
        gbc.writeMem(0xcb8e, { 0xde, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1ef4);
        EXPECT(gbc.pc(), 0xcb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb8e), 0xde);
        EXPECT(gbc.readMem(0xcb8f), 0x74);
        // DE 037D
        gbc.setState(0xaea6, 0xe751, 0xf9c0, 0x6358, 0x97fc, 0xddd1, 0x0, 0x1);
        gbc.writeMem(0xaea6, { 0xde, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe751);
        EXPECT(gbc.pc(), 0xaea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea6), 0xde);
        EXPECT(gbc.readMem(0xaea7), 0x4d);
        // DE 037E
        gbc.setState(0x5d0d, 0x97a6, 0xf770, 0xf65f, 0x721a, 0x3153, 0x0, 0x1);
        gbc.writeMem(0x5d0d, { 0xde, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x97a6);
        EXPECT(gbc.pc(), 0x5d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 037F
        gbc.setState(0xbb57, 0x225b, 0x1260, 0xe834, 0x1992, 0x91b7, 0x0, 0x1);
        gbc.writeMem(0xbb57, { 0xde, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x225b);
        EXPECT(gbc.pc(), 0xbb59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb57), 0xde);
        EXPECT(gbc.readMem(0xbb58), 0xd8);
        // DE 0380
        gbc.setState(0x90f, 0xba34, 0xc140, 0x1c2e, 0x11ee, 0xddb5, 0x0, 0x1);
        gbc.writeMem(0x90f, { 0xde, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xba34);
        EXPECT(gbc.pc(), 0x911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0381
        gbc.setState(0x17ce, 0xb7a7, 0xa760, 0x277b, 0xd2ad, 0xefeb, 0x1, 0x1);
        gbc.writeMem(0x17ce, { 0xde, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb7a7);
        EXPECT(gbc.pc(), 0x17d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0382
        gbc.setState(0x9399, 0x73b9, 0xec10, 0xb2c6, 0xa373, 0x7035, 0x0, 0x1);
        gbc.writeMem(0x9399, { 0xde, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x73b9);
        EXPECT(gbc.pc(), 0x939b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9399), 0xde);
        EXPECT(gbc.readMem(0x939a), 0xd6);
        // DE 0383
        gbc.setState(0x15d4, 0xf345, 0x8300, 0x2a80, 0x9f96, 0xbafa, 0x1, 0x1);
        gbc.writeMem(0x15d4, { 0xde, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf345);
        EXPECT(gbc.pc(), 0x15d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0384
        gbc.setState(0xa7f9, 0xd868, 0xc1d0, 0x537a, 0x9586, 0x433e, 0x1, 0x1);
        gbc.writeMem(0xa7f9, { 0xde, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd868);
        EXPECT(gbc.pc(), 0xa7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f9), 0xde);
        EXPECT(gbc.readMem(0xa7fa), 0x63);
        // DE 0385
        gbc.setState(0xc42f, 0x3827, 0x9130, 0x2784, 0xec2e, 0xe0ad, 0x0, 0x0);
        gbc.writeMem(0xc42f, { 0xde, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3827);
        EXPECT(gbc.pc(), 0xc431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc42f), 0xde);
        EXPECT(gbc.readMem(0xc430), 0x57);
        // DE 0386
        gbc.setState(0x38c0, 0x25ee, 0xfe0, 0xf6b6, 0x2f, 0x47aa, 0x0, 0x1);
        gbc.writeMem(0x38c0, { 0xde, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x25ee);
        EXPECT(gbc.pc(), 0x38c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0387
        gbc.setState(0xfe7, 0xcdca, 0x2490, 0x7f64, 0xc065, 0xc959, 0x1, 0x0);
        gbc.writeMem(0xfe7, { 0xde, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcdca);
        EXPECT(gbc.pc(), 0xfe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0388
        gbc.setState(0x8576, 0xa9e5, 0x21c0, 0x4293, 0x99a8, 0x6005, 0x1, 0x1);
        gbc.writeMem(0x8576, { 0xde, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa9e5);
        EXPECT(gbc.pc(), 0x8578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8576), 0xde);
        EXPECT(gbc.readMem(0x8577), 0x61);
        // DE 0389
        gbc.setState(0xe194, 0x3c5d, 0x5100, 0x1fd0, 0x5813, 0x18b8, 0x1, 0x1);
        gbc.writeMem(0xe194, { 0xde, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3c5d);
        EXPECT(gbc.pc(), 0xe196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe194), 0xde);
        EXPECT(gbc.readMem(0xe195), 0xa6);
        // DE 038A
        gbc.setState(0xd5b4, 0xd0d2, 0x8180, 0xc0fa, 0x8826, 0x8ce4, 0x0, 0x1);
        gbc.writeMem(0xd5b4, { 0xde, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd0d2);
        EXPECT(gbc.pc(), 0xd5b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b4), 0xde);
        EXPECT(gbc.readMem(0xd5b5), 0x4e);
        // DE 038B
        gbc.setState(0xcd0d, 0x76b8, 0x6900, 0xf1bf, 0xee43, 0xc8a8, 0x0, 0x0);
        gbc.writeMem(0xcd0d, { 0xde, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x76b8);
        EXPECT(gbc.pc(), 0xcd0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0d), 0xde);
        EXPECT(gbc.readMem(0xcd0e), 0x26);
        // DE 038C
        gbc.setState(0x8394, 0xc532, 0x2100, 0x1e1b, 0x73ee, 0xb207, 0x0, 0x1);
        gbc.writeMem(0x8394, { 0xde, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc532);
        EXPECT(gbc.pc(), 0x8396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8394), 0xde);
        EXPECT(gbc.readMem(0x8395), 0x4e);
        // DE 038D
        gbc.setState(0x7d85, 0x5f1d, 0xf000, 0x4765, 0xf0ba, 0xc89d, 0x1, 0x1);
        gbc.writeMem(0x7d85, { 0xde, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5f1d);
        EXPECT(gbc.pc(), 0x7d87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 038E
        gbc.setState(0x994b, 0xa8cd, 0x5ef0, 0x1a54, 0xdee3, 0x3896, 0x1, 0x0);
        gbc.writeMem(0x994b, { 0xde, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa8cd);
        EXPECT(gbc.pc(), 0x994d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994b), 0xde);
        EXPECT(gbc.readMem(0x994c), 0x80);
        // DE 038F
        gbc.setState(0x376f, 0xfcb9, 0xbc40, 0x528d, 0x6091, 0x7249, 0x1, 0x1);
        gbc.writeMem(0x376f, { 0xde, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfcb9);
        EXPECT(gbc.pc(), 0x3771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0390
        gbc.setState(0x5421, 0x4511, 0xa700, 0xdb84, 0x1098, 0x82b, 0x1, 0x1);
        gbc.writeMem(0x5421, { 0xde, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4511);
        EXPECT(gbc.pc(), 0x5423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 0391
        gbc.setState(0xcc42, 0x7fc9, 0x9730, 0xb14e, 0x28e2, 0x33ff, 0x0, 0x1);
        gbc.writeMem(0xcc42, { 0xde, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7fc9);
        EXPECT(gbc.pc(), 0xcc44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc42), 0xde);
        EXPECT(gbc.readMem(0xcc43), 0x7b);
        // DE 0392
        gbc.setState(0xeb29, 0xc41e, 0x81f0, 0x696d, 0xd00e, 0x48a, 0x0, 0x1);
        gbc.writeMem(0xeb29, { 0xde, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc41e);
        EXPECT(gbc.pc(), 0xeb2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb29), 0xde);
        EXPECT(gbc.readMem(0xeb2a), 0x94);
        // DE 0393
        gbc.setState(0x777, 0xe13d, 0x7290, 0xfa8a, 0x40e6, 0x26cf, 0x1, 0x0);
        gbc.writeMem(0x777, { 0xde, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe13d);
        EXPECT(gbc.pc(), 0x779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0394
        gbc.setState(0xbed3, 0xc6f9, 0xb430, 0xc21a, 0xa2b3, 0xe0e8, 0x1, 0x1);
        gbc.writeMem(0xbed3, { 0xde, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc6f9);
        EXPECT(gbc.pc(), 0xbed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed3), 0xde);
        EXPECT(gbc.readMem(0xbed4), 0x6d);
        // DE 0395
        gbc.setState(0x490d, 0xaa7a, 0x9050, 0x6209, 0x92c0, 0x81e3, 0x1, 0x1);
        gbc.writeMem(0x490d, { 0xde, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xaa7a);
        EXPECT(gbc.pc(), 0x490f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 0396
        gbc.setState(0xb0f, 0x8df9, 0xe710, 0xee0b, 0xb880, 0x9b8d, 0x1, 0x1);
        gbc.writeMem(0xb0f, { 0xde, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8df9);
        EXPECT(gbc.pc(), 0xb11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 0397
        gbc.setState(0x3222, 0xbec0, 0xafb0, 0x6fdf, 0xd1ee, 0x2252, 0x0, 0x1);
        gbc.writeMem(0x3222, { 0xde, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbec0);
        EXPECT(gbc.pc(), 0x3224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 0398
        gbc.setState(0xc77b, 0xc3bd, 0xbe30, 0xc6af, 0x98a4, 0xe2c1, 0x1, 0x1);
        gbc.writeMem(0xc77b, { 0xde, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc3bd);
        EXPECT(gbc.pc(), 0xc77d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc77b), 0xde);
        EXPECT(gbc.readMem(0xc77c), 0x0);
        // DE 0399
        gbc.setState(0x18b, 0xef73, 0xbd50, 0xc41, 0xcca4, 0x9dcb, 0x0, 0x0);
        gbc.writeMem(0x18b, { 0xde, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xef73);
        EXPECT(gbc.pc(), 0x18d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 039A
        gbc.setState(0x2f0e, 0xabed, 0xa5b0, 0xa4f4, 0x2453, 0x90f5, 0x0, 0x0);
        gbc.writeMem(0x2f0e, { 0xde, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xabed);
        EXPECT(gbc.pc(), 0x2f10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 039B
        gbc.setState(0xc151, 0xba34, 0x2b60, 0x4d44, 0xd645, 0x6dfc, 0x0, 0x1);
        gbc.writeMem(0xc151, { 0xde, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xba34);
        EXPECT(gbc.pc(), 0xc153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc151), 0xde);
        EXPECT(gbc.readMem(0xc152), 0x75);
        // DE 039C
        gbc.setState(0xe43d, 0x8b3c, 0xf310, 0x863b, 0x6d9f, 0xf623, 0x1, 0x0);
        gbc.writeMem(0xe43d, { 0xde, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8b3c);
        EXPECT(gbc.pc(), 0xe43f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe43d), 0xde);
        EXPECT(gbc.readMem(0xe43e), 0xff);
        // DE 039D
        gbc.setState(0x3229, 0xd9fd, 0xcd20, 0xb025, 0xc83d, 0xc2e7, 0x1, 0x1);
        gbc.writeMem(0x3229, { 0xde, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd9fd);
        EXPECT(gbc.pc(), 0x322b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 039E
        gbc.setState(0x1ad2, 0x3631, 0x530, 0x1178, 0x74ec, 0x87aa, 0x0, 0x0);
        gbc.writeMem(0x1ad2, { 0xde, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3631);
        EXPECT(gbc.pc(), 0x1ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 039F
        gbc.setState(0x79c1, 0xf5c, 0x3c20, 0xafb4, 0x4600, 0xf6e1, 0x0, 0x0);
        gbc.writeMem(0x79c1, { 0xde, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf5c);
        EXPECT(gbc.pc(), 0x79c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 03A0
        gbc.setState(0xa5f8, 0x9d8c, 0x40, 0x7162, 0x2aad, 0x36f9, 0x1, 0x0);
        gbc.writeMem(0xa5f8, { 0xde, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9d8c);
        EXPECT(gbc.pc(), 0xa5fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f8), 0xde);
        EXPECT(gbc.readMem(0xa5f9), 0x4b);
        // DE 03A1
        gbc.setState(0xdbc1, 0x888b, 0x2e70, 0x6a35, 0x6dd1, 0x28bf, 0x0, 0x0);
        gbc.writeMem(0xdbc1, { 0xde, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x888b);
        EXPECT(gbc.pc(), 0xdbc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc1), 0xde);
        EXPECT(gbc.readMem(0xdbc2), 0x63);
        // DE 03A2
        gbc.setState(0x1a84, 0x9c42, 0xdcc0, 0xf4e1, 0xd99f, 0x39d6, 0x0, 0x0);
        gbc.writeMem(0x1a84, { 0xde, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9c42);
        EXPECT(gbc.pc(), 0x1a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 03A3
        gbc.setState(0xe7fb, 0x7cb3, 0x7320, 0xc6e1, 0x1bbf, 0x2ec4, 0x1, 0x1);
        gbc.writeMem(0xe7fb, { 0xde, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7cb3);
        EXPECT(gbc.pc(), 0xe7fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7fb), 0xde);
        EXPECT(gbc.readMem(0xe7fc), 0x1b);
        // DE 03A5
        gbc.setState(0xe74c, 0x2dd2, 0x94a0, 0xf860, 0x11dd, 0x1617, 0x1, 0x0);
        gbc.writeMem(0xe74c, { 0xde, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2dd2);
        EXPECT(gbc.pc(), 0xe74e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe74c), 0xde);
        EXPECT(gbc.readMem(0xe74d), 0xe0);
        // DE 03A6
        gbc.setState(0x1fa9, 0x2f4, 0x16e0, 0xca2b, 0x4e43, 0x58b7, 0x1, 0x1);
        gbc.writeMem(0x1fa9, { 0xde, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2f4);
        EXPECT(gbc.pc(), 0x1fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 03A7
        gbc.setState(0xc7e0, 0x81b5, 0x1a60, 0xb27a, 0x78b7, 0x9f9a, 0x0, 0x0);
        gbc.writeMem(0xc7e0, { 0xde, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x81b5);
        EXPECT(gbc.pc(), 0xc7e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7e0), 0xde);
        EXPECT(gbc.readMem(0xc7e1), 0xef);
        // DE 03A8
        gbc.setState(0x4e36, 0x3dbd, 0x4090, 0x9165, 0xffa0, 0xd522, 0x0, 0x0);
        gbc.writeMem(0x4e36, { 0xde, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3dbd);
        EXPECT(gbc.pc(), 0x4e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 03A9
        gbc.setState(0xad39, 0xa9a5, 0x8c00, 0x1b0e, 0x6cb3, 0x8a76, 0x1, 0x0);
        gbc.writeMem(0xad39, { 0xde, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa9a5);
        EXPECT(gbc.pc(), 0xad3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad39), 0xde);
        EXPECT(gbc.readMem(0xad3a), 0x8c);
        // DE 03AA
        gbc.setState(0xb4ca, 0x6595, 0xa540, 0xa38b, 0x7d74, 0x63c3, 0x1, 0x1);
        gbc.writeMem(0xb4ca, { 0xde, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6595);
        EXPECT(gbc.pc(), 0xb4cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ca), 0xde);
        EXPECT(gbc.readMem(0xb4cb), 0x88);
        // DE 03AB
        gbc.setState(0x649b, 0x570b, 0x1610, 0xc29d, 0x8907, 0xc406, 0x0, 0x1);
        gbc.writeMem(0x649b, { 0xde, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x570b);
        EXPECT(gbc.pc(), 0x649d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 03AC
        gbc.setState(0x91da, 0x6ee8, 0xaed0, 0xe56a, 0xd5f1, 0x4eaa, 0x0, 0x1);
        gbc.writeMem(0x91da, { 0xde, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6ee8);
        EXPECT(gbc.pc(), 0x91dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91da), 0xde);
        EXPECT(gbc.readMem(0x91db), 0x7c);
        // DE 03AD
        gbc.setState(0x17ce, 0x32b8, 0xf5a0, 0x324a, 0x1810, 0xb921, 0x0, 0x0);
        gbc.writeMem(0x17ce, { 0xde, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x32b8);
        EXPECT(gbc.pc(), 0x17d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 03AF
        gbc.setState(0xba17, 0x61ea, 0x73c0, 0x463a, 0x20fd, 0x8552, 0x1, 0x1);
        gbc.writeMem(0xba17, { 0xde, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x61ea);
        EXPECT(gbc.pc(), 0xba19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba17), 0xde);
        EXPECT(gbc.readMem(0xba18), 0x6f);
        // DE 03B0
        gbc.setState(0x6665, 0xae94, 0x7e40, 0x6f2e, 0x9ac9, 0x2b18, 0x1, 0x1);
        gbc.writeMem(0x6665, { 0xde, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xae94);
        EXPECT(gbc.pc(), 0x6667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 03B1
        gbc.setState(0x23be, 0xf4b1, 0x8d70, 0xe5a3, 0xd569, 0xf24c, 0x1, 0x1);
        gbc.writeMem(0x23be, { 0xde, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf4b1);
        EXPECT(gbc.pc(), 0x23c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 03B2
        gbc.setState(0x654c, 0x99f7, 0xe100, 0x3fc0, 0xdcab, 0x2a53, 0x0, 0x1);
        gbc.writeMem(0x654c, { 0xde, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x99f7);
        EXPECT(gbc.pc(), 0x654e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 03B3
        gbc.setState(0x5516, 0xe2c2, 0x55d0, 0x520d, 0x6cc6, 0x68c9, 0x0, 0x1);
        gbc.writeMem(0x5516, { 0xde, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe2c2);
        EXPECT(gbc.pc(), 0x5518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 03B4
        gbc.setState(0x8bc9, 0x1f15, 0x85d0, 0x9a8d, 0xc341, 0x4b68, 0x1, 0x1);
        gbc.writeMem(0x8bc9, { 0xde, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1f15);
        EXPECT(gbc.pc(), 0x8bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc9), 0xde);
        EXPECT(gbc.readMem(0x8bca), 0xd1);
        // DE 03B5
        gbc.setState(0x89ab, 0x16b9, 0x6ef0, 0xa0e3, 0x4504, 0xefc0, 0x1, 0x1);
        gbc.writeMem(0x89ab, { 0xde, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x16b9);
        EXPECT(gbc.pc(), 0x89ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ab), 0xde);
        EXPECT(gbc.readMem(0x89ac), 0x9a);
        // DE 03B6
        gbc.setState(0x108, 0xe9f7, 0xb160, 0xb214, 0xa989, 0xde2e, 0x0, 0x1);
        gbc.writeMem(0x108, { 0xde, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe9f7);
        EXPECT(gbc.pc(), 0x10a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 03B7
        gbc.setState(0x6162, 0xdd94, 0xf970, 0x6f7d, 0xbc0, 0xbe98, 0x1, 0x1);
        gbc.writeMem(0x6162, { 0xde, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdd94);
        EXPECT(gbc.pc(), 0x6164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 03B8
        gbc.setState(0x1487, 0x280b, 0xd210, 0x50a1, 0x252e, 0x8274, 0x0, 0x1);
        gbc.writeMem(0x1487, { 0xde, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x280b);
        EXPECT(gbc.pc(), 0x1489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 03BA
        gbc.setState(0xed0a, 0xd43a, 0xa680, 0xa2ed, 0x5c92, 0x4699, 0x0, 0x1);
        gbc.writeMem(0xed0a, { 0xde, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd43a);
        EXPECT(gbc.pc(), 0xed0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed0a), 0xde);
        EXPECT(gbc.readMem(0xed0b), 0x41);
        // DE 03BB
        gbc.setState(0x3175, 0x62e7, 0xc780, 0x4a42, 0xf5c8, 0xad7c, 0x0, 0x1);
        gbc.writeMem(0x3175, { 0xde, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x62e7);
        EXPECT(gbc.pc(), 0x3177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 03BC
        gbc.setState(0x77ea, 0xe5d6, 0x56f0, 0x6b52, 0x67, 0xbc79, 0x0, 0x0);
        gbc.writeMem(0x77ea, { 0xde, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe5d6);
        EXPECT(gbc.pc(), 0x77ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 03BE
        gbc.setState(0xa968, 0xa26, 0xb4d0, 0x3a52, 0x9e05, 0x7220, 0x1, 0x0);
        gbc.writeMem(0xa968, { 0xde, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa26);
        EXPECT(gbc.pc(), 0xa96a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa968), 0xde);
        EXPECT(gbc.readMem(0xa969), 0x50);
        // DE 03BF
        gbc.setState(0x5a3f, 0xa9e, 0x8060, 0x3736, 0x47ea, 0xdc15, 0x1, 0x0);
        gbc.writeMem(0x5a3f, { 0xde, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa9e);
        EXPECT(gbc.pc(), 0x5a41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 03C0
        gbc.setState(0x3765, 0x80c, 0xb620, 0xaaae, 0x9387, 0x1f1c, 0x1, 0x1);
        gbc.writeMem(0x3765, { 0xde, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x80c);
        EXPECT(gbc.pc(), 0x3767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 03C1
        gbc.setState(0x99c1, 0x7eb, 0x9de0, 0xac6e, 0xc773, 0x77b8, 0x0, 0x1);
        gbc.writeMem(0x99c1, { 0xde, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7eb);
        EXPECT(gbc.pc(), 0x99c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c1), 0xde);
        EXPECT(gbc.readMem(0x99c2), 0x85);
        // DE 03C2
        gbc.setState(0x9d0a, 0xffac, 0x2c90, 0x8994, 0x1d99, 0x2d47, 0x0, 0x0);
        gbc.writeMem(0x9d0a, { 0xde, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xffac);
        EXPECT(gbc.pc(), 0x9d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d0a), 0xde);
        EXPECT(gbc.readMem(0x9d0b), 0xaa);
        // DE 03C3
        gbc.setState(0xd44e, 0xb630, 0xa250, 0x6b73, 0xe35b, 0xf58b, 0x1, 0x0);
        gbc.writeMem(0xd44e, { 0xde, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb630);
        EXPECT(gbc.pc(), 0xd450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd44e), 0xde);
        EXPECT(gbc.readMem(0xd44f), 0xc8);
        // DE 03C5
        gbc.setState(0x14fe, 0x7a01, 0xd310, 0x1045, 0x408, 0x380a, 0x1, 0x1);
        gbc.writeMem(0x14fe, { 0xde, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7a01);
        EXPECT(gbc.pc(), 0x1500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DE 03C6
        gbc.setState(0xa92a, 0xb164, 0x3820, 0x76f8, 0x59d6, 0x45d3, 0x0, 0x0);
        gbc.writeMem(0xa92a, { 0xde, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb164);
        EXPECT(gbc.pc(), 0xa92c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa92a), 0xde);
        EXPECT(gbc.readMem(0xa92b), 0xe3);
        // DE 03C7
        gbc.setState(0x577c, 0x7895, 0xb6a0, 0x15d1, 0x9922, 0xe200, 0x0, 0x1);
        gbc.writeMem(0x577c, { 0xde, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7895);
        EXPECT(gbc.pc(), 0x577e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 03C8
        gbc.setState(0x6697, 0xfa57, 0x2910, 0xe33c, 0x6feb, 0xe88e, 0x0, 0x1);
        gbc.writeMem(0x6697, { 0xde, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfa57);
        EXPECT(gbc.pc(), 0x6699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 03C9
        gbc.setState(0x510, 0x8b34, 0xf8e0, 0xb4fe, 0x5914, 0xa444, 0x0, 0x1);
        gbc.writeMem(0x510, { 0xde, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8b34);
        EXPECT(gbc.pc(), 0x512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 03CA
        gbc.setState(0xb82d, 0xec40, 0xd6a0, 0x3bce, 0x3769, 0x557f, 0x1, 0x1);
        gbc.writeMem(0xb82d, { 0xde, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xec40);
        EXPECT(gbc.pc(), 0xb82f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82d), 0xde);
        EXPECT(gbc.readMem(0xb82e), 0xc0);
        // DE 03CB
        gbc.setState(0x97ed, 0xd2bf, 0x9070, 0x7e75, 0xfd7d, 0xb2d2, 0x0, 0x0);
        gbc.writeMem(0x97ed, { 0xde, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd2bf);
        EXPECT(gbc.pc(), 0x97ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ed), 0xde);
        EXPECT(gbc.readMem(0x97ee), 0xed);
        // DE 03CC
        gbc.setState(0x4b7d, 0xdf58, 0x4930, 0x354c, 0x3d6c, 0x3c48, 0x1, 0x1);
        gbc.writeMem(0x4b7d, { 0xde, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdf58);
        EXPECT(gbc.pc(), 0x4b7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 03CD
        gbc.setState(0xe9c2, 0x32f8, 0x81e0, 0xbd79, 0xbc29, 0x3a9f, 0x0, 0x1);
        gbc.writeMem(0xe9c2, { 0xde, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x32f8);
        EXPECT(gbc.pc(), 0xe9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c2), 0xde);
        EXPECT(gbc.readMem(0xe9c3), 0xd8);
        // DE 03CE
        gbc.setState(0xa4e9, 0x10bb, 0xece0, 0xb260, 0x1916, 0xc15c, 0x0, 0x0);
        gbc.writeMem(0xa4e9, { 0xde, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x10bb);
        EXPECT(gbc.pc(), 0xa4eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e9), 0xde);
        EXPECT(gbc.readMem(0xa4ea), 0x94);
        // DE 03CF
        gbc.setState(0xd1f3, 0x9c77, 0xff00, 0x16f3, 0xbbbf, 0xfa9a, 0x0, 0x1);
        gbc.writeMem(0xd1f3, { 0xde, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9c77);
        EXPECT(gbc.pc(), 0xd1f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f3), 0xde);
        EXPECT(gbc.readMem(0xd1f4), 0xf4);
        // DE 03D0
        gbc.setState(0xe796, 0x8891, 0x38d0, 0xbb52, 0x5239, 0xad3, 0x0, 0x0);
        gbc.writeMem(0xe796, { 0xde, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8891);
        EXPECT(gbc.pc(), 0xe798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe796), 0xde);
        EXPECT(gbc.readMem(0xe797), 0xa9);
        // DE 03D1
        gbc.setState(0xe870, 0x4fc5, 0xc0a0, 0xfa2d, 0xc977, 0x9ac5, 0x1, 0x1);
        gbc.writeMem(0xe870, { 0xde, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4fc5);
        EXPECT(gbc.pc(), 0xe872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe870), 0xde);
        EXPECT(gbc.readMem(0xe871), 0x7e);
        // DE 03D2
        gbc.setState(0x47f4, 0xd974, 0x4f30, 0xfa49, 0xcdd9, 0x1c44, 0x0, 0x0);
        gbc.writeMem(0x47f4, { 0xde, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd974);
        EXPECT(gbc.pc(), 0x47f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 03D3
        gbc.setState(0x59a, 0xeb9, 0x25c0, 0x2ac1, 0x2461, 0x84d3, 0x1, 0x1);
        gbc.writeMem(0x59a, { 0xde, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xeb9);
        EXPECT(gbc.pc(), 0x59c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 03D4
        gbc.setState(0xdbf7, 0xbe6a, 0x9000, 0xb551, 0x1d58, 0x4dbc, 0x1, 0x0);
        gbc.writeMem(0xdbf7, { 0xde, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbe6a);
        EXPECT(gbc.pc(), 0xdbf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf7), 0xde);
        EXPECT(gbc.readMem(0xdbf8), 0x9c);
        // DE 03D5
        gbc.setState(0x82dc, 0xdd97, 0x77d0, 0x145a, 0xfb6a, 0x53cc, 0x1, 0x0);
        gbc.writeMem(0x82dc, { 0xde, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xdd97);
        EXPECT(gbc.pc(), 0x82de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82dc), 0xde);
        EXPECT(gbc.readMem(0x82dd), 0xe9);
        // DE 03D6
        gbc.setState(0xb7e9, 0xb012, 0x4e40, 0x77f6, 0xec84, 0x24ba, 0x0, 0x0);
        gbc.writeMem(0xb7e9, { 0xde, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb012);
        EXPECT(gbc.pc(), 0xb7eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e9), 0xde);
        EXPECT(gbc.readMem(0xb7ea), 0x8f);
        // DE 03D8
        gbc.setState(0x6301, 0xad36, 0x6790, 0x6711, 0x9d5e, 0x116a, 0x0, 0x1);
        gbc.writeMem(0x6301, { 0xde, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xad36);
        EXPECT(gbc.pc(), 0x6303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // DE 03D9
        gbc.setState(0x4e0d, 0x4a, 0x2ea0, 0xcada, 0x8cf, 0x6aac, 0x1, 0x1);
        gbc.writeMem(0x4e0d, { 0xde, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4a);
        EXPECT(gbc.pc(), 0x4e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 03DA
        gbc.setState(0xa9ad, 0x2327, 0xd20, 0xa7aa, 0x59d6, 0x1c4c, 0x0, 0x0);
        gbc.writeMem(0xa9ad, { 0xde, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2327);
        EXPECT(gbc.pc(), 0xa9af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ad), 0xde);
        EXPECT(gbc.readMem(0xa9ae), 0xbd);
        // DE 03DB
        gbc.setState(0x9eeb, 0x8949, 0x2200, 0x5b4f, 0x8d12, 0x1682, 0x0, 0x1);
        gbc.writeMem(0x9eeb, { 0xde, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8949);
        EXPECT(gbc.pc(), 0x9eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eeb), 0xde);
        EXPECT(gbc.readMem(0x9eec), 0x3e);
        // DE 03DC
        gbc.setState(0xabcb, 0x88c8, 0xdda0, 0x551d, 0xb62c, 0x5892, 0x0, 0x0);
        gbc.writeMem(0xabcb, { 0xde, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x88c8);
        EXPECT(gbc.pc(), 0xabcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabcb), 0xde);
        EXPECT(gbc.readMem(0xabcc), 0x12);
        // DE 03DD
        gbc.setState(0x62f6, 0x6df3, 0x1f40, 0x4cf9, 0x7baa, 0xb755, 0x0, 0x1);
        gbc.writeMem(0x62f6, { 0xde, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6df3);
        EXPECT(gbc.pc(), 0x62f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // DE 03DE
        gbc.setState(0x4682, 0xa643, 0xef50, 0xbcec, 0xfe, 0x591a, 0x0, 0x1);
        gbc.writeMem(0x4682, { 0xde, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa643);
        EXPECT(gbc.pc(), 0x4684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 03E0
        gbc.setState(0x26ca, 0xd10e, 0xb2d0, 0x9b99, 0x64d0, 0xc134, 0x0, 0x1);
        gbc.writeMem(0x26ca, { 0xde, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd10e);
        EXPECT(gbc.pc(), 0x26cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 03E1
        gbc.setState(0xbb8c, 0x38da, 0x6570, 0x7601, 0x374a, 0x3698, 0x1, 0x0);
        gbc.writeMem(0xbb8c, { 0xde, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x38da);
        EXPECT(gbc.pc(), 0xbb8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb8c), 0xde);
        EXPECT(gbc.readMem(0xbb8d), 0xb7);
        // DE 03E2
        gbc.setState(0xe4c8, 0x1c8b, 0xc380, 0x7ea7, 0xab09, 0x1a13, 0x1, 0x0);
        gbc.writeMem(0xe4c8, { 0xde, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1c8b);
        EXPECT(gbc.pc(), 0xe4ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c8), 0xde);
        EXPECT(gbc.readMem(0xe4c9), 0xc0);
        // DE 03E3
        gbc.setState(0x963f, 0x5494, 0x4f10, 0x1598, 0xd51d, 0xa2b9, 0x1, 0x0);
        gbc.writeMem(0x963f, { 0xde, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5494);
        EXPECT(gbc.pc(), 0x9641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x963f), 0xde);
        EXPECT(gbc.readMem(0x9640), 0x62);
        // DE 03E4
        gbc.setState(0x3a2, 0x993, 0xedf0, 0x8185, 0x3df2, 0x7d54, 0x1, 0x1);
        gbc.writeMem(0x3a2, { 0xde, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x993);
        EXPECT(gbc.pc(), 0x3a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DE 03E5
        gbc.setState(0xb32f, 0xa2d0, 0x6690, 0x41d5, 0x4681, 0xb5bc, 0x1, 0x1);
        gbc.writeMem(0xb32f, { 0xde, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa2d0);
        EXPECT(gbc.pc(), 0xb331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32f), 0xde);
        EXPECT(gbc.readMem(0xb330), 0xca);
        // DE 03E6
        gbc.setState(0x9a14, 0x7b52, 0xc910, 0xd4b9, 0xd77c, 0x9552, 0x1, 0x0);
        gbc.writeMem(0x9a14, { 0xde, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7b52);
        EXPECT(gbc.pc(), 0x9a16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a14), 0xde);
        EXPECT(gbc.readMem(0x9a15), 0xd0);
        // DE 03E7
        gbc.setState(0xc821, 0xc24d, 0xaef0, 0x59e3, 0x8d91, 0xfd0b, 0x0, 0x0);
        gbc.writeMem(0xc821, { 0xde, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc24d);
        EXPECT(gbc.pc(), 0xc823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc821), 0xde);
        EXPECT(gbc.readMem(0xc822), 0x34);
    }
}
#endif
