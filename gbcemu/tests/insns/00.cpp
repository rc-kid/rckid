#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_00)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_00) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 00 0000
        gbc.setState(0x4ddf, 0xe82e, 0x6ef0, 0xb990, 0xd0be, 0x8393, 0x1, 0x1);
        gbc.writeMem(0x4ddf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe82e);
        EXPECT(gbc.pc(), 0x4de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0001
        gbc.setState(0xb16b, 0xd16, 0x1a00, 0x6074, 0x4fd5, 0x6cf2, 0x0, 0x0);
        gbc.writeMem(0xb16b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd16);
        EXPECT(gbc.pc(), 0xb16c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16b), 0x0);
        // 00 0002
        gbc.setState(0x67da, 0x8aec, 0xb5a0, 0x9561, 0xcd06, 0x40a6, 0x1, 0x1);
        gbc.writeMem(0x67da, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8aec);
        EXPECT(gbc.pc(), 0x67db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0004
        gbc.setState(0x5b02, 0x5faa, 0x7890, 0x450e, 0x2ae, 0xbf28, 0x0, 0x1);
        gbc.writeMem(0x5b02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5faa);
        EXPECT(gbc.pc(), 0x5b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0005
        gbc.setState(0x81a3, 0x9186, 0x8900, 0xa620, 0x520a, 0xffdf, 0x0, 0x0);
        gbc.writeMem(0x81a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9186);
        EXPECT(gbc.pc(), 0x81a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a3), 0x0);
        // 00 0007
        gbc.setState(0xd8a4, 0x6b80, 0x7850, 0x6048, 0x36b3, 0x27fd, 0x1, 0x1);
        gbc.writeMem(0xd8a4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6b80);
        EXPECT(gbc.pc(), 0xd8a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a4), 0x0);
        // 00 0008
        gbc.setState(0x2b4a, 0x3415, 0xcdc0, 0x8cd6, 0xb1f0, 0x2b13, 0x1, 0x1);
        gbc.writeMem(0x2b4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3415);
        EXPECT(gbc.pc(), 0x2b4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0009
        gbc.setState(0x7bae, 0x9fe5, 0x8330, 0xae3e, 0x2920, 0x8b40, 0x0, 0x1);
        gbc.writeMem(0x7bae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9fe5);
        EXPECT(gbc.pc(), 0x7baf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 000A
        gbc.setState(0x5dac, 0x4207, 0xc880, 0x897f, 0x8750, 0xcbf9, 0x0, 0x0);
        gbc.writeMem(0x5dac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4207);
        EXPECT(gbc.pc(), 0x5dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 000B
        gbc.setState(0x4f20, 0xf77e, 0xbf20, 0x38ad, 0x86cb, 0x74ad, 0x0, 0x1);
        gbc.writeMem(0x4f20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf77e);
        EXPECT(gbc.pc(), 0x4f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 000E
        gbc.setState(0x1511, 0xfbdf, 0xb600, 0xef0b, 0xe981, 0xba1a, 0x0, 0x1);
        gbc.writeMem(0x1511, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfbdf);
        EXPECT(gbc.pc(), 0x1512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 000F
        gbc.setState(0xc018, 0xb930, 0xed70, 0xc09d, 0x7ce2, 0x8dcb, 0x0, 0x1);
        gbc.writeMem(0xc018, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb930);
        EXPECT(gbc.pc(), 0xc019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc018), 0x0);
        // 00 0010
        gbc.setState(0x302, 0x29fd, 0x4620, 0xda7d, 0x187b, 0x7c35, 0x0, 0x1);
        gbc.writeMem(0x302, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x29fd);
        EXPECT(gbc.pc(), 0x303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0011
        gbc.setState(0x707a, 0x8c45, 0xf400, 0xd9a2, 0xb232, 0x15cd, 0x0, 0x0);
        gbc.writeMem(0x707a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8c45);
        EXPECT(gbc.pc(), 0x707b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0012
        gbc.setState(0x9f41, 0x711b, 0xd5f0, 0xcf1a, 0x5d93, 0x66ac, 0x1, 0x0);
        gbc.writeMem(0x9f41, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x711b);
        EXPECT(gbc.pc(), 0x9f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f41), 0x0);
        // 00 0013
        gbc.setState(0x8c6d, 0x5afd, 0x6e60, 0xca5e, 0x1bfe, 0xc5f1, 0x0, 0x0);
        gbc.writeMem(0x8c6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5afd);
        EXPECT(gbc.pc(), 0x8c6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c6d), 0x0);
        // 00 0014
        gbc.setState(0x21b1, 0x453c, 0x9ce0, 0xd3ab, 0x34bf, 0x349a, 0x0, 0x1);
        gbc.writeMem(0x21b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x453c);
        EXPECT(gbc.pc(), 0x21b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0015
        gbc.setState(0x21d8, 0x2c5f, 0x8c00, 0x1fe8, 0x6855, 0x3166, 0x0, 0x1);
        gbc.writeMem(0x21d8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2c5f);
        EXPECT(gbc.pc(), 0x21d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0016
        gbc.setState(0xd8fa, 0xf4cf, 0xa6c0, 0x2d94, 0x5998, 0xe9d4, 0x1, 0x1);
        gbc.writeMem(0xd8fa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf4cf);
        EXPECT(gbc.pc(), 0xd8fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8fa), 0x0);
        // 00 0017
        gbc.setState(0x98e2, 0x311f, 0x30d0, 0x6a14, 0x88ab, 0x3c89, 0x0, 0x1);
        gbc.writeMem(0x98e2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x311f);
        EXPECT(gbc.pc(), 0x98e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e2), 0x0);
        // 00 0018
        gbc.setState(0x9386, 0xef4c, 0x1e0, 0x9a6b, 0x2822, 0x6211, 0x1, 0x0);
        gbc.writeMem(0x9386, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xef4c);
        EXPECT(gbc.pc(), 0x9387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9386), 0x0);
        // 00 0019
        gbc.setState(0x19ab, 0x17da, 0x9f50, 0x7ca6, 0xd4d0, 0xa4b6, 0x1, 0x1);
        gbc.writeMem(0x19ab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x17da);
        EXPECT(gbc.pc(), 0x19ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 001A
        gbc.setState(0x6f45, 0x7eb0, 0xfe00, 0xe12f, 0xc5ec, 0x8092, 0x1, 0x1);
        gbc.writeMem(0x6f45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7eb0);
        EXPECT(gbc.pc(), 0x6f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 001B
        gbc.setState(0xdb49, 0x213c, 0xf490, 0x4747, 0x8d62, 0x6a72, 0x1, 0x1);
        gbc.writeMem(0xdb49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x213c);
        EXPECT(gbc.pc(), 0xdb4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb49), 0x0);
        // 00 001C
        gbc.setState(0xa9bf, 0xc473, 0xe80, 0x442c, 0x43f7, 0x1602, 0x1, 0x0);
        gbc.writeMem(0xa9bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc473);
        EXPECT(gbc.pc(), 0xa9c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9bf), 0x0);
        // 00 001D
        gbc.setState(0xa1f0, 0x5cfd, 0xd7c0, 0x23cf, 0xa3e8, 0x83c, 0x0, 0x0);
        gbc.writeMem(0xa1f0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5cfd);
        EXPECT(gbc.pc(), 0xa1f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f0), 0x0);
        // 00 001E
        gbc.setState(0x1cb, 0x45e5, 0xae70, 0x3a74, 0xe60d, 0x87c4, 0x1, 0x1);
        gbc.writeMem(0x1cb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x45e5);
        EXPECT(gbc.pc(), 0x1cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 001F
        gbc.setState(0x3bd, 0x71ae, 0xee50, 0x18c8, 0x358c, 0xa23d, 0x0, 0x1);
        gbc.writeMem(0x3bd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x71ae);
        EXPECT(gbc.pc(), 0x3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0020
        gbc.setState(0x229e, 0xa81a, 0x9d70, 0x98d8, 0xfb3f, 0xf507, 0x1, 0x1);
        gbc.writeMem(0x229e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa81a);
        EXPECT(gbc.pc(), 0x229f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0021
        gbc.setState(0xeb63, 0x1926, 0x77f0, 0x92f6, 0x74aa, 0xfffd, 0x1, 0x1);
        gbc.writeMem(0xeb63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1926);
        EXPECT(gbc.pc(), 0xeb64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb63), 0x0);
        // 00 0022
        gbc.setState(0xee82, 0x7181, 0xbf70, 0xd4c, 0x2a4c, 0x9ae8, 0x0, 0x1);
        gbc.writeMem(0xee82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7181);
        EXPECT(gbc.pc(), 0xee83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee82), 0x0);
        // 00 0023
        gbc.setState(0xd6cc, 0x1842, 0x6900, 0x9b10, 0xc0be, 0x43ec, 0x1, 0x1);
        gbc.writeMem(0xd6cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1842);
        EXPECT(gbc.pc(), 0xd6cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6cc), 0x0);
        // 00 0024
        gbc.setState(0x6679, 0xaa0d, 0xd090, 0x3522, 0x8a2b, 0x584c, 0x1, 0x1);
        gbc.writeMem(0x6679, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xaa0d);
        EXPECT(gbc.pc(), 0x667a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0026
        gbc.setState(0xee9a, 0xd46e, 0x8e0, 0x15c0, 0xd741, 0x4bb6, 0x0, 0x0);
        gbc.writeMem(0xee9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd46e);
        EXPECT(gbc.pc(), 0xee9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee9a), 0x0);
        // 00 0027
        gbc.setState(0xb3c1, 0x42b7, 0x5050, 0x30de, 0xc1b7, 0xbd69, 0x1, 0x1);
        gbc.writeMem(0xb3c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x42b7);
        EXPECT(gbc.pc(), 0xb3c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c1), 0x0);
        // 00 0028
        gbc.setState(0x98d7, 0x9247, 0xa300, 0xf0a1, 0xaac, 0x5068, 0x0, 0x0);
        gbc.writeMem(0x98d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9247);
        EXPECT(gbc.pc(), 0x98d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d7), 0x0);
        // 00 002A
        gbc.setState(0x6b8b, 0xc3a5, 0xc5b0, 0xc5a0, 0x9c67, 0x1a3a, 0x1, 0x1);
        gbc.writeMem(0x6b8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc3a5);
        EXPECT(gbc.pc(), 0x6b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 002B
        gbc.setState(0xad12, 0x12dc, 0x7e90, 0x10e1, 0x3244, 0x9739, 0x1, 0x0);
        gbc.writeMem(0xad12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x12dc);
        EXPECT(gbc.pc(), 0xad13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad12), 0x0);
        // 00 002C
        gbc.setState(0xc41c, 0xa1b, 0x3e30, 0x44d, 0x40bf, 0xb163, 0x1, 0x0);
        gbc.writeMem(0xc41c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa1b);
        EXPECT(gbc.pc(), 0xc41d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc41c), 0x0);
        // 00 002D
        gbc.setState(0x2de3, 0x7cb, 0x63c0, 0xc723, 0xe812, 0x2d6, 0x0, 0x1);
        gbc.writeMem(0x2de3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7cb);
        EXPECT(gbc.pc(), 0x2de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 002E
        gbc.setState(0x5b27, 0x75db, 0x31a0, 0xf288, 0xa19e, 0x8dd3, 0x0, 0x0);
        gbc.writeMem(0x5b27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x75db);
        EXPECT(gbc.pc(), 0x5b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 002F
        gbc.setState(0xad57, 0x8c07, 0x1920, 0xb729, 0x2130, 0xd930, 0x0, 0x1);
        gbc.writeMem(0xad57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8c07);
        EXPECT(gbc.pc(), 0xad58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad57), 0x0);
        // 00 0030
        gbc.setState(0x4c72, 0xef9d, 0xfc70, 0x36f9, 0xafc3, 0xda47, 0x0, 0x0);
        gbc.writeMem(0x4c72, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xef9d);
        EXPECT(gbc.pc(), 0x4c73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0031
        gbc.setState(0xe532, 0xb782, 0x1d70, 0xbe05, 0x4b8c, 0xe1a9, 0x1, 0x1);
        gbc.writeMem(0xe532, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb782);
        EXPECT(gbc.pc(), 0xe533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe532), 0x0);
        // 00 0032
        gbc.setState(0x681c, 0x734a, 0x8c70, 0xd6c4, 0xfade, 0x358, 0x1, 0x0);
        gbc.writeMem(0x681c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x734a);
        EXPECT(gbc.pc(), 0x681d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0033
        gbc.setState(0xd090, 0x200e, 0x2200, 0xbee, 0x2f64, 0x36fd, 0x1, 0x0);
        gbc.writeMem(0xd090, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x200e);
        EXPECT(gbc.pc(), 0xd091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd090), 0x0);
        // 00 0034
        gbc.setState(0xbbf6, 0x139d, 0x43d0, 0x2623, 0xa892, 0x1897, 0x0, 0x1);
        gbc.writeMem(0xbbf6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x139d);
        EXPECT(gbc.pc(), 0xbbf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf6), 0x0);
        // 00 0035
        gbc.setState(0x8576, 0xb65b, 0x1290, 0x26be, 0x89d2, 0xb4a0, 0x1, 0x1);
        gbc.writeMem(0x8576, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb65b);
        EXPECT(gbc.pc(), 0x8577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8576), 0x0);
        // 00 0036
        gbc.setState(0x34d3, 0x4193, 0x8090, 0xf96b, 0x97a8, 0x3cda, 0x0, 0x0);
        gbc.writeMem(0x34d3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4193);
        EXPECT(gbc.pc(), 0x34d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0037
        gbc.setState(0x79d6, 0xa06d, 0x78e0, 0x9909, 0x38c8, 0x63d9, 0x0, 0x0);
        gbc.writeMem(0x79d6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa06d);
        EXPECT(gbc.pc(), 0x79d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0038
        gbc.setState(0x4f5f, 0xa455, 0xbf30, 0xaeb, 0x4110, 0x71d7, 0x0, 0x1);
        gbc.writeMem(0x4f5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa455);
        EXPECT(gbc.pc(), 0x4f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 003A
        gbc.setState(0x8ed3, 0x532e, 0xf0, 0x6efb, 0x2648, 0xdab8, 0x0, 0x0);
        gbc.writeMem(0x8ed3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x532e);
        EXPECT(gbc.pc(), 0x8ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed3), 0x0);
        // 00 003B
        gbc.setState(0xaa85, 0x1d6d, 0xb8f0, 0xcbf3, 0x2d43, 0x9c3e, 0x0, 0x0);
        gbc.writeMem(0xaa85, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1d6d);
        EXPECT(gbc.pc(), 0xaa86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa85), 0x0);
        // 00 003C
        gbc.setState(0x6bf9, 0xdf72, 0x4e90, 0xc689, 0x3aed, 0xc80f, 0x0, 0x1);
        gbc.writeMem(0x6bf9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdf72);
        EXPECT(gbc.pc(), 0x6bfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 003D
        gbc.setState(0x864, 0xae00, 0x1900, 0xb996, 0x7612, 0x4504, 0x1, 0x0);
        gbc.writeMem(0x864, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xae00);
        EXPECT(gbc.pc(), 0x865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 003E
        gbc.setState(0x68e4, 0x2aab, 0xfae0, 0x90db, 0xc486, 0xd636, 0x1, 0x1);
        gbc.writeMem(0x68e4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2aab);
        EXPECT(gbc.pc(), 0x68e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 003F
        gbc.setState(0x379f, 0xac37, 0x6350, 0x1e58, 0x5f6a, 0x31fc, 0x0, 0x0);
        gbc.writeMem(0x379f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xac37);
        EXPECT(gbc.pc(), 0x37a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0040
        gbc.setState(0x51ce, 0x1128, 0x51a0, 0x1323, 0xbe3e, 0xfcf3, 0x1, 0x0);
        gbc.writeMem(0x51ce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1128);
        EXPECT(gbc.pc(), 0x51cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0041
        gbc.setState(0x6e9d, 0x8663, 0x7d00, 0x7c02, 0xe0fd, 0xfb73, 0x0, 0x1);
        gbc.writeMem(0x6e9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8663);
        EXPECT(gbc.pc(), 0x6e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0042
        gbc.setState(0xc6eb, 0xa6a7, 0x8f50, 0x4445, 0xc89f, 0xa247, 0x0, 0x1);
        gbc.writeMem(0xc6eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa6a7);
        EXPECT(gbc.pc(), 0xc6ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6eb), 0x0);
        // 00 0044
        gbc.setState(0x21ca, 0x771b, 0xcf40, 0x8042, 0x2702, 0xb024, 0x0, 0x0);
        gbc.writeMem(0x21ca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x771b);
        EXPECT(gbc.pc(), 0x21cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0045
        gbc.setState(0xe218, 0x357f, 0xee90, 0x6029, 0x246a, 0xedee, 0x1, 0x0);
        gbc.writeMem(0xe218, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x357f);
        EXPECT(gbc.pc(), 0xe219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe218), 0x0);
        // 00 0046
        gbc.setState(0x512a, 0xfa33, 0xf870, 0x62be, 0x879, 0xb9f6, 0x1, 0x1);
        gbc.writeMem(0x512a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfa33);
        EXPECT(gbc.pc(), 0x512b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0047
        gbc.setState(0xe40c, 0xc655, 0xa750, 0x842, 0xe11a, 0xb6e1, 0x0, 0x1);
        gbc.writeMem(0xe40c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc655);
        EXPECT(gbc.pc(), 0xe40d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe40c), 0x0);
        // 00 0048
        gbc.setState(0x3cad, 0x815d, 0x4360, 0x3ced, 0x7969, 0x6000, 0x1, 0x0);
        gbc.writeMem(0x3cad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x815d);
        EXPECT(gbc.pc(), 0x3cae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 004A
        gbc.setState(0xb015, 0xb6fe, 0x8f20, 0xd0f4, 0x7910, 0x4bb5, 0x0, 0x0);
        gbc.writeMem(0xb015, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb6fe);
        EXPECT(gbc.pc(), 0xb016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb015), 0x0);
        // 00 004B
        gbc.setState(0x55c2, 0x3c8f, 0x4150, 0xee9d, 0xae05, 0x26a6, 0x0, 0x0);
        gbc.writeMem(0x55c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3c8f);
        EXPECT(gbc.pc(), 0x55c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 004C
        gbc.setState(0x7236, 0x6ce0, 0x50e0, 0xd79b, 0x2589, 0xfc19, 0x0, 0x1);
        gbc.writeMem(0x7236, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6ce0);
        EXPECT(gbc.pc(), 0x7237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 004D
        gbc.setState(0x955d, 0x465f, 0xe8f0, 0x5e0d, 0x8c66, 0x46d9, 0x0, 0x0);
        gbc.writeMem(0x955d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x465f);
        EXPECT(gbc.pc(), 0x955e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955d), 0x0);
        // 00 004E
        gbc.setState(0xd220, 0x2c5a, 0x2570, 0xc8a9, 0xb1e2, 0x820, 0x0, 0x1);
        gbc.writeMem(0xd220, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2c5a);
        EXPECT(gbc.pc(), 0xd221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd220), 0x0);
        // 00 004F
        gbc.setState(0xb532, 0x96bd, 0x53f0, 0xd838, 0xb25e, 0xd043, 0x1, 0x0);
        gbc.writeMem(0xb532, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x96bd);
        EXPECT(gbc.pc(), 0xb533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb532), 0x0);
        // 00 0050
        gbc.setState(0x2ab3, 0x7557, 0x5f50, 0x11cb, 0x7659, 0xf33e, 0x0, 0x0);
        gbc.writeMem(0x2ab3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7557);
        EXPECT(gbc.pc(), 0x2ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0051
        gbc.setState(0x374b, 0xb735, 0xfe00, 0x57b8, 0x8a60, 0xd651, 0x0, 0x1);
        gbc.writeMem(0x374b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb735);
        EXPECT(gbc.pc(), 0x374c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0052
        gbc.setState(0x519c, 0x1da6, 0x4480, 0x72dd, 0x5618, 0xdb9a, 0x1, 0x1);
        gbc.writeMem(0x519c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1da6);
        EXPECT(gbc.pc(), 0x519d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0053
        gbc.setState(0x3ac8, 0x6ada, 0xf720, 0x7296, 0x42fd, 0x3577, 0x1, 0x0);
        gbc.writeMem(0x3ac8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6ada);
        EXPECT(gbc.pc(), 0x3ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0054
        gbc.setState(0xb443, 0x9066, 0x2f40, 0xe508, 0x627, 0x4b77, 0x0, 0x0);
        gbc.writeMem(0xb443, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9066);
        EXPECT(gbc.pc(), 0xb444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb443), 0x0);
        // 00 0055
        gbc.setState(0x846f, 0xed30, 0xc240, 0xfd13, 0xb981, 0xf86f, 0x0, 0x1);
        gbc.writeMem(0x846f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xed30);
        EXPECT(gbc.pc(), 0x8470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x846f), 0x0);
        // 00 0056
        gbc.setState(0x8d4c, 0x9e97, 0xa4e0, 0x944b, 0x82dc, 0xb49a, 0x1, 0x1);
        gbc.writeMem(0x8d4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9e97);
        EXPECT(gbc.pc(), 0x8d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4c), 0x0);
        // 00 0057
        gbc.setState(0xcb09, 0x6b9f, 0x9290, 0xc541, 0xc2b2, 0xdc6e, 0x1, 0x0);
        gbc.writeMem(0xcb09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6b9f);
        EXPECT(gbc.pc(), 0xcb0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb09), 0x0);
        // 00 0058
        gbc.setState(0xcd89, 0xf8ee, 0xff20, 0x502e, 0xd072, 0x4c80, 0x0, 0x0);
        gbc.writeMem(0xcd89, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf8ee);
        EXPECT(gbc.pc(), 0xcd8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd89), 0x0);
        // 00 0059
        gbc.setState(0xdee3, 0x20c3, 0xddf0, 0x5260, 0x21c2, 0x8c, 0x1, 0x1);
        gbc.writeMem(0xdee3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x20c3);
        EXPECT(gbc.pc(), 0xdee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdee3), 0x0);
        // 00 005A
        gbc.setState(0xeaaf, 0xd8d7, 0x3600, 0x4f8d, 0x16c6, 0xeb8e, 0x0, 0x1);
        gbc.writeMem(0xeaaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd8d7);
        EXPECT(gbc.pc(), 0xeab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaaf), 0x0);
        // 00 005B
        gbc.setState(0xa937, 0x4b4f, 0x6c20, 0xc19a, 0x859b, 0x4bd0, 0x1, 0x0);
        gbc.writeMem(0xa937, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4b4f);
        EXPECT(gbc.pc(), 0xa938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa937), 0x0);
        // 00 005C
        gbc.setState(0xb276, 0x1540, 0x2530, 0x8cf8, 0x2f21, 0x1c86, 0x1, 0x1);
        gbc.writeMem(0xb276, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1540);
        EXPECT(gbc.pc(), 0xb277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb276), 0x0);
        // 00 005D
        gbc.setState(0x2884, 0xec23, 0x4a90, 0x95a0, 0x40d5, 0x4380, 0x1, 0x0);
        gbc.writeMem(0x2884, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xec23);
        EXPECT(gbc.pc(), 0x2885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 005E
        gbc.setState(0x8abb, 0x3b25, 0x7a10, 0xd3f6, 0xeae5, 0x3e10, 0x1, 0x0);
        gbc.writeMem(0x8abb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3b25);
        EXPECT(gbc.pc(), 0x8abc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8abb), 0x0);
        // 00 0060
        gbc.setState(0x353c, 0x3fc3, 0x20c0, 0x3ba2, 0x82d6, 0xf38d, 0x0, 0x1);
        gbc.writeMem(0x353c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3fc3);
        EXPECT(gbc.pc(), 0x353d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0061
        gbc.setState(0x216, 0xa216, 0x5db0, 0x4c7e, 0x30d9, 0xd13e, 0x1, 0x0);
        gbc.writeMem(0x216, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa216);
        EXPECT(gbc.pc(), 0x217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0063
        gbc.setState(0x925c, 0xe20e, 0x9b20, 0x10c1, 0x143, 0x38b4, 0x0, 0x1);
        gbc.writeMem(0x925c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe20e);
        EXPECT(gbc.pc(), 0x925d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x925c), 0x0);
        // 00 0064
        gbc.setState(0xa4f6, 0xea61, 0xd910, 0xdbd2, 0xbe45, 0xdc07, 0x1, 0x1);
        gbc.writeMem(0xa4f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xea61);
        EXPECT(gbc.pc(), 0xa4f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4f6), 0x0);
        // 00 0065
        gbc.setState(0x4d44, 0xa7c2, 0x3e70, 0xb4a4, 0xe7e7, 0xc7c3, 0x0, 0x1);
        gbc.writeMem(0x4d44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa7c2);
        EXPECT(gbc.pc(), 0x4d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0066
        gbc.setState(0x856, 0x623f, 0x5f80, 0x5f00, 0x6cc7, 0x7a77, 0x0, 0x0);
        gbc.writeMem(0x856, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x623f);
        EXPECT(gbc.pc(), 0x857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0067
        gbc.setState(0xb77, 0x92f4, 0x8610, 0x5a7b, 0xe51e, 0xa460, 0x1, 0x1);
        gbc.writeMem(0xb77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x92f4);
        EXPECT(gbc.pc(), 0xb78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0068
        gbc.setState(0x8037, 0x88ac, 0x57b0, 0x3304, 0x6130, 0x7ee9, 0x1, 0x0);
        gbc.writeMem(0x8037, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x88ac);
        EXPECT(gbc.pc(), 0x8038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8037), 0x0);
        // 00 0069
        gbc.setState(0x7307, 0xd1c3, 0x3440, 0xffad, 0xb830, 0xb4c1, 0x0, 0x1);
        gbc.writeMem(0x7307, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd1c3);
        EXPECT(gbc.pc(), 0x7308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 006A
        gbc.setState(0x3b47, 0x64c9, 0xb670, 0x19da, 0x7e0e, 0xfe71, 0x0, 0x1);
        gbc.writeMem(0x3b47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x64c9);
        EXPECT(gbc.pc(), 0x3b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 006B
        gbc.setState(0x9ac0, 0xdba8, 0x37f0, 0x480, 0x365a, 0x9b28, 0x1, 0x1);
        gbc.writeMem(0x9ac0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdba8);
        EXPECT(gbc.pc(), 0x9ac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ac0), 0x0);
        // 00 006C
        gbc.setState(0xa787, 0xa149, 0xdd90, 0x21dc, 0x3e88, 0xf229, 0x1, 0x0);
        gbc.writeMem(0xa787, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa149);
        EXPECT(gbc.pc(), 0xa788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa787), 0x0);
        // 00 006D
        gbc.setState(0x1b0a, 0xded5, 0x2f0, 0x2f29, 0x9a42, 0xc5ae, 0x0, 0x0);
        gbc.writeMem(0x1b0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xded5);
        EXPECT(gbc.pc(), 0x1b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 006E
        gbc.setState(0xc0bd, 0x7570, 0xe190, 0x4815, 0xfeea, 0xa07a, 0x1, 0x1);
        gbc.writeMem(0xc0bd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7570);
        EXPECT(gbc.pc(), 0xc0be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0bd), 0x0);
        // 00 006F
        gbc.setState(0x66d3, 0x38b6, 0xb8b0, 0xcf1d, 0xe910, 0x7fbb, 0x0, 0x1);
        gbc.writeMem(0x66d3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x38b6);
        EXPECT(gbc.pc(), 0x66d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0070
        gbc.setState(0x2b6e, 0xaa55, 0xd410, 0x36ed, 0xa0cf, 0x9b53, 0x1, 0x1);
        gbc.writeMem(0x2b6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xaa55);
        EXPECT(gbc.pc(), 0x2b6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0071
        gbc.setState(0x6fcd, 0x24a9, 0xc490, 0x296a, 0xdd38, 0x6009, 0x1, 0x0);
        gbc.writeMem(0x6fcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x24a9);
        EXPECT(gbc.pc(), 0x6fce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0072
        gbc.setState(0xe27f, 0x122b, 0xdd60, 0xddda, 0x3d48, 0x9a8f, 0x0, 0x1);
        gbc.writeMem(0xe27f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x122b);
        EXPECT(gbc.pc(), 0xe280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe27f), 0x0);
        // 00 0073
        gbc.setState(0x16ce, 0x5fd6, 0xc140, 0x1d70, 0x6db9, 0xe2a9, 0x0, 0x1);
        gbc.writeMem(0x16ce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5fd6);
        EXPECT(gbc.pc(), 0x16cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0074
        gbc.setState(0x4c22, 0xa543, 0x30e0, 0xab6, 0x72a7, 0xa537, 0x0, 0x0);
        gbc.writeMem(0x4c22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa543);
        EXPECT(gbc.pc(), 0x4c23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0075
        gbc.setState(0x550c, 0x7f6f, 0x9c50, 0xc544, 0xb2dc, 0xe98b, 0x0, 0x0);
        gbc.writeMem(0x550c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7f6f);
        EXPECT(gbc.pc(), 0x550d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0076
        gbc.setState(0xa3b9, 0x2dee, 0xaca0, 0x32e5, 0xdbad, 0xeff0, 0x0, 0x1);
        gbc.writeMem(0xa3b9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2dee);
        EXPECT(gbc.pc(), 0xa3ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3b9), 0x0);
        // 00 0077
        gbc.setState(0xe136, 0x9fb4, 0xef20, 0x2e5a, 0xd799, 0x459e, 0x1, 0x0);
        gbc.writeMem(0xe136, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9fb4);
        EXPECT(gbc.pc(), 0xe137);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe136), 0x0);
        // 00 0078
        gbc.setState(0x2ff1, 0x18df, 0xae40, 0xb973, 0x2a73, 0xb1ff, 0x1, 0x1);
        gbc.writeMem(0x2ff1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x18df);
        EXPECT(gbc.pc(), 0x2ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0079
        gbc.setState(0x1f7c, 0x33a9, 0x7780, 0x163e, 0x2e6a, 0x8512, 0x0, 0x0);
        gbc.writeMem(0x1f7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x33a9);
        EXPECT(gbc.pc(), 0x1f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 007A
        gbc.setState(0x476e, 0x2134, 0x2210, 0x401f, 0xb944, 0xe8f7, 0x1, 0x1);
        gbc.writeMem(0x476e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2134);
        EXPECT(gbc.pc(), 0x476f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 007B
        gbc.setState(0x8a5c, 0x649f, 0xf660, 0xee6b, 0x15ca, 0x78a, 0x1, 0x0);
        gbc.writeMem(0x8a5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x649f);
        EXPECT(gbc.pc(), 0x8a5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5c), 0x0);
        // 00 007C
        gbc.setState(0xb4ec, 0xdee9, 0xd830, 0x2075, 0xc480, 0x5afc, 0x1, 0x1);
        gbc.writeMem(0xb4ec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdee9);
        EXPECT(gbc.pc(), 0xb4ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ec), 0x0);
        // 00 007D
        gbc.setState(0x14d8, 0x3d79, 0x6fb0, 0x810f, 0x35ed, 0x5aea, 0x1, 0x1);
        gbc.writeMem(0x14d8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3d79);
        EXPECT(gbc.pc(), 0x14d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 007E
        gbc.setState(0x5562, 0xb22c, 0x4650, 0x27cf, 0xcc25, 0xfcdf, 0x0, 0x1);
        gbc.writeMem(0x5562, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb22c);
        EXPECT(gbc.pc(), 0x5563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 007F
        gbc.setState(0x6f76, 0x285b, 0x8b80, 0xd389, 0xef5f, 0x1338, 0x0, 0x1);
        gbc.writeMem(0x6f76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x285b);
        EXPECT(gbc.pc(), 0x6f77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0080
        gbc.setState(0x6c18, 0xefb4, 0x8400, 0x1461, 0xfde5, 0xac37, 0x1, 0x1);
        gbc.writeMem(0x6c18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xefb4);
        EXPECT(gbc.pc(), 0x6c19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0081
        gbc.setState(0x8536, 0xfbc2, 0xbcb0, 0x3965, 0x2bbc, 0xe188, 0x0, 0x0);
        gbc.writeMem(0x8536, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xfbc2);
        EXPECT(gbc.pc(), 0x8537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8536), 0x0);
        // 00 0082
        gbc.setState(0x4e0b, 0xbcd7, 0x6860, 0x5ff2, 0x4050, 0xb73b, 0x1, 0x1);
        gbc.writeMem(0x4e0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbcd7);
        EXPECT(gbc.pc(), 0x4e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0083
        gbc.setState(0x3787, 0xd2bb, 0x400, 0x3eb1, 0xfb73, 0x8c7f, 0x1, 0x1);
        gbc.writeMem(0x3787, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd2bb);
        EXPECT(gbc.pc(), 0x3788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0084
        gbc.setState(0xea79, 0xd84c, 0xa90, 0x80da, 0x30a4, 0x1988, 0x0, 0x1);
        gbc.writeMem(0xea79, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd84c);
        EXPECT(gbc.pc(), 0xea7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea79), 0x0);
        // 00 0085
        gbc.setState(0x8ce6, 0x99e1, 0xd970, 0x55ed, 0x4087, 0x6adf, 0x0, 0x1);
        gbc.writeMem(0x8ce6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x99e1);
        EXPECT(gbc.pc(), 0x8ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce6), 0x0);
        // 00 0086
        gbc.setState(0x515a, 0x2ca8, 0x8c70, 0xde77, 0x4ed, 0x95b7, 0x0, 0x1);
        gbc.writeMem(0x515a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2ca8);
        EXPECT(gbc.pc(), 0x515b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0087
        gbc.setState(0x1cf1, 0xf7cb, 0xd350, 0xa544, 0x29d0, 0x42c3, 0x1, 0x1);
        gbc.writeMem(0x1cf1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf7cb);
        EXPECT(gbc.pc(), 0x1cf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0088
        gbc.setState(0x6c10, 0xf099, 0x8a20, 0x5771, 0x18f0, 0x7d8c, 0x1, 0x0);
        gbc.writeMem(0x6c10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf099);
        EXPECT(gbc.pc(), 0x6c11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0089
        gbc.setState(0xabb9, 0x29b5, 0xde60, 0x5280, 0xb729, 0x8dfa, 0x1, 0x1);
        gbc.writeMem(0xabb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x29b5);
        EXPECT(gbc.pc(), 0xabba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb9), 0x0);
        // 00 008A
        gbc.setState(0xda4, 0x8a13, 0x8d20, 0x8546, 0xc895, 0xf9d9, 0x0, 0x1);
        gbc.writeMem(0xda4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8a13);
        EXPECT(gbc.pc(), 0xda5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 008D
        gbc.setState(0x2e52, 0xd300, 0xe000, 0xeb27, 0x3d15, 0x4d91, 0x1, 0x1);
        gbc.writeMem(0x2e52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd300);
        EXPECT(gbc.pc(), 0x2e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 008E
        gbc.setState(0x546c, 0xc39c, 0x7d20, 0xd78d, 0x40fb, 0xace, 0x0, 0x0);
        gbc.writeMem(0x546c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc39c);
        EXPECT(gbc.pc(), 0x546d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 008F
        gbc.setState(0x39d0, 0x808d, 0x8f20, 0x730e, 0x94a9, 0x3cd8, 0x0, 0x1);
        gbc.writeMem(0x39d0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x808d);
        EXPECT(gbc.pc(), 0x39d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0090
        gbc.setState(0x20b5, 0xe098, 0x7a20, 0x21bb, 0xd3ad, 0xf0e3, 0x1, 0x1);
        gbc.writeMem(0x20b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe098);
        EXPECT(gbc.pc(), 0x20b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0091
        gbc.setState(0x8f9c, 0xd251, 0x97d0, 0xd056, 0x1e10, 0x35e0, 0x0, 0x1);
        gbc.writeMem(0x8f9c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd251);
        EXPECT(gbc.pc(), 0x8f9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f9c), 0x0);
        // 00 0092
        gbc.setState(0xe63f, 0x305a, 0x9080, 0xe7d3, 0xbe9f, 0x3da7, 0x1, 0x0);
        gbc.writeMem(0xe63f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x305a);
        EXPECT(gbc.pc(), 0xe640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe63f), 0x0);
        // 00 0093
        gbc.setState(0x6454, 0xfdd1, 0x15f0, 0xdef2, 0xb242, 0x937d, 0x0, 0x0);
        gbc.writeMem(0x6454, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfdd1);
        EXPECT(gbc.pc(), 0x6455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0094
        gbc.setState(0x8018, 0x3bec, 0xd70, 0xa51c, 0x4756, 0xaf5b, 0x1, 0x0);
        gbc.writeMem(0x8018, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3bec);
        EXPECT(gbc.pc(), 0x8019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8018), 0x0);
        // 00 0095
        gbc.setState(0x7aa4, 0x216c, 0xdf20, 0x4926, 0x21c3, 0x1714, 0x1, 0x0);
        gbc.writeMem(0x7aa4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x216c);
        EXPECT(gbc.pc(), 0x7aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0096
        gbc.setState(0xd03a, 0x1b6, 0x5400, 0xd97f, 0x8000, 0x7943, 0x1, 0x1);
        gbc.writeMem(0xd03a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1b6);
        EXPECT(gbc.pc(), 0xd03b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd03a), 0x0);
        // 00 0097
        gbc.setState(0xd4f8, 0x8d79, 0x6fb0, 0xde86, 0xac45, 0x521f, 0x0, 0x0);
        gbc.writeMem(0xd4f8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8d79);
        EXPECT(gbc.pc(), 0xd4f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f8), 0x0);
        // 00 0098
        gbc.setState(0x6f9c, 0x1ad4, 0x1010, 0xd2e8, 0xf074, 0x41d, 0x1, 0x0);
        gbc.writeMem(0x6f9c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1ad4);
        EXPECT(gbc.pc(), 0x6f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0099
        gbc.setState(0x7b19, 0x26e7, 0xf410, 0x6bd1, 0x5ccc, 0xb824, 0x0, 0x1);
        gbc.writeMem(0x7b19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x26e7);
        EXPECT(gbc.pc(), 0x7b1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 009A
        gbc.setState(0x52de, 0x58f1, 0xdbe0, 0x37ad, 0x1324, 0x4a75, 0x0, 0x1);
        gbc.writeMem(0x52de, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x58f1);
        EXPECT(gbc.pc(), 0x52df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 009B
        gbc.setState(0x196, 0x2bcd, 0x6060, 0x85f0, 0xb393, 0x4b6a, 0x1, 0x0);
        gbc.writeMem(0x196, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2bcd);
        EXPECT(gbc.pc(), 0x197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 009C
        gbc.setState(0xa461, 0xb2c2, 0xb800, 0x82f6, 0x4491, 0x8b41, 0x0, 0x1);
        gbc.writeMem(0xa461, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb2c2);
        EXPECT(gbc.pc(), 0xa462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa461), 0x0);
        // 00 009D
        gbc.setState(0x958c, 0xcf2f, 0x80a0, 0xb0b5, 0x9acb, 0xb8b3, 0x0, 0x1);
        gbc.writeMem(0x958c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcf2f);
        EXPECT(gbc.pc(), 0x958d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x958c), 0x0);
        // 00 009E
        gbc.setState(0xa0f0, 0x5aba, 0xcf90, 0xdc5a, 0xe5ab, 0xda53, 0x1, 0x1);
        gbc.writeMem(0xa0f0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5aba);
        EXPECT(gbc.pc(), 0xa0f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f0), 0x0);
        // 00 009F
        gbc.setState(0xc142, 0xbbbb, 0xcec0, 0x4241, 0x1054, 0x631d, 0x1, 0x0);
        gbc.writeMem(0xc142, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbbbb);
        EXPECT(gbc.pc(), 0xc143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc142), 0x0);
        // 00 00A0
        gbc.setState(0x26c, 0x9fd5, 0x8400, 0x8b76, 0xc861, 0x57fc, 0x0, 0x0);
        gbc.writeMem(0x26c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9fd5);
        EXPECT(gbc.pc(), 0x26d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00A1
        gbc.setState(0x861b, 0x9cfa, 0x23d0, 0x8018, 0xa65f, 0x6a75, 0x1, 0x0);
        gbc.writeMem(0x861b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9cfa);
        EXPECT(gbc.pc(), 0x861c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x861b), 0x0);
        // 00 00A2
        gbc.setState(0x484e, 0x10e3, 0xb010, 0xa08f, 0xc5ad, 0x8a89, 0x1, 0x0);
        gbc.writeMem(0x484e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x10e3);
        EXPECT(gbc.pc(), 0x484f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00A3
        gbc.setState(0xa350, 0xea75, 0x8c10, 0x6854, 0xdc8d, 0xee7e, 0x1, 0x1);
        gbc.writeMem(0xa350, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xea75);
        EXPECT(gbc.pc(), 0xa351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa350), 0x0);
        // 00 00A4
        gbc.setState(0xa7a3, 0x43b4, 0x1160, 0x2db0, 0x3b69, 0xaafc, 0x0, 0x0);
        gbc.writeMem(0xa7a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x43b4);
        EXPECT(gbc.pc(), 0xa7a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a3), 0x0);
        // 00 00A5
        gbc.setState(0xcbd8, 0xe6a6, 0x14b0, 0x54ed, 0x2588, 0xd132, 0x1, 0x1);
        gbc.writeMem(0xcbd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe6a6);
        EXPECT(gbc.pc(), 0xcbd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd8), 0x0);
        // 00 00A6
        gbc.setState(0x8445, 0x7ba1, 0x640, 0x41d8, 0xbd9, 0x1f51, 0x0, 0x1);
        gbc.writeMem(0x8445, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7ba1);
        EXPECT(gbc.pc(), 0x8446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8445), 0x0);
        // 00 00A7
        gbc.setState(0x5c42, 0x656c, 0xf90, 0x6d56, 0x3136, 0xe166, 0x0, 0x0);
        gbc.writeMem(0x5c42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x656c);
        EXPECT(gbc.pc(), 0x5c43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00A8
        gbc.setState(0x9399, 0x89e8, 0x8480, 0xfb78, 0x597c, 0xeaaf, 0x0, 0x1);
        gbc.writeMem(0x9399, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x89e8);
        EXPECT(gbc.pc(), 0x939a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9399), 0x0);
        // 00 00A9
        gbc.setState(0xc807, 0x788, 0xda20, 0x61f5, 0x2fce, 0x57f9, 0x1, 0x1);
        gbc.writeMem(0xc807, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x788);
        EXPECT(gbc.pc(), 0xc808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc807), 0x0);
        // 00 00AB
        gbc.setState(0xc5f6, 0xe4fc, 0xa510, 0x2f64, 0x6625, 0x7431, 0x0, 0x0);
        gbc.writeMem(0xc5f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe4fc);
        EXPECT(gbc.pc(), 0xc5f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f6), 0x0);
        // 00 00AC
        gbc.setState(0xec8d, 0xf303, 0xf5c0, 0xe074, 0xc821, 0xe73, 0x0, 0x1);
        gbc.writeMem(0xec8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf303);
        EXPECT(gbc.pc(), 0xec8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec8d), 0x0);
        // 00 00AD
        gbc.setState(0x83bc, 0x7a5e, 0xfae0, 0xf1d, 0x5e05, 0xba99, 0x0, 0x0);
        gbc.writeMem(0x83bc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7a5e);
        EXPECT(gbc.pc(), 0x83bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83bc), 0x0);
        // 00 00AE
        gbc.setState(0x76e6, 0x841f, 0x12f0, 0x84e9, 0x4b29, 0xd995, 0x0, 0x1);
        gbc.writeMem(0x76e6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x841f);
        EXPECT(gbc.pc(), 0x76e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00AF
        gbc.setState(0x981a, 0xaece, 0x12d0, 0x7ed, 0x1fe5, 0x9cae, 0x0, 0x1);
        gbc.writeMem(0x981a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xaece);
        EXPECT(gbc.pc(), 0x981b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x981a), 0x0);
        // 00 00B0
        gbc.setState(0x13ab, 0x39f0, 0xf8c0, 0xdc21, 0xce78, 0xa2e6, 0x0, 0x0);
        gbc.writeMem(0x13ab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x39f0);
        EXPECT(gbc.pc(), 0x13ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00B1
        gbc.setState(0xe065, 0x61ab, 0x3900, 0x188d, 0x3e5e, 0x18fd, 0x1, 0x0);
        gbc.writeMem(0xe065, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x61ab);
        EXPECT(gbc.pc(), 0xe066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe065), 0x0);
        // 00 00B2
        gbc.setState(0xd9f, 0xaa43, 0x4560, 0x958f, 0x67cc, 0x3b0d, 0x1, 0x1);
        gbc.writeMem(0xd9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xaa43);
        EXPECT(gbc.pc(), 0xda0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 00B3
        gbc.setState(0x41b7, 0x77f2, 0xb140, 0x655e, 0x8676, 0x2d1e, 0x1, 0x1);
        gbc.writeMem(0x41b7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x77f2);
        EXPECT(gbc.pc(), 0x41b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00B4
        gbc.setState(0x2570, 0xbe47, 0xb100, 0xf5e6, 0x3bda, 0xb950, 0x1, 0x1);
        gbc.writeMem(0x2570, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbe47);
        EXPECT(gbc.pc(), 0x2571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00B5
        gbc.setState(0x4d76, 0xc552, 0x5ed0, 0xd697, 0x521f, 0x8b1f, 0x0, 0x0);
        gbc.writeMem(0x4d76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc552);
        EXPECT(gbc.pc(), 0x4d77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00B6
        gbc.setState(0xd2a4, 0x381f, 0xcee0, 0x421e, 0x55a3, 0x9477, 0x0, 0x1);
        gbc.writeMem(0xd2a4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x381f);
        EXPECT(gbc.pc(), 0xd2a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a4), 0x0);
        // 00 00B7
        gbc.setState(0x4111, 0xcd32, 0xe5a0, 0x1c83, 0x14e7, 0x95d2, 0x0, 0x0);
        gbc.writeMem(0x4111, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcd32);
        EXPECT(gbc.pc(), 0x4112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 00B8
        gbc.setState(0x9c19, 0x14ec, 0xc7f0, 0x2ec6, 0x5a48, 0x10dc, 0x0, 0x0);
        gbc.writeMem(0x9c19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x14ec);
        EXPECT(gbc.pc(), 0x9c1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c19), 0x0);
        // 00 00B9
        gbc.setState(0xed16, 0xa1ed, 0x1a60, 0xe1ad, 0x49, 0x26d, 0x1, 0x0);
        gbc.writeMem(0xed16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa1ed);
        EXPECT(gbc.pc(), 0xed17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed16), 0x0);
        // 00 00BA
        gbc.setState(0x3c0a, 0x36b7, 0x4fd0, 0x4a5d, 0x8ca0, 0x81b9, 0x1, 0x0);
        gbc.writeMem(0x3c0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x36b7);
        EXPECT(gbc.pc(), 0x3c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00BB
        gbc.setState(0x5e2a, 0x83b5, 0x9e50, 0xc1b4, 0xd2f6, 0x683c, 0x1, 0x0);
        gbc.writeMem(0x5e2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x83b5);
        EXPECT(gbc.pc(), 0x5e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00BC
        gbc.setState(0xd0c6, 0x7c46, 0xf570, 0x263f, 0xbc26, 0x79f2, 0x0, 0x1);
        gbc.writeMem(0xd0c6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7c46);
        EXPECT(gbc.pc(), 0xd0c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0c6), 0x0);
        // 00 00BD
        gbc.setState(0x59, 0xf7ec, 0x9220, 0xeb06, 0xa8f, 0x4d64, 0x0, 0x1);
        gbc.writeMem(0x59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf7ec);
        EXPECT(gbc.pc(), 0x5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 00BE
        gbc.setState(0x27e1, 0x8534, 0x1440, 0xecc0, 0x8088, 0xacb4, 0x1, 0x1);
        gbc.writeMem(0x27e1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8534);
        EXPECT(gbc.pc(), 0x27e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00BF
        gbc.setState(0xee4e, 0x266e, 0xfd70, 0xe71a, 0x41d0, 0x5615, 0x1, 0x1);
        gbc.writeMem(0xee4e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x266e);
        EXPECT(gbc.pc(), 0xee4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee4e), 0x0);
        // 00 00C0
        gbc.setState(0xbc93, 0xd12, 0x9390, 0xbab8, 0x4f6c, 0x4b96, 0x1, 0x1);
        gbc.writeMem(0xbc93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd12);
        EXPECT(gbc.pc(), 0xbc94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc93), 0x0);
        // 00 00C1
        gbc.setState(0x805d, 0x6331, 0x6ef0, 0x9f54, 0x72a6, 0x3ddf, 0x1, 0x1);
        gbc.writeMem(0x805d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6331);
        EXPECT(gbc.pc(), 0x805e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x805d), 0x0);
        // 00 00C2
        gbc.setState(0x7a48, 0xebd6, 0x67d0, 0xc8f7, 0x2399, 0x6725, 0x0, 0x1);
        gbc.writeMem(0x7a48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xebd6);
        EXPECT(gbc.pc(), 0x7a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00C3
        gbc.setState(0x1058, 0xaf8f, 0x56c0, 0x9cdd, 0xde88, 0xf32d, 0x0, 0x1);
        gbc.writeMem(0x1058, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xaf8f);
        EXPECT(gbc.pc(), 0x1059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00C4
        gbc.setState(0xc1c, 0x83eb, 0x48f0, 0x5ab1, 0xa25f, 0xa6a4, 0x0, 0x1);
        gbc.writeMem(0xc1c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x83eb);
        EXPECT(gbc.pc(), 0xc1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00C5
        gbc.setState(0x64f1, 0xce9f, 0x8140, 0x6897, 0xd20, 0x91bf, 0x0, 0x0);
        gbc.writeMem(0x64f1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xce9f);
        EXPECT(gbc.pc(), 0x64f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00C6
        gbc.setState(0x5552, 0xd6f9, 0x5110, 0xd98b, 0xc19, 0xb1de, 0x1, 0x0);
        gbc.writeMem(0x5552, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd6f9);
        EXPECT(gbc.pc(), 0x5553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00C7
        gbc.setState(0xac25, 0x9c01, 0xa880, 0x4bc4, 0x1ce5, 0xf982, 0x1, 0x1);
        gbc.writeMem(0xac25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9c01);
        EXPECT(gbc.pc(), 0xac26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac25), 0x0);
        // 00 00C8
        gbc.setState(0x5fe4, 0x995c, 0x2560, 0xbe11, 0xef3f, 0xe7ba, 0x0, 0x1);
        gbc.writeMem(0x5fe4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x995c);
        EXPECT(gbc.pc(), 0x5fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 00C9
        gbc.setState(0x38f, 0x3602, 0x9670, 0x5f9d, 0xea3e, 0x2607, 0x0, 0x0);
        gbc.writeMem(0x38f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3602);
        EXPECT(gbc.pc(), 0x390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00CB
        gbc.setState(0x9bb2, 0x6175, 0x8f10, 0xca80, 0x44c1, 0x9ad8, 0x0, 0x1);
        gbc.writeMem(0x9bb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6175);
        EXPECT(gbc.pc(), 0x9bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb2), 0x0);
        // 00 00CC
        gbc.setState(0x7592, 0xac0a, 0x3ef0, 0x6d3e, 0x9aad, 0xa1fd, 0x0, 0x1);
        gbc.writeMem(0x7592, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xac0a);
        EXPECT(gbc.pc(), 0x7593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00CD
        gbc.setState(0x6a46, 0x4e6a, 0x2500, 0xe28, 0xf047, 0x6d16, 0x1, 0x0);
        gbc.writeMem(0x6a46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4e6a);
        EXPECT(gbc.pc(), 0x6a47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00CE
        gbc.setState(0x4bc4, 0x2823, 0xc1c0, 0x8136, 0x2036, 0xf9dd, 0x1, 0x1);
        gbc.writeMem(0x4bc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2823);
        EXPECT(gbc.pc(), 0x4bc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00CF
        gbc.setState(0x1798, 0x4c22, 0x9840, 0xd141, 0xbba6, 0x4a02, 0x1, 0x1);
        gbc.writeMem(0x1798, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4c22);
        EXPECT(gbc.pc(), 0x1799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00D0
        gbc.setState(0xa6f9, 0x8677, 0x75b0, 0xe4ea, 0x2d1, 0x8d69, 0x1, 0x1);
        gbc.writeMem(0xa6f9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8677);
        EXPECT(gbc.pc(), 0xa6fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6f9), 0x0);
        // 00 00D2
        gbc.setState(0x3844, 0xfca9, 0x32e0, 0x968d, 0x4969, 0xcba7, 0x1, 0x1);
        gbc.writeMem(0x3844, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xfca9);
        EXPECT(gbc.pc(), 0x3845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 00D3
        gbc.setState(0x1c57, 0xa3c1, 0xa2f0, 0x3f51, 0x6f15, 0xad46, 0x1, 0x1);
        gbc.writeMem(0x1c57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa3c1);
        EXPECT(gbc.pc(), 0x1c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00D4
        gbc.setState(0xa832, 0xac8f, 0xaf0, 0xe4b7, 0x795b, 0x6e39, 0x1, 0x1);
        gbc.writeMem(0xa832, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xac8f);
        EXPECT(gbc.pc(), 0xa833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa832), 0x0);
        // 00 00D5
        gbc.setState(0x353, 0xbf8, 0x31f0, 0x22c, 0x5768, 0xec52, 0x0, 0x0);
        gbc.writeMem(0x353, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbf8);
        EXPECT(gbc.pc(), 0x354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00D6
        gbc.setState(0xacb8, 0x6a66, 0x1ac0, 0xb12e, 0xaf8e, 0xccfb, 0x0, 0x1);
        gbc.writeMem(0xacb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6a66);
        EXPECT(gbc.pc(), 0xacb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacb8), 0x0);
        // 00 00D7
        gbc.setState(0x2895, 0xfb3d, 0x17b0, 0xee5d, 0xf5b6, 0x52ba, 0x0, 0x0);
        gbc.writeMem(0x2895, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfb3d);
        EXPECT(gbc.pc(), 0x2896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00D8
        gbc.setState(0x8608, 0x62c3, 0x19f0, 0x31b2, 0xb9b4, 0x2dd6, 0x1, 0x1);
        gbc.writeMem(0x8608, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x62c3);
        EXPECT(gbc.pc(), 0x8609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8608), 0x0);
        // 00 00DA
        gbc.setState(0x1453, 0x8549, 0xb770, 0x6630, 0xe798, 0xbc44, 0x1, 0x1);
        gbc.writeMem(0x1453, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8549);
        EXPECT(gbc.pc(), 0x1454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00DB
        gbc.setState(0x3de5, 0xd45d, 0x19b0, 0xb35e, 0x5d3a, 0x8f96, 0x1, 0x0);
        gbc.writeMem(0x3de5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd45d);
        EXPECT(gbc.pc(), 0x3de6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00DC
        gbc.setState(0x5481, 0x7e8d, 0x120, 0x366a, 0x7943, 0x5f21, 0x1, 0x1);
        gbc.writeMem(0x5481, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7e8d);
        EXPECT(gbc.pc(), 0x5482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 00DD
        gbc.setState(0xa5ac, 0x1926, 0x460, 0xab34, 0xe4a, 0xff35, 0x1, 0x1);
        gbc.writeMem(0xa5ac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1926);
        EXPECT(gbc.pc(), 0xa5ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ac), 0x0);
        // 00 00DE
        gbc.setState(0x7d9a, 0xa6b1, 0xbdd0, 0x2fd0, 0xef85, 0x696d, 0x0, 0x1);
        gbc.writeMem(0x7d9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa6b1);
        EXPECT(gbc.pc(), 0x7d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00DF
        gbc.setState(0xd468, 0x7b92, 0x8340, 0x7424, 0x1c5c, 0x2bd8, 0x1, 0x0);
        gbc.writeMem(0xd468, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7b92);
        EXPECT(gbc.pc(), 0xd469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd468), 0x0);
        // 00 00E0
        gbc.setState(0x5642, 0x9a29, 0x58f0, 0xeee8, 0x2ce6, 0xd0bc, 0x0, 0x1);
        gbc.writeMem(0x5642, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9a29);
        EXPECT(gbc.pc(), 0x5643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00E2
        gbc.setState(0xa890, 0xb1df, 0x100, 0x8960, 0xe19d, 0x9f84, 0x0, 0x1);
        gbc.writeMem(0xa890, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb1df);
        EXPECT(gbc.pc(), 0xa891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa890), 0x0);
        // 00 00E3
        gbc.setState(0xb998, 0x82b7, 0xc5e0, 0xf7f9, 0x492b, 0x121b, 0x0, 0x0);
        gbc.writeMem(0xb998, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x82b7);
        EXPECT(gbc.pc(), 0xb999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb998), 0x0);
        // 00 00E4
        gbc.setState(0x1edf, 0xbca2, 0x3a0, 0xcca, 0xfae, 0x1828, 0x1, 0x1);
        gbc.writeMem(0x1edf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbca2);
        EXPECT(gbc.pc(), 0x1ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 00E5
        gbc.setState(0xb454, 0x44d4, 0x8ae0, 0x2072, 0x7b5d, 0xda93, 0x0, 0x0);
        gbc.writeMem(0xb454, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x44d4);
        EXPECT(gbc.pc(), 0xb455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb454), 0x0);
        // 00 00E6
        gbc.setState(0xb673, 0x1651, 0x2a20, 0xbcf0, 0x6353, 0xd15b, 0x0, 0x1);
        gbc.writeMem(0xb673, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1651);
        EXPECT(gbc.pc(), 0xb674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb673), 0x0);
        // 00 00E7
        gbc.setState(0x602c, 0x27aa, 0x6f40, 0xdab4, 0x48e8, 0x1d57, 0x0, 0x1);
        gbc.writeMem(0x602c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x27aa);
        EXPECT(gbc.pc(), 0x602d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00E8
        gbc.setState(0x692b, 0x7373, 0xee30, 0xcb0c, 0xab75, 0xe8a0, 0x0, 0x0);
        gbc.writeMem(0x692b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7373);
        EXPECT(gbc.pc(), 0x692c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00E9
        gbc.setState(0x39f4, 0xe75e, 0xf740, 0xb7e3, 0x2220, 0x473a, 0x0, 0x0);
        gbc.writeMem(0x39f4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe75e);
        EXPECT(gbc.pc(), 0x39f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 00EA
        gbc.setState(0xcba0, 0x77ee, 0xbcc0, 0xc748, 0xf83a, 0xbfee, 0x0, 0x1);
        gbc.writeMem(0xcba0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x77ee);
        EXPECT(gbc.pc(), 0xcba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcba0), 0x0);
        // 00 00EC
        gbc.setState(0xa81e, 0xe1d4, 0x5f70, 0xa4e6, 0x33be, 0xa6c8, 0x1, 0x1);
        gbc.writeMem(0xa81e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe1d4);
        EXPECT(gbc.pc(), 0xa81f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81e), 0x0);
        // 00 00ED
        gbc.setState(0x2d2b, 0x7736, 0xe390, 0x6e02, 0x2299, 0x7891, 0x0, 0x1);
        gbc.writeMem(0x2d2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7736);
        EXPECT(gbc.pc(), 0x2d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00EE
        gbc.setState(0x2f71, 0x6f44, 0x47b0, 0xfd18, 0x7010, 0xf003, 0x1, 0x1);
        gbc.writeMem(0x2f71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6f44);
        EXPECT(gbc.pc(), 0x2f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00EF
        gbc.setState(0xafbf, 0x7b3a, 0x1210, 0x3b5c, 0xed1c, 0x7d9b, 0x0, 0x1);
        gbc.writeMem(0xafbf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7b3a);
        EXPECT(gbc.pc(), 0xafc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafbf), 0x0);
        // 00 00F0
        gbc.setState(0xa256, 0xc468, 0x2db0, 0x9deb, 0x83, 0xe688, 0x1, 0x1);
        gbc.writeMem(0xa256, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc468);
        EXPECT(gbc.pc(), 0xa257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa256), 0x0);
        // 00 00F1
        gbc.setState(0x6d73, 0x9854, 0xcdd0, 0xbe1c, 0x8793, 0x7675, 0x1, 0x1);
        gbc.writeMem(0x6d73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9854);
        EXPECT(gbc.pc(), 0x6d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00F3
        gbc.setState(0x13b8, 0x42c8, 0xf390, 0xad60, 0x91ab, 0xd734, 0x0, 0x1);
        gbc.writeMem(0x13b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x42c8);
        EXPECT(gbc.pc(), 0x13b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00F4
        gbc.setState(0x97a8, 0xd7d4, 0x1db0, 0xf01f, 0x25b8, 0xc486, 0x1, 0x1);
        gbc.writeMem(0x97a8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd7d4);
        EXPECT(gbc.pc(), 0x97a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a8), 0x0);
        // 00 00F5
        gbc.setState(0x9e38, 0xb81b, 0xe470, 0x3756, 0x7553, 0xca8, 0x0, 0x0);
        gbc.writeMem(0x9e38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb81b);
        EXPECT(gbc.pc(), 0x9e39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e38), 0x0);
        // 00 00F6
        gbc.setState(0x5816, 0x2de9, 0xcea0, 0x39e9, 0x537, 0x5cd5, 0x0, 0x1);
        gbc.writeMem(0x5816, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2de9);
        EXPECT(gbc.pc(), 0x5817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 00F7
        gbc.setState(0x350c, 0x7da5, 0x9660, 0x703c, 0xf4cb, 0x255d, 0x0, 0x1);
        gbc.writeMem(0x350c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7da5);
        EXPECT(gbc.pc(), 0x350d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 00F8
        gbc.setState(0x81fc, 0x304d, 0x45e0, 0xf2d7, 0x9262, 0xb24f, 0x0, 0x0);
        gbc.writeMem(0x81fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x304d);
        EXPECT(gbc.pc(), 0x81fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81fc), 0x0);
        // 00 00F9
        gbc.setState(0x7f88, 0x695b, 0x96b0, 0xb546, 0x6bac, 0x6b10, 0x1, 0x0);
        gbc.writeMem(0x7f88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x695b);
        EXPECT(gbc.pc(), 0x7f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 00FA
        gbc.setState(0x97e6, 0xcba3, 0xaa30, 0xd0f4, 0x653b, 0x6516, 0x1, 0x0);
        gbc.writeMem(0x97e6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xcba3);
        EXPECT(gbc.pc(), 0x97e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e6), 0x0);
        // 00 00FB
        gbc.setState(0x81e1, 0x8ad9, 0x7fe0, 0xf0bc, 0xc758, 0xc120, 0x0, 0x0);
        gbc.writeMem(0x81e1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8ad9);
        EXPECT(gbc.pc(), 0x81e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e1), 0x0);
        // 00 00FC
        gbc.setState(0xf26, 0x6138, 0x6820, 0xd0ab, 0x4233, 0xabf9, 0x0, 0x0);
        gbc.writeMem(0xf26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6138);
        EXPECT(gbc.pc(), 0xf27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 00FD
        gbc.setState(0xc4ae, 0x18b6, 0x8a10, 0x4ccf, 0x8561, 0xf6e2, 0x1, 0x1);
        gbc.writeMem(0xc4ae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x18b6);
        EXPECT(gbc.pc(), 0xc4af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ae), 0x0);
        // 00 00FE
        gbc.setState(0x1dfd, 0xe40e, 0x8350, 0x3123, 0x3725, 0x7a62, 0x1, 0x0);
        gbc.writeMem(0x1dfd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe40e);
        EXPECT(gbc.pc(), 0x1dfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 00FF
        gbc.setState(0xe4d0, 0x3279, 0xf780, 0xd2c0, 0xc530, 0x7875, 0x0, 0x0);
        gbc.writeMem(0xe4d0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3279);
        EXPECT(gbc.pc(), 0xe4d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4d0), 0x0);
        // 00 0100
        gbc.setState(0x66de, 0x2f02, 0x2140, 0x5cef, 0x25c9, 0xb6b4, 0x0, 0x0);
        gbc.writeMem(0x66de, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2f02);
        EXPECT(gbc.pc(), 0x66df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0101
        gbc.setState(0xaa70, 0xc022, 0x1da0, 0xbafa, 0x4fec, 0x72e, 0x1, 0x1);
        gbc.writeMem(0xaa70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc022);
        EXPECT(gbc.pc(), 0xaa71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa70), 0x0);
        // 00 0102
        gbc.setState(0xaa74, 0xc339, 0x5800, 0x494a, 0xf3c6, 0xfbfc, 0x0, 0x1);
        gbc.writeMem(0xaa74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc339);
        EXPECT(gbc.pc(), 0xaa75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa74), 0x0);
        // 00 0103
        gbc.setState(0x722d, 0x5479, 0x80d0, 0x4dbb, 0x9938, 0x6b7c, 0x1, 0x1);
        gbc.writeMem(0x722d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5479);
        EXPECT(gbc.pc(), 0x722e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0104
        gbc.setState(0x9016, 0x83bf, 0x1b90, 0x9c04, 0x5296, 0xba8f, 0x1, 0x1);
        gbc.writeMem(0x9016, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x83bf);
        EXPECT(gbc.pc(), 0x9017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9016), 0x0);
        // 00 0105
        gbc.setState(0xef70, 0xda5e, 0xa620, 0xa37b, 0xad11, 0x220e, 0x0, 0x0);
        gbc.writeMem(0xef70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xda5e);
        EXPECT(gbc.pc(), 0xef71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef70), 0x0);
        // 00 0106
        gbc.setState(0x6e2a, 0x8da4, 0xf9f0, 0x2011, 0x8bfa, 0xd547, 0x0, 0x0);
        gbc.writeMem(0x6e2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8da4);
        EXPECT(gbc.pc(), 0x6e2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0107
        gbc.setState(0xa7c2, 0xc620, 0xd7c0, 0x423b, 0xb802, 0x3278, 0x1, 0x1);
        gbc.writeMem(0xa7c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc620);
        EXPECT(gbc.pc(), 0xa7c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c2), 0x0);
        // 00 0108
        gbc.setState(0xdf4c, 0xce5f, 0xfa50, 0x9b7b, 0xda6, 0x6868, 0x0, 0x0);
        gbc.writeMem(0xdf4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xce5f);
        EXPECT(gbc.pc(), 0xdf4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf4c), 0x0);
        // 00 0109
        gbc.setState(0x84c2, 0xa4a7, 0x5e90, 0xbb8e, 0xbdff, 0xdb14, 0x1, 0x1);
        gbc.writeMem(0x84c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa4a7);
        EXPECT(gbc.pc(), 0x84c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c2), 0x0);
        // 00 010A
        gbc.setState(0x5407, 0xd5c2, 0x95b0, 0x55, 0x3ed2, 0xa44e, 0x1, 0x1);
        gbc.writeMem(0x5407, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd5c2);
        EXPECT(gbc.pc(), 0x5408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 010B
        gbc.setState(0x96f0, 0xa03e, 0x4600, 0x2495, 0xf03, 0x949, 0x1, 0x0);
        gbc.writeMem(0x96f0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa03e);
        EXPECT(gbc.pc(), 0x96f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96f0), 0x0);
        // 00 010C
        gbc.setState(0x99ac, 0x30ae, 0x7c40, 0xe747, 0xd4a8, 0x8a9e, 0x1, 0x0);
        gbc.writeMem(0x99ac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x30ae);
        EXPECT(gbc.pc(), 0x99ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ac), 0x0);
        // 00 010D
        gbc.setState(0x2274, 0xf4bb, 0x30e0, 0x4131, 0x393d, 0x789e, 0x1, 0x1);
        gbc.writeMem(0x2274, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf4bb);
        EXPECT(gbc.pc(), 0x2275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 010F
        gbc.setState(0x28da, 0x8e88, 0xd220, 0x68ec, 0x7b00, 0x3466, 0x1, 0x1);
        gbc.writeMem(0x28da, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8e88);
        EXPECT(gbc.pc(), 0x28db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0110
        gbc.setState(0xd32a, 0xe630, 0xc7c0, 0x4989, 0x7956, 0x3cc8, 0x1, 0x0);
        gbc.writeMem(0xd32a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe630);
        EXPECT(gbc.pc(), 0xd32b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32a), 0x0);
        // 00 0111
        gbc.setState(0xa7a5, 0x65e9, 0xac30, 0xaf73, 0xc414, 0x923b, 0x0, 0x0);
        gbc.writeMem(0xa7a5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x65e9);
        EXPECT(gbc.pc(), 0xa7a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a5), 0x0);
        // 00 0112
        gbc.setState(0x1f11, 0x9017, 0xb820, 0xfd77, 0xd957, 0x6da3, 0x1, 0x0);
        gbc.writeMem(0x1f11, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9017);
        EXPECT(gbc.pc(), 0x1f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0113
        gbc.setState(0x498f, 0x4937, 0x3200, 0xa6f1, 0xc922, 0x1002, 0x1, 0x0);
        gbc.writeMem(0x498f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4937);
        EXPECT(gbc.pc(), 0x4990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0116
        gbc.setState(0x1593, 0xb92, 0x59e0, 0x283a, 0xd863, 0x1380, 0x1, 0x0);
        gbc.writeMem(0x1593, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb92);
        EXPECT(gbc.pc(), 0x1594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0117
        gbc.setState(0xdfe3, 0x3e06, 0x8090, 0xebe1, 0xe70a, 0xd363, 0x1, 0x1);
        gbc.writeMem(0xdfe3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3e06);
        EXPECT(gbc.pc(), 0xdfe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe3), 0x0);
        // 00 0118
        gbc.setState(0x37f4, 0xca6e, 0x9e90, 0x28a, 0x1be1, 0xf225, 0x0, 0x0);
        gbc.writeMem(0x37f4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xca6e);
        EXPECT(gbc.pc(), 0x37f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0119
        gbc.setState(0x6ac, 0xdbf7, 0xdf50, 0xc337, 0xf467, 0xefbc, 0x0, 0x1);
        gbc.writeMem(0x6ac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdbf7);
        EXPECT(gbc.pc(), 0x6ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 011A
        gbc.setState(0x9a86, 0xd596, 0x4510, 0x6fff, 0xdfcb, 0xca53, 0x1, 0x1);
        gbc.writeMem(0x9a86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd596);
        EXPECT(gbc.pc(), 0x9a87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a86), 0x0);
        // 00 011C
        gbc.setState(0xa768, 0xf5fa, 0x9720, 0xfdf8, 0x6d51, 0x390e, 0x0, 0x0);
        gbc.writeMem(0xa768, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf5fa);
        EXPECT(gbc.pc(), 0xa769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa768), 0x0);
        // 00 011D
        gbc.setState(0x27b4, 0xa0cf, 0xb840, 0xe24c, 0x97f0, 0x2097, 0x0, 0x0);
        gbc.writeMem(0x27b4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa0cf);
        EXPECT(gbc.pc(), 0x27b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 011F
        gbc.setState(0xdee3, 0xb875, 0x7100, 0xbe10, 0x302f, 0x30e6, 0x0, 0x1);
        gbc.writeMem(0xdee3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb875);
        EXPECT(gbc.pc(), 0xdee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee3), 0x0);
        // 00 0120
        gbc.setState(0xcd7e, 0xc047, 0x8320, 0xd732, 0x27bc, 0xa718, 0x1, 0x0);
        gbc.writeMem(0xcd7e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc047);
        EXPECT(gbc.pc(), 0xcd7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd7e), 0x0);
        // 00 0121
        gbc.setState(0x646a, 0x91a9, 0x9950, 0xee2c, 0xf651, 0x8279, 0x0, 0x0);
        gbc.writeMem(0x646a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x91a9);
        EXPECT(gbc.pc(), 0x646b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0122
        gbc.setState(0x4187, 0xceb6, 0x5eb0, 0xc3a6, 0x7fc2, 0x377c, 0x1, 0x1);
        gbc.writeMem(0x4187, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xceb6);
        EXPECT(gbc.pc(), 0x4188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0123
        gbc.setState(0x7d42, 0x5310, 0x39f0, 0xaf0b, 0xa8ba, 0x754a, 0x1, 0x0);
        gbc.writeMem(0x7d42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5310);
        EXPECT(gbc.pc(), 0x7d43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0124
        gbc.setState(0xd4d0, 0xc60, 0xa3c0, 0xb90c, 0x15b2, 0x3820, 0x0, 0x1);
        gbc.writeMem(0xd4d0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc60);
        EXPECT(gbc.pc(), 0xd4d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d0), 0x0);
        // 00 0125
        gbc.setState(0x25dd, 0xff4a, 0x850, 0xbf5e, 0x4761, 0x8b4d, 0x1, 0x1);
        gbc.writeMem(0x25dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xff4a);
        EXPECT(gbc.pc(), 0x25de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0126
        gbc.setState(0x9049, 0x2a24, 0x22c0, 0xe25a, 0xaa4e, 0x7a5e, 0x0, 0x0);
        gbc.writeMem(0x9049, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2a24);
        EXPECT(gbc.pc(), 0x904a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9049), 0x0);
        // 00 0127
        gbc.setState(0x6763, 0x479d, 0xc30, 0x9b52, 0xeb71, 0xf57d, 0x0, 0x0);
        gbc.writeMem(0x6763, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x479d);
        EXPECT(gbc.pc(), 0x6764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0128
        gbc.setState(0x2d02, 0xaee5, 0x9cb0, 0x965, 0xdd85, 0xf567, 0x1, 0x0);
        gbc.writeMem(0x2d02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xaee5);
        EXPECT(gbc.pc(), 0x2d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0129
        gbc.setState(0x2dcf, 0x34fd, 0x280, 0xcde1, 0xfbd8, 0x8910, 0x0, 0x1);
        gbc.writeMem(0x2dcf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x34fd);
        EXPECT(gbc.pc(), 0x2dd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 012A
        gbc.setState(0xdcff, 0x79bf, 0xdcb0, 0xb22, 0xfba9, 0x9815, 0x1, 0x1);
        gbc.writeMem(0xdcff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x79bf);
        EXPECT(gbc.pc(), 0xdd00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcff), 0x0);
        // 00 012B
        gbc.setState(0xa9d9, 0xe9c2, 0xa8d0, 0x91c9, 0x73ce, 0xba49, 0x1, 0x0);
        gbc.writeMem(0xa9d9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe9c2);
        EXPECT(gbc.pc(), 0xa9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d9), 0x0);
        // 00 012C
        gbc.setState(0x254d, 0xf25f, 0xf720, 0x3117, 0x8209, 0x50ce, 0x0, 0x1);
        gbc.writeMem(0x254d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf25f);
        EXPECT(gbc.pc(), 0x254e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 012D
        gbc.setState(0x2e90, 0x1504, 0xd000, 0xb728, 0x5a19, 0x9c98, 0x1, 0x0);
        gbc.writeMem(0x2e90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1504);
        EXPECT(gbc.pc(), 0x2e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 012E
        gbc.setState(0x118, 0x19de, 0x7c20, 0xc5d8, 0x7731, 0x5e65, 0x1, 0x1);
        gbc.writeMem(0x118, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x19de);
        EXPECT(gbc.pc(), 0x119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 012F
        gbc.setState(0x45fe, 0x2eb9, 0x8ed0, 0xe0b7, 0xdee1, 0x7dbb, 0x0, 0x1);
        gbc.writeMem(0x45fe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2eb9);
        EXPECT(gbc.pc(), 0x45ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0130
        gbc.setState(0x890, 0xcd69, 0x9db0, 0x9c68, 0x87f5, 0x9ce9, 0x0, 0x1);
        gbc.writeMem(0x890, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcd69);
        EXPECT(gbc.pc(), 0x891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0131
        gbc.setState(0xa16a, 0x4bd6, 0x7660, 0x5e81, 0xefe2, 0x70b6, 0x1, 0x0);
        gbc.writeMem(0xa16a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4bd6);
        EXPECT(gbc.pc(), 0xa16b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa16a), 0x0);
        // 00 0132
        gbc.setState(0x898f, 0xa9e8, 0x8d90, 0x4cff, 0xe837, 0x4b16, 0x1, 0x1);
        gbc.writeMem(0x898f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa9e8);
        EXPECT(gbc.pc(), 0x8990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x898f), 0x0);
        // 00 0133
        gbc.setState(0x8a9b, 0xdc11, 0x26c0, 0x7480, 0xd451, 0xc249, 0x1, 0x0);
        gbc.writeMem(0x8a9b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdc11);
        EXPECT(gbc.pc(), 0x8a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a9b), 0x0);
        // 00 0134
        gbc.setState(0xda0b, 0xa0eb, 0x2d30, 0x56f3, 0xdf36, 0xa74f, 0x0, 0x1);
        gbc.writeMem(0xda0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa0eb);
        EXPECT(gbc.pc(), 0xda0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0b), 0x0);
        // 00 0135
        gbc.setState(0x2b06, 0xf59e, 0x48d0, 0x270a, 0xbe6, 0xec09, 0x1, 0x0);
        gbc.writeMem(0x2b06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf59e);
        EXPECT(gbc.pc(), 0x2b07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0136
        gbc.setState(0xa9a3, 0xe61f, 0xf130, 0x6b54, 0xc8fc, 0x5ad3, 0x0, 0x0);
        gbc.writeMem(0xa9a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe61f);
        EXPECT(gbc.pc(), 0xa9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9a3), 0x0);
        // 00 0137
        gbc.setState(0xc030, 0xc952, 0x3fd0, 0xe4b8, 0xc61b, 0xbc2a, 0x1, 0x1);
        gbc.writeMem(0xc030, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc952);
        EXPECT(gbc.pc(), 0xc031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc030), 0x0);
        // 00 0138
        gbc.setState(0x58f, 0x3723, 0xa7a0, 0xf2e7, 0x644a, 0xb8e1, 0x0, 0x0);
        gbc.writeMem(0x58f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3723);
        EXPECT(gbc.pc(), 0x590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0139
        gbc.setState(0x46d7, 0xf361, 0x13e0, 0xe4e5, 0x3ad8, 0xab46, 0x1, 0x0);
        gbc.writeMem(0x46d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf361);
        EXPECT(gbc.pc(), 0x46d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 013A
        gbc.setState(0xbefd, 0x8c8e, 0x2c50, 0xb740, 0x4472, 0xc29, 0x1, 0x0);
        gbc.writeMem(0xbefd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8c8e);
        EXPECT(gbc.pc(), 0xbefe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbefd), 0x0);
        // 00 013B
        gbc.setState(0x3ac7, 0x96a1, 0x24e0, 0x103e, 0x527c, 0x9661, 0x1, 0x1);
        gbc.writeMem(0x3ac7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x96a1);
        EXPECT(gbc.pc(), 0x3ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 013C
        gbc.setState(0x2881, 0x5ce1, 0x62b0, 0xbb40, 0x2b31, 0xc7c1, 0x0, 0x1);
        gbc.writeMem(0x2881, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5ce1);
        EXPECT(gbc.pc(), 0x2882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 013D
        gbc.setState(0x2553, 0xd44a, 0xf820, 0xcfe2, 0xd447, 0x5555, 0x0, 0x0);
        gbc.writeMem(0x2553, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd44a);
        EXPECT(gbc.pc(), 0x2554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 013E
        gbc.setState(0x5580, 0xdce4, 0xc320, 0x4a6, 0x6265, 0xc4ca, 0x0, 0x1);
        gbc.writeMem(0x5580, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdce4);
        EXPECT(gbc.pc(), 0x5581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 013F
        gbc.setState(0xec7b, 0x3593, 0x8d30, 0xb833, 0x8590, 0x344b, 0x0, 0x0);
        gbc.writeMem(0xec7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3593);
        EXPECT(gbc.pc(), 0xec7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec7b), 0x0);
        // 00 0140
        gbc.setState(0xd66d, 0x4141, 0x8ff0, 0x8424, 0x5b2, 0x2b33, 0x0, 0x0);
        gbc.writeMem(0xd66d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4141);
        EXPECT(gbc.pc(), 0xd66e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd66d), 0x0);
        // 00 0141
        gbc.setState(0xe85, 0x6b4, 0xafa0, 0x6098, 0x1016, 0x20f1, 0x0, 0x0);
        gbc.writeMem(0xe85, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6b4);
        EXPECT(gbc.pc(), 0xe86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0142
        gbc.setState(0xe9cf, 0x804d, 0xee10, 0x4df1, 0xdfad, 0x646b, 0x0, 0x0);
        gbc.writeMem(0xe9cf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x804d);
        EXPECT(gbc.pc(), 0xe9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9cf), 0x0);
        // 00 0144
        gbc.setState(0x7f34, 0x6c83, 0xe930, 0x9d7d, 0x7f67, 0x9428, 0x1, 0x1);
        gbc.writeMem(0x7f34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6c83);
        EXPECT(gbc.pc(), 0x7f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0145
        gbc.setState(0x7dc4, 0x53ec, 0x8bf0, 0xb9df, 0x15ca, 0x9b99, 0x1, 0x1);
        gbc.writeMem(0x7dc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x53ec);
        EXPECT(gbc.pc(), 0x7dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0146
        gbc.setState(0x14c3, 0x276a, 0x1670, 0xca7e, 0xb9d1, 0xe634, 0x1, 0x1);
        gbc.writeMem(0x14c3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x276a);
        EXPECT(gbc.pc(), 0x14c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0147
        gbc.setState(0x2a92, 0xf0ec, 0x3170, 0xc395, 0xf323, 0x6138, 0x0, 0x1);
        gbc.writeMem(0x2a92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf0ec);
        EXPECT(gbc.pc(), 0x2a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0148
        gbc.setState(0x4bbc, 0x93a, 0x8c00, 0x1c22, 0x5f1e, 0x291, 0x0, 0x0);
        gbc.writeMem(0x4bbc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x93a);
        EXPECT(gbc.pc(), 0x4bbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0149
        gbc.setState(0x1f49, 0x3938, 0x990, 0x67d8, 0xbb6c, 0xbfa0, 0x1, 0x1);
        gbc.writeMem(0x1f49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3938);
        EXPECT(gbc.pc(), 0x1f4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 014A
        gbc.setState(0xdd0c, 0x739b, 0x6910, 0x553c, 0x1231, 0x61cc, 0x1, 0x1);
        gbc.writeMem(0xdd0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x739b);
        EXPECT(gbc.pc(), 0xdd0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd0c), 0x0);
        // 00 014B
        gbc.setState(0x419, 0x4325, 0x6b00, 0x501e, 0x5b8d, 0x7a1f, 0x1, 0x1);
        gbc.writeMem(0x419, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4325);
        EXPECT(gbc.pc(), 0x41a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 014C
        gbc.setState(0xc265, 0x87f6, 0x9580, 0xf39a, 0x7e53, 0x72ac, 0x0, 0x1);
        gbc.writeMem(0xc265, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x87f6);
        EXPECT(gbc.pc(), 0xc266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc265), 0x0);
        // 00 014D
        gbc.setState(0xd485, 0x2243, 0x2960, 0x6abd, 0x5ce8, 0xed5, 0x0, 0x0);
        gbc.writeMem(0xd485, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2243);
        EXPECT(gbc.pc(), 0xd486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd485), 0x0);
        // 00 014E
        gbc.setState(0x12e9, 0x6850, 0x2970, 0x2b78, 0xda84, 0xe005, 0x1, 0x1);
        gbc.writeMem(0x12e9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6850);
        EXPECT(gbc.pc(), 0x12ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 014F
        gbc.setState(0xd119, 0x3206, 0xc840, 0xc82, 0xb89b, 0xa662, 0x1, 0x1);
        gbc.writeMem(0xd119, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3206);
        EXPECT(gbc.pc(), 0xd11a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd119), 0x0);
        // 00 0150
        gbc.setState(0x1538, 0x1966, 0x80, 0xd092, 0xba93, 0xcf66, 0x1, 0x0);
        gbc.writeMem(0x1538, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1966);
        EXPECT(gbc.pc(), 0x1539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0151
        gbc.setState(0x246a, 0x9385, 0xc180, 0xd2ae, 0xc4a, 0x4372, 0x1, 0x1);
        gbc.writeMem(0x246a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9385);
        EXPECT(gbc.pc(), 0x246b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0152
        gbc.setState(0x7668, 0x4587, 0x5290, 0x6696, 0xacd7, 0xc223, 0x1, 0x1);
        gbc.writeMem(0x7668, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4587);
        EXPECT(gbc.pc(), 0x7669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0153
        gbc.setState(0x42e3, 0x1165, 0x89a0, 0x146b, 0xd86b, 0x4cd8, 0x0, 0x1);
        gbc.writeMem(0x42e3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1165);
        EXPECT(gbc.pc(), 0x42e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0154
        gbc.setState(0x1576, 0xbfbd, 0x5360, 0x1dfd, 0x77a0, 0x5b16, 0x1, 0x0);
        gbc.writeMem(0x1576, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbfbd);
        EXPECT(gbc.pc(), 0x1577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0155
        gbc.setState(0x148f, 0x8aab, 0xf320, 0xa929, 0x893e, 0xa659, 0x1, 0x1);
        gbc.writeMem(0x148f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8aab);
        EXPECT(gbc.pc(), 0x1490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0156
        gbc.setState(0x9fd3, 0xb2da, 0x8070, 0x1fb6, 0x847c, 0x8259, 0x1, 0x1);
        gbc.writeMem(0x9fd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb2da);
        EXPECT(gbc.pc(), 0x9fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fd3), 0x0);
        // 00 0157
        gbc.setState(0x259e, 0x38b2, 0xb660, 0x9754, 0x2944, 0x6ce1, 0x0, 0x1);
        gbc.writeMem(0x259e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x38b2);
        EXPECT(gbc.pc(), 0x259f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0158
        gbc.setState(0x5968, 0x2b42, 0xf330, 0xb2cd, 0x65cb, 0x8e72, 0x0, 0x0);
        gbc.writeMem(0x5968, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2b42);
        EXPECT(gbc.pc(), 0x5969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0159
        gbc.setState(0xb562, 0x58b4, 0x9b80, 0xe118, 0xaf73, 0x6079, 0x0, 0x0);
        gbc.writeMem(0xb562, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x58b4);
        EXPECT(gbc.pc(), 0xb563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb562), 0x0);
        // 00 015A
        gbc.setState(0x62a3, 0xe091, 0xb090, 0xf360, 0xd090, 0x8ac, 0x1, 0x1);
        gbc.writeMem(0x62a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe091);
        EXPECT(gbc.pc(), 0x62a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 015B
        gbc.setState(0x3d5d, 0xac13, 0xbb10, 0xbc5, 0x5515, 0xcc54, 0x1, 0x0);
        gbc.writeMem(0x3d5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xac13);
        EXPECT(gbc.pc(), 0x3d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 015C
        gbc.setState(0xd43d, 0x1f12, 0x1a50, 0x77ac, 0x20b7, 0x7664, 0x1, 0x0);
        gbc.writeMem(0xd43d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1f12);
        EXPECT(gbc.pc(), 0xd43e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43d), 0x0);
        // 00 015D
        gbc.setState(0x558c, 0x561, 0xdb30, 0x4bdf, 0xef8e, 0xd66a, 0x1, 0x1);
        gbc.writeMem(0x558c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x561);
        EXPECT(gbc.pc(), 0x558d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 015E
        gbc.setState(0x7239, 0xc1e5, 0xf800, 0x2fb9, 0xe44f, 0x728, 0x0, 0x0);
        gbc.writeMem(0x7239, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc1e5);
        EXPECT(gbc.pc(), 0x723a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0160
        gbc.setState(0x1c0d, 0xc8ca, 0x4b10, 0xe24b, 0xbd7, 0x94fc, 0x1, 0x1);
        gbc.writeMem(0x1c0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc8ca);
        EXPECT(gbc.pc(), 0x1c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0161
        gbc.setState(0xb366, 0xe96c, 0x860, 0x8268, 0x41f4, 0xe2ed, 0x0, 0x1);
        gbc.writeMem(0xb366, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe96c);
        EXPECT(gbc.pc(), 0xb367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb366), 0x0);
        // 00 0162
        gbc.setState(0x6f00, 0x4233, 0xca10, 0xb9c5, 0x2339, 0x3263, 0x1, 0x1);
        gbc.writeMem(0x6f00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4233);
        EXPECT(gbc.pc(), 0x6f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0163
        gbc.setState(0x711c, 0xec02, 0x2d10, 0x287c, 0x7ed, 0x84f2, 0x1, 0x0);
        gbc.writeMem(0x711c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xec02);
        EXPECT(gbc.pc(), 0x711d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0164
        gbc.setState(0x2a87, 0x9502, 0x4210, 0x15d7, 0x529c, 0xe1cf, 0x0, 0x0);
        gbc.writeMem(0x2a87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9502);
        EXPECT(gbc.pc(), 0x2a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0165
        gbc.setState(0x8560, 0x5d6, 0x8020, 0xb2ec, 0xd4be, 0xfcc3, 0x0, 0x0);
        gbc.writeMem(0x8560, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5d6);
        EXPECT(gbc.pc(), 0x8561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8560), 0x0);
        // 00 0166
        gbc.setState(0x87f2, 0x7f64, 0x3ed0, 0x5933, 0x8fab, 0xd194, 0x1, 0x0);
        gbc.writeMem(0x87f2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7f64);
        EXPECT(gbc.pc(), 0x87f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f2), 0x0);
        // 00 0167
        gbc.setState(0x62fc, 0x177a, 0xa420, 0xeafa, 0x8c15, 0x51c9, 0x1, 0x0);
        gbc.writeMem(0x62fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x177a);
        EXPECT(gbc.pc(), 0x62fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0168
        gbc.setState(0xc2ef, 0x271a, 0x250, 0x1bb, 0xd2a7, 0x55c3, 0x0, 0x1);
        gbc.writeMem(0xc2ef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x271a);
        EXPECT(gbc.pc(), 0xc2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ef), 0x0);
        // 00 0169
        gbc.setState(0x78e9, 0x5d75, 0x15a0, 0x1f32, 0xde00, 0x1ed9, 0x1, 0x0);
        gbc.writeMem(0x78e9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5d75);
        EXPECT(gbc.pc(), 0x78ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 016A
        gbc.setState(0x3aa5, 0x1af0, 0x4750, 0x7540, 0x77e4, 0x78c3, 0x1, 0x1);
        gbc.writeMem(0x3aa5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1af0);
        EXPECT(gbc.pc(), 0x3aa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 016B
        gbc.setState(0xafaf, 0x1263, 0xf5d0, 0x58f8, 0x7d3d, 0xece4, 0x1, 0x1);
        gbc.writeMem(0xafaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1263);
        EXPECT(gbc.pc(), 0xafb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafaf), 0x0);
        // 00 016D
        gbc.setState(0x318e, 0x1cb0, 0x7a30, 0x3508, 0x88bb, 0x9dbb, 0x0, 0x0);
        gbc.writeMem(0x318e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1cb0);
        EXPECT(gbc.pc(), 0x318f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 016E
        gbc.setState(0x51c0, 0xfc98, 0xc4b0, 0xd7eb, 0xbdbb, 0x2cfe, 0x0, 0x0);
        gbc.writeMem(0x51c0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfc98);
        EXPECT(gbc.pc(), 0x51c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 016F
        gbc.setState(0x3388, 0xd77d, 0xdd20, 0xf42f, 0x4cdd, 0x47c9, 0x1, 0x0);
        gbc.writeMem(0x3388, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd77d);
        EXPECT(gbc.pc(), 0x3389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0170
        gbc.setState(0x972d, 0xf879, 0xe30, 0x7597, 0xbf1b, 0x978b, 0x0, 0x1);
        gbc.writeMem(0x972d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf879);
        EXPECT(gbc.pc(), 0x972e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x972d), 0x0);
        // 00 0171
        gbc.setState(0x8fd0, 0x4d1e, 0x50f0, 0x981d, 0x1326, 0xa7e7, 0x1, 0x1);
        gbc.writeMem(0x8fd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4d1e);
        EXPECT(gbc.pc(), 0x8fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd0), 0x0);
        // 00 0172
        gbc.setState(0x86a7, 0x2c57, 0x1f80, 0xc445, 0xa901, 0xcdc5, 0x0, 0x0);
        gbc.writeMem(0x86a7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2c57);
        EXPECT(gbc.pc(), 0x86a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a7), 0x0);
        // 00 0173
        gbc.setState(0xca53, 0xc23b, 0x78c0, 0x3a52, 0x712a, 0x7f61, 0x1, 0x0);
        gbc.writeMem(0xca53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc23b);
        EXPECT(gbc.pc(), 0xca54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca53), 0x0);
        // 00 0174
        gbc.setState(0xaf0b, 0x9325, 0xf920, 0x621e, 0xe3b7, 0x4866, 0x1, 0x1);
        gbc.writeMem(0xaf0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9325);
        EXPECT(gbc.pc(), 0xaf0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0b), 0x0);
        // 00 0175
        gbc.setState(0xb962, 0xfa60, 0x2980, 0x6d20, 0x60c1, 0x24e5, 0x0, 0x0);
        gbc.writeMem(0xb962, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfa60);
        EXPECT(gbc.pc(), 0xb963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb962), 0x0);
        // 00 0176
        gbc.setState(0x5497, 0x558e, 0x45f0, 0x690d, 0xdb9f, 0xe12f, 0x0, 0x0);
        gbc.writeMem(0x5497, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x558e);
        EXPECT(gbc.pc(), 0x5498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0177
        gbc.setState(0x5361, 0x4582, 0xd270, 0x57f1, 0x1e31, 0xe269, 0x1, 0x0);
        gbc.writeMem(0x5361, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4582);
        EXPECT(gbc.pc(), 0x5362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0178
        gbc.setState(0xe2ad, 0x7faa, 0x5420, 0x2a13, 0x7326, 0x5e09, 0x0, 0x0);
        gbc.writeMem(0xe2ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7faa);
        EXPECT(gbc.pc(), 0xe2ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ad), 0x0);
        // 00 017A
        gbc.setState(0xcbc0, 0x2ec7, 0xfcc0, 0xf3f0, 0x2b97, 0xa1d0, 0x1, 0x1);
        gbc.writeMem(0xcbc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2ec7);
        EXPECT(gbc.pc(), 0xcbc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc0), 0x0);
        // 00 017B
        gbc.setState(0x59b6, 0xe19, 0x4200, 0x7c18, 0x115e, 0x19ac, 0x1, 0x1);
        gbc.writeMem(0x59b6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe19);
        EXPECT(gbc.pc(), 0x59b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 017C
        gbc.setState(0xb000, 0x7ccf, 0xf710, 0xebef, 0x9f9c, 0x1a0c, 0x0, 0x0);
        gbc.writeMem(0xb000, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7ccf);
        EXPECT(gbc.pc(), 0xb001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb000), 0x0);
        // 00 017D
        gbc.setState(0x5955, 0x6761, 0x8db0, 0xceaa, 0xf6b7, 0x8c31, 0x1, 0x0);
        gbc.writeMem(0x5955, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6761);
        EXPECT(gbc.pc(), 0x5956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 017E
        gbc.setState(0x6248, 0x949f, 0xdaa0, 0x29d8, 0xb717, 0xb543, 0x0, 0x0);
        gbc.writeMem(0x6248, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x949f);
        EXPECT(gbc.pc(), 0x6249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 017F
        gbc.setState(0x9e03, 0xf83a, 0xa890, 0x5e7, 0xd7c6, 0xa3d9, 0x0, 0x0);
        gbc.writeMem(0x9e03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf83a);
        EXPECT(gbc.pc(), 0x9e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e03), 0x0);
        // 00 0180
        gbc.setState(0x4221, 0x8e0f, 0x2ae0, 0xebe8, 0xb96e, 0x2d0b, 0x1, 0x1);
        gbc.writeMem(0x4221, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8e0f);
        EXPECT(gbc.pc(), 0x4222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0181
        gbc.setState(0xc8af, 0xf263, 0x8e90, 0x48e4, 0xfcf1, 0xce7d, 0x0, 0x0);
        gbc.writeMem(0xc8af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf263);
        EXPECT(gbc.pc(), 0xc8b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8af), 0x0);
        // 00 0184
        gbc.setState(0xbd4c, 0x1542, 0x8020, 0x4056, 0x1406, 0x8a6, 0x0, 0x0);
        gbc.writeMem(0xbd4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1542);
        EXPECT(gbc.pc(), 0xbd4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4c), 0x0);
        // 00 0185
        gbc.setState(0x9881, 0x751e, 0x1180, 0x2ae8, 0x16bc, 0xf324, 0x0, 0x1);
        gbc.writeMem(0x9881, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x751e);
        EXPECT(gbc.pc(), 0x9882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9881), 0x0);
        // 00 0186
        gbc.setState(0xc4cd, 0x2b89, 0xb9e0, 0x5d7d, 0xc266, 0xa4c5, 0x1, 0x1);
        gbc.writeMem(0xc4cd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2b89);
        EXPECT(gbc.pc(), 0xc4ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4cd), 0x0);
        // 00 0187
        gbc.setState(0xe7a1, 0x1541, 0x460, 0x27d3, 0xaac0, 0x55cc, 0x1, 0x1);
        gbc.writeMem(0xe7a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1541);
        EXPECT(gbc.pc(), 0xe7a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a1), 0x0);
        // 00 0188
        gbc.setState(0x57de, 0xc3fd, 0x8170, 0xebf5, 0x5f33, 0x7a6, 0x1, 0x0);
        gbc.writeMem(0x57de, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc3fd);
        EXPECT(gbc.pc(), 0x57df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0189
        gbc.setState(0x8f8f, 0x68e4, 0xd7c0, 0xdcc1, 0x7ced, 0xf28d, 0x1, 0x1);
        gbc.writeMem(0x8f8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x68e4);
        EXPECT(gbc.pc(), 0x8f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f8f), 0x0);
        // 00 018A
        gbc.setState(0x24ee, 0x89f3, 0xc8e0, 0x8b49, 0xbf3d, 0x5e7b, 0x1, 0x0);
        gbc.writeMem(0x24ee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x89f3);
        EXPECT(gbc.pc(), 0x24ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 018C
        gbc.setState(0x34c1, 0xa4d5, 0xaf30, 0x84a4, 0xea55, 0x7def, 0x0, 0x1);
        gbc.writeMem(0x34c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa4d5);
        EXPECT(gbc.pc(), 0x34c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 018D
        gbc.setState(0x76d7, 0xd9a3, 0x8af0, 0xc1a9, 0x878d, 0xd4b0, 0x1, 0x1);
        gbc.writeMem(0x76d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd9a3);
        EXPECT(gbc.pc(), 0x76d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 018F
        gbc.setState(0x6640, 0xc535, 0x2680, 0xdcd4, 0x9585, 0xa6ca, 0x0, 0x1);
        gbc.writeMem(0x6640, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc535);
        EXPECT(gbc.pc(), 0x6641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0190
        gbc.setState(0xb419, 0x8533, 0xae90, 0xb10f, 0xc8fe, 0x801f, 0x0, 0x1);
        gbc.writeMem(0xb419, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8533);
        EXPECT(gbc.pc(), 0xb41a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb419), 0x0);
        // 00 0191
        gbc.setState(0x2233, 0x24f9, 0xe3e0, 0x335a, 0x1010, 0xaf85, 0x1, 0x0);
        gbc.writeMem(0x2233, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x24f9);
        EXPECT(gbc.pc(), 0x2234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0193
        gbc.setState(0x1b1a, 0x6743, 0x2340, 0x1afd, 0x9f3, 0x50af, 0x1, 0x1);
        gbc.writeMem(0x1b1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6743);
        EXPECT(gbc.pc(), 0x1b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0194
        gbc.setState(0xb602, 0x9d6, 0x6780, 0x789b, 0xcfbf, 0xbaec, 0x1, 0x0);
        gbc.writeMem(0xb602, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9d6);
        EXPECT(gbc.pc(), 0xb603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb602), 0x0);
        // 00 0195
        gbc.setState(0x3495, 0xe7a3, 0x8ba0, 0xcd51, 0x9c01, 0x29dd, 0x0, 0x1);
        gbc.writeMem(0x3495, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe7a3);
        EXPECT(gbc.pc(), 0x3496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0196
        gbc.setState(0x9490, 0x1b7c, 0xeec0, 0x7be, 0xc617, 0x883d, 0x0, 0x0);
        gbc.writeMem(0x9490, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1b7c);
        EXPECT(gbc.pc(), 0x9491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9490), 0x0);
        // 00 0197
        gbc.setState(0x6f8e, 0xe299, 0x2750, 0x42ce, 0xe2b2, 0x7043, 0x0, 0x0);
        gbc.writeMem(0x6f8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe299);
        EXPECT(gbc.pc(), 0x6f8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0198
        gbc.setState(0x7159, 0x33b, 0xf910, 0x926b, 0x373, 0xa14e, 0x0, 0x0);
        gbc.writeMem(0x7159, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x33b);
        EXPECT(gbc.pc(), 0x715a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0199
        gbc.setState(0xeab0, 0xea03, 0x93b0, 0x3eec, 0x8fad, 0xd764, 0x1, 0x0);
        gbc.writeMem(0xeab0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xea03);
        EXPECT(gbc.pc(), 0xeab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab0), 0x0);
        // 00 019A
        gbc.setState(0x5037, 0xe977, 0xab90, 0xca2c, 0x98f5, 0x23ae, 0x1, 0x0);
        gbc.writeMem(0x5037, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe977);
        EXPECT(gbc.pc(), 0x5038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 019B
        gbc.setState(0x61af, 0xe10e, 0x4410, 0xe0a2, 0x3bec, 0x166, 0x0, 0x1);
        gbc.writeMem(0x61af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe10e);
        EXPECT(gbc.pc(), 0x61b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 019C
        gbc.setState(0xb48f, 0x6f21, 0xf0d0, 0x9710, 0x65fc, 0xc97e, 0x0, 0x0);
        gbc.writeMem(0xb48f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6f21);
        EXPECT(gbc.pc(), 0xb490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb48f), 0x0);
        // 00 019D
        gbc.setState(0x2ca, 0xc7be, 0x7a10, 0x71ab, 0xcac3, 0x412, 0x0, 0x1);
        gbc.writeMem(0x2ca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc7be);
        EXPECT(gbc.pc(), 0x2cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 019E
        gbc.setState(0xc121, 0x325d, 0xfe70, 0xf934, 0x8f9f, 0x26c2, 0x1, 0x1);
        gbc.writeMem(0xc121, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x325d);
        EXPECT(gbc.pc(), 0xc122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc121), 0x0);
        // 00 019F
        gbc.setState(0x2267, 0xf19c, 0xea80, 0x4981, 0xcbde, 0x6350, 0x0, 0x0);
        gbc.writeMem(0x2267, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf19c);
        EXPECT(gbc.pc(), 0x2268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01A0
        gbc.setState(0x4daa, 0xd804, 0x5920, 0xa954, 0x4441, 0x1fee, 0x1, 0x0);
        gbc.writeMem(0x4daa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd804);
        EXPECT(gbc.pc(), 0x4dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 01A1
        gbc.setState(0x93dc, 0x994a, 0x260, 0xcde3, 0x9144, 0x70ce, 0x0, 0x1);
        gbc.writeMem(0x93dc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x994a);
        EXPECT(gbc.pc(), 0x93dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93dc), 0x0);
        // 00 01A2
        gbc.setState(0x7181, 0xf245, 0x8b00, 0x6a92, 0xf07c, 0x1b0, 0x0, 0x1);
        gbc.writeMem(0x7181, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf245);
        EXPECT(gbc.pc(), 0x7182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01A3
        gbc.setState(0x76a, 0xb947, 0xfae0, 0xcfa3, 0x7293, 0x2cc0, 0x1, 0x0);
        gbc.writeMem(0x76a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb947);
        EXPECT(gbc.pc(), 0x76b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 01A4
        gbc.setState(0x282a, 0x6b20, 0xfd10, 0x302f, 0x2e01, 0x7773, 0x0, 0x0);
        gbc.writeMem(0x282a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6b20);
        EXPECT(gbc.pc(), 0x282b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01A5
        gbc.setState(0x7ddb, 0xec76, 0xa580, 0x42ea, 0x5901, 0xa108, 0x1, 0x1);
        gbc.writeMem(0x7ddb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xec76);
        EXPECT(gbc.pc(), 0x7ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01A6
        gbc.setState(0x7085, 0x6d37, 0x4a40, 0x4347, 0xfc61, 0xa285, 0x0, 0x1);
        gbc.writeMem(0x7085, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6d37);
        EXPECT(gbc.pc(), 0x7086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01A7
        gbc.setState(0x3c83, 0x5524, 0xaf50, 0x513b, 0xa9d9, 0xb328, 0x1, 0x1);
        gbc.writeMem(0x3c83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5524);
        EXPECT(gbc.pc(), 0x3c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01A8
        gbc.setState(0x8ca9, 0x4a95, 0x2c60, 0x5514, 0x9b56, 0x159b, 0x0, 0x1);
        gbc.writeMem(0x8ca9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4a95);
        EXPECT(gbc.pc(), 0x8caa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca9), 0x0);
        // 00 01A9
        gbc.setState(0x6e18, 0x1356, 0x1590, 0xe35c, 0x5e8c, 0xecf0, 0x1, 0x0);
        gbc.writeMem(0x6e18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1356);
        EXPECT(gbc.pc(), 0x6e19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01AA
        gbc.setState(0x1ad4, 0x3d58, 0xb7f0, 0xe84e, 0x57f8, 0x6615, 0x0, 0x0);
        gbc.writeMem(0x1ad4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3d58);
        EXPECT(gbc.pc(), 0x1ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01AB
        gbc.setState(0x1f29, 0x8d0, 0xa070, 0x65f6, 0x7a8b, 0xbbfd, 0x1, 0x0);
        gbc.writeMem(0x1f29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8d0);
        EXPECT(gbc.pc(), 0x1f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01AC
        gbc.setState(0xbbcb, 0x8191, 0xaae0, 0x3201, 0x4966, 0x3693, 0x1, 0x0);
        gbc.writeMem(0xbbcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8191);
        EXPECT(gbc.pc(), 0xbbcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbcb), 0x0);
        // 00 01AD
        gbc.setState(0x18a, 0x2d5e, 0xe8c0, 0x925a, 0x51f4, 0x93f5, 0x0, 0x0);
        gbc.writeMem(0x18a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2d5e);
        EXPECT(gbc.pc(), 0x18b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01AE
        gbc.setState(0x986f, 0x4d07, 0x3290, 0x9931, 0xf42e, 0xbbee, 0x0, 0x1);
        gbc.writeMem(0x986f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4d07);
        EXPECT(gbc.pc(), 0x9870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x986f), 0x0);
        // 00 01AF
        gbc.setState(0xcd86, 0xc40c, 0x2a30, 0xea2b, 0xd1a9, 0xaff7, 0x0, 0x0);
        gbc.writeMem(0xcd86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc40c);
        EXPECT(gbc.pc(), 0xcd87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd86), 0x0);
        // 00 01B0
        gbc.setState(0xa8ba, 0xeaa3, 0x43c0, 0x67a6, 0x424c, 0x267b, 0x1, 0x0);
        gbc.writeMem(0xa8ba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xeaa3);
        EXPECT(gbc.pc(), 0xa8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ba), 0x0);
        // 00 01B1
        gbc.setState(0xb809, 0xc824, 0xe410, 0xf901, 0x1fef, 0xbf97, 0x1, 0x0);
        gbc.writeMem(0xb809, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc824);
        EXPECT(gbc.pc(), 0xb80a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb809), 0x0);
        // 00 01B2
        gbc.setState(0x6706, 0x2fe, 0xcdf0, 0xac85, 0x9ca2, 0x6d45, 0x0, 0x1);
        gbc.writeMem(0x6706, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2fe);
        EXPECT(gbc.pc(), 0x6707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01B3
        gbc.setState(0x6ef, 0x586b, 0xcf0, 0x85b4, 0x13d7, 0x45d9, 0x0, 0x0);
        gbc.writeMem(0x6ef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x586b);
        EXPECT(gbc.pc(), 0x6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01B4
        gbc.setState(0xb47c, 0x5fc3, 0xece0, 0x5c76, 0x4908, 0x506e, 0x1, 0x0);
        gbc.writeMem(0xb47c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5fc3);
        EXPECT(gbc.pc(), 0xb47d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb47c), 0x0);
        // 00 01B5
        gbc.setState(0x660a, 0xb0b8, 0x11a0, 0x53e7, 0xe6ac, 0x6349, 0x0, 0x0);
        gbc.writeMem(0x660a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb0b8);
        EXPECT(gbc.pc(), 0x660b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 01B6
        gbc.setState(0x2e9a, 0x953a, 0x3950, 0x8c8e, 0xbcbf, 0x24d8, 0x1, 0x0);
        gbc.writeMem(0x2e9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x953a);
        EXPECT(gbc.pc(), 0x2e9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01B7
        gbc.setState(0x6619, 0xb0e7, 0x5850, 0x406c, 0x5916, 0x802d, 0x1, 0x0);
        gbc.writeMem(0x6619, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb0e7);
        EXPECT(gbc.pc(), 0x661a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01B9
        gbc.setState(0xb925, 0xe227, 0x99e0, 0xe969, 0xa8af, 0x3465, 0x0, 0x1);
        gbc.writeMem(0xb925, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe227);
        EXPECT(gbc.pc(), 0xb926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb925), 0x0);
        // 00 01BA
        gbc.setState(0xd692, 0xeb1e, 0x44b0, 0x850d, 0xe79, 0xfe36, 0x0, 0x1);
        gbc.writeMem(0xd692, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xeb1e);
        EXPECT(gbc.pc(), 0xd693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd692), 0x0);
        // 00 01BB
        gbc.setState(0x5d5, 0x7d5d, 0xbf20, 0xef5a, 0xb913, 0x1cdd, 0x1, 0x1);
        gbc.writeMem(0x5d5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7d5d);
        EXPECT(gbc.pc(), 0x5d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 01BC
        gbc.setState(0xd238, 0xb6cf, 0xaf90, 0x260c, 0xa842, 0xd0dd, 0x0, 0x0);
        gbc.writeMem(0xd238, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb6cf);
        EXPECT(gbc.pc(), 0xd239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd238), 0x0);
        // 00 01BD
        gbc.setState(0x590f, 0x2b04, 0xa1a0, 0x8fbc, 0x96d9, 0xde81, 0x0, 0x1);
        gbc.writeMem(0x590f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2b04);
        EXPECT(gbc.pc(), 0x5910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 01BE
        gbc.setState(0xcead, 0x9c03, 0xea70, 0xdd24, 0x3663, 0x8adf, 0x1, 0x1);
        gbc.writeMem(0xcead, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9c03);
        EXPECT(gbc.pc(), 0xceae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcead), 0x0);
        // 00 01BF
        gbc.setState(0x7fa2, 0x667d, 0x24c0, 0xdfb7, 0xe3a7, 0x8c36, 0x1, 0x1);
        gbc.writeMem(0x7fa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x667d);
        EXPECT(gbc.pc(), 0x7fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01C0
        gbc.setState(0xd540, 0x9345, 0xcce0, 0xe5b8, 0x7ddb, 0xfc66, 0x1, 0x0);
        gbc.writeMem(0xd540, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9345);
        EXPECT(gbc.pc(), 0xd541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd540), 0x0);
        // 00 01C1
        gbc.setState(0x6aee, 0xf052, 0xeb0, 0x4ac6, 0xceec, 0x3c23, 0x1, 0x0);
        gbc.writeMem(0x6aee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf052);
        EXPECT(gbc.pc(), 0x6aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01C2
        gbc.setState(0x2c9, 0x7624, 0x51c0, 0x780b, 0x1611, 0x8d70, 0x0, 0x0);
        gbc.writeMem(0x2c9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7624);
        EXPECT(gbc.pc(), 0x2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01C3
        gbc.setState(0xe6c1, 0x27aa, 0x1c40, 0x15f, 0x47f4, 0xa04f, 0x0, 0x1);
        gbc.writeMem(0xe6c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x27aa);
        EXPECT(gbc.pc(), 0xe6c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c1), 0x0);
        // 00 01C4
        gbc.setState(0xb784, 0xd9d4, 0x3820, 0x1efe, 0x2427, 0xcaf3, 0x1, 0x0);
        gbc.writeMem(0xb784, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd9d4);
        EXPECT(gbc.pc(), 0xb785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb784), 0x0);
        // 00 01C5
        gbc.setState(0xb8d5, 0x94f7, 0x8d0, 0xcbe6, 0x6e61, 0xd2a5, 0x0, 0x1);
        gbc.writeMem(0xb8d5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x94f7);
        EXPECT(gbc.pc(), 0xb8d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d5), 0x0);
        // 00 01C7
        gbc.setState(0x265a, 0x7a0, 0xdad0, 0xc9ad, 0xb441, 0x5dce, 0x0, 0x1);
        gbc.writeMem(0x265a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7a0);
        EXPECT(gbc.pc(), 0x265b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01CA
        gbc.setState(0x98a, 0xc60f, 0xb560, 0x4b57, 0xd72e, 0x936e, 0x1, 0x1);
        gbc.writeMem(0x98a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc60f);
        EXPECT(gbc.pc(), 0x98b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 01CB
        gbc.setState(0x2a50, 0xc23d, 0x8d0, 0x1fc, 0xf147, 0xddfe, 0x1, 0x1);
        gbc.writeMem(0x2a50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc23d);
        EXPECT(gbc.pc(), 0x2a51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01CC
        gbc.setState(0xaeff, 0xdf0c, 0x3ce0, 0x3953, 0xe2dc, 0x7248, 0x1, 0x0);
        gbc.writeMem(0xaeff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdf0c);
        EXPECT(gbc.pc(), 0xaf00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeff), 0x0);
        // 00 01CD
        gbc.setState(0x70d8, 0x98aa, 0x66c0, 0xb454, 0x6c01, 0xac9c, 0x1, 0x0);
        gbc.writeMem(0x70d8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x98aa);
        EXPECT(gbc.pc(), 0x70d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01CE
        gbc.setState(0x43b4, 0xefe3, 0x850, 0xf033, 0x28a0, 0x423c, 0x1, 0x1);
        gbc.writeMem(0x43b4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xefe3);
        EXPECT(gbc.pc(), 0x43b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01CF
        gbc.setState(0xedfd, 0x5570, 0xc650, 0x5b98, 0x18c, 0xc48c, 0x1, 0x1);
        gbc.writeMem(0xedfd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5570);
        EXPECT(gbc.pc(), 0xedfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedfd), 0x0);
        // 00 01D0
        gbc.setState(0xb9f1, 0xe121, 0xab90, 0x49a2, 0x833f, 0x1573, 0x0, 0x1);
        gbc.writeMem(0xb9f1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe121);
        EXPECT(gbc.pc(), 0xb9f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f1), 0x0);
        // 00 01D1
        gbc.setState(0x5663, 0xfe0f, 0x390, 0xbf1f, 0x9022, 0xfc7b, 0x0, 0x1);
        gbc.writeMem(0x5663, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xfe0f);
        EXPECT(gbc.pc(), 0x5664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01D2
        gbc.setState(0x707c, 0xf997, 0x26c0, 0xdbb7, 0xa805, 0x9ad1, 0x0, 0x1);
        gbc.writeMem(0x707c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf997);
        EXPECT(gbc.pc(), 0x707d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01D3
        gbc.setState(0xaa25, 0xcb30, 0xd9b0, 0x2305, 0x30ae, 0xb099, 0x0, 0x1);
        gbc.writeMem(0xaa25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcb30);
        EXPECT(gbc.pc(), 0xaa26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa25), 0x0);
        // 00 01D4
        gbc.setState(0x1408, 0xeee6, 0x54b0, 0x772c, 0xba6c, 0x1dd2, 0x1, 0x1);
        gbc.writeMem(0x1408, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xeee6);
        EXPECT(gbc.pc(), 0x1409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01D5
        gbc.setState(0x3093, 0x37ed, 0x90c0, 0x1256, 0xcca9, 0xb2ab, 0x1, 0x0);
        gbc.writeMem(0x3093, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x37ed);
        EXPECT(gbc.pc(), 0x3094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01D6
        gbc.setState(0x6e8c, 0x4916, 0xdc0, 0xbf90, 0x9868, 0xb89c, 0x0, 0x0);
        gbc.writeMem(0x6e8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4916);
        EXPECT(gbc.pc(), 0x6e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01D7
        gbc.setState(0x1ee, 0x6ebb, 0x5be0, 0xebb8, 0x12ab, 0x2663, 0x0, 0x0);
        gbc.writeMem(0x1ee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6ebb);
        EXPECT(gbc.pc(), 0x1ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 01D8
        gbc.setState(0xcf3d, 0xefe2, 0x44b0, 0x4e3, 0x4332, 0x1cad, 0x1, 0x0);
        gbc.writeMem(0xcf3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xefe2);
        EXPECT(gbc.pc(), 0xcf3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf3d), 0x0);
        // 00 01D9
        gbc.setState(0xc46f, 0x116b, 0x75c0, 0x8e11, 0xdd3d, 0xcfd1, 0x1, 0x0);
        gbc.writeMem(0xc46f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x116b);
        EXPECT(gbc.pc(), 0xc470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc46f), 0x0);
        // 00 01DA
        gbc.setState(0xe8c7, 0x582b, 0xa8f0, 0xdb25, 0x21af, 0x2d43, 0x1, 0x0);
        gbc.writeMem(0xe8c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x582b);
        EXPECT(gbc.pc(), 0xe8c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c7), 0x0);
        // 00 01DB
        gbc.setState(0x9734, 0x3d1e, 0xe860, 0x6c7b, 0x3d40, 0x4774, 0x1, 0x1);
        gbc.writeMem(0x9734, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3d1e);
        EXPECT(gbc.pc(), 0x9735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9734), 0x0);
        // 00 01DC
        gbc.setState(0x9c3f, 0x9587, 0x88b0, 0xb54c, 0x5f5, 0xfa8b, 0x0, 0x1);
        gbc.writeMem(0x9c3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9587);
        EXPECT(gbc.pc(), 0x9c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c3f), 0x0);
        // 00 01DD
        gbc.setState(0x11d, 0xf5b3, 0xe30, 0xd9e5, 0x6848, 0xd1a5, 0x0, 0x0);
        gbc.writeMem(0x11d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf5b3);
        EXPECT(gbc.pc(), 0x11e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01DE
        gbc.setState(0x3e7c, 0x47ab, 0xa990, 0x16f5, 0xa570, 0x4a47, 0x0, 0x1);
        gbc.writeMem(0x3e7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x47ab);
        EXPECT(gbc.pc(), 0x3e7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01DF
        gbc.setState(0x48d, 0x6740, 0xa50, 0xcbbf, 0x68d9, 0xa648, 0x1, 0x1);
        gbc.writeMem(0x48d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6740);
        EXPECT(gbc.pc(), 0x48e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01E0
        gbc.setState(0x529a, 0x3b1d, 0x3230, 0x3a8e, 0x7cb1, 0xff38, 0x0, 0x1);
        gbc.writeMem(0x529a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3b1d);
        EXPECT(gbc.pc(), 0x529b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01E1
        gbc.setState(0x767a, 0x159a, 0xd7a0, 0x5bc, 0xa226, 0x8923, 0x0, 0x0);
        gbc.writeMem(0x767a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x159a);
        EXPECT(gbc.pc(), 0x767b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 01E2
        gbc.setState(0xb12, 0x293b, 0x6770, 0x2e67, 0xa303, 0xdc78, 0x0, 0x0);
        gbc.writeMem(0xb12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x293b);
        EXPECT(gbc.pc(), 0xb13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01E3
        gbc.setState(0xa8ac, 0x8543, 0x4f20, 0xf748, 0xae8e, 0xf751, 0x0, 0x0);
        gbc.writeMem(0xa8ac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8543);
        EXPECT(gbc.pc(), 0xa8ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ac), 0x0);
        // 00 01E5
        gbc.setState(0xea69, 0xbe5c, 0x2760, 0x1418, 0xd09a, 0x1a14, 0x1, 0x0);
        gbc.writeMem(0xea69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xbe5c);
        EXPECT(gbc.pc(), 0xea6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea69), 0x0);
        // 00 01E6
        gbc.setState(0x874e, 0x4673, 0x42b0, 0x8fbc, 0x736b, 0x6a93, 0x1, 0x0);
        gbc.writeMem(0x874e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4673);
        EXPECT(gbc.pc(), 0x874f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874e), 0x0);
        // 00 01E7
        gbc.setState(0x8b9a, 0x4ec2, 0x90e0, 0xfaec, 0xbef2, 0x502d, 0x1, 0x1);
        gbc.writeMem(0x8b9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4ec2);
        EXPECT(gbc.pc(), 0x8b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9a), 0x0);
        // 00 01E9
        gbc.setState(0xd03f, 0xb8f3, 0x1de0, 0x2597, 0x4ec4, 0xae74, 0x0, 0x0);
        gbc.writeMem(0xd03f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb8f3);
        EXPECT(gbc.pc(), 0xd040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd03f), 0x0);
        // 00 01EA
        gbc.setState(0x1a66, 0x4520, 0xc780, 0xc74f, 0x9ead, 0xbc75, 0x1, 0x1);
        gbc.writeMem(0x1a66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4520);
        EXPECT(gbc.pc(), 0x1a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01EB
        gbc.setState(0xdd6, 0x60dd, 0xd470, 0x8751, 0xcaa8, 0xae49, 0x1, 0x0);
        gbc.writeMem(0xdd6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x60dd);
        EXPECT(gbc.pc(), 0xdd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01EC
        gbc.setState(0x192c, 0x55e6, 0xa770, 0x3a6f, 0x4653, 0x98fc, 0x1, 0x0);
        gbc.writeMem(0x192c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x55e6);
        EXPECT(gbc.pc(), 0x192d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01ED
        gbc.setState(0xe995, 0x10ee, 0x6770, 0x3266, 0x37a, 0xb2fa, 0x1, 0x0);
        gbc.writeMem(0xe995, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x10ee);
        EXPECT(gbc.pc(), 0xe996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe995), 0x0);
        // 00 01F0
        gbc.setState(0xd556, 0x7372, 0xc060, 0xda3f, 0x5220, 0xb930, 0x1, 0x0);
        gbc.writeMem(0xd556, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7372);
        EXPECT(gbc.pc(), 0xd557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd556), 0x0);
        // 00 01F1
        gbc.setState(0x3155, 0xbc7a, 0xada0, 0x279e, 0xb965, 0x2005, 0x1, 0x0);
        gbc.writeMem(0x3155, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbc7a);
        EXPECT(gbc.pc(), 0x3156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 01F2
        gbc.setState(0x2b09, 0xdc9d, 0x2e30, 0xf9fa, 0xa91, 0x4575, 0x0, 0x1);
        gbc.writeMem(0x2b09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdc9d);
        EXPECT(gbc.pc(), 0x2b0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01F3
        gbc.setState(0xa861, 0x93fe, 0xc5c0, 0x40cf, 0xe13c, 0x35b2, 0x0, 0x1);
        gbc.writeMem(0xa861, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x93fe);
        EXPECT(gbc.pc(), 0xa862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa861), 0x0);
        // 00 01F4
        gbc.setState(0x17f0, 0x401e, 0x6da0, 0xe317, 0xca27, 0xbc1d, 0x1, 0x0);
        gbc.writeMem(0x17f0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x401e);
        EXPECT(gbc.pc(), 0x17f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 01F5
        gbc.setState(0xac5b, 0xaf39, 0xfb0, 0xa1c8, 0x16b3, 0x9751, 0x0, 0x1);
        gbc.writeMem(0xac5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xaf39);
        EXPECT(gbc.pc(), 0xac5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac5b), 0x0);
        // 00 01F6
        gbc.setState(0xda41, 0xb873, 0x9880, 0xb6d9, 0x3045, 0x582f, 0x1, 0x1);
        gbc.writeMem(0xda41, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb873);
        EXPECT(gbc.pc(), 0xda42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda41), 0x0);
        // 00 01F7
        gbc.setState(0x568d, 0x8a1b, 0x1290, 0x7ace, 0x36b9, 0xa281, 0x0, 0x0);
        gbc.writeMem(0x568d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8a1b);
        EXPECT(gbc.pc(), 0x568e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 01F8
        gbc.setState(0x1a8d, 0xb415, 0x2c0, 0x3cd6, 0xe45f, 0xe105, 0x1, 0x1);
        gbc.writeMem(0x1a8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb415);
        EXPECT(gbc.pc(), 0x1a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01F9
        gbc.setState(0xdb39, 0xb7f3, 0x8750, 0x2bf8, 0x8e04, 0x2d, 0x0, 0x1);
        gbc.writeMem(0xdb39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb7f3);
        EXPECT(gbc.pc(), 0xdb3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb39), 0x0);
        // 00 01FA
        gbc.setState(0x673c, 0x774, 0xe400, 0x70a4, 0xe2f8, 0xcee5, 0x0, 0x1);
        gbc.writeMem(0x673c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x774);
        EXPECT(gbc.pc(), 0x673d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 01FB
        gbc.setState(0x6124, 0xb17, 0x63f0, 0x2581, 0xfd0c, 0x41c8, 0x0, 0x0);
        gbc.writeMem(0x6124, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb17);
        EXPECT(gbc.pc(), 0x6125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 01FC
        gbc.setState(0xe6f6, 0x5d8c, 0x720, 0x6e21, 0x2e39, 0x8a29, 0x0, 0x0);
        gbc.writeMem(0xe6f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5d8c);
        EXPECT(gbc.pc(), 0xe6f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f6), 0x0);
        // 00 01FD
        gbc.setState(0xcb91, 0x71fa, 0x61c0, 0x5980, 0x606f, 0xb4e7, 0x0, 0x1);
        gbc.writeMem(0xcb91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x71fa);
        EXPECT(gbc.pc(), 0xcb92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb91), 0x0);
        // 00 01FE
        gbc.setState(0xfd4, 0x5c8b, 0x37a0, 0x6192, 0xb552, 0xdfd, 0x0, 0x1);
        gbc.writeMem(0xfd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5c8b);
        EXPECT(gbc.pc(), 0xfd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 01FF
        gbc.setState(0x2584, 0x21a7, 0xbe0, 0x5183, 0x9384, 0xa0f4, 0x1, 0x1);
        gbc.writeMem(0x2584, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x21a7);
        EXPECT(gbc.pc(), 0x2585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0200
        gbc.setState(0x305f, 0xe476, 0xc2b0, 0x80f1, 0xf3a0, 0xf5d3, 0x0, 0x1);
        gbc.writeMem(0x305f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe476);
        EXPECT(gbc.pc(), 0x3060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0201
        gbc.setState(0xec88, 0x8631, 0x75e0, 0xe0f7, 0xab65, 0xd4c9, 0x0, 0x1);
        gbc.writeMem(0xec88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8631);
        EXPECT(gbc.pc(), 0xec89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec88), 0x0);
        // 00 0202
        gbc.setState(0x648a, 0xb9e6, 0xdef0, 0xb895, 0x829, 0xc65, 0x1, 0x0);
        gbc.writeMem(0x648a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb9e6);
        EXPECT(gbc.pc(), 0x648b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0203
        gbc.setState(0x5514, 0x5836, 0xc4c0, 0xc19c, 0x4494, 0xa954, 0x0, 0x0);
        gbc.writeMem(0x5514, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5836);
        EXPECT(gbc.pc(), 0x5515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0204
        gbc.setState(0x29d8, 0x5dbf, 0xfc70, 0x321b, 0xffb, 0x75c3, 0x0, 0x1);
        gbc.writeMem(0x29d8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5dbf);
        EXPECT(gbc.pc(), 0x29d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0205
        gbc.setState(0xb1f5, 0xa168, 0x5c00, 0xc748, 0x42ae, 0xe73e, 0x1, 0x1);
        gbc.writeMem(0xb1f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa168);
        EXPECT(gbc.pc(), 0xb1f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f5), 0x0);
        // 00 0206
        gbc.setState(0xad0f, 0x2eaa, 0x8df0, 0xf497, 0x91d5, 0x830b, 0x0, 0x0);
        gbc.writeMem(0xad0f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2eaa);
        EXPECT(gbc.pc(), 0xad10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad0f), 0x0);
        // 00 0207
        gbc.setState(0x41bc, 0x22b3, 0x9df0, 0x3d7, 0x282e, 0xbc8c, 0x0, 0x0);
        gbc.writeMem(0x41bc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x22b3);
        EXPECT(gbc.pc(), 0x41bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0208
        gbc.setState(0x9b44, 0xcf31, 0xef50, 0xc44c, 0x48fc, 0xd9c, 0x1, 0x1);
        gbc.writeMem(0x9b44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xcf31);
        EXPECT(gbc.pc(), 0x9b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b44), 0x0);
        // 00 0209
        gbc.setState(0x50cc, 0x8299, 0xb940, 0x4e60, 0x4775, 0x8ec0, 0x1, 0x1);
        gbc.writeMem(0x50cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8299);
        EXPECT(gbc.pc(), 0x50cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 020A
        gbc.setState(0xb63b, 0x3053, 0x4fa0, 0x66e9, 0x7000, 0xbecb, 0x0, 0x0);
        gbc.writeMem(0xb63b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3053);
        EXPECT(gbc.pc(), 0xb63c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb63b), 0x0);
        // 00 020B
        gbc.setState(0xed3d, 0x5f08, 0x4ac0, 0x86e9, 0x1070, 0x5f48, 0x0, 0x1);
        gbc.writeMem(0xed3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5f08);
        EXPECT(gbc.pc(), 0xed3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3d), 0x0);
        // 00 020C
        gbc.setState(0xd0df, 0x2ec9, 0xa4e0, 0x7e27, 0x5fa1, 0xa4aa, 0x1, 0x0);
        gbc.writeMem(0xd0df, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2ec9);
        EXPECT(gbc.pc(), 0xd0e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0df), 0x0);
        // 00 020D
        gbc.setState(0xbbd1, 0x6fed, 0xcc10, 0xac86, 0x2244, 0x4c9, 0x0, 0x1);
        gbc.writeMem(0xbbd1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6fed);
        EXPECT(gbc.pc(), 0xbbd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd1), 0x0);
        // 00 020F
        gbc.setState(0x4e3f, 0x9bb, 0x4590, 0x4ecb, 0x72a7, 0xbaaf, 0x0, 0x0);
        gbc.writeMem(0x4e3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9bb);
        EXPECT(gbc.pc(), 0x4e40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0210
        gbc.setState(0x9096, 0xb506, 0xd500, 0x94b, 0x1a79, 0x14de, 0x0, 0x1);
        gbc.writeMem(0x9096, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb506);
        EXPECT(gbc.pc(), 0x9097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9096), 0x0);
        // 00 0211
        gbc.setState(0xaadf, 0xe236, 0xa010, 0xaffd, 0x829a, 0xf0c, 0x0, 0x0);
        gbc.writeMem(0xaadf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe236);
        EXPECT(gbc.pc(), 0xaae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaadf), 0x0);
        // 00 0212
        gbc.setState(0x7771, 0x3b4d, 0xac50, 0x63df, 0xdfa5, 0x65b1, 0x0, 0x0);
        gbc.writeMem(0x7771, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3b4d);
        EXPECT(gbc.pc(), 0x7772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0213
        gbc.setState(0x4bc7, 0x8904, 0xbe30, 0xad21, 0xdf58, 0xdb66, 0x0, 0x1);
        gbc.writeMem(0x4bc7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8904);
        EXPECT(gbc.pc(), 0x4bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0214
        gbc.setState(0x1d6, 0x5ad6, 0x9220, 0x2bea, 0x7df4, 0x5ff9, 0x0, 0x0);
        gbc.writeMem(0x1d6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5ad6);
        EXPECT(gbc.pc(), 0x1d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0215
        gbc.setState(0x8faa, 0x80a3, 0x2b0, 0x1d28, 0x5902, 0x3f68, 0x1, 0x0);
        gbc.writeMem(0x8faa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x80a3);
        EXPECT(gbc.pc(), 0x8fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8faa), 0x0);
        // 00 0216
        gbc.setState(0xb678, 0x8d65, 0x8270, 0xf46d, 0xb27c, 0x24be, 0x1, 0x0);
        gbc.writeMem(0xb678, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8d65);
        EXPECT(gbc.pc(), 0xb679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb678), 0x0);
        // 00 0217
        gbc.setState(0xeba8, 0x4d4b, 0x6a00, 0xea0f, 0x8011, 0xcba0, 0x0, 0x1);
        gbc.writeMem(0xeba8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4d4b);
        EXPECT(gbc.pc(), 0xeba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba8), 0x0);
        // 00 0218
        gbc.setState(0x90bd, 0x2ef2, 0x820, 0x93cc, 0x676b, 0x6339, 0x1, 0x1);
        gbc.writeMem(0x90bd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2ef2);
        EXPECT(gbc.pc(), 0x90be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90bd), 0x0);
        // 00 0219
        gbc.setState(0x7763, 0x7619, 0x37b0, 0xec1d, 0x87c4, 0x88fa, 0x0, 0x0);
        gbc.writeMem(0x7763, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7619);
        EXPECT(gbc.pc(), 0x7764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 021A
        gbc.setState(0x9ddb, 0x4938, 0xae60, 0xb70c, 0x4357, 0x6b5f, 0x0, 0x0);
        gbc.writeMem(0x9ddb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4938);
        EXPECT(gbc.pc(), 0x9ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ddb), 0x0);
        // 00 021B
        gbc.setState(0xa913, 0x819a, 0x9460, 0x4b8c, 0xf87c, 0xe8c9, 0x0, 0x1);
        gbc.writeMem(0xa913, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x819a);
        EXPECT(gbc.pc(), 0xa914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa913), 0x0);
        // 00 021C
        gbc.setState(0xef30, 0x5e41, 0x2440, 0xb7b2, 0x778d, 0x3292, 0x0, 0x0);
        gbc.writeMem(0xef30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5e41);
        EXPECT(gbc.pc(), 0xef31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef30), 0x0);
        // 00 021D
        gbc.setState(0x1479, 0x6556, 0x8b50, 0xe63a, 0xf313, 0xda81, 0x1, 0x1);
        gbc.writeMem(0x1479, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6556);
        EXPECT(gbc.pc(), 0x147a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 021E
        gbc.setState(0xe1d3, 0x90d, 0x94b0, 0xf45d, 0x4bdb, 0xf93e, 0x0, 0x1);
        gbc.writeMem(0xe1d3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x90d);
        EXPECT(gbc.pc(), 0xe1d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d3), 0x0);
        // 00 021F
        gbc.setState(0xdc5, 0x75a1, 0xd2f0, 0xe439, 0x7eb0, 0x8cb2, 0x1, 0x0);
        gbc.writeMem(0xdc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x75a1);
        EXPECT(gbc.pc(), 0xdc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0220
        gbc.setState(0x7000, 0xbf15, 0xa60, 0xa52a, 0x4299, 0xc4a7, 0x0, 0x1);
        gbc.writeMem(0x7000, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbf15);
        EXPECT(gbc.pc(), 0x7001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0221
        gbc.setState(0x6d00, 0x2d4c, 0xab10, 0x2c16, 0xb427, 0x9799, 0x1, 0x0);
        gbc.writeMem(0x6d00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2d4c);
        EXPECT(gbc.pc(), 0x6d01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0223
        gbc.setState(0xe4e3, 0xc5b, 0x2c0, 0x42de, 0x5b, 0xe3a2, 0x1, 0x0);
        gbc.writeMem(0xe4e3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc5b);
        EXPECT(gbc.pc(), 0xe4e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e3), 0x0);
        // 00 0224
        gbc.setState(0xe497, 0x2ad, 0x79f0, 0x1535, 0xd1da, 0x9999, 0x0, 0x0);
        gbc.writeMem(0xe497, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2ad);
        EXPECT(gbc.pc(), 0xe498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe497), 0x0);
        // 00 0225
        gbc.setState(0x4d79, 0x37a9, 0xab20, 0x6e20, 0x9fbc, 0xaab1, 0x1, 0x1);
        gbc.writeMem(0x4d79, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x37a9);
        EXPECT(gbc.pc(), 0x4d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0226
        gbc.setState(0xdcf0, 0x3848, 0x7f0, 0x2e8b, 0xb307, 0x647d, 0x1, 0x1);
        gbc.writeMem(0xdcf0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3848);
        EXPECT(gbc.pc(), 0xdcf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf0), 0x0);
        // 00 0227
        gbc.setState(0x9da, 0x1b17, 0xe9d0, 0xf871, 0xcf62, 0x1ce9, 0x0, 0x0);
        gbc.writeMem(0x9da, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1b17);
        EXPECT(gbc.pc(), 0x9db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0228
        gbc.setState(0xdad7, 0xc1b2, 0x64b0, 0x3627, 0x9c7e, 0xb828, 0x0, 0x1);
        gbc.writeMem(0xdad7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc1b2);
        EXPECT(gbc.pc(), 0xdad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad7), 0x0);
        // 00 0229
        gbc.setState(0x2bed, 0x1092, 0x6860, 0x87e3, 0xfc6, 0x7d48, 0x1, 0x1);
        gbc.writeMem(0x2bed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x1092);
        EXPECT(gbc.pc(), 0x2bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 022A
        gbc.setState(0x367f, 0xf939, 0x2f90, 0xb1a5, 0xd3d4, 0x37c8, 0x0, 0x0);
        gbc.writeMem(0x367f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf939);
        EXPECT(gbc.pc(), 0x3680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 022B
        gbc.setState(0x684, 0x4a67, 0xbd0, 0x607a, 0x4064, 0x48b7, 0x0, 0x1);
        gbc.writeMem(0x684, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4a67);
        EXPECT(gbc.pc(), 0x685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 022C
        gbc.setState(0xd28d, 0x518, 0x4420, 0x43, 0x6c15, 0xcb6c, 0x0, 0x1);
        gbc.writeMem(0xd28d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x518);
        EXPECT(gbc.pc(), 0xd28e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28d), 0x0);
        // 00 022D
        gbc.setState(0x1fd1, 0xf3e8, 0x95c0, 0xdd98, 0x7a6f, 0xac0a, 0x0, 0x1);
        gbc.writeMem(0x1fd1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf3e8);
        EXPECT(gbc.pc(), 0x1fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 022E
        gbc.setState(0xdafd, 0xbad7, 0x1030, 0x5c8a, 0x8812, 0xcef9, 0x1, 0x0);
        gbc.writeMem(0xdafd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbad7);
        EXPECT(gbc.pc(), 0xdafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdafd), 0x0);
        // 00 022F
        gbc.setState(0xb7b9, 0x7e93, 0x96b0, 0xfce2, 0xe5aa, 0xdb7f, 0x0, 0x0);
        gbc.writeMem(0xb7b9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7e93);
        EXPECT(gbc.pc(), 0xb7ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b9), 0x0);
        // 00 0230
        gbc.setState(0x2d66, 0x532a, 0x12a0, 0x31e8, 0x12c7, 0xf3bb, 0x0, 0x0);
        gbc.writeMem(0x2d66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x532a);
        EXPECT(gbc.pc(), 0x2d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0231
        gbc.setState(0x60ca, 0x10bb, 0xc2b0, 0xcfa3, 0x17a7, 0x972f, 0x1, 0x0);
        gbc.writeMem(0x60ca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x10bb);
        EXPECT(gbc.pc(), 0x60cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0232
        gbc.setState(0xe5c7, 0x766e, 0x3990, 0x1eba, 0x2920, 0xcbb4, 0x1, 0x0);
        gbc.writeMem(0xe5c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x766e);
        EXPECT(gbc.pc(), 0xe5c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c7), 0x0);
        // 00 0233
        gbc.setState(0x471b, 0xb7fe, 0x2a70, 0x2f01, 0x9ab4, 0x57bb, 0x1, 0x1);
        gbc.writeMem(0x471b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb7fe);
        EXPECT(gbc.pc(), 0x471c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0234
        gbc.setState(0x8ab8, 0xadf8, 0x340, 0x4d8f, 0x5079, 0x9fa6, 0x1, 0x0);
        gbc.writeMem(0x8ab8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xadf8);
        EXPECT(gbc.pc(), 0x8ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab8), 0x0);
        // 00 0235
        gbc.setState(0xe9df, 0x7301, 0xbb90, 0x5ad3, 0xadc3, 0x6a70, 0x0, 0x1);
        gbc.writeMem(0xe9df, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7301);
        EXPECT(gbc.pc(), 0xe9e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9df), 0x0);
        // 00 0236
        gbc.setState(0x1c15, 0x477e, 0x75f0, 0x2a29, 0xbb55, 0xcbb6, 0x1, 0x0);
        gbc.writeMem(0x1c15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x477e);
        EXPECT(gbc.pc(), 0x1c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0237
        gbc.setState(0x7ebf, 0xa1f8, 0xeac0, 0xeca3, 0x407f, 0x7b42, 0x0, 0x1);
        gbc.writeMem(0x7ebf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa1f8);
        EXPECT(gbc.pc(), 0x7ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0238
        gbc.setState(0x5012, 0xf629, 0xfe0, 0x99bb, 0x4694, 0xc13b, 0x0, 0x1);
        gbc.writeMem(0x5012, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf629);
        EXPECT(gbc.pc(), 0x5013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0239
        gbc.setState(0x8c7b, 0x5a11, 0xed30, 0xe675, 0xe6f2, 0x13aa, 0x0, 0x1);
        gbc.writeMem(0x8c7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5a11);
        EXPECT(gbc.pc(), 0x8c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c7b), 0x0);
        // 00 023A
        gbc.setState(0x9675, 0xad1a, 0x4bd0, 0x87e6, 0xfe9e, 0x3ef3, 0x1, 0x0);
        gbc.writeMem(0x9675, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xad1a);
        EXPECT(gbc.pc(), 0x9676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9675), 0x0);
        // 00 023B
        gbc.setState(0x77, 0x967, 0xf6c0, 0xc8e2, 0xc6ed, 0xf03f, 0x0, 0x0);
        gbc.writeMem(0x77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x967);
        EXPECT(gbc.pc(), 0x78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 023C
        gbc.setState(0x45e3, 0xfa93, 0xc410, 0xec96, 0x4223, 0xd06c, 0x0, 0x0);
        gbc.writeMem(0x45e3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfa93);
        EXPECT(gbc.pc(), 0x45e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 023D
        gbc.setState(0xac74, 0x50ec, 0x8dd0, 0x8760, 0x9836, 0x6d1a, 0x1, 0x0);
        gbc.writeMem(0xac74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x50ec);
        EXPECT(gbc.pc(), 0xac75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac74), 0x0);
        // 00 023E
        gbc.setState(0x76ad, 0xea14, 0x60b0, 0xa9fc, 0xd836, 0x2e7f, 0x0, 0x1);
        gbc.writeMem(0x76ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xea14);
        EXPECT(gbc.pc(), 0x76ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 023F
        gbc.setState(0xc67f, 0xaabf, 0xfd60, 0x3b4d, 0x6603, 0xc6aa, 0x1, 0x0);
        gbc.writeMem(0xc67f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xaabf);
        EXPECT(gbc.pc(), 0xc680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67f), 0x0);
        // 00 0240
        gbc.setState(0x5cc, 0x6626, 0x4870, 0xb5b6, 0x37cb, 0x30ea, 0x0, 0x0);
        gbc.writeMem(0x5cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6626);
        EXPECT(gbc.pc(), 0x5cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0241
        gbc.setState(0xbd5f, 0xd380, 0x6d70, 0x549d, 0x8da4, 0x2802, 0x0, 0x1);
        gbc.writeMem(0xbd5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd380);
        EXPECT(gbc.pc(), 0xbd60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5f), 0x0);
        // 00 0242
        gbc.setState(0x8778, 0x5e5a, 0x53b0, 0x22cd, 0x1fc8, 0x7c0c, 0x1, 0x1);
        gbc.writeMem(0x8778, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5e5a);
        EXPECT(gbc.pc(), 0x8779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8778), 0x0);
        // 00 0243
        gbc.setState(0x5cda, 0x8d23, 0x71f0, 0xa8c5, 0x6a3d, 0xa715, 0x1, 0x0);
        gbc.writeMem(0x5cda, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8d23);
        EXPECT(gbc.pc(), 0x5cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0244
        gbc.setState(0x1bfa, 0xd5e, 0x5570, 0xc877, 0xc239, 0xdf73, 0x0, 0x0);
        gbc.writeMem(0x1bfa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd5e);
        EXPECT(gbc.pc(), 0x1bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0245
        gbc.setState(0xaa0d, 0xc491, 0x83a0, 0x1571, 0x92b1, 0x86d4, 0x0, 0x0);
        gbc.writeMem(0xaa0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc491);
        EXPECT(gbc.pc(), 0xaa0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0d), 0x0);
        // 00 0246
        gbc.setState(0x56bb, 0x7ad4, 0x4b70, 0xe75a, 0xa6c7, 0xce3f, 0x1, 0x1);
        gbc.writeMem(0x56bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7ad4);
        EXPECT(gbc.pc(), 0x56bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0247
        gbc.setState(0x6fd4, 0xb954, 0x12f0, 0xe84d, 0x9f72, 0xb8c, 0x0, 0x1);
        gbc.writeMem(0x6fd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb954);
        EXPECT(gbc.pc(), 0x6fd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0248
        gbc.setState(0xa9cd, 0x41e3, 0xdf70, 0x17ad, 0x95a8, 0x3311, 0x0, 0x1);
        gbc.writeMem(0xa9cd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x41e3);
        EXPECT(gbc.pc(), 0xa9ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9cd), 0x0);
        // 00 0249
        gbc.setState(0xd6d1, 0xa932, 0xb550, 0xa7cd, 0x2e3f, 0xda3d, 0x0, 0x1);
        gbc.writeMem(0xd6d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa932);
        EXPECT(gbc.pc(), 0xd6d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6d1), 0x0);
        // 00 024A
        gbc.setState(0xafba, 0x8df, 0x1b00, 0x5045, 0x6ecf, 0xd8a1, 0x1, 0x1);
        gbc.writeMem(0xafba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8df);
        EXPECT(gbc.pc(), 0xafbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafba), 0x0);
        // 00 024B
        gbc.setState(0x2d81, 0x348d, 0x3360, 0x9970, 0x5715, 0x3247, 0x0, 0x0);
        gbc.writeMem(0x2d81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x348d);
        EXPECT(gbc.pc(), 0x2d82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 024C
        gbc.setState(0x92e4, 0xe50b, 0xf470, 0xf8f4, 0x56ac, 0x1460, 0x0, 0x1);
        gbc.writeMem(0x92e4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe50b);
        EXPECT(gbc.pc(), 0x92e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e4), 0x0);
        // 00 024D
        gbc.setState(0xeebf, 0xfb22, 0x51c0, 0x72aa, 0x6bc8, 0x54e6, 0x0, 0x1);
        gbc.writeMem(0xeebf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfb22);
        EXPECT(gbc.pc(), 0xeec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeebf), 0x0);
        // 00 024E
        gbc.setState(0x371e, 0x1db6, 0x4ec0, 0x4d19, 0x7159, 0x7c0a, 0x1, 0x1);
        gbc.writeMem(0x371e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1db6);
        EXPECT(gbc.pc(), 0x371f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 024F
        gbc.setState(0x865c, 0x91ed, 0x9ea0, 0x90d0, 0x782d, 0x8c82, 0x0, 0x1);
        gbc.writeMem(0x865c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x91ed);
        EXPECT(gbc.pc(), 0x865d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x865c), 0x0);
        // 00 0250
        gbc.setState(0x1248, 0x450f, 0xb4a0, 0xe8cf, 0xf9bc, 0xabfe, 0x1, 0x0);
        gbc.writeMem(0x1248, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x450f);
        EXPECT(gbc.pc(), 0x1249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0251
        gbc.setState(0xc65, 0xcc99, 0x3ec0, 0x87bb, 0x6c71, 0x5c7c, 0x1, 0x1);
        gbc.writeMem(0xc65, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcc99);
        EXPECT(gbc.pc(), 0xc66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0252
        gbc.setState(0x421b, 0x96c3, 0x45b0, 0x8a5, 0xf3e6, 0x497c, 0x1, 0x0);
        gbc.writeMem(0x421b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x96c3);
        EXPECT(gbc.pc(), 0x421c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0253
        gbc.setState(0x4c77, 0x87ec, 0x920, 0x96b8, 0x34cc, 0x9512, 0x1, 0x1);
        gbc.writeMem(0x4c77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x87ec);
        EXPECT(gbc.pc(), 0x4c78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0254
        gbc.setState(0x956e, 0x8e66, 0xa3b0, 0x5f74, 0x9cfd, 0xb0ba, 0x0, 0x0);
        gbc.writeMem(0x956e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8e66);
        EXPECT(gbc.pc(), 0x956f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x956e), 0x0);
        // 00 0255
        gbc.setState(0x7e9e, 0x8448, 0x1860, 0xc499, 0xdb1b, 0x5d28, 0x0, 0x1);
        gbc.writeMem(0x7e9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8448);
        EXPECT(gbc.pc(), 0x7e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0256
        gbc.setState(0xe4a6, 0xb86e, 0x4d70, 0x9fcd, 0xc202, 0xa7b3, 0x0, 0x0);
        gbc.writeMem(0xe4a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb86e);
        EXPECT(gbc.pc(), 0xe4a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a6), 0x0);
        // 00 0257
        gbc.setState(0x7860, 0xee7a, 0x18d0, 0xfa27, 0x4fb0, 0x597a, 0x1, 0x0);
        gbc.writeMem(0x7860, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xee7a);
        EXPECT(gbc.pc(), 0x7861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0258
        gbc.setState(0x86b0, 0x203b, 0x8030, 0x69fb, 0x670, 0xe66, 0x0, 0x1);
        gbc.writeMem(0x86b0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x203b);
        EXPECT(gbc.pc(), 0x86b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b0), 0x0);
        // 00 0259
        gbc.setState(0x661c, 0xc028, 0xcb90, 0x4946, 0xbae8, 0x99d, 0x1, 0x0);
        gbc.writeMem(0x661c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc028);
        EXPECT(gbc.pc(), 0x661d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 025A
        gbc.setState(0xddd3, 0xf3ca, 0x7810, 0x9676, 0xe509, 0x33f4, 0x1, 0x1);
        gbc.writeMem(0xddd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf3ca);
        EXPECT(gbc.pc(), 0xddd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd3), 0x0);
        // 00 025B
        gbc.setState(0xab1e, 0xa068, 0x3860, 0x871, 0x3a4c, 0x7edb, 0x0, 0x0);
        gbc.writeMem(0xab1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa068);
        EXPECT(gbc.pc(), 0xab1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1e), 0x0);
        // 00 025C
        gbc.setState(0x1051, 0x2d47, 0x1b20, 0x7aca, 0xea16, 0x72f4, 0x1, 0x1);
        gbc.writeMem(0x1051, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2d47);
        EXPECT(gbc.pc(), 0x1052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 025D
        gbc.setState(0x2a2c, 0x8100, 0xd7f0, 0x53a2, 0xa63, 0x50a9, 0x0, 0x1);
        gbc.writeMem(0x2a2c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8100);
        EXPECT(gbc.pc(), 0x2a2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 025E
        gbc.setState(0xdfaa, 0xc7d9, 0x5c80, 0x6dcd, 0x3db7, 0x68ca, 0x0, 0x0);
        gbc.writeMem(0xdfaa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc7d9);
        EXPECT(gbc.pc(), 0xdfab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfaa), 0x0);
        // 00 025F
        gbc.setState(0x1b9d, 0x1dc0, 0xe910, 0xd8f3, 0x2ff3, 0xb4f0, 0x0, 0x0);
        gbc.writeMem(0x1b9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1dc0);
        EXPECT(gbc.pc(), 0x1b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0261
        gbc.setState(0x211f, 0x3e69, 0x92d0, 0xc27a, 0xac21, 0xc38e, 0x0, 0x1);
        gbc.writeMem(0x211f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3e69);
        EXPECT(gbc.pc(), 0x2120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0262
        gbc.setState(0xcc4, 0x360c, 0x1020, 0x1879, 0x69df, 0x3aa, 0x0, 0x1);
        gbc.writeMem(0xcc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x360c);
        EXPECT(gbc.pc(), 0xcc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0263
        gbc.setState(0xbdbb, 0x6e76, 0x9350, 0x7f10, 0x3447, 0xbb22, 0x0, 0x0);
        gbc.writeMem(0xbdbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6e76);
        EXPECT(gbc.pc(), 0xbdbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdbb), 0x0);
        // 00 0264
        gbc.setState(0x6fc3, 0x65d8, 0x6a30, 0x6f7b, 0x17b5, 0x72d8, 0x0, 0x0);
        gbc.writeMem(0x6fc3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x65d8);
        EXPECT(gbc.pc(), 0x6fc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0265
        gbc.setState(0xb60e, 0xaea5, 0xd820, 0xf806, 0xec73, 0xd12f, 0x1, 0x1);
        gbc.writeMem(0xb60e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xaea5);
        EXPECT(gbc.pc(), 0xb60f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb60e), 0x0);
        // 00 0266
        gbc.setState(0x989f, 0xc059, 0x8970, 0xb9ca, 0x872b, 0xf1a6, 0x0, 0x1);
        gbc.writeMem(0x989f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc059);
        EXPECT(gbc.pc(), 0x98a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989f), 0x0);
        // 00 0267
        gbc.setState(0xd6a7, 0xe72c, 0xb710, 0xb8e9, 0xb2f8, 0x647f, 0x1, 0x0);
        gbc.writeMem(0xd6a7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe72c);
        EXPECT(gbc.pc(), 0xd6a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a7), 0x0);
        // 00 0268
        gbc.setState(0x2a40, 0xc201, 0x23d0, 0x278, 0x4423, 0xb079, 0x0, 0x1);
        gbc.writeMem(0x2a40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc201);
        EXPECT(gbc.pc(), 0x2a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0269
        gbc.setState(0xeda9, 0xb1d7, 0xc9b0, 0x32b7, 0xfab0, 0x46e9, 0x0, 0x1);
        gbc.writeMem(0xeda9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb1d7);
        EXPECT(gbc.pc(), 0xedaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda9), 0x0);
        // 00 026B
        gbc.setState(0xd3f1, 0x14c0, 0x54f0, 0xa8f3, 0xe07c, 0x74eb, 0x1, 0x1);
        gbc.writeMem(0xd3f1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x14c0);
        EXPECT(gbc.pc(), 0xd3f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f1), 0x0);
        // 00 026C
        gbc.setState(0xd479, 0xe4de, 0x5fd0, 0xd845, 0x3399, 0x6e7f, 0x1, 0x1);
        gbc.writeMem(0xd479, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe4de);
        EXPECT(gbc.pc(), 0xd47a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd479), 0x0);
        // 00 026D
        gbc.setState(0xa54c, 0x2dbb, 0x74b0, 0xa3e2, 0x63c2, 0x91e3, 0x0, 0x1);
        gbc.writeMem(0xa54c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2dbb);
        EXPECT(gbc.pc(), 0xa54d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa54c), 0x0);
        // 00 026F
        gbc.setState(0x43ef, 0x9f60, 0x3180, 0x602e, 0x8043, 0x3fe7, 0x0, 0x0);
        gbc.writeMem(0x43ef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9f60);
        EXPECT(gbc.pc(), 0x43f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0270
        gbc.setState(0x4633, 0x69e6, 0xd270, 0xabb6, 0x4782, 0xf946, 0x0, 0x1);
        gbc.writeMem(0x4633, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x69e6);
        EXPECT(gbc.pc(), 0x4634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0271
        gbc.setState(0xcd8b, 0xce1, 0x5a70, 0x1ae5, 0xb1db, 0x3bcd, 0x1, 0x0);
        gbc.writeMem(0xcd8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xce1);
        EXPECT(gbc.pc(), 0xcd8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd8b), 0x0);
        // 00 0272
        gbc.setState(0x679f, 0x92b2, 0x7100, 0xa42a, 0xdcd5, 0x986a, 0x1, 0x0);
        gbc.writeMem(0x679f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x92b2);
        EXPECT(gbc.pc(), 0x67a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0273
        gbc.setState(0x9ec6, 0x879b, 0x3c00, 0x8b77, 0xd966, 0xb961, 0x1, 0x1);
        gbc.writeMem(0x9ec6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x879b);
        EXPECT(gbc.pc(), 0x9ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec6), 0x0);
        // 00 0275
        gbc.setState(0x640d, 0x41d, 0xd650, 0x6a2, 0x42f1, 0x9b54, 0x1, 0x0);
        gbc.writeMem(0x640d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x41d);
        EXPECT(gbc.pc(), 0x640e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0276
        gbc.setState(0x397a, 0x3c01, 0xd3f0, 0x975e, 0xcd4, 0xce5d, 0x0, 0x0);
        gbc.writeMem(0x397a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3c01);
        EXPECT(gbc.pc(), 0x397b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0277
        gbc.setState(0x7f65, 0x5ab8, 0x9b60, 0x9c8d, 0x1e98, 0xee56, 0x1, 0x1);
        gbc.writeMem(0x7f65, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5ab8);
        EXPECT(gbc.pc(), 0x7f66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0279
        gbc.setState(0xa2c1, 0x3c08, 0x9a40, 0xb0ca, 0x7f63, 0xc480, 0x0, 0x1);
        gbc.writeMem(0xa2c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3c08);
        EXPECT(gbc.pc(), 0xa2c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c1), 0x0);
        // 00 027A
        gbc.setState(0xbce1, 0x2915, 0xde10, 0x935a, 0x1413, 0x2864, 0x1, 0x0);
        gbc.writeMem(0xbce1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2915);
        EXPECT(gbc.pc(), 0xbce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbce1), 0x0);
        // 00 027B
        gbc.setState(0xc280, 0x157b, 0x3850, 0x2233, 0x890, 0xc1fb, 0x0, 0x0);
        gbc.writeMem(0xc280, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x157b);
        EXPECT(gbc.pc(), 0xc281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc280), 0x0);
        // 00 027C
        gbc.setState(0x7662, 0xe3a2, 0xd90, 0x8dd0, 0x46ca, 0xb4fd, 0x1, 0x0);
        gbc.writeMem(0x7662, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe3a2);
        EXPECT(gbc.pc(), 0x7663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 027D
        gbc.setState(0xc05c, 0x2062, 0x2740, 0x5a51, 0xaee, 0xa8fd, 0x1, 0x1);
        gbc.writeMem(0xc05c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2062);
        EXPECT(gbc.pc(), 0xc05d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc05c), 0x0);
        // 00 027E
        gbc.setState(0xc69a, 0x8d85, 0x45c0, 0x6953, 0x6cf3, 0xb871, 0x1, 0x0);
        gbc.writeMem(0xc69a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8d85);
        EXPECT(gbc.pc(), 0xc69b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc69a), 0x0);
        // 00 027F
        gbc.setState(0x898e, 0x2e5a, 0xdd90, 0x262e, 0x680a, 0xa30, 0x1, 0x0);
        gbc.writeMem(0x898e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2e5a);
        EXPECT(gbc.pc(), 0x898f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x898e), 0x0);
        // 00 0280
        gbc.setState(0xb777, 0x89fd, 0x8d60, 0x3759, 0xf2cb, 0x94bc, 0x0, 0x1);
        gbc.writeMem(0xb777, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x89fd);
        EXPECT(gbc.pc(), 0xb778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb777), 0x0);
        // 00 0281
        gbc.setState(0xd762, 0x8895, 0x84e0, 0x4b8b, 0x7511, 0xed18, 0x0, 0x1);
        gbc.writeMem(0xd762, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8895);
        EXPECT(gbc.pc(), 0xd763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd762), 0x0);
        // 00 0282
        gbc.setState(0xa970, 0x230b, 0x6000, 0x786d, 0x5120, 0x8d86, 0x0, 0x0);
        gbc.writeMem(0xa970, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x230b);
        EXPECT(gbc.pc(), 0xa971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa970), 0x0);
        // 00 0283
        gbc.setState(0x376b, 0x9718, 0x2fc0, 0x5344, 0xd8de, 0xd2db, 0x1, 0x1);
        gbc.writeMem(0x376b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9718);
        EXPECT(gbc.pc(), 0x376c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0284
        gbc.setState(0x2ec, 0x1555, 0x9580, 0xba13, 0xa79a, 0x9c2, 0x1, 0x1);
        gbc.writeMem(0x2ec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1555);
        EXPECT(gbc.pc(), 0x2ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0285
        gbc.setState(0x77c3, 0x1558, 0xd070, 0xc68a, 0xbfc0, 0x6fc4, 0x0, 0x0);
        gbc.writeMem(0x77c3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1558);
        EXPECT(gbc.pc(), 0x77c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0286
        gbc.setState(0x76b4, 0x1e9c, 0xb850, 0x4fab, 0xe1a8, 0xa83, 0x1, 0x1);
        gbc.writeMem(0x76b4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1e9c);
        EXPECT(gbc.pc(), 0x76b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0287
        gbc.setState(0x5f02, 0x8e46, 0x26a0, 0x6e1c, 0x4fe6, 0xf4d8, 0x1, 0x0);
        gbc.writeMem(0x5f02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8e46);
        EXPECT(gbc.pc(), 0x5f03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0288
        gbc.setState(0x9dd1, 0x4635, 0x2e20, 0xbe47, 0x26ed, 0x8ba9, 0x0, 0x1);
        gbc.writeMem(0x9dd1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4635);
        EXPECT(gbc.pc(), 0x9dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd1), 0x0);
        // 00 0289
        gbc.setState(0x81a3, 0x4b76, 0xa7e0, 0x552a, 0xd053, 0xf553, 0x0, 0x0);
        gbc.writeMem(0x81a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4b76);
        EXPECT(gbc.pc(), 0x81a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a3), 0x0);
        // 00 028A
        gbc.setState(0xaeba, 0x5caa, 0x5ec0, 0x9fe0, 0x14a6, 0x8c6b, 0x1, 0x0);
        gbc.writeMem(0xaeba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5caa);
        EXPECT(gbc.pc(), 0xaebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeba), 0x0);
        // 00 028B
        gbc.setState(0x74f3, 0x59a6, 0x81d0, 0xb543, 0x7a0b, 0x2665, 0x1, 0x0);
        gbc.writeMem(0x74f3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x59a6);
        EXPECT(gbc.pc(), 0x74f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 028C
        gbc.setState(0x875d, 0xc7cf, 0x9460, 0x4b81, 0x1dab, 0x4194, 0x0, 0x0);
        gbc.writeMem(0x875d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc7cf);
        EXPECT(gbc.pc(), 0x875e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x875d), 0x0);
        // 00 028D
        gbc.setState(0x41b2, 0x9d7d, 0x1ed0, 0xb971, 0xf055, 0x19b3, 0x0, 0x1);
        gbc.writeMem(0x41b2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9d7d);
        EXPECT(gbc.pc(), 0x41b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 028E
        gbc.setState(0x946a, 0xeebf, 0x6c70, 0x8113, 0xb31b, 0x22bb, 0x1, 0x1);
        gbc.writeMem(0x946a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xeebf);
        EXPECT(gbc.pc(), 0x946b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x946a), 0x0);
        // 00 028F
        gbc.setState(0x16ad, 0xe87c, 0x3a10, 0x2303, 0x2ed3, 0xc085, 0x1, 0x0);
        gbc.writeMem(0x16ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe87c);
        EXPECT(gbc.pc(), 0x16ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0290
        gbc.setState(0xd7e9, 0x7229, 0xd510, 0xddec, 0xb81, 0xef74, 0x1, 0x1);
        gbc.writeMem(0xd7e9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7229);
        EXPECT(gbc.pc(), 0xd7ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e9), 0x0);
        // 00 0291
        gbc.setState(0xfa, 0x6f35, 0xde40, 0xd0be, 0x1f7f, 0xb9af, 0x0, 0x1);
        gbc.writeMem(0xfa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6f35);
        EXPECT(gbc.pc(), 0xfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0292
        gbc.setState(0x61cb, 0xd4db, 0x3290, 0x55e2, 0x3aa, 0xcb87, 0x0, 0x1);
        gbc.writeMem(0x61cb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd4db);
        EXPECT(gbc.pc(), 0x61cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0294
        gbc.setState(0x7c8d, 0x5b10, 0xb210, 0x4294, 0x7b8f, 0xb6fd, 0x0, 0x0);
        gbc.writeMem(0x7c8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5b10);
        EXPECT(gbc.pc(), 0x7c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0295
        gbc.setState(0x7442, 0x2304, 0x9700, 0x6de8, 0x9072, 0x184e, 0x0, 0x0);
        gbc.writeMem(0x7442, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2304);
        EXPECT(gbc.pc(), 0x7443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0297
        gbc.setState(0x9834, 0x3c, 0xbf00, 0xf8f8, 0xc5e4, 0xfeb3, 0x0, 0x1);
        gbc.writeMem(0x9834, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3c);
        EXPECT(gbc.pc(), 0x9835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9834), 0x0);
        // 00 0298
        gbc.setState(0x7a4a, 0x25bd, 0xb080, 0x733, 0x758b, 0x7b6a, 0x0, 0x0);
        gbc.writeMem(0x7a4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x25bd);
        EXPECT(gbc.pc(), 0x7a4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0299
        gbc.setState(0xa0cd, 0xfd45, 0x3600, 0x16f0, 0xe5df, 0x7015, 0x1, 0x0);
        gbc.writeMem(0xa0cd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfd45);
        EXPECT(gbc.pc(), 0xa0ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0cd), 0x0);
        // 00 029B
        gbc.setState(0xeac5, 0x95b0, 0xf070, 0xc4d9, 0xe4e6, 0xc6a7, 0x1, 0x1);
        gbc.writeMem(0xeac5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x95b0);
        EXPECT(gbc.pc(), 0xeac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeac5), 0x0);
        // 00 029C
        gbc.setState(0x31d4, 0xb4c3, 0xd2d0, 0x382a, 0xe23a, 0x7463, 0x0, 0x1);
        gbc.writeMem(0x31d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb4c3);
        EXPECT(gbc.pc(), 0x31d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 029D
        gbc.setState(0x6edb, 0xf1da, 0x1640, 0x8e0d, 0xbc3d, 0x5adf, 0x1, 0x1);
        gbc.writeMem(0x6edb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf1da);
        EXPECT(gbc.pc(), 0x6edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 029E
        gbc.setState(0x4dc5, 0x35ac, 0x1f10, 0xb563, 0xbe3f, 0x284, 0x1, 0x1);
        gbc.writeMem(0x4dc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x35ac);
        EXPECT(gbc.pc(), 0x4dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02A0
        gbc.setState(0x7fb8, 0xc9a, 0x3140, 0x660e, 0xdd42, 0xe83f, 0x0, 0x0);
        gbc.writeMem(0x7fb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc9a);
        EXPECT(gbc.pc(), 0x7fb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 02A1
        gbc.setState(0x9f55, 0x5307, 0xbc00, 0xdf11, 0xc1d5, 0x1cd9, 0x0, 0x1);
        gbc.writeMem(0x9f55, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5307);
        EXPECT(gbc.pc(), 0x9f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f55), 0x0);
        // 00 02A2
        gbc.setState(0xbe8f, 0x18a8, 0x8b60, 0xeb26, 0x8446, 0x1edd, 0x1, 0x0);
        gbc.writeMem(0xbe8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x18a8);
        EXPECT(gbc.pc(), 0xbe90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8f), 0x0);
        // 00 02A3
        gbc.setState(0xd22d, 0x2758, 0xece0, 0x280a, 0x72f1, 0x71d6, 0x0, 0x1);
        gbc.writeMem(0xd22d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2758);
        EXPECT(gbc.pc(), 0xd22e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22d), 0x0);
        // 00 02A4
        gbc.setState(0xe009, 0x9f23, 0x630, 0x55f0, 0x401e, 0x4141, 0x0, 0x1);
        gbc.writeMem(0xe009, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9f23);
        EXPECT(gbc.pc(), 0xe00a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe009), 0x0);
        // 00 02A5
        gbc.setState(0xc87c, 0x4257, 0x1f80, 0x4635, 0x70de, 0xfcee, 0x0, 0x0);
        gbc.writeMem(0xc87c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4257);
        EXPECT(gbc.pc(), 0xc87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc87c), 0x0);
        // 00 02A6
        gbc.setState(0xefaf, 0x70ab, 0x8d20, 0x709a, 0x2376, 0xb71f, 0x0, 0x0);
        gbc.writeMem(0xefaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x70ab);
        EXPECT(gbc.pc(), 0xefb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefaf), 0x0);
        // 00 02A7
        gbc.setState(0x9dd8, 0x563c, 0xb790, 0xf33f, 0x1877, 0x35b3, 0x1, 0x0);
        gbc.writeMem(0x9dd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x563c);
        EXPECT(gbc.pc(), 0x9dd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd8), 0x0);
        // 00 02A8
        gbc.setState(0x1dbc, 0xa00f, 0x5700, 0x81c0, 0x30bd, 0x3429, 0x0, 0x0);
        gbc.writeMem(0x1dbc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa00f);
        EXPECT(gbc.pc(), 0x1dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 02A9
        gbc.setState(0xc3cc, 0xe884, 0xce80, 0x850, 0x204a, 0xf63, 0x1, 0x1);
        gbc.writeMem(0xc3cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe884);
        EXPECT(gbc.pc(), 0xc3cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3cc), 0x0);
        // 00 02AA
        gbc.setState(0xc259, 0x783d, 0x7630, 0x1074, 0xc9ec, 0x8207, 0x1, 0x0);
        gbc.writeMem(0xc259, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x783d);
        EXPECT(gbc.pc(), 0xc25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc259), 0x0);
        // 00 02AB
        gbc.setState(0xcd81, 0x980, 0x4810, 0xbf19, 0x9adf, 0x430a, 0x1, 0x0);
        gbc.writeMem(0xcd81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x980);
        EXPECT(gbc.pc(), 0xcd82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd81), 0x0);
        // 00 02AC
        gbc.setState(0x7631, 0x7ebb, 0xef50, 0xe420, 0xc33c, 0xaf04, 0x0, 0x0);
        gbc.writeMem(0x7631, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7ebb);
        EXPECT(gbc.pc(), 0x7632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02AD
        gbc.setState(0x5156, 0x4645, 0x98f0, 0x62ed, 0x384b, 0xae37, 0x0, 0x1);
        gbc.writeMem(0x5156, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4645);
        EXPECT(gbc.pc(), 0x5157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 02AE
        gbc.setState(0x4c1a, 0x81b0, 0x1e90, 0x28f0, 0x6b04, 0xbc, 0x0, 0x1);
        gbc.writeMem(0x4c1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x81b0);
        EXPECT(gbc.pc(), 0x4c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02B0
        gbc.setState(0x2f77, 0x8e96, 0x2f90, 0x8c59, 0xe1ab, 0x1181, 0x0, 0x0);
        gbc.writeMem(0x2f77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8e96);
        EXPECT(gbc.pc(), 0x2f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02B1
        gbc.setState(0xa74e, 0x5663, 0x4ec0, 0x7ec4, 0x4c62, 0x1340, 0x1, 0x1);
        gbc.writeMem(0xa74e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5663);
        EXPECT(gbc.pc(), 0xa74f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa74e), 0x0);
        // 00 02B3
        gbc.setState(0xac8e, 0xa064, 0x40e0, 0xb6f6, 0xcc6b, 0x9310, 0x1, 0x0);
        gbc.writeMem(0xac8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa064);
        EXPECT(gbc.pc(), 0xac8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac8e), 0x0);
        // 00 02B4
        gbc.setState(0x8ca0, 0x5fa9, 0x9100, 0xc0c1, 0x35bf, 0x3f66, 0x1, 0x0);
        gbc.writeMem(0x8ca0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5fa9);
        EXPECT(gbc.pc(), 0x8ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca0), 0x0);
        // 00 02B5
        gbc.setState(0xdd62, 0x7b15, 0x8060, 0x6cd3, 0x4fb7, 0xfa6a, 0x1, 0x1);
        gbc.writeMem(0xdd62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7b15);
        EXPECT(gbc.pc(), 0xdd63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd62), 0x0);
        // 00 02B6
        gbc.setState(0xd38f, 0xe6aa, 0xd610, 0xe9e, 0xb7b4, 0xa1f0, 0x1, 0x0);
        gbc.writeMem(0xd38f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe6aa);
        EXPECT(gbc.pc(), 0xd390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd38f), 0x0);
        // 00 02B7
        gbc.setState(0x4396, 0x7d19, 0xd6a0, 0x5835, 0x6e3, 0x3fde, 0x1, 0x0);
        gbc.writeMem(0x4396, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7d19);
        EXPECT(gbc.pc(), 0x4397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02B8
        gbc.setState(0x6f8b, 0xb4cb, 0xeae0, 0x74d3, 0xc82d, 0x69c0, 0x1, 0x0);
        gbc.writeMem(0x6f8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb4cb);
        EXPECT(gbc.pc(), 0x6f8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02B9
        gbc.setState(0x935, 0xbc40, 0x5e20, 0x6a7e, 0xe514, 0x4178, 0x1, 0x0);
        gbc.writeMem(0x935, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbc40);
        EXPECT(gbc.pc(), 0x936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02BA
        gbc.setState(0xcbdb, 0x3b0, 0xb350, 0x10f3, 0x9761, 0x7784, 0x1, 0x1);
        gbc.writeMem(0xcbdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3b0);
        EXPECT(gbc.pc(), 0xcbdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbdb), 0x0);
        // 00 02BB
        gbc.setState(0xbd8f, 0x3fb7, 0x32a0, 0x678c, 0xa3d3, 0xaa2c, 0x1, 0x1);
        gbc.writeMem(0xbd8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3fb7);
        EXPECT(gbc.pc(), 0xbd90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd8f), 0x0);
        // 00 02BC
        gbc.setState(0xe1f6, 0x88ea, 0x5300, 0x12b9, 0x863c, 0x5bc7, 0x0, 0x0);
        gbc.writeMem(0xe1f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x88ea);
        EXPECT(gbc.pc(), 0xe1f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f6), 0x0);
        // 00 02BD
        gbc.setState(0xbd01, 0xbc5b, 0xe0b0, 0x8536, 0xb9c7, 0xb77b, 0x0, 0x1);
        gbc.writeMem(0xbd01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbc5b);
        EXPECT(gbc.pc(), 0xbd02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd01), 0x0);
        // 00 02BE
        gbc.setState(0x1b99, 0x6348, 0x5b70, 0xfefc, 0xb19c, 0xa0c0, 0x0, 0x1);
        gbc.writeMem(0x1b99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6348);
        EXPECT(gbc.pc(), 0x1b9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 02BF
        gbc.setState(0x1152, 0x26e5, 0x3420, 0x379d, 0xb091, 0xb2bf, 0x0, 0x0);
        gbc.writeMem(0x1152, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x26e5);
        EXPECT(gbc.pc(), 0x1153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02C0
        gbc.setState(0xe4bb, 0xff70, 0x5e20, 0x44b3, 0xf81a, 0x8e09, 0x0, 0x0);
        gbc.writeMem(0xe4bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xff70);
        EXPECT(gbc.pc(), 0xe4bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4bb), 0x0);
        // 00 02C1
        gbc.setState(0x6f19, 0x855c, 0x3f70, 0xaa5d, 0xe9aa, 0xd4ab, 0x0, 0x1);
        gbc.writeMem(0x6f19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x855c);
        EXPECT(gbc.pc(), 0x6f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 02C2
        gbc.setState(0x4092, 0xa3b7, 0x51c0, 0x9a2e, 0x350b, 0x7150, 0x0, 0x1);
        gbc.writeMem(0x4092, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa3b7);
        EXPECT(gbc.pc(), 0x4093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 02C3
        gbc.setState(0x304c, 0x7583, 0xb7e0, 0x91df, 0xcb32, 0xcf18, 0x1, 0x0);
        gbc.writeMem(0x304c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7583);
        EXPECT(gbc.pc(), 0x304d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02C4
        gbc.setState(0x9fae, 0xebe6, 0x4990, 0xc29a, 0x3cd8, 0x1efa, 0x1, 0x0);
        gbc.writeMem(0x9fae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xebe6);
        EXPECT(gbc.pc(), 0x9faf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fae), 0x0);
        // 00 02C5
        gbc.setState(0x765c, 0xc755, 0xa4e0, 0x70e1, 0xa3b4, 0xe614, 0x0, 0x0);
        gbc.writeMem(0x765c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc755);
        EXPECT(gbc.pc(), 0x765d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02C6
        gbc.setState(0x6c2a, 0x5772, 0x2610, 0x7bc7, 0xb28a, 0x185e, 0x0, 0x1);
        gbc.writeMem(0x6c2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5772);
        EXPECT(gbc.pc(), 0x6c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02C7
        gbc.setState(0x7e6a, 0xc92, 0xf220, 0xad3b, 0x138b, 0x84cd, 0x1, 0x0);
        gbc.writeMem(0x7e6a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc92);
        EXPECT(gbc.pc(), 0x7e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02C8
        gbc.setState(0xb561, 0xd22b, 0xd2e0, 0x77b7, 0x45bb, 0x418, 0x1, 0x0);
        gbc.writeMem(0xb561, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd22b);
        EXPECT(gbc.pc(), 0xb562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb561), 0x0);
        // 00 02C9
        gbc.setState(0xed9d, 0x8811, 0xe6b0, 0xef9d, 0x848c, 0x8c5c, 0x1, 0x0);
        gbc.writeMem(0xed9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8811);
        EXPECT(gbc.pc(), 0xed9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed9d), 0x0);
        // 00 02CA
        gbc.setState(0x7369, 0x47aa, 0x3d90, 0xcd0c, 0xe69f, 0x77ec, 0x0, 0x0);
        gbc.writeMem(0x7369, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x47aa);
        EXPECT(gbc.pc(), 0x736a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02CB
        gbc.setState(0x2e95, 0x5312, 0x8790, 0x1bf0, 0x85df, 0xaa59, 0x1, 0x1);
        gbc.writeMem(0x2e95, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5312);
        EXPECT(gbc.pc(), 0x2e96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02CC
        gbc.setState(0xd32a, 0xc908, 0xa4e0, 0xdc48, 0x6f07, 0x32a3, 0x0, 0x1);
        gbc.writeMem(0xd32a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc908);
        EXPECT(gbc.pc(), 0xd32b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32a), 0x0);
        // 00 02CD
        gbc.setState(0x27a3, 0x959b, 0xd00, 0x9662, 0xb048, 0xf048, 0x1, 0x0);
        gbc.writeMem(0x27a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x959b);
        EXPECT(gbc.pc(), 0x27a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 02CE
        gbc.setState(0xbb47, 0x2d1, 0xf2f0, 0x645b, 0x431a, 0x586a, 0x1, 0x1);
        gbc.writeMem(0xbb47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2d1);
        EXPECT(gbc.pc(), 0xbb48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb47), 0x0);
        // 00 02D0
        gbc.setState(0x38bb, 0xfeeb, 0x3410, 0x94f4, 0x5c00, 0x6709, 0x0, 0x1);
        gbc.writeMem(0x38bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xfeeb);
        EXPECT(gbc.pc(), 0x38bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02D1
        gbc.setState(0x19db, 0xd833, 0xda70, 0x8f6, 0x47ea, 0x187f, 0x0, 0x1);
        gbc.writeMem(0x19db, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd833);
        EXPECT(gbc.pc(), 0x19dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 02D2
        gbc.setState(0x7327, 0xc9a9, 0x4710, 0xa2f3, 0xe506, 0x7838, 0x1, 0x1);
        gbc.writeMem(0x7327, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc9a9);
        EXPECT(gbc.pc(), 0x7328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02D3
        gbc.setState(0x4d07, 0x7c6e, 0xfb60, 0x46b, 0x1706, 0xd28a, 0x1, 0x1);
        gbc.writeMem(0x4d07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7c6e);
        EXPECT(gbc.pc(), 0x4d08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02D4
        gbc.setState(0x8722, 0x64ff, 0x2f0, 0x2908, 0x99b5, 0xe38b, 0x0, 0x1);
        gbc.writeMem(0x8722, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x64ff);
        EXPECT(gbc.pc(), 0x8723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8722), 0x0);
        // 00 02D5
        gbc.setState(0xcaa0, 0xb8b2, 0x7ac0, 0xe78a, 0x72cb, 0xebd, 0x0, 0x1);
        gbc.writeMem(0xcaa0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb8b2);
        EXPECT(gbc.pc(), 0xcaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaa0), 0x0);
        // 00 02D6
        gbc.setState(0x38cf, 0x498d, 0xdef0, 0x5184, 0xa5bc, 0x5f25, 0x1, 0x0);
        gbc.writeMem(0x38cf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x498d);
        EXPECT(gbc.pc(), 0x38d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 02D7
        gbc.setState(0x8e30, 0x56d2, 0x7e70, 0x9b76, 0xe64c, 0xd0b6, 0x1, 0x1);
        gbc.writeMem(0x8e30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x56d2);
        EXPECT(gbc.pc(), 0x8e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e30), 0x0);
        // 00 02D8
        gbc.setState(0xdeaf, 0x5695, 0x5f30, 0x5170, 0xc77b, 0x6ce6, 0x0, 0x0);
        gbc.writeMem(0xdeaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5695);
        EXPECT(gbc.pc(), 0xdeb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeaf), 0x0);
        // 00 02D9
        gbc.setState(0x440a, 0x9dc8, 0xbb40, 0x755, 0x442b, 0x1fcc, 0x1, 0x1);
        gbc.writeMem(0x440a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9dc8);
        EXPECT(gbc.pc(), 0x440b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 02DA
        gbc.setState(0x6913, 0xded2, 0xcda0, 0xe205, 0x686, 0xc17a, 0x0, 0x1);
        gbc.writeMem(0x6913, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xded2);
        EXPECT(gbc.pc(), 0x6914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02DB
        gbc.setState(0x8b48, 0xe02, 0x6f70, 0x61b2, 0x4143, 0xd1bb, 0x1, 0x1);
        gbc.writeMem(0x8b48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe02);
        EXPECT(gbc.pc(), 0x8b49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b48), 0x0);
        // 00 02DC
        gbc.setState(0x368f, 0x63b8, 0xc30, 0x7a53, 0x1bbd, 0xba36, 0x1, 0x0);
        gbc.writeMem(0x368f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x63b8);
        EXPECT(gbc.pc(), 0x3690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 02DD
        gbc.setState(0x25fb, 0xa048, 0xb340, 0x7940, 0x62f4, 0x83bb, 0x1, 0x1);
        gbc.writeMem(0x25fb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa048);
        EXPECT(gbc.pc(), 0x25fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 02DE
        gbc.setState(0xa7eb, 0x934, 0x6310, 0x9eae, 0xf67c, 0xf3e9, 0x0, 0x1);
        gbc.writeMem(0xa7eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x934);
        EXPECT(gbc.pc(), 0xa7ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7eb), 0x0);
        // 00 02DF
        gbc.setState(0x3ba4, 0xf661, 0x93c0, 0xb6d3, 0x2b05, 0x378e, 0x1, 0x0);
        gbc.writeMem(0x3ba4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf661);
        EXPECT(gbc.pc(), 0x3ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 02E0
        gbc.setState(0xb179, 0x77fe, 0x70d0, 0x6b78, 0xab55, 0x3b, 0x1, 0x0);
        gbc.writeMem(0xb179, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x77fe);
        EXPECT(gbc.pc(), 0xb17a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb179), 0x0);
        // 00 02E1
        gbc.setState(0xbe6d, 0xa916, 0x73b0, 0xa717, 0xc229, 0x3857, 0x1, 0x0);
        gbc.writeMem(0xbe6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa916);
        EXPECT(gbc.pc(), 0xbe6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe6d), 0x0);
        // 00 02E2
        gbc.setState(0xa49e, 0xf410, 0x6300, 0x8c5b, 0x1473, 0x2cf0, 0x0, 0x1);
        gbc.writeMem(0xa49e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf410);
        EXPECT(gbc.pc(), 0xa49f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49e), 0x0);
        // 00 02E3
        gbc.setState(0xd65, 0x5ef9, 0xf620, 0xaeae, 0xb3ca, 0x30a9, 0x0, 0x1);
        gbc.writeMem(0xd65, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5ef9);
        EXPECT(gbc.pc(), 0xd66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02E4
        gbc.setState(0x9795, 0x9c50, 0xa020, 0x7002, 0x1733, 0x65c8, 0x0, 0x0);
        gbc.writeMem(0x9795, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9c50);
        EXPECT(gbc.pc(), 0x9796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9795), 0x0);
        // 00 02E5
        gbc.setState(0x49f8, 0x6be3, 0x9950, 0x57b1, 0x3cad, 0x9354, 0x0, 0x1);
        gbc.writeMem(0x49f8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6be3);
        EXPECT(gbc.pc(), 0x49f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02E6
        gbc.setState(0xd585, 0x29e9, 0xc5d0, 0xaf9c, 0xaa2, 0xf205, 0x0, 0x1);
        gbc.writeMem(0xd585, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x29e9);
        EXPECT(gbc.pc(), 0xd586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd585), 0x0);
        // 00 02E7
        gbc.setState(0xdaa9, 0xfe6f, 0xa410, 0x5a39, 0xe2cb, 0xdfc5, 0x0, 0x1);
        gbc.writeMem(0xdaa9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfe6f);
        EXPECT(gbc.pc(), 0xdaaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa9), 0x0);
        // 00 02E8
        gbc.setState(0xedef, 0x9384, 0x3080, 0xe73a, 0x392, 0x4c1a, 0x0, 0x1);
        gbc.writeMem(0xedef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9384);
        EXPECT(gbc.pc(), 0xedf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedef), 0x0);
        // 00 02E9
        gbc.setState(0xc0f5, 0x5a74, 0x3cb0, 0x233c, 0xb874, 0x9a99, 0x1, 0x1);
        gbc.writeMem(0xc0f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5a74);
        EXPECT(gbc.pc(), 0xc0f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f5), 0x0);
        // 00 02EA
        gbc.setState(0xcd69, 0xf4b6, 0x3f70, 0x4a53, 0xd9c8, 0xa40c, 0x0, 0x1);
        gbc.writeMem(0xcd69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf4b6);
        EXPECT(gbc.pc(), 0xcd6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd69), 0x0);
        // 00 02EB
        gbc.setState(0x871b, 0x5c6e, 0xb010, 0xd6f, 0x146b, 0x2ff8, 0x0, 0x0);
        gbc.writeMem(0x871b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5c6e);
        EXPECT(gbc.pc(), 0x871c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871b), 0x0);
        // 00 02EC
        gbc.setState(0x25c4, 0xac14, 0xd0f0, 0xcd5b, 0x7452, 0x5d20, 0x0, 0x1);
        gbc.writeMem(0x25c4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xac14);
        EXPECT(gbc.pc(), 0x25c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 02ED
        gbc.setState(0x7275, 0x51c4, 0x3050, 0x34eb, 0x90f0, 0x4b44, 0x0, 0x1);
        gbc.writeMem(0x7275, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x51c4);
        EXPECT(gbc.pc(), 0x7276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02EE
        gbc.setState(0x293a, 0x2f4c, 0x6ac0, 0xb804, 0xede4, 0x820b, 0x0, 0x1);
        gbc.writeMem(0x293a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2f4c);
        EXPECT(gbc.pc(), 0x293b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 02EF
        gbc.setState(0x6c00, 0xfb87, 0xd490, 0x44bc, 0x7e62, 0x42af, 0x0, 0x0);
        gbc.writeMem(0x6c00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfb87);
        EXPECT(gbc.pc(), 0x6c01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02F0
        gbc.setState(0x4456, 0x763a, 0xf610, 0x8285, 0x4bf5, 0x8470, 0x1, 0x0);
        gbc.writeMem(0x4456, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x763a);
        EXPECT(gbc.pc(), 0x4457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02F1
        gbc.setState(0x7ee3, 0x4dde, 0x8c20, 0xbb24, 0x521b, 0x55e5, 0x0, 0x1);
        gbc.writeMem(0x7ee3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4dde);
        EXPECT(gbc.pc(), 0x7ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02F2
        gbc.setState(0x8d, 0x727e, 0x5800, 0x3ddd, 0xeec8, 0xdfb6, 0x1, 0x1);
        gbc.writeMem(0x8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x727e);
        EXPECT(gbc.pc(), 0x8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 02F3
        gbc.setState(0x6930, 0x5dfd, 0x5960, 0x6f66, 0x8852, 0xbf3c, 0x1, 0x0);
        gbc.writeMem(0x6930, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5dfd);
        EXPECT(gbc.pc(), 0x6931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02F4
        gbc.setState(0x9dd3, 0xf186, 0xa660, 0xacf7, 0xa27d, 0xf348, 0x1, 0x0);
        gbc.writeMem(0x9dd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf186);
        EXPECT(gbc.pc(), 0x9dd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd3), 0x0);
        // 00 02F5
        gbc.setState(0x53f4, 0x93f0, 0x2ec0, 0x7c62, 0xbb03, 0x884d, 0x0, 0x0);
        gbc.writeMem(0x53f4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x93f0);
        EXPECT(gbc.pc(), 0x53f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 02F6
        gbc.setState(0x7b7a, 0x2155, 0x5480, 0x69ee, 0xbf86, 0x30c5, 0x0, 0x0);
        gbc.writeMem(0x7b7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2155);
        EXPECT(gbc.pc(), 0x7b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 02F7
        gbc.setState(0xad2f, 0x2fc3, 0x1650, 0xde4b, 0xbb5e, 0x1c54, 0x0, 0x1);
        gbc.writeMem(0xad2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2fc3);
        EXPECT(gbc.pc(), 0xad30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad2f), 0x0);
        // 00 02F8
        gbc.setState(0x401f, 0xfcaa, 0x6e0, 0x2c5f, 0x68d2, 0x95ca, 0x1, 0x0);
        gbc.writeMem(0x401f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfcaa);
        EXPECT(gbc.pc(), 0x4020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02F9
        gbc.setState(0xeaf2, 0x1ec8, 0xf450, 0x7753, 0xc576, 0x9c80, 0x0, 0x1);
        gbc.writeMem(0xeaf2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1ec8);
        EXPECT(gbc.pc(), 0xeaf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaf2), 0x0);
        // 00 02FA
        gbc.setState(0x43d1, 0x9f40, 0x3dd0, 0x5372, 0x1b63, 0x11fd, 0x0, 0x0);
        gbc.writeMem(0x43d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9f40);
        EXPECT(gbc.pc(), 0x43d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 02FB
        gbc.setState(0x88d0, 0x52ae, 0x1b40, 0x6905, 0x62be, 0x52c8, 0x1, 0x0);
        gbc.writeMem(0x88d0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x52ae);
        EXPECT(gbc.pc(), 0x88d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d0), 0x0);
        // 00 02FC
        gbc.setState(0x641, 0x722, 0xd920, 0x2b77, 0xe46, 0xb6ae, 0x0, 0x0);
        gbc.writeMem(0x641, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x722);
        EXPECT(gbc.pc(), 0x642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 02FD
        gbc.setState(0x83fe, 0x89c8, 0xcef0, 0xf40, 0x75c7, 0x275a, 0x1, 0x1);
        gbc.writeMem(0x83fe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x89c8);
        EXPECT(gbc.pc(), 0x83ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fe), 0x0);
        // 00 02FE
        gbc.setState(0xb93f, 0xd9b3, 0x1560, 0x876b, 0xd432, 0xc592, 0x0, 0x1);
        gbc.writeMem(0xb93f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd9b3);
        EXPECT(gbc.pc(), 0xb940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93f), 0x0);
        // 00 02FF
        gbc.setState(0x9d83, 0xafdb, 0xe760, 0x2f65, 0x590a, 0xfb67, 0x0, 0x0);
        gbc.writeMem(0x9d83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xafdb);
        EXPECT(gbc.pc(), 0x9d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d83), 0x0);
        // 00 0300
        gbc.setState(0xd6d, 0xb10d, 0xe3f0, 0x30c0, 0xed7a, 0xe108, 0x1, 0x0);
        gbc.writeMem(0xd6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb10d);
        EXPECT(gbc.pc(), 0xd6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0301
        gbc.setState(0x801d, 0x7d8e, 0x25d0, 0x9b88, 0x7658, 0x88cb, 0x1, 0x1);
        gbc.writeMem(0x801d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7d8e);
        EXPECT(gbc.pc(), 0x801e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801d), 0x0);
        // 00 0302
        gbc.setState(0x3be0, 0xccae, 0xa320, 0xc5e9, 0xc4cb, 0x5b74, 0x1, 0x1);
        gbc.writeMem(0x3be0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xccae);
        EXPECT(gbc.pc(), 0x3be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0303
        gbc.setState(0xd35f, 0x8e2c, 0x8c70, 0xec61, 0x5e62, 0xcefc, 0x1, 0x0);
        gbc.writeMem(0xd35f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8e2c);
        EXPECT(gbc.pc(), 0xd360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd35f), 0x0);
        // 00 0304
        gbc.setState(0x9c38, 0x179f, 0xd380, 0xfe69, 0x2ed9, 0xa5de, 0x0, 0x1);
        gbc.writeMem(0x9c38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x179f);
        EXPECT(gbc.pc(), 0x9c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c38), 0x0);
        // 00 0305
        gbc.setState(0x6727, 0x3f8b, 0xd2e0, 0x9238, 0x3848, 0x93e1, 0x0, 0x0);
        gbc.writeMem(0x6727, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3f8b);
        EXPECT(gbc.pc(), 0x6728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0307
        gbc.setState(0x11fc, 0x921, 0x81c0, 0xabf6, 0xfe34, 0xd5f1, 0x1, 0x1);
        gbc.writeMem(0x11fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x921);
        EXPECT(gbc.pc(), 0x11fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0308
        gbc.setState(0xbf99, 0xb6f4, 0xd610, 0xb048, 0xb79e, 0x1e7b, 0x1, 0x0);
        gbc.writeMem(0xbf99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb6f4);
        EXPECT(gbc.pc(), 0xbf9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf99), 0x0);
        // 00 0309
        gbc.setState(0x6509, 0xcc01, 0xc6a0, 0x91a, 0x16c3, 0x31e5, 0x0, 0x0);
        gbc.writeMem(0x6509, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcc01);
        EXPECT(gbc.pc(), 0x650a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 030A
        gbc.setState(0xe5f9, 0xfecc, 0xfe20, 0x6570, 0x62c, 0x9a50, 0x1, 0x0);
        gbc.writeMem(0xe5f9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xfecc);
        EXPECT(gbc.pc(), 0xe5fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f9), 0x0);
        // 00 030B
        gbc.setState(0xe617, 0x9999, 0xda40, 0x53b6, 0x277c, 0x433b, 0x0, 0x1);
        gbc.writeMem(0xe617, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9999);
        EXPECT(gbc.pc(), 0xe618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe617), 0x0);
        // 00 030C
        gbc.setState(0x4d49, 0x6148, 0xb9c0, 0xf648, 0xe548, 0xcdca, 0x1, 0x1);
        gbc.writeMem(0x4d49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6148);
        EXPECT(gbc.pc(), 0x4d4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 030D
        gbc.setState(0xb97b, 0xdc6b, 0x7bf0, 0xa450, 0xe888, 0x4337, 0x0, 0x0);
        gbc.writeMem(0xb97b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdc6b);
        EXPECT(gbc.pc(), 0xb97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97b), 0x0);
        // 00 030E
        gbc.setState(0xff2, 0xf416, 0x1e50, 0x5662, 0x434, 0x4f1, 0x1, 0x1);
        gbc.writeMem(0xff2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf416);
        EXPECT(gbc.pc(), 0xff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0310
        gbc.setState(0x308a, 0x8f5e, 0x4460, 0x6dcd, 0x298, 0xe83f, 0x1, 0x1);
        gbc.writeMem(0x308a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8f5e);
        EXPECT(gbc.pc(), 0x308b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0311
        gbc.setState(0x228b, 0x1f75, 0xd270, 0xeed1, 0xe4bb, 0xe6af, 0x0, 0x0);
        gbc.writeMem(0x228b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1f75);
        EXPECT(gbc.pc(), 0x228c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0312
        gbc.setState(0x818, 0x63a9, 0xff10, 0xfb06, 0x5901, 0xc1c3, 0x1, 0x0);
        gbc.writeMem(0x818, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x63a9);
        EXPECT(gbc.pc(), 0x819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0313
        gbc.setState(0x8d08, 0xe77a, 0xdac0, 0x383c, 0xe2d9, 0x90c2, 0x1, 0x0);
        gbc.writeMem(0x8d08, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe77a);
        EXPECT(gbc.pc(), 0x8d09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d08), 0x0);
        // 00 0315
        gbc.setState(0x1c52, 0x4a3c, 0x6bf0, 0x354, 0x7706, 0xdf, 0x1, 0x1);
        gbc.writeMem(0x1c52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4a3c);
        EXPECT(gbc.pc(), 0x1c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0316
        gbc.setState(0xc781, 0x1993, 0xdbd0, 0x49ec, 0x4032, 0xf314, 0x1, 0x0);
        gbc.writeMem(0xc781, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1993);
        EXPECT(gbc.pc(), 0xc782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc781), 0x0);
        // 00 0317
        gbc.setState(0xae82, 0x77aa, 0xc230, 0xff57, 0x7bfc, 0x8815, 0x1, 0x1);
        gbc.writeMem(0xae82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x77aa);
        EXPECT(gbc.pc(), 0xae83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae82), 0x0);
        // 00 0318
        gbc.setState(0x30b6, 0x3320, 0xe890, 0xb4da, 0x241f, 0x5ff4, 0x0, 0x1);
        gbc.writeMem(0x30b6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3320);
        EXPECT(gbc.pc(), 0x30b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0319
        gbc.setState(0x16a0, 0x2bfe, 0xb960, 0x1b92, 0xbd60, 0x7e1e, 0x0, 0x1);
        gbc.writeMem(0x16a0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2bfe);
        EXPECT(gbc.pc(), 0x16a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 031A
        gbc.setState(0x6aee, 0x15d9, 0x6570, 0xf878, 0xf4da, 0xd72a, 0x0, 0x0);
        gbc.writeMem(0x6aee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x15d9);
        EXPECT(gbc.pc(), 0x6aef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 031B
        gbc.setState(0x636d, 0x5a76, 0x20, 0xe18d, 0xace1, 0xa1eb, 0x0, 0x0);
        gbc.writeMem(0x636d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5a76);
        EXPECT(gbc.pc(), 0x636e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 031C
        gbc.setState(0x21ec, 0xf1a4, 0xc520, 0xb218, 0xa3b0, 0xe5b8, 0x1, 0x0);
        gbc.writeMem(0x21ec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf1a4);
        EXPECT(gbc.pc(), 0x21ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 031E
        gbc.setState(0x134b, 0x80b8, 0xfd0, 0x2a01, 0x1e74, 0x7d27, 0x0, 0x1);
        gbc.writeMem(0x134b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x80b8);
        EXPECT(gbc.pc(), 0x134c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0320
        gbc.setState(0xaea0, 0xe4ef, 0x73c0, 0x48b7, 0xb8eb, 0x451b, 0x0, 0x0);
        gbc.writeMem(0xaea0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe4ef);
        EXPECT(gbc.pc(), 0xaea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea0), 0x0);
        // 00 0321
        gbc.setState(0xd97b, 0x115d, 0x1de0, 0x749c, 0x5d1f, 0x12cc, 0x0, 0x1);
        gbc.writeMem(0xd97b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x115d);
        EXPECT(gbc.pc(), 0xd97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97b), 0x0);
        // 00 0322
        gbc.setState(0x27b0, 0x6d34, 0x1820, 0xedb, 0x3d6f, 0xa023, 0x1, 0x1);
        gbc.writeMem(0x27b0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6d34);
        EXPECT(gbc.pc(), 0x27b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0323
        gbc.setState(0xe33f, 0xeb83, 0xa20, 0xbf5a, 0x6902, 0x1abe, 0x1, 0x1);
        gbc.writeMem(0xe33f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xeb83);
        EXPECT(gbc.pc(), 0xe340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe33f), 0x0);
        // 00 0324
        gbc.setState(0x2994, 0xc6ba, 0x5270, 0x8198, 0xea36, 0x5b51, 0x1, 0x0);
        gbc.writeMem(0x2994, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc6ba);
        EXPECT(gbc.pc(), 0x2995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0325
        gbc.setState(0xaf09, 0x3a47, 0x4130, 0x241b, 0xc840, 0xe4e0, 0x0, 0x0);
        gbc.writeMem(0xaf09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3a47);
        EXPECT(gbc.pc(), 0xaf0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf09), 0x0);
        // 00 0326
        gbc.setState(0xb8ae, 0x34bb, 0x6240, 0x382, 0x6e99, 0x263e, 0x0, 0x0);
        gbc.writeMem(0xb8ae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x34bb);
        EXPECT(gbc.pc(), 0xb8af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ae), 0x0);
        // 00 0327
        gbc.setState(0x82d8, 0x20e9, 0x76d0, 0x117b, 0x882c, 0x35fa, 0x0, 0x1);
        gbc.writeMem(0x82d8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x20e9);
        EXPECT(gbc.pc(), 0x82d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d8), 0x0);
        // 00 0328
        gbc.setState(0x2c4, 0xc8b2, 0x1580, 0xa2b3, 0xed23, 0x70ff, 0x1, 0x0);
        gbc.writeMem(0x2c4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc8b2);
        EXPECT(gbc.pc(), 0x2c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0329
        gbc.setState(0x35b7, 0x1266, 0xa130, 0x858e, 0x7e52, 0xf72b, 0x1, 0x1);
        gbc.writeMem(0x35b7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1266);
        EXPECT(gbc.pc(), 0x35b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 032B
        gbc.setState(0x3f51, 0x661c, 0x7810, 0x6fd7, 0xbf13, 0xd49d, 0x0, 0x0);
        gbc.writeMem(0x3f51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x661c);
        EXPECT(gbc.pc(), 0x3f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 032C
        gbc.setState(0x3412, 0x2fb0, 0x2080, 0xf688, 0x2c50, 0x4254, 0x0, 0x0);
        gbc.writeMem(0x3412, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2fb0);
        EXPECT(gbc.pc(), 0x3413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 032D
        gbc.setState(0x4567, 0xf835, 0xeb60, 0x5dcf, 0x23f1, 0x3920, 0x0, 0x0);
        gbc.writeMem(0x4567, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf835);
        EXPECT(gbc.pc(), 0x4568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 032E
        gbc.setState(0x96cc, 0xb582, 0xc40, 0x7c05, 0x6ac2, 0x92a3, 0x0, 0x0);
        gbc.writeMem(0x96cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb582);
        EXPECT(gbc.pc(), 0x96cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96cc), 0x0);
        // 00 032F
        gbc.setState(0xe5a4, 0xd269, 0x3500, 0xc196, 0x7d14, 0x16fc, 0x0, 0x1);
        gbc.writeMem(0xe5a4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd269);
        EXPECT(gbc.pc(), 0xe5a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a4), 0x0);
        // 00 0330
        gbc.setState(0x244d, 0x7efd, 0xf000, 0x20e9, 0xf6a3, 0xee3f, 0x1, 0x1);
        gbc.writeMem(0x244d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7efd);
        EXPECT(gbc.pc(), 0x244e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0331
        gbc.setState(0xb68c, 0x7f0f, 0xa460, 0x6d4f, 0xea28, 0xbf6e, 0x1, 0x0);
        gbc.writeMem(0xb68c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7f0f);
        EXPECT(gbc.pc(), 0xb68d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb68c), 0x0);
        // 00 0332
        gbc.setState(0x6143, 0xba48, 0x4d90, 0x7d98, 0x4d11, 0xaae8, 0x1, 0x0);
        gbc.writeMem(0x6143, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xba48);
        EXPECT(gbc.pc(), 0x6144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0333
        gbc.setState(0xbbba, 0x3499, 0xce50, 0xb1a8, 0x88ca, 0xc78e, 0x1, 0x0);
        gbc.writeMem(0xbbba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3499);
        EXPECT(gbc.pc(), 0xbbbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbba), 0x0);
        // 00 0334
        gbc.setState(0x8e80, 0xe7e4, 0xe280, 0xec9c, 0xce7d, 0x7ddf, 0x0, 0x0);
        gbc.writeMem(0x8e80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe7e4);
        EXPECT(gbc.pc(), 0x8e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e80), 0x0);
        // 00 0335
        gbc.setState(0xef00, 0x3a18, 0x7630, 0xd0a1, 0xb18a, 0x5340, 0x0, 0x0);
        gbc.writeMem(0xef00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3a18);
        EXPECT(gbc.pc(), 0xef01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef00), 0x0);
        // 00 0336
        gbc.setState(0xbb7, 0x5392, 0x7590, 0xd1d2, 0xc14c, 0xa36d, 0x0, 0x0);
        gbc.writeMem(0xbb7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5392);
        EXPECT(gbc.pc(), 0xbb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0337
        gbc.setState(0x5595, 0xf5ab, 0x1600, 0x77b2, 0xc68c, 0x4785, 0x1, 0x0);
        gbc.writeMem(0x5595, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf5ab);
        EXPECT(gbc.pc(), 0x5596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0339
        gbc.setState(0xdf78, 0xcac3, 0x42b0, 0xbde3, 0x932f, 0x3766, 0x1, 0x1);
        gbc.writeMem(0xdf78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcac3);
        EXPECT(gbc.pc(), 0xdf79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf78), 0x0);
        // 00 033A
        gbc.setState(0xae30, 0xaf46, 0xdda0, 0x66d9, 0x67a8, 0xf537, 0x0, 0x0);
        gbc.writeMem(0xae30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xaf46);
        EXPECT(gbc.pc(), 0xae31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae30), 0x0);
        // 00 033B
        gbc.setState(0x2aaf, 0xf1a1, 0xb70, 0xcb7d, 0xf455, 0x9651, 0x1, 0x1);
        gbc.writeMem(0x2aaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf1a1);
        EXPECT(gbc.pc(), 0x2ab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 033C
        gbc.setState(0xd4ab, 0xc848, 0xf50, 0xe0fd, 0xfb48, 0x4fb4, 0x0, 0x0);
        gbc.writeMem(0xd4ab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc848);
        EXPECT(gbc.pc(), 0xd4ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ab), 0x0);
        // 00 033D
        gbc.setState(0x7793, 0x27c, 0xa140, 0x414, 0x34c5, 0x8c09, 0x1, 0x0);
        gbc.writeMem(0x7793, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x27c);
        EXPECT(gbc.pc(), 0x7794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 033E
        gbc.setState(0x9104, 0x453, 0x9920, 0x9adc, 0xa69b, 0x184e, 0x0, 0x1);
        gbc.writeMem(0x9104, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x453);
        EXPECT(gbc.pc(), 0x9105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9104), 0x0);
        // 00 033F
        gbc.setState(0x4aeb, 0x603, 0xd310, 0x2d53, 0x17d0, 0x7f2c, 0x0, 0x1);
        gbc.writeMem(0x4aeb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x603);
        EXPECT(gbc.pc(), 0x4aec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0340
        gbc.setState(0x1dca, 0xbe35, 0xed60, 0x1f74, 0xf35, 0x1afc, 0x1, 0x1);
        gbc.writeMem(0x1dca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbe35);
        EXPECT(gbc.pc(), 0x1dcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0341
        gbc.setState(0x1ace, 0x22ef, 0x14b0, 0x33c1, 0xbc, 0x669d, 0x1, 0x1);
        gbc.writeMem(0x1ace, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x22ef);
        EXPECT(gbc.pc(), 0x1acf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0342
        gbc.setState(0xbb44, 0xbd0f, 0x82b0, 0x24e3, 0xd065, 0x27b5, 0x1, 0x0);
        gbc.writeMem(0xbb44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbd0f);
        EXPECT(gbc.pc(), 0xbb45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb44), 0x0);
        // 00 0343
        gbc.setState(0x1a8d, 0x8050, 0xf000, 0x747e, 0xa96f, 0xa3b3, 0x1, 0x0);
        gbc.writeMem(0x1a8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8050);
        EXPECT(gbc.pc(), 0x1a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0344
        gbc.setState(0x634b, 0xf689, 0x360, 0x9e05, 0xcedb, 0x88d8, 0x1, 0x1);
        gbc.writeMem(0x634b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf689);
        EXPECT(gbc.pc(), 0x634c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0345
        gbc.setState(0xd3df, 0x55be, 0x7940, 0xe67a, 0xdbb2, 0x64e6, 0x0, 0x0);
        gbc.writeMem(0xd3df, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x55be);
        EXPECT(gbc.pc(), 0xd3e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3df), 0x0);
        // 00 0346
        gbc.setState(0x2c47, 0x28d, 0xe30, 0x6f0f, 0x503c, 0x821d, 0x1, 0x0);
        gbc.writeMem(0x2c47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x28d);
        EXPECT(gbc.pc(), 0x2c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0347
        gbc.setState(0x60f9, 0xda79, 0x5130, 0x31aa, 0x4fbe, 0x6fac, 0x0, 0x0);
        gbc.writeMem(0x60f9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xda79);
        EXPECT(gbc.pc(), 0x60fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0348
        gbc.setState(0x7818, 0xc31, 0xd480, 0x3c16, 0x927a, 0x1bca, 0x1, 0x0);
        gbc.writeMem(0x7818, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc31);
        EXPECT(gbc.pc(), 0x7819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0349
        gbc.setState(0x3fa1, 0x4d67, 0x3ae0, 0x9eb1, 0xc8dd, 0x257a, 0x1, 0x1);
        gbc.writeMem(0x3fa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4d67);
        EXPECT(gbc.pc(), 0x3fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 034A
        gbc.setState(0x4cfb, 0x4f41, 0xc3c0, 0x7778, 0x5bbd, 0xc754, 0x1, 0x1);
        gbc.writeMem(0x4cfb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4f41);
        EXPECT(gbc.pc(), 0x4cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 034C
        gbc.setState(0x9306, 0xaacc, 0x6830, 0x5b64, 0x8b32, 0xfaa7, 0x0, 0x0);
        gbc.writeMem(0x9306, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xaacc);
        EXPECT(gbc.pc(), 0x9307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9306), 0x0);
        // 00 034D
        gbc.setState(0xdcad, 0xcf6c, 0xdf60, 0x4467, 0x2389, 0x9dd3, 0x1, 0x1);
        gbc.writeMem(0xdcad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xcf6c);
        EXPECT(gbc.pc(), 0xdcae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcad), 0x0);
        // 00 034E
        gbc.setState(0xbe0d, 0x9ccb, 0xda40, 0x5743, 0xb432, 0xce28, 0x0, 0x1);
        gbc.writeMem(0xbe0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9ccb);
        EXPECT(gbc.pc(), 0xbe0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe0d), 0x0);
        // 00 034F
        gbc.setState(0xccc5, 0x2941, 0x1a0, 0xb955, 0xf476, 0x9636, 0x0, 0x1);
        gbc.writeMem(0xccc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2941);
        EXPECT(gbc.pc(), 0xccc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc5), 0x0);
        // 00 0350
        gbc.setState(0xbe4d, 0x9dac, 0x9b00, 0x7fa3, 0x9072, 0x810c, 0x0, 0x1);
        gbc.writeMem(0xbe4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9dac);
        EXPECT(gbc.pc(), 0xbe4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe4d), 0x0);
        // 00 0351
        gbc.setState(0x7efe, 0xa49d, 0x6c10, 0x6c1a, 0xeeb, 0xede6, 0x0, 0x0);
        gbc.writeMem(0x7efe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa49d);
        EXPECT(gbc.pc(), 0x7eff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0352
        gbc.setState(0x76dd, 0xb888, 0xe70, 0x1e25, 0x1d2b, 0xec3f, 0x0, 0x1);
        gbc.writeMem(0x76dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb888);
        EXPECT(gbc.pc(), 0x76de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0353
        gbc.setState(0x9d81, 0xd082, 0x1730, 0x33af, 0xa699, 0xb530, 0x1, 0x1);
        gbc.writeMem(0x9d81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd082);
        EXPECT(gbc.pc(), 0x9d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d81), 0x0);
        // 00 0354
        gbc.setState(0x4727, 0x7323, 0xac60, 0xdd77, 0xceff, 0x7180, 0x1, 0x1);
        gbc.writeMem(0x4727, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7323);
        EXPECT(gbc.pc(), 0x4728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0355
        gbc.setState(0xb0, 0xf15f, 0x4ed0, 0xe6a, 0x2562, 0xdd74, 0x0, 0x1);
        gbc.writeMem(0xb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf15f);
        EXPECT(gbc.pc(), 0xb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0356
        gbc.setState(0xa20e, 0x28b9, 0x5540, 0x13f4, 0x813f, 0x7809, 0x1, 0x0);
        gbc.writeMem(0xa20e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x28b9);
        EXPECT(gbc.pc(), 0xa20f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20e), 0x0);
        // 00 0357
        gbc.setState(0x5abd, 0x5776, 0x76a0, 0x4092, 0x1f60, 0xbcdb, 0x0, 0x1);
        gbc.writeMem(0x5abd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5776);
        EXPECT(gbc.pc(), 0x5abe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0358
        gbc.setState(0xad7d, 0xe755, 0xc010, 0x90a, 0xa0a5, 0x3c15, 0x1, 0x0);
        gbc.writeMem(0xad7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe755);
        EXPECT(gbc.pc(), 0xad7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad7d), 0x0);
        // 00 0359
        gbc.setState(0x74b8, 0xc93f, 0x4280, 0x7bbb, 0xb9b0, 0xdcde, 0x1, 0x0);
        gbc.writeMem(0x74b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc93f);
        EXPECT(gbc.pc(), 0x74b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 035A
        gbc.setState(0x3197, 0x3975, 0x5a70, 0x1310, 0xd949, 0x1d86, 0x0, 0x0);
        gbc.writeMem(0x3197, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3975);
        EXPECT(gbc.pc(), 0x3198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 035B
        gbc.setState(0xbeb8, 0x75b, 0xc2c0, 0xcabe, 0x1cb3, 0xe849, 0x0, 0x1);
        gbc.writeMem(0xbeb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x75b);
        EXPECT(gbc.pc(), 0xbeb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb8), 0x0);
        // 00 035C
        gbc.setState(0x500d, 0x5a80, 0x1520, 0x4980, 0x11a6, 0x241a, 0x1, 0x0);
        gbc.writeMem(0x500d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5a80);
        EXPECT(gbc.pc(), 0x500e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 035D
        gbc.setState(0x1d66, 0x5588, 0x89b0, 0x954e, 0x7fc0, 0x848c, 0x0, 0x0);
        gbc.writeMem(0x1d66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5588);
        EXPECT(gbc.pc(), 0x1d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 035E
        gbc.setState(0xacbf, 0x8455, 0x9b0, 0x7247, 0xc470, 0x818c, 0x1, 0x0);
        gbc.writeMem(0xacbf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8455);
        EXPECT(gbc.pc(), 0xacc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacbf), 0x0);
        // 00 035F
        gbc.setState(0x7298, 0x6ad6, 0x9290, 0x310a, 0xae10, 0x4ffd, 0x1, 0x1);
        gbc.writeMem(0x7298, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6ad6);
        EXPECT(gbc.pc(), 0x7299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0360
        gbc.setState(0x3f54, 0x533, 0xc690, 0xd7f3, 0xea5, 0x3561, 0x0, 0x0);
        gbc.writeMem(0x3f54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x533);
        EXPECT(gbc.pc(), 0x3f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0361
        gbc.setState(0x576c, 0x2b04, 0x290, 0xfa79, 0xd020, 0x4744, 0x1, 0x0);
        gbc.writeMem(0x576c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2b04);
        EXPECT(gbc.pc(), 0x576d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0362
        gbc.setState(0x5589, 0x7508, 0xff40, 0x600c, 0x638d, 0xba7c, 0x0, 0x0);
        gbc.writeMem(0x5589, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7508);
        EXPECT(gbc.pc(), 0x558a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0363
        gbc.setState(0x6686, 0xbbf5, 0x1910, 0x9e98, 0xd211, 0x206b, 0x1, 0x0);
        gbc.writeMem(0x6686, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbbf5);
        EXPECT(gbc.pc(), 0x6687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0364
        gbc.setState(0xd1db, 0x2a09, 0xe5f0, 0xc526, 0x9a85, 0xdf21, 0x0, 0x1);
        gbc.writeMem(0xd1db, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2a09);
        EXPECT(gbc.pc(), 0xd1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1db), 0x0);
        // 00 0365
        gbc.setState(0x1c62, 0x548b, 0xfdb0, 0xf9de, 0xcffa, 0x47dc, 0x1, 0x0);
        gbc.writeMem(0x1c62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x548b);
        EXPECT(gbc.pc(), 0x1c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0366
        gbc.setState(0x481c, 0xc50e, 0x94b0, 0x7f8a, 0x14f9, 0xe029, 0x0, 0x0);
        gbc.writeMem(0x481c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc50e);
        EXPECT(gbc.pc(), 0x481d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0367
        gbc.setState(0xe93f, 0xe636, 0x4be0, 0x5ec9, 0xcbea, 0x664d, 0x1, 0x0);
        gbc.writeMem(0xe93f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe636);
        EXPECT(gbc.pc(), 0xe940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93f), 0x0);
        // 00 0368
        gbc.setState(0x61f4, 0xddf5, 0xb810, 0x8afa, 0xdf10, 0x9cfc, 0x0, 0x0);
        gbc.writeMem(0x61f4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xddf5);
        EXPECT(gbc.pc(), 0x61f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0369
        gbc.setState(0x557, 0xe596, 0xb850, 0x4c10, 0x14d1, 0xa76e, 0x0, 0x1);
        gbc.writeMem(0x557, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe596);
        EXPECT(gbc.pc(), 0x558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 036A
        gbc.setState(0x492d, 0x466f, 0x780, 0x139e, 0xc1db, 0x9da0, 0x1, 0x1);
        gbc.writeMem(0x492d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x466f);
        EXPECT(gbc.pc(), 0x492e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 036B
        gbc.setState(0x68a8, 0x3b33, 0x5a70, 0x2590, 0xc058, 0x4208, 0x1, 0x0);
        gbc.writeMem(0x68a8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3b33);
        EXPECT(gbc.pc(), 0x68a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 036C
        gbc.setState(0x5b20, 0x3d87, 0xc0d0, 0x651b, 0x8b54, 0x5396, 0x1, 0x0);
        gbc.writeMem(0x5b20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3d87);
        EXPECT(gbc.pc(), 0x5b21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 036D
        gbc.setState(0x9b34, 0x2a62, 0xd9b0, 0xa63c, 0x294b, 0xc2f7, 0x1, 0x0);
        gbc.writeMem(0x9b34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2a62);
        EXPECT(gbc.pc(), 0x9b35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b34), 0x0);
        // 00 036E
        gbc.setState(0xd9d1, 0x7019, 0xfd60, 0xa96, 0xdff6, 0x2743, 0x1, 0x0);
        gbc.writeMem(0xd9d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7019);
        EXPECT(gbc.pc(), 0xd9d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d1), 0x0);
        // 00 036F
        gbc.setState(0xe01f, 0xbb9f, 0x2030, 0x3958, 0x7314, 0xaf17, 0x1, 0x1);
        gbc.writeMem(0xe01f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbb9f);
        EXPECT(gbc.pc(), 0xe020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe01f), 0x0);
        // 00 0370
        gbc.setState(0x2392, 0x5c2a, 0x340, 0x5ed5, 0x21b3, 0xa820, 0x1, 0x0);
        gbc.writeMem(0x2392, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5c2a);
        EXPECT(gbc.pc(), 0x2393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0371
        gbc.setState(0x82c1, 0x67fd, 0x1160, 0x384a, 0x30ff, 0x227c, 0x0, 0x1);
        gbc.writeMem(0x82c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x67fd);
        EXPECT(gbc.pc(), 0x82c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c1), 0x0);
        // 00 0372
        gbc.setState(0x92af, 0xd672, 0xffd0, 0xacae, 0xc97, 0xe6dd, 0x1, 0x1);
        gbc.writeMem(0x92af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd672);
        EXPECT(gbc.pc(), 0x92b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92af), 0x0);
        // 00 0373
        gbc.setState(0x4895, 0x403d, 0x2a30, 0x297a, 0x1b7d, 0x371a, 0x0, 0x1);
        gbc.writeMem(0x4895, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x403d);
        EXPECT(gbc.pc(), 0x4896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0375
        gbc.setState(0x73d2, 0xd83b, 0x6770, 0x3397, 0x2172, 0xf78f, 0x1, 0x1);
        gbc.writeMem(0x73d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd83b);
        EXPECT(gbc.pc(), 0x73d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0376
        gbc.setState(0x7386, 0xd1c4, 0xa1c0, 0xd437, 0x36bc, 0x745a, 0x0, 0x0);
        gbc.writeMem(0x7386, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd1c4);
        EXPECT(gbc.pc(), 0x7387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0377
        gbc.setState(0xb99f, 0xb604, 0xdce0, 0x4809, 0x994a, 0x9146, 0x1, 0x0);
        gbc.writeMem(0xb99f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb604);
        EXPECT(gbc.pc(), 0xb9a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99f), 0x0);
        // 00 0378
        gbc.setState(0x66d1, 0x5021, 0x4320, 0xf3d2, 0xd5a9, 0x91a6, 0x1, 0x0);
        gbc.writeMem(0x66d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5021);
        EXPECT(gbc.pc(), 0x66d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0379
        gbc.setState(0xdcf6, 0x3f5d, 0xe4d0, 0x65f2, 0xc5f0, 0x789d, 0x0, 0x1);
        gbc.writeMem(0xdcf6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3f5d);
        EXPECT(gbc.pc(), 0xdcf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf6), 0x0);
        // 00 037A
        gbc.setState(0x2301, 0x7f8c, 0x8710, 0xb8cf, 0x8e18, 0x4b80, 0x1, 0x0);
        gbc.writeMem(0x2301, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7f8c);
        EXPECT(gbc.pc(), 0x2302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 037B
        gbc.setState(0xd4db, 0x8278, 0x94c0, 0xc688, 0x5ee2, 0x8482, 0x0, 0x1);
        gbc.writeMem(0xd4db, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8278);
        EXPECT(gbc.pc(), 0xd4dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4db), 0x0);
        // 00 037C
        gbc.setState(0xd03b, 0x711d, 0xc290, 0xecae, 0x2fb, 0x8c4b, 0x1, 0x0);
        gbc.writeMem(0xd03b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x711d);
        EXPECT(gbc.pc(), 0xd03c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd03b), 0x0);
        // 00 037D
        gbc.setState(0xa01f, 0x8768, 0x4aa0, 0xc3ff, 0x387a, 0xf8fc, 0x1, 0x1);
        gbc.writeMem(0xa01f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8768);
        EXPECT(gbc.pc(), 0xa020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa01f), 0x0);
        // 00 037F
        gbc.setState(0xbf73, 0x1926, 0xdcf0, 0x3754, 0x59c7, 0x1173, 0x1, 0x1);
        gbc.writeMem(0xbf73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1926);
        EXPECT(gbc.pc(), 0xbf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf73), 0x0);
        // 00 0380
        gbc.setState(0xabad, 0xe347, 0x6d90, 0x6d3d, 0x338b, 0x2f32, 0x0, 0x1);
        gbc.writeMem(0xabad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe347);
        EXPECT(gbc.pc(), 0xabae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabad), 0x0);
        // 00 0381
        gbc.setState(0x7498, 0xac69, 0x8f40, 0xda07, 0x87a1, 0x8796, 0x1, 0x1);
        gbc.writeMem(0x7498, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xac69);
        EXPECT(gbc.pc(), 0x7499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0382
        gbc.setState(0xb02b, 0xc492, 0x8b10, 0xe7a2, 0xbb79, 0x2a01, 0x1, 0x0);
        gbc.writeMem(0xb02b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc492);
        EXPECT(gbc.pc(), 0xb02c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb02b), 0x0);
        // 00 0383
        gbc.setState(0x914, 0x3081, 0xeec0, 0x34d9, 0xe62b, 0x88aa, 0x0, 0x0);
        gbc.writeMem(0x914, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3081);
        EXPECT(gbc.pc(), 0x915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0384
        gbc.setState(0x6427, 0xe275, 0xbd90, 0xffc3, 0x1751, 0x99a9, 0x0, 0x0);
        gbc.writeMem(0x6427, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe275);
        EXPECT(gbc.pc(), 0x6428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0385
        gbc.setState(0x7865, 0x7094, 0xc0d0, 0xbb69, 0xaffa, 0x90c6, 0x1, 0x1);
        gbc.writeMem(0x7865, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7094);
        EXPECT(gbc.pc(), 0x7866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 0386
        gbc.setState(0x54de, 0x442a, 0xa900, 0xcd8b, 0x1535, 0x14db, 0x1, 0x1);
        gbc.writeMem(0x54de, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x442a);
        EXPECT(gbc.pc(), 0x54df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0387
        gbc.setState(0x29b6, 0x2f00, 0x4ec0, 0xeb11, 0xa2f, 0xe35c, 0x0, 0x1);
        gbc.writeMem(0x29b6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2f00);
        EXPECT(gbc.pc(), 0x29b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0388
        gbc.setState(0x11a6, 0x30a0, 0x9480, 0x6b4c, 0x730, 0xe8c4, 0x0, 0x1);
        gbc.writeMem(0x11a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x30a0);
        EXPECT(gbc.pc(), 0x11a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 0389
        gbc.setState(0x46db, 0x8bee, 0x34b0, 0xcc3b, 0x8638, 0xce3d, 0x1, 0x1);
        gbc.writeMem(0x46db, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8bee);
        EXPECT(gbc.pc(), 0x46dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 038B
        gbc.setState(0x2f55, 0x9b2d, 0x86f0, 0x4f3a, 0x3091, 0x6d0a, 0x1, 0x0);
        gbc.writeMem(0x2f55, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9b2d);
        EXPECT(gbc.pc(), 0x2f56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 038C
        gbc.setState(0xcc3b, 0xd05f, 0x2cb0, 0x2ab6, 0x7119, 0xa43c, 0x1, 0x0);
        gbc.writeMem(0xcc3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd05f);
        EXPECT(gbc.pc(), 0xcc3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3b), 0x0);
        // 00 038D
        gbc.setState(0x7fa1, 0xb806, 0x1ce0, 0x812d, 0x824b, 0x3b8b, 0x1, 0x0);
        gbc.writeMem(0x7fa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb806);
        EXPECT(gbc.pc(), 0x7fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 038E
        gbc.setState(0xaa31, 0x50f2, 0xe60, 0x413c, 0x60fc, 0xe333, 0x0, 0x1);
        gbc.writeMem(0xaa31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x50f2);
        EXPECT(gbc.pc(), 0xaa32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa31), 0x0);
        // 00 038F
        gbc.setState(0x3305, 0x6b09, 0xf270, 0x6b47, 0x55ec, 0x2d25, 0x0, 0x0);
        gbc.writeMem(0x3305, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6b09);
        EXPECT(gbc.pc(), 0x3306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0390
        gbc.setState(0xe908, 0x6664, 0x9400, 0x59d8, 0x49e7, 0xcc2a, 0x0, 0x1);
        gbc.writeMem(0xe908, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6664);
        EXPECT(gbc.pc(), 0xe909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe908), 0x0);
        // 00 0391
        gbc.setState(0x52b1, 0xe34f, 0x8db0, 0x108f, 0xdc2e, 0x314e, 0x0, 0x1);
        gbc.writeMem(0x52b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe34f);
        EXPECT(gbc.pc(), 0x52b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 0393
        gbc.setState(0xa060, 0x18ad, 0x58f0, 0xbd28, 0x1ec8, 0xcd41, 0x1, 0x0);
        gbc.writeMem(0xa060, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x18ad);
        EXPECT(gbc.pc(), 0xa061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa060), 0x0);
        // 00 0394
        gbc.setState(0xed3, 0x1097, 0x1d20, 0xe695, 0xe813, 0xc36b, 0x0, 0x1);
        gbc.writeMem(0xed3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1097);
        EXPECT(gbc.pc(), 0xed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0395
        gbc.setState(0x24dc, 0xc880, 0x8a0, 0xca43, 0xc1bf, 0x27b6, 0x0, 0x1);
        gbc.writeMem(0x24dc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc880);
        EXPECT(gbc.pc(), 0x24dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0396
        gbc.setState(0x32db, 0xbb67, 0x6d60, 0xdc00, 0x443a, 0xcd85, 0x0, 0x1);
        gbc.writeMem(0x32db, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xbb67);
        EXPECT(gbc.pc(), 0x32dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 0397
        gbc.setState(0xa972, 0x2bad, 0xbb70, 0xf4e4, 0xd20, 0xb30, 0x1, 0x0);
        gbc.writeMem(0xa972, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2bad);
        EXPECT(gbc.pc(), 0xa973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa972), 0x0);
        // 00 0398
        gbc.setState(0x935a, 0xf2fb, 0x9a10, 0x5979, 0xa7a5, 0xc622, 0x1, 0x0);
        gbc.writeMem(0x935a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf2fb);
        EXPECT(gbc.pc(), 0x935b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x935a), 0x0);
        // 00 0399
        gbc.setState(0x661b, 0x2e61, 0x4ba0, 0x9ecb, 0xfdb9, 0xb3ed, 0x1, 0x1);
        gbc.writeMem(0x661b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2e61);
        EXPECT(gbc.pc(), 0x661c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 039A
        gbc.setState(0x6533, 0x1ac1, 0x4490, 0xb031, 0x3b9f, 0xa5dc, 0x1, 0x1);
        gbc.writeMem(0x6533, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1ac1);
        EXPECT(gbc.pc(), 0x6534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 039B
        gbc.setState(0x8145, 0x2b07, 0x1fb0, 0x8d6c, 0x58a1, 0xce64, 0x1, 0x0);
        gbc.writeMem(0x8145, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2b07);
        EXPECT(gbc.pc(), 0x8146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8145), 0x0);
        // 00 039C
        gbc.setState(0x578c, 0xdab5, 0x1940, 0x1775, 0xac0b, 0xe709, 0x1, 0x0);
        gbc.writeMem(0x578c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdab5);
        EXPECT(gbc.pc(), 0x578d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 039D
        gbc.setState(0xc09c, 0x7452, 0xbfa0, 0x16a0, 0x24d5, 0xbd11, 0x1, 0x0);
        gbc.writeMem(0xc09c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7452);
        EXPECT(gbc.pc(), 0xc09d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc09c), 0x0);
        // 00 039E
        gbc.setState(0xe7c4, 0x35c5, 0x3000, 0xc99b, 0x4921, 0xaaf7, 0x0, 0x0);
        gbc.writeMem(0xe7c4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x35c5);
        EXPECT(gbc.pc(), 0xe7c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c4), 0x0);
        // 00 039F
        gbc.setState(0x6e39, 0x39a5, 0xf310, 0x6b7, 0x8d36, 0x6b81, 0x0, 0x1);
        gbc.writeMem(0x6e39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x39a5);
        EXPECT(gbc.pc(), 0x6e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03A0
        gbc.setState(0xbb75, 0x55b0, 0x9970, 0x3639, 0x9e40, 0x752a, 0x0, 0x1);
        gbc.writeMem(0xbb75, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x55b0);
        EXPECT(gbc.pc(), 0xbb76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb75), 0x0);
        // 00 03A1
        gbc.setState(0x76c0, 0x2270, 0x5970, 0x7ff2, 0xbde6, 0xe2a, 0x1, 0x1);
        gbc.writeMem(0x76c0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2270);
        EXPECT(gbc.pc(), 0x76c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 03A2
        gbc.setState(0x5f1a, 0x7c54, 0x7620, 0xb31d, 0xac59, 0x2ce0, 0x1, 0x0);
        gbc.writeMem(0x5f1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7c54);
        EXPECT(gbc.pc(), 0x5f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 03A3
        gbc.setState(0xa229, 0xd86b, 0xfe90, 0x8262, 0x5ed0, 0xf799, 0x0, 0x0);
        gbc.writeMem(0xa229, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd86b);
        EXPECT(gbc.pc(), 0xa22a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa229), 0x0);
        // 00 03A4
        gbc.setState(0x34cc, 0xb39c, 0xb470, 0x4b5d, 0x52d7, 0xf558, 0x0, 0x0);
        gbc.writeMem(0x34cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb39c);
        EXPECT(gbc.pc(), 0x34cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 03A5
        gbc.setState(0x595c, 0xf271, 0x1400, 0x69b3, 0x365f, 0x62c7, 0x1, 0x0);
        gbc.writeMem(0x595c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf271);
        EXPECT(gbc.pc(), 0x595d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 03A6
        gbc.setState(0x3b64, 0xc537, 0xb560, 0x1130, 0x3ae4, 0x113a, 0x1, 0x0);
        gbc.writeMem(0x3b64, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc537);
        EXPECT(gbc.pc(), 0x3b65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 03A7
        gbc.setState(0x175d, 0xdea0, 0xf040, 0x4bbc, 0x4c79, 0x21da, 0x0, 0x1);
        gbc.writeMem(0x175d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdea0);
        EXPECT(gbc.pc(), 0x175e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 03A8
        gbc.setState(0x3196, 0xf1f2, 0x6e90, 0xab0b, 0xf428, 0x1a38, 0x0, 0x1);
        gbc.writeMem(0x3196, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf1f2);
        EXPECT(gbc.pc(), 0x3197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03A9
        gbc.setState(0x3aa1, 0xba4b, 0x130, 0xb3dc, 0x36b7, 0xe4f5, 0x0, 0x0);
        gbc.writeMem(0x3aa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xba4b);
        EXPECT(gbc.pc(), 0x3aa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 03AA
        gbc.setState(0x2f9e, 0xd213, 0x7730, 0xdf3e, 0x4fe2, 0xb62f, 0x0, 0x1);
        gbc.writeMem(0x2f9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd213);
        EXPECT(gbc.pc(), 0x2f9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 03AB
        gbc.setState(0x72a0, 0xad40, 0xe110, 0x39fb, 0x87ff, 0xf3ac, 0x1, 0x1);
        gbc.writeMem(0x72a0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xad40);
        EXPECT(gbc.pc(), 0x72a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03AC
        gbc.setState(0x647a, 0x6755, 0xb7b0, 0xbe45, 0xafed, 0xa438, 0x1, 0x1);
        gbc.writeMem(0x647a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6755);
        EXPECT(gbc.pc(), 0x647b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 03AD
        gbc.setState(0x52ac, 0x1634, 0x8f30, 0xe06a, 0xf3f0, 0xd72, 0x0, 0x1);
        gbc.writeMem(0x52ac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1634);
        EXPECT(gbc.pc(), 0x52ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 03AE
        gbc.setState(0x7365, 0xe8bf, 0x620, 0xc355, 0xc4f6, 0x2b90, 0x0, 0x0);
        gbc.writeMem(0x7365, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe8bf);
        EXPECT(gbc.pc(), 0x7366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 03AF
        gbc.setState(0x53dd, 0x5724, 0x350, 0xc418, 0xc99e, 0x59e5, 0x1, 0x1);
        gbc.writeMem(0x53dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5724);
        EXPECT(gbc.pc(), 0x53de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03B0
        gbc.setState(0x10e1, 0xece8, 0x63c0, 0x6aa9, 0x164a, 0x6cce, 0x1, 0x1);
        gbc.writeMem(0x10e1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xece8);
        EXPECT(gbc.pc(), 0x10e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 03B1
        gbc.setState(0xae5b, 0xadd5, 0xd0b0, 0x5f5b, 0xe1ee, 0x640e, 0x0, 0x1);
        gbc.writeMem(0xae5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xadd5);
        EXPECT(gbc.pc(), 0xae5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5b), 0x0);
        // 00 03B2
        gbc.setState(0xef9, 0x25e0, 0x6010, 0x1734, 0xb811, 0xa232, 0x1, 0x1);
        gbc.writeMem(0xef9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x25e0);
        EXPECT(gbc.pc(), 0xefa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03B3
        gbc.setState(0x7c4d, 0xbf22, 0x56e0, 0xaa91, 0x1f25, 0x3e9d, 0x1, 0x1);
        gbc.writeMem(0x7c4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xbf22);
        EXPECT(gbc.pc(), 0x7c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 03B4
        gbc.setState(0xba03, 0x44a2, 0x8c70, 0xb9f9, 0x39d5, 0x908c, 0x0, 0x0);
        gbc.writeMem(0xba03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x44a2);
        EXPECT(gbc.pc(), 0xba04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba03), 0x0);
        // 00 03B5
        gbc.setState(0xab4f, 0x4d99, 0x4c60, 0xabf7, 0x68d, 0xf7e3, 0x1, 0x1);
        gbc.writeMem(0xab4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4d99);
        EXPECT(gbc.pc(), 0xab50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab4f), 0x0);
        // 00 03B6
        gbc.setState(0xc2d7, 0x47a6, 0x61f0, 0x348f, 0xeb65, 0xc27, 0x1, 0x0);
        gbc.writeMem(0xc2d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x47a6);
        EXPECT(gbc.pc(), 0xc2d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d7), 0x0);
        // 00 03B7
        gbc.setState(0x90ec, 0x2920, 0xe830, 0x5776, 0x91c3, 0xd997, 0x1, 0x0);
        gbc.writeMem(0x90ec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2920);
        EXPECT(gbc.pc(), 0x90ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ec), 0x0);
        // 00 03B8
        gbc.setState(0x8506, 0x7df9, 0x35b0, 0x465a, 0x4e03, 0xa3e3, 0x0, 0x0);
        gbc.writeMem(0x8506, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7df9);
        EXPECT(gbc.pc(), 0x8507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8506), 0x0);
        // 00 03B9
        gbc.setState(0xbe13, 0xfd06, 0x9a20, 0xa92, 0x46f, 0x91b0, 0x0, 0x0);
        gbc.writeMem(0xbe13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfd06);
        EXPECT(gbc.pc(), 0xbe14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe13), 0x0);
        // 00 03BA
        gbc.setState(0xdf38, 0x7a26, 0x9670, 0xacc, 0x76c1, 0xca5, 0x1, 0x1);
        gbc.writeMem(0xdf38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7a26);
        EXPECT(gbc.pc(), 0xdf39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf38), 0x0);
        // 00 03BB
        gbc.setState(0x57bf, 0x8b9, 0x3ea0, 0x19ec, 0xa00c, 0x8b65, 0x1, 0x0);
        gbc.writeMem(0x57bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8b9);
        EXPECT(gbc.pc(), 0x57c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 03BC
        gbc.setState(0xd719, 0x653c, 0x6850, 0x980a, 0x1a45, 0xb706, 0x0, 0x1);
        gbc.writeMem(0xd719, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x653c);
        EXPECT(gbc.pc(), 0xd71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd719), 0x0);
        // 00 03BD
        gbc.setState(0xce5f, 0x6b5b, 0xe90, 0xf403, 0x6c95, 0x19f9, 0x0, 0x0);
        gbc.writeMem(0xce5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6b5b);
        EXPECT(gbc.pc(), 0xce60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce5f), 0x0);
        // 00 03BE
        gbc.setState(0x1215, 0x39fc, 0x1a80, 0x9202, 0x440c, 0xfb13, 0x1, 0x1);
        gbc.writeMem(0x1215, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x39fc);
        EXPECT(gbc.pc(), 0x1216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 03BF
        gbc.setState(0x54af, 0x51c9, 0x6020, 0xdb68, 0x1419, 0xcaa0, 0x0, 0x0);
        gbc.writeMem(0x54af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x51c9);
        EXPECT(gbc.pc(), 0x54b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 03C0
        gbc.setState(0x382, 0xf53e, 0x5a80, 0x1f79, 0x61de, 0x50ca, 0x1, 0x1);
        gbc.writeMem(0x382, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf53e);
        EXPECT(gbc.pc(), 0x383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 03C1
        gbc.setState(0x519, 0x414c, 0x2990, 0x9491, 0x8fec, 0xceba, 0x1, 0x0);
        gbc.writeMem(0x519, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x414c);
        EXPECT(gbc.pc(), 0x51a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03C2
        gbc.setState(0xc178, 0x8ff0, 0x4210, 0x579c, 0xbd20, 0x3537, 0x1, 0x0);
        gbc.writeMem(0xc178, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8ff0);
        EXPECT(gbc.pc(), 0xc179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc178), 0x0);
        // 00 03C3
        gbc.setState(0x9bbe, 0x695, 0xdc00, 0x836f, 0x2d79, 0x7d88, 0x1, 0x0);
        gbc.writeMem(0x9bbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x695);
        EXPECT(gbc.pc(), 0x9bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bbe), 0x0);
        // 00 03C4
        gbc.setState(0x1077, 0xa999, 0xc50, 0xb434, 0x6167, 0xa0e4, 0x1, 0x0);
        gbc.writeMem(0x1077, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa999);
        EXPECT(gbc.pc(), 0x1078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03C5
        gbc.setState(0xd6d7, 0x35e, 0x1620, 0xdf7e, 0x25b2, 0x8629, 0x0, 0x0);
        gbc.writeMem(0xd6d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x35e);
        EXPECT(gbc.pc(), 0xd6d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d7), 0x0);
        // 00 03C6
        gbc.setState(0x90d2, 0xc6bc, 0xfca0, 0xc347, 0x9038, 0xde47, 0x0, 0x1);
        gbc.writeMem(0x90d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc6bc);
        EXPECT(gbc.pc(), 0x90d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d2), 0x0);
        // 00 03C7
        gbc.setState(0x85e2, 0x7ead, 0xe660, 0x5606, 0xd506, 0xe2f7, 0x1, 0x0);
        gbc.writeMem(0x85e2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7ead);
        EXPECT(gbc.pc(), 0x85e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85e2), 0x0);
        // 00 03C8
        gbc.setState(0xd32c, 0x50a3, 0xf3f0, 0x5673, 0x58d5, 0xff95, 0x1, 0x0);
        gbc.writeMem(0xd32c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x50a3);
        EXPECT(gbc.pc(), 0xd32d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32c), 0x0);
        // 00 03C9
        gbc.setState(0xa209, 0x1c71, 0x9d20, 0xaa03, 0x49b0, 0x876, 0x1, 0x1);
        gbc.writeMem(0xa209, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1c71);
        EXPECT(gbc.pc(), 0xa20a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa209), 0x0);
        // 00 03CA
        gbc.setState(0x43a4, 0xf642, 0xa0a0, 0xbcb3, 0xe6cf, 0xf7a9, 0x0, 0x0);
        gbc.writeMem(0x43a4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf642);
        EXPECT(gbc.pc(), 0x43a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 03CC
        gbc.setState(0x40d2, 0x599f, 0xa690, 0x5907, 0x342b, 0xb404, 0x0, 0x1);
        gbc.writeMem(0x40d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x599f);
        EXPECT(gbc.pc(), 0x40d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03CD
        gbc.setState(0x44d6, 0x8d74, 0x6c90, 0x74b0, 0x4c50, 0x3cb6, 0x0, 0x0);
        gbc.writeMem(0x44d6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8d74);
        EXPECT(gbc.pc(), 0x44d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03CE
        gbc.setState(0x7bbf, 0x63cf, 0x5d90, 0xeadc, 0xc2a0, 0x17d0, 0x0, 0x0);
        gbc.writeMem(0x7bbf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x63cf);
        EXPECT(gbc.pc(), 0x7bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03CF
        gbc.setState(0x7776, 0xcca, 0xefd0, 0x351, 0xc7ee, 0xbd13, 0x0, 0x1);
        gbc.writeMem(0x7776, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xcca);
        EXPECT(gbc.pc(), 0x7777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03D1
        gbc.setState(0x7de4, 0x60f2, 0xfb60, 0xb1c, 0xa87d, 0x30c5, 0x0, 0x1);
        gbc.writeMem(0x7de4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x60f2);
        EXPECT(gbc.pc(), 0x7de5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 03D2
        gbc.setState(0x3efd, 0xbd5c, 0x45d0, 0xd97a, 0x2355, 0xda4b, 0x1, 0x0);
        gbc.writeMem(0x3efd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbd5c);
        EXPECT(gbc.pc(), 0x3efe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03D3
        gbc.setState(0xa38f, 0x88a8, 0xf6d0, 0x1010, 0x29b1, 0xdea8, 0x0, 0x0);
        gbc.writeMem(0xa38f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x88a8);
        EXPECT(gbc.pc(), 0xa390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa38f), 0x0);
        // 00 03D4
        gbc.setState(0x6833, 0xe8da, 0xc080, 0x523f, 0xd635, 0x51e, 0x1, 0x1);
        gbc.writeMem(0x6833, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe8da);
        EXPECT(gbc.pc(), 0x6834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 03D5
        gbc.setState(0x8531, 0xf8a2, 0xd240, 0xbf2d, 0xf592, 0x6544, 0x1, 0x1);
        gbc.writeMem(0x8531, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf8a2);
        EXPECT(gbc.pc(), 0x8532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8531), 0x0);
        // 00 03D7
        gbc.setState(0xcde5, 0x1ab7, 0x35d0, 0x93cb, 0x7b75, 0xdb85, 0x1, 0x0);
        gbc.writeMem(0xcde5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1ab7);
        EXPECT(gbc.pc(), 0xcde6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde5), 0x0);
        // 00 03D8
        gbc.setState(0x7c60, 0xae91, 0x3f50, 0xfe10, 0xb6db, 0x106b, 0x1, 0x0);
        gbc.writeMem(0x7c60, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xae91);
        EXPECT(gbc.pc(), 0x7c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 00 03D9
        gbc.setState(0x8015, 0x1860, 0xc580, 0x59ae, 0xf063, 0x260b, 0x0, 0x1);
        gbc.writeMem(0x8015, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1860);
        EXPECT(gbc.pc(), 0x8016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8015), 0x0);
        // 00 03DA
        gbc.setState(0x9a2b, 0xbc2f, 0xc5a0, 0x43de, 0xfe7d, 0xb2c4, 0x0, 0x0);
        gbc.writeMem(0x9a2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbc2f);
        EXPECT(gbc.pc(), 0x9a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2b), 0x0);
        // 00 03DB
        gbc.setState(0xad1f, 0xee06, 0xd7d0, 0xf020, 0xd6b8, 0x1973, 0x0, 0x1);
        gbc.writeMem(0xad1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xee06);
        EXPECT(gbc.pc(), 0xad20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad1f), 0x0);
        // 00 03DC
        gbc.setState(0x9cc0, 0x3a84, 0xfbe0, 0x3d2e, 0xede4, 0x2a62, 0x1, 0x1);
        gbc.writeMem(0x9cc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3a84);
        EXPECT(gbc.pc(), 0x9cc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc0), 0x0);
        // 00 03DD
        gbc.setState(0x1ada, 0x9c37, 0xbb80, 0xd284, 0x7c1c, 0xa3d6, 0x0, 0x1);
        gbc.writeMem(0x1ada, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9c37);
        EXPECT(gbc.pc(), 0x1adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 03DE
        gbc.setState(0x9e4b, 0x477c, 0xe110, 0x83d8, 0xda03, 0x7096, 0x1, 0x1);
        gbc.writeMem(0x9e4b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x477c);
        EXPECT(gbc.pc(), 0x9e4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e4b), 0x0);
        // 00 03DF
        gbc.setState(0x42f, 0x1490, 0x7740, 0xeb3a, 0xba27, 0xee89, 0x0, 0x1);
        gbc.writeMem(0x42f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1490);
        EXPECT(gbc.pc(), 0x430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 00 03E0
        gbc.setState(0x3f22, 0x4a77, 0xb260, 0xb7a1, 0xfb99, 0x7863, 0x1, 0x0);
        gbc.writeMem(0x3f22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4a77);
        EXPECT(gbc.pc(), 0x3f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 03E1
        gbc.setState(0xcb18, 0x456f, 0x9df0, 0x2a80, 0x5f94, 0x771f, 0x1, 0x0);
        gbc.writeMem(0xcb18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x456f);
        EXPECT(gbc.pc(), 0xcb19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb18), 0x0);
        // 00 03E2
        gbc.setState(0xd0a7, 0x45f1, 0x90d0, 0x45be, 0xf6de, 0xebe9, 0x0, 0x1);
        gbc.writeMem(0xd0a7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x45f1);
        EXPECT(gbc.pc(), 0xd0a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a7), 0x0);
        // 00 03E3
        gbc.setState(0x2797, 0xc377, 0x9430, 0x1bfc, 0x5f01, 0x63fc, 0x0, 0x1);
        gbc.writeMem(0x2797, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc377);
        EXPECT(gbc.pc(), 0x2798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 03E4
        gbc.setState(0x6962, 0xd52, 0xba20, 0x9749, 0x9a75, 0x5007, 0x1, 0x1);
        gbc.writeMem(0x6962, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd52);
        EXPECT(gbc.pc(), 0x6963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 00 03E5
        gbc.setState(0x2327, 0x7572, 0x3cb0, 0x2f51, 0x7ed3, 0x8d3e, 0x1, 0x1);
        gbc.writeMem(0x2327, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7572);
        EXPECT(gbc.pc(), 0x2328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 00 03E7
        gbc.setState(0x1bbf, 0x637c, 0xd820, 0xb6a0, 0x5d7f, 0x86de, 0x0, 0x1);
        gbc.writeMem(0x1bbf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x637c);
        EXPECT(gbc.pc(), 0x1bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
