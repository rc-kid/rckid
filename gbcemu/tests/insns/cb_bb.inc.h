    TEST(gbcemu, opcode_cb_bb) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB BB 0000
        gbc.setState(0x576e, 0x2d16, 0x2b30, 0xa7ac, 0x7f97, 0xc4fe, 0x0, 0x0);
        gbc.writeMem(0x576e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2d16);
        EXPECT(gbc.pc(), 0x5770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0002
        gbc.setState(0xd9ce, 0xcfbf, 0xa770, 0xe019, 0x81aa, 0xdc34, 0x1, 0x1);
        gbc.writeMem(0xd9ce, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcfbf);
        EXPECT(gbc.pc(), 0xd9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ce), 0xcb);
        EXPECT(gbc.readMem(0xd9cf), 0xbb);
        // CB BB 0004
        gbc.setState(0x41f3, 0x42b3, 0x56b0, 0x6f9e, 0xdb13, 0x21eb, 0x0, 0x1);
        gbc.writeMem(0x41f3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x42b3);
        EXPECT(gbc.pc(), 0x41f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0005
        gbc.setState(0x77ac, 0x735c, 0x68d0, 0x5378, 0xb230, 0x9d48, 0x0, 0x1);
        gbc.writeMem(0x77ac, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x735c);
        EXPECT(gbc.pc(), 0x77ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0006
        gbc.setState(0x241c, 0xea6e, 0x83c0, 0xcf0f, 0xd61b, 0xf450, 0x1, 0x0);
        gbc.writeMem(0x241c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xea6e);
        EXPECT(gbc.pc(), 0x241e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0007
        gbc.setState(0x5b10, 0x7486, 0x1530, 0xca27, 0x9010, 0x5583, 0x1, 0x0);
        gbc.writeMem(0x5b10, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7486);
        EXPECT(gbc.pc(), 0x5b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0009
        gbc.setState(0xcdea, 0x9e9a, 0x2eb0, 0x8881, 0x6b86, 0x6461, 0x0, 0x0);
        gbc.writeMem(0xcdea, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9e9a);
        EXPECT(gbc.pc(), 0xcdec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdea), 0xcb);
        EXPECT(gbc.readMem(0xcdeb), 0xbb);
        // CB BB 000A
        gbc.setState(0x6002, 0x564c, 0x69a0, 0xf22a, 0x1d37, 0xb503, 0x1, 0x0);
        gbc.writeMem(0x6002, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x564c);
        EXPECT(gbc.pc(), 0x6004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 000B
        gbc.setState(0xd99b, 0xbea9, 0x18f0, 0x82f1, 0x7701, 0xc3f1, 0x0, 0x0);
        gbc.writeMem(0xd99b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbea9);
        EXPECT(gbc.pc(), 0xd99d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd99b), 0xcb);
        EXPECT(gbc.readMem(0xd99c), 0xbb);
        // CB BB 000D
        gbc.setState(0x4b36, 0x7577, 0xb4a0, 0x7c19, 0x97c2, 0x82c2, 0x1, 0x1);
        gbc.writeMem(0x4b36, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7577);
        EXPECT(gbc.pc(), 0x4b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 000E
        gbc.setState(0x2ee, 0xcc3a, 0x3660, 0x2bb2, 0x4807, 0x56a4, 0x1, 0x0);
        gbc.writeMem(0x2ee, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xcc3a);
        EXPECT(gbc.pc(), 0x2f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 000F
        gbc.setState(0xae08, 0x1226, 0x2d60, 0x5f99, 0xb667, 0x6e54, 0x1, 0x0);
        gbc.writeMem(0xae08, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1226);
        EXPECT(gbc.pc(), 0xae0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae08), 0xcb);
        EXPECT(gbc.readMem(0xae09), 0xbb);
        // CB BB 0010
        gbc.setState(0xbef4, 0xd831, 0x8f30, 0x43f7, 0x433a, 0x4454, 0x1, 0x0);
        gbc.writeMem(0xbef4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd831);
        EXPECT(gbc.pc(), 0xbef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef4), 0xcb);
        EXPECT(gbc.readMem(0xbef5), 0xbb);
        // CB BB 0012
        gbc.setState(0xac2e, 0x466f, 0xbac0, 0xbe4c, 0xed4a, 0xf104, 0x0, 0x0);
        gbc.writeMem(0xac2e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x466f);
        EXPECT(gbc.pc(), 0xac30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac2e), 0xcb);
        EXPECT(gbc.readMem(0xac2f), 0xbb);
        // CB BB 0013
        gbc.setState(0xa63e, 0x3684, 0x6aa0, 0xde9a, 0xdba2, 0x8c8d, 0x0, 0x0);
        gbc.writeMem(0xa63e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3684);
        EXPECT(gbc.pc(), 0xa640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa63e), 0xcb);
        EXPECT(gbc.readMem(0xa63f), 0xbb);
        // CB BB 0014
        gbc.setState(0x5304, 0xd7b4, 0xc570, 0xed34, 0x8bc1, 0xf891, 0x0, 0x1);
        gbc.writeMem(0x5304, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd7b4);
        EXPECT(gbc.pc(), 0x5306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0016
        gbc.setState(0xc79, 0x9565, 0xb5a0, 0xf72e, 0xf5f7, 0x2bb9, 0x0, 0x1);
        gbc.writeMem(0xc79, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9565);
        EXPECT(gbc.pc(), 0xc7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0017
        gbc.setState(0x6da1, 0xe3fd, 0xd150, 0xc479, 0xe7d7, 0xa58a, 0x1, 0x0);
        gbc.writeMem(0x6da1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe3fd);
        EXPECT(gbc.pc(), 0x6da3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0018
        gbc.setState(0x8322, 0x6180, 0xa1f0, 0x90d5, 0xaaf, 0x1b15, 0x0, 0x0);
        gbc.writeMem(0x8322, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6180);
        EXPECT(gbc.pc(), 0x8324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8322), 0xcb);
        EXPECT(gbc.readMem(0x8323), 0xbb);
        // CB BB 0019
        gbc.setState(0x953b, 0x95d3, 0xa610, 0x6b28, 0x184b, 0xe540, 0x0, 0x0);
        gbc.writeMem(0x953b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x95d3);
        EXPECT(gbc.pc(), 0x953d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x953b), 0xcb);
        EXPECT(gbc.readMem(0x953c), 0xbb);
        // CB BB 001A
        gbc.setState(0x3714, 0xdd15, 0x4b90, 0x92db, 0xf4d0, 0xed2b, 0x0, 0x0);
        gbc.writeMem(0x3714, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xdd15);
        EXPECT(gbc.pc(), 0x3716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 001B
        gbc.setState(0x42e6, 0x410a, 0x1710, 0x447f, 0x4666, 0x8a02, 0x1, 0x1);
        gbc.writeMem(0x42e6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x410a);
        EXPECT(gbc.pc(), 0x42e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 001C
        gbc.setState(0x9d63, 0x9e68, 0xa670, 0xabe5, 0xec0c, 0x181, 0x0, 0x1);
        gbc.writeMem(0x9d63, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9e68);
        EXPECT(gbc.pc(), 0x9d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d63), 0xcb);
        EXPECT(gbc.readMem(0x9d64), 0xbb);
        // CB BB 001D
        gbc.setState(0x4079, 0x25e8, 0xb570, 0xe7ec, 0x552, 0x87c3, 0x0, 0x1);
        gbc.writeMem(0x4079, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x25e8);
        EXPECT(gbc.pc(), 0x407b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 001E
        gbc.setState(0xa7f6, 0x5b0d, 0x8440, 0x225e, 0x17fa, 0xb21b, 0x1, 0x0);
        gbc.writeMem(0xa7f6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5b0d);
        EXPECT(gbc.pc(), 0xa7f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f6), 0xcb);
        EXPECT(gbc.readMem(0xa7f7), 0xbb);
        // CB BB 001F
        gbc.setState(0x9df6, 0xf305, 0x610, 0x5c9e, 0xcc41, 0xde93, 0x0, 0x0);
        gbc.writeMem(0x9df6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf305);
        EXPECT(gbc.pc(), 0x9df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df6), 0xcb);
        EXPECT(gbc.readMem(0x9df7), 0xbb);
        // CB BB 0020
        gbc.setState(0x4c0e, 0x65fe, 0x9430, 0xd55b, 0x367c, 0x287b, 0x0, 0x0);
        gbc.writeMem(0x4c0e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x65fe);
        EXPECT(gbc.pc(), 0x4c10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0021
        gbc.setState(0x538f, 0x63d3, 0xb150, 0xe48a, 0xa415, 0x9e26, 0x0, 0x1);
        gbc.writeMem(0x538f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x63d3);
        EXPECT(gbc.pc(), 0x5391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0022
        gbc.setState(0xabe3, 0x9865, 0xecf0, 0x2c8c, 0x8ea7, 0x216f, 0x1, 0x1);
        gbc.writeMem(0xabe3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9865);
        EXPECT(gbc.pc(), 0xabe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabe3), 0xcb);
        EXPECT(gbc.readMem(0xabe4), 0xbb);
        // CB BB 0023
        gbc.setState(0x20ac, 0x4734, 0xc8f0, 0xd921, 0xae32, 0x2ba4, 0x0, 0x0);
        gbc.writeMem(0x20ac, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4734);
        EXPECT(gbc.pc(), 0x20ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0024
        gbc.setState(0x8bef, 0xc23f, 0x4b80, 0xa6f9, 0x1609, 0x43bc, 0x1, 0x1);
        gbc.writeMem(0x8bef, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc23f);
        EXPECT(gbc.pc(), 0x8bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bef), 0xcb);
        EXPECT(gbc.readMem(0x8bf0), 0xbb);
        // CB BB 0025
        gbc.setState(0x2abd, 0x5669, 0x8bf0, 0xb1ec, 0x53b1, 0xd459, 0x1, 0x0);
        gbc.writeMem(0x2abd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5669);
        EXPECT(gbc.pc(), 0x2abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0026
        gbc.setState(0x7fbb, 0xd988, 0x3b00, 0x8cd1, 0x2cd2, 0xd829, 0x1, 0x0);
        gbc.writeMem(0x7fbb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd988);
        EXPECT(gbc.pc(), 0x7fbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0027
        gbc.setState(0x9c53, 0x6f3a, 0x4f40, 0xac67, 0x6caf, 0xb0a8, 0x0, 0x1);
        gbc.writeMem(0x9c53, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6f3a);
        EXPECT(gbc.pc(), 0x9c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c53), 0xcb);
        EXPECT(gbc.readMem(0x9c54), 0xbb);
        // CB BB 0028
        gbc.setState(0x12f6, 0x7e68, 0x4ae0, 0xbaf7, 0xab3d, 0x6735, 0x1, 0x1);
        gbc.writeMem(0x12f6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7e68);
        EXPECT(gbc.pc(), 0x12f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0029
        gbc.setState(0x4e05, 0x74ef, 0xf6b0, 0x7b26, 0x6aa1, 0x8e1a, 0x0, 0x1);
        gbc.writeMem(0x4e05, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x74ef);
        EXPECT(gbc.pc(), 0x4e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 002A
        gbc.setState(0xe819, 0xd757, 0x1b60, 0xafce, 0x4ded, 0x5545, 0x0, 0x1);
        gbc.writeMem(0xe819, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd757);
        EXPECT(gbc.pc(), 0xe81b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe819), 0xcb);
        EXPECT(gbc.readMem(0xe81a), 0xbb);
        // CB BB 002B
        gbc.setState(0x558d, 0x7663, 0xb2c0, 0x447f, 0xd781, 0xbc9b, 0x0, 0x1);
        gbc.writeMem(0x558d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7663);
        EXPECT(gbc.pc(), 0x558f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 002C
        gbc.setState(0xafa1, 0x2c45, 0xfe0, 0x37b2, 0xa1f4, 0xaa6c, 0x0, 0x1);
        gbc.writeMem(0xafa1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2c45);
        EXPECT(gbc.pc(), 0xafa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafa1), 0xcb);
        EXPECT(gbc.readMem(0xafa2), 0xbb);
        // CB BB 002D
        gbc.setState(0xe8e5, 0xb3f1, 0xbb20, 0x2ad1, 0x5c53, 0xb207, 0x1, 0x0);
        gbc.writeMem(0xe8e5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb3f1);
        EXPECT(gbc.pc(), 0xe8e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e5), 0xcb);
        EXPECT(gbc.readMem(0xe8e6), 0xbb);
        // CB BB 002E
        gbc.setState(0x8541, 0xb68d, 0x7800, 0x3718, 0x62b0, 0x7e8, 0x0, 0x0);
        gbc.writeMem(0x8541, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb68d);
        EXPECT(gbc.pc(), 0x8543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8541), 0xcb);
        EXPECT(gbc.readMem(0x8542), 0xbb);
        // CB BB 002F
        gbc.setState(0x80c1, 0x6d2, 0xf780, 0x67e4, 0x2956, 0xe16b, 0x1, 0x0);
        gbc.writeMem(0x80c1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6d2);
        EXPECT(gbc.pc(), 0x80c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c1), 0xcb);
        EXPECT(gbc.readMem(0x80c2), 0xbb);
        // CB BB 0030
        gbc.setState(0x5f33, 0x8243, 0xe90, 0xaddb, 0x92f1, 0x997e, 0x0, 0x0);
        gbc.writeMem(0x5f33, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8243);
        EXPECT(gbc.pc(), 0x5f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0032
        gbc.setState(0x25e, 0x9f5a, 0x9670, 0xb60e, 0x598f, 0xc376, 0x0, 0x1);
        gbc.writeMem(0x25e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9f5a);
        EXPECT(gbc.pc(), 0x260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0033
        gbc.setState(0x2e0d, 0xcfbd, 0xcbb0, 0x58f9, 0x7958, 0xac38, 0x0, 0x0);
        gbc.writeMem(0x2e0d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcfbd);
        EXPECT(gbc.pc(), 0x2e0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0034
        gbc.setState(0xed5d, 0x5ec2, 0xd780, 0x93b7, 0xc757, 0x9e62, 0x0, 0x0);
        gbc.writeMem(0xed5d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5ec2);
        EXPECT(gbc.pc(), 0xed5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed5d), 0xcb);
        EXPECT(gbc.readMem(0xed5e), 0xbb);
        // CB BB 0035
        gbc.setState(0x8644, 0xd8ae, 0x5430, 0x2e02, 0xf5d9, 0x9faa, 0x1, 0x0);
        gbc.writeMem(0x8644, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd8ae);
        EXPECT(gbc.pc(), 0x8646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8644), 0xcb);
        EXPECT(gbc.readMem(0x8645), 0xbb);
        // CB BB 0036
        gbc.setState(0x4ea8, 0xaa13, 0x7fa0, 0x4a10, 0x8fee, 0x6da4, 0x1, 0x1);
        gbc.writeMem(0x4ea8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xaa13);
        EXPECT(gbc.pc(), 0x4eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0037
        gbc.setState(0xeeb1, 0x6f3a, 0x8d40, 0x559a, 0x9dfe, 0xee39, 0x0, 0x0);
        gbc.writeMem(0xeeb1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6f3a);
        EXPECT(gbc.pc(), 0xeeb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb1), 0xcb);
        EXPECT(gbc.readMem(0xeeb2), 0xbb);
        // CB BB 0038
        gbc.setState(0x13e5, 0xea50, 0xc8f0, 0xd512, 0x33ec, 0x9b72, 0x0, 0x1);
        gbc.writeMem(0x13e5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xea50);
        EXPECT(gbc.pc(), 0x13e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0039
        gbc.setState(0x549e, 0x3fb5, 0xdef0, 0x8045, 0x32d, 0x7e91, 0x0, 0x1);
        gbc.writeMem(0x549e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3fb5);
        EXPECT(gbc.pc(), 0x54a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 003A
        gbc.setState(0xb9b4, 0xf558, 0xeef0, 0x7695, 0xdcbe, 0x9854, 0x0, 0x0);
        gbc.writeMem(0xb9b4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf558);
        EXPECT(gbc.pc(), 0xb9b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b4), 0xcb);
        EXPECT(gbc.readMem(0xb9b5), 0xbb);
        // CB BB 003B
        gbc.setState(0x2345, 0xd0c, 0x8ed0, 0x892f, 0x6e0a, 0x59bb, 0x1, 0x1);
        gbc.writeMem(0x2345, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd0c);
        EXPECT(gbc.pc(), 0x2347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 003C
        gbc.setState(0x92ba, 0x9f99, 0x4e00, 0x20a8, 0xadce, 0xcf08, 0x1, 0x0);
        gbc.writeMem(0x92ba, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9f99);
        EXPECT(gbc.pc(), 0x92bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ba), 0xcb);
        EXPECT(gbc.readMem(0x92bb), 0xbb);
        // CB BB 003D
        gbc.setState(0xe44e, 0x5a08, 0x3040, 0x890f, 0x6043, 0xa142, 0x0, 0x0);
        gbc.writeMem(0xe44e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5a08);
        EXPECT(gbc.pc(), 0xe450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe44e), 0xcb);
        EXPECT(gbc.readMem(0xe44f), 0xbb);
        // CB BB 003E
        gbc.setState(0x5ea8, 0x621d, 0xdb50, 0xf344, 0x77f3, 0x322a, 0x1, 0x1);
        gbc.writeMem(0x5ea8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x621d);
        EXPECT(gbc.pc(), 0x5eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 003F
        gbc.setState(0x5aea, 0xb10b, 0xd4b0, 0x1309, 0x5fa0, 0xeb03, 0x0, 0x0);
        gbc.writeMem(0x5aea, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb10b);
        EXPECT(gbc.pc(), 0x5aec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0040
        gbc.setState(0x64bb, 0x951c, 0xec00, 0x396d, 0xb7a0, 0x8b1c, 0x1, 0x1);
        gbc.writeMem(0x64bb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x951c);
        EXPECT(gbc.pc(), 0x64bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0041
        gbc.setState(0xa132, 0xe06b, 0x39f0, 0x7091, 0x47c0, 0xe0f3, 0x1, 0x0);
        gbc.writeMem(0xa132, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe06b);
        EXPECT(gbc.pc(), 0xa134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa132), 0xcb);
        EXPECT(gbc.readMem(0xa133), 0xbb);
        // CB BB 0043
        gbc.setState(0x7300, 0x9556, 0xffd0, 0xb9ba, 0x4283, 0xb91a, 0x1, 0x1);
        gbc.writeMem(0x7300, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9556);
        EXPECT(gbc.pc(), 0x7302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0044
        gbc.setState(0x64c0, 0xd0db, 0xbf10, 0xb69, 0x6be, 0x7824, 0x1, 0x0);
        gbc.writeMem(0x64c0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd0db);
        EXPECT(gbc.pc(), 0x64c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0045
        gbc.setState(0xef5b, 0x6164, 0xc380, 0xac32, 0xe3c, 0x47a, 0x0, 0x1);
        gbc.writeMem(0xef5b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6164);
        EXPECT(gbc.pc(), 0xef5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef5b), 0xcb);
        EXPECT(gbc.readMem(0xef5c), 0xbb);
        // CB BB 0046
        gbc.setState(0xec04, 0xea44, 0x7590, 0x88c7, 0xb539, 0xd72f, 0x0, 0x0);
        gbc.writeMem(0xec04, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xea44);
        EXPECT(gbc.pc(), 0xec06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec04), 0xcb);
        EXPECT(gbc.readMem(0xec05), 0xbb);
        // CB BB 0047
        gbc.setState(0x2022, 0xd27c, 0x41c0, 0xd1ed, 0xe16e, 0xd2c3, 0x1, 0x0);
        gbc.writeMem(0x2022, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd27c);
        EXPECT(gbc.pc(), 0x2024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0048
        gbc.setState(0x56b1, 0xaf56, 0xa5a0, 0x41c8, 0x5887, 0x7dbe, 0x0, 0x0);
        gbc.writeMem(0x56b1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xaf56);
        EXPECT(gbc.pc(), 0x56b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 004A
        gbc.setState(0x66ee, 0x6353, 0x3630, 0x2399, 0xa498, 0xcee4, 0x0, 0x1);
        gbc.writeMem(0x66ee, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6353);
        EXPECT(gbc.pc(), 0x66f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 004B
        gbc.setState(0x1ff9, 0xf017, 0x9030, 0xd9cb, 0x2025, 0xdbc, 0x1, 0x1);
        gbc.writeMem(0x1ff9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf017);
        EXPECT(gbc.pc(), 0x1ffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 004C
        gbc.setState(0x7b36, 0x26b8, 0x8e70, 0xf0f4, 0xb511, 0x6688, 0x1, 0x1);
        gbc.writeMem(0x7b36, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x26b8);
        EXPECT(gbc.pc(), 0x7b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 004D
        gbc.setState(0xc44f, 0x90bc, 0x33e0, 0xe629, 0x3105, 0x9a95, 0x1, 0x1);
        gbc.writeMem(0xc44f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x90bc);
        EXPECT(gbc.pc(), 0xc451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc44f), 0xcb);
        EXPECT(gbc.readMem(0xc450), 0xbb);
        // CB BB 004E
        gbc.setState(0xb7a0, 0xa5d7, 0xbcb0, 0x6119, 0xfa0a, 0x82d7, 0x1, 0x1);
        gbc.writeMem(0xb7a0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa5d7);
        EXPECT(gbc.pc(), 0xb7a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a0), 0xcb);
        EXPECT(gbc.readMem(0xb7a1), 0xbb);
        // CB BB 004F
        gbc.setState(0xbe9, 0x4263, 0xb830, 0x1a66, 0xceea, 0xbfe7, 0x0, 0x1);
        gbc.writeMem(0xbe9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4263);
        EXPECT(gbc.pc(), 0xbeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0050
        gbc.setState(0x5221, 0x6f98, 0x3170, 0x10e8, 0x238b, 0x4d94, 0x1, 0x0);
        gbc.writeMem(0x5221, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6f98);
        EXPECT(gbc.pc(), 0x5223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0051
        gbc.setState(0x3e1c, 0x6a8e, 0xe9e0, 0x7c4d, 0x1cbb, 0xa753, 0x1, 0x1);
        gbc.writeMem(0x3e1c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6a8e);
        EXPECT(gbc.pc(), 0x3e1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0052
        gbc.setState(0x482e, 0xef46, 0xa380, 0x7b98, 0x234f, 0x7539, 0x1, 0x0);
        gbc.writeMem(0x482e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xef46);
        EXPECT(gbc.pc(), 0x4830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0053
        gbc.setState(0x7e57, 0xdd70, 0xffd0, 0xfa4b, 0x211d, 0x6475, 0x1, 0x0);
        gbc.writeMem(0x7e57, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdd70);
        EXPECT(gbc.pc(), 0x7e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0054
        gbc.setState(0x834a, 0xc4b6, 0xac80, 0x3e0e, 0xfba7, 0x87f9, 0x1, 0x1);
        gbc.writeMem(0x834a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc4b6);
        EXPECT(gbc.pc(), 0x834c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x834a), 0xcb);
        EXPECT(gbc.readMem(0x834b), 0xbb);
        // CB BB 0055
        gbc.setState(0x8b7f, 0xed78, 0x50, 0xf379, 0x5250, 0xfca8, 0x1, 0x0);
        gbc.writeMem(0x8b7f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xed78);
        EXPECT(gbc.pc(), 0x8b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b7f), 0xcb);
        EXPECT(gbc.readMem(0x8b80), 0xbb);
        // CB BB 0057
        gbc.setState(0x96f, 0xcd7a, 0xc7f0, 0xf80f, 0x620b, 0x62da, 0x1, 0x0);
        gbc.writeMem(0x96f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcd7a);
        EXPECT(gbc.pc(), 0x971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0058
        gbc.setState(0x7ecf, 0x8312, 0xa830, 0x5a30, 0x9077, 0xddc5, 0x0, 0x0);
        gbc.writeMem(0x7ecf, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8312);
        EXPECT(gbc.pc(), 0x7ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0059
        gbc.setState(0xc6a7, 0x25fc, 0xf20, 0xc8e0, 0x648e, 0x94a4, 0x0, 0x0);
        gbc.writeMem(0xc6a7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x25fc);
        EXPECT(gbc.pc(), 0xc6a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a7), 0xcb);
        EXPECT(gbc.readMem(0xc6a8), 0xbb);
        // CB BB 005A
        gbc.setState(0xa0fb, 0xe751, 0x8820, 0x45ff, 0xa579, 0x781d, 0x1, 0x0);
        gbc.writeMem(0xa0fb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe751);
        EXPECT(gbc.pc(), 0xa0fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0fb), 0xcb);
        EXPECT(gbc.readMem(0xa0fc), 0xbb);
        // CB BB 005B
        gbc.setState(0xb55c, 0x340e, 0x4d10, 0x68b6, 0xcd46, 0x5d60, 0x1, 0x1);
        gbc.writeMem(0xb55c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x340e);
        EXPECT(gbc.pc(), 0xb55e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb55c), 0xcb);
        EXPECT(gbc.readMem(0xb55d), 0xbb);
        // CB BB 005C
        gbc.setState(0xcca5, 0xed01, 0xcea0, 0x70bf, 0x662c, 0xb2db, 0x0, 0x0);
        gbc.writeMem(0xcca5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xed01);
        EXPECT(gbc.pc(), 0xcca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcca5), 0xcb);
        EXPECT(gbc.readMem(0xcca6), 0xbb);
        // CB BB 005D
        gbc.setState(0xa6d6, 0xd31, 0xae20, 0xf513, 0x22df, 0xf58d, 0x1, 0x0);
        gbc.writeMem(0xa6d6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd31);
        EXPECT(gbc.pc(), 0xa6d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d6), 0xcb);
        EXPECT(gbc.readMem(0xa6d7), 0xbb);
        // CB BB 005E
        gbc.setState(0xe732, 0x324f, 0x8f30, 0x9f55, 0x7a0c, 0x38f9, 0x1, 0x1);
        gbc.writeMem(0xe732, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x324f);
        EXPECT(gbc.pc(), 0xe734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe732), 0xcb);
        EXPECT(gbc.readMem(0xe733), 0xbb);
        // CB BB 005F
        gbc.setState(0x3c92, 0x4a8c, 0xbf50, 0x4c54, 0xfc1b, 0x7725, 0x1, 0x1);
        gbc.writeMem(0x3c92, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4a8c);
        EXPECT(gbc.pc(), 0x3c94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0060
        gbc.setState(0xad93, 0xb5e7, 0xdf90, 0xe0e0, 0xfafa, 0x5dcf, 0x0, 0x1);
        gbc.writeMem(0xad93, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb5e7);
        EXPECT(gbc.pc(), 0xad95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad93), 0xcb);
        EXPECT(gbc.readMem(0xad94), 0xbb);
        // CB BB 0061
        gbc.setState(0x860b, 0x3b4a, 0x80e0, 0xd530, 0xb5c7, 0x5063, 0x1, 0x0);
        gbc.writeMem(0x860b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3b4a);
        EXPECT(gbc.pc(), 0x860d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860b), 0xcb);
        EXPECT(gbc.readMem(0x860c), 0xbb);
        // CB BB 0062
        gbc.setState(0x8859, 0xa5d0, 0x59d0, 0x9c8d, 0x161f, 0x143, 0x1, 0x0);
        gbc.writeMem(0x8859, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa5d0);
        EXPECT(gbc.pc(), 0x885b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8859), 0xcb);
        EXPECT(gbc.readMem(0x885a), 0xbb);
        // CB BB 0063
        gbc.setState(0xc4ac, 0x9ff2, 0x5310, 0x4353, 0x2a72, 0x8825, 0x1, 0x0);
        gbc.writeMem(0xc4ac, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9ff2);
        EXPECT(gbc.pc(), 0xc4ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ac), 0xcb);
        EXPECT(gbc.readMem(0xc4ad), 0xbb);
        // CB BB 0064
        gbc.setState(0x15ee, 0x8d51, 0xd200, 0xd47a, 0x2754, 0xcef9, 0x1, 0x1);
        gbc.writeMem(0x15ee, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8d51);
        EXPECT(gbc.pc(), 0x15f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0065
        gbc.setState(0x12dc, 0xc4ed, 0xbbf0, 0x8092, 0xbc14, 0x6e79, 0x1, 0x0);
        gbc.writeMem(0x12dc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc4ed);
        EXPECT(gbc.pc(), 0x12de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0066
        gbc.setState(0x9520, 0x14b9, 0xf630, 0xb32f, 0x7d74, 0xaf87, 0x1, 0x1);
        gbc.writeMem(0x9520, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x14b9);
        EXPECT(gbc.pc(), 0x9522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9520), 0xcb);
        EXPECT(gbc.readMem(0x9521), 0xbb);
        // CB BB 0067
        gbc.setState(0x7365, 0xb3a1, 0xeb90, 0xaadf, 0x588c, 0xf531, 0x1, 0x1);
        gbc.writeMem(0x7365, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb3a1);
        EXPECT(gbc.pc(), 0x7367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0068
        gbc.setState(0xe029, 0x8f28, 0x7b90, 0xb5db, 0x889, 0xcf48, 0x1, 0x1);
        gbc.writeMem(0xe029, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8f28);
        EXPECT(gbc.pc(), 0xe02b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe029), 0xcb);
        EXPECT(gbc.readMem(0xe02a), 0xbb);
        // CB BB 0069
        gbc.setState(0xb25d, 0x1041, 0xc010, 0xb092, 0x8c06, 0xc794, 0x0, 0x0);
        gbc.writeMem(0xb25d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1041);
        EXPECT(gbc.pc(), 0xb25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25d), 0xcb);
        EXPECT(gbc.readMem(0xb25e), 0xbb);
        // CB BB 006A
        gbc.setState(0xe686, 0xf97c, 0x5e10, 0xc9f, 0x8508, 0x1efb, 0x1, 0x0);
        gbc.writeMem(0xe686, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf97c);
        EXPECT(gbc.pc(), 0xe688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe686), 0xcb);
        EXPECT(gbc.readMem(0xe687), 0xbb);
        // CB BB 006B
        gbc.setState(0x366e, 0xfc02, 0xd690, 0x53a0, 0x74d9, 0xcb2b, 0x0, 0x0);
        gbc.writeMem(0x366e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfc02);
        EXPECT(gbc.pc(), 0x3670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 006C
        gbc.setState(0xefb2, 0xea0e, 0xac30, 0xee30, 0x4495, 0xe043, 0x0, 0x0);
        gbc.writeMem(0xefb2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xea0e);
        EXPECT(gbc.pc(), 0xefb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb2), 0xcb);
        EXPECT(gbc.readMem(0xefb3), 0xbb);
        // CB BB 006D
        gbc.setState(0x1f55, 0xe0bf, 0x8000, 0x852b, 0x951, 0x5916, 0x1, 0x0);
        gbc.writeMem(0x1f55, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe0bf);
        EXPECT(gbc.pc(), 0x1f57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 006E
        gbc.setState(0xed32, 0xb143, 0x48c0, 0x5073, 0x6534, 0x4d0c, 0x0, 0x1);
        gbc.writeMem(0xed32, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb143);
        EXPECT(gbc.pc(), 0xed34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed32), 0xcb);
        EXPECT(gbc.readMem(0xed33), 0xbb);
        // CB BB 006F
        gbc.setState(0x7f96, 0xf432, 0x18f0, 0x6bdb, 0xc816, 0xceda, 0x1, 0x1);
        gbc.writeMem(0x7f96, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf432);
        EXPECT(gbc.pc(), 0x7f98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0070
        gbc.setState(0x15f8, 0x793b, 0xfb20, 0x9b2f, 0x7f76, 0x6ec2, 0x1, 0x1);
        gbc.writeMem(0x15f8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x793b);
        EXPECT(gbc.pc(), 0x15fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0071
        gbc.setState(0xc2a8, 0xd638, 0xda0, 0x8337, 0x4253, 0x6502, 0x1, 0x1);
        gbc.writeMem(0xc2a8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd638);
        EXPECT(gbc.pc(), 0xc2aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a8), 0xcb);
        EXPECT(gbc.readMem(0xc2a9), 0xbb);
        // CB BB 0072
        gbc.setState(0x1981, 0x40f, 0x3210, 0xb34d, 0xf66, 0x3daa, 0x0, 0x0);
        gbc.writeMem(0x1981, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x40f);
        EXPECT(gbc.pc(), 0x1983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0073
        gbc.setState(0xd88f, 0x8d88, 0xba40, 0x5a03, 0xa881, 0xbcd4, 0x1, 0x1);
        gbc.writeMem(0xd88f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8d88);
        EXPECT(gbc.pc(), 0xd891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88f), 0xcb);
        EXPECT(gbc.readMem(0xd890), 0xbb);
        // CB BB 0074
        gbc.setState(0xebc3, 0x4a33, 0xfbf0, 0x8e20, 0xb7e2, 0xc2e5, 0x0, 0x1);
        gbc.writeMem(0xebc3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4a33);
        EXPECT(gbc.pc(), 0xebc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc3), 0xcb);
        EXPECT(gbc.readMem(0xebc4), 0xbb);
        // CB BB 0075
        gbc.setState(0x19ab, 0x4b0f, 0x3f0, 0x128c, 0xb11d, 0xffba, 0x1, 0x0);
        gbc.writeMem(0x19ab, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4b0f);
        EXPECT(gbc.pc(), 0x19ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0076
        gbc.setState(0x7385, 0xbb6b, 0xb5e0, 0xfa03, 0x1bfb, 0xf864, 0x1, 0x1);
        gbc.writeMem(0x7385, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbb6b);
        EXPECT(gbc.pc(), 0x7387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0077
        gbc.setState(0xbc27, 0x9aec, 0xeaa0, 0xca27, 0x9b1a, 0xdf4e, 0x1, 0x0);
        gbc.writeMem(0xbc27, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9aec);
        EXPECT(gbc.pc(), 0xbc29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc27), 0xcb);
        EXPECT(gbc.readMem(0xbc28), 0xbb);
        // CB BB 0078
        gbc.setState(0x5e42, 0x1973, 0x9730, 0xf069, 0xbae2, 0xd02e, 0x1, 0x1);
        gbc.writeMem(0x5e42, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1973);
        EXPECT(gbc.pc(), 0x5e44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 007A
        gbc.setState(0x3464, 0x374b, 0xb5e0, 0xf6de, 0xdc1a, 0xd866, 0x1, 0x0);
        gbc.writeMem(0x3464, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x374b);
        EXPECT(gbc.pc(), 0x3466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 007C
        gbc.setState(0x1ce8, 0x1799, 0x6c10, 0x15b2, 0xaefc, 0xa692, 0x1, 0x1);
        gbc.writeMem(0x1ce8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1799);
        EXPECT(gbc.pc(), 0x1cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 007D
        gbc.setState(0x16c9, 0xbafb, 0x4520, 0x76b9, 0x285e, 0xc562, 0x0, 0x1);
        gbc.writeMem(0x16c9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbafb);
        EXPECT(gbc.pc(), 0x16cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 007E
        gbc.setState(0x53c2, 0x8236, 0x18c0, 0xfce3, 0x8733, 0x147d, 0x0, 0x0);
        gbc.writeMem(0x53c2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8236);
        EXPECT(gbc.pc(), 0x53c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 007F
        gbc.setState(0x9b2c, 0x2f0d, 0xc790, 0xdd26, 0xeb03, 0x72de, 0x1, 0x1);
        gbc.writeMem(0x9b2c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2f0d);
        EXPECT(gbc.pc(), 0x9b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b2c), 0xcb);
        EXPECT(gbc.readMem(0x9b2d), 0xbb);
        // CB BB 0080
        gbc.setState(0x2005, 0x8870, 0xf860, 0xeb60, 0xb645, 0x8833, 0x1, 0x1);
        gbc.writeMem(0x2005, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8870);
        EXPECT(gbc.pc(), 0x2007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0081
        gbc.setState(0x20a4, 0xeedb, 0x4d40, 0x142c, 0x8c87, 0xa399, 0x1, 0x0);
        gbc.writeMem(0x20a4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xeedb);
        EXPECT(gbc.pc(), 0x20a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0082
        gbc.setState(0x179d, 0x5349, 0xdf90, 0x568, 0xcead, 0xa4a2, 0x1, 0x0);
        gbc.writeMem(0x179d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5349);
        EXPECT(gbc.pc(), 0x179f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0083
        gbc.setState(0xbd9a, 0xa6b9, 0x12f0, 0x61ba, 0x42ba, 0xde5, 0x1, 0x0);
        gbc.writeMem(0xbd9a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa6b9);
        EXPECT(gbc.pc(), 0xbd9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd9a), 0xcb);
        EXPECT(gbc.readMem(0xbd9b), 0xbb);
        // CB BB 0084
        gbc.setState(0xe189, 0x7df3, 0xebf0, 0xb1fe, 0xbe5a, 0x173f, 0x0, 0x1);
        gbc.writeMem(0xe189, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7df3);
        EXPECT(gbc.pc(), 0xe18b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe189), 0xcb);
        EXPECT(gbc.readMem(0xe18a), 0xbb);
        // CB BB 0085
        gbc.setState(0x5770, 0x9fce, 0xc700, 0xa656, 0xe836, 0xfebe, 0x1, 0x1);
        gbc.writeMem(0x5770, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9fce);
        EXPECT(gbc.pc(), 0x5772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0087
        gbc.setState(0xa580, 0xe965, 0x2e80, 0x8f29, 0x6706, 0x7590, 0x0, 0x0);
        gbc.writeMem(0xa580, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe965);
        EXPECT(gbc.pc(), 0xa582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa580), 0xcb);
        EXPECT(gbc.readMem(0xa581), 0xbb);
        // CB BB 0088
        gbc.setState(0x9097, 0xaf33, 0xa60, 0xefca, 0x79af, 0x8e3a, 0x1, 0x0);
        gbc.writeMem(0x9097, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xaf33);
        EXPECT(gbc.pc(), 0x9099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9097), 0xcb);
        EXPECT(gbc.readMem(0x9098), 0xbb);
        // CB BB 0089
        gbc.setState(0xb970, 0xb802, 0x9ce0, 0x58cd, 0x2d26, 0xce93, 0x1, 0x0);
        gbc.writeMem(0xb970, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb802);
        EXPECT(gbc.pc(), 0xb972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb970), 0xcb);
        EXPECT(gbc.readMem(0xb971), 0xbb);
        // CB BB 008A
        gbc.setState(0x12fe, 0xa053, 0xeb70, 0x573f, 0xf853, 0x57c4, 0x0, 0x1);
        gbc.writeMem(0x12fe, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa053);
        EXPECT(gbc.pc(), 0x1300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 008B
        gbc.setState(0x5dcd, 0xba3a, 0x8b00, 0xaa20, 0x8cbe, 0x7de9, 0x1, 0x0);
        gbc.writeMem(0x5dcd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xba3a);
        EXPECT(gbc.pc(), 0x5dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 008C
        gbc.setState(0xed70, 0xa62f, 0xf0a0, 0x6dc9, 0x394d, 0x31ea, 0x0, 0x0);
        gbc.writeMem(0xed70, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa62f);
        EXPECT(gbc.pc(), 0xed72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed70), 0xcb);
        EXPECT(gbc.readMem(0xed71), 0xbb);
        // CB BB 008D
        gbc.setState(0x219f, 0x409e, 0x6c80, 0x4627, 0xac4e, 0x9207, 0x0, 0x1);
        gbc.writeMem(0x219f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x409e);
        EXPECT(gbc.pc(), 0x21a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 008E
        gbc.setState(0x6183, 0x60f5, 0x1090, 0x943a, 0x18a1, 0xb3c, 0x0, 0x1);
        gbc.writeMem(0x6183, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x60f5);
        EXPECT(gbc.pc(), 0x6185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 008F
        gbc.setState(0xd364, 0x78e5, 0x4380, 0x5aec, 0xb040, 0xff4f, 0x0, 0x0);
        gbc.writeMem(0xd364, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x78e5);
        EXPECT(gbc.pc(), 0xd366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd364), 0xcb);
        EXPECT(gbc.readMem(0xd365), 0xbb);
        // CB BB 0090
        gbc.setState(0x4686, 0x6c78, 0x3c80, 0xf60b, 0x31b0, 0x32b, 0x1, 0x0);
        gbc.writeMem(0x4686, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6c78);
        EXPECT(gbc.pc(), 0x4688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0091
        gbc.setState(0x11f3, 0xd8c9, 0x45e0, 0xf6df, 0x38fb, 0x155d, 0x0, 0x1);
        gbc.writeMem(0x11f3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd8c9);
        EXPECT(gbc.pc(), 0x11f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0092
        gbc.setState(0x10b7, 0xb0c8, 0x7e20, 0x8f9a, 0xc03d, 0xc171, 0x1, 0x1);
        gbc.writeMem(0x10b7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb0c8);
        EXPECT(gbc.pc(), 0x10b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0093
        gbc.setState(0x706a, 0xf762, 0x6520, 0x4e9e, 0xd414, 0xa665, 0x0, 0x0);
        gbc.writeMem(0x706a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf762);
        EXPECT(gbc.pc(), 0x706c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0094
        gbc.setState(0xaa1d, 0xa37f, 0xe480, 0x205d, 0x8c8f, 0xa595, 0x1, 0x0);
        gbc.writeMem(0xaa1d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa37f);
        EXPECT(gbc.pc(), 0xaa1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa1d), 0xcb);
        EXPECT(gbc.readMem(0xaa1e), 0xbb);
        // CB BB 0095
        gbc.setState(0xb090, 0x4c6, 0x41a0, 0x876d, 0x6fbf, 0x3b31, 0x0, 0x0);
        gbc.writeMem(0xb090, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4c6);
        EXPECT(gbc.pc(), 0xb092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb090), 0xcb);
        EXPECT(gbc.readMem(0xb091), 0xbb);
        // CB BB 0096
        gbc.setState(0x6b0e, 0x2c77, 0xe270, 0xfffb, 0xee44, 0x3902, 0x0, 0x0);
        gbc.writeMem(0x6b0e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2c77);
        EXPECT(gbc.pc(), 0x6b10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0097
        gbc.setState(0x1496, 0x6f23, 0x8a60, 0xd795, 0xa8a6, 0xd2e4, 0x1, 0x0);
        gbc.writeMem(0x1496, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6f23);
        EXPECT(gbc.pc(), 0x1498);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0098
        gbc.setState(0x1375, 0xfc08, 0xc060, 0x3e7c, 0x6810, 0x17a0, 0x1, 0x0);
        gbc.writeMem(0x1375, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfc08);
        EXPECT(gbc.pc(), 0x1377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0099
        gbc.setState(0x499a, 0xdcc5, 0x5580, 0xbcbe, 0xc442, 0xf24c, 0x0, 0x0);
        gbc.writeMem(0x499a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdcc5);
        EXPECT(gbc.pc(), 0x499c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 009A
        gbc.setState(0x462e, 0xc63b, 0xfce0, 0x3b38, 0x8bbe, 0x4cf4, 0x0, 0x1);
        gbc.writeMem(0x462e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc63b);
        EXPECT(gbc.pc(), 0x4630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 009B
        gbc.setState(0x64d8, 0x8f3, 0xa70, 0xd480, 0xcdeb, 0xc3ce, 0x1, 0x1);
        gbc.writeMem(0x64d8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8f3);
        EXPECT(gbc.pc(), 0x64da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 009C
        gbc.setState(0x9679, 0xeb11, 0xe610, 0xf31c, 0xf33c, 0xa9aa, 0x0, 0x0);
        gbc.writeMem(0x9679, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xeb11);
        EXPECT(gbc.pc(), 0x967b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9679), 0xcb);
        EXPECT(gbc.readMem(0x967a), 0xbb);
        // CB BB 009D
        gbc.setState(0x883, 0xd727, 0x3120, 0x6c4c, 0x79e9, 0xfdc, 0x1, 0x1);
        gbc.writeMem(0x883, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd727);
        EXPECT(gbc.pc(), 0x885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 009E
        gbc.setState(0xc162, 0x7870, 0xce90, 0x4cbb, 0x7ce7, 0xe6ce, 0x0, 0x1);
        gbc.writeMem(0xc162, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7870);
        EXPECT(gbc.pc(), 0xc164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc162), 0xcb);
        EXPECT(gbc.readMem(0xc163), 0xbb);
        // CB BB 009F
        gbc.setState(0x727f, 0x4a70, 0x1500, 0xa61, 0x9e14, 0xcbac, 0x1, 0x0);
        gbc.writeMem(0x727f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4a70);
        EXPECT(gbc.pc(), 0x7281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00A0
        gbc.setState(0x720, 0x98da, 0x1510, 0xc30c, 0x3db2, 0x9ff5, 0x1, 0x1);
        gbc.writeMem(0x720, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x98da);
        EXPECT(gbc.pc(), 0x722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00A1
        gbc.setState(0x1ce7, 0x7da5, 0x25f0, 0x4330, 0xbe64, 0x7f24, 0x1, 0x1);
        gbc.writeMem(0x1ce7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7da5);
        EXPECT(gbc.pc(), 0x1ce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00A2
        gbc.setState(0x5188, 0x62cf, 0x50b0, 0xf993, 0xe115, 0xa0e1, 0x0, 0x0);
        gbc.writeMem(0x5188, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x62cf);
        EXPECT(gbc.pc(), 0x518a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00A3
        gbc.setState(0xdce0, 0x7719, 0xd870, 0xc061, 0x81c3, 0x1b56, 0x1, 0x0);
        gbc.writeMem(0xdce0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7719);
        EXPECT(gbc.pc(), 0xdce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce0), 0xcb);
        EXPECT(gbc.readMem(0xdce1), 0xbb);
        // CB BB 00A4
        gbc.setState(0xa421, 0xba25, 0x3a20, 0x71ca, 0xac1f, 0xf22d, 0x1, 0x1);
        gbc.writeMem(0xa421, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xba25);
        EXPECT(gbc.pc(), 0xa423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa421), 0xcb);
        EXPECT(gbc.readMem(0xa422), 0xbb);
        // CB BB 00A5
        gbc.setState(0x159d, 0x2927, 0xd1b0, 0xb72a, 0x765, 0x4e2f, 0x1, 0x0);
        gbc.writeMem(0x159d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2927);
        EXPECT(gbc.pc(), 0x159f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00A6
        gbc.setState(0x4f17, 0xd3b5, 0x85d0, 0xd97a, 0x9523, 0x1e77, 0x0, 0x0);
        gbc.writeMem(0x4f17, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd3b5);
        EXPECT(gbc.pc(), 0x4f19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00A7
        gbc.setState(0x360f, 0x2812, 0x88e0, 0x69bd, 0x46be, 0xb487, 0x0, 0x0);
        gbc.writeMem(0x360f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2812);
        EXPECT(gbc.pc(), 0x3611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00A8
        gbc.setState(0xcfff, 0x63ab, 0x5840, 0xa70b, 0x77c1, 0x16f5, 0x1, 0x0);
        gbc.writeMem(0xcfff, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x63ab);
        EXPECT(gbc.pc(), 0xd001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfff), 0xcb);
        EXPECT(gbc.readMem(0xd000), 0xbb);
        // CB BB 00A9
        gbc.setState(0x2874, 0x300e, 0xe690, 0x8e92, 0x6cb8, 0x69b2, 0x1, 0x0);
        gbc.writeMem(0x2874, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x300e);
        EXPECT(gbc.pc(), 0x2876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00AA
        gbc.setState(0x1028, 0x5dec, 0x26b0, 0xc168, 0x2d91, 0xaed, 0x1, 0x0);
        gbc.writeMem(0x1028, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5dec);
        EXPECT(gbc.pc(), 0x102a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00AB
        gbc.setState(0x7c5a, 0x9ddf, 0x7b10, 0x2f85, 0x1bdc, 0x9634, 0x0, 0x1);
        gbc.writeMem(0x7c5a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9ddf);
        EXPECT(gbc.pc(), 0x7c5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00AC
        gbc.setState(0x9aeb, 0xf70, 0x4570, 0x688b, 0xc470, 0xd4e4, 0x1, 0x1);
        gbc.writeMem(0x9aeb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf70);
        EXPECT(gbc.pc(), 0x9aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aeb), 0xcb);
        EXPECT(gbc.readMem(0x9aec), 0xbb);
        // CB BB 00AD
        gbc.setState(0x9cc6, 0x9586, 0xb4b0, 0x39fc, 0xd1e5, 0x36fa, 0x0, 0x0);
        gbc.writeMem(0x9cc6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9586);
        EXPECT(gbc.pc(), 0x9cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cc6), 0xcb);
        EXPECT(gbc.readMem(0x9cc7), 0xbb);
        // CB BB 00AE
        gbc.setState(0x762e, 0x6763, 0xe560, 0x5a3c, 0x9369, 0xc0f0, 0x1, 0x1);
        gbc.writeMem(0x762e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6763);
        EXPECT(gbc.pc(), 0x7630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00AF
        gbc.setState(0xdd47, 0x9dd6, 0xca60, 0x35d, 0x9c49, 0x8b00, 0x0, 0x0);
        gbc.writeMem(0xdd47, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9dd6);
        EXPECT(gbc.pc(), 0xdd49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd47), 0xcb);
        EXPECT(gbc.readMem(0xdd48), 0xbb);
        // CB BB 00B0
        gbc.setState(0x131f, 0xfa09, 0xc0b0, 0x4c9, 0xe5f, 0x80ec, 0x0, 0x0);
        gbc.writeMem(0x131f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfa09);
        EXPECT(gbc.pc(), 0x1321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00B1
        gbc.setState(0x852, 0x5b6c, 0x6350, 0x796d, 0x3ada, 0x75ed, 0x0, 0x0);
        gbc.writeMem(0x852, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5b6c);
        EXPECT(gbc.pc(), 0x854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00B2
        gbc.setState(0xe987, 0x2678, 0x90d0, 0xd59e, 0x46d1, 0xf5a, 0x0, 0x1);
        gbc.writeMem(0xe987, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2678);
        EXPECT(gbc.pc(), 0xe989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe987), 0xcb);
        EXPECT(gbc.readMem(0xe988), 0xbb);
        // CB BB 00B3
        gbc.setState(0xd02a, 0xbc92, 0x4b60, 0x2fac, 0x1ebd, 0xc149, 0x1, 0x1);
        gbc.writeMem(0xd02a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbc92);
        EXPECT(gbc.pc(), 0xd02c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02a), 0xcb);
        EXPECT(gbc.readMem(0xd02b), 0xbb);
        // CB BB 00B4
        gbc.setState(0x1214, 0x2c73, 0x16b0, 0x9f6e, 0x9ca5, 0x6ee8, 0x0, 0x1);
        gbc.writeMem(0x1214, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2c73);
        EXPECT(gbc.pc(), 0x1216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00B5
        gbc.setState(0x1643, 0xf607, 0xc850, 0x7b28, 0x6629, 0xcb80, 0x0, 0x1);
        gbc.writeMem(0x1643, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf607);
        EXPECT(gbc.pc(), 0x1645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00B6
        gbc.setState(0xa5b0, 0xa81b, 0xd440, 0xb286, 0xe7b5, 0xd3e, 0x0, 0x0);
        gbc.writeMem(0xa5b0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa81b);
        EXPECT(gbc.pc(), 0xa5b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5b0), 0xcb);
        EXPECT(gbc.readMem(0xa5b1), 0xbb);
        // CB BB 00B7
        gbc.setState(0x6bbf, 0xeb10, 0xa7f0, 0xe379, 0xb9e4, 0x3ffb, 0x1, 0x1);
        gbc.writeMem(0x6bbf, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xeb10);
        EXPECT(gbc.pc(), 0x6bc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00B8
        gbc.setState(0xb128, 0x4f73, 0xa0c0, 0xf942, 0x501e, 0xbcd7, 0x0, 0x0);
        gbc.writeMem(0xb128, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4f73);
        EXPECT(gbc.pc(), 0xb12a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb128), 0xcb);
        EXPECT(gbc.readMem(0xb129), 0xbb);
        // CB BB 00B9
        gbc.setState(0x2c67, 0x1644, 0xb200, 0xe3e2, 0xd97d, 0x862d, 0x0, 0x1);
        gbc.writeMem(0x2c67, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1644);
        EXPECT(gbc.pc(), 0x2c69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00BA
        gbc.setState(0xe153, 0x8f57, 0xa8c0, 0xd3ac, 0x9439, 0xd709, 0x1, 0x0);
        gbc.writeMem(0xe153, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8f57);
        EXPECT(gbc.pc(), 0xe155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe153), 0xcb);
        EXPECT(gbc.readMem(0xe154), 0xbb);
        // CB BB 00BB
        gbc.setState(0x123e, 0x5bed, 0x45a0, 0xb4e8, 0xf5de, 0x336b, 0x0, 0x0);
        gbc.writeMem(0x123e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5bed);
        EXPECT(gbc.pc(), 0x1240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00BC
        gbc.setState(0x96ca, 0xed88, 0xb580, 0xaab6, 0x7230, 0x368d, 0x1, 0x1);
        gbc.writeMem(0x96ca, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xed88);
        EXPECT(gbc.pc(), 0x96cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ca), 0xcb);
        EXPECT(gbc.readMem(0x96cb), 0xbb);
        // CB BB 00BD
        gbc.setState(0xe445, 0xfa84, 0x8a50, 0x88d1, 0xc583, 0xebbc, 0x1, 0x1);
        gbc.writeMem(0xe445, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfa84);
        EXPECT(gbc.pc(), 0xe447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe445), 0xcb);
        EXPECT(gbc.readMem(0xe446), 0xbb);
        // CB BB 00BE
        gbc.setState(0x70d7, 0x63, 0x9400, 0x40e8, 0x7e69, 0xbb8b, 0x0, 0x0);
        gbc.writeMem(0x70d7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x63);
        EXPECT(gbc.pc(), 0x70d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00BF
        gbc.setState(0xb297, 0x4c9c, 0x71c0, 0x2749, 0x9b17, 0xb21a, 0x1, 0x0);
        gbc.writeMem(0xb297, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4c9c);
        EXPECT(gbc.pc(), 0xb299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb297), 0xcb);
        EXPECT(gbc.readMem(0xb298), 0xbb);
        // CB BB 00C0
        gbc.setState(0xd7ad, 0x143d, 0x2750, 0xb7cc, 0xacdd, 0xfcfe, 0x0, 0x1);
        gbc.writeMem(0xd7ad, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x143d);
        EXPECT(gbc.pc(), 0xd7af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ad), 0xcb);
        EXPECT(gbc.readMem(0xd7ae), 0xbb);
        // CB BB 00C1
        gbc.setState(0x32a1, 0x8e1e, 0xee70, 0xe4ed, 0xf873, 0xb359, 0x1, 0x1);
        gbc.writeMem(0x32a1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8e1e);
        EXPECT(gbc.pc(), 0x32a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00C2
        gbc.setState(0xa35e, 0xcb8c, 0xbe80, 0xe67e, 0x97f7, 0x78f5, 0x1, 0x1);
        gbc.writeMem(0xa35e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcb8c);
        EXPECT(gbc.pc(), 0xa360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa35e), 0xcb);
        EXPECT(gbc.readMem(0xa35f), 0xbb);
        // CB BB 00C3
        gbc.setState(0x65b1, 0x52d6, 0xeb70, 0x49c2, 0x5589, 0xb1e1, 0x0, 0x0);
        gbc.writeMem(0x65b1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x52d6);
        EXPECT(gbc.pc(), 0x65b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00C4
        gbc.setState(0xe060, 0xa30a, 0x7f40, 0x5251, 0xd756, 0x56c1, 0x0, 0x0);
        gbc.writeMem(0xe060, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa30a);
        EXPECT(gbc.pc(), 0xe062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe060), 0xcb);
        EXPECT(gbc.readMem(0xe061), 0xbb);
        // CB BB 00C5
        gbc.setState(0x374, 0x65eb, 0x2d00, 0xfc7c, 0x3c6a, 0x1d03, 0x0, 0x0);
        gbc.writeMem(0x374, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x65eb);
        EXPECT(gbc.pc(), 0x376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00C6
        gbc.setState(0xb5fc, 0xa118, 0x25b0, 0xd7bf, 0xbdc4, 0xf287, 0x1, 0x1);
        gbc.writeMem(0xb5fc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa118);
        EXPECT(gbc.pc(), 0xb5fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5fc), 0xcb);
        EXPECT(gbc.readMem(0xb5fd), 0xbb);
        // CB BB 00C7
        gbc.setState(0xb0dc, 0x8063, 0xf310, 0x4758, 0xdb2d, 0x5f9b, 0x0, 0x0);
        gbc.writeMem(0xb0dc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8063);
        EXPECT(gbc.pc(), 0xb0de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0dc), 0xcb);
        EXPECT(gbc.readMem(0xb0dd), 0xbb);
        // CB BB 00C8
        gbc.setState(0x71ea, 0x9bcc, 0xd010, 0xb4a, 0x7948, 0x499a, 0x0, 0x0);
        gbc.writeMem(0x71ea, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9bcc);
        EXPECT(gbc.pc(), 0x71ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00C9
        gbc.setState(0xc2a9, 0x83fc, 0x1bc0, 0x5eb1, 0x4b8a, 0x804d, 0x1, 0x1);
        gbc.writeMem(0xc2a9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x83fc);
        EXPECT(gbc.pc(), 0xc2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a9), 0xcb);
        EXPECT(gbc.readMem(0xc2aa), 0xbb);
        // CB BB 00CA
        gbc.setState(0x1edd, 0x8051, 0x2c10, 0xaa5, 0x9485, 0xa4f3, 0x0, 0x1);
        gbc.writeMem(0x1edd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8051);
        EXPECT(gbc.pc(), 0x1edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00CB
        gbc.setState(0x756f, 0x2662, 0x5340, 0x2540, 0x821, 0xc607, 0x0, 0x0);
        gbc.writeMem(0x756f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2662);
        EXPECT(gbc.pc(), 0x7571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00CC
        gbc.setState(0x991a, 0x21b7, 0xab20, 0xa6e4, 0x9767, 0x6b19, 0x0, 0x0);
        gbc.writeMem(0x991a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x21b7);
        EXPECT(gbc.pc(), 0x991c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x991a), 0xcb);
        EXPECT(gbc.readMem(0x991b), 0xbb);
        // CB BB 00CD
        gbc.setState(0x9ba8, 0x83a4, 0x9d90, 0xd16b, 0x9a98, 0x55f9, 0x1, 0x0);
        gbc.writeMem(0x9ba8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x83a4);
        EXPECT(gbc.pc(), 0x9baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ba8), 0xcb);
        EXPECT(gbc.readMem(0x9ba9), 0xbb);
        // CB BB 00CE
        gbc.setState(0x2c30, 0x813f, 0xa4a0, 0x97dd, 0xa007, 0xe963, 0x1, 0x0);
        gbc.writeMem(0x2c30, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x813f);
        EXPECT(gbc.pc(), 0x2c32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00CF
        gbc.setState(0x3b5a, 0x52ce, 0x210, 0x6e67, 0xa098, 0x5332, 0x1, 0x1);
        gbc.writeMem(0x3b5a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x52ce);
        EXPECT(gbc.pc(), 0x3b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00D0
        gbc.setState(0x6586, 0xbec1, 0xc960, 0x17b3, 0x5c5e, 0x9089, 0x0, 0x1);
        gbc.writeMem(0x6586, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbec1);
        EXPECT(gbc.pc(), 0x6588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00D1
        gbc.setState(0x8e21, 0x9fe0, 0xbe20, 0x1ad2, 0x7a7, 0x15ec, 0x1, 0x1);
        gbc.writeMem(0x8e21, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9fe0);
        EXPECT(gbc.pc(), 0x8e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e21), 0xcb);
        EXPECT(gbc.readMem(0x8e22), 0xbb);
        // CB BB 00D2
        gbc.setState(0x1e16, 0xc243, 0xf40, 0xd370, 0xc30b, 0xc729, 0x0, 0x1);
        gbc.writeMem(0x1e16, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc243);
        EXPECT(gbc.pc(), 0x1e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00D3
        gbc.setState(0x59ed, 0xd64c, 0xa990, 0xe397, 0xcbc6, 0x8499, 0x0, 0x0);
        gbc.writeMem(0x59ed, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd64c);
        EXPECT(gbc.pc(), 0x59ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00D4
        gbc.setState(0xbce5, 0x5f3b, 0xbcf0, 0xc356, 0x19e1, 0x9efb, 0x0, 0x0);
        gbc.writeMem(0xbce5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5f3b);
        EXPECT(gbc.pc(), 0xbce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbce5), 0xcb);
        EXPECT(gbc.readMem(0xbce6), 0xbb);
        // CB BB 00D5
        gbc.setState(0xcddd, 0x507e, 0x3ce0, 0x1c50, 0x4027, 0x519a, 0x0, 0x0);
        gbc.writeMem(0xcddd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x507e);
        EXPECT(gbc.pc(), 0xcddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcddd), 0xcb);
        EXPECT(gbc.readMem(0xcdde), 0xbb);
        // CB BB 00D6
        gbc.setState(0xbd3, 0x9835, 0x42b0, 0x9dfc, 0x8d5f, 0xc778, 0x0, 0x1);
        gbc.writeMem(0xbd3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9835);
        EXPECT(gbc.pc(), 0xbd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00D8
        gbc.setState(0x2082, 0xe58d, 0xf5a0, 0x468e, 0x589b, 0x1323, 0x1, 0x1);
        gbc.writeMem(0x2082, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe58d);
        EXPECT(gbc.pc(), 0x2084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00D9
        gbc.setState(0xa92, 0x113d, 0x9e90, 0x9cfe, 0xa6e9, 0x8f37, 0x0, 0x1);
        gbc.writeMem(0xa92, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x113d);
        EXPECT(gbc.pc(), 0xa94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00DA
        gbc.setState(0x5325, 0xe358, 0x4430, 0x851c, 0x59f9, 0x82d5, 0x0, 0x0);
        gbc.writeMem(0x5325, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe358);
        EXPECT(gbc.pc(), 0x5327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00DB
        gbc.setState(0xd87a, 0xb5fa, 0x5fe0, 0xf197, 0x9541, 0x4d6b, 0x1, 0x1);
        gbc.writeMem(0xd87a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb5fa);
        EXPECT(gbc.pc(), 0xd87c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd87a), 0xcb);
        EXPECT(gbc.readMem(0xd87b), 0xbb);
        // CB BB 00DC
        gbc.setState(0x678f, 0xb1f6, 0xeac0, 0xf9b8, 0x27ad, 0xf9a7, 0x0, 0x1);
        gbc.writeMem(0x678f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb1f6);
        EXPECT(gbc.pc(), 0x6791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00DD
        gbc.setState(0xfb4, 0x8051, 0x15a0, 0x2ce3, 0xacab, 0x876d, 0x0, 0x0);
        gbc.writeMem(0xfb4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8051);
        EXPECT(gbc.pc(), 0xfb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00DE
        gbc.setState(0x9259, 0x495c, 0x1f10, 0x7988, 0xa5de, 0x7cf4, 0x0, 0x1);
        gbc.writeMem(0x9259, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x495c);
        EXPECT(gbc.pc(), 0x925b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9259), 0xcb);
        EXPECT(gbc.readMem(0x925a), 0xbb);
        // CB BB 00DF
        gbc.setState(0x59d8, 0xdca7, 0x7780, 0xc930, 0x1464, 0xe8f3, 0x1, 0x1);
        gbc.writeMem(0x59d8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xdca7);
        EXPECT(gbc.pc(), 0x59da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00E0
        gbc.setState(0xefd5, 0xb7b5, 0xdfb0, 0x18de, 0x140b, 0x43c, 0x1, 0x0);
        gbc.writeMem(0xefd5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb7b5);
        EXPECT(gbc.pc(), 0xefd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd5), 0xcb);
        EXPECT(gbc.readMem(0xefd6), 0xbb);
        // CB BB 00E1
        gbc.setState(0x208e, 0xa8ae, 0x6200, 0xfa20, 0xe8f7, 0x4478, 0x1, 0x0);
        gbc.writeMem(0x208e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa8ae);
        EXPECT(gbc.pc(), 0x2090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00E2
        gbc.setState(0x36e7, 0xae9, 0x4c50, 0x2c00, 0x9b58, 0xc5fe, 0x1, 0x1);
        gbc.writeMem(0x36e7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xae9);
        EXPECT(gbc.pc(), 0x36e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00E3
        gbc.setState(0x47aa, 0x985, 0xf510, 0x2d1f, 0x8702, 0xe58, 0x0, 0x1);
        gbc.writeMem(0x47aa, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x985);
        EXPECT(gbc.pc(), 0x47ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00E4
        gbc.setState(0x7679, 0xabce, 0x8210, 0x80e5, 0xbfed, 0x2a3c, 0x0, 0x1);
        gbc.writeMem(0x7679, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xabce);
        EXPECT(gbc.pc(), 0x767b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00E5
        gbc.setState(0x6da0, 0xad4, 0xe110, 0xda4c, 0xbaaf, 0x5170, 0x1, 0x0);
        gbc.writeMem(0x6da0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xad4);
        EXPECT(gbc.pc(), 0x6da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00E6
        gbc.setState(0xb1d9, 0x113f, 0x39f0, 0xd98a, 0x7742, 0x1a2a, 0x1, 0x0);
        gbc.writeMem(0xb1d9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x113f);
        EXPECT(gbc.pc(), 0xb1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1d9), 0xcb);
        EXPECT(gbc.readMem(0xb1da), 0xbb);
        // CB BB 00E7
        gbc.setState(0xcf88, 0x3af, 0xd50, 0x598c, 0x8081, 0xb3d5, 0x0, 0x0);
        gbc.writeMem(0xcf88, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3af);
        EXPECT(gbc.pc(), 0xcf8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf88), 0xcb);
        EXPECT(gbc.readMem(0xcf89), 0xbb);
        // CB BB 00E8
        gbc.setState(0xb49, 0x5e0b, 0xcf00, 0x386d, 0x2a18, 0x616f, 0x1, 0x0);
        gbc.writeMem(0xb49, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5e0b);
        EXPECT(gbc.pc(), 0xb4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00E9
        gbc.setState(0x4f43, 0xccd5, 0xad20, 0xda47, 0xfbc9, 0xb4d7, 0x1, 0x1);
        gbc.writeMem(0x4f43, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xccd5);
        EXPECT(gbc.pc(), 0x4f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00EA
        gbc.setState(0x5a6e, 0x793e, 0x9eb0, 0x88fc, 0x66d6, 0x8046, 0x1, 0x0);
        gbc.writeMem(0x5a6e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x793e);
        EXPECT(gbc.pc(), 0x5a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00EB
        gbc.setState(0x1d72, 0xd407, 0x9d80, 0x3699, 0xb4ac, 0x3392, 0x0, 0x1);
        gbc.writeMem(0x1d72, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd407);
        EXPECT(gbc.pc(), 0x1d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00EC
        gbc.setState(0xb494, 0x2503, 0xc360, 0x9413, 0xc454, 0x537b, 0x0, 0x0);
        gbc.writeMem(0xb494, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2503);
        EXPECT(gbc.pc(), 0xb496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb494), 0xcb);
        EXPECT(gbc.readMem(0xb495), 0xbb);
        // CB BB 00ED
        gbc.setState(0x3f7, 0xfe81, 0x3ac0, 0xba27, 0x198d, 0x23e8, 0x1, 0x0);
        gbc.writeMem(0x3f7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xfe81);
        EXPECT(gbc.pc(), 0x3f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00EE
        gbc.setState(0x4f39, 0xcb19, 0xce30, 0x26bc, 0x4c02, 0x14e9, 0x1, 0x1);
        gbc.writeMem(0x4f39, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcb19);
        EXPECT(gbc.pc(), 0x4f3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00EF
        gbc.setState(0xbb59, 0x60c7, 0xc830, 0x6b58, 0xf842, 0xa7be, 0x0, 0x1);
        gbc.writeMem(0xbb59, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x60c7);
        EXPECT(gbc.pc(), 0xbb5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb59), 0xcb);
        EXPECT(gbc.readMem(0xbb5a), 0xbb);
        // CB BB 00F1
        gbc.setState(0xb359, 0x3c06, 0xe500, 0x5ba6, 0xa64c, 0x5d67, 0x1, 0x0);
        gbc.writeMem(0xb359, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3c06);
        EXPECT(gbc.pc(), 0xb35b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb359), 0xcb);
        EXPECT(gbc.readMem(0xb35a), 0xbb);
        // CB BB 00F2
        gbc.setState(0xb0b7, 0xb46d, 0xc9a0, 0xd637, 0xfa74, 0x9513, 0x0, 0x0);
        gbc.writeMem(0xb0b7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb46d);
        EXPECT(gbc.pc(), 0xb0b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0b7), 0xcb);
        EXPECT(gbc.readMem(0xb0b8), 0xbb);
        // CB BB 00F3
        gbc.setState(0x6072, 0x101, 0x6890, 0x45d1, 0x829b, 0xf46a, 0x0, 0x0);
        gbc.writeMem(0x6072, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x101);
        EXPECT(gbc.pc(), 0x6074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00F4
        gbc.setState(0xa5a7, 0x46da, 0xb340, 0x7848, 0xd5ba, 0xe69b, 0x0, 0x1);
        gbc.writeMem(0xa5a7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x46da);
        EXPECT(gbc.pc(), 0xa5a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a7), 0xcb);
        EXPECT(gbc.readMem(0xa5a8), 0xbb);
        // CB BB 00F5
        gbc.setState(0x732c, 0xbc57, 0xf770, 0xa62f, 0xa0d8, 0xec06, 0x1, 0x0);
        gbc.writeMem(0x732c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xbc57);
        EXPECT(gbc.pc(), 0x732e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00F6
        gbc.setState(0x14d5, 0x96c7, 0xac80, 0x203e, 0x2574, 0xed0b, 0x0, 0x1);
        gbc.writeMem(0x14d5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x96c7);
        EXPECT(gbc.pc(), 0x14d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00F8
        gbc.setState(0x766a, 0xb245, 0xd190, 0xa32d, 0xe97f, 0x69a6, 0x0, 0x1);
        gbc.writeMem(0x766a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb245);
        EXPECT(gbc.pc(), 0x766c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00FA
        gbc.setState(0x3906, 0x74fb, 0xfb50, 0xe654, 0x99a6, 0xfcca, 0x1, 0x1);
        gbc.writeMem(0x3906, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x74fb);
        EXPECT(gbc.pc(), 0x3908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00FB
        gbc.setState(0x3e85, 0xec38, 0xb160, 0x3f9c, 0x83d8, 0x97e2, 0x0, 0x1);
        gbc.writeMem(0x3e85, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xec38);
        EXPECT(gbc.pc(), 0x3e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00FC
        gbc.setState(0x1ebe, 0xd0c2, 0x69f0, 0x7ab7, 0x8ff2, 0x47da, 0x0, 0x0);
        gbc.writeMem(0x1ebe, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd0c2);
        EXPECT(gbc.pc(), 0x1ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 00FD
        gbc.setState(0x2063, 0x7496, 0x3080, 0x8bad, 0x655, 0x4e80, 0x1, 0x1);
        gbc.writeMem(0x2063, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7496);
        EXPECT(gbc.pc(), 0x2065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 00FE
        gbc.setState(0x8fdc, 0x2398, 0xe0f0, 0xeef5, 0xa4ba, 0xe361, 0x1, 0x0);
        gbc.writeMem(0x8fdc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2398);
        EXPECT(gbc.pc(), 0x8fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fdc), 0xcb);
        EXPECT(gbc.readMem(0x8fdd), 0xbb);
        // CB BB 00FF
        gbc.setState(0xe6a5, 0xcf9, 0x4580, 0xec4b, 0x88e0, 0x5a38, 0x1, 0x0);
        gbc.writeMem(0xe6a5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcf9);
        EXPECT(gbc.pc(), 0xe6a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6a5), 0xcb);
        EXPECT(gbc.readMem(0xe6a6), 0xbb);
        // CB BB 0100
        gbc.setState(0xb6a3, 0x832f, 0x6090, 0xc2cc, 0xdc7f, 0xed0b, 0x0, 0x1);
        gbc.writeMem(0xb6a3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x832f);
        EXPECT(gbc.pc(), 0xb6a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a3), 0xcb);
        EXPECT(gbc.readMem(0xb6a4), 0xbb);
        // CB BB 0101
        gbc.setState(0x4de3, 0x348b, 0x11d0, 0x7e47, 0x9870, 0x5782, 0x1, 0x0);
        gbc.writeMem(0x4de3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x348b);
        EXPECT(gbc.pc(), 0x4de5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0102
        gbc.setState(0x44f1, 0xa96b, 0x9a00, 0x1dba, 0xf10, 0x6830, 0x0, 0x1);
        gbc.writeMem(0x44f1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa96b);
        EXPECT(gbc.pc(), 0x44f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0103
        gbc.setState(0x8460, 0xf811, 0xd490, 0xeed, 0x1eda, 0xb6db, 0x1, 0x0);
        gbc.writeMem(0x8460, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf811);
        EXPECT(gbc.pc(), 0x8462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8460), 0xcb);
        EXPECT(gbc.readMem(0x8461), 0xbb);
        // CB BB 0104
        gbc.setState(0xb929, 0xba57, 0x1620, 0x427a, 0xcb58, 0xc574, 0x0, 0x0);
        gbc.writeMem(0xb929, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xba57);
        EXPECT(gbc.pc(), 0xb92b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb929), 0xcb);
        EXPECT(gbc.readMem(0xb92a), 0xbb);
        // CB BB 0105
        gbc.setState(0xe101, 0x326e, 0xc220, 0xe415, 0xa96a, 0x291f, 0x0, 0x0);
        gbc.writeMem(0xe101, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x326e);
        EXPECT(gbc.pc(), 0xe103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe101), 0xcb);
        EXPECT(gbc.readMem(0xe102), 0xbb);
        // CB BB 0106
        gbc.setState(0xca69, 0xd458, 0x1150, 0x78eb, 0x9831, 0xe7b8, 0x0, 0x0);
        gbc.writeMem(0xca69, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd458);
        EXPECT(gbc.pc(), 0xca6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca69), 0xcb);
        EXPECT(gbc.readMem(0xca6a), 0xbb);
        // CB BB 0107
        gbc.setState(0x4a2, 0xa725, 0x7d80, 0x5e16, 0xb395, 0x2bb8, 0x0, 0x1);
        gbc.writeMem(0x4a2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa725);
        EXPECT(gbc.pc(), 0x4a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0108
        gbc.setState(0x2e66, 0x7c33, 0x4760, 0x10ba, 0x852b, 0xfacb, 0x0, 0x1);
        gbc.writeMem(0x2e66, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7c33);
        EXPECT(gbc.pc(), 0x2e68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0109
        gbc.setState(0x6d17, 0x6afa, 0x7c60, 0x756e, 0x3e4a, 0xa31c, 0x1, 0x0);
        gbc.writeMem(0x6d17, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6afa);
        EXPECT(gbc.pc(), 0x6d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 010A
        gbc.setState(0x7a8, 0x5bef, 0x7300, 0x5f38, 0xf127, 0x3f00, 0x0, 0x1);
        gbc.writeMem(0x7a8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5bef);
        EXPECT(gbc.pc(), 0x7aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 010B
        gbc.setState(0xb97d, 0xc480, 0xca30, 0x6366, 0x8d6, 0xddc0, 0x1, 0x0);
        gbc.writeMem(0xb97d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc480);
        EXPECT(gbc.pc(), 0xb97f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97d), 0xcb);
        EXPECT(gbc.readMem(0xb97e), 0xbb);
        // CB BB 010C
        gbc.setState(0x6cd0, 0xc013, 0x86a0, 0x651e, 0x9a32, 0xe213, 0x0, 0x1);
        gbc.writeMem(0x6cd0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc013);
        EXPECT(gbc.pc(), 0x6cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 010D
        gbc.setState(0x4cc7, 0x2930, 0x3a0, 0x9ba5, 0xaac6, 0x47cb, 0x1, 0x1);
        gbc.writeMem(0x4cc7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2930);
        EXPECT(gbc.pc(), 0x4cc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 010E
        gbc.setState(0x48fc, 0x1146, 0x3350, 0xd67c, 0x4917, 0x9767, 0x1, 0x0);
        gbc.writeMem(0x48fc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1146);
        EXPECT(gbc.pc(), 0x48fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 010F
        gbc.setState(0x7f77, 0xa926, 0xe270, 0x2bab, 0xb422, 0x1f4b, 0x0, 0x0);
        gbc.writeMem(0x7f77, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa926);
        EXPECT(gbc.pc(), 0x7f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0110
        gbc.setState(0x192c, 0xf88a, 0xec0, 0x2ce8, 0x160e, 0x4f9d, 0x0, 0x0);
        gbc.writeMem(0x192c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf88a);
        EXPECT(gbc.pc(), 0x192e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0111
        gbc.setState(0xb8b9, 0x1893, 0x2d90, 0xb66e, 0xb418, 0x403d, 0x1, 0x1);
        gbc.writeMem(0xb8b9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1893);
        EXPECT(gbc.pc(), 0xb8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b9), 0xcb);
        EXPECT(gbc.readMem(0xb8ba), 0xbb);
        // CB BB 0112
        gbc.setState(0xbe9d, 0x5be0, 0x2650, 0xd6b3, 0x6960, 0xc5b7, 0x1, 0x1);
        gbc.writeMem(0xbe9d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5be0);
        EXPECT(gbc.pc(), 0xbe9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe9d), 0xcb);
        EXPECT(gbc.readMem(0xbe9e), 0xbb);
        // CB BB 0113
        gbc.setState(0xa5dd, 0x7ad, 0x6300, 0x6541, 0x7140, 0x4e35, 0x1, 0x0);
        gbc.writeMem(0xa5dd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7ad);
        EXPECT(gbc.pc(), 0xa5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5dd), 0xcb);
        EXPECT(gbc.readMem(0xa5de), 0xbb);
        // CB BB 0114
        gbc.setState(0xc404, 0xd5a7, 0x22e0, 0x687f, 0x2d21, 0xb655, 0x0, 0x1);
        gbc.writeMem(0xc404, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd5a7);
        EXPECT(gbc.pc(), 0xc406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc404), 0xcb);
        EXPECT(gbc.readMem(0xc405), 0xbb);
        // CB BB 0116
        gbc.setState(0xc9ed, 0x7859, 0x8330, 0x8270, 0xedda, 0x6e21, 0x0, 0x1);
        gbc.writeMem(0xc9ed, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7859);
        EXPECT(gbc.pc(), 0xc9ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ed), 0xcb);
        EXPECT(gbc.readMem(0xc9ee), 0xbb);
        // CB BB 0117
        gbc.setState(0xad46, 0x62df, 0x9d90, 0xbcab, 0x38b8, 0x2976, 0x0, 0x0);
        gbc.writeMem(0xad46, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x62df);
        EXPECT(gbc.pc(), 0xad48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad46), 0xcb);
        EXPECT(gbc.readMem(0xad47), 0xbb);
        // CB BB 0118
        gbc.setState(0xfd1, 0xd8f9, 0xe490, 0x21ff, 0xdf91, 0xd42c, 0x1, 0x1);
        gbc.writeMem(0xfd1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd8f9);
        EXPECT(gbc.pc(), 0xfd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0119
        gbc.setState(0xad45, 0x2bf1, 0xc00, 0xa5c4, 0xc88, 0xb5b, 0x0, 0x0);
        gbc.writeMem(0xad45, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2bf1);
        EXPECT(gbc.pc(), 0xad47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad45), 0xcb);
        EXPECT(gbc.readMem(0xad46), 0xbb);
        // CB BB 011A
        gbc.setState(0xd9a1, 0x7940, 0x4ed0, 0xe001, 0x4f48, 0xd014, 0x0, 0x1);
        gbc.writeMem(0xd9a1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7940);
        EXPECT(gbc.pc(), 0xd9a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a1), 0xcb);
        EXPECT(gbc.readMem(0xd9a2), 0xbb);
        // CB BB 011B
        gbc.setState(0x454f, 0xd0e4, 0x8eb0, 0x5490, 0x19d6, 0xf634, 0x1, 0x1);
        gbc.writeMem(0x454f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd0e4);
        EXPECT(gbc.pc(), 0x4551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 011C
        gbc.setState(0xccaf, 0x6606, 0xa2a0, 0xacea, 0x588, 0x134c, 0x1, 0x0);
        gbc.writeMem(0xccaf, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6606);
        EXPECT(gbc.pc(), 0xccb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccaf), 0xcb);
        EXPECT(gbc.readMem(0xccb0), 0xbb);
        // CB BB 011D
        gbc.setState(0xd3b9, 0xb56f, 0x81d0, 0xd1a, 0x4b74, 0x1a8e, 0x1, 0x1);
        gbc.writeMem(0xd3b9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb56f);
        EXPECT(gbc.pc(), 0xd3bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b9), 0xcb);
        EXPECT(gbc.readMem(0xd3ba), 0xbb);
        // CB BB 011E
        gbc.setState(0x1e6b, 0x5982, 0xf90, 0x5ea9, 0xa283, 0xfa72, 0x0, 0x1);
        gbc.writeMem(0x1e6b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5982);
        EXPECT(gbc.pc(), 0x1e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 011F
        gbc.setState(0x5a1, 0x7a65, 0x1db0, 0x3a5c, 0x1fca, 0x2ea6, 0x0, 0x1);
        gbc.writeMem(0x5a1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7a65);
        EXPECT(gbc.pc(), 0x5a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0120
        gbc.setState(0x1432, 0x2332, 0xd680, 0xff31, 0x5cfc, 0xde4e, 0x1, 0x1);
        gbc.writeMem(0x1432, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2332);
        EXPECT(gbc.pc(), 0x1434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0121
        gbc.setState(0xdc55, 0x721b, 0x6f80, 0x3dc6, 0x7a01, 0xbfe3, 0x0, 0x1);
        gbc.writeMem(0xdc55, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x721b);
        EXPECT(gbc.pc(), 0xdc57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc55), 0xcb);
        EXPECT(gbc.readMem(0xdc56), 0xbb);
        // CB BB 0122
        gbc.setState(0x6cf6, 0x6663, 0x2f0, 0x6667, 0x2ee8, 0xf3df, 0x1, 0x1);
        gbc.writeMem(0x6cf6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6663);
        EXPECT(gbc.pc(), 0x6cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0123
        gbc.setState(0xd321, 0x2d0d, 0x8c90, 0x5cc4, 0x927b, 0xb8ce, 0x0, 0x0);
        gbc.writeMem(0xd321, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2d0d);
        EXPECT(gbc.pc(), 0xd323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd321), 0xcb);
        EXPECT(gbc.readMem(0xd322), 0xbb);
        // CB BB 0125
        gbc.setState(0xe05, 0xee91, 0x51e0, 0x9527, 0x6dd6, 0x28e1, 0x0, 0x1);
        gbc.writeMem(0xe05, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xee91);
        EXPECT(gbc.pc(), 0xe07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0126
        gbc.setState(0x6155, 0xf380, 0xbe60, 0xfc2e, 0x7ac6, 0x32b6, 0x0, 0x0);
        gbc.writeMem(0x6155, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf380);
        EXPECT(gbc.pc(), 0x6157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0127
        gbc.setState(0xad7d, 0x7013, 0xbb30, 0x478c, 0x1fff, 0x803a, 0x1, 0x0);
        gbc.writeMem(0xad7d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7013);
        EXPECT(gbc.pc(), 0xad7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad7d), 0xcb);
        EXPECT(gbc.readMem(0xad7e), 0xbb);
        // CB BB 0128
        gbc.setState(0x4160, 0x9db, 0x37c0, 0xde24, 0x8f0f, 0x5aad, 0x0, 0x1);
        gbc.writeMem(0x4160, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9db);
        EXPECT(gbc.pc(), 0x4162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0129
        gbc.setState(0x5893, 0xc81a, 0x1fc0, 0x32ba, 0xfb68, 0x7e98, 0x1, 0x1);
        gbc.writeMem(0x5893, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc81a);
        EXPECT(gbc.pc(), 0x5895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 012A
        gbc.setState(0xb2a2, 0x4028, 0x9df0, 0x5407, 0x97ea, 0x463d, 0x0, 0x0);
        gbc.writeMem(0xb2a2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4028);
        EXPECT(gbc.pc(), 0xb2a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a2), 0xcb);
        EXPECT(gbc.readMem(0xb2a3), 0xbb);
        // CB BB 012B
        gbc.setState(0x64a9, 0x8e6c, 0x7950, 0x8a14, 0x8703, 0x7519, 0x1, 0x1);
        gbc.writeMem(0x64a9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8e6c);
        EXPECT(gbc.pc(), 0x64ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 012C
        gbc.setState(0xcdda, 0x902f, 0x6af0, 0xc734, 0x8735, 0xc9d1, 0x1, 0x0);
        gbc.writeMem(0xcdda, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x902f);
        EXPECT(gbc.pc(), 0xcddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdda), 0xcb);
        EXPECT(gbc.readMem(0xcddb), 0xbb);
        // CB BB 012D
        gbc.setState(0x82ba, 0x4786, 0x6a00, 0xf593, 0xa45, 0x82ee, 0x1, 0x1);
        gbc.writeMem(0x82ba, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4786);
        EXPECT(gbc.pc(), 0x82bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ba), 0xcb);
        EXPECT(gbc.readMem(0x82bb), 0xbb);
        // CB BB 012E
        gbc.setState(0x49fa, 0xe766, 0x9950, 0x39f2, 0x68ca, 0xf6ed, 0x1, 0x0);
        gbc.writeMem(0x49fa, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe766);
        EXPECT(gbc.pc(), 0x49fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 012F
        gbc.setState(0x9279, 0xb5c9, 0xa230, 0x8c83, 0x6546, 0xa39f, 0x1, 0x1);
        gbc.writeMem(0x9279, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb5c9);
        EXPECT(gbc.pc(), 0x927b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9279), 0xcb);
        EXPECT(gbc.readMem(0x927a), 0xbb);
        // CB BB 0130
        gbc.setState(0xb3ab, 0x73b5, 0xf0b0, 0xafc1, 0x6f4c, 0xdb02, 0x0, 0x1);
        gbc.writeMem(0xb3ab, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x73b5);
        EXPECT(gbc.pc(), 0xb3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ab), 0xcb);
        EXPECT(gbc.readMem(0xb3ac), 0xbb);
        // CB BB 0131
        gbc.setState(0x5b47, 0x3ebf, 0xbe70, 0xf4e0, 0x8340, 0x2a0c, 0x1, 0x1);
        gbc.writeMem(0x5b47, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3ebf);
        EXPECT(gbc.pc(), 0x5b49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0132
        gbc.setState(0xd244, 0x3f48, 0x5780, 0x25de, 0x6e7e, 0xd4cb, 0x1, 0x1);
        gbc.writeMem(0xd244, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3f48);
        EXPECT(gbc.pc(), 0xd246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd244), 0xcb);
        EXPECT(gbc.readMem(0xd245), 0xbb);
        // CB BB 0134
        gbc.setState(0x9c2c, 0x9729, 0xed0, 0x2123, 0xceaf, 0xf174, 0x1, 0x0);
        gbc.writeMem(0x9c2c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9729);
        EXPECT(gbc.pc(), 0x9c2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c2c), 0xcb);
        EXPECT(gbc.readMem(0x9c2d), 0xbb);
        // CB BB 0135
        gbc.setState(0xd3ba, 0x967, 0x2130, 0x5057, 0x4514, 0xf2c2, 0x0, 0x0);
        gbc.writeMem(0xd3ba, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x967);
        EXPECT(gbc.pc(), 0xd3bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ba), 0xcb);
        EXPECT(gbc.readMem(0xd3bb), 0xbb);
        // CB BB 0136
        gbc.setState(0x62d0, 0x5b4, 0xfeb0, 0xc195, 0x64b2, 0x2f94, 0x1, 0x0);
        gbc.writeMem(0x62d0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5b4);
        EXPECT(gbc.pc(), 0x62d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0138
        gbc.setState(0xebc0, 0x2ed8, 0xc9c0, 0xc83e, 0xfb93, 0xa699, 0x1, 0x0);
        gbc.writeMem(0xebc0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2ed8);
        EXPECT(gbc.pc(), 0xebc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc0), 0xcb);
        EXPECT(gbc.readMem(0xebc1), 0xbb);
        // CB BB 0139
        gbc.setState(0x67f8, 0xcd33, 0xb3b0, 0xf73e, 0xd5f3, 0x6a11, 0x0, 0x1);
        gbc.writeMem(0x67f8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcd33);
        EXPECT(gbc.pc(), 0x67fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 013A
        gbc.setState(0x7994, 0xe500, 0x2da0, 0x475, 0xbf21, 0x4407, 0x0, 0x0);
        gbc.writeMem(0x7994, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe500);
        EXPECT(gbc.pc(), 0x7996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 013B
        gbc.setState(0xd7fb, 0x2d98, 0xdaa0, 0x4af, 0x8cb8, 0x575, 0x0, 0x1);
        gbc.writeMem(0xd7fb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2d98);
        EXPECT(gbc.pc(), 0xd7fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7fb), 0xcb);
        EXPECT(gbc.readMem(0xd7fc), 0xbb);
        // CB BB 013C
        gbc.setState(0x4bdb, 0xfb4c, 0x2520, 0xb7da, 0xee3c, 0x7827, 0x0, 0x1);
        gbc.writeMem(0x4bdb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfb4c);
        EXPECT(gbc.pc(), 0x4bdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 013D
        gbc.setState(0x4d61, 0x8c4c, 0xf3f0, 0xd18, 0x794d, 0x6380, 0x1, 0x0);
        gbc.writeMem(0x4d61, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8c4c);
        EXPECT(gbc.pc(), 0x4d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 013E
        gbc.setState(0x59a6, 0xc0f1, 0xde80, 0x866a, 0xe47e, 0xeefd, 0x0, 0x1);
        gbc.writeMem(0x59a6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc0f1);
        EXPECT(gbc.pc(), 0x59a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 013F
        gbc.setState(0xafc8, 0xdb74, 0x9f80, 0xa698, 0x40a0, 0xbbee, 0x1, 0x0);
        gbc.writeMem(0xafc8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdb74);
        EXPECT(gbc.pc(), 0xafca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc8), 0xcb);
        EXPECT(gbc.readMem(0xafc9), 0xbb);
        // CB BB 0140
        gbc.setState(0x3356, 0x7828, 0xe660, 0x5208, 0x3461, 0xaef8, 0x0, 0x0);
        gbc.writeMem(0x3356, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7828);
        EXPECT(gbc.pc(), 0x3358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0141
        gbc.setState(0x723b, 0xe5ae, 0x4a20, 0xf124, 0x5a0c, 0x5e18, 0x1, 0x1);
        gbc.writeMem(0x723b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe5ae);
        EXPECT(gbc.pc(), 0x723d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0142
        gbc.setState(0x2e0, 0xe360, 0xa250, 0x46a8, 0x7136, 0x6eb8, 0x0, 0x1);
        gbc.writeMem(0x2e0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe360);
        EXPECT(gbc.pc(), 0x2e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0143
        gbc.setState(0xee75, 0x6bc7, 0x7530, 0xe93e, 0x46fe, 0x6666, 0x1, 0x0);
        gbc.writeMem(0xee75, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6bc7);
        EXPECT(gbc.pc(), 0xee77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee75), 0xcb);
        EXPECT(gbc.readMem(0xee76), 0xbb);
        // CB BB 0144
        gbc.setState(0x6c70, 0x5b57, 0xea30, 0x592a, 0xcfe, 0x1eb5, 0x1, 0x1);
        gbc.writeMem(0x6c70, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5b57);
        EXPECT(gbc.pc(), 0x6c72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0145
        gbc.setState(0xb64f, 0x9121, 0xe3f0, 0xb073, 0xd39a, 0x71b5, 0x1, 0x0);
        gbc.writeMem(0xb64f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9121);
        EXPECT(gbc.pc(), 0xb651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb64f), 0xcb);
        EXPECT(gbc.readMem(0xb650), 0xbb);
        // CB BB 0146
        gbc.setState(0x2cbb, 0x4ecb, 0x3660, 0x429e, 0x9de1, 0xe3fe, 0x1, 0x0);
        gbc.writeMem(0x2cbb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4ecb);
        EXPECT(gbc.pc(), 0x2cbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0147
        gbc.setState(0x98c6, 0xa4d4, 0xffd0, 0xcfef, 0x55f1, 0x9fd2, 0x1, 0x1);
        gbc.writeMem(0x98c6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa4d4);
        EXPECT(gbc.pc(), 0x98c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c6), 0xcb);
        EXPECT(gbc.readMem(0x98c7), 0xbb);
        // CB BB 0148
        gbc.setState(0x4a37, 0x66f, 0xb650, 0x1711, 0x4496, 0xce1, 0x0, 0x0);
        gbc.writeMem(0x4a37, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x66f);
        EXPECT(gbc.pc(), 0x4a39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0149
        gbc.setState(0x3487, 0xd9e3, 0xc170, 0x8981, 0x9722, 0x5f3e, 0x1, 0x0);
        gbc.writeMem(0x3487, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd9e3);
        EXPECT(gbc.pc(), 0x3489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 014A
        gbc.setState(0x3875, 0xdc8d, 0xa230, 0xbeee, 0xca3a, 0xb49, 0x0, 0x1);
        gbc.writeMem(0x3875, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdc8d);
        EXPECT(gbc.pc(), 0x3877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 014B
        gbc.setState(0x210e, 0xf95e, 0xcfd0, 0x6d8d, 0x15df, 0xadb8, 0x0, 0x0);
        gbc.writeMem(0x210e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf95e);
        EXPECT(gbc.pc(), 0x2110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 014C
        gbc.setState(0x916c, 0xb763, 0xf2b0, 0x7436, 0xe510, 0xd954, 0x1, 0x1);
        gbc.writeMem(0x916c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb763);
        EXPECT(gbc.pc(), 0x916e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x916c), 0xcb);
        EXPECT(gbc.readMem(0x916d), 0xbb);
        // CB BB 014E
        gbc.setState(0x8839, 0x1f1b, 0x4690, 0x6dfe, 0x7212, 0xf317, 0x0, 0x1);
        gbc.writeMem(0x8839, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1f1b);
        EXPECT(gbc.pc(), 0x883b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8839), 0xcb);
        EXPECT(gbc.readMem(0x883a), 0xbb);
        // CB BB 014F
        gbc.setState(0x98c0, 0x202c, 0xa770, 0x3f1f, 0x80d8, 0xe70f, 0x0, 0x1);
        gbc.writeMem(0x98c0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x202c);
        EXPECT(gbc.pc(), 0x98c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c0), 0xcb);
        EXPECT(gbc.readMem(0x98c1), 0xbb);
        // CB BB 0151
        gbc.setState(0xab16, 0x6d1d, 0xe0f0, 0x9203, 0xc00e, 0x4002, 0x0, 0x0);
        gbc.writeMem(0xab16, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6d1d);
        EXPECT(gbc.pc(), 0xab18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab16), 0xcb);
        EXPECT(gbc.readMem(0xab17), 0xbb);
        // CB BB 0152
        gbc.setState(0x26a0, 0x1c3d, 0x7840, 0x89, 0x51a7, 0x13e2, 0x1, 0x1);
        gbc.writeMem(0x26a0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1c3d);
        EXPECT(gbc.pc(), 0x26a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0153
        gbc.setState(0xb47b, 0x871, 0xf40, 0x9410, 0xda7d, 0x24c2, 0x1, 0x1);
        gbc.writeMem(0xb47b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x871);
        EXPECT(gbc.pc(), 0xb47d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb47b), 0xcb);
        EXPECT(gbc.readMem(0xb47c), 0xbb);
        // CB BB 0154
        gbc.setState(0x54a1, 0x7904, 0x65d0, 0x39e1, 0x707, 0x675e, 0x1, 0x0);
        gbc.writeMem(0x54a1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7904);
        EXPECT(gbc.pc(), 0x54a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0155
        gbc.setState(0x9096, 0xd1bb, 0xb7f0, 0xae54, 0x61ba, 0x5c21, 0x1, 0x0);
        gbc.writeMem(0x9096, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd1bb);
        EXPECT(gbc.pc(), 0x9098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9096), 0xcb);
        EXPECT(gbc.readMem(0x9097), 0xbb);
        // CB BB 0156
        gbc.setState(0x1833, 0x9081, 0x7020, 0x2e61, 0xd90a, 0xa950, 0x1, 0x1);
        gbc.writeMem(0x1833, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9081);
        EXPECT(gbc.pc(), 0x1835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0157
        gbc.setState(0xe383, 0x7dbc, 0xc490, 0x52ab, 0x786, 0x7682, 0x1, 0x1);
        gbc.writeMem(0xe383, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7dbc);
        EXPECT(gbc.pc(), 0xe385);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe383), 0xcb);
        EXPECT(gbc.readMem(0xe384), 0xbb);
        // CB BB 0158
        gbc.setState(0xa283, 0x25fb, 0xda0, 0xd64c, 0x8bce, 0xbab5, 0x0, 0x1);
        gbc.writeMem(0xa283, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x25fb);
        EXPECT(gbc.pc(), 0xa285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa283), 0xcb);
        EXPECT(gbc.readMem(0xa284), 0xbb);
        // CB BB 0159
        gbc.setState(0xaab5, 0x6686, 0x9a50, 0x5172, 0x6009, 0x1a02, 0x1, 0x1);
        gbc.writeMem(0xaab5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6686);
        EXPECT(gbc.pc(), 0xaab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab5), 0xcb);
        EXPECT(gbc.readMem(0xaab6), 0xbb);
        // CB BB 015A
        gbc.setState(0x8587, 0x5fa2, 0x8d30, 0x747d, 0x18a4, 0x5807, 0x0, 0x1);
        gbc.writeMem(0x8587, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5fa2);
        EXPECT(gbc.pc(), 0x8589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8587), 0xcb);
        EXPECT(gbc.readMem(0x8588), 0xbb);
        // CB BB 015B
        gbc.setState(0x3698, 0x1ab6, 0x3230, 0x30d5, 0xab9a, 0x8dc2, 0x1, 0x0);
        gbc.writeMem(0x3698, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1ab6);
        EXPECT(gbc.pc(), 0x369a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 015C
        gbc.setState(0x85c, 0x420b, 0xe9e0, 0xe2fb, 0x1542, 0x7c9b, 0x1, 0x1);
        gbc.writeMem(0x85c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x420b);
        EXPECT(gbc.pc(), 0x85e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 015D
        gbc.setState(0xd8bf, 0x6bed, 0x6090, 0xd1d0, 0x6bf0, 0x33c4, 0x1, 0x1);
        gbc.writeMem(0xd8bf, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6bed);
        EXPECT(gbc.pc(), 0xd8c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8bf), 0xcb);
        EXPECT(gbc.readMem(0xd8c0), 0xbb);
        // CB BB 015E
        gbc.setState(0x1ffe, 0x7f5f, 0xbe90, 0xc26e, 0xf479, 0xdc5e, 0x0, 0x0);
        gbc.writeMem(0x1ffe, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7f5f);
        EXPECT(gbc.pc(), 0x2000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0160
        gbc.setState(0x77c8, 0x1e1e, 0x72f0, 0xf8d2, 0x2c4a, 0xfb5b, 0x1, 0x0);
        gbc.writeMem(0x77c8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1e1e);
        EXPECT(gbc.pc(), 0x77ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0161
        gbc.setState(0x84b0, 0xba66, 0x31f0, 0x81da, 0x3d9, 0xe39d, 0x1, 0x0);
        gbc.writeMem(0x84b0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xba66);
        EXPECT(gbc.pc(), 0x84b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b0), 0xcb);
        EXPECT(gbc.readMem(0x84b1), 0xbb);
        // CB BB 0162
        gbc.setState(0x3a2e, 0xa824, 0xb260, 0x92ad, 0xea2e, 0x2ff3, 0x0, 0x0);
        gbc.writeMem(0x3a2e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa824);
        EXPECT(gbc.pc(), 0x3a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0163
        gbc.setState(0xd451, 0x4448, 0x6a00, 0x3ad4, 0xf96b, 0x273, 0x1, 0x1);
        gbc.writeMem(0xd451, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4448);
        EXPECT(gbc.pc(), 0xd453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd451), 0xcb);
        EXPECT(gbc.readMem(0xd452), 0xbb);
        // CB BB 0164
        gbc.setState(0xeabd, 0x5a7, 0x9d70, 0x93e2, 0xa685, 0x35a, 0x1, 0x0);
        gbc.writeMem(0xeabd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5a7);
        EXPECT(gbc.pc(), 0xeabf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeabd), 0xcb);
        EXPECT(gbc.readMem(0xeabe), 0xbb);
        // CB BB 0165
        gbc.setState(0x2102, 0x2389, 0xa6c0, 0xd49f, 0x482e, 0x5cfa, 0x1, 0x1);
        gbc.writeMem(0x2102, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2389);
        EXPECT(gbc.pc(), 0x2104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0166
        gbc.setState(0x7542, 0x8864, 0x35a0, 0x57e0, 0xdcff, 0xb346, 0x1, 0x0);
        gbc.writeMem(0x7542, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8864);
        EXPECT(gbc.pc(), 0x7544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0167
        gbc.setState(0xeb48, 0x18b9, 0xac60, 0x7503, 0xdde7, 0x8bac, 0x1, 0x0);
        gbc.writeMem(0xeb48, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x18b9);
        EXPECT(gbc.pc(), 0xeb4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb48), 0xcb);
        EXPECT(gbc.readMem(0xeb49), 0xbb);
        // CB BB 0168
        gbc.setState(0x3e6, 0xd88e, 0x7930, 0xe2d7, 0x7ff4, 0x4b49, 0x1, 0x1);
        gbc.writeMem(0x3e6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd88e);
        EXPECT(gbc.pc(), 0x3e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0169
        gbc.setState(0xba3b, 0x9645, 0x6630, 0xebca, 0x1bb0, 0xbd99, 0x1, 0x1);
        gbc.writeMem(0xba3b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9645);
        EXPECT(gbc.pc(), 0xba3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba3b), 0xcb);
        EXPECT(gbc.readMem(0xba3c), 0xbb);
        // CB BB 016A
        gbc.setState(0xd206, 0x3477, 0xcb30, 0xc234, 0x64d8, 0xbf26, 0x1, 0x0);
        gbc.writeMem(0xd206, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3477);
        EXPECT(gbc.pc(), 0xd208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd206), 0xcb);
        EXPECT(gbc.readMem(0xd207), 0xbb);
        // CB BB 016B
        gbc.setState(0x78ff, 0x6652, 0x8180, 0x583e, 0xb33a, 0x4ec0, 0x0, 0x1);
        gbc.writeMem(0x78ff, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6652);
        EXPECT(gbc.pc(), 0x7901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 016C
        gbc.setState(0x17c, 0x35f, 0xc5c0, 0x6858, 0xb868, 0xf43, 0x0, 0x0);
        gbc.writeMem(0x17c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x35f);
        EXPECT(gbc.pc(), 0x17e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 016D
        gbc.setState(0x6179, 0x8ee1, 0x3d20, 0xe945, 0xd1f1, 0xd369, 0x0, 0x1);
        gbc.writeMem(0x6179, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8ee1);
        EXPECT(gbc.pc(), 0x617b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 016E
        gbc.setState(0x404e, 0x89b6, 0x6280, 0x80aa, 0xd6a3, 0x6317, 0x0, 0x1);
        gbc.writeMem(0x404e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x89b6);
        EXPECT(gbc.pc(), 0x4050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 016F
        gbc.setState(0xd6c1, 0x7f46, 0xcc00, 0x422f, 0xe150, 0x4733, 0x0, 0x0);
        gbc.writeMem(0xd6c1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7f46);
        EXPECT(gbc.pc(), 0xd6c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c1), 0xcb);
        EXPECT(gbc.readMem(0xd6c2), 0xbb);
        // CB BB 0170
        gbc.setState(0x4588, 0x37f2, 0x3810, 0xc34c, 0x7f84, 0x8ec8, 0x1, 0x1);
        gbc.writeMem(0x4588, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x37f2);
        EXPECT(gbc.pc(), 0x458a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0171
        gbc.setState(0x3228, 0x8b39, 0x1d90, 0x6ea6, 0x26bb, 0xd664, 0x1, 0x0);
        gbc.writeMem(0x3228, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8b39);
        EXPECT(gbc.pc(), 0x322a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0172
        gbc.setState(0x2a6d, 0x400e, 0x80, 0xa608, 0x481, 0x850, 0x1, 0x0);
        gbc.writeMem(0x2a6d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x400e);
        EXPECT(gbc.pc(), 0x2a6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0174
        gbc.setState(0xae4, 0xf1c, 0xc730, 0xde38, 0xdc0e, 0xcd2c, 0x0, 0x1);
        gbc.writeMem(0xae4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf1c);
        EXPECT(gbc.pc(), 0xae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0175
        gbc.setState(0xe70e, 0x7cb4, 0xcce0, 0x8b53, 0x3556, 0x4cc1, 0x0, 0x0);
        gbc.writeMem(0xe70e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7cb4);
        EXPECT(gbc.pc(), 0xe710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe70e), 0xcb);
        EXPECT(gbc.readMem(0xe70f), 0xbb);
        // CB BB 0176
        gbc.setState(0xb312, 0xd928, 0x52f0, 0xca26, 0x64d8, 0x5e5f, 0x0, 0x1);
        gbc.writeMem(0xb312, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd928);
        EXPECT(gbc.pc(), 0xb314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb312), 0xcb);
        EXPECT(gbc.readMem(0xb313), 0xbb);
        // CB BB 0177
        gbc.setState(0x78a6, 0x3f93, 0x4890, 0x41fd, 0x5b5b, 0x5048, 0x1, 0x0);
        gbc.writeMem(0x78a6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3f93);
        EXPECT(gbc.pc(), 0x78a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0178
        gbc.setState(0x1bd5, 0x1f3a, 0x98b0, 0xc1de, 0xd94c, 0xfbab, 0x1, 0x0);
        gbc.writeMem(0x1bd5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1f3a);
        EXPECT(gbc.pc(), 0x1bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0179
        gbc.setState(0x8128, 0xcde8, 0xb040, 0xa2e1, 0x6040, 0xacae, 0x1, 0x0);
        gbc.writeMem(0x8128, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcde8);
        EXPECT(gbc.pc(), 0x812a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8128), 0xcb);
        EXPECT(gbc.readMem(0x8129), 0xbb);
        // CB BB 017A
        gbc.setState(0x25fe, 0x60bd, 0xdc00, 0x1667, 0xf471, 0x15b, 0x0, 0x1);
        gbc.writeMem(0x25fe, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x60bd);
        EXPECT(gbc.pc(), 0x2600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 017B
        gbc.setState(0xce24, 0x23ae, 0x1fa0, 0x2024, 0x2eb5, 0x4bb1, 0x1, 0x0);
        gbc.writeMem(0xce24, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x23ae);
        EXPECT(gbc.pc(), 0xce26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce24), 0xcb);
        EXPECT(gbc.readMem(0xce25), 0xbb);
        // CB BB 017C
        gbc.setState(0x36b2, 0x9a4c, 0x7ea0, 0xdc14, 0x7e33, 0xa30a, 0x1, 0x0);
        gbc.writeMem(0x36b2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9a4c);
        EXPECT(gbc.pc(), 0x36b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 017D
        gbc.setState(0x916a, 0xc6ab, 0xa560, 0x2768, 0xc450, 0x9c99, 0x1, 0x0);
        gbc.writeMem(0x916a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc6ab);
        EXPECT(gbc.pc(), 0x916c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x916a), 0xcb);
        EXPECT(gbc.readMem(0x916b), 0xbb);
        // CB BB 017E
        gbc.setState(0x8e06, 0x67c7, 0x71a0, 0xf1ff, 0xd721, 0xa778, 0x0, 0x1);
        gbc.writeMem(0x8e06, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x67c7);
        EXPECT(gbc.pc(), 0x8e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e06), 0xcb);
        EXPECT(gbc.readMem(0x8e07), 0xbb);
        // CB BB 017F
        gbc.setState(0xda99, 0x4172, 0x9eb0, 0xfd19, 0x63c8, 0x82f0, 0x0, 0x0);
        gbc.writeMem(0xda99, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4172);
        EXPECT(gbc.pc(), 0xda9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda99), 0xcb);
        EXPECT(gbc.readMem(0xda9a), 0xbb);
        // CB BB 0181
        gbc.setState(0x208, 0x1250, 0xbc70, 0x34fb, 0x9b91, 0x3fc3, 0x0, 0x1);
        gbc.writeMem(0x208, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1250);
        EXPECT(gbc.pc(), 0x20a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0182
        gbc.setState(0x52f6, 0x72b0, 0xfb20, 0xcf2a, 0xea54, 0x8e4b, 0x1, 0x0);
        gbc.writeMem(0x52f6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x72b0);
        EXPECT(gbc.pc(), 0x52f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0183
        gbc.setState(0xadaa, 0x2cfd, 0x5c50, 0xf914, 0x658a, 0x9f40, 0x0, 0x1);
        gbc.writeMem(0xadaa, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2cfd);
        EXPECT(gbc.pc(), 0xadac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadaa), 0xcb);
        EXPECT(gbc.readMem(0xadab), 0xbb);
        // CB BB 0184
        gbc.setState(0x4b23, 0xed42, 0xe330, 0x9eda, 0x639f, 0xcd46, 0x1, 0x0);
        gbc.writeMem(0x4b23, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xed42);
        EXPECT(gbc.pc(), 0x4b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0185
        gbc.setState(0x6da1, 0x747b, 0x6240, 0x565a, 0x74bc, 0x80f0, 0x1, 0x1);
        gbc.writeMem(0x6da1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x747b);
        EXPECT(gbc.pc(), 0x6da3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0186
        gbc.setState(0xed35, 0xfbd1, 0x1980, 0xa443, 0xfa05, 0x4b17, 0x0, 0x1);
        gbc.writeMem(0xed35, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfbd1);
        EXPECT(gbc.pc(), 0xed37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed35), 0xcb);
        EXPECT(gbc.readMem(0xed36), 0xbb);
        // CB BB 0188
        gbc.setState(0x13b0, 0x3be4, 0x2c00, 0x50c4, 0xbda3, 0x2ce2, 0x1, 0x0);
        gbc.writeMem(0x13b0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3be4);
        EXPECT(gbc.pc(), 0x13b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0189
        gbc.setState(0x3c66, 0xac95, 0x7450, 0x4bb3, 0xadee, 0x2083, 0x1, 0x0);
        gbc.writeMem(0x3c66, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xac95);
        EXPECT(gbc.pc(), 0x3c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 018A
        gbc.setState(0x561e, 0x5cee, 0xb9d0, 0x7109, 0xa6d0, 0xc4db, 0x1, 0x0);
        gbc.writeMem(0x561e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5cee);
        EXPECT(gbc.pc(), 0x5620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 018B
        gbc.setState(0x492a, 0xf54a, 0xa6e0, 0x2a70, 0x2710, 0x5045, 0x0, 0x1);
        gbc.writeMem(0x492a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf54a);
        EXPECT(gbc.pc(), 0x492c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 018C
        gbc.setState(0xeef4, 0xd543, 0x4cf0, 0xa9e8, 0xd01a, 0xf5f8, 0x1, 0x1);
        gbc.writeMem(0xeef4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd543);
        EXPECT(gbc.pc(), 0xeef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef4), 0xcb);
        EXPECT(gbc.readMem(0xeef5), 0xbb);
        // CB BB 018D
        gbc.setState(0x2a7c, 0x11fa, 0xee00, 0x4155, 0x587a, 0x455c, 0x1, 0x0);
        gbc.writeMem(0x2a7c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x11fa);
        EXPECT(gbc.pc(), 0x2a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 018E
        gbc.setState(0x2e90, 0x8b0e, 0x4e50, 0x7968, 0xa738, 0xf541, 0x1, 0x1);
        gbc.writeMem(0x2e90, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8b0e);
        EXPECT(gbc.pc(), 0x2e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 018F
        gbc.setState(0x5adc, 0x4dfc, 0xf0, 0x8d91, 0x19e1, 0x55ef, 0x1, 0x1);
        gbc.writeMem(0x5adc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4dfc);
        EXPECT(gbc.pc(), 0x5ade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0190
        gbc.setState(0x3cfc, 0x6d48, 0x26a0, 0x30f, 0x65ec, 0xc789, 0x0, 0x0);
        gbc.writeMem(0x3cfc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6d48);
        EXPECT(gbc.pc(), 0x3cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0191
        gbc.setState(0x4bc1, 0xa6d8, 0x4780, 0x64ce, 0xd586, 0x5faa, 0x1, 0x0);
        gbc.writeMem(0x4bc1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa6d8);
        EXPECT(gbc.pc(), 0x4bc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0192
        gbc.setState(0xec99, 0x55a, 0x27c0, 0x2bc8, 0x1a28, 0x7849, 0x1, 0x1);
        gbc.writeMem(0xec99, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x55a);
        EXPECT(gbc.pc(), 0xec9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec99), 0xcb);
        EXPECT(gbc.readMem(0xec9a), 0xbb);
        // CB BB 0193
        gbc.setState(0x2ed9, 0x8ccd, 0x8930, 0x65e, 0xa300, 0x6395, 0x0, 0x1);
        gbc.writeMem(0x2ed9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8ccd);
        EXPECT(gbc.pc(), 0x2edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0195
        gbc.setState(0xc32f, 0x5115, 0x4540, 0xfcc8, 0x9f4f, 0x459e, 0x1, 0x1);
        gbc.writeMem(0xc32f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5115);
        EXPECT(gbc.pc(), 0xc331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc32f), 0xcb);
        EXPECT(gbc.readMem(0xc330), 0xbb);
        // CB BB 0197
        gbc.setState(0x88a7, 0x5998, 0x14c0, 0x239b, 0xfc8e, 0x506, 0x1, 0x1);
        gbc.writeMem(0x88a7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5998);
        EXPECT(gbc.pc(), 0x88a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a7), 0xcb);
        EXPECT(gbc.readMem(0x88a8), 0xbb);
        // CB BB 0198
        gbc.setState(0xc05, 0x8c04, 0xdf70, 0x968d, 0xba0f, 0xd79b, 0x0, 0x1);
        gbc.writeMem(0xc05, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8c04);
        EXPECT(gbc.pc(), 0xc07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0199
        gbc.setState(0x9167, 0x670b, 0x6d90, 0xa69c, 0xf11c, 0x7ace, 0x0, 0x1);
        gbc.writeMem(0x9167, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x670b);
        EXPECT(gbc.pc(), 0x9169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9167), 0xcb);
        EXPECT(gbc.readMem(0x9168), 0xbb);
        // CB BB 019A
        gbc.setState(0xabb6, 0x3f13, 0x4680, 0x2600, 0x7334, 0x1599, 0x0, 0x1);
        gbc.writeMem(0xabb6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3f13);
        EXPECT(gbc.pc(), 0xabb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb6), 0xcb);
        EXPECT(gbc.readMem(0xabb7), 0xbb);
        // CB BB 019B
        gbc.setState(0x6eed, 0x9ce1, 0xd8c0, 0x9418, 0xb779, 0x4e7c, 0x0, 0x0);
        gbc.writeMem(0x6eed, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9ce1);
        EXPECT(gbc.pc(), 0x6eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 019C
        gbc.setState(0xd6ee, 0xbf75, 0xc2c0, 0x93ec, 0x3bda, 0x9b91, 0x0, 0x1);
        gbc.writeMem(0xd6ee, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbf75);
        EXPECT(gbc.pc(), 0xd6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ee), 0xcb);
        EXPECT(gbc.readMem(0xd6ef), 0xbb);
        // CB BB 019D
        gbc.setState(0x8f03, 0xd6cf, 0x55c0, 0x93a2, 0x2c3f, 0x9001, 0x0, 0x0);
        gbc.writeMem(0x8f03, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd6cf);
        EXPECT(gbc.pc(), 0x8f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f03), 0xcb);
        EXPECT(gbc.readMem(0x8f04), 0xbb);
        // CB BB 019E
        gbc.setState(0x3564, 0x6f41, 0x9920, 0xd00c, 0x1335, 0x1e75, 0x0, 0x1);
        gbc.writeMem(0x3564, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6f41);
        EXPECT(gbc.pc(), 0x3566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 019F
        gbc.setState(0x542, 0x9c1a, 0x2060, 0xc068, 0x4ead, 0x5938, 0x0, 0x0);
        gbc.writeMem(0x542, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9c1a);
        EXPECT(gbc.pc(), 0x544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01A0
        gbc.setState(0x6bc, 0xfdb, 0x77b0, 0xa26d, 0xb20e, 0x488d, 0x0, 0x0);
        gbc.writeMem(0x6bc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xfdb);
        EXPECT(gbc.pc(), 0x6be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01A1
        gbc.setState(0xb89c, 0xe6c7, 0x8c90, 0x8a87, 0xe72d, 0xbe94, 0x1, 0x0);
        gbc.writeMem(0xb89c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe6c7);
        EXPECT(gbc.pc(), 0xb89e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89c), 0xcb);
        EXPECT(gbc.readMem(0xb89d), 0xbb);
        // CB BB 01A2
        gbc.setState(0x80a1, 0x2b92, 0x3a10, 0x2bed, 0x7e54, 0xcbde, 0x0, 0x1);
        gbc.writeMem(0x80a1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2b92);
        EXPECT(gbc.pc(), 0x80a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80a1), 0xcb);
        EXPECT(gbc.readMem(0x80a2), 0xbb);
        // CB BB 01A3
        gbc.setState(0xc86c, 0xbcf5, 0xe630, 0x72a, 0x7a28, 0xb015, 0x1, 0x1);
        gbc.writeMem(0xc86c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbcf5);
        EXPECT(gbc.pc(), 0xc86e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc86c), 0xcb);
        EXPECT(gbc.readMem(0xc86d), 0xbb);
        // CB BB 01A4
        gbc.setState(0xa809, 0x52b5, 0x2000, 0xac6e, 0xc1f7, 0x56b9, 0x0, 0x0);
        gbc.writeMem(0xa809, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x52b5);
        EXPECT(gbc.pc(), 0xa80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa809), 0xcb);
        EXPECT(gbc.readMem(0xa80a), 0xbb);
        // CB BB 01A5
        gbc.setState(0xaa90, 0x376a, 0xa210, 0x56de, 0x6f8e, 0x5668, 0x1, 0x0);
        gbc.writeMem(0xaa90, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x376a);
        EXPECT(gbc.pc(), 0xaa92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa90), 0xcb);
        EXPECT(gbc.readMem(0xaa91), 0xbb);
        // CB BB 01A6
        gbc.setState(0x5940, 0x5c26, 0x5570, 0xea6d, 0xb477, 0xc7e1, 0x1, 0x0);
        gbc.writeMem(0x5940, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5c26);
        EXPECT(gbc.pc(), 0x5942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01A7
        gbc.setState(0xc6, 0xd971, 0xdab0, 0xf85e, 0xe164, 0x9395, 0x0, 0x0);
        gbc.writeMem(0xc6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd971);
        EXPECT(gbc.pc(), 0xc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01A8
        gbc.setState(0xd218, 0x33cf, 0x4470, 0x35f6, 0x4e9, 0x6406, 0x1, 0x0);
        gbc.writeMem(0xd218, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x33cf);
        EXPECT(gbc.pc(), 0xd21a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd218), 0xcb);
        EXPECT(gbc.readMem(0xd219), 0xbb);
        // CB BB 01A9
        gbc.setState(0xe178, 0xf972, 0x8bb0, 0x4238, 0xea39, 0x9ec8, 0x1, 0x1);
        gbc.writeMem(0xe178, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf972);
        EXPECT(gbc.pc(), 0xe17a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe178), 0xcb);
        EXPECT(gbc.readMem(0xe179), 0xbb);
        // CB BB 01AA
        gbc.setState(0x92d9, 0x8b3, 0x9310, 0x99a4, 0xcb3d, 0x286b, 0x1, 0x1);
        gbc.writeMem(0x92d9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8b3);
        EXPECT(gbc.pc(), 0x92db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d9), 0xcb);
        EXPECT(gbc.readMem(0x92da), 0xbb);
        // CB BB 01AB
        gbc.setState(0xe6c3, 0xa746, 0x7280, 0x556d, 0xa898, 0x1527, 0x0, 0x1);
        gbc.writeMem(0xe6c3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa746);
        EXPECT(gbc.pc(), 0xe6c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c3), 0xcb);
        EXPECT(gbc.readMem(0xe6c4), 0xbb);
        // CB BB 01AC
        gbc.setState(0x340e, 0xa8c1, 0x7c70, 0xf117, 0xc671, 0xab4c, 0x0, 0x1);
        gbc.writeMem(0x340e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa8c1);
        EXPECT(gbc.pc(), 0x3410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01AE
        gbc.setState(0x4ee2, 0x73e7, 0x1b10, 0xae7f, 0x2077, 0x8ee7, 0x0, 0x0);
        gbc.writeMem(0x4ee2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x73e7);
        EXPECT(gbc.pc(), 0x4ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01AF
        gbc.setState(0x9f65, 0x2e43, 0x32b0, 0xe170, 0x28ff, 0xe976, 0x0, 0x0);
        gbc.writeMem(0x9f65, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2e43);
        EXPECT(gbc.pc(), 0x9f67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f65), 0xcb);
        EXPECT(gbc.readMem(0x9f66), 0xbb);
        // CB BB 01B0
        gbc.setState(0xea32, 0xc0b9, 0xcfc0, 0xb90d, 0xc63d, 0x47a, 0x1, 0x1);
        gbc.writeMem(0xea32, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc0b9);
        EXPECT(gbc.pc(), 0xea34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea32), 0xcb);
        EXPECT(gbc.readMem(0xea33), 0xbb);
        // CB BB 01B1
        gbc.setState(0x550e, 0xe5d8, 0xe090, 0x9746, 0x3a54, 0x748f, 0x0, 0x0);
        gbc.writeMem(0x550e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe5d8);
        EXPECT(gbc.pc(), 0x5510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01B2
        gbc.setState(0x4d98, 0xcc6c, 0x1390, 0x6e25, 0xa599, 0xe979, 0x0, 0x0);
        gbc.writeMem(0x4d98, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcc6c);
        EXPECT(gbc.pc(), 0x4d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01B3
        gbc.setState(0x52c1, 0xcbab, 0xd2d0, 0xd27, 0xaf9f, 0x1988, 0x0, 0x0);
        gbc.writeMem(0x52c1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xcbab);
        EXPECT(gbc.pc(), 0x52c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01B4
        gbc.setState(0x64e7, 0x2767, 0xc6e0, 0xc526, 0x9aa0, 0x38d9, 0x0, 0x0);
        gbc.writeMem(0x64e7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2767);
        EXPECT(gbc.pc(), 0x64e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01B5
        gbc.setState(0x526e, 0x87b1, 0x32c0, 0xcb4c, 0xaae, 0xf55b, 0x1, 0x1);
        gbc.writeMem(0x526e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x87b1);
        EXPECT(gbc.pc(), 0x5270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01B6
        gbc.setState(0xae9d, 0x32ad, 0x2d60, 0xfb25, 0x78a3, 0x72c5, 0x0, 0x1);
        gbc.writeMem(0xae9d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x32ad);
        EXPECT(gbc.pc(), 0xae9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae9d), 0xcb);
        EXPECT(gbc.readMem(0xae9e), 0xbb);
        // CB BB 01B8
        gbc.setState(0xe5d, 0xc9c3, 0xedb0, 0xdf8d, 0x38c6, 0xce64, 0x0, 0x0);
        gbc.writeMem(0xe5d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc9c3);
        EXPECT(gbc.pc(), 0xe5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01B9
        gbc.setState(0xa1e, 0x7656, 0x55e0, 0x3f38, 0xd242, 0x236f, 0x1, 0x1);
        gbc.writeMem(0xa1e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7656);
        EXPECT(gbc.pc(), 0xa20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01BA
        gbc.setState(0xfba, 0x8a8, 0x9d00, 0x368, 0x712d, 0x48ae, 0x0, 0x0);
        gbc.writeMem(0xfba, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8a8);
        EXPECT(gbc.pc(), 0xfbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01BB
        gbc.setState(0x436c, 0x48fc, 0x4db0, 0xde32, 0x5800, 0x1ec1, 0x0, 0x1);
        gbc.writeMem(0x436c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x48fc);
        EXPECT(gbc.pc(), 0x436e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01BC
        gbc.setState(0x9aeb, 0x252e, 0x7f60, 0xd236, 0x508c, 0xc13e, 0x1, 0x1);
        gbc.writeMem(0x9aeb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x252e);
        EXPECT(gbc.pc(), 0x9aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aeb), 0xcb);
        EXPECT(gbc.readMem(0x9aec), 0xbb);
        // CB BB 01BD
        gbc.setState(0xbc94, 0x35e1, 0x3100, 0x6291, 0x87a3, 0x24a5, 0x1, 0x1);
        gbc.writeMem(0xbc94, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x35e1);
        EXPECT(gbc.pc(), 0xbc96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc94), 0xcb);
        EXPECT(gbc.readMem(0xbc95), 0xbb);
        // CB BB 01BE
        gbc.setState(0x3c1c, 0xba3e, 0xcf60, 0xd83a, 0xf14a, 0x6c1e, 0x1, 0x1);
        gbc.writeMem(0x3c1c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xba3e);
        EXPECT(gbc.pc(), 0x3c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01BF
        gbc.setState(0xbc3f, 0x11ca, 0xc410, 0x6345, 0x358a, 0x5de7, 0x1, 0x1);
        gbc.writeMem(0xbc3f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x11ca);
        EXPECT(gbc.pc(), 0xbc41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc3f), 0xcb);
        EXPECT(gbc.readMem(0xbc40), 0xbb);
        // CB BB 01C0
        gbc.setState(0x5613, 0x48fc, 0x1500, 0xf921, 0x977d, 0x837e, 0x1, 0x0);
        gbc.writeMem(0x5613, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x48fc);
        EXPECT(gbc.pc(), 0x5615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01C3
        gbc.setState(0x2533, 0x173, 0x7270, 0x90b7, 0x3e65, 0x49a4, 0x1, 0x0);
        gbc.writeMem(0x2533, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x173);
        EXPECT(gbc.pc(), 0x2535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01C4
        gbc.setState(0xd368, 0x3a73, 0xcca0, 0x85a, 0xaad8, 0x2c90, 0x1, 0x0);
        gbc.writeMem(0xd368, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3a73);
        EXPECT(gbc.pc(), 0xd36a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd368), 0xcb);
        EXPECT(gbc.readMem(0xd369), 0xbb);
        // CB BB 01C5
        gbc.setState(0xe6b6, 0x5409, 0xfca0, 0x638c, 0x3e9a, 0xab29, 0x0, 0x1);
        gbc.writeMem(0xe6b6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5409);
        EXPECT(gbc.pc(), 0xe6b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b6), 0xcb);
        EXPECT(gbc.readMem(0xe6b7), 0xbb);
        // CB BB 01C6
        gbc.setState(0x7a29, 0x63ea, 0x1380, 0xc96a, 0xf550, 0xb8d2, 0x0, 0x1);
        gbc.writeMem(0x7a29, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x63ea);
        EXPECT(gbc.pc(), 0x7a2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01C8
        gbc.setState(0x1d2d, 0x7a88, 0xc990, 0xf68c, 0x2404, 0xe00b, 0x1, 0x0);
        gbc.writeMem(0x1d2d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7a88);
        EXPECT(gbc.pc(), 0x1d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01C9
        gbc.setState(0xd819, 0xd05b, 0x69e0, 0xc69, 0xd31, 0xbb13, 0x0, 0x0);
        gbc.writeMem(0xd819, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd05b);
        EXPECT(gbc.pc(), 0xd81b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd819), 0xcb);
        EXPECT(gbc.readMem(0xd81a), 0xbb);
        // CB BB 01CA
        gbc.setState(0x3cd0, 0xd8b, 0x4a10, 0x38ed, 0x546d, 0xa22b, 0x0, 0x0);
        gbc.writeMem(0x3cd0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd8b);
        EXPECT(gbc.pc(), 0x3cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01CB
        gbc.setState(0x9859, 0x121e, 0x7eb0, 0xb17e, 0x7ccc, 0x49f0, 0x0, 0x0);
        gbc.writeMem(0x9859, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x121e);
        EXPECT(gbc.pc(), 0x985b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9859), 0xcb);
        EXPECT(gbc.readMem(0x985a), 0xbb);
        // CB BB 01CC
        gbc.setState(0xb0a0, 0xa494, 0x8ce0, 0xa1ec, 0x38da, 0x32f9, 0x1, 0x1);
        gbc.writeMem(0xb0a0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa494);
        EXPECT(gbc.pc(), 0xb0a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a0), 0xcb);
        EXPECT(gbc.readMem(0xb0a1), 0xbb);
        // CB BB 01CD
        gbc.setState(0x6927, 0x6ee, 0x7450, 0xc640, 0xd543, 0xb4dd, 0x1, 0x0);
        gbc.writeMem(0x6927, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6ee);
        EXPECT(gbc.pc(), 0x6929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01CE
        gbc.setState(0x449a, 0x734c, 0x27a0, 0x85dc, 0x816f, 0xf9c3, 0x1, 0x1);
        gbc.writeMem(0x449a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x734c);
        EXPECT(gbc.pc(), 0x449c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01CF
        gbc.setState(0x190d, 0xa318, 0x8c80, 0xf785, 0x516f, 0x2b1, 0x1, 0x1);
        gbc.writeMem(0x190d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa318);
        EXPECT(gbc.pc(), 0x190f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01D0
        gbc.setState(0x8755, 0xb680, 0xa370, 0x244c, 0x7b8c, 0xa273, 0x0, 0x1);
        gbc.writeMem(0x8755, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb680);
        EXPECT(gbc.pc(), 0x8757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8755), 0xcb);
        EXPECT(gbc.readMem(0x8756), 0xbb);
        // CB BB 01D1
        gbc.setState(0xb1ff, 0x9d4a, 0x8910, 0x42af, 0x897d, 0xb887, 0x0, 0x1);
        gbc.writeMem(0xb1ff, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9d4a);
        EXPECT(gbc.pc(), 0xb201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ff), 0xcb);
        EXPECT(gbc.readMem(0xb200), 0xbb);
        // CB BB 01D2
        gbc.setState(0x7198, 0x6f4f, 0x74d0, 0x710a, 0xa660, 0x42d1, 0x1, 0x1);
        gbc.writeMem(0x7198, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6f4f);
        EXPECT(gbc.pc(), 0x719a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01D3
        gbc.setState(0xeea3, 0xe1a8, 0xf3d0, 0x95ab, 0x2898, 0x8c99, 0x1, 0x0);
        gbc.writeMem(0xeea3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe1a8);
        EXPECT(gbc.pc(), 0xeea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea3), 0xcb);
        EXPECT(gbc.readMem(0xeea4), 0xbb);
        // CB BB 01D4
        gbc.setState(0x144c, 0x3700, 0x2c60, 0x206a, 0x247a, 0xe382, 0x1, 0x0);
        gbc.writeMem(0x144c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3700);
        EXPECT(gbc.pc(), 0x144e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01D5
        gbc.setState(0x1aa7, 0xeef6, 0x2350, 0xea00, 0xc5f5, 0x6027, 0x0, 0x1);
        gbc.writeMem(0x1aa7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xeef6);
        EXPECT(gbc.pc(), 0x1aa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01D6
        gbc.setState(0x2164, 0xe035, 0x9770, 0x8b81, 0xfc2a, 0x6a06, 0x0, 0x0);
        gbc.writeMem(0x2164, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe035);
        EXPECT(gbc.pc(), 0x2166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01D7
        gbc.setState(0x71e0, 0x7f22, 0xf530, 0xe0d6, 0x8dff, 0xb4d7, 0x1, 0x1);
        gbc.writeMem(0x71e0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7f22);
        EXPECT(gbc.pc(), 0x71e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01D8
        gbc.setState(0xa52b, 0x9b10, 0x550, 0x3ab1, 0xd8db, 0xc5d4, 0x1, 0x0);
        gbc.writeMem(0xa52b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9b10);
        EXPECT(gbc.pc(), 0xa52d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa52b), 0xcb);
        EXPECT(gbc.readMem(0xa52c), 0xbb);
        // CB BB 01D9
        gbc.setState(0xda7f, 0xa1df, 0xb620, 0x984e, 0xdf4f, 0x2648, 0x1, 0x0);
        gbc.writeMem(0xda7f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa1df);
        EXPECT(gbc.pc(), 0xda81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7f), 0xcb);
        EXPECT(gbc.readMem(0xda80), 0xbb);
        // CB BB 01DB
        gbc.setState(0xbc4f, 0xc3de, 0xe30, 0x4536, 0xe619, 0x7b9c, 0x0, 0x0);
        gbc.writeMem(0xbc4f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc3de);
        EXPECT(gbc.pc(), 0xbc51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc4f), 0xcb);
        EXPECT(gbc.readMem(0xbc50), 0xbb);
        // CB BB 01DC
        gbc.setState(0x5f31, 0xdbb7, 0xe670, 0x982f, 0xd345, 0x2513, 0x0, 0x1);
        gbc.writeMem(0x5f31, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdbb7);
        EXPECT(gbc.pc(), 0x5f33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01DE
        gbc.setState(0x23b4, 0xaf18, 0xb630, 0xc4b0, 0x93c9, 0xf2a7, 0x0, 0x0);
        gbc.writeMem(0x23b4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xaf18);
        EXPECT(gbc.pc(), 0x23b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01DF
        gbc.setState(0xd1a7, 0xa7d4, 0x1060, 0x2c0b, 0xc915, 0xe321, 0x0, 0x1);
        gbc.writeMem(0xd1a7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa7d4);
        EXPECT(gbc.pc(), 0xd1a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a7), 0xcb);
        EXPECT(gbc.readMem(0xd1a8), 0xbb);
        // CB BB 01E0
        gbc.setState(0x1325, 0x5a9b, 0x8c60, 0xeabe, 0xfa4b, 0xd2bf, 0x0, 0x1);
        gbc.writeMem(0x1325, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5a9b);
        EXPECT(gbc.pc(), 0x1327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01E1
        gbc.setState(0xce82, 0xee38, 0x8970, 0x8c63, 0x831e, 0xc405, 0x0, 0x0);
        gbc.writeMem(0xce82, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xee38);
        EXPECT(gbc.pc(), 0xce84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce82), 0xcb);
        EXPECT(gbc.readMem(0xce83), 0xbb);
        // CB BB 01E2
        gbc.setState(0x4dc3, 0x18d1, 0x6460, 0x1282, 0x82c4, 0xd7b7, 0x1, 0x1);
        gbc.writeMem(0x4dc3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x18d1);
        EXPECT(gbc.pc(), 0x4dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01E3
        gbc.setState(0xb512, 0xb070, 0x7f40, 0xaeaa, 0xf7fe, 0xd920, 0x0, 0x0);
        gbc.writeMem(0xb512, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb070);
        EXPECT(gbc.pc(), 0xb514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb512), 0xcb);
        EXPECT(gbc.readMem(0xb513), 0xbb);
        // CB BB 01E4
        gbc.setState(0x9d29, 0xf634, 0x3910, 0x2b9a, 0x4ea2, 0x944b, 0x1, 0x0);
        gbc.writeMem(0x9d29, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf634);
        EXPECT(gbc.pc(), 0x9d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d29), 0xcb);
        EXPECT(gbc.readMem(0x9d2a), 0xbb);
        // CB BB 01E5
        gbc.setState(0x28c8, 0xd85d, 0x46e0, 0xf459, 0xf5b, 0xf9cc, 0x0, 0x1);
        gbc.writeMem(0x28c8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd85d);
        EXPECT(gbc.pc(), 0x28ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01E6
        gbc.setState(0xe4ce, 0x688d, 0x43e0, 0xcff8, 0xaa9a, 0xce54, 0x1, 0x0);
        gbc.writeMem(0xe4ce, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x688d);
        EXPECT(gbc.pc(), 0xe4d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ce), 0xcb);
        EXPECT(gbc.readMem(0xe4cf), 0xbb);
        // CB BB 01E9
        gbc.setState(0x930f, 0x9bff, 0x3390, 0x673d, 0xc588, 0x925a, 0x0, 0x1);
        gbc.writeMem(0x930f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9bff);
        EXPECT(gbc.pc(), 0x9311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930f), 0xcb);
        EXPECT(gbc.readMem(0x9310), 0xbb);
        // CB BB 01EA
        gbc.setState(0xa0f6, 0xb2b7, 0xbec0, 0x77a8, 0x2bbb, 0x72c7, 0x1, 0x0);
        gbc.writeMem(0xa0f6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb2b7);
        EXPECT(gbc.pc(), 0xa0f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f6), 0xcb);
        EXPECT(gbc.readMem(0xa0f7), 0xbb);
        // CB BB 01EB
        gbc.setState(0x120, 0x72c9, 0x81e0, 0x5030, 0x6ba3, 0x25e, 0x0, 0x1);
        gbc.writeMem(0x120, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x72c9);
        EXPECT(gbc.pc(), 0x122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01EC
        gbc.setState(0x6b50, 0x89a0, 0x42d0, 0xa99d, 0xe52e, 0x12d6, 0x0, 0x0);
        gbc.writeMem(0x6b50, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x89a0);
        EXPECT(gbc.pc(), 0x6b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01ED
        gbc.setState(0xcc51, 0xa2df, 0x76d0, 0xdcbc, 0xac82, 0x4abc, 0x0, 0x1);
        gbc.writeMem(0xcc51, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa2df);
        EXPECT(gbc.pc(), 0xcc53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc51), 0xcb);
        EXPECT(gbc.readMem(0xcc52), 0xbb);
        // CB BB 01EE
        gbc.setState(0x6154, 0x55f1, 0xb820, 0x381a, 0xc89a, 0x3ace, 0x0, 0x1);
        gbc.writeMem(0x6154, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x55f1);
        EXPECT(gbc.pc(), 0x6156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01EF
        gbc.setState(0x80e8, 0xf3ae, 0xe1a0, 0xfb, 0xa5e5, 0x91c9, 0x1, 0x1);
        gbc.writeMem(0x80e8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf3ae);
        EXPECT(gbc.pc(), 0x80ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e8), 0xcb);
        EXPECT(gbc.readMem(0x80e9), 0xbb);
        // CB BB 01F0
        gbc.setState(0x9074, 0xb25b, 0xad0, 0x7bda, 0x82f4, 0xc87a, 0x0, 0x1);
        gbc.writeMem(0x9074, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb25b);
        EXPECT(gbc.pc(), 0x9076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9074), 0xcb);
        EXPECT(gbc.readMem(0x9075), 0xbb);
        // CB BB 01F1
        gbc.setState(0x85dc, 0x4fc0, 0xc860, 0xe3ab, 0xa188, 0x9133, 0x1, 0x1);
        gbc.writeMem(0x85dc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4fc0);
        EXPECT(gbc.pc(), 0x85de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85dc), 0xcb);
        EXPECT(gbc.readMem(0x85dd), 0xbb);
        // CB BB 01F2
        gbc.setState(0x67c8, 0xf2c3, 0xb0, 0xde32, 0x99fb, 0x3176, 0x0, 0x1);
        gbc.writeMem(0x67c8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf2c3);
        EXPECT(gbc.pc(), 0x67ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01F3
        gbc.setState(0x7d04, 0x687c, 0x41e0, 0xd4d, 0x4664, 0x9584, 0x0, 0x1);
        gbc.writeMem(0x7d04, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x687c);
        EXPECT(gbc.pc(), 0x7d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01F4
        gbc.setState(0xe6af, 0x7152, 0xb190, 0xd902, 0x9f62, 0x1ff3, 0x0, 0x1);
        gbc.writeMem(0xe6af, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7152);
        EXPECT(gbc.pc(), 0xe6b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6af), 0xcb);
        EXPECT(gbc.readMem(0xe6b0), 0xbb);
        // CB BB 01F5
        gbc.setState(0x6ce8, 0xd9e7, 0x7d00, 0x61cd, 0x9ccb, 0x94f3, 0x0, 0x1);
        gbc.writeMem(0x6ce8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd9e7);
        EXPECT(gbc.pc(), 0x6cea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01F6
        gbc.setState(0x15fc, 0xa85c, 0x8b10, 0x52b7, 0x8a6, 0xc2f7, 0x1, 0x1);
        gbc.writeMem(0x15fc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa85c);
        EXPECT(gbc.pc(), 0x15fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01F7
        gbc.setState(0xafe6, 0x3e90, 0xdc50, 0xe5c1, 0xf200, 0xed7, 0x0, 0x1);
        gbc.writeMem(0xafe6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3e90);
        EXPECT(gbc.pc(), 0xafe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe6), 0xcb);
        EXPECT(gbc.readMem(0xafe7), 0xbb);
        // CB BB 01F8
        gbc.setState(0x33c, 0x794e, 0xd330, 0xf919, 0x7065, 0x6e3b, 0x1, 0x1);
        gbc.writeMem(0x33c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x794e);
        EXPECT(gbc.pc(), 0x33e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01F9
        gbc.setState(0xc86d, 0x980, 0x8e0, 0x2d, 0x5f8e, 0xd3cc, 0x1, 0x1);
        gbc.writeMem(0xc86d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x980);
        EXPECT(gbc.pc(), 0xc86f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc86d), 0xcb);
        EXPECT(gbc.readMem(0xc86e), 0xbb);
        // CB BB 01FA
        gbc.setState(0x8ad4, 0x388a, 0x68e0, 0xa92e, 0x93ff, 0x6232, 0x0, 0x1);
        gbc.writeMem(0x8ad4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x388a);
        EXPECT(gbc.pc(), 0x8ad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad4), 0xcb);
        EXPECT(gbc.readMem(0x8ad5), 0xbb);
        // CB BB 01FC
        gbc.setState(0x42ad, 0xd597, 0x7350, 0xfbd9, 0xd063, 0x5ab1, 0x0, 0x1);
        gbc.writeMem(0x42ad, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd597);
        EXPECT(gbc.pc(), 0x42af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 01FD
        gbc.setState(0x2fb2, 0x9945, 0xb7c0, 0x9db6, 0x1dae, 0x22dd, 0x0, 0x1);
        gbc.writeMem(0x2fb2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9945);
        EXPECT(gbc.pc(), 0x2fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 01FE
        gbc.setState(0x97dd, 0x1329, 0x7fd0, 0xad17, 0xb935, 0xb3c0, 0x1, 0x1);
        gbc.writeMem(0x97dd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1329);
        EXPECT(gbc.pc(), 0x97df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97dd), 0xcb);
        EXPECT(gbc.readMem(0x97de), 0xbb);
        // CB BB 01FF
        gbc.setState(0x48d2, 0xea3c, 0xf590, 0xd48, 0x1338, 0x386e, 0x1, 0x1);
        gbc.writeMem(0x48d2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xea3c);
        EXPECT(gbc.pc(), 0x48d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0200
        gbc.setState(0x151a, 0x188b, 0x51d0, 0xbd36, 0x7bdc, 0x485f, 0x1, 0x0);
        gbc.writeMem(0x151a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x188b);
        EXPECT(gbc.pc(), 0x151c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0201
        gbc.setState(0x259c, 0x2a3a, 0xbd50, 0xe539, 0xc902, 0x2f0, 0x0, 0x1);
        gbc.writeMem(0x259c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2a3a);
        EXPECT(gbc.pc(), 0x259e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0202
        gbc.setState(0x651e, 0x4062, 0x9bd0, 0xb6cd, 0xe298, 0x61, 0x0, 0x0);
        gbc.writeMem(0x651e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4062);
        EXPECT(gbc.pc(), 0x6520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0203
        gbc.setState(0x1ed5, 0x86fb, 0xb580, 0x698, 0x8d2e, 0x4fc5, 0x1, 0x1);
        gbc.writeMem(0x1ed5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x86fb);
        EXPECT(gbc.pc(), 0x1ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0204
        gbc.setState(0x5f0b, 0xa72a, 0x5550, 0xdaa3, 0xcbeb, 0xa239, 0x1, 0x0);
        gbc.writeMem(0x5f0b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa72a);
        EXPECT(gbc.pc(), 0x5f0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0205
        gbc.setState(0x97bd, 0xb6fa, 0xd6b0, 0x36c8, 0xbc4d, 0xa384, 0x1, 0x1);
        gbc.writeMem(0x97bd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb6fa);
        EXPECT(gbc.pc(), 0x97bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97bd), 0xcb);
        EXPECT(gbc.readMem(0x97be), 0xbb);
        // CB BB 0206
        gbc.setState(0xcf25, 0xe3d, 0xde80, 0x34f6, 0x8d7f, 0x7e70, 0x0, 0x1);
        gbc.writeMem(0xcf25, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe3d);
        EXPECT(gbc.pc(), 0xcf27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf25), 0xcb);
        EXPECT(gbc.readMem(0xcf26), 0xbb);
        // CB BB 0207
        gbc.setState(0x640e, 0xf932, 0x8820, 0xae8, 0xb210, 0x4357, 0x0, 0x0);
        gbc.writeMem(0x640e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf932);
        EXPECT(gbc.pc(), 0x6410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0208
        gbc.setState(0xdccf, 0xb49c, 0xb600, 0x3fc3, 0x9b3d, 0x753a, 0x1, 0x1);
        gbc.writeMem(0xdccf, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb49c);
        EXPECT(gbc.pc(), 0xdcd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdccf), 0xcb);
        EXPECT(gbc.readMem(0xdcd0), 0xbb);
        // CB BB 0209
        gbc.setState(0xc754, 0x1163, 0x4680, 0x90a8, 0x6b83, 0x2e62, 0x0, 0x1);
        gbc.writeMem(0xc754, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1163);
        EXPECT(gbc.pc(), 0xc756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc754), 0xcb);
        EXPECT(gbc.readMem(0xc755), 0xbb);
        // CB BB 020A
        gbc.setState(0x1050, 0xdda8, 0x4660, 0x747d, 0x47f7, 0x62f9, 0x0, 0x0);
        gbc.writeMem(0x1050, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdda8);
        EXPECT(gbc.pc(), 0x1052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 020C
        gbc.setState(0x22f5, 0x1d2, 0x7fb0, 0x76e1, 0xeca6, 0xf1bf, 0x0, 0x0);
        gbc.writeMem(0x22f5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1d2);
        EXPECT(gbc.pc(), 0x22f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 020D
        gbc.setState(0x7d73, 0x1c1c, 0x1d40, 0xc89f, 0xb4ae, 0x7f09, 0x0, 0x1);
        gbc.writeMem(0x7d73, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1c1c);
        EXPECT(gbc.pc(), 0x7d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 020E
        gbc.setState(0x2cd2, 0x608c, 0x80b0, 0xf143, 0x448a, 0x9306, 0x1, 0x1);
        gbc.writeMem(0x2cd2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x608c);
        EXPECT(gbc.pc(), 0x2cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 020F
        gbc.setState(0x26f2, 0x50d, 0xc9f0, 0xd602, 0xef8d, 0xe7cb, 0x1, 0x1);
        gbc.writeMem(0x26f2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x50d);
        EXPECT(gbc.pc(), 0x26f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0210
        gbc.setState(0x37cc, 0x68d5, 0x2d70, 0xc54d, 0x2279, 0x4714, 0x1, 0x0);
        gbc.writeMem(0x37cc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x68d5);
        EXPECT(gbc.pc(), 0x37ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0211
        gbc.setState(0x80a8, 0x81d2, 0x4360, 0xd315, 0xf8, 0xbc10, 0x1, 0x1);
        gbc.writeMem(0x80a8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x81d2);
        EXPECT(gbc.pc(), 0x80aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a8), 0xcb);
        EXPECT(gbc.readMem(0x80a9), 0xbb);
        // CB BB 0212
        gbc.setState(0x4299, 0x2de8, 0x4be0, 0x104d, 0xbad6, 0x4024, 0x1, 0x0);
        gbc.writeMem(0x4299, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2de8);
        EXPECT(gbc.pc(), 0x429b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0213
        gbc.setState(0xe910, 0x3b6e, 0x22c0, 0x9ac7, 0xd00c, 0x2499, 0x0, 0x1);
        gbc.writeMem(0xe910, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3b6e);
        EXPECT(gbc.pc(), 0xe912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe910), 0xcb);
        EXPECT(gbc.readMem(0xe911), 0xbb);
        // CB BB 0214
        gbc.setState(0x8c88, 0x7c77, 0x8da0, 0x4cfe, 0x3c4a, 0x456d, 0x1, 0x1);
        gbc.writeMem(0x8c88, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7c77);
        EXPECT(gbc.pc(), 0x8c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c88), 0xcb);
        EXPECT(gbc.readMem(0x8c89), 0xbb);
        // CB BB 0215
        gbc.setState(0xa3f2, 0x9966, 0x48c0, 0x815, 0x8d1a, 0xae28, 0x0, 0x1);
        gbc.writeMem(0xa3f2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9966);
        EXPECT(gbc.pc(), 0xa3f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f2), 0xcb);
        EXPECT(gbc.readMem(0xa3f3), 0xbb);
        // CB BB 0216
        gbc.setState(0xde61, 0x6b63, 0xd070, 0x6936, 0x98d5, 0x513b, 0x1, 0x0);
        gbc.writeMem(0xde61, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6b63);
        EXPECT(gbc.pc(), 0xde63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde61), 0xcb);
        EXPECT(gbc.readMem(0xde62), 0xbb);
        // CB BB 0217
        gbc.setState(0xbeda, 0xbc9c, 0xdca0, 0xbf59, 0x98b1, 0x9a90, 0x0, 0x0);
        gbc.writeMem(0xbeda, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xbc9c);
        EXPECT(gbc.pc(), 0xbedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeda), 0xcb);
        EXPECT(gbc.readMem(0xbedb), 0xbb);
        // CB BB 0218
        gbc.setState(0x6258, 0xd1d4, 0xd570, 0x894f, 0xa131, 0x5986, 0x0, 0x1);
        gbc.writeMem(0x6258, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd1d4);
        EXPECT(gbc.pc(), 0x625a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0219
        gbc.setState(0x1490, 0x960e, 0x6630, 0x79ce, 0xdf92, 0x3317, 0x1, 0x1);
        gbc.writeMem(0x1490, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x960e);
        EXPECT(gbc.pc(), 0x1492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 021A
        gbc.setState(0xb042, 0xdc99, 0x8470, 0xb58, 0x9d7a, 0x3967, 0x0, 0x0);
        gbc.writeMem(0xb042, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xdc99);
        EXPECT(gbc.pc(), 0xb044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb042), 0xcb);
        EXPECT(gbc.readMem(0xb043), 0xbb);
        // CB BB 021B
        gbc.setState(0x10a, 0xea8f, 0xb530, 0x4c9b, 0xeff4, 0x45e2, 0x1, 0x0);
        gbc.writeMem(0x10a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xea8f);
        EXPECT(gbc.pc(), 0x10c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 021C
        gbc.setState(0xc885, 0xcc76, 0x3fd0, 0x87e3, 0x9788, 0x8455, 0x1, 0x1);
        gbc.writeMem(0xc885, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xcc76);
        EXPECT(gbc.pc(), 0xc887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc885), 0xcb);
        EXPECT(gbc.readMem(0xc886), 0xbb);
        // CB BB 021D
        gbc.setState(0x19fc, 0x2549, 0xf990, 0x9a2a, 0xa433, 0x8798, 0x0, 0x1);
        gbc.writeMem(0x19fc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2549);
        EXPECT(gbc.pc(), 0x19fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 021E
        gbc.setState(0xcfa7, 0x7dec, 0x9fc0, 0xf45c, 0xd581, 0x9947, 0x1, 0x1);
        gbc.writeMem(0xcfa7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7dec);
        EXPECT(gbc.pc(), 0xcfa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfa7), 0xcb);
        EXPECT(gbc.readMem(0xcfa8), 0xbb);
        // CB BB 021F
        gbc.setState(0x7935, 0xde63, 0xe4c0, 0xa063, 0x3d49, 0x3a89, 0x1, 0x0);
        gbc.writeMem(0x7935, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xde63);
        EXPECT(gbc.pc(), 0x7937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0220
        gbc.setState(0xb287, 0xc6c1, 0xb9d0, 0x298c, 0xcbd1, 0x520b, 0x0, 0x0);
        gbc.writeMem(0xb287, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc6c1);
        EXPECT(gbc.pc(), 0xb289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb287), 0xcb);
        EXPECT(gbc.readMem(0xb288), 0xbb);
        // CB BB 0221
        gbc.setState(0x6133, 0x1f04, 0x3570, 0x6d02, 0xc190, 0x16a7, 0x1, 0x1);
        gbc.writeMem(0x6133, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1f04);
        EXPECT(gbc.pc(), 0x6135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0222
        gbc.setState(0x54f4, 0x1a6, 0xd980, 0x5128, 0x360f, 0xe627, 0x0, 0x1);
        gbc.writeMem(0x54f4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1a6);
        EXPECT(gbc.pc(), 0x54f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0223
        gbc.setState(0x2dd9, 0x5cac, 0xed90, 0x236a, 0x5623, 0x54e2, 0x0, 0x0);
        gbc.writeMem(0x2dd9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5cac);
        EXPECT(gbc.pc(), 0x2ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0224
        gbc.setState(0x67ab, 0xf4e0, 0x6f90, 0x19c6, 0xc9e5, 0x9c77, 0x0, 0x0);
        gbc.writeMem(0x67ab, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf4e0);
        EXPECT(gbc.pc(), 0x67ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0225
        gbc.setState(0x4fed, 0x6c13, 0xab30, 0xa297, 0xff4c, 0x5439, 0x1, 0x0);
        gbc.writeMem(0x4fed, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6c13);
        EXPECT(gbc.pc(), 0x4fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0226
        gbc.setState(0x452c, 0xf348, 0x5a60, 0xdc3c, 0xd027, 0xb100, 0x0, 0x1);
        gbc.writeMem(0x452c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf348);
        EXPECT(gbc.pc(), 0x452e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0227
        gbc.setState(0xcd41, 0x6705, 0xe450, 0xc907, 0x9cd2, 0x7896, 0x1, 0x0);
        gbc.writeMem(0xcd41, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6705);
        EXPECT(gbc.pc(), 0xcd43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd41), 0xcb);
        EXPECT(gbc.readMem(0xcd42), 0xbb);
        // CB BB 0228
        gbc.setState(0x476f, 0xc1eb, 0x50, 0xd384, 0xd3cf, 0x57c3, 0x0, 0x1);
        gbc.writeMem(0x476f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc1eb);
        EXPECT(gbc.pc(), 0x4771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0229
        gbc.setState(0x7293, 0xbcc3, 0xed50, 0x8d74, 0xc533, 0xc5f9, 0x1, 0x1);
        gbc.writeMem(0x7293, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbcc3);
        EXPECT(gbc.pc(), 0x7295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 022A
        gbc.setState(0x580e, 0xfc09, 0xefd0, 0x7ef0, 0x1382, 0xf135, 0x0, 0x0);
        gbc.writeMem(0x580e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfc09);
        EXPECT(gbc.pc(), 0x5810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 022B
        gbc.setState(0xdd04, 0xe6e7, 0xe6a0, 0x61e5, 0xa683, 0xc384, 0x0, 0x1);
        gbc.writeMem(0xdd04, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe6e7);
        EXPECT(gbc.pc(), 0xdd06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd04), 0xcb);
        EXPECT(gbc.readMem(0xdd05), 0xbb);
        // CB BB 022C
        gbc.setState(0x44f0, 0x133f, 0x1b20, 0x8333, 0xbcfe, 0xef2e, 0x1, 0x0);
        gbc.writeMem(0x44f0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x133f);
        EXPECT(gbc.pc(), 0x44f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 022D
        gbc.setState(0xe1a, 0x4829, 0x1cc0, 0x88ad, 0x432a, 0x9153, 0x1, 0x1);
        gbc.writeMem(0xe1a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4829);
        EXPECT(gbc.pc(), 0xe1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 022E
        gbc.setState(0xdfe7, 0xa9be, 0x1d10, 0x2915, 0xa89e, 0xbf5f, 0x1, 0x0);
        gbc.writeMem(0xdfe7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa9be);
        EXPECT(gbc.pc(), 0xdfe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe7), 0xcb);
        EXPECT(gbc.readMem(0xdfe8), 0xbb);
        // CB BB 022F
        gbc.setState(0x4a44, 0xdd95, 0xbe30, 0x36e, 0xfd4f, 0xdbe0, 0x0, 0x1);
        gbc.writeMem(0x4a44, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xdd95);
        EXPECT(gbc.pc(), 0x4a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0230
        gbc.setState(0x7919, 0x7ebb, 0x8b50, 0x2935, 0xdc7c, 0x371f, 0x0, 0x0);
        gbc.writeMem(0x7919, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7ebb);
        EXPECT(gbc.pc(), 0x791b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0231
        gbc.setState(0x2cd7, 0x7cd, 0xe1a0, 0x48ec, 0x9cc5, 0xae6d, 0x0, 0x1);
        gbc.writeMem(0x2cd7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7cd);
        EXPECT(gbc.pc(), 0x2cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0232
        gbc.setState(0x24a3, 0x77a4, 0x9c40, 0x2d81, 0xb792, 0x24aa, 0x0, 0x0);
        gbc.writeMem(0x24a3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x77a4);
        EXPECT(gbc.pc(), 0x24a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0233
        gbc.setState(0x47b8, 0xaaac, 0x44d0, 0xc15a, 0xb0d6, 0x59e7, 0x0, 0x0);
        gbc.writeMem(0x47b8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xaaac);
        EXPECT(gbc.pc(), 0x47ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0234
        gbc.setState(0x5161, 0xec08, 0x9e60, 0x552, 0xfaef, 0x951b, 0x0, 0x0);
        gbc.writeMem(0x5161, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xec08);
        EXPECT(gbc.pc(), 0x5163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0235
        gbc.setState(0xbea1, 0x5aaa, 0x1d40, 0x7dde, 0xc126, 0x66c4, 0x0, 0x1);
        gbc.writeMem(0xbea1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5aaa);
        EXPECT(gbc.pc(), 0xbea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbea1), 0xcb);
        EXPECT(gbc.readMem(0xbea2), 0xbb);
        // CB BB 0236
        gbc.setState(0x999a, 0xd1d5, 0x4080, 0x3dd0, 0xdb6e, 0xc96e, 0x1, 0x1);
        gbc.writeMem(0x999a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd1d5);
        EXPECT(gbc.pc(), 0x999c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x999a), 0xcb);
        EXPECT(gbc.readMem(0x999b), 0xbb);
        // CB BB 0237
        gbc.setState(0x467e, 0x154e, 0xbd20, 0x4090, 0xc212, 0xd0e3, 0x1, 0x0);
        gbc.writeMem(0x467e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x154e);
        EXPECT(gbc.pc(), 0x4680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0238
        gbc.setState(0x6b4b, 0x6d15, 0x5fa0, 0xdb16, 0xd3ae, 0x7c9e, 0x0, 0x0);
        gbc.writeMem(0x6b4b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6d15);
        EXPECT(gbc.pc(), 0x6b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0239
        gbc.setState(0xd431, 0x26ee, 0x8d10, 0x463, 0xd1f5, 0x8c32, 0x1, 0x1);
        gbc.writeMem(0xd431, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x26ee);
        EXPECT(gbc.pc(), 0xd433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd431), 0xcb);
        EXPECT(gbc.readMem(0xd432), 0xbb);
        // CB BB 023A
        gbc.setState(0x3c0f, 0x936c, 0xa0, 0xdca5, 0x72d2, 0x3d0b, 0x0, 0x0);
        gbc.writeMem(0x3c0f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x936c);
        EXPECT(gbc.pc(), 0x3c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 023B
        gbc.setState(0xb2a4, 0xa156, 0x81b0, 0x3191, 0x8957, 0x5e4c, 0x0, 0x1);
        gbc.writeMem(0xb2a4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa156);
        EXPECT(gbc.pc(), 0xb2a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a4), 0xcb);
        EXPECT(gbc.readMem(0xb2a5), 0xbb);
        // CB BB 023C
        gbc.setState(0x7d13, 0xc2c5, 0x6b00, 0x15b5, 0x1ed0, 0x12fa, 0x1, 0x1);
        gbc.writeMem(0x7d13, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc2c5);
        EXPECT(gbc.pc(), 0x7d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 023D
        gbc.setState(0x6e72, 0x85fd, 0x46f0, 0x27f0, 0xbbaf, 0x22dd, 0x0, 0x0);
        gbc.writeMem(0x6e72, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x85fd);
        EXPECT(gbc.pc(), 0x6e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 023E
        gbc.setState(0xa93d, 0x1eb6, 0x4b20, 0x699d, 0x2b90, 0xafb3, 0x1, 0x1);
        gbc.writeMem(0xa93d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1eb6);
        EXPECT(gbc.pc(), 0xa93f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa93d), 0xcb);
        EXPECT(gbc.readMem(0xa93e), 0xbb);
        // CB BB 023F
        gbc.setState(0x7eed, 0xc523, 0xe9c0, 0xcfb5, 0x2323, 0xdc25, 0x0, 0x1);
        gbc.writeMem(0x7eed, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc523);
        EXPECT(gbc.pc(), 0x7eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0240
        gbc.setState(0x5a75, 0x949, 0xf840, 0x2a6a, 0x674c, 0x9b9e, 0x0, 0x0);
        gbc.writeMem(0x5a75, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x949);
        EXPECT(gbc.pc(), 0x5a77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0241
        gbc.setState(0x7963, 0xd854, 0x76c0, 0x5493, 0xcbda, 0xc0aa, 0x0, 0x1);
        gbc.writeMem(0x7963, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd854);
        EXPECT(gbc.pc(), 0x7965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0242
        gbc.setState(0x761e, 0x5605, 0x3780, 0x1fd5, 0x9aec, 0x31dc, 0x0, 0x1);
        gbc.writeMem(0x761e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5605);
        EXPECT(gbc.pc(), 0x7620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0243
        gbc.setState(0xb7c5, 0xfe5d, 0x760, 0x8bb6, 0xff80, 0xe84c, 0x1, 0x1);
        gbc.writeMem(0xb7c5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfe5d);
        EXPECT(gbc.pc(), 0xb7c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c5), 0xcb);
        EXPECT(gbc.readMem(0xb7c6), 0xbb);
        // CB BB 0244
        gbc.setState(0x8883, 0x58a5, 0xd6f0, 0xeef7, 0xf082, 0xa46, 0x0, 0x1);
        gbc.writeMem(0x8883, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x58a5);
        EXPECT(gbc.pc(), 0x8885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8883), 0xcb);
        EXPECT(gbc.readMem(0x8884), 0xbb);
        // CB BB 0245
        gbc.setState(0xa7bf, 0x715d, 0xe6a0, 0xa9eb, 0xa037, 0xb7f4, 0x1, 0x1);
        gbc.writeMem(0xa7bf, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x715d);
        EXPECT(gbc.pc(), 0xa7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7bf), 0xcb);
        EXPECT(gbc.readMem(0xa7c0), 0xbb);
        // CB BB 0246
        gbc.setState(0xdf9d, 0x47f5, 0x9e70, 0x88ff, 0xd546, 0xcefa, 0x1, 0x0);
        gbc.writeMem(0xdf9d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x47f5);
        EXPECT(gbc.pc(), 0xdf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9d), 0xcb);
        EXPECT(gbc.readMem(0xdf9e), 0xbb);
        // CB BB 0247
        gbc.setState(0xee69, 0x1bb2, 0x6f80, 0x3ad3, 0xd4e5, 0xbfcb, 0x1, 0x1);
        gbc.writeMem(0xee69, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1bb2);
        EXPECT(gbc.pc(), 0xee6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee69), 0xcb);
        EXPECT(gbc.readMem(0xee6a), 0xbb);
        // CB BB 0248
        gbc.setState(0x4af5, 0x5eec, 0xcd80, 0xf3f5, 0x30f0, 0x59bb, 0x0, 0x1);
        gbc.writeMem(0x4af5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5eec);
        EXPECT(gbc.pc(), 0x4af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0249
        gbc.setState(0x685f, 0xfb8c, 0xf620, 0x9d44, 0xbf36, 0xbaa3, 0x0, 0x1);
        gbc.writeMem(0x685f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfb8c);
        EXPECT(gbc.pc(), 0x6861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 024A
        gbc.setState(0x246a, 0xec53, 0x3820, 0x6f83, 0xca48, 0x724, 0x0, 0x0);
        gbc.writeMem(0x246a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xec53);
        EXPECT(gbc.pc(), 0x246c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 024B
        gbc.setState(0x15c2, 0x7031, 0xa830, 0xb9af, 0xb278, 0x5835, 0x0, 0x1);
        gbc.writeMem(0x15c2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7031);
        EXPECT(gbc.pc(), 0x15c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 024C
        gbc.setState(0x3ec4, 0xe56b, 0xf440, 0x4020, 0x937, 0x694f, 0x0, 0x0);
        gbc.writeMem(0x3ec4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe56b);
        EXPECT(gbc.pc(), 0x3ec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 024D
        gbc.setState(0x18ed, 0x6ba2, 0x620, 0x34a8, 0x2b9a, 0x5227, 0x0, 0x0);
        gbc.writeMem(0x18ed, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6ba2);
        EXPECT(gbc.pc(), 0x18ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 024E
        gbc.setState(0x51ec, 0x4da9, 0xf0a0, 0xcf76, 0x93b4, 0x27b4, 0x0, 0x0);
        gbc.writeMem(0x51ec, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4da9);
        EXPECT(gbc.pc(), 0x51ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 024F
        gbc.setState(0xbbe1, 0x6d89, 0xbf40, 0x2276, 0x6f49, 0x59f3, 0x1, 0x0);
        gbc.writeMem(0xbbe1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6d89);
        EXPECT(gbc.pc(), 0xbbe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe1), 0xcb);
        EXPECT(gbc.readMem(0xbbe2), 0xbb);
        // CB BB 0250
        gbc.setState(0xea14, 0xbb9c, 0x6610, 0x1269, 0x786c, 0xf5a2, 0x1, 0x0);
        gbc.writeMem(0xea14, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbb9c);
        EXPECT(gbc.pc(), 0xea16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea14), 0xcb);
        EXPECT(gbc.readMem(0xea15), 0xbb);
        // CB BB 0251
        gbc.setState(0x101f, 0xdc68, 0x440, 0xcc66, 0x7d21, 0xe713, 0x1, 0x1);
        gbc.writeMem(0x101f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdc68);
        EXPECT(gbc.pc(), 0x1021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0252
        gbc.setState(0x6d0f, 0xa9af, 0xffd0, 0x2260, 0xf82e, 0x1ffa, 0x1, 0x1);
        gbc.writeMem(0x6d0f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa9af);
        EXPECT(gbc.pc(), 0x6d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0253
        gbc.setState(0x3659, 0x4c36, 0xb80, 0x6a31, 0x86f8, 0xb6e6, 0x0, 0x1);
        gbc.writeMem(0x3659, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4c36);
        EXPECT(gbc.pc(), 0x365b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0255
        gbc.setState(0xe8b4, 0x9a73, 0x9a10, 0xc74c, 0xffa2, 0xc1d7, 0x0, 0x1);
        gbc.writeMem(0xe8b4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9a73);
        EXPECT(gbc.pc(), 0xe8b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b4), 0xcb);
        EXPECT(gbc.readMem(0xe8b5), 0xbb);
        // CB BB 0256
        gbc.setState(0x3b54, 0xb72f, 0x85d0, 0xd73e, 0xd046, 0x4bf9, 0x1, 0x1);
        gbc.writeMem(0x3b54, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb72f);
        EXPECT(gbc.pc(), 0x3b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0258
        gbc.setState(0xf1d, 0x1e6, 0xa840, 0x4615, 0x149d, 0xa53f, 0x0, 0x0);
        gbc.writeMem(0xf1d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1e6);
        EXPECT(gbc.pc(), 0xf1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0259
        gbc.setState(0x6361, 0x56da, 0x6c60, 0x77c5, 0xd958, 0x2612, 0x0, 0x0);
        gbc.writeMem(0x6361, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x56da);
        EXPECT(gbc.pc(), 0x6363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 025A
        gbc.setState(0x9256, 0x3221, 0x4080, 0xb4cd, 0xc5cd, 0xc00, 0x1, 0x1);
        gbc.writeMem(0x9256, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3221);
        EXPECT(gbc.pc(), 0x9258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9256), 0xcb);
        EXPECT(gbc.readMem(0x9257), 0xbb);
        // CB BB 025B
        gbc.setState(0x6176, 0x630b, 0xa4f0, 0xdcab, 0x673, 0x8483, 0x0, 0x0);
        gbc.writeMem(0x6176, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x630b);
        EXPECT(gbc.pc(), 0x6178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 025C
        gbc.setState(0xcbd5, 0xffea, 0x2cd0, 0xad22, 0xb1db, 0x2f21, 0x0, 0x1);
        gbc.writeMem(0xcbd5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xffea);
        EXPECT(gbc.pc(), 0xcbd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd5), 0xcb);
        EXPECT(gbc.readMem(0xcbd6), 0xbb);
        // CB BB 025D
        gbc.setState(0x9b63, 0x7940, 0xc190, 0x856a, 0x30b2, 0xeb0d, 0x0, 0x1);
        gbc.writeMem(0x9b63, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7940);
        EXPECT(gbc.pc(), 0x9b65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b63), 0xcb);
        EXPECT(gbc.readMem(0x9b64), 0xbb);
        // CB BB 025E
        gbc.setState(0xd92e, 0x8363, 0x5fc0, 0x5f4b, 0x2a8e, 0xbd04, 0x0, 0x1);
        gbc.writeMem(0xd92e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8363);
        EXPECT(gbc.pc(), 0xd930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd92e), 0xcb);
        EXPECT(gbc.readMem(0xd92f), 0xbb);
        // CB BB 025F
        gbc.setState(0x4baf, 0x9bd6, 0x5c50, 0x1ea1, 0x698b, 0x462d, 0x0, 0x1);
        gbc.writeMem(0x4baf, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9bd6);
        EXPECT(gbc.pc(), 0x4bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0260
        gbc.setState(0x46d8, 0x36dc, 0xc9f0, 0xffbe, 0xc640, 0xdb38, 0x1, 0x1);
        gbc.writeMem(0x46d8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x36dc);
        EXPECT(gbc.pc(), 0x46da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0261
        gbc.setState(0x56fa, 0x1ab8, 0x88a0, 0xcfd5, 0x8bad, 0x856a, 0x1, 0x0);
        gbc.writeMem(0x56fa, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1ab8);
        EXPECT(gbc.pc(), 0x56fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0262
        gbc.setState(0x8a41, 0xffdf, 0xd040, 0xd243, 0x21d1, 0xd648, 0x0, 0x0);
        gbc.writeMem(0x8a41, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xffdf);
        EXPECT(gbc.pc(), 0x8a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a41), 0xcb);
        EXPECT(gbc.readMem(0x8a42), 0xbb);
        // CB BB 0263
        gbc.setState(0x80ac, 0x106f, 0xf000, 0xa826, 0xdd2b, 0x3ded, 0x1, 0x1);
        gbc.writeMem(0x80ac, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x106f);
        EXPECT(gbc.pc(), 0x80ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ac), 0xcb);
        EXPECT(gbc.readMem(0x80ad), 0xbb);
        // CB BB 0264
        gbc.setState(0x8c10, 0x1230, 0x8bd0, 0x3b89, 0x5ae3, 0xd968, 0x0, 0x0);
        gbc.writeMem(0x8c10, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1230);
        EXPECT(gbc.pc(), 0x8c12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c10), 0xcb);
        EXPECT(gbc.readMem(0x8c11), 0xbb);
        // CB BB 0265
        gbc.setState(0x7615, 0x60c1, 0xe340, 0x7f71, 0xda86, 0x55f7, 0x1, 0x1);
        gbc.writeMem(0x7615, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x60c1);
        EXPECT(gbc.pc(), 0x7617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0266
        gbc.setState(0xbd5e, 0x59a1, 0x5a70, 0x510e, 0x7189, 0x1b57, 0x1, 0x1);
        gbc.writeMem(0xbd5e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x59a1);
        EXPECT(gbc.pc(), 0xbd60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5e), 0xcb);
        EXPECT(gbc.readMem(0xbd5f), 0xbb);
        // CB BB 0267
        gbc.setState(0x37a, 0x234b, 0x7550, 0x440b, 0x52ee, 0xcc7b, 0x0, 0x1);
        gbc.writeMem(0x37a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x234b);
        EXPECT(gbc.pc(), 0x37c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0268
        gbc.setState(0x67c3, 0x1c4f, 0xe860, 0xa8da, 0xbe92, 0x1962, 0x1, 0x1);
        gbc.writeMem(0x67c3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1c4f);
        EXPECT(gbc.pc(), 0x67c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0269
        gbc.setState(0x5ecc, 0xeaea, 0x2e40, 0xf135, 0xacf3, 0x18a7, 0x0, 0x1);
        gbc.writeMem(0x5ecc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xeaea);
        EXPECT(gbc.pc(), 0x5ece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 026A
        gbc.setState(0x7e20, 0x21b, 0xc820, 0x2337, 0x702, 0x180, 0x0, 0x1);
        gbc.writeMem(0x7e20, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x21b);
        EXPECT(gbc.pc(), 0x7e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 026B
        gbc.setState(0x12f7, 0x855b, 0x7ec0, 0xab33, 0xfdce, 0x7698, 0x1, 0x1);
        gbc.writeMem(0x12f7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x855b);
        EXPECT(gbc.pc(), 0x12f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 026D
        gbc.setState(0xc76f, 0xa333, 0x5a30, 0x1580, 0xe729, 0x55d3, 0x0, 0x1);
        gbc.writeMem(0xc76f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa333);
        EXPECT(gbc.pc(), 0xc771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc76f), 0xcb);
        EXPECT(gbc.readMem(0xc770), 0xbb);
        // CB BB 026E
        gbc.setState(0x803e, 0x8efe, 0xb350, 0xd5c1, 0x554f, 0x7c54, 0x1, 0x0);
        gbc.writeMem(0x803e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8efe);
        EXPECT(gbc.pc(), 0x8040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803e), 0xcb);
        EXPECT(gbc.readMem(0x803f), 0xbb);
        // CB BB 026F
        gbc.setState(0xf42, 0x84cc, 0x30a0, 0xacbd, 0xc0fd, 0x9e64, 0x1, 0x0);
        gbc.writeMem(0xf42, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x84cc);
        EXPECT(gbc.pc(), 0xf44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0270
        gbc.setState(0x8b9c, 0xda0, 0x2780, 0xf029, 0xcecf, 0x46d3, 0x1, 0x1);
        gbc.writeMem(0x8b9c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xda0);
        EXPECT(gbc.pc(), 0x8b9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9c), 0xcb);
        EXPECT(gbc.readMem(0x8b9d), 0xbb);
        // CB BB 0271
        gbc.setState(0x9ff0, 0x1be0, 0x150, 0x768c, 0x811d, 0x50f7, 0x1, 0x0);
        gbc.writeMem(0x9ff0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1be0);
        EXPECT(gbc.pc(), 0x9ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff0), 0xcb);
        EXPECT(gbc.readMem(0x9ff1), 0xbb);
        // CB BB 0272
        gbc.setState(0x4ab9, 0xaae8, 0xea90, 0x7579, 0xd59d, 0x4e79, 0x0, 0x1);
        gbc.writeMem(0x4ab9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xaae8);
        EXPECT(gbc.pc(), 0x4abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0273
        gbc.setState(0xe08f, 0x70b0, 0x1ca0, 0x36ef, 0x655a, 0x3707, 0x0, 0x0);
        gbc.writeMem(0xe08f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x70b0);
        EXPECT(gbc.pc(), 0xe091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe08f), 0xcb);
        EXPECT(gbc.readMem(0xe090), 0xbb);
        // CB BB 0274
        gbc.setState(0x72d1, 0x5e12, 0x33a0, 0x38ec, 0x30df, 0x9ef5, 0x1, 0x0);
        gbc.writeMem(0x72d1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5e12);
        EXPECT(gbc.pc(), 0x72d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0275
        gbc.setState(0x1ab8, 0xd35c, 0x58e0, 0x7148, 0x8739, 0x1a9e, 0x0, 0x0);
        gbc.writeMem(0x1ab8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd35c);
        EXPECT(gbc.pc(), 0x1aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0276
        gbc.setState(0x4d5d, 0x26f3, 0x4890, 0x60a3, 0x8aa7, 0x6fe3, 0x1, 0x1);
        gbc.writeMem(0x4d5d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x26f3);
        EXPECT(gbc.pc(), 0x4d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0277
        gbc.setState(0x7581, 0xbc1, 0xcc60, 0x11fe, 0x5ee7, 0x898d, 0x0, 0x0);
        gbc.writeMem(0x7581, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbc1);
        EXPECT(gbc.pc(), 0x7583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0278
        gbc.setState(0xa30c, 0x35a4, 0x28e0, 0x808a, 0x9f48, 0x56df, 0x1, 0x1);
        gbc.writeMem(0xa30c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x35a4);
        EXPECT(gbc.pc(), 0xa30e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa30c), 0xcb);
        EXPECT(gbc.readMem(0xa30d), 0xbb);
        // CB BB 0279
        gbc.setState(0xbf81, 0x7ddd, 0xa9f0, 0x1370, 0x3c95, 0x5d3b, 0x1, 0x0);
        gbc.writeMem(0xbf81, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7ddd);
        EXPECT(gbc.pc(), 0xbf83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf81), 0xcb);
        EXPECT(gbc.readMem(0xbf82), 0xbb);
        // CB BB 027A
        gbc.setState(0xc4d4, 0xa989, 0xf080, 0x5d, 0xb82e, 0xab91, 0x0, 0x0);
        gbc.writeMem(0xc4d4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa989);
        EXPECT(gbc.pc(), 0xc4d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d4), 0xcb);
        EXPECT(gbc.readMem(0xc4d5), 0xbb);
        // CB BB 027B
        gbc.setState(0x9918, 0xb80b, 0x3330, 0xa2e, 0xfd73, 0x4574, 0x0, 0x1);
        gbc.writeMem(0x9918, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb80b);
        EXPECT(gbc.pc(), 0x991a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9918), 0xcb);
        EXPECT(gbc.readMem(0x9919), 0xbb);
        // CB BB 027C
        gbc.setState(0x1098, 0x2980, 0xc860, 0xdbf, 0xf04d, 0xdd41, 0x0, 0x0);
        gbc.writeMem(0x1098, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2980);
        EXPECT(gbc.pc(), 0x109a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 027D
        gbc.setState(0xc757, 0x5747, 0xdf0, 0x2d3d, 0x8130, 0xafe5, 0x1, 0x1);
        gbc.writeMem(0xc757, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5747);
        EXPECT(gbc.pc(), 0xc759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc757), 0xcb);
        EXPECT(gbc.readMem(0xc758), 0xbb);
        // CB BB 027E
        gbc.setState(0xd2bd, 0x7d64, 0x3e20, 0x707e, 0x6586, 0x4397, 0x0, 0x1);
        gbc.writeMem(0xd2bd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7d64);
        EXPECT(gbc.pc(), 0xd2bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2bd), 0xcb);
        EXPECT(gbc.readMem(0xd2be), 0xbb);
        // CB BB 027F
        gbc.setState(0x76c, 0x7967, 0xd9d0, 0x94b2, 0xe0f9, 0x297, 0x1, 0x0);
        gbc.writeMem(0x76c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7967);
        EXPECT(gbc.pc(), 0x76e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0280
        gbc.setState(0xe01f, 0x2c45, 0x7c80, 0xdb2a, 0x87d7, 0xd30b, 0x0, 0x0);
        gbc.writeMem(0xe01f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2c45);
        EXPECT(gbc.pc(), 0xe021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01f), 0xcb);
        EXPECT(gbc.readMem(0xe020), 0xbb);
        // CB BB 0281
        gbc.setState(0xecdb, 0x12e7, 0x9d10, 0x8fc0, 0x2c2c, 0xed0e, 0x1, 0x1);
        gbc.writeMem(0xecdb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x12e7);
        EXPECT(gbc.pc(), 0xecdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecdb), 0xcb);
        EXPECT(gbc.readMem(0xecdc), 0xbb);
        // CB BB 0282
        gbc.setState(0x22cb, 0xd346, 0x8670, 0x9b49, 0xa51e, 0x3c3e, 0x1, 0x0);
        gbc.writeMem(0x22cb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd346);
        EXPECT(gbc.pc(), 0x22cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0283
        gbc.setState(0xefc7, 0xf6c7, 0xe6a0, 0xb675, 0x8c09, 0xaf41, 0x1, 0x1);
        gbc.writeMem(0xefc7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf6c7);
        EXPECT(gbc.pc(), 0xefc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc7), 0xcb);
        EXPECT(gbc.readMem(0xefc8), 0xbb);
        // CB BB 0284
        gbc.setState(0x1db6, 0xb03a, 0x7670, 0xfd22, 0x954, 0xbef7, 0x0, 0x1);
        gbc.writeMem(0x1db6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb03a);
        EXPECT(gbc.pc(), 0x1db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0285
        gbc.setState(0x2a1c, 0x4e0a, 0x8210, 0xc1a, 0x266e, 0xe12d, 0x1, 0x0);
        gbc.writeMem(0x2a1c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4e0a);
        EXPECT(gbc.pc(), 0x2a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0287
        gbc.setState(0xd870, 0x62de, 0xcb10, 0x9152, 0x29c7, 0x5375, 0x0, 0x0);
        gbc.writeMem(0xd870, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x62de);
        EXPECT(gbc.pc(), 0xd872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd870), 0xcb);
        EXPECT(gbc.readMem(0xd871), 0xbb);
        // CB BB 0288
        gbc.setState(0x284f, 0x25b2, 0x380, 0x75e0, 0x43cc, 0x325f, 0x0, 0x1);
        gbc.writeMem(0x284f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x25b2);
        EXPECT(gbc.pc(), 0x2851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0289
        gbc.setState(0xb0ff, 0x16be, 0x3380, 0xf3e1, 0x4445, 0x868e, 0x0, 0x1);
        gbc.writeMem(0xb0ff, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x16be);
        EXPECT(gbc.pc(), 0xb101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ff), 0xcb);
        EXPECT(gbc.readMem(0xb100), 0xbb);
        // CB BB 028A
        gbc.setState(0xdff4, 0x645c, 0x3b40, 0x5cca, 0xa401, 0x682b, 0x1, 0x1);
        gbc.writeMem(0xdff4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x645c);
        EXPECT(gbc.pc(), 0xdff6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff4), 0xcb);
        EXPECT(gbc.readMem(0xdff5), 0xbb);
        // CB BB 028B
        gbc.setState(0xa13b, 0x50b5, 0x9b60, 0x90c3, 0x40f, 0x1073, 0x0, 0x1);
        gbc.writeMem(0xa13b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x50b5);
        EXPECT(gbc.pc(), 0xa13d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa13b), 0xcb);
        EXPECT(gbc.readMem(0xa13c), 0xbb);
        // CB BB 028C
        gbc.setState(0x58da, 0xd2c1, 0x2530, 0xcb4e, 0xb65e, 0x9387, 0x1, 0x1);
        gbc.writeMem(0x58da, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd2c1);
        EXPECT(gbc.pc(), 0x58dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 028E
        gbc.setState(0x426d, 0x2d16, 0xb430, 0xc1cf, 0xadf8, 0x9a45, 0x0, 0x0);
        gbc.writeMem(0x426d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2d16);
        EXPECT(gbc.pc(), 0x426f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 028F
        gbc.setState(0xda8e, 0xba72, 0xeeb0, 0x6e9b, 0x2f9b, 0x3d16, 0x1, 0x0);
        gbc.writeMem(0xda8e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xba72);
        EXPECT(gbc.pc(), 0xda90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda8e), 0xcb);
        EXPECT(gbc.readMem(0xda8f), 0xbb);
        // CB BB 0290
        gbc.setState(0xb273, 0x5b5b, 0xd190, 0x5f8b, 0x8b35, 0x4a63, 0x1, 0x0);
        gbc.writeMem(0xb273, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5b5b);
        EXPECT(gbc.pc(), 0xb275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb273), 0xcb);
        EXPECT(gbc.readMem(0xb274), 0xbb);
        // CB BB 0291
        gbc.setState(0x819f, 0xe792, 0x5a40, 0xd41b, 0x99c8, 0x1d26, 0x0, 0x0);
        gbc.writeMem(0x819f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe792);
        EXPECT(gbc.pc(), 0x81a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819f), 0xcb);
        EXPECT(gbc.readMem(0x81a0), 0xbb);
        // CB BB 0292
        gbc.setState(0x41cc, 0x1dfe, 0xc090, 0x46e8, 0x6a4d, 0xd2fd, 0x0, 0x1);
        gbc.writeMem(0x41cc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1dfe);
        EXPECT(gbc.pc(), 0x41ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0293
        gbc.setState(0x4f34, 0xd5e5, 0x2180, 0xb4d2, 0xd87, 0xa12d, 0x0, 0x0);
        gbc.writeMem(0x4f34, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd5e5);
        EXPECT(gbc.pc(), 0x4f36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0294
        gbc.setState(0xc48a, 0x47a9, 0x21d0, 0xea7f, 0x977c, 0x1e48, 0x1, 0x1);
        gbc.writeMem(0xc48a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x47a9);
        EXPECT(gbc.pc(), 0xc48c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc48a), 0xcb);
        EXPECT(gbc.readMem(0xc48b), 0xbb);
        // CB BB 0295
        gbc.setState(0xea5c, 0x2ffb, 0x37e0, 0x6c4e, 0x6469, 0xe0bf, 0x1, 0x0);
        gbc.writeMem(0xea5c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2ffb);
        EXPECT(gbc.pc(), 0xea5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea5c), 0xcb);
        EXPECT(gbc.readMem(0xea5d), 0xbb);
        // CB BB 0296
        gbc.setState(0x8353, 0x359e, 0x5410, 0x4b1e, 0x26d6, 0xd7d3, 0x0, 0x1);
        gbc.writeMem(0x8353, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x359e);
        EXPECT(gbc.pc(), 0x8355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8353), 0xcb);
        EXPECT(gbc.readMem(0x8354), 0xbb);
        // CB BB 0297
        gbc.setState(0xd46e, 0x9cf3, 0x4790, 0xf88d, 0x20c8, 0x11cf, 0x1, 0x0);
        gbc.writeMem(0xd46e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9cf3);
        EXPECT(gbc.pc(), 0xd470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd46e), 0xcb);
        EXPECT(gbc.readMem(0xd46f), 0xbb);
        // CB BB 0298
        gbc.setState(0x79d2, 0xbb2b, 0x29c0, 0x3cb2, 0x96c6, 0x9919, 0x0, 0x1);
        gbc.writeMem(0x79d2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbb2b);
        EXPECT(gbc.pc(), 0x79d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0299
        gbc.setState(0xcb93, 0x5be0, 0xb10, 0x8408, 0x4ec6, 0xee6e, 0x1, 0x0);
        gbc.writeMem(0xcb93, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5be0);
        EXPECT(gbc.pc(), 0xcb95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb93), 0xcb);
        EXPECT(gbc.readMem(0xcb94), 0xbb);
        // CB BB 029A
        gbc.setState(0x46c7, 0x6b4a, 0xcfb0, 0x90eb, 0xd548, 0xdf51, 0x1, 0x0);
        gbc.writeMem(0x46c7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6b4a);
        EXPECT(gbc.pc(), 0x46c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 029B
        gbc.setState(0x26b, 0x83c1, 0x2cc0, 0x5f24, 0x8966, 0xb57b, 0x1, 0x0);
        gbc.writeMem(0x26b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x83c1);
        EXPECT(gbc.pc(), 0x26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 029C
        gbc.setState(0x5928, 0x219e, 0x5f00, 0x3dee, 0x2ad2, 0x6654, 0x0, 0x0);
        gbc.writeMem(0x5928, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x219e);
        EXPECT(gbc.pc(), 0x592a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 029D
        gbc.setState(0xe1e3, 0xd8a2, 0xf470, 0xcd8b, 0xe066, 0x3922, 0x1, 0x1);
        gbc.writeMem(0xe1e3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd8a2);
        EXPECT(gbc.pc(), 0xe1e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e3), 0xcb);
        EXPECT(gbc.readMem(0xe1e4), 0xbb);
        // CB BB 029E
        gbc.setState(0x3484, 0x3999, 0x3400, 0xe662, 0xe354, 0xa805, 0x1, 0x0);
        gbc.writeMem(0x3484, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3999);
        EXPECT(gbc.pc(), 0x3486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02A0
        gbc.setState(0xb0ef, 0x92ee, 0x76b0, 0xbe1f, 0x262c, 0x28b0, 0x0, 0x1);
        gbc.writeMem(0xb0ef, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x92ee);
        EXPECT(gbc.pc(), 0xb0f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0ef), 0xcb);
        EXPECT(gbc.readMem(0xb0f0), 0xbb);
        // CB BB 02A1
        gbc.setState(0xb2b2, 0x6e1b, 0xf5e0, 0x8cb4, 0xd5e4, 0x71b5, 0x0, 0x0);
        gbc.writeMem(0xb2b2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6e1b);
        EXPECT(gbc.pc(), 0xb2b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b2), 0xcb);
        EXPECT(gbc.readMem(0xb2b3), 0xbb);
        // CB BB 02A2
        gbc.setState(0x34c7, 0x4b24, 0x2b30, 0x94b5, 0x87f7, 0x97c1, 0x1, 0x0);
        gbc.writeMem(0x34c7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4b24);
        EXPECT(gbc.pc(), 0x34c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02A3
        gbc.setState(0x6205, 0xe1cc, 0x8070, 0x6a31, 0x31dd, 0xf6ce, 0x0, 0x1);
        gbc.writeMem(0x6205, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe1cc);
        EXPECT(gbc.pc(), 0x6207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02A4
        gbc.setState(0xcfb, 0xcad1, 0x3070, 0x6fd3, 0x8512, 0x7580, 0x0, 0x1);
        gbc.writeMem(0xcfb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcad1);
        EXPECT(gbc.pc(), 0xcfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02A5
        gbc.setState(0x7c24, 0x89cb, 0x3140, 0xf4eb, 0x85bd, 0x10e2, 0x1, 0x0);
        gbc.writeMem(0x7c24, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x89cb);
        EXPECT(gbc.pc(), 0x7c26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02A6
        gbc.setState(0x5338, 0xe727, 0x5f20, 0x66b6, 0xacf5, 0xa6cf, 0x1, 0x0);
        gbc.writeMem(0x5338, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe727);
        EXPECT(gbc.pc(), 0x533a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02A7
        gbc.setState(0x4d00, 0x7cfc, 0x6440, 0x636b, 0xe5fe, 0x66bf, 0x0, 0x0);
        gbc.writeMem(0x4d00, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7cfc);
        EXPECT(gbc.pc(), 0x4d02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02A8
        gbc.setState(0xce7e, 0x3a56, 0xf7a0, 0xf680, 0xcc4d, 0x4f61, 0x0, 0x1);
        gbc.writeMem(0xce7e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3a56);
        EXPECT(gbc.pc(), 0xce80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce7e), 0xcb);
        EXPECT(gbc.readMem(0xce7f), 0xbb);
        // CB BB 02A9
        gbc.setState(0x3280, 0x88c8, 0x9350, 0xa1fd, 0x48d4, 0xca29, 0x1, 0x1);
        gbc.writeMem(0x3280, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x88c8);
        EXPECT(gbc.pc(), 0x3282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02AA
        gbc.setState(0x9a38, 0x192, 0x1210, 0xb7ea, 0x3e13, 0x78b6, 0x0, 0x0);
        gbc.writeMem(0x9a38, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x192);
        EXPECT(gbc.pc(), 0x9a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a38), 0xcb);
        EXPECT(gbc.readMem(0x9a39), 0xbb);
        // CB BB 02AB
        gbc.setState(0x806f, 0xf621, 0xae80, 0x6ad6, 0x9290, 0xedc1, 0x1, 0x0);
        gbc.writeMem(0x806f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf621);
        EXPECT(gbc.pc(), 0x8071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806f), 0xcb);
        EXPECT(gbc.readMem(0x8070), 0xbb);
        // CB BB 02AC
        gbc.setState(0x1184, 0x40a, 0x8b70, 0x7a80, 0x5b0c, 0x572c, 0x0, 0x0);
        gbc.writeMem(0x1184, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x40a);
        EXPECT(gbc.pc(), 0x1186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02AD
        gbc.setState(0x9660, 0x3cd9, 0xf030, 0x7a1f, 0xa4de, 0x779b, 0x1, 0x1);
        gbc.writeMem(0x9660, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3cd9);
        EXPECT(gbc.pc(), 0x9662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9660), 0xcb);
        EXPECT(gbc.readMem(0x9661), 0xbb);
        // CB BB 02AE
        gbc.setState(0xee75, 0x7236, 0x81d0, 0xce6b, 0x6762, 0x58a1, 0x1, 0x1);
        gbc.writeMem(0xee75, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7236);
        EXPECT(gbc.pc(), 0xee77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee75), 0xcb);
        EXPECT(gbc.readMem(0xee76), 0xbb);
        // CB BB 02AF
        gbc.setState(0x870, 0x1ddc, 0x4ed0, 0x7222, 0xb48e, 0x4719, 0x1, 0x0);
        gbc.writeMem(0x870, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1ddc);
        EXPECT(gbc.pc(), 0x872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02B0
        gbc.setState(0x6e5d, 0xdb42, 0x2120, 0x71fc, 0xd4ce, 0x4301, 0x1, 0x0);
        gbc.writeMem(0x6e5d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xdb42);
        EXPECT(gbc.pc(), 0x6e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02B1
        gbc.setState(0x811, 0xa5b9, 0x75f0, 0x45ce, 0xeb06, 0x43bf, 0x1, 0x0);
        gbc.writeMem(0x811, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa5b9);
        EXPECT(gbc.pc(), 0x813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02B2
        gbc.setState(0x153f, 0x66fc, 0x4220, 0x4fde, 0x8abf, 0x40a9, 0x1, 0x1);
        gbc.writeMem(0x153f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x66fc);
        EXPECT(gbc.pc(), 0x1541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02B3
        gbc.setState(0x5e56, 0xc08b, 0xb7e0, 0xe6b0, 0x6782, 0xdce0, 0x1, 0x1);
        gbc.writeMem(0x5e56, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc08b);
        EXPECT(gbc.pc(), 0x5e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02B4
        gbc.setState(0xda11, 0x4382, 0x1df0, 0xf9b4, 0xb373, 0xfb0, 0x0, 0x1);
        gbc.writeMem(0xda11, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4382);
        EXPECT(gbc.pc(), 0xda13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda11), 0xcb);
        EXPECT(gbc.readMem(0xda12), 0xbb);
        // CB BB 02B5
        gbc.setState(0xb8c2, 0x59a0, 0x300, 0x3802, 0x523b, 0x7530, 0x0, 0x1);
        gbc.writeMem(0xb8c2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x59a0);
        EXPECT(gbc.pc(), 0xb8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c2), 0xcb);
        EXPECT(gbc.readMem(0xb8c3), 0xbb);
        // CB BB 02B6
        gbc.setState(0xb165, 0x28a3, 0x8500, 0xb04f, 0x5d8f, 0xa986, 0x1, 0x0);
        gbc.writeMem(0xb165, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x28a3);
        EXPECT(gbc.pc(), 0xb167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb165), 0xcb);
        EXPECT(gbc.readMem(0xb166), 0xbb);
        // CB BB 02B7
        gbc.setState(0x1a0c, 0x1333, 0xcc40, 0x44c4, 0x99b1, 0xef6c, 0x0, 0x0);
        gbc.writeMem(0x1a0c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1333);
        EXPECT(gbc.pc(), 0x1a0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02B8
        gbc.setState(0x9bf2, 0x371f, 0xf630, 0x35ef, 0x4648, 0x4e2a, 0x0, 0x0);
        gbc.writeMem(0x9bf2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x371f);
        EXPECT(gbc.pc(), 0x9bf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf2), 0xcb);
        EXPECT(gbc.readMem(0x9bf3), 0xbb);
        // CB BB 02B9
        gbc.setState(0xc0af, 0x49c0, 0xe680, 0x7164, 0xd8f, 0x28e5, 0x0, 0x0);
        gbc.writeMem(0xc0af, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x49c0);
        EXPECT(gbc.pc(), 0xc0b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0af), 0xcb);
        EXPECT(gbc.readMem(0xc0b0), 0xbb);
        // CB BB 02BA
        gbc.setState(0xb916, 0x4f15, 0xcf30, 0x214d, 0x335e, 0xb9ca, 0x1, 0x0);
        gbc.writeMem(0xb916, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4f15);
        EXPECT(gbc.pc(), 0xb918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb916), 0xcb);
        EXPECT(gbc.readMem(0xb917), 0xbb);
        // CB BB 02BB
        gbc.setState(0x6ecd, 0x3fc1, 0x37c0, 0x1929, 0xa435, 0xe306, 0x0, 0x1);
        gbc.writeMem(0x6ecd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3fc1);
        EXPECT(gbc.pc(), 0x6ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02BC
        gbc.setState(0x1ee2, 0xa629, 0x5330, 0xde5c, 0x50d6, 0x47c8, 0x1, 0x0);
        gbc.writeMem(0x1ee2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa629);
        EXPECT(gbc.pc(), 0x1ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02BD
        gbc.setState(0x3be8, 0x60d0, 0x530, 0x60c, 0xf8f, 0xfdaf, 0x0, 0x0);
        gbc.writeMem(0x3be8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x60d0);
        EXPECT(gbc.pc(), 0x3bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02BE
        gbc.setState(0xb433, 0x3e40, 0x7150, 0x3762, 0xde24, 0x9a56, 0x0, 0x1);
        gbc.writeMem(0xb433, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3e40);
        EXPECT(gbc.pc(), 0xb435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb433), 0xcb);
        EXPECT(gbc.readMem(0xb434), 0xbb);
        // CB BB 02BF
        gbc.setState(0x3081, 0x46b5, 0x5d10, 0xf9d1, 0x5a53, 0x1baf, 0x0, 0x1);
        gbc.writeMem(0x3081, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x46b5);
        EXPECT(gbc.pc(), 0x3083);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02C0
        gbc.setState(0x2aa1, 0x3ddf, 0x94f0, 0x7e3e, 0x24eb, 0x43c4, 0x0, 0x1);
        gbc.writeMem(0x2aa1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3ddf);
        EXPECT(gbc.pc(), 0x2aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02C1
        gbc.setState(0x66ae, 0xe109, 0xbb60, 0x3c71, 0x3b98, 0x41f2, 0x0, 0x0);
        gbc.writeMem(0x66ae, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe109);
        EXPECT(gbc.pc(), 0x66b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02C2
        gbc.setState(0x9715, 0xe169, 0xc750, 0xbf0e, 0xb45f, 0x6188, 0x1, 0x1);
        gbc.writeMem(0x9715, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe169);
        EXPECT(gbc.pc(), 0x9717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9715), 0xcb);
        EXPECT(gbc.readMem(0x9716), 0xbb);
        // CB BB 02C3
        gbc.setState(0xe8ce, 0x268b, 0xe2f0, 0xa577, 0xaa29, 0xeb13, 0x1, 0x1);
        gbc.writeMem(0xe8ce, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x268b);
        EXPECT(gbc.pc(), 0xe8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8ce), 0xcb);
        EXPECT(gbc.readMem(0xe8cf), 0xbb);
        // CB BB 02C4
        gbc.setState(0xfce, 0xfda4, 0xb170, 0x7e43, 0xa36f, 0x2b51, 0x1, 0x0);
        gbc.writeMem(0xfce, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xfda4);
        EXPECT(gbc.pc(), 0xfd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02C5
        gbc.setState(0x60b1, 0x2535, 0x9530, 0x106e, 0xbcc9, 0x89ec, 0x0, 0x0);
        gbc.writeMem(0x60b1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2535);
        EXPECT(gbc.pc(), 0x60b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02C6
        gbc.setState(0xd29a, 0xd44b, 0xec00, 0xc858, 0xc357, 0xe0ef, 0x1, 0x1);
        gbc.writeMem(0xd29a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd44b);
        EXPECT(gbc.pc(), 0xd29c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd29a), 0xcb);
        EXPECT(gbc.readMem(0xd29b), 0xbb);
        // CB BB 02C7
        gbc.setState(0xc3dc, 0x7e7a, 0x82a0, 0xebf1, 0xf142, 0x14e3, 0x1, 0x0);
        gbc.writeMem(0xc3dc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7e7a);
        EXPECT(gbc.pc(), 0xc3de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3dc), 0xcb);
        EXPECT(gbc.readMem(0xc3dd), 0xbb);
        // CB BB 02C8
        gbc.setState(0xe8b7, 0x74c1, 0xcc0, 0x9ff5, 0xbda1, 0xceca, 0x0, 0x0);
        gbc.writeMem(0xe8b7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x74c1);
        EXPECT(gbc.pc(), 0xe8b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b7), 0xcb);
        EXPECT(gbc.readMem(0xe8b8), 0xbb);
        // CB BB 02C9
        gbc.setState(0x8905, 0xdea0, 0xffd0, 0x16cd, 0x8b6, 0x6adc, 0x0, 0x0);
        gbc.writeMem(0x8905, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdea0);
        EXPECT(gbc.pc(), 0x8907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8905), 0xcb);
        EXPECT(gbc.readMem(0x8906), 0xbb);
        // CB BB 02CB
        gbc.setState(0xe6f3, 0xc681, 0x96e0, 0xd65c, 0x36b0, 0x220b, 0x0, 0x0);
        gbc.writeMem(0xe6f3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc681);
        EXPECT(gbc.pc(), 0xe6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f3), 0xcb);
        EXPECT(gbc.readMem(0xe6f4), 0xbb);
        // CB BB 02CC
        gbc.setState(0x4d47, 0xe50b, 0xb100, 0xaaef, 0x9b37, 0x85b8, 0x1, 0x1);
        gbc.writeMem(0x4d47, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe50b);
        EXPECT(gbc.pc(), 0x4d49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02CD
        gbc.setState(0xece5, 0x50b1, 0x6ab0, 0x3e61, 0xeef8, 0xf5c1, 0x0, 0x0);
        gbc.writeMem(0xece5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x50b1);
        EXPECT(gbc.pc(), 0xece7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xece5), 0xcb);
        EXPECT(gbc.readMem(0xece6), 0xbb);
        // CB BB 02CE
        gbc.setState(0xef6d, 0x54b9, 0x9570, 0xf96c, 0xa9e7, 0x5725, 0x0, 0x0);
        gbc.writeMem(0xef6d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x54b9);
        EXPECT(gbc.pc(), 0xef6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef6d), 0xcb);
        EXPECT(gbc.readMem(0xef6e), 0xbb);
        // CB BB 02D0
        gbc.setState(0xe521, 0xd2fb, 0x9100, 0xd292, 0xd1bb, 0xecab, 0x1, 0x0);
        gbc.writeMem(0xe521, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd2fb);
        EXPECT(gbc.pc(), 0xe523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe521), 0xcb);
        EXPECT(gbc.readMem(0xe522), 0xbb);
        // CB BB 02D1
        gbc.setState(0x1445, 0xbb1, 0xeb20, 0xb5ad, 0xf007, 0x3209, 0x0, 0x1);
        gbc.writeMem(0x1445, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbb1);
        EXPECT(gbc.pc(), 0x1447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02D2
        gbc.setState(0xd905, 0xe8a9, 0x57e0, 0xb85c, 0xcb61, 0x385a, 0x1, 0x0);
        gbc.writeMem(0xd905, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe8a9);
        EXPECT(gbc.pc(), 0xd907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd905), 0xcb);
        EXPECT(gbc.readMem(0xd906), 0xbb);
        // CB BB 02D3
        gbc.setState(0x5120, 0xe449, 0x69d0, 0x6920, 0xe9d3, 0x9cfa, 0x0, 0x1);
        gbc.writeMem(0x5120, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe449);
        EXPECT(gbc.pc(), 0x5122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02D4
        gbc.setState(0xce39, 0xd4a2, 0xc400, 0x37ed, 0x76df, 0x814d, 0x0, 0x0);
        gbc.writeMem(0xce39, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd4a2);
        EXPECT(gbc.pc(), 0xce3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce39), 0xcb);
        EXPECT(gbc.readMem(0xce3a), 0xbb);
        // CB BB 02D5
        gbc.setState(0x763f, 0x9036, 0xc750, 0x879c, 0x7d09, 0x107f, 0x0, 0x1);
        gbc.writeMem(0x763f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9036);
        EXPECT(gbc.pc(), 0x7641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02D7
        gbc.setState(0x20b8, 0x4b03, 0xa7f0, 0x2d07, 0x544b, 0x2484, 0x1, 0x1);
        gbc.writeMem(0x20b8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4b03);
        EXPECT(gbc.pc(), 0x20ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02D9
        gbc.setState(0xaf1c, 0xdc93, 0x1b10, 0x2276, 0xbe54, 0xd720, 0x0, 0x1);
        gbc.writeMem(0xaf1c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xdc93);
        EXPECT(gbc.pc(), 0xaf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1c), 0xcb);
        EXPECT(gbc.readMem(0xaf1d), 0xbb);
        // CB BB 02DA
        gbc.setState(0x1b58, 0x8377, 0x6320, 0x49e1, 0xb1bf, 0xd176, 0x0, 0x0);
        gbc.writeMem(0x1b58, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8377);
        EXPECT(gbc.pc(), 0x1b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02DB
        gbc.setState(0x10e7, 0x9779, 0x19d0, 0x1778, 0x6d72, 0x5c73, 0x0, 0x1);
        gbc.writeMem(0x10e7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9779);
        EXPECT(gbc.pc(), 0x10e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02DC
        gbc.setState(0x985, 0xfade, 0x3a10, 0xbcd7, 0x8cb0, 0x6ee0, 0x0, 0x0);
        gbc.writeMem(0x985, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfade);
        EXPECT(gbc.pc(), 0x987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02DD
        gbc.setState(0xc67d, 0xc8f, 0x3fc0, 0x5237, 0x433e, 0x5877, 0x1, 0x0);
        gbc.writeMem(0xc67d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc8f);
        EXPECT(gbc.pc(), 0xc67f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67d), 0xcb);
        EXPECT(gbc.readMem(0xc67e), 0xbb);
        // CB BB 02DE
        gbc.setState(0x188b, 0x4599, 0x3a20, 0xcbe8, 0x4129, 0x9a50, 0x0, 0x0);
        gbc.writeMem(0x188b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4599);
        EXPECT(gbc.pc(), 0x188d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02DF
        gbc.setState(0x19cd, 0x622e, 0x7cd0, 0xd948, 0xa3b8, 0x3d2e, 0x1, 0x0);
        gbc.writeMem(0x19cd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x622e);
        EXPECT(gbc.pc(), 0x19cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02E0
        gbc.setState(0x87cc, 0xa17f, 0x5940, 0x3dcf, 0xecb6, 0xe16c, 0x1, 0x0);
        gbc.writeMem(0x87cc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa17f);
        EXPECT(gbc.pc(), 0x87ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87cc), 0xcb);
        EXPECT(gbc.readMem(0x87cd), 0xbb);
        // CB BB 02E2
        gbc.setState(0x37e3, 0xe447, 0x8ab0, 0x54a, 0x59c0, 0x7711, 0x1, 0x1);
        gbc.writeMem(0x37e3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe447);
        EXPECT(gbc.pc(), 0x37e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02E3
        gbc.setState(0xba05, 0x1fe7, 0x63b0, 0x7ee9, 0x1855, 0xb75a, 0x0, 0x0);
        gbc.writeMem(0xba05, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1fe7);
        EXPECT(gbc.pc(), 0xba07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba05), 0xcb);
        EXPECT(gbc.readMem(0xba06), 0xbb);
        // CB BB 02E4
        gbc.setState(0x5277, 0xda1f, 0xfdf0, 0xf4c2, 0x9cd1, 0x444b, 0x1, 0x0);
        gbc.writeMem(0x5277, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xda1f);
        EXPECT(gbc.pc(), 0x5279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02E5
        gbc.setState(0xe049, 0x6dc6, 0x8120, 0xeeed, 0x6026, 0xfa88, 0x1, 0x1);
        gbc.writeMem(0xe049, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6dc6);
        EXPECT(gbc.pc(), 0xe04b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe049), 0xcb);
        EXPECT(gbc.readMem(0xe04a), 0xbb);
        // CB BB 02E7
        gbc.setState(0xbee0, 0xab04, 0x7350, 0x506d, 0x9f07, 0xe7b3, 0x0, 0x0);
        gbc.writeMem(0xbee0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xab04);
        EXPECT(gbc.pc(), 0xbee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee0), 0xcb);
        EXPECT(gbc.readMem(0xbee1), 0xbb);
        // CB BB 02E8
        gbc.setState(0x17fb, 0xd6c, 0x26c0, 0xc41e, 0x757f, 0x5e1f, 0x0, 0x0);
        gbc.writeMem(0x17fb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd6c);
        EXPECT(gbc.pc(), 0x17fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02E9
        gbc.setState(0x5002, 0xc7ee, 0x1390, 0xcf76, 0x9714, 0x526d, 0x0, 0x0);
        gbc.writeMem(0x5002, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc7ee);
        EXPECT(gbc.pc(), 0x5004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02EA
        gbc.setState(0x8ae7, 0xf54, 0x4290, 0x910f, 0xab87, 0x141d, 0x0, 0x1);
        gbc.writeMem(0x8ae7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf54);
        EXPECT(gbc.pc(), 0x8ae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae7), 0xcb);
        EXPECT(gbc.readMem(0x8ae8), 0xbb);
        // CB BB 02EB
        gbc.setState(0xda90, 0x9ea7, 0x2ce0, 0x112f, 0x1ab, 0x229c, 0x1, 0x1);
        gbc.writeMem(0xda90, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9ea7);
        EXPECT(gbc.pc(), 0xda92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda90), 0xcb);
        EXPECT(gbc.readMem(0xda91), 0xbb);
        // CB BB 02EC
        gbc.setState(0xe77d, 0x6c6, 0x9750, 0x778c, 0xa68e, 0xc75, 0x0, 0x1);
        gbc.writeMem(0xe77d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6c6);
        EXPECT(gbc.pc(), 0xe77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe77d), 0xcb);
        EXPECT(gbc.readMem(0xe77e), 0xbb);
        // CB BB 02ED
        gbc.setState(0x26f3, 0xf5a, 0x8f20, 0xabea, 0x9a4f, 0x2e22, 0x0, 0x1);
        gbc.writeMem(0x26f3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf5a);
        EXPECT(gbc.pc(), 0x26f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02EE
        gbc.setState(0x1e4c, 0xad9e, 0x9280, 0x258c, 0xa232, 0xf434, 0x0, 0x1);
        gbc.writeMem(0x1e4c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xad9e);
        EXPECT(gbc.pc(), 0x1e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02EF
        gbc.setState(0x1d32, 0xb72, 0x2770, 0x742e, 0xcd54, 0x618d, 0x0, 0x0);
        gbc.writeMem(0x1d32, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb72);
        EXPECT(gbc.pc(), 0x1d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02F0
        gbc.setState(0x5011, 0xb52f, 0xdec0, 0x9d5a, 0x4268, 0x5be, 0x1, 0x0);
        gbc.writeMem(0x5011, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb52f);
        EXPECT(gbc.pc(), 0x5013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02F1
        gbc.setState(0x6896, 0x1e36, 0x9a30, 0x2490, 0xe362, 0x99e8, 0x1, 0x0);
        gbc.writeMem(0x6896, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1e36);
        EXPECT(gbc.pc(), 0x6898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02F2
        gbc.setState(0x1166, 0x3e4e, 0x3830, 0xd201, 0x5185, 0x59aa, 0x1, 0x1);
        gbc.writeMem(0x1166, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3e4e);
        EXPECT(gbc.pc(), 0x1168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02F3
        gbc.setState(0xe66a, 0x4fb4, 0xbe20, 0x385d, 0x78da, 0xd485, 0x1, 0x1);
        gbc.writeMem(0xe66a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4fb4);
        EXPECT(gbc.pc(), 0xe66c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe66a), 0xcb);
        EXPECT(gbc.readMem(0xe66b), 0xbb);
        // CB BB 02F4
        gbc.setState(0xd4a7, 0x851f, 0x5600, 0x5b0, 0xcda9, 0xded, 0x1, 0x0);
        gbc.writeMem(0xd4a7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x851f);
        EXPECT(gbc.pc(), 0xd4a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a7), 0xcb);
        EXPECT(gbc.readMem(0xd4a8), 0xbb);
        // CB BB 02F5
        gbc.setState(0xd96f, 0xa274, 0xb4b0, 0xc86b, 0x1425, 0xab4b, 0x0, 0x1);
        gbc.writeMem(0xd96f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa274);
        EXPECT(gbc.pc(), 0xd971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd96f), 0xcb);
        EXPECT(gbc.readMem(0xd970), 0xbb);
        // CB BB 02F6
        gbc.setState(0x5c24, 0x5c2e, 0xbd30, 0xd0d8, 0xdbaa, 0x74d6, 0x1, 0x0);
        gbc.writeMem(0x5c24, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5c2e);
        EXPECT(gbc.pc(), 0x5c26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02F8
        gbc.setState(0x5c5a, 0x3f92, 0x71a0, 0x2398, 0xe90a, 0x32d0, 0x0, 0x0);
        gbc.writeMem(0x5c5a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3f92);
        EXPECT(gbc.pc(), 0x5c5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02F9
        gbc.setState(0x113b, 0x4e0f, 0x16c0, 0xf0c, 0xbf0a, 0xcf55, 0x0, 0x0);
        gbc.writeMem(0x113b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4e0f);
        EXPECT(gbc.pc(), 0x113d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 02FA
        gbc.setState(0x7a65, 0x35d3, 0xd2b0, 0xb741, 0x716, 0x49a8, 0x0, 0x0);
        gbc.writeMem(0x7a65, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x35d3);
        EXPECT(gbc.pc(), 0x7a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02FB
        gbc.setState(0xa8b9, 0x152e, 0x4d60, 0x535e, 0x70d, 0x18e0, 0x0, 0x0);
        gbc.writeMem(0xa8b9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x152e);
        EXPECT(gbc.pc(), 0xa8bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b9), 0xcb);
        EXPECT(gbc.readMem(0xa8ba), 0xbb);
        // CB BB 02FC
        gbc.setState(0x1d82, 0x5a65, 0x3470, 0xd791, 0x3cba, 0x1b75, 0x0, 0x0);
        gbc.writeMem(0x1d82, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5a65);
        EXPECT(gbc.pc(), 0x1d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02FD
        gbc.setState(0xed5d, 0x1437, 0x5f60, 0xfb3f, 0x388a, 0x8c4c, 0x1, 0x0);
        gbc.writeMem(0xed5d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1437);
        EXPECT(gbc.pc(), 0xed5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed5d), 0xcb);
        EXPECT(gbc.readMem(0xed5e), 0xbb);
        // CB BB 02FE
        gbc.setState(0x6bba, 0x3c15, 0x8ed0, 0x2088, 0x4031, 0x594d, 0x0, 0x0);
        gbc.writeMem(0x6bba, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3c15);
        EXPECT(gbc.pc(), 0x6bbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 02FF
        gbc.setState(0x5de5, 0x5d22, 0x38f0, 0xa264, 0x9501, 0xf538, 0x0, 0x1);
        gbc.writeMem(0x5de5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5d22);
        EXPECT(gbc.pc(), 0x5de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0300
        gbc.setState(0x9396, 0xe862, 0xe7b0, 0x805e, 0x3661, 0xdba1, 0x1, 0x1);
        gbc.writeMem(0x9396, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe862);
        EXPECT(gbc.pc(), 0x9398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9396), 0xcb);
        EXPECT(gbc.readMem(0x9397), 0xbb);
        // CB BB 0301
        gbc.setState(0x844e, 0x7f7f, 0xf930, 0xbc2c, 0xfa2d, 0x99cd, 0x1, 0x0);
        gbc.writeMem(0x844e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7f7f);
        EXPECT(gbc.pc(), 0x8450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x844e), 0xcb);
        EXPECT(gbc.readMem(0x844f), 0xbb);
        // CB BB 0302
        gbc.setState(0xe9e6, 0xaf2e, 0x1610, 0xc90a, 0x61d6, 0x5274, 0x0, 0x0);
        gbc.writeMem(0xe9e6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xaf2e);
        EXPECT(gbc.pc(), 0xe9e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e6), 0xcb);
        EXPECT(gbc.readMem(0xe9e7), 0xbb);
        // CB BB 0303
        gbc.setState(0xafe4, 0xaeba, 0x60e0, 0x5d5e, 0x6540, 0x184f, 0x1, 0x1);
        gbc.writeMem(0xafe4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xaeba);
        EXPECT(gbc.pc(), 0xafe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe4), 0xcb);
        EXPECT(gbc.readMem(0xafe5), 0xbb);
        // CB BB 0304
        gbc.setState(0xe9a, 0xc7de, 0xcd10, 0xfe7, 0xbfc9, 0xc09c, 0x1, 0x1);
        gbc.writeMem(0xe9a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc7de);
        EXPECT(gbc.pc(), 0xe9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0305
        gbc.setState(0x15a7, 0xe3bc, 0xf740, 0xfb31, 0x5bea, 0x954f, 0x0, 0x1);
        gbc.writeMem(0x15a7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe3bc);
        EXPECT(gbc.pc(), 0x15a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0306
        gbc.setState(0xd1a7, 0xfd3b, 0x8450, 0xb6c7, 0x594f, 0x7af2, 0x0, 0x1);
        gbc.writeMem(0xd1a7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfd3b);
        EXPECT(gbc.pc(), 0xd1a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a7), 0xcb);
        EXPECT(gbc.readMem(0xd1a8), 0xbb);
        // CB BB 0308
        gbc.setState(0x1829, 0x76d7, 0x16a0, 0x2f86, 0x290d, 0xc03, 0x1, 0x0);
        gbc.writeMem(0x1829, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x76d7);
        EXPECT(gbc.pc(), 0x182b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0309
        gbc.setState(0x7617, 0xe976, 0xfb0, 0xae55, 0x72e6, 0x6e61, 0x1, 0x1);
        gbc.writeMem(0x7617, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe976);
        EXPECT(gbc.pc(), 0x7619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 030A
        gbc.setState(0xe7f3, 0xb772, 0x5130, 0x5c8c, 0xe8d3, 0x4c31, 0x0, 0x0);
        gbc.writeMem(0xe7f3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb772);
        EXPECT(gbc.pc(), 0xe7f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f3), 0xcb);
        EXPECT(gbc.readMem(0xe7f4), 0xbb);
        // CB BB 030B
        gbc.setState(0x30a, 0x6190, 0x58f0, 0x456e, 0x410b, 0x2d70, 0x1, 0x1);
        gbc.writeMem(0x30a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6190);
        EXPECT(gbc.pc(), 0x30c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 030C
        gbc.setState(0xcfc4, 0xcf9b, 0xb590, 0xb1c, 0xcd91, 0xf59a, 0x0, 0x0);
        gbc.writeMem(0xcfc4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xcf9b);
        EXPECT(gbc.pc(), 0xcfc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc4), 0xcb);
        EXPECT(gbc.readMem(0xcfc5), 0xbb);
        // CB BB 030D
        gbc.setState(0x9127, 0xa636, 0x4d00, 0xb85a, 0xdb97, 0xe881, 0x1, 0x0);
        gbc.writeMem(0x9127, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa636);
        EXPECT(gbc.pc(), 0x9129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9127), 0xcb);
        EXPECT(gbc.readMem(0x9128), 0xbb);
        // CB BB 030E
        gbc.setState(0xaa0b, 0x4db8, 0x4540, 0xcbbd, 0xfa53, 0x711a, 0x1, 0x0);
        gbc.writeMem(0xaa0b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4db8);
        EXPECT(gbc.pc(), 0xaa0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0b), 0xcb);
        EXPECT(gbc.readMem(0xaa0c), 0xbb);
        // CB BB 030F
        gbc.setState(0x12bc, 0x98bd, 0x9b30, 0x8034, 0x83a3, 0x32be, 0x0, 0x0);
        gbc.writeMem(0x12bc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x98bd);
        EXPECT(gbc.pc(), 0x12be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0310
        gbc.setState(0x83a7, 0xb42f, 0xe0b0, 0xbac0, 0x3324, 0x82e8, 0x0, 0x0);
        gbc.writeMem(0x83a7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb42f);
        EXPECT(gbc.pc(), 0x83a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a7), 0xcb);
        EXPECT(gbc.readMem(0x83a8), 0xbb);
        // CB BB 0311
        gbc.setState(0x76d8, 0xa148, 0xa760, 0xc6ee, 0x52cf, 0xf5a4, 0x0, 0x0);
        gbc.writeMem(0x76d8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa148);
        EXPECT(gbc.pc(), 0x76da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0312
        gbc.setState(0x2e6e, 0xdf47, 0x6130, 0xea33, 0xf81f, 0xd2ca, 0x1, 0x0);
        gbc.writeMem(0x2e6e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdf47);
        EXPECT(gbc.pc(), 0x2e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0313
        gbc.setState(0x267e, 0x812e, 0x6f50, 0x4f90, 0xd43c, 0x4ec8, 0x0, 0x1);
        gbc.writeMem(0x267e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x812e);
        EXPECT(gbc.pc(), 0x2680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0314
        gbc.setState(0x7d20, 0x163e, 0xebb0, 0x8104, 0xc365, 0xa43f, 0x0, 0x0);
        gbc.writeMem(0x7d20, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x163e);
        EXPECT(gbc.pc(), 0x7d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0315
        gbc.setState(0xd5cc, 0x3bcc, 0x3d20, 0xc04a, 0xb2f, 0xaed1, 0x0, 0x1);
        gbc.writeMem(0xd5cc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3bcc);
        EXPECT(gbc.pc(), 0xd5ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5cc), 0xcb);
        EXPECT(gbc.readMem(0xd5cd), 0xbb);
        // CB BB 0316
        gbc.setState(0x906, 0xfb41, 0x1160, 0xd050, 0x5095, 0x79c6, 0x1, 0x1);
        gbc.writeMem(0x906, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfb41);
        EXPECT(gbc.pc(), 0x908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0317
        gbc.setState(0x7293, 0xc86a, 0xa9d0, 0xf570, 0xe8c1, 0x2040, 0x0, 0x0);
        gbc.writeMem(0x7293, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc86a);
        EXPECT(gbc.pc(), 0x7295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0319
        gbc.setState(0xa6b, 0x8cd5, 0x8050, 0xe368, 0xc0d8, 0x3679, 0x0, 0x1);
        gbc.writeMem(0xa6b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8cd5);
        EXPECT(gbc.pc(), 0xa6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 031B
        gbc.setState(0xda1f, 0xc8cf, 0x93d0, 0x79c9, 0x5511, 0x43c, 0x0, 0x0);
        gbc.writeMem(0xda1f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc8cf);
        EXPECT(gbc.pc(), 0xda21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda1f), 0xcb);
        EXPECT(gbc.readMem(0xda20), 0xbb);
        // CB BB 031D
        gbc.setState(0x8107, 0xe33b, 0xcdd0, 0xef2f, 0xcde0, 0x390c, 0x1, 0x1);
        gbc.writeMem(0x8107, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe33b);
        EXPECT(gbc.pc(), 0x8109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8107), 0xcb);
        EXPECT(gbc.readMem(0x8108), 0xbb);
        // CB BB 031E
        gbc.setState(0xc21b, 0x7e4c, 0x4e0, 0x867f, 0x8ec9, 0x3c72, 0x0, 0x1);
        gbc.writeMem(0xc21b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7e4c);
        EXPECT(gbc.pc(), 0xc21d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc21b), 0xcb);
        EXPECT(gbc.readMem(0xc21c), 0xbb);
        // CB BB 031F
        gbc.setState(0x1f87, 0xf834, 0xdc60, 0x1c6b, 0x1728, 0x67e8, 0x1, 0x0);
        gbc.writeMem(0x1f87, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf834);
        EXPECT(gbc.pc(), 0x1f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0320
        gbc.setState(0x5233, 0x9ae1, 0xe400, 0x7518, 0xefae, 0x675e, 0x0, 0x0);
        gbc.writeMem(0x5233, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9ae1);
        EXPECT(gbc.pc(), 0x5235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0321
        gbc.setState(0x6c43, 0x512a, 0xccb0, 0x3d14, 0xa2b3, 0xd734, 0x0, 0x1);
        gbc.writeMem(0x6c43, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x512a);
        EXPECT(gbc.pc(), 0x6c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0322
        gbc.setState(0x7839, 0x76cd, 0xc770, 0x33a3, 0x69c6, 0x5135, 0x0, 0x0);
        gbc.writeMem(0x7839, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x76cd);
        EXPECT(gbc.pc(), 0x783b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0323
        gbc.setState(0x5c56, 0x5578, 0xdb60, 0x7c3, 0xccb, 0x81c2, 0x1, 0x0);
        gbc.writeMem(0x5c56, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5578);
        EXPECT(gbc.pc(), 0x5c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0324
        gbc.setState(0xe6ac, 0xba16, 0xe0e0, 0xde27, 0x7b01, 0x7138, 0x1, 0x1);
        gbc.writeMem(0xe6ac, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xba16);
        EXPECT(gbc.pc(), 0xe6ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ac), 0xcb);
        EXPECT(gbc.readMem(0xe6ad), 0xbb);
        // CB BB 0325
        gbc.setState(0xa41a, 0x3c96, 0xc400, 0xc9dc, 0xfeea, 0x193c, 0x1, 0x0);
        gbc.writeMem(0xa41a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3c96);
        EXPECT(gbc.pc(), 0xa41c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa41a), 0xcb);
        EXPECT(gbc.readMem(0xa41b), 0xbb);
        // CB BB 0327
        gbc.setState(0x9586, 0xdd90, 0xcc70, 0x3c9, 0xfba7, 0x2a60, 0x0, 0x0);
        gbc.writeMem(0x9586, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdd90);
        EXPECT(gbc.pc(), 0x9588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9586), 0xcb);
        EXPECT(gbc.readMem(0x9587), 0xbb);
        // CB BB 0328
        gbc.setState(0x1965, 0x4e4d, 0xc140, 0xa1ad, 0xe73d, 0x383b, 0x1, 0x1);
        gbc.writeMem(0x1965, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4e4d);
        EXPECT(gbc.pc(), 0x1967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0329
        gbc.setState(0x65d2, 0xf9a5, 0xc400, 0x3c6, 0x226b, 0xc626, 0x1, 0x0);
        gbc.writeMem(0x65d2, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf9a5);
        EXPECT(gbc.pc(), 0x65d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 032A
        gbc.setState(0xd616, 0x8fad, 0x10d0, 0x2ce9, 0x91d8, 0xbc8c, 0x1, 0x0);
        gbc.writeMem(0xd616, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8fad);
        EXPECT(gbc.pc(), 0xd618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd616), 0xcb);
        EXPECT(gbc.readMem(0xd617), 0xbb);
        // CB BB 032B
        gbc.setState(0x4e36, 0x12c2, 0xf3d0, 0xb9a1, 0x78eb, 0x6f9b, 0x0, 0x1);
        gbc.writeMem(0x4e36, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x12c2);
        EXPECT(gbc.pc(), 0x4e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 032D
        gbc.setState(0x94a1, 0xa7d2, 0x9820, 0x159d, 0x8278, 0xe1c6, 0x0, 0x1);
        gbc.writeMem(0x94a1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa7d2);
        EXPECT(gbc.pc(), 0x94a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a1), 0xcb);
        EXPECT(gbc.readMem(0x94a2), 0xbb);
        // CB BB 032E
        gbc.setState(0x7b22, 0xd5eb, 0xead0, 0xf812, 0x6df8, 0xdaec, 0x1, 0x0);
        gbc.writeMem(0x7b22, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd5eb);
        EXPECT(gbc.pc(), 0x7b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 032F
        gbc.setState(0x874d, 0x449f, 0xf450, 0x7fde, 0x7d80, 0xf5d4, 0x1, 0x0);
        gbc.writeMem(0x874d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x449f);
        EXPECT(gbc.pc(), 0x874f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874d), 0xcb);
        EXPECT(gbc.readMem(0x874e), 0xbb);
        // CB BB 0330
        gbc.setState(0xc169, 0xbf55, 0xc10, 0xcec2, 0xf1c9, 0x807a, 0x1, 0x1);
        gbc.writeMem(0xc169, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbf55);
        EXPECT(gbc.pc(), 0xc16b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc169), 0xcb);
        EXPECT(gbc.readMem(0xc16a), 0xbb);
        // CB BB 0331
        gbc.setState(0x9d54, 0xb201, 0x6cd0, 0xa7f6, 0x30f6, 0x3c87, 0x1, 0x0);
        gbc.writeMem(0x9d54, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb201);
        EXPECT(gbc.pc(), 0x9d56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d54), 0xcb);
        EXPECT(gbc.readMem(0x9d55), 0xbb);
        // CB BB 0332
        gbc.setState(0x7c5, 0x9bf1, 0xb7a0, 0x987a, 0x7208, 0x3651, 0x0, 0x0);
        gbc.writeMem(0x7c5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9bf1);
        EXPECT(gbc.pc(), 0x7c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0333
        gbc.setState(0xdd8c, 0xaca5, 0x78c0, 0x92fd, 0xd702, 0x4e96, 0x0, 0x0);
        gbc.writeMem(0xdd8c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xaca5);
        EXPECT(gbc.pc(), 0xdd8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd8c), 0xcb);
        EXPECT(gbc.readMem(0xdd8d), 0xbb);
        // CB BB 0334
        gbc.setState(0xe47c, 0xece1, 0x8210, 0x92d4, 0xa4b2, 0x1c8d, 0x1, 0x0);
        gbc.writeMem(0xe47c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xece1);
        EXPECT(gbc.pc(), 0xe47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe47c), 0xcb);
        EXPECT(gbc.readMem(0xe47d), 0xbb);
        // CB BB 0335
        gbc.setState(0xabe8, 0x6984, 0x1310, 0x6ebc, 0x5f7e, 0x4986, 0x1, 0x0);
        gbc.writeMem(0xabe8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6984);
        EXPECT(gbc.pc(), 0xabea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabe8), 0xcb);
        EXPECT(gbc.readMem(0xabe9), 0xbb);
        // CB BB 0336
        gbc.setState(0x130a, 0x4aff, 0xbe30, 0x964, 0x7ad8, 0xb891, 0x1, 0x1);
        gbc.writeMem(0x130a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4aff);
        EXPECT(gbc.pc(), 0x130c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0337
        gbc.setState(0x67a6, 0xdbb5, 0x56d0, 0xa4f6, 0x3c37, 0x7c63, 0x1, 0x0);
        gbc.writeMem(0x67a6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xdbb5);
        EXPECT(gbc.pc(), 0x67a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0338
        gbc.setState(0x7a19, 0x5f33, 0xb810, 0xd500, 0xb03d, 0x1b7a, 0x1, 0x0);
        gbc.writeMem(0x7a19, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5f33);
        EXPECT(gbc.pc(), 0x7a1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0339
        gbc.setState(0x1bd7, 0xf048, 0x8530, 0x62ef, 0x83a4, 0x4a37, 0x1, 0x1);
        gbc.writeMem(0x1bd7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf048);
        EXPECT(gbc.pc(), 0x1bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 033A
        gbc.setState(0x1950, 0xac3e, 0x1cb0, 0xd77d, 0x5449, 0x2ba6, 0x1, 0x1);
        gbc.writeMem(0x1950, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xac3e);
        EXPECT(gbc.pc(), 0x1952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 033B
        gbc.setState(0xa327, 0xd1a5, 0x8f50, 0x15a, 0x87f1, 0x8613, 0x1, 0x1);
        gbc.writeMem(0xa327, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd1a5);
        EXPECT(gbc.pc(), 0xa329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa327), 0xcb);
        EXPECT(gbc.readMem(0xa328), 0xbb);
        // CB BB 033C
        gbc.setState(0x6e49, 0x35c1, 0x81c0, 0x2f96, 0xb1b8, 0xf98f, 0x1, 0x0);
        gbc.writeMem(0x6e49, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x35c1);
        EXPECT(gbc.pc(), 0x6e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 033D
        gbc.setState(0x6578, 0x1bd5, 0xec70, 0x7b6c, 0x72e4, 0x474b, 0x0, 0x0);
        gbc.writeMem(0x6578, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1bd5);
        EXPECT(gbc.pc(), 0x657a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 033E
        gbc.setState(0x492a, 0x4a62, 0x5900, 0x7b65, 0x2540, 0x4416, 0x0, 0x0);
        gbc.writeMem(0x492a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4a62);
        EXPECT(gbc.pc(), 0x492c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 033F
        gbc.setState(0x3012, 0x5c3d, 0xbf60, 0x9873, 0xbe1a, 0xd832, 0x1, 0x1);
        gbc.writeMem(0x3012, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5c3d);
        EXPECT(gbc.pc(), 0x3014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0341
        gbc.setState(0xadf5, 0x5c74, 0x8ba0, 0x1612, 0x39e2, 0xff2f, 0x0, 0x1);
        gbc.writeMem(0xadf5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5c74);
        EXPECT(gbc.pc(), 0xadf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf5), 0xcb);
        EXPECT(gbc.readMem(0xadf6), 0xbb);
        // CB BB 0342
        gbc.setState(0x6e8e, 0x40db, 0x8850, 0xed66, 0x7c50, 0xd711, 0x1, 0x0);
        gbc.writeMem(0x6e8e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x40db);
        EXPECT(gbc.pc(), 0x6e90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0343
        gbc.setState(0x89fa, 0x8a3c, 0x3ed0, 0x586e, 0x97d9, 0x531f, 0x1, 0x0);
        gbc.writeMem(0x89fa, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8a3c);
        EXPECT(gbc.pc(), 0x89fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89fa), 0xcb);
        EXPECT(gbc.readMem(0x89fb), 0xbb);
        // CB BB 0344
        gbc.setState(0xeb01, 0x491c, 0x53c0, 0x9a39, 0x30c0, 0x3119, 0x0, 0x1);
        gbc.writeMem(0xeb01, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x491c);
        EXPECT(gbc.pc(), 0xeb03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb01), 0xcb);
        EXPECT(gbc.readMem(0xeb02), 0xbb);
        // CB BB 0345
        gbc.setState(0xc0b0, 0x1560, 0x8fa0, 0x45fb, 0xfc69, 0x46b9, 0x0, 0x1);
        gbc.writeMem(0xc0b0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1560);
        EXPECT(gbc.pc(), 0xc0b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0b0), 0xcb);
        EXPECT(gbc.readMem(0xc0b1), 0xbb);
        // CB BB 0346
        gbc.setState(0x9a18, 0x9eed, 0xa6b0, 0x51f2, 0xc22e, 0x64a, 0x1, 0x1);
        gbc.writeMem(0x9a18, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9eed);
        EXPECT(gbc.pc(), 0x9a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a18), 0xcb);
        EXPECT(gbc.readMem(0x9a19), 0xbb);
        // CB BB 0347
        gbc.setState(0xadf3, 0xb29b, 0xc280, 0x508c, 0x4696, 0xcc86, 0x1, 0x1);
        gbc.writeMem(0xadf3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb29b);
        EXPECT(gbc.pc(), 0xadf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf3), 0xcb);
        EXPECT(gbc.readMem(0xadf4), 0xbb);
        // CB BB 0349
        gbc.setState(0x14c9, 0xc3bd, 0xcf90, 0x1199, 0xefc9, 0x813a, 0x0, 0x1);
        gbc.writeMem(0x14c9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc3bd);
        EXPECT(gbc.pc(), 0x14cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 034A
        gbc.setState(0x5cdc, 0x4279, 0xeb70, 0xee33, 0xd262, 0xacf0, 0x0, 0x0);
        gbc.writeMem(0x5cdc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4279);
        EXPECT(gbc.pc(), 0x5cde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 034B
        gbc.setState(0x5609, 0x468c, 0xd40, 0xaae4, 0x775d, 0x678f, 0x0, 0x0);
        gbc.writeMem(0x5609, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x468c);
        EXPECT(gbc.pc(), 0x560b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 034C
        gbc.setState(0x7e9, 0xbb60, 0x1990, 0xde4c, 0x8343, 0x1067, 0x0, 0x0);
        gbc.writeMem(0x7e9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbb60);
        EXPECT(gbc.pc(), 0x7eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 034D
        gbc.setState(0xe7e1, 0xe91f, 0x7e0, 0x4870, 0x86, 0x676e, 0x0, 0x0);
        gbc.writeMem(0xe7e1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe91f);
        EXPECT(gbc.pc(), 0xe7e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e1), 0xcb);
        EXPECT(gbc.readMem(0xe7e2), 0xbb);
        // CB BB 034E
        gbc.setState(0xb167, 0xf689, 0x73b0, 0x6051, 0xe2b8, 0xce0c, 0x1, 0x0);
        gbc.writeMem(0xb167, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf689);
        EXPECT(gbc.pc(), 0xb169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb167), 0xcb);
        EXPECT(gbc.readMem(0xb168), 0xbb);
        // CB BB 034F
        gbc.setState(0x5aec, 0x7122, 0xc750, 0xd6bb, 0x4c1a, 0x787f, 0x0, 0x1);
        gbc.writeMem(0x5aec, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7122);
        EXPECT(gbc.pc(), 0x5aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0350
        gbc.setState(0x9850, 0xa784, 0x79c0, 0x3be1, 0x227d, 0xecff, 0x1, 0x0);
        gbc.writeMem(0x9850, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa784);
        EXPECT(gbc.pc(), 0x9852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9850), 0xcb);
        EXPECT(gbc.readMem(0x9851), 0xbb);
        // CB BB 0351
        gbc.setState(0xd77e, 0x1eb, 0x3fc0, 0xd3d, 0x698d, 0xfcfa, 0x0, 0x0);
        gbc.writeMem(0xd77e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1eb);
        EXPECT(gbc.pc(), 0xd780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77e), 0xcb);
        EXPECT(gbc.readMem(0xd77f), 0xbb);
        // CB BB 0352
        gbc.setState(0x4428, 0x7ace, 0xc360, 0xc7f4, 0x86e3, 0x2b33, 0x1, 0x1);
        gbc.writeMem(0x4428, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7ace);
        EXPECT(gbc.pc(), 0x442a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0353
        gbc.setState(0x864, 0x7cbb, 0x34d0, 0xcb13, 0x835b, 0x9b90, 0x1, 0x0);
        gbc.writeMem(0x864, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7cbb);
        EXPECT(gbc.pc(), 0x866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0354
        gbc.setState(0x9c87, 0xc6c8, 0xc80, 0x16cf, 0xd701, 0xc524, 0x1, 0x0);
        gbc.writeMem(0x9c87, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc6c8);
        EXPECT(gbc.pc(), 0x9c89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c87), 0xcb);
        EXPECT(gbc.readMem(0x9c88), 0xbb);
        // CB BB 0355
        gbc.setState(0xa944, 0xf9c, 0xdfa0, 0xbfaa, 0xe568, 0x1e59, 0x1, 0x1);
        gbc.writeMem(0xa944, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf9c);
        EXPECT(gbc.pc(), 0xa946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa944), 0xcb);
        EXPECT(gbc.readMem(0xa945), 0xbb);
        // CB BB 0356
        gbc.setState(0x730f, 0xd84e, 0x5be0, 0x9773, 0x7b6f, 0x7fd4, 0x1, 0x0);
        gbc.writeMem(0x730f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd84e);
        EXPECT(gbc.pc(), 0x7311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0357
        gbc.setState(0xdb5d, 0x82a6, 0x68a0, 0x8ca5, 0x3954, 0x4874, 0x0, 0x0);
        gbc.writeMem(0xdb5d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x82a6);
        EXPECT(gbc.pc(), 0xdb5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb5d), 0xcb);
        EXPECT(gbc.readMem(0xdb5e), 0xbb);
        // CB BB 0358
        gbc.setState(0xdb97, 0x8580, 0x4150, 0xe859, 0x44df, 0x5720, 0x1, 0x0);
        gbc.writeMem(0xdb97, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8580);
        EXPECT(gbc.pc(), 0xdb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb97), 0xcb);
        EXPECT(gbc.readMem(0xdb98), 0xbb);
        // CB BB 0359
        gbc.setState(0x77ae, 0xb7ad, 0x3fa0, 0x6a69, 0xf0db, 0x827a, 0x0, 0x1);
        gbc.writeMem(0x77ae, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb7ad);
        EXPECT(gbc.pc(), 0x77b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 035A
        gbc.setState(0x4d0c, 0xe847, 0xb9f0, 0xbc38, 0xd251, 0x5fe1, 0x0, 0x0);
        gbc.writeMem(0x4d0c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe847);
        EXPECT(gbc.pc(), 0x4d0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 035C
        gbc.setState(0xc131, 0xbf4f, 0xc6a0, 0x7c88, 0x473c, 0x875a, 0x0, 0x1);
        gbc.writeMem(0xc131, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbf4f);
        EXPECT(gbc.pc(), 0xc133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc131), 0xcb);
        EXPECT(gbc.readMem(0xc132), 0xbb);
        // CB BB 035D
        gbc.setState(0x49a0, 0xf96a, 0x4b40, 0x413c, 0xa60f, 0xb38, 0x1, 0x1);
        gbc.writeMem(0x49a0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf96a);
        EXPECT(gbc.pc(), 0x49a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 035E
        gbc.setState(0x2976, 0xe051, 0xb360, 0x9bc, 0x1fd1, 0x9bfa, 0x1, 0x0);
        gbc.writeMem(0x2976, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe051);
        EXPECT(gbc.pc(), 0x2978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 035F
        gbc.setState(0x1d8, 0x8389, 0x7e60, 0xaaae, 0x63c5, 0x6c91, 0x0, 0x0);
        gbc.writeMem(0x1d8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8389);
        EXPECT(gbc.pc(), 0x1da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0360
        gbc.setState(0xb5ba, 0xeca3, 0x4780, 0x3c3c, 0x6983, 0xbc2, 0x1, 0x1);
        gbc.writeMem(0xb5ba, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xeca3);
        EXPECT(gbc.pc(), 0xb5bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ba), 0xcb);
        EXPECT(gbc.readMem(0xb5bb), 0xbb);
        // CB BB 0361
        gbc.setState(0x1ed0, 0xd340, 0x4780, 0x32ca, 0xcd87, 0x7024, 0x0, 0x1);
        gbc.writeMem(0x1ed0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd340);
        EXPECT(gbc.pc(), 0x1ed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0362
        gbc.setState(0xb891, 0xc4e0, 0x7e70, 0x980c, 0xcd26, 0x15d6, 0x0, 0x0);
        gbc.writeMem(0xb891, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc4e0);
        EXPECT(gbc.pc(), 0xb893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb891), 0xcb);
        EXPECT(gbc.readMem(0xb892), 0xbb);
        // CB BB 0363
        gbc.setState(0x2612, 0xb7ea, 0xdfb0, 0x9a62, 0x9c12, 0xeb82, 0x1, 0x1);
        gbc.writeMem(0x2612, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb7ea);
        EXPECT(gbc.pc(), 0x2614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0364
        gbc.setState(0x1b7b, 0x458e, 0xdfb0, 0x2684, 0xdc42, 0x92c8, 0x1, 0x1);
        gbc.writeMem(0x1b7b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x458e);
        EXPECT(gbc.pc(), 0x1b7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0365
        gbc.setState(0x9d26, 0x8412, 0x2970, 0x157f, 0x82cd, 0xafdb, 0x1, 0x0);
        gbc.writeMem(0x9d26, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8412);
        EXPECT(gbc.pc(), 0x9d28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d26), 0xcb);
        EXPECT(gbc.readMem(0x9d27), 0xbb);
        // CB BB 0366
        gbc.setState(0x32cb, 0xe17c, 0xd90, 0x4d0e, 0xd2f8, 0xee12, 0x1, 0x0);
        gbc.writeMem(0x32cb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe17c);
        EXPECT(gbc.pc(), 0x32cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0367
        gbc.setState(0x2fde, 0x1445, 0x74a0, 0xd4f2, 0x2333, 0x36e3, 0x0, 0x0);
        gbc.writeMem(0x2fde, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1445);
        EXPECT(gbc.pc(), 0x2fe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0368
        gbc.setState(0xbb11, 0xf86e, 0x6b50, 0xdc5c, 0xde95, 0xb4f3, 0x1, 0x1);
        gbc.writeMem(0xbb11, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf86e);
        EXPECT(gbc.pc(), 0xbb13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb11), 0xcb);
        EXPECT(gbc.readMem(0xbb12), 0xbb);
        // CB BB 0369
        gbc.setState(0xc16, 0x66ab, 0xf4e0, 0x92b0, 0x5702, 0x37d8, 0x0, 0x0);
        gbc.writeMem(0xc16, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x66ab);
        EXPECT(gbc.pc(), 0xc18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 036A
        gbc.setState(0x1190, 0x8851, 0xb0d0, 0xdd84, 0x6edf, 0xfd4c, 0x0, 0x0);
        gbc.writeMem(0x1190, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8851);
        EXPECT(gbc.pc(), 0x1192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 036B
        gbc.setState(0x92bf, 0x30ae, 0xc400, 0x77f3, 0x1a91, 0xd5c7, 0x0, 0x1);
        gbc.writeMem(0x92bf, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x30ae);
        EXPECT(gbc.pc(), 0x92c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92bf), 0xcb);
        EXPECT(gbc.readMem(0x92c0), 0xbb);
        // CB BB 036C
        gbc.setState(0xbed1, 0xb056, 0xb1c0, 0x4e7, 0xd617, 0x31bc, 0x0, 0x0);
        gbc.writeMem(0xbed1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb056);
        EXPECT(gbc.pc(), 0xbed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed1), 0xcb);
        EXPECT(gbc.readMem(0xbed2), 0xbb);
        // CB BB 036D
        gbc.setState(0x805a, 0xdfd, 0xc000, 0xe778, 0x9dd4, 0x8a0a, 0x0, 0x0);
        gbc.writeMem(0x805a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdfd);
        EXPECT(gbc.pc(), 0x805c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x805a), 0xcb);
        EXPECT(gbc.readMem(0x805b), 0xbb);
        // CB BB 036E
        gbc.setState(0x4c6b, 0x8050, 0x9070, 0xbb3, 0x82fb, 0x1c90, 0x0, 0x1);
        gbc.writeMem(0x4c6b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8050);
        EXPECT(gbc.pc(), 0x4c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 036F
        gbc.setState(0x2c1b, 0x2d2f, 0x5d30, 0xbd39, 0xa1e9, 0xf801, 0x0, 0x0);
        gbc.writeMem(0x2c1b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2d2f);
        EXPECT(gbc.pc(), 0x2c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0370
        gbc.setState(0x968, 0xfba3, 0x250, 0xe4c4, 0x865d, 0x184f, 0x1, 0x1);
        gbc.writeMem(0x968, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xfba3);
        EXPECT(gbc.pc(), 0x96a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0371
        gbc.setState(0x167d, 0xd9b1, 0x8c10, 0x4c4b, 0xa800, 0xd0b3, 0x1, 0x0);
        gbc.writeMem(0x167d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd9b1);
        EXPECT(gbc.pc(), 0x167f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0372
        gbc.setState(0x9750, 0x3ad8, 0x58f0, 0x4b90, 0x8ffa, 0xcb77, 0x1, 0x1);
        gbc.writeMem(0x9750, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3ad8);
        EXPECT(gbc.pc(), 0x9752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9750), 0xcb);
        EXPECT(gbc.readMem(0x9751), 0xbb);
        // CB BB 0373
        gbc.setState(0x7ae8, 0xbe6f, 0xc210, 0x184a, 0x270d, 0x481c, 0x1, 0x1);
        gbc.writeMem(0x7ae8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbe6f);
        EXPECT(gbc.pc(), 0x7aea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0374
        gbc.setState(0x30a, 0xd409, 0x5280, 0x7629, 0x5b9d, 0xda94, 0x1, 0x0);
        gbc.writeMem(0x30a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd409);
        EXPECT(gbc.pc(), 0x30c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0375
        gbc.setState(0x8e50, 0x9571, 0x1280, 0x6ae8, 0x6a21, 0xcae0, 0x1, 0x1);
        gbc.writeMem(0x8e50, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9571);
        EXPECT(gbc.pc(), 0x8e52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e50), 0xcb);
        EXPECT(gbc.readMem(0x8e51), 0xbb);
        // CB BB 0376
        gbc.setState(0x1f78, 0x1df8, 0x98e0, 0xb0fc, 0xc07c, 0x179e, 0x0, 0x0);
        gbc.writeMem(0x1f78, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1df8);
        EXPECT(gbc.pc(), 0x1f7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0377
        gbc.setState(0x835d, 0x3f4d, 0x8100, 0xe7a2, 0x37ab, 0xde1e, 0x0, 0x1);
        gbc.writeMem(0x835d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3f4d);
        EXPECT(gbc.pc(), 0x835f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x835d), 0xcb);
        EXPECT(gbc.readMem(0x835e), 0xbb);
        // CB BB 0378
        gbc.setState(0xc1ed, 0x1214, 0x1420, 0x592e, 0x7066, 0xcf5b, 0x1, 0x1);
        gbc.writeMem(0xc1ed, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1214);
        EXPECT(gbc.pc(), 0xc1ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ed), 0xcb);
        EXPECT(gbc.readMem(0xc1ee), 0xbb);
        // CB BB 0379
        gbc.setState(0x9f0a, 0xd16f, 0x8a00, 0xd26d, 0x6e01, 0xf831, 0x1, 0x1);
        gbc.writeMem(0x9f0a, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd16f);
        EXPECT(gbc.pc(), 0x9f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f0a), 0xcb);
        EXPECT(gbc.readMem(0x9f0b), 0xbb);
        // CB BB 037A
        gbc.setState(0x83c, 0x6a46, 0x9c90, 0xdc08, 0x59b9, 0x96fb, 0x0, 0x0);
        gbc.writeMem(0x83c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6a46);
        EXPECT(gbc.pc(), 0x83e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 037B
        gbc.setState(0x2610, 0x77c4, 0x6330, 0xa552, 0x97fc, 0xc43a, 0x0, 0x0);
        gbc.writeMem(0x2610, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x77c4);
        EXPECT(gbc.pc(), 0x2612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 037C
        gbc.setState(0x56c4, 0x87a9, 0x5e80, 0xdb3e, 0xcdf, 0x8558, 0x0, 0x1);
        gbc.writeMem(0x56c4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x87a9);
        EXPECT(gbc.pc(), 0x56c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 037D
        gbc.setState(0x53a5, 0xc230, 0x9cb0, 0xa310, 0x25d0, 0x8ac4, 0x1, 0x1);
        gbc.writeMem(0x53a5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc230);
        EXPECT(gbc.pc(), 0x53a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 037E
        gbc.setState(0x89a8, 0x9ac6, 0xd010, 0x8fad, 0xe2d0, 0x7d10, 0x0, 0x0);
        gbc.writeMem(0x89a8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9ac6);
        EXPECT(gbc.pc(), 0x89aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a8), 0xcb);
        EXPECT(gbc.readMem(0x89a9), 0xbb);
        // CB BB 037F
        gbc.setState(0x57e3, 0x7887, 0x4820, 0x6bb6, 0x7d03, 0x5683, 0x0, 0x1);
        gbc.writeMem(0x57e3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7887);
        EXPECT(gbc.pc(), 0x57e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0380
        gbc.setState(0x84, 0xc30d, 0xf090, 0xf2b9, 0x3421, 0x83ff, 0x0, 0x0);
        gbc.writeMem(0x84, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc30d);
        EXPECT(gbc.pc(), 0x86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0381
        gbc.setState(0x4b95, 0x4aea, 0xf5d0, 0x9b6b, 0xe69e, 0x3c01, 0x1, 0x1);
        gbc.writeMem(0x4b95, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4aea);
        EXPECT(gbc.pc(), 0x4b97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0382
        gbc.setState(0xbaf6, 0x3093, 0x6340, 0x9788, 0x6b99, 0x1b19, 0x0, 0x1);
        gbc.writeMem(0xbaf6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3093);
        EXPECT(gbc.pc(), 0xbaf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf6), 0xcb);
        EXPECT(gbc.readMem(0xbaf7), 0xbb);
        // CB BB 0383
        gbc.setState(0xaafb, 0xb611, 0xba30, 0xb1d0, 0x3693, 0xbe2, 0x0, 0x0);
        gbc.writeMem(0xaafb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb611);
        EXPECT(gbc.pc(), 0xaafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaafb), 0xcb);
        EXPECT(gbc.readMem(0xaafc), 0xbb);
        // CB BB 0384
        gbc.setState(0x86e7, 0x856a, 0xdfd0, 0x2a0b, 0x4df, 0xea0d, 0x1, 0x0);
        gbc.writeMem(0x86e7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x856a);
        EXPECT(gbc.pc(), 0x86e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86e7), 0xcb);
        EXPECT(gbc.readMem(0x86e8), 0xbb);
        // CB BB 0385
        gbc.setState(0xd6fb, 0x7639, 0x25f0, 0xe541, 0x39fa, 0x1e42, 0x1, 0x1);
        gbc.writeMem(0xd6fb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7639);
        EXPECT(gbc.pc(), 0xd6fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6fb), 0xcb);
        EXPECT(gbc.readMem(0xd6fc), 0xbb);
        // CB BB 0386
        gbc.setState(0x1187, 0x2dd0, 0x5ee0, 0x3153, 0xd644, 0xd93f, 0x0, 0x0);
        gbc.writeMem(0x1187, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2dd0);
        EXPECT(gbc.pc(), 0x1189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0387
        gbc.setState(0x4dbd, 0xc5ec, 0x5e60, 0xccd4, 0xe89f, 0x623b, 0x0, 0x0);
        gbc.writeMem(0x4dbd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc5ec);
        EXPECT(gbc.pc(), 0x4dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0388
        gbc.setState(0x9b68, 0x3c97, 0x3bb0, 0xfa76, 0x2f43, 0x8298, 0x1, 0x0);
        gbc.writeMem(0x9b68, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3c97);
        EXPECT(gbc.pc(), 0x9b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b68), 0xcb);
        EXPECT(gbc.readMem(0x9b69), 0xbb);
        // CB BB 0389
        gbc.setState(0x5adf, 0xf58c, 0xe620, 0x7cd2, 0xd1df, 0x4805, 0x1, 0x0);
        gbc.writeMem(0x5adf, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf58c);
        EXPECT(gbc.pc(), 0x5ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 038A
        gbc.setState(0xe509, 0xc749, 0x1500, 0xebf9, 0xb6f, 0xf83e, 0x1, 0x0);
        gbc.writeMem(0xe509, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc749);
        EXPECT(gbc.pc(), 0xe50b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe509), 0xcb);
        EXPECT(gbc.readMem(0xe50a), 0xbb);
        // CB BB 038B
        gbc.setState(0xa88e, 0x28d9, 0xee80, 0x6102, 0xa29b, 0x55e5, 0x0, 0x0);
        gbc.writeMem(0xa88e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x28d9);
        EXPECT(gbc.pc(), 0xa890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88e), 0xcb);
        EXPECT(gbc.readMem(0xa88f), 0xbb);
        // CB BB 038C
        gbc.setState(0x77de, 0x7365, 0xe3f0, 0x3938, 0x729d, 0xf51d, 0x1, 0x1);
        gbc.writeMem(0x77de, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7365);
        EXPECT(gbc.pc(), 0x77e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 038D
        gbc.setState(0x900b, 0xf2c2, 0xd1a0, 0xd182, 0xcbb9, 0xc90c, 0x0, 0x0);
        gbc.writeMem(0x900b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf2c2);
        EXPECT(gbc.pc(), 0x900d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x900b), 0xcb);
        EXPECT(gbc.readMem(0x900c), 0xbb);
        // CB BB 038E
        gbc.setState(0x6927, 0xa6e6, 0x350, 0x71a7, 0xb872, 0x88fd, 0x1, 0x1);
        gbc.writeMem(0x6927, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa6e6);
        EXPECT(gbc.pc(), 0x6929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 038F
        gbc.setState(0xba65, 0xaa17, 0x2860, 0x326a, 0xf439, 0x7d99, 0x1, 0x1);
        gbc.writeMem(0xba65, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xaa17);
        EXPECT(gbc.pc(), 0xba67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba65), 0xcb);
        EXPECT(gbc.readMem(0xba66), 0xbb);
        // CB BB 0390
        gbc.setState(0xc4c3, 0x45eb, 0x2e60, 0x666e, 0xdcd2, 0x80c8, 0x0, 0x1);
        gbc.writeMem(0xc4c3, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x45eb);
        EXPECT(gbc.pc(), 0xc4c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c3), 0xcb);
        EXPECT(gbc.readMem(0xc4c4), 0xbb);
        // CB BB 0391
        gbc.setState(0x68f7, 0xf744, 0xd040, 0xf058, 0xd878, 0xb5c0, 0x0, 0x1);
        gbc.writeMem(0x68f7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf744);
        EXPECT(gbc.pc(), 0x68f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 0392
        gbc.setState(0x140f, 0xc086, 0xd550, 0x9d06, 0xfaec, 0xf62, 0x0, 0x0);
        gbc.writeMem(0x140f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc086);
        EXPECT(gbc.pc(), 0x1411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0394
        gbc.setState(0x38dc, 0x57b8, 0xd8f0, 0x7e4e, 0x60d2, 0x44b4, 0x1, 0x1);
        gbc.writeMem(0x38dc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x57b8);
        EXPECT(gbc.pc(), 0x38de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0395
        gbc.setState(0x2343, 0x8cb0, 0xf230, 0x923d, 0xf87b, 0x33cd, 0x0, 0x1);
        gbc.writeMem(0x2343, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8cb0);
        EXPECT(gbc.pc(), 0x2345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0396
        gbc.setState(0x8d3b, 0xd09d, 0x4870, 0x253a, 0x5932, 0xe46f, 0x0, 0x1);
        gbc.writeMem(0x8d3b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd09d);
        EXPECT(gbc.pc(), 0x8d3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d3b), 0xcb);
        EXPECT(gbc.readMem(0x8d3c), 0xbb);
        // CB BB 0397
        gbc.setState(0x1241, 0x2602, 0xd370, 0xbc37, 0xcbf7, 0xe940, 0x1, 0x1);
        gbc.writeMem(0x1241, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2602);
        EXPECT(gbc.pc(), 0x1243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 0398
        gbc.setState(0xdcf7, 0xccd7, 0xe5e0, 0x7fd0, 0x7d28, 0x2796, 0x1, 0x1);
        gbc.writeMem(0xdcf7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xccd7);
        EXPECT(gbc.pc(), 0xdcf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf7), 0xcb);
        EXPECT(gbc.readMem(0xdcf8), 0xbb);
        // CB BB 0399
        gbc.setState(0x1cc0, 0x4d43, 0x5680, 0x1015, 0x315d, 0x7fa1, 0x0, 0x0);
        gbc.writeMem(0x1cc0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4d43);
        EXPECT(gbc.pc(), 0x1cc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 039A
        gbc.setState(0xc494, 0x3728, 0x1500, 0x312d, 0x7e86, 0x4191, 0x1, 0x0);
        gbc.writeMem(0xc494, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3728);
        EXPECT(gbc.pc(), 0xc496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc494), 0xcb);
        EXPECT(gbc.readMem(0xc495), 0xbb);
        // CB BB 039B
        gbc.setState(0x9fcc, 0x5d25, 0x97e0, 0x9f14, 0x60b9, 0x7df, 0x0, 0x1);
        gbc.writeMem(0x9fcc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5d25);
        EXPECT(gbc.pc(), 0x9fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fcc), 0xcb);
        EXPECT(gbc.readMem(0x9fcd), 0xbb);
        // CB BB 039C
        gbc.setState(0xafc, 0xb636, 0x6b30, 0xa848, 0xa7e4, 0xbc18, 0x0, 0x0);
        gbc.writeMem(0xafc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb636);
        EXPECT(gbc.pc(), 0xafe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 039D
        gbc.setState(0xcd06, 0x7c1e, 0x7d80, 0x9a05, 0x7d67, 0xd349, 0x0, 0x0);
        gbc.writeMem(0xcd06, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7c1e);
        EXPECT(gbc.pc(), 0xcd08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd06), 0xcb);
        EXPECT(gbc.readMem(0xcd07), 0xbb);
        // CB BB 039E
        gbc.setState(0x8db9, 0x5d76, 0x6590, 0x3957, 0x33b0, 0xf78c, 0x1, 0x1);
        gbc.writeMem(0x8db9, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5d76);
        EXPECT(gbc.pc(), 0x8dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db9), 0xcb);
        EXPECT(gbc.readMem(0x8dba), 0xbb);
        // CB BB 039F
        gbc.setState(0xb6a5, 0xd089, 0x3300, 0xa267, 0x6e09, 0xe4f6, 0x1, 0x0);
        gbc.writeMem(0xb6a5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd089);
        EXPECT(gbc.pc(), 0xb6a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a5), 0xcb);
        EXPECT(gbc.readMem(0xb6a6), 0xbb);
        // CB BB 03A0
        gbc.setState(0x6d05, 0xb2ed, 0xcaf0, 0xb3dd, 0x307f, 0x6f0d, 0x1, 0x0);
        gbc.writeMem(0x6d05, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb2ed);
        EXPECT(gbc.pc(), 0x6d07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03A1
        gbc.setState(0x7e, 0x8735, 0x1630, 0x64c5, 0x2dab, 0x7945, 0x0, 0x0);
        gbc.writeMem(0x7e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8735);
        EXPECT(gbc.pc(), 0x80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03A2
        gbc.setState(0x7e9f, 0x6461, 0x8c20, 0xc735, 0x56ea, 0x7bc4, 0x0, 0x0);
        gbc.writeMem(0x7e9f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6461);
        EXPECT(gbc.pc(), 0x7ea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03A3
        gbc.setState(0xc2cc, 0x5a71, 0xf330, 0xf75b, 0x2535, 0xb9de, 0x1, 0x0);
        gbc.writeMem(0xc2cc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5a71);
        EXPECT(gbc.pc(), 0xc2ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2cc), 0xcb);
        EXPECT(gbc.readMem(0xc2cd), 0xbb);
        // CB BB 03A4
        gbc.setState(0x4a12, 0x9bfd, 0xf050, 0x9480, 0x8930, 0x94d2, 0x1, 0x0);
        gbc.writeMem(0x4a12, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9bfd);
        EXPECT(gbc.pc(), 0x4a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03A5
        gbc.setState(0x75f8, 0x6f54, 0x7b10, 0x548b, 0x9354, 0xb213, 0x1, 0x0);
        gbc.writeMem(0x75f8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6f54);
        EXPECT(gbc.pc(), 0x75fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03A6
        gbc.setState(0x1c52, 0x432c, 0x5170, 0xc348, 0x566f, 0x106b, 0x0, 0x0);
        gbc.writeMem(0x1c52, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x432c);
        EXPECT(gbc.pc(), 0x1c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03A7
        gbc.setState(0x422b, 0x7528, 0x31d0, 0xad57, 0xe345, 0xf784, 0x0, 0x1);
        gbc.writeMem(0x422b, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7528);
        EXPECT(gbc.pc(), 0x422d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03A8
        gbc.setState(0xef70, 0xa28e, 0xd830, 0x7676, 0xd995, 0x2f4a, 0x1, 0x1);
        gbc.writeMem(0xef70, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa28e);
        EXPECT(gbc.pc(), 0xef72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef70), 0xcb);
        EXPECT(gbc.readMem(0xef71), 0xbb);
        // CB BB 03A9
        gbc.setState(0x3c7, 0x7498, 0x2250, 0x95d0, 0x40e8, 0xd23c, 0x1, 0x1);
        gbc.writeMem(0x3c7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7498);
        EXPECT(gbc.pc(), 0x3c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03AA
        gbc.setState(0x736, 0xf160, 0x5a50, 0xdcaa, 0x689, 0x1f1c, 0x0, 0x1);
        gbc.writeMem(0x736, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf160);
        EXPECT(gbc.pc(), 0x738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03AB
        gbc.setState(0xede8, 0xdc98, 0x6560, 0x3dd4, 0xa845, 0xe842, 0x0, 0x1);
        gbc.writeMem(0xede8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdc98);
        EXPECT(gbc.pc(), 0xedea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede8), 0xcb);
        EXPECT(gbc.readMem(0xede9), 0xbb);
        // CB BB 03AC
        gbc.setState(0x6420, 0x2966, 0xddc0, 0x86ca, 0x22fc, 0x6cd9, 0x0, 0x1);
        gbc.writeMem(0x6420, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2966);
        EXPECT(gbc.pc(), 0x6422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03AD
        gbc.setState(0xedab, 0xad59, 0xf770, 0x743c, 0xca24, 0x153b, 0x1, 0x0);
        gbc.writeMem(0xedab, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xad59);
        EXPECT(gbc.pc(), 0xedad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedab), 0xcb);
        EXPECT(gbc.readMem(0xedac), 0xbb);
        // CB BB 03AE
        gbc.setState(0x820d, 0xab9f, 0xf990, 0x5273, 0x503c, 0x4508, 0x1, 0x0);
        gbc.writeMem(0x820d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xab9f);
        EXPECT(gbc.pc(), 0x820f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x820d), 0xcb);
        EXPECT(gbc.readMem(0x820e), 0xbb);
        // CB BB 03B0
        gbc.setState(0x8a6, 0x34eb, 0xa930, 0x8a92, 0x938c, 0x1beb, 0x1, 0x1);
        gbc.writeMem(0x8a6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x34eb);
        EXPECT(gbc.pc(), 0x8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03B1
        gbc.setState(0x997c, 0xafd4, 0xbdc0, 0xb43d, 0xef06, 0x3576, 0x1, 0x0);
        gbc.writeMem(0x997c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xafd4);
        EXPECT(gbc.pc(), 0x997e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997c), 0xcb);
        EXPECT(gbc.readMem(0x997d), 0xbb);
        // CB BB 03B2
        gbc.setState(0xaa76, 0xf674, 0xa610, 0xb76d, 0xc9b7, 0x3ae0, 0x1, 0x0);
        gbc.writeMem(0xaa76, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf674);
        EXPECT(gbc.pc(), 0xaa78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa76), 0xcb);
        EXPECT(gbc.readMem(0xaa77), 0xbb);
        // CB BB 03B3
        gbc.setState(0x7dc6, 0xffc1, 0x97e0, 0xec7f, 0xfa83, 0xfc34, 0x0, 0x0);
        gbc.writeMem(0x7dc6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xffc1);
        EXPECT(gbc.pc(), 0x7dc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03B4
        gbc.setState(0x6a11, 0x7e2e, 0x3af0, 0x341b, 0x9bcf, 0x3fe9, 0x1, 0x0);
        gbc.writeMem(0x6a11, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7e2e);
        EXPECT(gbc.pc(), 0x6a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03B5
        gbc.setState(0x5de8, 0x2ac6, 0x2b70, 0xefa5, 0xf355, 0x8fc0, 0x1, 0x1);
        gbc.writeMem(0x5de8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2ac6);
        EXPECT(gbc.pc(), 0x5dea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03B7
        gbc.setState(0x4cc7, 0xf2ec, 0xff70, 0x31f6, 0xe2f2, 0xa8d9, 0x1, 0x0);
        gbc.writeMem(0x4cc7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf2ec);
        EXPECT(gbc.pc(), 0x4cc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03B8
        gbc.setState(0x42a6, 0xa0f6, 0x4b80, 0x4b11, 0x6596, 0xb3ec, 0x0, 0x0);
        gbc.writeMem(0x42a6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa0f6);
        EXPECT(gbc.pc(), 0x42a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03B9
        gbc.setState(0xc82f, 0x7e24, 0x2e10, 0xdaa9, 0x95b9, 0x4556, 0x1, 0x1);
        gbc.writeMem(0xc82f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7e24);
        EXPECT(gbc.pc(), 0xc831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc82f), 0xcb);
        EXPECT(gbc.readMem(0xc830), 0xbb);
        // CB BB 03BA
        gbc.setState(0x96c1, 0x6765, 0x1a40, 0xe082, 0xd2af, 0xea6, 0x1, 0x0);
        gbc.writeMem(0x96c1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6765);
        EXPECT(gbc.pc(), 0x96c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c1), 0xcb);
        EXPECT(gbc.readMem(0x96c2), 0xbb);
        // CB BB 03BB
        gbc.setState(0x8703, 0xee51, 0xf7f0, 0xe23b, 0x1c24, 0x4073, 0x1, 0x1);
        gbc.writeMem(0x8703, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xee51);
        EXPECT(gbc.pc(), 0x8705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8703), 0xcb);
        EXPECT(gbc.readMem(0x8704), 0xbb);
        // CB BB 03BC
        gbc.setState(0x54f0, 0x2323, 0x97c0, 0x2f81, 0x1483, 0xd8df, 0x0, 0x0);
        gbc.writeMem(0x54f0, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2323);
        EXPECT(gbc.pc(), 0x54f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03BD
        gbc.setState(0xe406, 0x8b1d, 0xd4e0, 0x1464, 0x5cf4, 0xef2d, 0x1, 0x1);
        gbc.writeMem(0xe406, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8b1d);
        EXPECT(gbc.pc(), 0xe408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe406), 0xcb);
        EXPECT(gbc.readMem(0xe407), 0xbb);
        // CB BB 03BE
        gbc.setState(0x3bdf, 0x6ef3, 0x9960, 0xa2e8, 0xf99c, 0xde3f, 0x0, 0x1);
        gbc.writeMem(0x3bdf, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6ef3);
        EXPECT(gbc.pc(), 0x3be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03BF
        gbc.setState(0x686, 0x77c4, 0x85b0, 0xb264, 0x9165, 0x23f0, 0x1, 0x1);
        gbc.writeMem(0x686, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x77c4);
        EXPECT(gbc.pc(), 0x688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03C0
        gbc.setState(0xddbd, 0x597a, 0x78b0, 0xf589, 0x8090, 0xee70, 0x1, 0x1);
        gbc.writeMem(0xddbd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x597a);
        EXPECT(gbc.pc(), 0xddbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddbd), 0xcb);
        EXPECT(gbc.readMem(0xddbe), 0xbb);
        // CB BB 03C1
        gbc.setState(0x9618, 0x9a46, 0x280, 0x95fb, 0xb01b, 0x80cb, 0x0, 0x1);
        gbc.writeMem(0x9618, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9a46);
        EXPECT(gbc.pc(), 0x961a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9618), 0xcb);
        EXPECT(gbc.readMem(0x9619), 0xbb);
        // CB BB 03C2
        gbc.setState(0x5a5e, 0xc213, 0xe0a0, 0xd97c, 0xd0d4, 0xf6, 0x0, 0x0);
        gbc.writeMem(0x5a5e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc213);
        EXPECT(gbc.pc(), 0x5a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03C3
        gbc.setState(0x5990, 0x98cc, 0x80c0, 0x97c7, 0x71d1, 0x667, 0x1, 0x0);
        gbc.writeMem(0x5990, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x98cc);
        EXPECT(gbc.pc(), 0x5992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03C4
        gbc.setState(0xd4de, 0x3e18, 0xd180, 0xbef9, 0x1976, 0xef42, 0x1, 0x1);
        gbc.writeMem(0xd4de, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3e18);
        EXPECT(gbc.pc(), 0xd4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4de), 0xcb);
        EXPECT(gbc.readMem(0xd4df), 0xbb);
        // CB BB 03C5
        gbc.setState(0xd, 0x48c8, 0xe550, 0x2e7d, 0xbd5e, 0xaf7, 0x1, 0x0);
        gbc.writeMem(0xd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x48c8);
        EXPECT(gbc.pc(), 0xf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03C6
        gbc.setState(0xcceb, 0xf1a3, 0xd780, 0x2622, 0x7148, 0x66cd, 0x0, 0x1);
        gbc.writeMem(0xcceb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf1a3);
        EXPECT(gbc.pc(), 0xcced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcceb), 0xcb);
        EXPECT(gbc.readMem(0xccec), 0xbb);
        // CB BB 03C7
        gbc.setState(0x773e, 0x47a5, 0xa20, 0x7f40, 0x594f, 0xc608, 0x0, 0x0);
        gbc.writeMem(0x773e, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x47a5);
        EXPECT(gbc.pc(), 0x7740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03C9
        gbc.setState(0x796, 0x6b72, 0xa770, 0xb050, 0x8305, 0x55c, 0x1, 0x0);
        gbc.writeMem(0x796, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6b72);
        EXPECT(gbc.pc(), 0x798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03CA
        gbc.setState(0x42f1, 0x95f1, 0xcc20, 0xa9bf, 0xa767, 0xe26, 0x0, 0x1);
        gbc.writeMem(0x42f1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x95f1);
        EXPECT(gbc.pc(), 0x42f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03CB
        gbc.setState(0x54f6, 0x6d, 0x4ba0, 0x39a8, 0x93cb, 0xfa1e, 0x0, 0x1);
        gbc.writeMem(0x54f6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6d);
        EXPECT(gbc.pc(), 0x54f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03CC
        gbc.setState(0x815c, 0xe2dc, 0xe170, 0x119e, 0x2e9f, 0x3b43, 0x0, 0x0);
        gbc.writeMem(0x815c, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe2dc);
        EXPECT(gbc.pc(), 0x815e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x815c), 0xcb);
        EXPECT(gbc.readMem(0x815d), 0xbb);
        // CB BB 03CD
        gbc.setState(0x2f5, 0x405, 0x3e00, 0x6e58, 0x1c27, 0xaa64, 0x1, 0x0);
        gbc.writeMem(0x2f5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x405);
        EXPECT(gbc.pc(), 0x2f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03CE
        gbc.setState(0xa8f7, 0x44ed, 0xfd00, 0x6755, 0xe2cd, 0x92a2, 0x0, 0x0);
        gbc.writeMem(0xa8f7, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x44ed);
        EXPECT(gbc.pc(), 0xa8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f7), 0xcb);
        EXPECT(gbc.readMem(0xa8f8), 0xbb);
        // CB BB 03CF
        gbc.setState(0x2ea1, 0x5701, 0x3110, 0xaa3c, 0x6902, 0x4475, 0x1, 0x1);
        gbc.writeMem(0x2ea1, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5701);
        EXPECT(gbc.pc(), 0x2ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03D0
        gbc.setState(0x8dfa, 0x597b, 0xf000, 0x2b7e, 0xb3be, 0x47ff, 0x0, 0x0);
        gbc.writeMem(0x8dfa, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x597b);
        EXPECT(gbc.pc(), 0x8dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dfa), 0xcb);
        EXPECT(gbc.readMem(0x8dfb), 0xbb);
        // CB BB 03D1
        gbc.setState(0x2c92, 0xbf13, 0x3280, 0x10a8, 0x67ff, 0xca9b, 0x1, 0x0);
        gbc.writeMem(0x2c92, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbf13);
        EXPECT(gbc.pc(), 0x2c94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03D2
        gbc.setState(0x56f4, 0xfd38, 0x30, 0x680c, 0x95ef, 0xbf87, 0x1, 0x0);
        gbc.writeMem(0x56f4, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfd38);
        EXPECT(gbc.pc(), 0x56f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03D3
        gbc.setState(0xb9dc, 0x176e, 0x8510, 0x9e2e, 0xd3f3, 0xe7b6, 0x1, 0x1);
        gbc.writeMem(0xb9dc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x176e);
        EXPECT(gbc.pc(), 0xb9de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9dc), 0xcb);
        EXPECT(gbc.readMem(0xb9dd), 0xbb);
        // CB BB 03D4
        gbc.setState(0x3531, 0x70f, 0xfdd0, 0x8004, 0xd81b, 0x7d8f, 0x1, 0x0);
        gbc.writeMem(0x3531, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x70f);
        EXPECT(gbc.pc(), 0x3533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03D5
        gbc.setState(0x4333, 0xcb25, 0x3580, 0xe0bc, 0x6707, 0x467, 0x0, 0x0);
        gbc.writeMem(0x4333, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xcb25);
        EXPECT(gbc.pc(), 0x4335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03D6
        gbc.setState(0x3e5f, 0xd4d2, 0x9290, 0xc3a0, 0x9a93, 0x8754, 0x0, 0x0);
        gbc.writeMem(0x3e5f, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd4d2);
        EXPECT(gbc.pc(), 0x3e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03D7
        gbc.setState(0x36eb, 0x8125, 0xec20, 0x28c0, 0x3b4, 0x844d, 0x1, 0x1);
        gbc.writeMem(0x36eb, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8125);
        EXPECT(gbc.pc(), 0x36ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03D8
        gbc.setState(0xd595, 0x824e, 0x6440, 0x6c54, 0x26bd, 0x4951, 0x0, 0x1);
        gbc.writeMem(0xd595, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x824e);
        EXPECT(gbc.pc(), 0xd597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd595), 0xcb);
        EXPECT(gbc.readMem(0xd596), 0xbb);
        // CB BB 03D9
        gbc.setState(0x6ef8, 0x3d69, 0x8ab0, 0xfc, 0x7b2, 0x8a23, 0x0, 0x1);
        gbc.writeMem(0x6ef8, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3d69);
        EXPECT(gbc.pc(), 0x6efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03DA
        gbc.setState(0x755d, 0xede7, 0xb350, 0xeae3, 0x9add, 0x1af, 0x0, 0x0);
        gbc.writeMem(0x755d, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xede7);
        EXPECT(gbc.pc(), 0x755f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03DB
        gbc.setState(0x1122, 0xa3b9, 0x7210, 0xb86a, 0xbd09, 0xa763, 0x1, 0x1);
        gbc.writeMem(0x1122, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa3b9);
        EXPECT(gbc.pc(), 0x1124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03DC
        gbc.setState(0xb9ff, 0x8330, 0xcb0, 0xfba4, 0x5760, 0xa93f, 0x1, 0x0);
        gbc.writeMem(0xb9ff, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8330);
        EXPECT(gbc.pc(), 0xba01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ff), 0xcb);
        EXPECT(gbc.readMem(0xba00), 0xbb);
        // CB BB 03DD
        gbc.setState(0x5044, 0x313f, 0x2ac0, 0xd1e0, 0x344, 0x2bb8, 0x0, 0x1);
        gbc.writeMem(0x5044, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x313f);
        EXPECT(gbc.pc(), 0x5046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03DE
        gbc.setState(0x77b6, 0xd211, 0x8f90, 0x9ead, 0x54ac, 0x57f2, 0x0, 0x1);
        gbc.writeMem(0x77b6, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd211);
        EXPECT(gbc.pc(), 0x77b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03DF
        gbc.setState(0x59dc, 0xdd2a, 0xdce0, 0x1719, 0xa77f, 0x6a34, 0x0, 0x0);
        gbc.writeMem(0x59dc, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdd2a);
        EXPECT(gbc.pc(), 0x59de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BB 03E2
        gbc.setState(0x7821, 0x2989, 0xc9f0, 0x5cc7, 0x15e, 0x3da8, 0x0, 0x0);
        gbc.writeMem(0x7821, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2989);
        EXPECT(gbc.pc(), 0x7823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03E3
        gbc.setState(0x4bbe, 0x85ee, 0x6750, 0xdfdc, 0x4ed7, 0x780, 0x0, 0x0);
        gbc.writeMem(0x4bbe, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x85ee);
        EXPECT(gbc.pc(), 0x4bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03E4
        gbc.setState(0xc0a5, 0x35b7, 0x80, 0x5140, 0x213a, 0xc9e2, 0x0, 0x1);
        gbc.writeMem(0xc0a5, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x35b7);
        EXPECT(gbc.pc(), 0xc0a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a5), 0xcb);
        EXPECT(gbc.readMem(0xc0a6), 0xbb);
        // CB BB 03E5
        gbc.setState(0x73fd, 0x2cd5, 0x6b0, 0x5c95, 0x347a, 0xb10e, 0x0, 0x1);
        gbc.writeMem(0x73fd, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2cd5);
        EXPECT(gbc.pc(), 0x73ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BB 03E6
        gbc.setState(0xe748, 0xdfa4, 0x61d0, 0x8c90, 0x5789, 0x488, 0x0, 0x0);
        gbc.writeMem(0xe748, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xdfa4);
        EXPECT(gbc.pc(), 0xe74a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe748), 0xcb);
        EXPECT(gbc.readMem(0xe749), 0xbb);
        // CB BB 03E7
        gbc.setState(0xc494, 0xead3, 0xff20, 0xb38f, 0xa608, 0xadf8, 0x0, 0x0);
        gbc.writeMem(0xc494, { 0xcb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xead3);
        EXPECT(gbc.pc(), 0xc496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc494), 0xcb);
        EXPECT(gbc.readMem(0xc495), 0xbb);
    }
