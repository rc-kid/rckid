    TEST(gbcemu, opcode_c9) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // C9 0000
        gbc.setState(0xb7f5, 0x9f4e, 0xb5d0, 0x30f8, 0x4cb8, 0xa904, 0x0, 0x1);
        gbc.writeMem(0x9f4e, { 0x7e, 0x3b });
        gbc.writeMem(0xb7f5, { 0xc9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9f50, gbc.sp());
        EXPECT(0x3b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9f4e));
        EXPECT(0x3b, gbc.readMem(0x9f4f));
        EXPECT(0xc9, gbc.readMem(0xb7f5));
        // C9 0001
        gbc.setState(0xee04, 0xed7f, 0xbfe0, 0x7342, 0x8a15, 0xb54b, 0x0, 0x1);
        gbc.writeMem(0xed7f, { 0x38, 0x2b });
        gbc.writeMem(0xee04, { 0xc9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xed81, gbc.sp());
        EXPECT(0x2b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xed7f));
        EXPECT(0x2b, gbc.readMem(0xed80));
        EXPECT(0xc9, gbc.readMem(0xee04));
        // C9 0002
        gbc.setState(0x526d, 0xd5d2, 0x8c90, 0xd9ac, 0xa150, 0xcae2, 0x1, 0x0);
        gbc.writeMem(0x526d, { 0xc9 });
        gbc.writeMem(0xd5d2, { 0xc8, 0x2c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd5d4, gbc.sp());
        EXPECT(0x2cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd5d2));
        EXPECT(0x2c, gbc.readMem(0xd5d3));
        // C9 0003
        gbc.setState(0xc089, 0xdb3a, 0xef60, 0x88f5, 0x4797, 0x7e8e, 0x1, 0x0);
        gbc.writeMem(0xc089, { 0xc9 });
        gbc.writeMem(0xdb3a, { 0xa4, 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdb3c, gbc.sp());
        EXPECT(0xb0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc089));
        EXPECT(0xa4, gbc.readMem(0xdb3a));
        EXPECT(0xb0, gbc.readMem(0xdb3b));
        // C9 0004
        gbc.setState(0xbd9c, 0xa2e2, 0x9410, 0xe21a, 0xd6dd, 0x6d45, 0x1, 0x1);
        gbc.writeMem(0xa2e2, { 0x67, 0x0 });
        gbc.writeMem(0xbd9c, { 0xc9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa2e4, gbc.sp());
        EXPECT(0x67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xa2e2));
        EXPECT(0x0, gbc.readMem(0xa2e3));
        EXPECT(0xc9, gbc.readMem(0xbd9c));
        // C9 0005
        gbc.setState(0xad08, 0x6c55, 0x6280, 0xe7ea, 0xbe40, 0x15e9, 0x1, 0x1);
        gbc.writeMem(0x6c55, { 0xa2, 0x15 });
        gbc.writeMem(0xad08, { 0xc9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6c57, gbc.sp());
        EXPECT(0x15a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xad08));
        // C9 0006
        gbc.setState(0x729d, 0xd1cb, 0x71c0, 0xb34d, 0x2acf, 0xf849, 0x1, 0x1);
        gbc.writeMem(0x729d, { 0xc9 });
        gbc.writeMem(0xd1cb, { 0x89, 0x3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd1cd, gbc.sp());
        EXPECT(0x389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd1cb));
        EXPECT(0x3, gbc.readMem(0xd1cc));
        // C9 0007
        gbc.setState(0x8f57, 0x62d6, 0x9a10, 0xc93b, 0xd2e0, 0x1df4, 0x0, 0x0);
        gbc.writeMem(0x62d6, { 0x49, 0x16 });
        gbc.writeMem(0x8f57, { 0xc9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x62d8, gbc.sp());
        EXPECT(0x1649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8f57));
        // C9 0008
        gbc.setState(0x8eae, 0xc071, 0x6740, 0x69d7, 0xa68b, 0x8397, 0x1, 0x1);
        gbc.writeMem(0x8eae, { 0xc9 });
        gbc.writeMem(0xc071, { 0x5d, 0xbb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc073, gbc.sp());
        EXPECT(0xbb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8eae));
        EXPECT(0x5d, gbc.readMem(0xc071));
        EXPECT(0xbb, gbc.readMem(0xc072));
        // C9 0009
        gbc.setState(0x249a, 0xd99d, 0x7260, 0x9f53, 0x8005, 0xe52a, 0x1, 0x1);
        gbc.writeMem(0x249a, { 0xc9 });
        gbc.writeMem(0xd99d, { 0x75, 0xa6 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd99f, gbc.sp());
        EXPECT(0xa675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xd99d));
        EXPECT(0xa6, gbc.readMem(0xd99e));
        // C9 000A
        gbc.setState(0x3fd0, 0xf0b0, 0x45b0, 0x389a, 0x7ea, 0xd7a, 0x1, 0x0);
        gbc.writeMem(0x3fd0, { 0xc9 });
        gbc.writeMem(0xf0b0, { 0x1, 0xc9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf0b2, gbc.sp());
        EXPECT(0xc901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xf0b0));
        EXPECT(0xc9, gbc.readMem(0xf0b1));
        // C9 000B
        gbc.setState(0x4c2e, 0x9080, 0x6bd0, 0xa51f, 0x1cd7, 0xf427, 0x0, 0x1);
        gbc.writeMem(0x4c2e, { 0xc9 });
        gbc.writeMem(0x9080, { 0xab, 0x27 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9082, gbc.sp());
        EXPECT(0x27ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x9080));
        EXPECT(0x27, gbc.readMem(0x9081));
        // C9 000C
        gbc.setState(0x6134, 0x6a5c, 0x1840, 0xa926, 0xb6ec, 0x2ba, 0x0, 0x0);
        gbc.writeMem(0x6134, { 0xc9 });
        gbc.writeMem(0x6a5c, { 0xd8, 0x29 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6a5e, gbc.sp());
        EXPECT(0x29d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 000D
        gbc.setState(0x8ff0, 0x8e30, 0x6b50, 0x5386, 0x4f88, 0x5470, 0x1, 0x0);
        gbc.writeMem(0x8e30, { 0x21, 0x22 });
        gbc.writeMem(0x8ff0, { 0xc9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8e32, gbc.sp());
        EXPECT(0x2221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8e30));
        EXPECT(0x22, gbc.readMem(0x8e31));
        EXPECT(0xc9, gbc.readMem(0x8ff0));
        // C9 000E
        gbc.setState(0xbf8a, 0x3fd1, 0xe340, 0xe22e, 0xd65d, 0xffb, 0x0, 0x1);
        gbc.writeMem(0x3fd1, { 0xd8, 0x73 });
        gbc.writeMem(0xbf8a, { 0xc9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3fd3, gbc.sp());
        EXPECT(0x73d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbf8a));
        // C9 000F
        gbc.setState(0x1f83, 0x4244, 0x15f0, 0x6d2b, 0x3cb7, 0xa775, 0x0, 0x1);
        gbc.writeMem(0x1f83, { 0xc9 });
        gbc.writeMem(0x4244, { 0x10, 0x87 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4246, gbc.sp());
        EXPECT(0x8710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0010
        gbc.setState(0x40bb, 0x87ca, 0xee00, 0x29a9, 0x728f, 0x42db, 0x0, 0x1);
        gbc.writeMem(0x40bb, { 0xc9 });
        gbc.writeMem(0x87ca, { 0x83, 0x1f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x87cc, gbc.sp());
        EXPECT(0x1f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x87ca));
        EXPECT(0x1f, gbc.readMem(0x87cb));
        // C9 0011
        gbc.setState(0x84ae, 0x3f1c, 0xb820, 0xfb2a, 0x5876, 0x34fe, 0x1, 0x0);
        gbc.writeMem(0x3f1c, { 0x1b, 0x95 });
        gbc.writeMem(0x84ae, { 0xc9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3f1e, gbc.sp());
        EXPECT(0x951b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x84ae));
        // C9 0012
        gbc.setState(0x8ca1, 0x5536, 0x3040, 0x5922, 0x3814, 0xd996, 0x0, 0x0);
        gbc.writeMem(0x5536, { 0x7a, 0x62 });
        gbc.writeMem(0x8ca1, { 0xc9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5538, gbc.sp());
        EXPECT(0x627a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8ca1));
        // C9 0013
        gbc.setState(0x2ce7, 0xbcb7, 0x96b0, 0xf4dd, 0x4050, 0x95, 0x1, 0x1);
        gbc.writeMem(0x2ce7, { 0xc9 });
        gbc.writeMem(0xbcb7, { 0x6a, 0x99 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbcb9, gbc.sp());
        EXPECT(0x996a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbcb7));
        EXPECT(0x99, gbc.readMem(0xbcb8));
        // C9 0014
        gbc.setState(0x161e, 0xe87b, 0x5870, 0xb9d6, 0x2586, 0xe6c3, 0x1, 0x1);
        gbc.writeMem(0x161e, { 0xc9 });
        gbc.writeMem(0xe87b, { 0xfc, 0xe9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe87d, gbc.sp());
        EXPECT(0xe9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xe87b));
        EXPECT(0xe9, gbc.readMem(0xe87c));
        // C9 0015
        gbc.setState(0x437e, 0xad4a, 0xad70, 0xb46, 0xb25c, 0x8018, 0x0, 0x0);
        gbc.writeMem(0x437e, { 0xc9 });
        gbc.writeMem(0xad4a, { 0xdc, 0xc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xad4c, gbc.sp());
        EXPECT(0xcdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xad4a));
        EXPECT(0xc, gbc.readMem(0xad4b));
        // C9 0016
        gbc.setState(0xc7a3, 0x153c, 0xf050, 0x3a46, 0xa7f1, 0xcf25, 0x1, 0x0);
        gbc.writeMem(0x153c, { 0x41, 0x5 });
        gbc.writeMem(0xc7a3, { 0xc9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x153e, gbc.sp());
        EXPECT(0x541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc7a3));
        // C9 0018
        gbc.setState(0x52dd, 0x383e, 0xf820, 0x783a, 0x41dd, 0x53d4, 0x0, 0x1);
        gbc.writeMem(0x383e, { 0x1a, 0x64 });
        gbc.writeMem(0x52dd, { 0xc9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3840, gbc.sp());
        EXPECT(0x641a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0019
        gbc.setState(0x2d08, 0xcfdc, 0x7e0, 0xc3e8, 0xe686, 0x8632, 0x0, 0x1);
        gbc.writeMem(0x2d08, { 0xc9 });
        gbc.writeMem(0xcfdc, { 0xc3, 0xde });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcfde, gbc.sp());
        EXPECT(0xdec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcfdc));
        EXPECT(0xde, gbc.readMem(0xcfdd));
        // C9 001A
        gbc.setState(0xb372, 0x6554, 0x4c10, 0xa490, 0x358d, 0xda89, 0x1, 0x0);
        gbc.writeMem(0x6554, { 0x59, 0x71 });
        gbc.writeMem(0xb372, { 0xc9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6556, gbc.sp());
        EXPECT(0x7159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb372));
        // C9 001B
        gbc.setState(0x9784, 0x809d, 0xdaa0, 0x3afc, 0x98ad, 0xe700, 0x0, 0x1);
        gbc.writeMem(0x809d, { 0x5f, 0xac });
        gbc.writeMem(0x9784, { 0xc9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x809f, gbc.sp());
        EXPECT(0xac5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x809d));
        EXPECT(0xac, gbc.readMem(0x809e));
        EXPECT(0xc9, gbc.readMem(0x9784));
        // C9 001C
        gbc.setState(0xbb82, 0x1aea, 0xfc50, 0xbd9a, 0x134a, 0x552d, 0x1, 0x1);
        gbc.writeMem(0x1aea, { 0x1e, 0x4c });
        gbc.writeMem(0xbb82, { 0xc9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1aec, gbc.sp());
        EXPECT(0x4c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbb82));
        // C9 001D
        gbc.setState(0xc0e, 0xe3b7, 0x7240, 0x9965, 0xc8c4, 0x5030, 0x0, 0x0);
        gbc.writeMem(0xc0e, { 0xc9 });
        gbc.writeMem(0xe3b7, { 0x78, 0x90 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe3b9, gbc.sp());
        EXPECT(0x9078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe3b7));
        EXPECT(0x90, gbc.readMem(0xe3b8));
        // C9 001E
        gbc.setState(0x95f8, 0xeadd, 0xa870, 0xdf0e, 0x4cab, 0x8ca, 0x1, 0x1);
        gbc.writeMem(0x95f8, { 0xc9 });
        gbc.writeMem(0xeadd, { 0xa7, 0x48 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xeadf, gbc.sp());
        EXPECT(0x48a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x95f8));
        EXPECT(0xa7, gbc.readMem(0xeadd));
        EXPECT(0x48, gbc.readMem(0xeade));
        // C9 001F
        gbc.setState(0x99a3, 0x110c, 0xbff0, 0xd9a9, 0x3383, 0x1547, 0x0, 0x1);
        gbc.writeMem(0x110c, { 0x2d, 0x6b });
        gbc.writeMem(0x99a3, { 0xc9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x110e, gbc.sp());
        EXPECT(0x6b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x99a3));
        // C9 0020
        gbc.setState(0x5b9d, 0xcbc, 0x5f0, 0xcab3, 0xd27a, 0x2733, 0x1, 0x1);
        gbc.writeMem(0xcbc, { 0xaa, 0x36 });
        gbc.writeMem(0x5b9d, { 0xc9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcbe, gbc.sp());
        EXPECT(0x36aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0021
        gbc.setState(0x83ec, 0xab48, 0x9720, 0x8f27, 0xbc91, 0x6ef8, 0x0, 0x1);
        gbc.writeMem(0x83ec, { 0xc9 });
        gbc.writeMem(0xab48, { 0xef, 0x42 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xab4a, gbc.sp());
        EXPECT(0x42ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x83ec));
        EXPECT(0xef, gbc.readMem(0xab48));
        EXPECT(0x42, gbc.readMem(0xab49));
        // C9 0022
        gbc.setState(0xe743, 0xc1ed, 0xc6b0, 0x1c4e, 0xfeab, 0x156f, 0x1, 0x1);
        gbc.writeMem(0xc1ed, { 0xc5, 0x75 });
        gbc.writeMem(0xe743, { 0xc9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc1ef, gbc.sp());
        EXPECT(0x75c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xc1ed));
        EXPECT(0x75, gbc.readMem(0xc1ee));
        EXPECT(0xc9, gbc.readMem(0xe743));
        // C9 0023
        gbc.setState(0x429f, 0x574e, 0x4080, 0x1e36, 0xe090, 0xa6d9, 0x0, 0x1);
        gbc.writeMem(0x429f, { 0xc9 });
        gbc.writeMem(0x574e, { 0x77, 0x88 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5750, gbc.sp());
        EXPECT(0x8877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0024
        gbc.setState(0x7ce6, 0x4672, 0x52e0, 0x8d8a, 0x3ab9, 0xafdf, 0x0, 0x0);
        gbc.writeMem(0x4672, { 0xd6, 0x44 });
        gbc.writeMem(0x7ce6, { 0xc9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4674, gbc.sp());
        EXPECT(0x44d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0025
        gbc.setState(0xca96, 0x83a3, 0x3410, 0xd7e2, 0x77cc, 0x76ff, 0x0, 0x1);
        gbc.writeMem(0x83a3, { 0x31, 0x98 });
        gbc.writeMem(0xca96, { 0xc9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x83a5, gbc.sp());
        EXPECT(0x9831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x83a3));
        EXPECT(0x98, gbc.readMem(0x83a4));
        EXPECT(0xc9, gbc.readMem(0xca96));
        // C9 0026
        gbc.setState(0x3b16, 0xf5e7, 0xf180, 0x8454, 0xd212, 0xa7df, 0x0, 0x1);
        gbc.writeMem(0x3b16, { 0xc9 });
        gbc.writeMem(0xf5e7, { 0xce, 0x7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf5e9, gbc.sp());
        EXPECT(0x7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xf5e7));
        EXPECT(0x7, gbc.readMem(0xf5e8));
        // C9 0027
        gbc.setState(0x4af9, 0xe79e, 0x9320, 0x92dc, 0x807e, 0x6024, 0x1, 0x1);
        gbc.writeMem(0x4af9, { 0xc9 });
        gbc.writeMem(0xe79e, { 0x6c, 0x5e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe7a0, gbc.sp());
        EXPECT(0x5e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe79e));
        EXPECT(0x5e, gbc.readMem(0xe79f));
        // C9 0028
        gbc.setState(0x8f39, 0x790f, 0x4390, 0x6030, 0x8cb0, 0x3f4f, 0x1, 0x1);
        gbc.writeMem(0x790f, { 0x6e, 0x15 });
        gbc.writeMem(0x8f39, { 0xc9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7911, gbc.sp());
        EXPECT(0x156e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8f39));
        // C9 0029
        gbc.setState(0x8323, 0x24f6, 0x6a10, 0x9f1c, 0xdaee, 0x47f2, 0x1, 0x1);
        gbc.writeMem(0x24f6, { 0x49, 0x2a });
        gbc.writeMem(0x8323, { 0xc9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x24f8, gbc.sp());
        EXPECT(0x2a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8323));
        // C9 002A
        gbc.setState(0x90e, 0x7b9a, 0x6700, 0x1024, 0x879f, 0xdb49, 0x1, 0x0);
        gbc.writeMem(0x90e, { 0xc9 });
        gbc.writeMem(0x7b9a, { 0x14, 0x15 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7b9c, gbc.sp());
        EXPECT(0x1514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 002B
        gbc.setState(0xc545, 0xb1d7, 0xe320, 0x84c5, 0x4385, 0xe969, 0x1, 0x0);
        gbc.writeMem(0xb1d7, { 0xe1, 0xbf });
        gbc.writeMem(0xc545, { 0xc9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb1d9, gbc.sp());
        EXPECT(0xbfe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb1d7));
        EXPECT(0xbf, gbc.readMem(0xb1d8));
        EXPECT(0xc9, gbc.readMem(0xc545));
        // C9 002C
        gbc.setState(0x91a0, 0x96c8, 0x6670, 0x4324, 0x5b5a, 0xf196, 0x0, 0x0);
        gbc.writeMem(0x91a0, { 0xc9 });
        gbc.writeMem(0x96c8, { 0x8e, 0xa3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x96ca, gbc.sp());
        EXPECT(0xa38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x91a0));
        EXPECT(0x8e, gbc.readMem(0x96c8));
        EXPECT(0xa3, gbc.readMem(0x96c9));
        // C9 002D
        gbc.setState(0x2dce, 0xa6b0, 0xcf70, 0x1f8b, 0xc542, 0x6452, 0x0, 0x1);
        gbc.writeMem(0x2dce, { 0xc9 });
        gbc.writeMem(0xa6b0, { 0xb2, 0x15 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa6b2, gbc.sp());
        EXPECT(0x15b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa6b0));
        EXPECT(0x15, gbc.readMem(0xa6b1));
        // C9 002E
        gbc.setState(0x1a02, 0x44ce, 0x3ee0, 0x43f8, 0x4219, 0xe1e7, 0x0, 0x1);
        gbc.writeMem(0x1a02, { 0xc9 });
        gbc.writeMem(0x44ce, { 0x84, 0x2a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x44d0, gbc.sp());
        EXPECT(0x2a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 002F
        gbc.setState(0x2a32, 0x3c91, 0x3ce0, 0x9dda, 0x6f9c, 0x1577, 0x1, 0x1);
        gbc.writeMem(0x2a32, { 0xc9 });
        gbc.writeMem(0x3c91, { 0xbf, 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3c93, gbc.sp());
        EXPECT(0xcbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0030
        gbc.setState(0xa7c, 0x921e, 0x6280, 0x65e7, 0x7e9, 0xdee7, 0x0, 0x0);
        gbc.writeMem(0xa7c, { 0xc9 });
        gbc.writeMem(0x921e, { 0x0, 0xe8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9220, gbc.sp());
        EXPECT(0xe800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x921e));
        EXPECT(0xe8, gbc.readMem(0x921f));
        // C9 0031
        gbc.setState(0x5035, 0x148, 0x6d90, 0x1c22, 0x9d5b, 0x9d1c, 0x1, 0x1);
        gbc.writeMem(0x148, { 0x4d, 0x14 });
        gbc.writeMem(0x5035, { 0xc9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x14a, gbc.sp());
        EXPECT(0x144d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0032
        gbc.setState(0x2f95, 0x4898, 0x64d0, 0xf028, 0xc1e5, 0x706f, 0x1, 0x1);
        gbc.writeMem(0x2f95, { 0xc9 });
        gbc.writeMem(0x4898, { 0xa9, 0xc8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x489a, gbc.sp());
        EXPECT(0xc8a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0033
        gbc.setState(0x3419, 0x82cf, 0xea30, 0xa934, 0xaeb8, 0x65d2, 0x1, 0x0);
        gbc.writeMem(0x3419, { 0xc9 });
        gbc.writeMem(0x82cf, { 0x1f, 0x33 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x82d1, gbc.sp());
        EXPECT(0x331f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x82cf));
        EXPECT(0x33, gbc.readMem(0x82d0));
        // C9 0034
        gbc.setState(0x1cea, 0x13c1, 0x27e0, 0x9caa, 0xef0a, 0x76ce, 0x0, 0x0);
        gbc.writeMem(0x13c1, { 0xe9, 0x5f });
        gbc.writeMem(0x1cea, { 0xc9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x13c3, gbc.sp());
        EXPECT(0x5fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0035
        gbc.setState(0x3102, 0x9345, 0x8b70, 0xd91, 0x5002, 0x9150, 0x0, 0x0);
        gbc.writeMem(0x3102, { 0xc9 });
        gbc.writeMem(0x9345, { 0x4a, 0x3e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9347, gbc.sp());
        EXPECT(0x3e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9345));
        EXPECT(0x3e, gbc.readMem(0x9346));
        // C9 0036
        gbc.setState(0x199c, 0x4d31, 0xe2d0, 0x633f, 0x4409, 0x915e, 0x0, 0x0);
        gbc.writeMem(0x199c, { 0xc9 });
        gbc.writeMem(0x4d31, { 0xf8, 0xaa });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4d33, gbc.sp());
        EXPECT(0xaaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0037
        gbc.setState(0x993f, 0xc51b, 0x8300, 0x2e59, 0x7955, 0xde45, 0x0, 0x1);
        gbc.writeMem(0x993f, { 0xc9 });
        gbc.writeMem(0xc51b, { 0xb3, 0x5f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc51d, gbc.sp());
        EXPECT(0x5fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x993f));
        EXPECT(0xb3, gbc.readMem(0xc51b));
        EXPECT(0x5f, gbc.readMem(0xc51c));
        // C9 0038
        gbc.setState(0xdbc9, 0x10d9, 0xaf80, 0x57c, 0x7899, 0x5037, 0x0, 0x0);
        gbc.writeMem(0x10d9, { 0xcc, 0x61 });
        gbc.writeMem(0xdbc9, { 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x10db, gbc.sp());
        EXPECT(0x61cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdbc9));
        // C9 0039
        gbc.setState(0x518f, 0x7c55, 0x4370, 0x74bc, 0x29cc, 0x854f, 0x1, 0x1);
        gbc.writeMem(0x518f, { 0xc9 });
        gbc.writeMem(0x7c55, { 0x62, 0x70 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7c57, gbc.sp());
        EXPECT(0x7062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 003A
        gbc.setState(0x25e0, 0x641d, 0xd3a0, 0xfd3, 0x669e, 0x3a48, 0x0, 0x1);
        gbc.writeMem(0x25e0, { 0xc9 });
        gbc.writeMem(0x641d, { 0xf7, 0x27 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x641f, gbc.sp());
        EXPECT(0x27f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 003B
        gbc.setState(0x1b06, 0xb25f, 0xe730, 0x2e32, 0x65b1, 0x6010, 0x0, 0x1);
        gbc.writeMem(0x1b06, { 0xc9 });
        gbc.writeMem(0xb25f, { 0xd3, 0xe3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb261, gbc.sp());
        EXPECT(0xe3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xb25f));
        EXPECT(0xe3, gbc.readMem(0xb260));
        // C9 003C
        gbc.setState(0x55cd, 0x2f63, 0x2cc0, 0x2954, 0x4425, 0x172c, 0x1, 0x1);
        gbc.writeMem(0x2f63, { 0x3b, 0xce });
        gbc.writeMem(0x55cd, { 0xc9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2f65, gbc.sp());
        EXPECT(0xce3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 003D
        gbc.setState(0x2178, 0xa149, 0x410, 0x35f2, 0x2452, 0x80a6, 0x1, 0x1);
        gbc.writeMem(0x2178, { 0xc9 });
        gbc.writeMem(0xa149, { 0x3b, 0xe1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa14b, gbc.sp());
        EXPECT(0xe13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa149));
        EXPECT(0xe1, gbc.readMem(0xa14a));
        // C9 003E
        gbc.setState(0x4be8, 0xdf85, 0xf1d0, 0xc956, 0x4d88, 0xc152, 0x0, 0x0);
        gbc.writeMem(0x4be8, { 0xc9 });
        gbc.writeMem(0xdf85, { 0xee, 0x8b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdf87, gbc.sp());
        EXPECT(0x8bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xdf85));
        EXPECT(0x8b, gbc.readMem(0xdf86));
        // C9 003F
        gbc.setState(0xa29c, 0x4f7b, 0xdc0, 0x1f5, 0xd909, 0x9944, 0x0, 0x1);
        gbc.writeMem(0x4f7b, { 0xe7, 0x78 });
        gbc.writeMem(0xa29c, { 0xc9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4f7d, gbc.sp());
        EXPECT(0x78e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa29c));
        // C9 0040
        gbc.setState(0x7946, 0x1af4, 0xa270, 0x416b, 0xf24b, 0xd6ec, 0x1, 0x0);
        gbc.writeMem(0x1af4, { 0x95, 0xc7 });
        gbc.writeMem(0x7946, { 0xc9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1af6, gbc.sp());
        EXPECT(0xc795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0041
        gbc.setState(0x1717, 0x1bab, 0xacd0, 0xabe6, 0xc443, 0x1d8e, 0x1, 0x0);
        gbc.writeMem(0x1717, { 0xc9 });
        gbc.writeMem(0x1bab, { 0x1b, 0x27 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1bad, gbc.sp());
        EXPECT(0x271b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0042
        gbc.setState(0x929e, 0x554a, 0x40f0, 0xd92e, 0xfe69, 0x6e60, 0x0, 0x1);
        gbc.writeMem(0x554a, { 0xa1, 0x54 });
        gbc.writeMem(0x929e, { 0xc9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x554c, gbc.sp());
        EXPECT(0x54a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x929e));
        // C9 0044
        gbc.setState(0x81b1, 0x9e5e, 0x7130, 0x1279, 0x38af, 0x223b, 0x0, 0x1);
        gbc.writeMem(0x81b1, { 0xc9 });
        gbc.writeMem(0x9e5e, { 0x9, 0xa4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9e60, gbc.sp());
        EXPECT(0xa409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x81b1));
        EXPECT(0x9, gbc.readMem(0x9e5e));
        EXPECT(0xa4, gbc.readMem(0x9e5f));
        // C9 0045
        gbc.setState(0x5406, 0x2ea6, 0x1780, 0x49d5, 0xee72, 0x3d94, 0x1, 0x1);
        gbc.writeMem(0x2ea6, { 0x14, 0x15 });
        gbc.writeMem(0x5406, { 0xc9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2ea8, gbc.sp());
        EXPECT(0x1514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0046
        gbc.setState(0x3ac, 0xf56b, 0xde0, 0x2f1, 0x7427, 0x4217, 0x1, 0x1);
        gbc.writeMem(0x3ac, { 0xc9 });
        gbc.writeMem(0xf56b, { 0x2d, 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf56d, gbc.sp());
        EXPECT(0x942d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xf56b));
        EXPECT(0x94, gbc.readMem(0xf56c));
        // C9 0047
        gbc.setState(0x3ac5, 0x9b4b, 0x9400, 0xdd45, 0xe601, 0xed83, 0x1, 0x1);
        gbc.writeMem(0x3ac5, { 0xc9 });
        gbc.writeMem(0x9b4b, { 0x88, 0xc4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9b4d, gbc.sp());
        EXPECT(0xc488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9b4b));
        EXPECT(0xc4, gbc.readMem(0x9b4c));
        // C9 0048
        gbc.setState(0xc467, 0x7080, 0x2c20, 0x9da3, 0x555b, 0x4d61, 0x1, 0x0);
        gbc.writeMem(0x7080, { 0xca, 0x1c });
        gbc.writeMem(0xc467, { 0xc9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7082, gbc.sp());
        EXPECT(0x1cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc467));
        // C9 0049
        gbc.setState(0x21f1, 0xbdf7, 0xf5f0, 0xe1c6, 0x3773, 0x8d83, 0x0, 0x0);
        gbc.writeMem(0x21f1, { 0xc9 });
        gbc.writeMem(0xbdf7, { 0xc8, 0x29 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbdf9, gbc.sp());
        EXPECT(0x29c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbdf7));
        EXPECT(0x29, gbc.readMem(0xbdf8));
        // C9 004A
        gbc.setState(0xc046, 0xb3f9, 0xbb20, 0x3e7a, 0xb4a, 0x764e, 0x1, 0x0);
        gbc.writeMem(0xb3f9, { 0x21, 0xe6 });
        gbc.writeMem(0xc046, { 0xc9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb3fb, gbc.sp());
        EXPECT(0xe621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb3f9));
        EXPECT(0xe6, gbc.readMem(0xb3fa));
        EXPECT(0xc9, gbc.readMem(0xc046));
        // C9 004B
        gbc.setState(0xc6ff, 0x1358, 0x910, 0xc741, 0x74ea, 0x3741, 0x1, 0x0);
        gbc.writeMem(0x1358, { 0x36, 0x87 });
        gbc.writeMem(0xc6ff, { 0xc9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x135a, gbc.sp());
        EXPECT(0x8736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc6ff));
        // C9 004C
        gbc.setState(0xc03a, 0xa92e, 0xf0e0, 0x205d, 0xb191, 0x8676, 0x1, 0x0);
        gbc.writeMem(0xa92e, { 0xda, 0x99 });
        gbc.writeMem(0xc03a, { 0xc9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa930, gbc.sp());
        EXPECT(0x99da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa92e));
        EXPECT(0x99, gbc.readMem(0xa92f));
        EXPECT(0xc9, gbc.readMem(0xc03a));
        // C9 004D
        gbc.setState(0x19c0, 0x3129, 0x7a10, 0xf849, 0x3f91, 0x2c8a, 0x1, 0x1);
        gbc.writeMem(0x19c0, { 0xc9 });
        gbc.writeMem(0x3129, { 0x91, 0x2d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x312b, gbc.sp());
        EXPECT(0x2d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 004E
        gbc.setState(0x862d, 0x943d, 0x1c00, 0x1f7a, 0x891d, 0xd8a4, 0x0, 0x1);
        gbc.writeMem(0x862d, { 0xc9 });
        gbc.writeMem(0x943d, { 0x26, 0xa2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x943f, gbc.sp());
        EXPECT(0xa226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x862d));
        EXPECT(0x26, gbc.readMem(0x943d));
        EXPECT(0xa2, gbc.readMem(0x943e));
        // C9 004F
        gbc.setState(0x49a8, 0x4c87, 0x3b90, 0xb39e, 0x127d, 0x7cf9, 0x0, 0x1);
        gbc.writeMem(0x49a8, { 0xc9 });
        gbc.writeMem(0x4c87, { 0x85, 0x33 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4c89, gbc.sp());
        EXPECT(0x3385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0050
        gbc.setState(0x7618, 0xe56e, 0xf520, 0x1e05, 0xcbfb, 0xf3f3, 0x1, 0x1);
        gbc.writeMem(0x7618, { 0xc9 });
        gbc.writeMem(0xe56e, { 0x70, 0x1f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe570, gbc.sp());
        EXPECT(0x1f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xe56e));
        EXPECT(0x1f, gbc.readMem(0xe56f));
        // C9 0051
        gbc.setState(0x7421, 0x9dfb, 0xe460, 0xba9e, 0xd157, 0x5ef7, 0x1, 0x0);
        gbc.writeMem(0x7421, { 0xc9 });
        gbc.writeMem(0x9dfb, { 0xce, 0xad });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9dfd, gbc.sp());
        EXPECT(0xadce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x9dfb));
        EXPECT(0xad, gbc.readMem(0x9dfc));
        // C9 0052
        gbc.setState(0x1013, 0x8512, 0x13a0, 0xc4fb, 0xbefa, 0x2b1b, 0x1, 0x1);
        gbc.writeMem(0x1013, { 0xc9 });
        gbc.writeMem(0x8512, { 0x6a, 0x59 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8514, gbc.sp());
        EXPECT(0x596a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8512));
        EXPECT(0x59, gbc.readMem(0x8513));
        // C9 0053
        gbc.setState(0x7803, 0xbc40, 0x7e20, 0x4232, 0xd7ef, 0x657b, 0x1, 0x1);
        gbc.writeMem(0x7803, { 0xc9 });
        gbc.writeMem(0xbc40, { 0xef, 0x69 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbc42, gbc.sp());
        EXPECT(0x69ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xbc40));
        EXPECT(0x69, gbc.readMem(0xbc41));
        // C9 0054
        gbc.setState(0x4657, 0x932c, 0x2410, 0x150e, 0xe71b, 0x125f, 0x1, 0x0);
        gbc.writeMem(0x4657, { 0xc9 });
        gbc.writeMem(0x932c, { 0xf6, 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x932e, gbc.sp());
        EXPECT(0x2ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x932c));
        EXPECT(0x2f, gbc.readMem(0x932d));
        // C9 0055
        gbc.setState(0x3a8f, 0x1464, 0x8410, 0x84da, 0x77d0, 0xd3e4, 0x0, 0x0);
        gbc.writeMem(0x1464, { 0xa9, 0x41 });
        gbc.writeMem(0x3a8f, { 0xc9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1466, gbc.sp());
        EXPECT(0x41a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0056
        gbc.setState(0xe7a7, 0x2fcc, 0xbaa0, 0xfd9e, 0x79df, 0xae30, 0x1, 0x1);
        gbc.writeMem(0x2fcc, { 0xc0, 0x8d });
        gbc.writeMem(0xe7a7, { 0xc9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2fce, gbc.sp());
        EXPECT(0x8dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe7a7));
        // C9 0057
        gbc.setState(0xc4d0, 0x3fb2, 0x5420, 0x6a4, 0x74ef, 0x3b41, 0x0, 0x1);
        gbc.writeMem(0x3fb2, { 0x2, 0x77 });
        gbc.writeMem(0xc4d0, { 0xc9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3fb4, gbc.sp());
        EXPECT(0x7702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc4d0));
        // C9 0058
        gbc.setState(0x6bdc, 0x7ef7, 0xd7a0, 0x3ac8, 0xb23d, 0x756a, 0x0, 0x0);
        gbc.writeMem(0x6bdc, { 0xc9 });
        gbc.writeMem(0x7ef7, { 0x95, 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7ef9, gbc.sp());
        EXPECT(0x4895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0059
        gbc.setState(0xef0c, 0x1102, 0x4860, 0xc68, 0x863e, 0xbb97, 0x0, 0x0);
        gbc.writeMem(0x1102, { 0x5c, 0x4c });
        gbc.writeMem(0xef0c, { 0xc9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1104, gbc.sp());
        EXPECT(0x4c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xef0c));
        // C9 005A
        gbc.setState(0x3182, 0x490c, 0x2270, 0x18dc, 0x4555, 0xab0, 0x1, 0x0);
        gbc.writeMem(0x3182, { 0xc9 });
        gbc.writeMem(0x490c, { 0x55, 0xbb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x490e, gbc.sp());
        EXPECT(0xbb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 005B
        gbc.setState(0x70b8, 0xe0f4, 0xa5c0, 0xa918, 0xacd3, 0x149, 0x0, 0x0);
        gbc.writeMem(0x70b8, { 0xc9 });
        gbc.writeMem(0xe0f4, { 0xfc, 0xff });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe0f6, gbc.sp());
        EXPECT(0xfffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xe0f4));
        EXPECT(0xff, gbc.readMem(0xe0f5));
        // C9 005C
        gbc.setState(0x5e00, 0x5ae6, 0xf650, 0x57b0, 0x475d, 0xec00, 0x0, 0x1);
        gbc.writeMem(0x5ae6, { 0x5, 0xb0 });
        gbc.writeMem(0x5e00, { 0xc9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5ae8, gbc.sp());
        EXPECT(0xb005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 005D
        gbc.setState(0x1393, 0x4214, 0xd430, 0xa81b, 0x5767, 0x439c, 0x1, 0x1);
        gbc.writeMem(0x1393, { 0xc9 });
        gbc.writeMem(0x4214, { 0x42, 0xb1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4216, gbc.sp());
        EXPECT(0xb142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 005E
        gbc.setState(0x5fb, 0xf903, 0xd980, 0x125c, 0x363f, 0xba27, 0x0, 0x1);
        gbc.writeMem(0x5fb, { 0xc9 });
        gbc.writeMem(0xf903, { 0x5, 0x7d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf905, gbc.sp());
        EXPECT(0x7d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xf903));
        EXPECT(0x7d, gbc.readMem(0xf904));
        // C9 005F
        gbc.setState(0xce4d, 0x42a3, 0xfe50, 0x6dd3, 0x159, 0x5738, 0x0, 0x0);
        gbc.writeMem(0x42a3, { 0x97, 0xe7 });
        gbc.writeMem(0xce4d, { 0xc9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x42a5, gbc.sp());
        EXPECT(0xe797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xce4d));
        // C9 0060
        gbc.setState(0x5a4f, 0x8c7d, 0x5950, 0x3361, 0xd3c1, 0x15b3, 0x0, 0x0);
        gbc.writeMem(0x5a4f, { 0xc9 });
        gbc.writeMem(0x8c7d, { 0xe0, 0xaf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8c7f, gbc.sp());
        EXPECT(0xafe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8c7d));
        EXPECT(0xaf, gbc.readMem(0x8c7e));
        // C9 0061
        gbc.setState(0x31a0, 0x9b7a, 0x6d50, 0x1963, 0x15f7, 0x39f4, 0x0, 0x1);
        gbc.writeMem(0x31a0, { 0xc9 });
        gbc.writeMem(0x9b7a, { 0xa0, 0xda });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9b7c, gbc.sp());
        EXPECT(0xdaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9b7a));
        EXPECT(0xda, gbc.readMem(0x9b7b));
        // C9 0062
        gbc.setState(0xaa35, 0x866a, 0xea60, 0xebef, 0x656d, 0x33cb, 0x0, 0x0);
        gbc.writeMem(0x866a, { 0xee, 0xe });
        gbc.writeMem(0xaa35, { 0xc9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x866c, gbc.sp());
        EXPECT(0xeee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x866a));
        EXPECT(0xe, gbc.readMem(0x866b));
        EXPECT(0xc9, gbc.readMem(0xaa35));
        // C9 0063
        gbc.setState(0xa24d, 0xd464, 0x5ea0, 0x1ee8, 0xedde, 0x6406, 0x0, 0x0);
        gbc.writeMem(0xa24d, { 0xc9 });
        gbc.writeMem(0xd464, { 0xf7, 0x22 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd466, gbc.sp());
        EXPECT(0x22f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa24d));
        EXPECT(0xf7, gbc.readMem(0xd464));
        EXPECT(0x22, gbc.readMem(0xd465));
        // C9 0064
        gbc.setState(0x90fd, 0xdc24, 0xfa0, 0x8750, 0xc03f, 0xdce8, 0x0, 0x0);
        gbc.writeMem(0x90fd, { 0xc9 });
        gbc.writeMem(0xdc24, { 0x48, 0x58 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdc26, gbc.sp());
        EXPECT(0x5848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x90fd));
        EXPECT(0x48, gbc.readMem(0xdc24));
        EXPECT(0x58, gbc.readMem(0xdc25));
        // C9 0065
        gbc.setState(0x3af2, 0x49f5, 0x680, 0x313d, 0xf7e8, 0x37e3, 0x1, 0x0);
        gbc.writeMem(0x3af2, { 0xc9 });
        gbc.writeMem(0x49f5, { 0xf1, 0x77 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x49f7, gbc.sp());
        EXPECT(0x77f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0066
        gbc.setState(0xb0a1, 0xfde1, 0x9dc0, 0xa58b, 0x5322, 0xb329, 0x0, 0x1);
        gbc.writeMem(0xb0a1, { 0xc9 });
        gbc.writeMem(0xfde1, { 0xa0, 0xf5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfde3, gbc.sp());
        EXPECT(0xf5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb0a1));
        EXPECT(0xa0, gbc.readMem(0xfde1));
        EXPECT(0xf5, gbc.readMem(0xfde2));
        // C9 0068
        gbc.setState(0x920c, 0x61d5, 0xd760, 0x62b4, 0x6e39, 0xe318, 0x0, 0x0);
        gbc.writeMem(0x61d5, { 0xd4, 0x9c });
        gbc.writeMem(0x920c, { 0xc9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0x9cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x920c));
        // C9 0069
        gbc.setState(0xdb9d, 0x5324, 0xe220, 0xa354, 0xd74b, 0x891, 0x0, 0x0);
        gbc.writeMem(0x5324, { 0x2d, 0x85 });
        gbc.writeMem(0xdb9d, { 0xc9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5326, gbc.sp());
        EXPECT(0x852d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdb9d));
        // C9 006A
        gbc.setState(0x61e, 0x96d4, 0x1820, 0x9629, 0x1c45, 0x535d, 0x0, 0x0);
        gbc.writeMem(0x61e, { 0xc9 });
        gbc.writeMem(0x96d4, { 0x9, 0x75 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x96d6, gbc.sp());
        EXPECT(0x7509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x96d4));
        EXPECT(0x75, gbc.readMem(0x96d5));
        // C9 006B
        gbc.setState(0x9aa9, 0x3a28, 0xec80, 0x5149, 0x674b, 0xcc04, 0x0, 0x0);
        gbc.writeMem(0x3a28, { 0xa3, 0xd9 });
        gbc.writeMem(0x9aa9, { 0xc9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3a2a, gbc.sp());
        EXPECT(0xd9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9aa9));
        // C9 006C
        gbc.setState(0x475d, 0xc630, 0x5320, 0x2fbb, 0x9ed2, 0x43b, 0x1, 0x1);
        gbc.writeMem(0x475d, { 0xc9 });
        gbc.writeMem(0xc630, { 0x7b, 0x64 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc632, gbc.sp());
        EXPECT(0x647b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc630));
        EXPECT(0x64, gbc.readMem(0xc631));
        // C9 006E
        gbc.setState(0x617d, 0x5a4d, 0xee0, 0x93a, 0x12f0, 0xb2b8, 0x0, 0x0);
        gbc.writeMem(0x5a4d, { 0x8b, 0xf0 });
        gbc.writeMem(0x617d, { 0xc9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5a4f, gbc.sp());
        EXPECT(0xf08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 006F
        gbc.setState(0xa341, 0x5754, 0xed10, 0xe418, 0xc270, 0xf74d, 0x1, 0x0);
        gbc.writeMem(0x5754, { 0x73, 0x6d });
        gbc.writeMem(0xa341, { 0xc9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5756, gbc.sp());
        EXPECT(0x6d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa341));
        // C9 0070
        gbc.setState(0x8257, 0x27b2, 0x25e0, 0x6fb5, 0x90b4, 0x86fd, 0x0, 0x0);
        gbc.writeMem(0x27b2, { 0x61, 0xc4 });
        gbc.writeMem(0x8257, { 0xc9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x27b4, gbc.sp());
        EXPECT(0xc461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8257));
        // C9 0073
        gbc.setState(0xcc25, 0xb0d, 0xc760, 0xcb7a, 0xd46a, 0x5f0b, 0x1, 0x1);
        gbc.writeMem(0xb0d, { 0x12, 0xc });
        gbc.writeMem(0xcc25, { 0xc9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb0f, gbc.sp());
        EXPECT(0xc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xcc25));
        // C9 0074
        gbc.setState(0x1673, 0xf503, 0xaa0, 0xaf8d, 0xdc88, 0xd7, 0x1, 0x0);
        gbc.writeMem(0x1673, { 0xc9 });
        gbc.writeMem(0xf503, { 0xd9, 0xb3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf505, gbc.sp());
        EXPECT(0xb3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xf503));
        EXPECT(0xb3, gbc.readMem(0xf504));
        // C9 0075
        gbc.setState(0xe750, 0xda3e, 0xfd0, 0x2507, 0x2909, 0x2cad, 0x1, 0x0);
        gbc.writeMem(0xda3e, { 0x90, 0x33 });
        gbc.writeMem(0xe750, { 0xc9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xda40, gbc.sp());
        EXPECT(0x3390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xda3e));
        EXPECT(0x33, gbc.readMem(0xda3f));
        EXPECT(0xc9, gbc.readMem(0xe750));
        // C9 0076
        gbc.setState(0x911e, 0x4198, 0xd230, 0x44d7, 0xe470, 0xf792, 0x1, 0x0);
        gbc.writeMem(0x4198, { 0xcf, 0xe });
        gbc.writeMem(0x911e, { 0xc9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x419a, gbc.sp());
        EXPECT(0xecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x911e));
        // C9 0077
        gbc.setState(0xcbfd, 0x2c30, 0xebc0, 0xe2d2, 0x3e52, 0xf4c2, 0x0, 0x0);
        gbc.writeMem(0x2c30, { 0x49, 0xaf });
        gbc.writeMem(0xcbfd, { 0xc9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2c32, gbc.sp());
        EXPECT(0xaf49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xcbfd));
        // C9 0079
        gbc.setState(0x39ff, 0x2df0, 0x16c0, 0xc4af, 0xd0f5, 0x96c0, 0x1, 0x0);
        gbc.writeMem(0x2df0, { 0x13, 0x9f });
        gbc.writeMem(0x39ff, { 0xc9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2df2, gbc.sp());
        EXPECT(0x9f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 007A
        gbc.setState(0x7b6f, 0x3235, 0x6c50, 0x36a2, 0x8627, 0xd361, 0x1, 0x0);
        gbc.writeMem(0x3235, { 0xfb, 0xdb });
        gbc.writeMem(0x7b6f, { 0xc9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3237, gbc.sp());
        EXPECT(0xdbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 007B
        gbc.setState(0x7415, 0x64b2, 0x5050, 0x8630, 0xc0d7, 0x4961, 0x1, 0x1);
        gbc.writeMem(0x64b2, { 0xae, 0x83 });
        gbc.writeMem(0x7415, { 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x64b4, gbc.sp());
        EXPECT(0x83ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 007C
        gbc.setState(0x95dd, 0xca58, 0xee10, 0x553d, 0x73c2, 0xb72d, 0x1, 0x0);
        gbc.writeMem(0x95dd, { 0xc9 });
        gbc.writeMem(0xca58, { 0xa1, 0xa3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xca5a, gbc.sp());
        EXPECT(0xa3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x95dd));
        EXPECT(0xa1, gbc.readMem(0xca58));
        EXPECT(0xa3, gbc.readMem(0xca59));
        // C9 007D
        gbc.setState(0xead6, 0xdeef, 0x9590, 0x2339, 0x3a4f, 0x8b6f, 0x1, 0x0);
        gbc.writeMem(0xdeef, { 0xc1, 0x6b });
        gbc.writeMem(0xead6, { 0xc9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdef1, gbc.sp());
        EXPECT(0x6bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdeef));
        EXPECT(0x6b, gbc.readMem(0xdef0));
        EXPECT(0xc9, gbc.readMem(0xead6));
        // C9 007E
        gbc.setState(0x4b91, 0x77d6, 0xb000, 0xfd78, 0xb012, 0x337e, 0x1, 0x1);
        gbc.writeMem(0x4b91, { 0xc9 });
        gbc.writeMem(0x77d6, { 0x83, 0xa5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x77d8, gbc.sp());
        EXPECT(0xa583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 007F
        gbc.setState(0xadd7, 0xa3fb, 0x56b0, 0xfebf, 0x7466, 0xd42d, 0x1, 0x0);
        gbc.writeMem(0xa3fb, { 0x7e, 0x86 });
        gbc.writeMem(0xadd7, { 0xc9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa3fd, gbc.sp());
        EXPECT(0x867e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa3fb));
        EXPECT(0x86, gbc.readMem(0xa3fc));
        EXPECT(0xc9, gbc.readMem(0xadd7));
        // C9 0080
        gbc.setState(0xc838, 0x2d6c, 0x430, 0x33a, 0xe5af, 0xd9bd, 0x1, 0x1);
        gbc.writeMem(0x2d6c, { 0xb3, 0x21 });
        gbc.writeMem(0xc838, { 0xc9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2d6e, gbc.sp());
        EXPECT(0x21b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc838));
        // C9 0081
        gbc.setState(0x1ccb, 0x2bd8, 0x9f60, 0x30cc, 0xbf0e, 0xa25e, 0x0, 0x1);
        gbc.writeMem(0x1ccb, { 0xc9 });
        gbc.writeMem(0x2bd8, { 0x5, 0x16 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2bda, gbc.sp());
        EXPECT(0x1605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0082
        gbc.setState(0xab46, 0x4abd, 0x8df0, 0xf702, 0x34ee, 0x96ff, 0x1, 0x0);
        gbc.writeMem(0x4abd, { 0x62, 0x9b });
        gbc.writeMem(0xab46, { 0xc9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4abf, gbc.sp());
        EXPECT(0x9b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xab46));
        // C9 0083
        gbc.setState(0xa5d2, 0x1176, 0x50c0, 0x2941, 0xb3f1, 0x7bcd, 0x0, 0x1);
        gbc.writeMem(0x1176, { 0xf5, 0x57 });
        gbc.writeMem(0xa5d2, { 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1178, gbc.sp());
        EXPECT(0x57f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa5d2));
        // C9 0084
        gbc.setState(0x1240, 0xe888, 0x96d0, 0xaadb, 0xee6d, 0x1399, 0x1, 0x0);
        gbc.writeMem(0x1240, { 0xc9 });
        gbc.writeMem(0xe888, { 0xbd, 0x31 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe88a, gbc.sp());
        EXPECT(0x31bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe888));
        EXPECT(0x31, gbc.readMem(0xe889));
        // C9 0085
        gbc.setState(0x390b, 0xc30a, 0x4d0, 0x27b6, 0xf552, 0xc96f, 0x0, 0x0);
        gbc.writeMem(0x390b, { 0xc9 });
        gbc.writeMem(0xc30a, { 0x10, 0x5c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc30c, gbc.sp());
        EXPECT(0x5c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc30a));
        EXPECT(0x5c, gbc.readMem(0xc30b));
        // C9 0086
        gbc.setState(0x11f8, 0xbf7a, 0xacb0, 0x6c67, 0x75f5, 0x351b, 0x0, 0x0);
        gbc.writeMem(0x11f8, { 0xc9 });
        gbc.writeMem(0xbf7a, { 0xcc, 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbf7c, gbc.sp());
        EXPECT(0x4bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xbf7a));
        EXPECT(0x4b, gbc.readMem(0xbf7b));
        // C9 0087
        gbc.setState(0x4b4f, 0x10c9, 0x6e80, 0x9ec1, 0x8e30, 0xbd2a, 0x1, 0x1);
        gbc.writeMem(0x10c9, { 0xb7, 0x1d });
        gbc.writeMem(0x4b4f, { 0xc9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x10cb, gbc.sp());
        EXPECT(0x1db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0088
        gbc.setState(0x4e99, 0x73a3, 0x1da0, 0x7a55, 0xf53, 0x70ab, 0x1, 0x1);
        gbc.writeMem(0x4e99, { 0xc9 });
        gbc.writeMem(0x73a3, { 0xde, 0x80 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x73a5, gbc.sp());
        EXPECT(0x80de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0089
        gbc.setState(0xa3d8, 0xc4e2, 0xd290, 0xeb78, 0x919d, 0x5bb1, 0x0, 0x1);
        gbc.writeMem(0xa3d8, { 0xc9 });
        gbc.writeMem(0xc4e2, { 0x1d, 0x52 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc4e4, gbc.sp());
        EXPECT(0x521d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa3d8));
        EXPECT(0x1d, gbc.readMem(0xc4e2));
        EXPECT(0x52, gbc.readMem(0xc4e3));
        // C9 008A
        gbc.setState(0xc5de, 0x7d36, 0x60e0, 0xac77, 0x69cd, 0x9d79, 0x0, 0x0);
        gbc.writeMem(0x7d36, { 0x44, 0x63 });
        gbc.writeMem(0xc5de, { 0xc9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7d38, gbc.sp());
        EXPECT(0x6344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc5de));
        // C9 008B
        gbc.setState(0x60d3, 0x7ed3, 0x2620, 0xf01b, 0xaafd, 0x7840, 0x1, 0x0);
        gbc.writeMem(0x60d3, { 0xc9 });
        gbc.writeMem(0x7ed3, { 0xe7, 0x4a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7ed5, gbc.sp());
        EXPECT(0x4ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 008C
        gbc.setState(0x5a0a, 0x74bb, 0xfec0, 0xc299, 0x83bf, 0x3f3a, 0x1, 0x1);
        gbc.writeMem(0x5a0a, { 0xc9 });
        gbc.writeMem(0x74bb, { 0xcf, 0x45 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x74bd, gbc.sp());
        EXPECT(0x45cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 008D
        gbc.setState(0xe075, 0x9987, 0xe470, 0xc6ca, 0x8ce8, 0xf3e7, 0x1, 0x1);
        gbc.writeMem(0x9987, { 0x8e, 0xf7 });
        gbc.writeMem(0xe075, { 0xc9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9989, gbc.sp());
        EXPECT(0xf78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x9987));
        EXPECT(0xf7, gbc.readMem(0x9988));
        EXPECT(0xc9, gbc.readMem(0xe075));
        // C9 008E
        gbc.setState(0xd7dc, 0x25a7, 0xcd00, 0xcb6d, 0xa7c4, 0xf59c, 0x1, 0x0);
        gbc.writeMem(0x25a7, { 0x78, 0x4b });
        gbc.writeMem(0xd7dc, { 0xc9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x25a9, gbc.sp());
        EXPECT(0x4b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd7dc));
        // C9 0090
        gbc.setState(0x852f, 0xfabb, 0xad60, 0xa825, 0xd5be, 0xe0, 0x1, 0x0);
        gbc.writeMem(0x852f, { 0xc9 });
        gbc.writeMem(0xfabb, { 0x32, 0x5d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfabd, gbc.sp());
        EXPECT(0x5d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x852f));
        EXPECT(0x32, gbc.readMem(0xfabb));
        EXPECT(0x5d, gbc.readMem(0xfabc));
        // C9 0091
        gbc.setState(0xd879, 0xff5e, 0x3c10, 0x8505, 0xc405, 0xa42f, 0x1, 0x0);
        gbc.writeMem(0xd879, { 0xc9 });
        gbc.writeMem(0xff5e, { 0x62, 0x11 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xff60, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd879));
        EXPECT(0x62, gbc.readMem(0xff5e));
        EXPECT(0x11, gbc.readMem(0xff5f));
        // C9 0092
        gbc.setState(0x12c, 0x9683, 0x7c30, 0xdb54, 0xfdfb, 0x5c73, 0x1, 0x0);
        gbc.writeMem(0x12c, { 0xc9 });
        gbc.writeMem(0x9683, { 0xed, 0xe });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9685, gbc.sp());
        EXPECT(0xeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9683));
        EXPECT(0xe, gbc.readMem(0x9684));
        // C9 0093
        gbc.setState(0xd840, 0xa34d, 0xd3a0, 0xddb8, 0x18f, 0xd429, 0x0, 0x0);
        gbc.writeMem(0xa34d, { 0x98, 0xb1 });
        gbc.writeMem(0xd840, { 0xc9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa34f, gbc.sp());
        EXPECT(0xb198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa34d));
        EXPECT(0xb1, gbc.readMem(0xa34e));
        EXPECT(0xc9, gbc.readMem(0xd840));
        // C9 0094
        gbc.setState(0x8d12, 0xf161, 0x6d90, 0xc58f, 0xe58a, 0xc186, 0x1, 0x0);
        gbc.writeMem(0x8d12, { 0xc9 });
        gbc.writeMem(0xf161, { 0xb0, 0xd4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf163, gbc.sp());
        EXPECT(0xd4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8d12));
        EXPECT(0xb0, gbc.readMem(0xf161));
        EXPECT(0xd4, gbc.readMem(0xf162));
        // C9 0095
        gbc.setState(0x6ac1, 0xc540, 0x240, 0xe6b0, 0x6ca2, 0xbe0b, 0x1, 0x1);
        gbc.writeMem(0x6ac1, { 0xc9 });
        gbc.writeMem(0xc540, { 0x98, 0x86 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc542, gbc.sp());
        EXPECT(0x8698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc540));
        EXPECT(0x86, gbc.readMem(0xc541));
        // C9 0096
        gbc.setState(0x118c, 0xde, 0xc3e0, 0xf8f7, 0x689b, 0xb6a9, 0x1, 0x1);
        gbc.writeMem(0xde, { 0xe0, 0xa });
        gbc.writeMem(0x118c, { 0xc9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe0, gbc.sp());
        EXPECT(0xae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0097
        gbc.setState(0xd4b5, 0x9978, 0x49e0, 0x2caa, 0x8dd5, 0x1c27, 0x1, 0x1);
        gbc.writeMem(0x9978, { 0xbe, 0x8d });
        gbc.writeMem(0xd4b5, { 0xc9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x997a, gbc.sp());
        EXPECT(0x8dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x9978));
        EXPECT(0x8d, gbc.readMem(0x9979));
        EXPECT(0xc9, gbc.readMem(0xd4b5));
        // C9 0099
        gbc.setState(0xc5e6, 0xa435, 0xf8a0, 0x2c08, 0x8a27, 0x823f, 0x1, 0x0);
        gbc.writeMem(0xa435, { 0xcb, 0xd1 });
        gbc.writeMem(0xc5e6, { 0xc9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa437, gbc.sp());
        EXPECT(0xd1cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa435));
        EXPECT(0xd1, gbc.readMem(0xa436));
        EXPECT(0xc9, gbc.readMem(0xc5e6));
        // C9 009A
        gbc.setState(0x46b5, 0x2070, 0x1b90, 0x73e, 0x3038, 0xb732, 0x1, 0x1);
        gbc.writeMem(0x2070, { 0xc4, 0x28 });
        gbc.writeMem(0x46b5, { 0xc9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2072, gbc.sp());
        EXPECT(0x28c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 009B
        gbc.setState(0x7156, 0xe250, 0xdc40, 0x1e36, 0x4763, 0x39b8, 0x0, 0x0);
        gbc.writeMem(0x7156, { 0xc9 });
        gbc.writeMem(0xe250, { 0xe8, 0x39 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe252, gbc.sp());
        EXPECT(0x39e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xe250));
        EXPECT(0x39, gbc.readMem(0xe251));
        // C9 009C
        gbc.setState(0x42a1, 0xc0ed, 0x40d0, 0xc37, 0x8a09, 0x38b3, 0x0, 0x1);
        gbc.writeMem(0x42a1, { 0xc9 });
        gbc.writeMem(0xc0ed, { 0xac, 0xb0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc0ef, gbc.sp());
        EXPECT(0xb0ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc0ed));
        EXPECT(0xb0, gbc.readMem(0xc0ee));
        // C9 009D
        gbc.setState(0xd1f3, 0x4e71, 0x35b0, 0x623, 0xf916, 0x3732, 0x1, 0x1);
        gbc.writeMem(0x4e71, { 0xe, 0x5f });
        gbc.writeMem(0xd1f3, { 0xc9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4e73, gbc.sp());
        EXPECT(0x5f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd1f3));
        // C9 009E
        gbc.setState(0x155d, 0xbe23, 0x7980, 0x23b5, 0xb768, 0xe09c, 0x0, 0x1);
        gbc.writeMem(0x155d, { 0xc9 });
        gbc.writeMem(0xbe23, { 0x2d, 0xcf });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbe25, gbc.sp());
        EXPECT(0xcf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbe23));
        EXPECT(0xcf, gbc.readMem(0xbe24));
        // C9 009F
        gbc.setState(0x710, 0x55c4, 0xda50, 0x2918, 0x16c0, 0xb276, 0x1, 0x0);
        gbc.writeMem(0x710, { 0xc9 });
        gbc.writeMem(0x55c4, { 0x3a, 0x71 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x55c6, gbc.sp());
        EXPECT(0x713a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00A0
        gbc.setState(0x21c8, 0x17c3, 0x7c50, 0xf818, 0xa3c4, 0x8728, 0x0, 0x0);
        gbc.writeMem(0x17c3, { 0x7b, 0xd3 });
        gbc.writeMem(0x21c8, { 0xc9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x17c5, gbc.sp());
        EXPECT(0xd37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00A1
        gbc.setState(0x4dcd, 0x17e, 0x73e0, 0x6ba0, 0xaa38, 0x1c34, 0x0, 0x0);
        gbc.writeMem(0x17e, { 0x85, 0x82 });
        gbc.writeMem(0x4dcd, { 0xc9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x180, gbc.sp());
        EXPECT(0x8285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00A2
        gbc.setState(0xa89c, 0xf1ab, 0xe370, 0xeb08, 0x2b6c, 0x9947, 0x1, 0x1);
        gbc.writeMem(0xa89c, { 0xc9 });
        gbc.writeMem(0xf1ab, { 0xc1, 0x69 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf1ad, gbc.sp());
        EXPECT(0x69c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa89c));
        EXPECT(0xc1, gbc.readMem(0xf1ab));
        EXPECT(0x69, gbc.readMem(0xf1ac));
        // C9 00A4
        gbc.setState(0x7f80, 0x1ea2, 0x1070, 0x9ac0, 0x74c, 0xe884, 0x1, 0x1);
        gbc.writeMem(0x1ea2, { 0xac, 0x9e });
        gbc.writeMem(0x7f80, { 0xc9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1ea4, gbc.sp());
        EXPECT(0x9eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00A5
        gbc.setState(0xa534, 0x2292, 0x240, 0x2ec4, 0x5147, 0x46c0, 0x0, 0x0);
        gbc.writeMem(0x2292, { 0xbc, 0x74 });
        gbc.writeMem(0xa534, { 0xc9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2294, gbc.sp());
        EXPECT(0x74bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa534));
        // C9 00A7
        gbc.setState(0xe7bd, 0x390, 0xe3e0, 0x34, 0xb5e1, 0xdd7f, 0x0, 0x1);
        gbc.writeMem(0x390, { 0x76, 0xb });
        gbc.writeMem(0xe7bd, { 0xc9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x392, gbc.sp());
        EXPECT(0xb76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe7bd));
        // C9 00A8
        gbc.setState(0xbbc, 0x69a6, 0x1380, 0xa0c4, 0xcd73, 0xa7b, 0x1, 0x1);
        gbc.writeMem(0xbbc, { 0xc9 });
        gbc.writeMem(0x69a6, { 0x99, 0x3e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x69a8, gbc.sp());
        EXPECT(0x3e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00A9
        gbc.setState(0x418e, 0x84dc, 0xbcb0, 0xc361, 0x9cf, 0xba1, 0x1, 0x1);
        gbc.writeMem(0x418e, { 0xc9 });
        gbc.writeMem(0x84dc, { 0xcd, 0xe7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x84de, gbc.sp());
        EXPECT(0xe7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x84dc));
        EXPECT(0xe7, gbc.readMem(0x84dd));
        // C9 00AA
        gbc.setState(0x54e1, 0x82cc, 0x9c00, 0x73f2, 0x575e, 0x704, 0x0, 0x0);
        gbc.writeMem(0x54e1, { 0xc9 });
        gbc.writeMem(0x82cc, { 0x77, 0xb0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x82ce, gbc.sp());
        EXPECT(0xb077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x82cc));
        EXPECT(0xb0, gbc.readMem(0x82cd));
        // C9 00AB
        gbc.setState(0xa4b5, 0x2d6d, 0x94e0, 0x458b, 0x6e48, 0x86d2, 0x1, 0x0);
        gbc.writeMem(0x2d6d, { 0x21, 0x6f });
        gbc.writeMem(0xa4b5, { 0xc9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2d6f, gbc.sp());
        EXPECT(0x6f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa4b5));
        // C9 00AC
        gbc.setState(0x14de, 0xa690, 0x3f30, 0xe891, 0x1c4, 0x3f8e, 0x0, 0x1);
        gbc.writeMem(0x14de, { 0xc9 });
        gbc.writeMem(0xa690, { 0x8f, 0x47 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa692, gbc.sp());
        EXPECT(0x478f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa690));
        EXPECT(0x47, gbc.readMem(0xa691));
        // C9 00AD
        gbc.setState(0xec8c, 0x317f, 0xd1f0, 0x4085, 0x878, 0x28c7, 0x1, 0x0);
        gbc.writeMem(0x317f, { 0xea, 0x3d });
        gbc.writeMem(0xec8c, { 0xc9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3181, gbc.sp());
        EXPECT(0x3dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xec8c));
        // C9 00AE
        gbc.setState(0x705e, 0xfd64, 0x1eb0, 0x2335, 0xe2e0, 0xbb13, 0x0, 0x1);
        gbc.writeMem(0x705e, { 0xc9 });
        gbc.writeMem(0xfd64, { 0xc3, 0x87 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfd66, gbc.sp());
        EXPECT(0x87c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xfd64));
        EXPECT(0x87, gbc.readMem(0xfd65));
        // C9 00AF
        gbc.setState(0x4623, 0x4994, 0x3700, 0xafe, 0x363b, 0x54e1, 0x0, 0x0);
        gbc.writeMem(0x4623, { 0xc9 });
        gbc.writeMem(0x4994, { 0xa8, 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4996, gbc.sp());
        EXPECT(0xb7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00B0
        gbc.setState(0x7e5c, 0x5436, 0xca90, 0x580b, 0x2b69, 0x223b, 0x0, 0x0);
        gbc.writeMem(0x5436, { 0xfc, 0xa6 });
        gbc.writeMem(0x7e5c, { 0xc9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5438, gbc.sp());
        EXPECT(0xa6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00B1
        gbc.setState(0xc941, 0x676a, 0x8360, 0xa7d6, 0x142e, 0xe483, 0x0, 0x0);
        gbc.writeMem(0x676a, { 0x3a, 0x52 });
        gbc.writeMem(0xc941, { 0xc9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x676c, gbc.sp());
        EXPECT(0x523a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc941));
        // C9 00B2
        gbc.setState(0x2343, 0xba7f, 0x3a60, 0x8c4c, 0x61c5, 0xe66b, 0x0, 0x1);
        gbc.writeMem(0x2343, { 0xc9 });
        gbc.writeMem(0xba7f, { 0x4d, 0x6a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xba81, gbc.sp());
        EXPECT(0x6a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xba7f));
        EXPECT(0x6a, gbc.readMem(0xba80));
        // C9 00B4
        gbc.setState(0x974e, 0x53c7, 0x5190, 0x90ab, 0x8624, 0xf8cd, 0x1, 0x0);
        gbc.writeMem(0x53c7, { 0x86, 0xda });
        gbc.writeMem(0x974e, { 0xc9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x53c9, gbc.sp());
        EXPECT(0xda86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x974e));
        // C9 00B5
        gbc.setState(0x9dd6, 0xd86, 0xa980, 0xc4aa, 0x318d, 0x42c3, 0x1, 0x1);
        gbc.writeMem(0xd86, { 0xd0, 0xbc });
        gbc.writeMem(0x9dd6, { 0xc9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd88, gbc.sp());
        EXPECT(0xbcd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9dd6));
        // C9 00B6
        gbc.setState(0xa61, 0x5351, 0xfc40, 0x9761, 0xda49, 0x1aa0, 0x1, 0x0);
        gbc.writeMem(0xa61, { 0xc9 });
        gbc.writeMem(0x5351, { 0x2f, 0x76 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5353, gbc.sp());
        EXPECT(0x762f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00B7
        gbc.setState(0x5934, 0x211, 0x9420, 0x6d26, 0x17cc, 0x6d19, 0x0, 0x1);
        gbc.writeMem(0x211, { 0xe4, 0xf2 });
        gbc.writeMem(0x5934, { 0xc9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x213, gbc.sp());
        EXPECT(0xf2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00B8
        gbc.setState(0x4709, 0x4316, 0x6090, 0x2177, 0xd56d, 0x6881, 0x1, 0x1);
        gbc.writeMem(0x4316, { 0x5a, 0x1b });
        gbc.writeMem(0x4709, { 0xc9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4318, gbc.sp());
        EXPECT(0x1b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00B9
        gbc.setState(0xe419, 0xce62, 0x5a70, 0xedbe, 0x8709, 0x8fb7, 0x1, 0x0);
        gbc.writeMem(0xce62, { 0xfd, 0xa0 });
        gbc.writeMem(0xe419, { 0xc9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xce64, gbc.sp());
        EXPECT(0xa0fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xce62));
        EXPECT(0xa0, gbc.readMem(0xce63));
        EXPECT(0xc9, gbc.readMem(0xe419));
        // C9 00BA
        gbc.setState(0x5d62, 0x2551, 0x9b70, 0x6d8c, 0x5474, 0x2a20, 0x0, 0x0);
        gbc.writeMem(0x2551, { 0x44, 0x38 });
        gbc.writeMem(0x5d62, { 0xc9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2553, gbc.sp());
        EXPECT(0x3844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00BB
        gbc.setState(0xb83f, 0xe596, 0x6300, 0x984f, 0x24ba, 0x5b27, 0x0, 0x0);
        gbc.writeMem(0xb83f, { 0xc9 });
        gbc.writeMem(0xe596, { 0xe5, 0xfa });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe598, gbc.sp());
        EXPECT(0xfae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb83f));
        EXPECT(0xe5, gbc.readMem(0xe596));
        EXPECT(0xfa, gbc.readMem(0xe597));
        // C9 00BC
        gbc.setState(0x53f3, 0xcc6b, 0xb7b0, 0x5426, 0x9905, 0x65b3, 0x0, 0x0);
        gbc.writeMem(0x53f3, { 0xc9 });
        gbc.writeMem(0xcc6b, { 0x45, 0xcb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcc6d, gbc.sp());
        EXPECT(0xcb45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xcc6b));
        EXPECT(0xcb, gbc.readMem(0xcc6c));
        // C9 00BD
        gbc.setState(0xca5b, 0x7a88, 0x110, 0x55df, 0xfbeb, 0xb849, 0x1, 0x1);
        gbc.writeMem(0x7a88, { 0x4b, 0x39 });
        gbc.writeMem(0xca5b, { 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7a8a, gbc.sp());
        EXPECT(0x394b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xca5b));
        // C9 00BE
        gbc.setState(0x1c8f, 0xddd8, 0x2730, 0x3feb, 0xf94, 0x5585, 0x0, 0x0);
        gbc.writeMem(0x1c8f, { 0xc9 });
        gbc.writeMem(0xddd8, { 0x53, 0xc3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xddda, gbc.sp());
        EXPECT(0xc353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xddd8));
        EXPECT(0xc3, gbc.readMem(0xddd9));
        // C9 00BF
        gbc.setState(0x22d5, 0x4f20, 0xd400, 0x2b8a, 0x7431, 0x30b2, 0x0, 0x1);
        gbc.writeMem(0x22d5, { 0xc9 });
        gbc.writeMem(0x4f20, { 0xb9, 0x2a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4f22, gbc.sp());
        EXPECT(0x2ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00C0
        gbc.setState(0x29f6, 0xb430, 0x9eb0, 0xc498, 0x70ee, 0x6954, 0x0, 0x0);
        gbc.writeMem(0x29f6, { 0xc9 });
        gbc.writeMem(0xb430, { 0x9, 0x34 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb432, gbc.sp());
        EXPECT(0x3409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb430));
        EXPECT(0x34, gbc.readMem(0xb431));
        // C9 00C1
        gbc.setState(0xe3a6, 0x527a, 0x5ee0, 0x3243, 0x6970, 0x3a3f, 0x1, 0x0);
        gbc.writeMem(0x527a, { 0x6d, 0xec });
        gbc.writeMem(0xe3a6, { 0xc9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x527c, gbc.sp());
        EXPECT(0xec6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe3a6));
        // C9 00C2
        gbc.setState(0x7028, 0x76db, 0x7570, 0xeb9b, 0x1b0b, 0x6d14, 0x1, 0x0);
        gbc.writeMem(0x7028, { 0xc9 });
        gbc.writeMem(0x76db, { 0xe7, 0x38 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x76dd, gbc.sp());
        EXPECT(0x38e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00C3
        gbc.setState(0x78d0, 0xea26, 0xb600, 0x484c, 0xa8a5, 0xe777, 0x0, 0x0);
        gbc.writeMem(0x78d0, { 0xc9 });
        gbc.writeMem(0xea26, { 0x81, 0x43 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xea28, gbc.sp());
        EXPECT(0x4381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xea26));
        EXPECT(0x43, gbc.readMem(0xea27));
        // C9 00C4
        gbc.setState(0xdff9, 0x87bc, 0xb7d0, 0x68d0, 0xbadd, 0x804, 0x0, 0x1);
        gbc.writeMem(0x87bc, { 0xc6, 0xcc });
        gbc.writeMem(0xdff9, { 0xc9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x87be, gbc.sp());
        EXPECT(0xccc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x87bc));
        EXPECT(0xcc, gbc.readMem(0x87bd));
        EXPECT(0xc9, gbc.readMem(0xdff9));
        // C9 00C6
        gbc.setState(0xbfa1, 0xf568, 0xf4e0, 0x18e0, 0x216a, 0x22da, 0x1, 0x1);
        gbc.writeMem(0xbfa1, { 0xc9 });
        gbc.writeMem(0xf568, { 0x41, 0xb7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf56a, gbc.sp());
        EXPECT(0xb741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbfa1));
        EXPECT(0x41, gbc.readMem(0xf568));
        EXPECT(0xb7, gbc.readMem(0xf569));
        // C9 00C7
        gbc.setState(0x9e1b, 0x3200, 0xd4b0, 0x3a5b, 0xcb0c, 0xc8, 0x1, 0x0);
        gbc.writeMem(0x3200, { 0x10, 0xae });
        gbc.writeMem(0x9e1b, { 0xc9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3202, gbc.sp());
        EXPECT(0xae10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9e1b));
        // C9 00C8
        gbc.setState(0x35fa, 0xdae7, 0xdd0, 0xcce2, 0xb75d, 0x4b21, 0x0, 0x1);
        gbc.writeMem(0x35fa, { 0xc9 });
        gbc.writeMem(0xdae7, { 0x78, 0x60 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdae9, gbc.sp());
        EXPECT(0x6078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdae7));
        EXPECT(0x60, gbc.readMem(0xdae8));
        // C9 00C9
        gbc.setState(0x7e95, 0x1a6, 0x8550, 0x4f05, 0x9831, 0x46a9, 0x0, 0x0);
        gbc.writeMem(0x1a6, { 0xb6, 0x5 });
        gbc.writeMem(0x7e95, { 0xc9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1a8, gbc.sp());
        EXPECT(0x5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00CA
        gbc.setState(0x8126, 0xbf17, 0xed30, 0xce22, 0x33b3, 0xd51f, 0x0, 0x1);
        gbc.writeMem(0x8126, { 0xc9 });
        gbc.writeMem(0xbf17, { 0xd7, 0x56 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbf19, gbc.sp());
        EXPECT(0x56d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8126));
        EXPECT(0xd7, gbc.readMem(0xbf17));
        EXPECT(0x56, gbc.readMem(0xbf18));
        // C9 00CB
        gbc.setState(0x2fc0, 0xd692, 0xb960, 0xf33, 0xe4f9, 0x1d02, 0x0, 0x0);
        gbc.writeMem(0x2fc0, { 0xc9 });
        gbc.writeMem(0xd692, { 0x56, 0x36 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd694, gbc.sp());
        EXPECT(0x3656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd692));
        EXPECT(0x36, gbc.readMem(0xd693));
        // C9 00CC
        gbc.setState(0x7f2a, 0x2944, 0x3800, 0xa7ca, 0xbe5d, 0xee8c, 0x0, 0x1);
        gbc.writeMem(0x2944, { 0xeb, 0x55 });
        gbc.writeMem(0x7f2a, { 0xc9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2946, gbc.sp());
        EXPECT(0x55eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00CD
        gbc.setState(0x7b64, 0xc696, 0xf3f0, 0x1fe1, 0x9d4c, 0xa0eb, 0x1, 0x1);
        gbc.writeMem(0x7b64, { 0xc9 });
        gbc.writeMem(0xc696, { 0x10, 0x46 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc698, gbc.sp());
        EXPECT(0x4610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc696));
        EXPECT(0x46, gbc.readMem(0xc697));
        // C9 00CE
        gbc.setState(0x9a46, 0x3920, 0xd9b0, 0x296c, 0xcf8, 0xc90a, 0x1, 0x1);
        gbc.writeMem(0x3920, { 0xd9, 0x75 });
        gbc.writeMem(0x9a46, { 0xc9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3922, gbc.sp());
        EXPECT(0x75d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9a46));
        // C9 00CF
        gbc.setState(0x583a, 0xb17d, 0xd1f0, 0xb881, 0xf644, 0xd4fb, 0x0, 0x0);
        gbc.writeMem(0x583a, { 0xc9 });
        gbc.writeMem(0xb17d, { 0x7a, 0xd5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb17f, gbc.sp());
        EXPECT(0xd57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb17d));
        EXPECT(0xd5, gbc.readMem(0xb17e));
        // C9 00D0
        gbc.setState(0x729b, 0x8875, 0x1770, 0xd288, 0xe2f7, 0xb11d, 0x0, 0x1);
        gbc.writeMem(0x729b, { 0xc9 });
        gbc.writeMem(0x8875, { 0x7c, 0x6d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8877, gbc.sp());
        EXPECT(0x6d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x8875));
        EXPECT(0x6d, gbc.readMem(0x8876));
        // C9 00D1
        gbc.setState(0x8f0b, 0x5ae8, 0x880, 0x925f, 0x582e, 0x731a, 0x1, 0x0);
        gbc.writeMem(0x5ae8, { 0xe1, 0xa4 });
        gbc.writeMem(0x8f0b, { 0xc9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5aea, gbc.sp());
        EXPECT(0xa4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8f0b));
        // C9 00D2
        gbc.setState(0x36e5, 0x6575, 0x5270, 0x9d0, 0xbd11, 0x8e78, 0x0, 0x1);
        gbc.writeMem(0x36e5, { 0xc9 });
        gbc.writeMem(0x6575, { 0xcc, 0x82 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6577, gbc.sp());
        EXPECT(0x82cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00D3
        gbc.setState(0x6dc8, 0xaba2, 0xd230, 0x6f7c, 0xc36a, 0x950e, 0x1, 0x0);
        gbc.writeMem(0x6dc8, { 0xc9 });
        gbc.writeMem(0xaba2, { 0x1f, 0xe });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaba4, gbc.sp());
        EXPECT(0xe1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xaba2));
        EXPECT(0xe, gbc.readMem(0xaba3));
        // C9 00D4
        gbc.setState(0xa29f, 0x5acb, 0x5af0, 0x548, 0x38f3, 0xd7ab, 0x1, 0x0);
        gbc.writeMem(0x5acb, { 0x56, 0xc8 });
        gbc.writeMem(0xa29f, { 0xc9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5acd, gbc.sp());
        EXPECT(0xc856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa29f));
        // C9 00D5
        gbc.setState(0x9587, 0x101a, 0x94b0, 0xc3b1, 0xfcd0, 0xfe6a, 0x0, 0x1);
        gbc.writeMem(0x101a, { 0x91, 0x83 });
        gbc.writeMem(0x9587, { 0xc9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x101c, gbc.sp());
        EXPECT(0x8391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9587));
        // C9 00D6
        gbc.setState(0x22c0, 0xb784, 0xd770, 0xd9af, 0x8604, 0x895b, 0x0, 0x0);
        gbc.writeMem(0x22c0, { 0xc9 });
        gbc.writeMem(0xb784, { 0x49, 0x75 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb786, gbc.sp());
        EXPECT(0x7549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb784));
        EXPECT(0x75, gbc.readMem(0xb785));
        // C9 00D7
        gbc.setState(0xde93, 0xeca4, 0x2160, 0x8da9, 0x8af8, 0x8afc, 0x0, 0x0);
        gbc.writeMem(0xde93, { 0xc9 });
        gbc.writeMem(0xeca4, { 0xc8, 0x8d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xeca6, gbc.sp());
        EXPECT(0x8dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xde93));
        EXPECT(0xc8, gbc.readMem(0xeca4));
        EXPECT(0x8d, gbc.readMem(0xeca5));
        // C9 00D8
        gbc.setState(0xc510, 0xcec1, 0xa1e0, 0x3a1, 0x19ba, 0xf177, 0x1, 0x1);
        gbc.writeMem(0xc510, { 0xc9 });
        gbc.writeMem(0xcec1, { 0x2a, 0x20 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcec3, gbc.sp());
        EXPECT(0x202a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc510));
        EXPECT(0x2a, gbc.readMem(0xcec1));
        EXPECT(0x20, gbc.readMem(0xcec2));
        // C9 00D9
        gbc.setState(0x7566, 0xbb00, 0xc4f0, 0x5f8c, 0xaab4, 0xfde6, 0x0, 0x0);
        gbc.writeMem(0x7566, { 0xc9 });
        gbc.writeMem(0xbb00, { 0x30, 0x45 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbb02, gbc.sp());
        EXPECT(0x4530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xbb00));
        EXPECT(0x45, gbc.readMem(0xbb01));
        // C9 00DB
        gbc.setState(0x49cf, 0x7093, 0x6c0, 0x15a3, 0xfffd, 0x19f2, 0x1, 0x0);
        gbc.writeMem(0x49cf, { 0xc9 });
        gbc.writeMem(0x7093, { 0x63, 0x8b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7095, gbc.sp());
        EXPECT(0x8b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00DC
        gbc.setState(0xd9bf, 0x424f, 0x10f0, 0x414c, 0xabd3, 0xa99f, 0x0, 0x0);
        gbc.writeMem(0x424f, { 0x95, 0x62 });
        gbc.writeMem(0xd9bf, { 0xc9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4251, gbc.sp());
        EXPECT(0x6295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd9bf));
        // C9 00DD
        gbc.setState(0xcf8f, 0x619c, 0xe490, 0x12b7, 0x58ea, 0xc0c0, 0x0, 0x0);
        gbc.writeMem(0x619c, { 0x70, 0x1 });
        gbc.writeMem(0xcf8f, { 0xc9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x619e, gbc.sp());
        EXPECT(0x170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xcf8f));
        // C9 00DE
        gbc.setState(0xadd5, 0x2ce, 0x2590, 0x6cc9, 0x5e45, 0x6fb1, 0x1, 0x1);
        gbc.writeMem(0x2ce, { 0xee, 0xe1 });
        gbc.writeMem(0xadd5, { 0xc9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2d0, gbc.sp());
        EXPECT(0xe1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xadd5));
        // C9 00DF
        gbc.setState(0x3265, 0x5fd, 0xeb10, 0x677f, 0x1829, 0x8d6, 0x0, 0x1);
        gbc.writeMem(0x5fd, { 0x2e, 0x17 });
        gbc.writeMem(0x3265, { 0xc9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5ff, gbc.sp());
        EXPECT(0x172e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00E0
        gbc.setState(0x75bd, 0x965d, 0xe780, 0xcfcc, 0x216b, 0xa49c, 0x0, 0x0);
        gbc.writeMem(0x75bd, { 0xc9 });
        gbc.writeMem(0x965d, { 0x71, 0x5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x965f, gbc.sp());
        EXPECT(0x571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x965d));
        EXPECT(0x5, gbc.readMem(0x965e));
        // C9 00E1
        gbc.setState(0x729d, 0xc92f, 0x3520, 0xce4d, 0x42fa, 0x3822, 0x0, 0x0);
        gbc.writeMem(0x729d, { 0xc9 });
        gbc.writeMem(0xc92f, { 0x76, 0xce });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc931, gbc.sp());
        EXPECT(0xce76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc92f));
        EXPECT(0xce, gbc.readMem(0xc930));
        // C9 00E2
        gbc.setState(0x19ac, 0xe11f, 0xa1a0, 0xe21d, 0x246e, 0x8216, 0x0, 0x0);
        gbc.writeMem(0x19ac, { 0xc9 });
        gbc.writeMem(0xe11f, { 0x3c, 0x1f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe121, gbc.sp());
        EXPECT(0x1f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe11f));
        EXPECT(0x1f, gbc.readMem(0xe120));
        // C9 00E3
        gbc.setState(0xa648, 0x45c7, 0xf890, 0x9989, 0x790, 0x64da, 0x0, 0x1);
        gbc.writeMem(0x45c7, { 0xd, 0x9d });
        gbc.writeMem(0xa648, { 0xc9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x45c9, gbc.sp());
        EXPECT(0x9d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa648));
        // C9 00E5
        gbc.setState(0x649f, 0xa639, 0xd360, 0x6705, 0x3cb9, 0xe18d, 0x0, 0x0);
        gbc.writeMem(0x649f, { 0xc9 });
        gbc.writeMem(0xa639, { 0x80, 0x78 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa63b, gbc.sp());
        EXPECT(0x7880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa639));
        EXPECT(0x78, gbc.readMem(0xa63a));
        // C9 00E6
        gbc.setState(0x32f1, 0x9cd4, 0xfd20, 0x1a48, 0xd9c6, 0x50c5, 0x1, 0x1);
        gbc.writeMem(0x32f1, { 0xc9 });
        gbc.writeMem(0x9cd4, { 0x8a, 0x6b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9cd6, gbc.sp());
        EXPECT(0x6b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9cd4));
        EXPECT(0x6b, gbc.readMem(0x9cd5));
        // C9 00E7
        gbc.setState(0x7964, 0x8807, 0x1430, 0x146d, 0x7f80, 0xd019, 0x0, 0x1);
        gbc.writeMem(0x7964, { 0xc9 });
        gbc.writeMem(0x8807, { 0xdb, 0x42 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8809, gbc.sp());
        EXPECT(0x42db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x8807));
        EXPECT(0x42, gbc.readMem(0x8808));
        // C9 00E8
        gbc.setState(0x46c2, 0x525a, 0xa760, 0x5b81, 0xfce6, 0x992c, 0x0, 0x0);
        gbc.writeMem(0x46c2, { 0xc9 });
        gbc.writeMem(0x525a, { 0x9f, 0xf5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x525c, gbc.sp());
        EXPECT(0xf59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00E9
        gbc.setState(0x1c2b, 0x25b7, 0xfad0, 0x6911, 0xbdc, 0x3c31, 0x1, 0x1);
        gbc.writeMem(0x1c2b, { 0xc9 });
        gbc.writeMem(0x25b7, { 0x97, 0xa7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x25b9, gbc.sp());
        EXPECT(0xa797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00EA
        gbc.setState(0xb7f7, 0x1ffe, 0xad0, 0xb4af, 0x6685, 0xbe80, 0x1, 0x0);
        gbc.writeMem(0x1ffe, { 0xda, 0xf0 });
        gbc.writeMem(0xb7f7, { 0xc9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2000, gbc.sp());
        EXPECT(0xf0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb7f7));
        // C9 00EB
        gbc.setState(0x57c5, 0xa61f, 0x7670, 0x5dd4, 0x8d13, 0xd384, 0x0, 0x1);
        gbc.writeMem(0x57c5, { 0xc9 });
        gbc.writeMem(0xa61f, { 0x23, 0xf4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa621, gbc.sp());
        EXPECT(0xf423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xa61f));
        EXPECT(0xf4, gbc.readMem(0xa620));
        // C9 00EC
        gbc.setState(0xdbdd, 0x9704, 0xb3d0, 0x8568, 0xfd13, 0xed, 0x1, 0x1);
        gbc.writeMem(0x9704, { 0x7c, 0xd9 });
        gbc.writeMem(0xdbdd, { 0xc9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9706, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x9704));
        EXPECT(0xd9, gbc.readMem(0x9705));
        EXPECT(0xc9, gbc.readMem(0xdbdd));
        // C9 00ED
        gbc.setState(0x94fe, 0x73ae, 0x4bf0, 0xa3a, 0x1e99, 0x2459, 0x1, 0x1);
        gbc.writeMem(0x73ae, { 0x42, 0x1c });
        gbc.writeMem(0x94fe, { 0xc9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x73b0, gbc.sp());
        EXPECT(0x1c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x94fe));
        // C9 00EE
        gbc.setState(0x52e1, 0x5137, 0x8770, 0x9f56, 0x28ad, 0x5cf8, 0x1, 0x0);
        gbc.writeMem(0x5137, { 0x2, 0xb7 });
        gbc.writeMem(0x52e1, { 0xc9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5139, gbc.sp());
        EXPECT(0xb702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00EF
        gbc.setState(0x3d20, 0x3297, 0x4550, 0x304, 0xc258, 0x6d83, 0x0, 0x1);
        gbc.writeMem(0x3297, { 0xc9, 0x56 });
        gbc.writeMem(0x3d20, { 0xc9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3299, gbc.sp());
        EXPECT(0x56c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00F0
        gbc.setState(0x1e7c, 0x2498, 0xc130, 0x3df9, 0x1fac, 0x9758, 0x0, 0x0);
        gbc.writeMem(0x1e7c, { 0xc9 });
        gbc.writeMem(0x2498, { 0x86, 0xb7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x249a, gbc.sp());
        EXPECT(0xb786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 00F1
        gbc.setState(0x69bb, 0x109, 0xbee0, 0xdd81, 0xa05, 0xcde3, 0x0, 0x1);
        gbc.writeMem(0x109, { 0x2a, 0x8d });
        gbc.writeMem(0x69bb, { 0xc9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x10b, gbc.sp());
        EXPECT(0x8d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00F2
        gbc.setState(0x871f, 0x1865, 0x97a0, 0x1ae7, 0x1e11, 0x55b5, 0x1, 0x0);
        gbc.writeMem(0x1865, { 0xf7, 0x67 });
        gbc.writeMem(0x871f, { 0xc9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1867, gbc.sp());
        EXPECT(0x67f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x871f));
        // C9 00F3
        gbc.setState(0xaa14, 0x7232, 0x7db0, 0xdc4, 0xba7, 0x2cae, 0x1, 0x1);
        gbc.writeMem(0x7232, { 0xe, 0x87 });
        gbc.writeMem(0xaa14, { 0xc9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7234, gbc.sp());
        EXPECT(0x870e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xaa14));
        // C9 00F4
        gbc.setState(0x1406, 0xf36c, 0xbd90, 0x1b20, 0xf4a3, 0x3bf8, 0x0, 0x0);
        gbc.writeMem(0x1406, { 0xc9 });
        gbc.writeMem(0xf36c, { 0x66, 0xdc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf36e, gbc.sp());
        EXPECT(0xdc66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xf36c));
        EXPECT(0xdc, gbc.readMem(0xf36d));
        // C9 00F6
        gbc.setState(0x64b2, 0x831e, 0xd560, 0x8ea1, 0x466c, 0x9b23, 0x1, 0x1);
        gbc.writeMem(0x64b2, { 0xc9 });
        gbc.writeMem(0x831e, { 0xd5, 0xf2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8320, gbc.sp());
        EXPECT(0xf2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x831e));
        EXPECT(0xf2, gbc.readMem(0x831f));
        // C9 00F7
        gbc.setState(0x1af, 0x5b82, 0xf840, 0xb616, 0x8201, 0x2c20, 0x1, 0x0);
        gbc.writeMem(0x1af, { 0xc9 });
        gbc.writeMem(0x5b82, { 0x3c, 0x68 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5b84, gbc.sp());
        EXPECT(0x683c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00F8
        gbc.setState(0xc76a, 0xfc3d, 0x52e0, 0x6563, 0xf915, 0xb85c, 0x0, 0x1);
        gbc.writeMem(0xc76a, { 0xc9 });
        gbc.writeMem(0xfc3d, { 0x13, 0x81 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfc3f, gbc.sp());
        EXPECT(0x8113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc76a));
        EXPECT(0x13, gbc.readMem(0xfc3d));
        EXPECT(0x81, gbc.readMem(0xfc3e));
        // C9 00F9
        gbc.setState(0xb031, 0x65d3, 0xdd60, 0xa53b, 0xae91, 0xf97b, 0x0, 0x0);
        gbc.writeMem(0x65d3, { 0xc, 0xa });
        gbc.writeMem(0xb031, { 0xc9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x65d5, gbc.sp());
        EXPECT(0xa0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb031));
        // C9 00FA
        gbc.setState(0x569e, 0xaada, 0xf180, 0x2b52, 0xeb00, 0x2e33, 0x0, 0x0);
        gbc.writeMem(0x569e, { 0xc9 });
        gbc.writeMem(0xaada, { 0x29, 0xdf });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xaadc, gbc.sp());
        EXPECT(0xdf29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xaada));
        EXPECT(0xdf, gbc.readMem(0xaadb));
        // C9 00FB
        gbc.setState(0x9fa9, 0x31e7, 0xad70, 0xf298, 0x82d3, 0x58dd, 0x0, 0x0);
        gbc.writeMem(0x31e7, { 0x50, 0xc4 });
        gbc.writeMem(0x9fa9, { 0xc9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x31e9, gbc.sp());
        EXPECT(0xc450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9fa9));
        // C9 00FC
        gbc.setState(0x7e6c, 0x2d74, 0x9100, 0x7778, 0xb4cd, 0xc255, 0x1, 0x0);
        gbc.writeMem(0x2d74, { 0x80, 0x27 });
        gbc.writeMem(0x7e6c, { 0xc9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2d76, gbc.sp());
        EXPECT(0x2780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00FD
        gbc.setState(0xd728, 0x49ea, 0xe1b0, 0x6781, 0x5855, 0x784e, 0x0, 0x0);
        gbc.writeMem(0x49ea, { 0xd8, 0xc1 });
        gbc.writeMem(0xd728, { 0xc9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x49ec, gbc.sp());
        EXPECT(0xc1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd728));
        // C9 00FE
        gbc.setState(0x69b0, 0x54ed, 0x3a00, 0x7842, 0xd22d, 0x26b7, 0x0, 0x1);
        gbc.writeMem(0x54ed, { 0xe9, 0xe });
        gbc.writeMem(0x69b0, { 0xc9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x54ef, gbc.sp());
        EXPECT(0xee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 00FF
        gbc.setState(0x1dd0, 0xf5f4, 0xa400, 0xf3eb, 0x95d2, 0x21d2, 0x1, 0x1);
        gbc.writeMem(0x1dd0, { 0xc9 });
        gbc.writeMem(0xf5f4, { 0xcc, 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf5f6, gbc.sp());
        EXPECT(0xaccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xf5f4));
        EXPECT(0xac, gbc.readMem(0xf5f5));
        // C9 0100
        gbc.setState(0x30c3, 0x2486, 0x56b0, 0x19dd, 0xd29b, 0x6640, 0x1, 0x1);
        gbc.writeMem(0x2486, { 0x1f, 0xa3 });
        gbc.writeMem(0x30c3, { 0xc9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2488, gbc.sp());
        EXPECT(0xa31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0101
        gbc.setState(0x8ec5, 0x13b6, 0xf250, 0x908f, 0x947, 0x8e8d, 0x0, 0x0);
        gbc.writeMem(0x13b6, { 0x30, 0xd5 });
        gbc.writeMem(0x8ec5, { 0xc9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x13b8, gbc.sp());
        EXPECT(0xd530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8ec5));
        // C9 0102
        gbc.setState(0x843, 0x44ec, 0x8530, 0xa766, 0x3933, 0xf2dd, 0x1, 0x0);
        gbc.writeMem(0x843, { 0xc9 });
        gbc.writeMem(0x44ec, { 0xe, 0x16 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x44ee, gbc.sp());
        EXPECT(0x160e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0103
        gbc.setState(0x5a3, 0xc1fc, 0xfcf0, 0x1d36, 0xa2a2, 0x94f8, 0x0, 0x0);
        gbc.writeMem(0x5a3, { 0xc9 });
        gbc.writeMem(0xc1fc, { 0x47, 0x34 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc1fe, gbc.sp());
        EXPECT(0x3447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc1fc));
        EXPECT(0x34, gbc.readMem(0xc1fd));
        // C9 0104
        gbc.setState(0xeed4, 0xce5f, 0xeac0, 0xa4a, 0xa617, 0x955a, 0x1, 0x0);
        gbc.writeMem(0xce5f, { 0x25, 0x19 });
        gbc.writeMem(0xeed4, { 0xc9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xce61, gbc.sp());
        EXPECT(0x1925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xce5f));
        EXPECT(0x19, gbc.readMem(0xce60));
        EXPECT(0xc9, gbc.readMem(0xeed4));
        // C9 0105
        gbc.setState(0x45ba, 0x921c, 0x9620, 0x5060, 0xdb6f, 0x559a, 0x1, 0x0);
        gbc.writeMem(0x45ba, { 0xc9 });
        gbc.writeMem(0x921c, { 0xad, 0xb6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x921e, gbc.sp());
        EXPECT(0xb6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x921c));
        EXPECT(0xb6, gbc.readMem(0x921d));
        // C9 0106
        gbc.setState(0x1bac, 0x8e9b, 0x8390, 0x28cd, 0x62, 0x1a5, 0x0, 0x1);
        gbc.writeMem(0x1bac, { 0xc9 });
        gbc.writeMem(0x8e9b, { 0x7d, 0x31 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8e9d, gbc.sp());
        EXPECT(0x317d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8e9b));
        EXPECT(0x31, gbc.readMem(0x8e9c));
        // C9 0107
        gbc.setState(0x5893, 0x48f3, 0x5230, 0x2783, 0x6a31, 0xb869, 0x0, 0x1);
        gbc.writeMem(0x48f3, { 0x3a, 0xa4 });
        gbc.writeMem(0x5893, { 0xc9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x48f5, gbc.sp());
        EXPECT(0xa43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0108
        gbc.setState(0x574, 0x42ed, 0xda90, 0x54d2, 0xba94, 0x8948, 0x1, 0x0);
        gbc.writeMem(0x574, { 0xc9 });
        gbc.writeMem(0x42ed, { 0xa3, 0xd9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x42ef, gbc.sp());
        EXPECT(0xd9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0109
        gbc.setState(0x8828, 0x8616, 0xf9f0, 0x84c6, 0xcca8, 0x890a, 0x0, 0x0);
        gbc.writeMem(0x8616, { 0xb6, 0xd7 });
        gbc.writeMem(0x8828, { 0xc9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8618, gbc.sp());
        EXPECT(0xd7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8616));
        EXPECT(0xd7, gbc.readMem(0x8617));
        EXPECT(0xc9, gbc.readMem(0x8828));
        // C9 010A
        gbc.setState(0x7e25, 0xd1b2, 0x3070, 0xc1e1, 0x83c2, 0x40b9, 0x0, 0x1);
        gbc.writeMem(0x7e25, { 0xc9 });
        gbc.writeMem(0xd1b2, { 0x3b, 0x3e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd1b4, gbc.sp());
        EXPECT(0x3e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd1b2));
        EXPECT(0x3e, gbc.readMem(0xd1b3));
        // C9 010B
        gbc.setState(0x2d23, 0x7519, 0xaff0, 0xe87a, 0xe490, 0xf199, 0x0, 0x0);
        gbc.writeMem(0x2d23, { 0xc9 });
        gbc.writeMem(0x7519, { 0xe5, 0x7b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x751b, gbc.sp());
        EXPECT(0x7be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 010C
        gbc.setState(0x75bc, 0x63a5, 0xb2e0, 0xeafd, 0x941e, 0x971e, 0x1, 0x0);
        gbc.writeMem(0x63a5, { 0x8f, 0x26 });
        gbc.writeMem(0x75bc, { 0xc9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x63a7, gbc.sp());
        EXPECT(0x268f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 010D
        gbc.setState(0xaed0, 0xf528, 0xcc80, 0x343a, 0x6ac9, 0xc57f, 0x1, 0x0);
        gbc.writeMem(0xaed0, { 0xc9 });
        gbc.writeMem(0xf528, { 0x6d, 0x41 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf52a, gbc.sp());
        EXPECT(0x416d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xaed0));
        EXPECT(0x6d, gbc.readMem(0xf528));
        EXPECT(0x41, gbc.readMem(0xf529));
        // C9 010E
        gbc.setState(0x7122, 0xaf5b, 0x1260, 0xd1dd, 0x340b, 0x776c, 0x1, 0x0);
        gbc.writeMem(0x7122, { 0xc9 });
        gbc.writeMem(0xaf5b, { 0xd2, 0xbd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xaf5d, gbc.sp());
        EXPECT(0xbdd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xaf5b));
        EXPECT(0xbd, gbc.readMem(0xaf5c));
        // C9 010F
        gbc.setState(0x56e3, 0x80a6, 0xed70, 0xd8cb, 0x7acc, 0x93d2, 0x1, 0x1);
        gbc.writeMem(0x56e3, { 0xc9 });
        gbc.writeMem(0x80a6, { 0xe8, 0x4c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x80a8, gbc.sp());
        EXPECT(0x4ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x80a6));
        EXPECT(0x4c, gbc.readMem(0x80a7));
        // C9 0110
        gbc.setState(0x6414, 0xdd6c, 0x4ef0, 0x3b1, 0xf1a, 0x5637, 0x0, 0x1);
        gbc.writeMem(0x6414, { 0xc9 });
        gbc.writeMem(0xdd6c, { 0xd3, 0xe0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdd6e, gbc.sp());
        EXPECT(0xe0d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xdd6c));
        EXPECT(0xe0, gbc.readMem(0xdd6d));
        // C9 0111
        gbc.setState(0x6dd4, 0x65b5, 0x6850, 0x4fd3, 0xd87b, 0xbb70, 0x1, 0x1);
        gbc.writeMem(0x65b5, { 0x83, 0x18 });
        gbc.writeMem(0x6dd4, { 0xc9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x65b7, gbc.sp());
        EXPECT(0x1883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0112
        gbc.setState(0x8d60, 0xbff4, 0x2e00, 0xdfa1, 0xed4e, 0x637b, 0x0, 0x0);
        gbc.writeMem(0x8d60, { 0xc9 });
        gbc.writeMem(0xbff4, { 0x52, 0x33 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbff6, gbc.sp());
        EXPECT(0x3352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8d60));
        EXPECT(0x52, gbc.readMem(0xbff4));
        EXPECT(0x33, gbc.readMem(0xbff5));
        // C9 0113
        gbc.setState(0x7d21, 0x5bae, 0xfd50, 0x38b7, 0xe4, 0xae69, 0x0, 0x1);
        gbc.writeMem(0x5bae, { 0xdb, 0x4c });
        gbc.writeMem(0x7d21, { 0xc9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5bb0, gbc.sp());
        EXPECT(0x4cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0114
        gbc.setState(0xee24, 0x160f, 0xb060, 0x3fd4, 0x9f8d, 0x4644, 0x1, 0x1);
        gbc.writeMem(0x160f, { 0xd0, 0x86 });
        gbc.writeMem(0xee24, { 0xc9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1611, gbc.sp());
        EXPECT(0x86d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xee24));
        // C9 0115
        gbc.setState(0x9769, 0xcaac, 0x2100, 0xcbc4, 0x8c84, 0x2c45, 0x1, 0x0);
        gbc.writeMem(0x9769, { 0xc9 });
        gbc.writeMem(0xcaac, { 0x56, 0xb5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcaae, gbc.sp());
        EXPECT(0xb556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9769));
        EXPECT(0x56, gbc.readMem(0xcaac));
        EXPECT(0xb5, gbc.readMem(0xcaad));
        // C9 0116
        gbc.setState(0xb1d5, 0x805b, 0x2a90, 0x415f, 0x2a47, 0x6018, 0x1, 0x0);
        gbc.writeMem(0x805b, { 0xbe, 0xa });
        gbc.writeMem(0xb1d5, { 0xc9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x805d, gbc.sp());
        EXPECT(0xabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x805b));
        EXPECT(0xa, gbc.readMem(0x805c));
        EXPECT(0xc9, gbc.readMem(0xb1d5));
        // C9 0117
        gbc.setState(0x4848, 0xe4e3, 0x6a70, 0xfab4, 0x7a05, 0x186f, 0x0, 0x1);
        gbc.writeMem(0x4848, { 0xc9 });
        gbc.writeMem(0xe4e3, { 0x61, 0x8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe4e5, gbc.sp());
        EXPECT(0x861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe4e3));
        EXPECT(0x8, gbc.readMem(0xe4e4));
        // C9 0118
        gbc.setState(0x8dc7, 0x16fa, 0xb6c0, 0x9171, 0x6b9b, 0x63d8, 0x1, 0x1);
        gbc.writeMem(0x16fa, { 0xb7, 0x88 });
        gbc.writeMem(0x8dc7, { 0xc9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x16fc, gbc.sp());
        EXPECT(0x88b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8dc7));
        // C9 0119
        gbc.setState(0x92c5, 0x33, 0x510, 0xd2af, 0x7987, 0xf612, 0x0, 0x1);
        gbc.writeMem(0x33, { 0xbb, 0x32 });
        gbc.writeMem(0x92c5, { 0xc9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x35, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x92c5));
        // C9 011A
        gbc.setState(0x69da, 0x8262, 0x8480, 0xb5e4, 0xd91, 0x9dee, 0x0, 0x0);
        gbc.writeMem(0x69da, { 0xc9 });
        gbc.writeMem(0x8262, { 0xd5, 0x14 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8264, gbc.sp());
        EXPECT(0x14d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8262));
        EXPECT(0x14, gbc.readMem(0x8263));
        // C9 011B
        gbc.setState(0xc332, 0xc49d, 0x5c80, 0x259e, 0xe06c, 0x3e27, 0x1, 0x0);
        gbc.writeMem(0xc332, { 0xc9 });
        gbc.writeMem(0xc49d, { 0x10, 0x3b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc49f, gbc.sp());
        EXPECT(0x3b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc332));
        EXPECT(0x10, gbc.readMem(0xc49d));
        EXPECT(0x3b, gbc.readMem(0xc49e));
        // C9 011C
        gbc.setState(0x666f, 0xd68a, 0xde00, 0x78b8, 0x9dfb, 0x7e89, 0x1, 0x0);
        gbc.writeMem(0x666f, { 0xc9 });
        gbc.writeMem(0xd68a, { 0xc7, 0x42 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd68c, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd68a));
        EXPECT(0x42, gbc.readMem(0xd68b));
        // C9 011E
        gbc.setState(0x3734, 0x4698, 0x1b60, 0xdf2e, 0x3617, 0x7fb3, 0x1, 0x1);
        gbc.writeMem(0x3734, { 0xc9 });
        gbc.writeMem(0x4698, { 0x96, 0x16 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x469a, gbc.sp());
        EXPECT(0x1696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 011F
        gbc.setState(0x6eb0, 0x168b, 0x4460, 0x9451, 0xa06a, 0x664d, 0x1, 0x0);
        gbc.writeMem(0x168b, { 0xd2, 0x2f });
        gbc.writeMem(0x6eb0, { 0xc9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x168d, gbc.sp());
        EXPECT(0x2fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0120
        gbc.setState(0xecac, 0xae2e, 0x8400, 0xda17, 0xe2c, 0xfa10, 0x1, 0x1);
        gbc.writeMem(0xae2e, { 0xe7, 0x25 });
        gbc.writeMem(0xecac, { 0xc9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xae30, gbc.sp());
        EXPECT(0x25e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xae2e));
        EXPECT(0x25, gbc.readMem(0xae2f));
        EXPECT(0xc9, gbc.readMem(0xecac));
        // C9 0121
        gbc.setState(0xdff6, 0xe1e, 0x58e0, 0x94d7, 0x4856, 0xa596, 0x1, 0x1);
        gbc.writeMem(0xe1e, { 0x9d, 0x7b });
        gbc.writeMem(0xdff6, { 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe20, gbc.sp());
        EXPECT(0x7b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdff6));
        // C9 0122
        gbc.setState(0xa3ab, 0xd148, 0x5210, 0xa362, 0x8e25, 0x8f94, 0x1, 0x1);
        gbc.writeMem(0xa3ab, { 0xc9 });
        gbc.writeMem(0xd148, { 0x4, 0xde });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd14a, gbc.sp());
        EXPECT(0xde04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa3ab));
        EXPECT(0x4, gbc.readMem(0xd148));
        EXPECT(0xde, gbc.readMem(0xd149));
        // C9 0123
        gbc.setState(0x8248, 0xbf44, 0xb9c0, 0xa340, 0x9f99, 0xcc1c, 0x1, 0x1);
        gbc.writeMem(0x8248, { 0xc9 });
        gbc.writeMem(0xbf44, { 0x53, 0x77 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbf46, gbc.sp());
        EXPECT(0x7753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8248));
        EXPECT(0x53, gbc.readMem(0xbf44));
        EXPECT(0x77, gbc.readMem(0xbf45));
        // C9 0124
        gbc.setState(0x3208, 0x24cf, 0xcff0, 0x489a, 0x1e66, 0xcbe6, 0x0, 0x1);
        gbc.writeMem(0x24cf, { 0xc4, 0xee });
        gbc.writeMem(0x3208, { 0xc9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x24d1, gbc.sp());
        EXPECT(0xeec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0125
        gbc.setState(0x3660, 0x44e9, 0x7d00, 0x93be, 0xbfcb, 0x6975, 0x1, 0x0);
        gbc.writeMem(0x3660, { 0xc9 });
        gbc.writeMem(0x44e9, { 0x64, 0x31 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x44eb, gbc.sp());
        EXPECT(0x3164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0126
        gbc.setState(0x6c2a, 0xbb76, 0xd460, 0xdb61, 0xca9d, 0x5bd0, 0x1, 0x1);
        gbc.writeMem(0x6c2a, { 0xc9 });
        gbc.writeMem(0xbb76, { 0xf4, 0x4e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbb78, gbc.sp());
        EXPECT(0x4ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xbb76));
        EXPECT(0x4e, gbc.readMem(0xbb77));
        // C9 0127
        gbc.setState(0xa610, 0xc107, 0xf870, 0x43d7, 0x482a, 0x7b20, 0x0, 0x0);
        gbc.writeMem(0xa610, { 0xc9 });
        gbc.writeMem(0xc107, { 0x54, 0xda });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc109, gbc.sp());
        EXPECT(0xda54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa610));
        EXPECT(0x54, gbc.readMem(0xc107));
        EXPECT(0xda, gbc.readMem(0xc108));
        // C9 0128
        gbc.setState(0xaac7, 0x9ea3, 0x1a0, 0x3bd2, 0xdd58, 0x44ef, 0x1, 0x1);
        gbc.writeMem(0x9ea3, { 0xeb, 0xb5 });
        gbc.writeMem(0xaac7, { 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9ea5, gbc.sp());
        EXPECT(0xb5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9ea3));
        EXPECT(0xb5, gbc.readMem(0x9ea4));
        EXPECT(0xc9, gbc.readMem(0xaac7));
        // C9 0129
        gbc.setState(0x2585, 0xa9d4, 0x0, 0xe469, 0xd6ef, 0xfc95, 0x1, 0x0);
        gbc.writeMem(0x2585, { 0xc9 });
        gbc.writeMem(0xa9d4, { 0x69, 0x14 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa9d6, gbc.sp());
        EXPECT(0x1469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa9d4));
        EXPECT(0x14, gbc.readMem(0xa9d5));
        // C9 012A
        gbc.setState(0x9f13, 0x1b08, 0x4a40, 0x9673, 0xc5f8, 0x1983, 0x1, 0x0);
        gbc.writeMem(0x1b08, { 0x22, 0x63 });
        gbc.writeMem(0x9f13, { 0xc9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1b0a, gbc.sp());
        EXPECT(0x6322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9f13));
        // C9 012C
        gbc.setState(0x6ed0, 0x5d7, 0xc130, 0x9b67, 0x1846, 0x81c9, 0x1, 0x0);
        gbc.writeMem(0x5d7, { 0xfe, 0xb4 });
        gbc.writeMem(0x6ed0, { 0xc9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5d9, gbc.sp());
        EXPECT(0xb4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 012E
        gbc.setState(0xb2c8, 0x4c64, 0x7690, 0xa736, 0x16a0, 0xe90b, 0x0, 0x1);
        gbc.writeMem(0x4c64, { 0xde, 0xab });
        gbc.writeMem(0xb2c8, { 0xc9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4c66, gbc.sp());
        EXPECT(0xabde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb2c8));
        // C9 012F
        gbc.setState(0xb367, 0x7999, 0x3c50, 0x9129, 0xe339, 0x39c4, 0x0, 0x1);
        gbc.writeMem(0x7999, { 0xc9, 0x25 });
        gbc.writeMem(0xb367, { 0xc9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x799b, gbc.sp());
        EXPECT(0x25c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb367));
        // C9 0130
        gbc.setState(0xe535, 0xa2b8, 0x7f80, 0xceba, 0x30a1, 0x707d, 0x1, 0x1);
        gbc.writeMem(0xa2b8, { 0xc4, 0xb5 });
        gbc.writeMem(0xe535, { 0xc9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa2ba, gbc.sp());
        EXPECT(0xb5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xa2b8));
        EXPECT(0xb5, gbc.readMem(0xa2b9));
        EXPECT(0xc9, gbc.readMem(0xe535));
        // C9 0131
        gbc.setState(0x91a3, 0x4e81, 0xdbb0, 0xa50, 0xc15b, 0x8f2c, 0x1, 0x1);
        gbc.writeMem(0x4e81, { 0xf2, 0x8c });
        gbc.writeMem(0x91a3, { 0xc9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4e83, gbc.sp());
        EXPECT(0x8cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x91a3));
        // C9 0132
        gbc.setState(0x224b, 0x7dbd, 0xef00, 0x2d73, 0x1858, 0xf5f0, 0x0, 0x1);
        gbc.writeMem(0x224b, { 0xc9 });
        gbc.writeMem(0x7dbd, { 0x1b, 0xff });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7dbf, gbc.sp());
        EXPECT(0xff1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0133
        gbc.setState(0x8f85, 0x3d21, 0xcbe0, 0xd31e, 0xf0e5, 0x2b4, 0x1, 0x0);
        gbc.writeMem(0x3d21, { 0x88, 0xfb });
        gbc.writeMem(0x8f85, { 0xc9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3d23, gbc.sp());
        EXPECT(0xfb88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8f85));
        // C9 0134
        gbc.setState(0xc957, 0x50c4, 0xa6c0, 0xafe9, 0x8dc7, 0x91c9, 0x1, 0x1);
        gbc.writeMem(0x50c4, { 0x99, 0x5a });
        gbc.writeMem(0xc957, { 0xc9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x50c6, gbc.sp());
        EXPECT(0x5a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc957));
        // C9 0135
        gbc.setState(0xca26, 0x1ad2, 0xdb80, 0x95ea, 0xd861, 0x9132, 0x1, 0x1);
        gbc.writeMem(0x1ad2, { 0x8c, 0xb6 });
        gbc.writeMem(0xca26, { 0xc9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1ad4, gbc.sp());
        EXPECT(0xb68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xca26));
        // C9 0136
        gbc.setState(0xbad3, 0xdd5f, 0x9a50, 0xb8f4, 0xddff, 0xf075, 0x1, 0x1);
        gbc.writeMem(0xbad3, { 0xc9 });
        gbc.writeMem(0xdd5f, { 0x3d, 0xc8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdd61, gbc.sp());
        EXPECT(0xc83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbad3));
        EXPECT(0x3d, gbc.readMem(0xdd5f));
        EXPECT(0xc8, gbc.readMem(0xdd60));
        // C9 0138
        gbc.setState(0x1180, 0xdb24, 0x3ca0, 0x602f, 0x5eb3, 0x7e31, 0x0, 0x1);
        gbc.writeMem(0x1180, { 0xc9 });
        gbc.writeMem(0xdb24, { 0x33, 0x6f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdb26, gbc.sp());
        EXPECT(0x6f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xdb24));
        EXPECT(0x6f, gbc.readMem(0xdb25));
        // C9 0139
        gbc.setState(0xd171, 0x1c11, 0x4180, 0xc3de, 0x8636, 0x14e4, 0x1, 0x0);
        gbc.writeMem(0x1c11, { 0x35, 0xc7 });
        gbc.writeMem(0xd171, { 0xc9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1c13, gbc.sp());
        EXPECT(0xc735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd171));
        // C9 013A
        gbc.setState(0x428c, 0x64, 0xa0f0, 0x86c2, 0xcaa3, 0x10ee, 0x1, 0x1);
        gbc.writeMem(0x64, { 0x71, 0xd4 });
        gbc.writeMem(0x428c, { 0xc9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x66, gbc.sp());
        EXPECT(0xd471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 013B
        gbc.setState(0x23a6, 0x9dc7, 0x3bf0, 0x2b14, 0x773c, 0xb683, 0x1, 0x0);
        gbc.writeMem(0x23a6, { 0xc9 });
        gbc.writeMem(0x9dc7, { 0x5e, 0xaa });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9dc9, gbc.sp());
        EXPECT(0xaa5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9dc7));
        EXPECT(0xaa, gbc.readMem(0x9dc8));
        // C9 013C
        gbc.setState(0x7d13, 0x66d2, 0xd0b0, 0x683a, 0x1755, 0x48d0, 0x1, 0x1);
        gbc.writeMem(0x66d2, { 0x1c, 0x70 });
        gbc.writeMem(0x7d13, { 0xc9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x66d4, gbc.sp());
        EXPECT(0x701c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 013D
        gbc.setState(0xdd65, 0xcafb, 0x54a0, 0xeb89, 0x1ca0, 0x78e4, 0x1, 0x0);
        gbc.writeMem(0xcafb, { 0x2e, 0x81 });
        gbc.writeMem(0xdd65, { 0xc9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcafd, gbc.sp());
        EXPECT(0x812e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcafb));
        EXPECT(0x81, gbc.readMem(0xcafc));
        EXPECT(0xc9, gbc.readMem(0xdd65));
        // C9 013E
        gbc.setState(0x77bf, 0x4050, 0xaf30, 0x55b6, 0xf427, 0x64b9, 0x0, 0x0);
        gbc.writeMem(0x4050, { 0x2, 0xea });
        gbc.writeMem(0x77bf, { 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4052, gbc.sp());
        EXPECT(0xea02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 013F
        gbc.setState(0xb06d, 0xff85, 0x9ad0, 0x7c6, 0x93f9, 0x6ab2, 0x1, 0x1);
        gbc.writeMem(0xb06d, { 0xc9 });
        gbc.writeMem(0xff85, { 0x9e, 0x5e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xff87, gbc.sp());
        EXPECT(0x5e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb06d));
        EXPECT(0x9e, gbc.readMem(0xff85));
        EXPECT(0x5e, gbc.readMem(0xff86));
        // C9 0140
        gbc.setState(0x4fde, 0x273e, 0x6900, 0xe70b, 0x7d68, 0xc78d, 0x0, 0x1);
        gbc.writeMem(0x273e, { 0x22, 0xb1 });
        gbc.writeMem(0x4fde, { 0xc9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2740, gbc.sp());
        EXPECT(0xb122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0141
        gbc.setState(0x430e, 0xda3b, 0x6560, 0x9b97, 0xcf39, 0x21b4, 0x0, 0x0);
        gbc.writeMem(0x430e, { 0xc9 });
        gbc.writeMem(0xda3b, { 0x10, 0x45 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xda3d, gbc.sp());
        EXPECT(0x4510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xda3b));
        EXPECT(0x45, gbc.readMem(0xda3c));
        // C9 0142
        gbc.setState(0x8ad3, 0xd27a, 0x4ca0, 0xaef8, 0x69ed, 0x9fad, 0x0, 0x1);
        gbc.writeMem(0x8ad3, { 0xc9 });
        gbc.writeMem(0xd27a, { 0x48, 0x5e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd27c, gbc.sp());
        EXPECT(0x5e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8ad3));
        EXPECT(0x48, gbc.readMem(0xd27a));
        EXPECT(0x5e, gbc.readMem(0xd27b));
        // C9 0143
        gbc.setState(0x7607, 0x3619, 0x60f0, 0xdf9e, 0xa8c6, 0x2f0c, 0x0, 0x0);
        gbc.writeMem(0x3619, { 0xfc, 0x14 });
        gbc.writeMem(0x7607, { 0xc9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x361b, gbc.sp());
        EXPECT(0x14fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0144
        gbc.setState(0xcc21, 0x4fc2, 0xca20, 0x46e8, 0x9c00, 0xd9db, 0x1, 0x1);
        gbc.writeMem(0x4fc2, { 0xa7, 0xd4 });
        gbc.writeMem(0xcc21, { 0xc9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4fc4, gbc.sp());
        EXPECT(0xd4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xcc21));
        // C9 0145
        gbc.setState(0x6c21, 0xd7d6, 0x3100, 0xb1bd, 0xaee1, 0xfc7f, 0x0, 0x1);
        gbc.writeMem(0x6c21, { 0xc9 });
        gbc.writeMem(0xd7d6, { 0xdc, 0xc0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd7d8, gbc.sp());
        EXPECT(0xc0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xd7d6));
        EXPECT(0xc0, gbc.readMem(0xd7d7));
        // C9 0146
        gbc.setState(0x787b, 0x7df7, 0x2e70, 0x6b2c, 0xa8a0, 0x87e6, 0x1, 0x1);
        gbc.writeMem(0x787b, { 0xc9 });
        gbc.writeMem(0x7df7, { 0xf0, 0x53 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7df9, gbc.sp());
        EXPECT(0x53f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0147
        gbc.setState(0xb887, 0xea98, 0xf0e0, 0x47bc, 0xad46, 0x7d34, 0x1, 0x0);
        gbc.writeMem(0xb887, { 0xc9 });
        gbc.writeMem(0xea98, { 0x67, 0x3e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xea9a, gbc.sp());
        EXPECT(0x3e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb887));
        EXPECT(0x67, gbc.readMem(0xea98));
        EXPECT(0x3e, gbc.readMem(0xea99));
        // C9 0148
        gbc.setState(0xb0c5, 0xb449, 0xaf30, 0x69cc, 0x94a3, 0xf1b2, 0x0, 0x1);
        gbc.writeMem(0xb0c5, { 0xc9 });
        gbc.writeMem(0xb449, { 0xb5, 0xcb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb44b, gbc.sp());
        EXPECT(0xcbb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb0c5));
        EXPECT(0xb5, gbc.readMem(0xb449));
        EXPECT(0xcb, gbc.readMem(0xb44a));
        // C9 0149
        gbc.setState(0x9e49, 0x3f07, 0xfde0, 0xf13a, 0x773c, 0xf07b, 0x0, 0x0);
        gbc.writeMem(0x3f07, { 0xe7, 0xf2 });
        gbc.writeMem(0x9e49, { 0xc9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3f09, gbc.sp());
        EXPECT(0xf2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9e49));
        // C9 014A
        gbc.setState(0x5e9f, 0x557, 0x21f0, 0xd936, 0x5122, 0x43dd, 0x1, 0x1);
        gbc.writeMem(0x557, { 0x7a, 0x54 });
        gbc.writeMem(0x5e9f, { 0xc9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x559, gbc.sp());
        EXPECT(0x547a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 014B
        gbc.setState(0x837e, 0x4d1f, 0x5f30, 0xf1d7, 0xa333, 0x37a4, 0x1, 0x1);
        gbc.writeMem(0x4d1f, { 0xeb, 0x7 });
        gbc.writeMem(0x837e, { 0xc9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4d21, gbc.sp());
        EXPECT(0x7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x837e));
        // C9 014C
        gbc.setState(0x2bec, 0x77b3, 0x1990, 0x8975, 0xe099, 0x9843, 0x1, 0x0);
        gbc.writeMem(0x2bec, { 0xc9 });
        gbc.writeMem(0x77b3, { 0x54, 0xee });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x77b5, gbc.sp());
        EXPECT(0xee54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 014D
        gbc.setState(0xe0f0, 0x30c5, 0x9f10, 0x3a96, 0xea9a, 0xcf54, 0x0, 0x0);
        gbc.writeMem(0x30c5, { 0x52, 0xc });
        gbc.writeMem(0xe0f0, { 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x30c7, gbc.sp());
        EXPECT(0xc52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe0f0));
        // C9 014E
        gbc.setState(0x55b3, 0x85d8, 0x6ec0, 0x5c64, 0x9336, 0x3d67, 0x1, 0x1);
        gbc.writeMem(0x55b3, { 0xc9 });
        gbc.writeMem(0x85d8, { 0x2b, 0x57 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x85da, gbc.sp());
        EXPECT(0x572b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x85d8));
        EXPECT(0x57, gbc.readMem(0x85d9));
        // C9 014F
        gbc.setState(0x49a, 0xef49, 0x8300, 0x8abb, 0x74ab, 0x7691, 0x1, 0x0);
        gbc.writeMem(0x49a, { 0xc9 });
        gbc.writeMem(0xef49, { 0x12, 0x5f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xef4b, gbc.sp());
        EXPECT(0x5f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xef49));
        EXPECT(0x5f, gbc.readMem(0xef4a));
        // C9 0150
        gbc.setState(0x76c5, 0x3aec, 0x71e0, 0x31ad, 0xf077, 0xe698, 0x1, 0x1);
        gbc.writeMem(0x3aec, { 0x25, 0x70 });
        gbc.writeMem(0x76c5, { 0xc9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3aee, gbc.sp());
        EXPECT(0x7025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0151
        gbc.setState(0xd91e, 0x9039, 0xdf80, 0xdd5b, 0xb565, 0x36b6, 0x1, 0x1);
        gbc.writeMem(0x9039, { 0xb4, 0x25 });
        gbc.writeMem(0xd91e, { 0xc9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x903b, gbc.sp());
        EXPECT(0x25b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x9039));
        EXPECT(0x25, gbc.readMem(0x903a));
        EXPECT(0xc9, gbc.readMem(0xd91e));
        // C9 0152
        gbc.setState(0x1626, 0x20e, 0xc2e0, 0x2ad6, 0xbe0f, 0x9bec, 0x0, 0x0);
        gbc.writeMem(0x20e, { 0xc6, 0x51 });
        gbc.writeMem(0x1626, { 0xc9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x210, gbc.sp());
        EXPECT(0x51c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0153
        gbc.setState(0x863e, 0xe871, 0xcc10, 0xf7b8, 0x81cd, 0x9bf3, 0x1, 0x0);
        gbc.writeMem(0x863e, { 0xc9 });
        gbc.writeMem(0xe871, { 0x7e, 0xa8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe873, gbc.sp());
        EXPECT(0xa87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x863e));
        EXPECT(0x7e, gbc.readMem(0xe871));
        EXPECT(0xa8, gbc.readMem(0xe872));
        // C9 0154
        gbc.setState(0x2d23, 0x1ca5, 0xe920, 0x8ec4, 0x6b36, 0xc85c, 0x1, 0x1);
        gbc.writeMem(0x1ca5, { 0xdd, 0xa8 });
        gbc.writeMem(0x2d23, { 0xc9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1ca7, gbc.sp());
        EXPECT(0xa8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0155
        gbc.setState(0x426e, 0x990f, 0x8070, 0x113, 0x945d, 0xd24d, 0x0, 0x0);
        gbc.writeMem(0x426e, { 0xc9 });
        gbc.writeMem(0x990f, { 0x5e, 0xf8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9911, gbc.sp());
        EXPECT(0xf85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x990f));
        EXPECT(0xf8, gbc.readMem(0x9910));
        // C9 0156
        gbc.setState(0x40cc, 0xcb32, 0x8c40, 0xf995, 0xe893, 0x8f18, 0x0, 0x0);
        gbc.writeMem(0x40cc, { 0xc9 });
        gbc.writeMem(0xcb32, { 0xc3, 0x5f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcb34, gbc.sp());
        EXPECT(0x5fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcb32));
        EXPECT(0x5f, gbc.readMem(0xcb33));
        // C9 0157
        gbc.setState(0x3709, 0x3142, 0x8ae0, 0xec24, 0x4d27, 0x75d8, 0x0, 0x0);
        gbc.writeMem(0x3142, { 0xd0, 0xaa });
        gbc.writeMem(0x3709, { 0xc9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0xaad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0158
        gbc.setState(0x3b89, 0xd222, 0xac40, 0x851, 0x9637, 0x4567, 0x1, 0x0);
        gbc.writeMem(0x3b89, { 0xc9 });
        gbc.writeMem(0xd222, { 0x89, 0x26 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd224, gbc.sp());
        EXPECT(0x2689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd222));
        EXPECT(0x26, gbc.readMem(0xd223));
        // C9 0159
        gbc.setState(0x87fc, 0x1dbb, 0x670, 0x2424, 0x82c9, 0xedae, 0x0, 0x0);
        gbc.writeMem(0x1dbb, { 0xb4, 0xe6 });
        gbc.writeMem(0x87fc, { 0xc9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1dbd, gbc.sp());
        EXPECT(0xe6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x87fc));
        // C9 015A
        gbc.setState(0x9bef, 0x6a16, 0x2460, 0xf649, 0xee11, 0x3ae2, 0x1, 0x0);
        gbc.writeMem(0x6a16, { 0xd1, 0x1b });
        gbc.writeMem(0x9bef, { 0xc9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6a18, gbc.sp());
        EXPECT(0x1bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9bef));
        // C9 015B
        gbc.setState(0x3a3, 0x3253, 0xb490, 0xd355, 0xf4d8, 0x4da0, 0x0, 0x1);
        gbc.writeMem(0x3a3, { 0xc9 });
        gbc.writeMem(0x3253, { 0x2d, 0x95 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3255, gbc.sp());
        EXPECT(0x952d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 015C
        gbc.setState(0xdc6c, 0x2339, 0x4090, 0xb0ab, 0xf4af, 0xe9c3, 0x1, 0x0);
        gbc.writeMem(0x2339, { 0xd9, 0xe1 });
        gbc.writeMem(0xdc6c, { 0xc9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x233b, gbc.sp());
        EXPECT(0xe1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdc6c));
        // C9 015D
        gbc.setState(0x454a, 0xc668, 0xa0a0, 0xd287, 0xcc71, 0x1b59, 0x0, 0x1);
        gbc.writeMem(0x454a, { 0xc9 });
        gbc.writeMem(0xc668, { 0xda, 0x69 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc66a, gbc.sp());
        EXPECT(0x69da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc668));
        EXPECT(0x69, gbc.readMem(0xc669));
        // C9 015E
        gbc.setState(0x3c0e, 0xddc5, 0xa7f0, 0xedc8, 0x4218, 0x8952, 0x1, 0x1);
        gbc.writeMem(0x3c0e, { 0xc9 });
        gbc.writeMem(0xddc5, { 0x2b, 0x5d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xddc7, gbc.sp());
        EXPECT(0x5d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xddc5));
        EXPECT(0x5d, gbc.readMem(0xddc6));
        // C9 015F
        gbc.setState(0xded6, 0xc021, 0xaaf0, 0xfb09, 0x4024, 0xa1db, 0x0, 0x0);
        gbc.writeMem(0xc021, { 0x65, 0xd0 });
        gbc.writeMem(0xded6, { 0xc9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc023, gbc.sp());
        EXPECT(0xd065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc021));
        EXPECT(0xd0, gbc.readMem(0xc022));
        EXPECT(0xc9, gbc.readMem(0xded6));
        // C9 0160
        gbc.setState(0xba37, 0xc0ed, 0xeca0, 0x93e0, 0x7602, 0x3fd5, 0x0, 0x1);
        gbc.writeMem(0xba37, { 0xc9 });
        gbc.writeMem(0xc0ed, { 0xac, 0xb0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc0ef, gbc.sp());
        EXPECT(0xb0ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xba37));
        EXPECT(0xac, gbc.readMem(0xc0ed));
        EXPECT(0xb0, gbc.readMem(0xc0ee));
        // C9 0161
        gbc.setState(0x6264, 0xeea6, 0x71e0, 0xeeea, 0x684d, 0x565f, 0x1, 0x0);
        gbc.writeMem(0x6264, { 0xc9 });
        gbc.writeMem(0xeea6, { 0x4e, 0xb6 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xeea8, gbc.sp());
        EXPECT(0xb64e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xeea6));
        EXPECT(0xb6, gbc.readMem(0xeea7));
        // C9 0162
        gbc.setState(0x9e73, 0x6ea2, 0xf5d0, 0x4f, 0x3ead, 0x6740, 0x0, 0x1);
        gbc.writeMem(0x6ea2, { 0xeb, 0xd1 });
        gbc.writeMem(0x9e73, { 0xc9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6ea4, gbc.sp());
        EXPECT(0xd1eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9e73));
        // C9 0163
        gbc.setState(0x18b, 0x94c7, 0x3c10, 0x38d3, 0x3452, 0x3c6c, 0x1, 0x0);
        gbc.writeMem(0x18b, { 0xc9 });
        gbc.writeMem(0x94c7, { 0x63, 0xda });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x94c9, gbc.sp());
        EXPECT(0xda63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x94c7));
        EXPECT(0xda, gbc.readMem(0x94c8));
        // C9 0164
        gbc.setState(0xd27b, 0xda98, 0x6690, 0x67b0, 0xe8bb, 0xe9e8, 0x1, 0x1);
        gbc.writeMem(0xd27b, { 0xc9 });
        gbc.writeMem(0xda98, { 0x16, 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xda9a, gbc.sp());
        EXPECT(0x16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd27b));
        EXPECT(0x16, gbc.readMem(0xda98));
        EXPECT(0x0, gbc.readMem(0xda99));
        // C9 0165
        gbc.setState(0xd956, 0x71ef, 0x9fe0, 0x70dd, 0x9e05, 0x1cd5, 0x1, 0x1);
        gbc.writeMem(0x71ef, { 0x37, 0x3b });
        gbc.writeMem(0xd956, { 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x71f1, gbc.sp());
        EXPECT(0x3b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd956));
        // C9 0166
        gbc.setState(0x969b, 0xd19b, 0xdf50, 0xe5cc, 0x1ba3, 0xf951, 0x1, 0x1);
        gbc.writeMem(0x969b, { 0xc9 });
        gbc.writeMem(0xd19b, { 0xcd, 0xbe });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd19d, gbc.sp());
        EXPECT(0xbecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x969b));
        EXPECT(0xcd, gbc.readMem(0xd19b));
        EXPECT(0xbe, gbc.readMem(0xd19c));
        // C9 0167
        gbc.setState(0xecff, 0x3874, 0xbcc0, 0x2ff1, 0x91fe, 0x611, 0x1, 0x1);
        gbc.writeMem(0x3874, { 0x6a, 0x24 });
        gbc.writeMem(0xecff, { 0xc9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0x246a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xecff));
        // C9 0168
        gbc.setState(0x4261, 0x53e0, 0xd400, 0x960c, 0xc125, 0xe6dc, 0x1, 0x0);
        gbc.writeMem(0x4261, { 0xc9 });
        gbc.writeMem(0x53e0, { 0xa7, 0xf5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x53e2, gbc.sp());
        EXPECT(0xf5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0169
        gbc.setState(0x8870, 0x2223, 0xbb00, 0xf95d, 0x9267, 0xc49e, 0x0, 0x0);
        gbc.writeMem(0x2223, { 0xf0, 0x3e });
        gbc.writeMem(0x8870, { 0xc9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2225, gbc.sp());
        EXPECT(0x3ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8870));
        // C9 016B
        gbc.setState(0x19fe, 0x367c, 0x7c30, 0xb607, 0xc3c8, 0x29cd, 0x0, 0x0);
        gbc.writeMem(0x19fe, { 0xc9 });
        gbc.writeMem(0x367c, { 0xcd, 0xf9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x367e, gbc.sp());
        EXPECT(0xf9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 016C
        gbc.setState(0x3cc1, 0x1a14, 0x7da0, 0x8c7d, 0xa0e1, 0x8593, 0x1, 0x1);
        gbc.writeMem(0x1a14, { 0x7b, 0xa6 });
        gbc.writeMem(0x3cc1, { 0xc9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1a16, gbc.sp());
        EXPECT(0xa67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 016D
        gbc.setState(0x1eae, 0x43df, 0x4cb0, 0x3d8f, 0x7667, 0x268c, 0x1, 0x1);
        gbc.writeMem(0x1eae, { 0xc9 });
        gbc.writeMem(0x43df, { 0x1f, 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x43e1, gbc.sp());
        EXPECT(0xbd1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 016E
        gbc.setState(0xad06, 0x5ec3, 0x6df0, 0x25f3, 0x616b, 0xf46c, 0x0, 0x0);
        gbc.writeMem(0x5ec3, { 0xcf, 0x23 });
        gbc.writeMem(0xad06, { 0xc9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5ec5, gbc.sp());
        EXPECT(0x23cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xad06));
        // C9 016F
        gbc.setState(0xaeff, 0xae62, 0x9a70, 0x79dd, 0xdf11, 0x2bab, 0x1, 0x1);
        gbc.writeMem(0xae62, { 0x45, 0x96 });
        gbc.writeMem(0xaeff, { 0xc9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xae64, gbc.sp());
        EXPECT(0x9645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xae62));
        EXPECT(0x96, gbc.readMem(0xae63));
        EXPECT(0xc9, gbc.readMem(0xaeff));
        // C9 0170
        gbc.setState(0xef65, 0x544a, 0x3660, 0x582c, 0x8bb0, 0x8967, 0x0, 0x0);
        gbc.writeMem(0x544a, { 0x99, 0x7 });
        gbc.writeMem(0xef65, { 0xc9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x544c, gbc.sp());
        EXPECT(0x799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xef65));
        // C9 0171
        gbc.setState(0xcd11, 0xd891, 0xb2d0, 0xc428, 0xb227, 0xf885, 0x1, 0x0);
        gbc.writeMem(0xcd11, { 0xc9 });
        gbc.writeMem(0xd891, { 0xc4, 0x49 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd893, gbc.sp());
        EXPECT(0x49c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xcd11));
        EXPECT(0xc4, gbc.readMem(0xd891));
        EXPECT(0x49, gbc.readMem(0xd892));
        // C9 0172
        gbc.setState(0x232a, 0xb79e, 0x71c0, 0xde, 0x4136, 0xf35d, 0x0, 0x1);
        gbc.writeMem(0x232a, { 0xc9 });
        gbc.writeMem(0xb79e, { 0xd1, 0x91 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb7a0, gbc.sp());
        EXPECT(0x91d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xb79e));
        EXPECT(0x91, gbc.readMem(0xb79f));
        // C9 0173
        gbc.setState(0x2ffc, 0xa6a1, 0x98c0, 0x86d2, 0x582f, 0x94a1, 0x0, 0x1);
        gbc.writeMem(0x2ffc, { 0xc9 });
        gbc.writeMem(0xa6a1, { 0x9e, 0x5d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa6a3, gbc.sp());
        EXPECT(0x5d9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa6a1));
        EXPECT(0x5d, gbc.readMem(0xa6a2));
        // C9 0174
        gbc.setState(0xd46c, 0x5518, 0x4b20, 0x251d, 0xb787, 0x4e01, 0x1, 0x0);
        gbc.writeMem(0x5518, { 0xd3, 0xb1 });
        gbc.writeMem(0xd46c, { 0xc9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x551a, gbc.sp());
        EXPECT(0xb1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd46c));
        // C9 0175
        gbc.setState(0xda1e, 0x2999, 0x3290, 0x84c2, 0x8b56, 0xd658, 0x0, 0x1);
        gbc.writeMem(0x2999, { 0x70, 0x57 });
        gbc.writeMem(0xda1e, { 0xc9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x299b, gbc.sp());
        EXPECT(0x5770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xda1e));
        // C9 0176
        gbc.setState(0xaa0b, 0xb60f, 0xbdb0, 0x61f4, 0x679, 0xcfb5, 0x0, 0x0);
        gbc.writeMem(0xaa0b, { 0xc9 });
        gbc.writeMem(0xb60f, { 0x2f, 0xd4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb611, gbc.sp());
        EXPECT(0xd42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xaa0b));
        EXPECT(0x2f, gbc.readMem(0xb60f));
        EXPECT(0xd4, gbc.readMem(0xb610));
        // C9 0177
        gbc.setState(0x5caa, 0xa56e, 0x3340, 0x45de, 0x2ae1, 0x8cba, 0x0, 0x1);
        gbc.writeMem(0x5caa, { 0xc9 });
        gbc.writeMem(0xa56e, { 0x32, 0x1a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa570, gbc.sp());
        EXPECT(0x1a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa56e));
        EXPECT(0x1a, gbc.readMem(0xa56f));
        // C9 0178
        gbc.setState(0x1e97, 0xdb9a, 0xb020, 0xecc, 0x6bd2, 0x5dd4, 0x1, 0x1);
        gbc.writeMem(0x1e97, { 0xc9 });
        gbc.writeMem(0xdb9a, { 0x71, 0xa4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdb9c, gbc.sp());
        EXPECT(0xa471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xdb9a));
        EXPECT(0xa4, gbc.readMem(0xdb9b));
        // C9 0179
        gbc.setState(0xac54, 0x44ca, 0x46d0, 0xd83c, 0xd7ad, 0xeb4c, 0x0, 0x0);
        gbc.writeMem(0x44ca, { 0xd3, 0x7e });
        gbc.writeMem(0xac54, { 0xc9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x44cc, gbc.sp());
        EXPECT(0x7ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xac54));
        // C9 017A
        gbc.setState(0x31b7, 0xbb81, 0x7180, 0x9a54, 0x7141, 0x4566, 0x1, 0x0);
        gbc.writeMem(0x31b7, { 0xc9 });
        gbc.writeMem(0xbb81, { 0x3c, 0x73 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbb83, gbc.sp());
        EXPECT(0x733c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbb81));
        EXPECT(0x73, gbc.readMem(0xbb82));
        // C9 017C
        gbc.setState(0x9b82, 0x889a, 0x1960, 0xdac6, 0x42f, 0x1cc5, 0x1, 0x1);
        gbc.writeMem(0x889a, { 0xa2, 0x30 });
        gbc.writeMem(0x9b82, { 0xc9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x889c, gbc.sp());
        EXPECT(0x30a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x889a));
        EXPECT(0x30, gbc.readMem(0x889b));
        EXPECT(0xc9, gbc.readMem(0x9b82));
        // C9 017D
        gbc.setState(0x3e4d, 0x978e, 0x630, 0x8e5a, 0xf42e, 0x9994, 0x0, 0x0);
        gbc.writeMem(0x3e4d, { 0xc9 });
        gbc.writeMem(0x978e, { 0x28, 0x3d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9790, gbc.sp());
        EXPECT(0x3d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x978e));
        EXPECT(0x3d, gbc.readMem(0x978f));
        // C9 017E
        gbc.setState(0x7c77, 0x988, 0xec60, 0xc06b, 0x7127, 0x6356, 0x1, 0x0);
        gbc.writeMem(0x988, { 0xc3, 0xd9 });
        gbc.writeMem(0x7c77, { 0xc9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x98a, gbc.sp());
        EXPECT(0xd9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 017F
        gbc.setState(0x45b6, 0x360e, 0xcd80, 0x7cb0, 0x5965, 0x9386, 0x0, 0x0);
        gbc.writeMem(0x360e, { 0x2a, 0x5e });
        gbc.writeMem(0x45b6, { 0xc9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3610, gbc.sp());
        EXPECT(0x5e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0180
        gbc.setState(0xe93b, 0xd877, 0x4900, 0x826f, 0x4691, 0xdca, 0x0, 0x0);
        gbc.writeMem(0xd877, { 0xf8, 0xfc });
        gbc.writeMem(0xe93b, { 0xc9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd879, gbc.sp());
        EXPECT(0xfcf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd877));
        EXPECT(0xfc, gbc.readMem(0xd878));
        EXPECT(0xc9, gbc.readMem(0xe93b));
        // C9 0181
        gbc.setState(0xb9d1, 0x2e78, 0x1d50, 0xcf91, 0xe8f1, 0x35b4, 0x1, 0x0);
        gbc.writeMem(0x2e78, { 0x98, 0xf6 });
        gbc.writeMem(0xb9d1, { 0xc9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2e7a, gbc.sp());
        EXPECT(0xf698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb9d1));
        // C9 0182
        gbc.setState(0x8d24, 0x68e3, 0x2e00, 0xc248, 0x9d62, 0xabe5, 0x1, 0x0);
        gbc.writeMem(0x68e3, { 0x7, 0xab });
        gbc.writeMem(0x8d24, { 0xc9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x68e5, gbc.sp());
        EXPECT(0xab07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8d24));
        // C9 0183
        gbc.setState(0xb259, 0xcd46, 0x7b30, 0x1dd3, 0xfb2e, 0x54b6, 0x1, 0x1);
        gbc.writeMem(0xb259, { 0xc9 });
        gbc.writeMem(0xcd46, { 0x19, 0xdc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcd48, gbc.sp());
        EXPECT(0xdc19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb259));
        EXPECT(0x19, gbc.readMem(0xcd46));
        EXPECT(0xdc, gbc.readMem(0xcd47));
        // C9 0184
        gbc.setState(0x6327, 0x4534, 0x8b60, 0xa840, 0xad55, 0x5d3f, 0x1, 0x1);
        gbc.writeMem(0x4534, { 0x90, 0x5b });
        gbc.writeMem(0x6327, { 0xc9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4536, gbc.sp());
        EXPECT(0x5b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0185
        gbc.setState(0x3183, 0x5783, 0x57c0, 0xa936, 0x5c98, 0xa63e, 0x1, 0x1);
        gbc.writeMem(0x3183, { 0xc9 });
        gbc.writeMem(0x5783, { 0x0, 0x9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5785, gbc.sp());
        EXPECT(0x900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0186
        gbc.setState(0x5657, 0x491e, 0xc5f0, 0xd8e9, 0x359d, 0xadd2, 0x1, 0x0);
        gbc.writeMem(0x491e, { 0x7c, 0x3d });
        gbc.writeMem(0x5657, { 0xc9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4920, gbc.sp());
        EXPECT(0x3d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0187
        gbc.setState(0x623a, 0xea86, 0x7f40, 0x10fc, 0xbace, 0xe766, 0x0, 0x1);
        gbc.writeMem(0x623a, { 0xc9 });
        gbc.writeMem(0xea86, { 0xed, 0x4f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xea88, gbc.sp());
        EXPECT(0x4fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xea86));
        EXPECT(0x4f, gbc.readMem(0xea87));
        // C9 0188
        gbc.setState(0xa00e, 0x866c, 0xb1a0, 0xa5a1, 0xf6cf, 0x3b69, 0x1, 0x1);
        gbc.writeMem(0x866c, { 0xd9, 0xe6 });
        gbc.writeMem(0xa00e, { 0xc9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x866e, gbc.sp());
        EXPECT(0xe6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x866c));
        EXPECT(0xe6, gbc.readMem(0x866d));
        EXPECT(0xc9, gbc.readMem(0xa00e));
        // C9 0189
        gbc.setState(0x1752, 0x7fdf, 0xec0, 0x844d, 0x2525, 0x850f, 0x1, 0x1);
        gbc.writeMem(0x1752, { 0xc9 });
        gbc.writeMem(0x7fdf, { 0x62, 0x8d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7fe1, gbc.sp());
        EXPECT(0x8d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 018A
        gbc.setState(0x13f1, 0x1e6, 0x7ca0, 0xbc84, 0x6ebf, 0x3ca1, 0x0, 0x1);
        gbc.writeMem(0x1e6, { 0x4e, 0xb1 });
        gbc.writeMem(0x13f1, { 0xc9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1e8, gbc.sp());
        EXPECT(0xb14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 018B
        gbc.setState(0x5172, 0x3a9a, 0x42d0, 0xe2af, 0x6e60, 0xcd1e, 0x1, 0x0);
        gbc.writeMem(0x3a9a, { 0xc4, 0xec });
        gbc.writeMem(0x5172, { 0xc9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3a9c, gbc.sp());
        EXPECT(0xecc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 018C
        gbc.setState(0x4169, 0x99c5, 0x5af0, 0xdd57, 0xc253, 0x1919, 0x0, 0x1);
        gbc.writeMem(0x4169, { 0xc9 });
        gbc.writeMem(0x99c5, { 0x68, 0x41 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x99c7, gbc.sp());
        EXPECT(0x4168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x99c5));
        EXPECT(0x41, gbc.readMem(0x99c6));
        // C9 018D
        gbc.setState(0x71b5, 0xd954, 0x2b60, 0x4f4, 0x2c0c, 0x4761, 0x0, 0x0);
        gbc.writeMem(0x71b5, { 0xc9 });
        gbc.writeMem(0xd954, { 0x49, 0x9b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd956, gbc.sp());
        EXPECT(0x9b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd954));
        EXPECT(0x9b, gbc.readMem(0xd955));
        // C9 018E
        gbc.setState(0xb905, 0xf54b, 0x11b0, 0x47ea, 0x3389, 0x4128, 0x1, 0x0);
        gbc.writeMem(0xb905, { 0xc9 });
        gbc.writeMem(0xf54b, { 0x79, 0x92 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf54d, gbc.sp());
        EXPECT(0x9279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb905));
        EXPECT(0x79, gbc.readMem(0xf54b));
        EXPECT(0x92, gbc.readMem(0xf54c));
        // C9 018F
        gbc.setState(0xbc7d, 0x57e3, 0x6540, 0xc7cf, 0xb20b, 0x3f44, 0x0, 0x1);
        gbc.writeMem(0x57e3, { 0x22, 0xf4 });
        gbc.writeMem(0xbc7d, { 0xc9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x57e5, gbc.sp());
        EXPECT(0xf422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbc7d));
        // C9 0190
        gbc.setState(0x6e8e, 0xfe9d, 0x5f80, 0x130e, 0xc6c8, 0xc376, 0x0, 0x1);
        gbc.writeMem(0x6e8e, { 0xc9 });
        gbc.writeMem(0xfe9d, { 0xb9, 0x6d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfe9f, gbc.sp());
        EXPECT(0x6db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xfe9d));
        EXPECT(0x6d, gbc.readMem(0xfe9e));
        // C9 0191
        gbc.setState(0x1749, 0x50a4, 0x3160, 0x50af, 0x507a, 0x1330, 0x0, 0x1);
        gbc.writeMem(0x1749, { 0xc9 });
        gbc.writeMem(0x50a4, { 0xb9, 0x82 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x50a6, gbc.sp());
        EXPECT(0x82b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0192
        gbc.setState(0x755d, 0xb253, 0x28d0, 0x85ce, 0xb1eb, 0x8a5d, 0x0, 0x1);
        gbc.writeMem(0x755d, { 0xc9 });
        gbc.writeMem(0xb253, { 0x36, 0x30 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb255, gbc.sp());
        EXPECT(0x3036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb253));
        EXPECT(0x30, gbc.readMem(0xb254));
        // C9 0193
        gbc.setState(0x6f58, 0x2194, 0x6700, 0xe9d3, 0x7b5, 0xfb9a, 0x1, 0x0);
        gbc.writeMem(0x2194, { 0x3d, 0x66 });
        gbc.writeMem(0x6f58, { 0xc9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2196, gbc.sp());
        EXPECT(0x663d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0194
        gbc.setState(0x5c92, 0xff87, 0x4200, 0x3939, 0x6470, 0xb656, 0x0, 0x0);
        gbc.writeMem(0x5c92, { 0xc9 });
        gbc.writeMem(0xff87, { 0xb1, 0x49 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xff89, gbc.sp());
        EXPECT(0x49b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xff87));
        EXPECT(0x49, gbc.readMem(0xff88));
        // C9 0195
        gbc.setState(0x5eef, 0xc293, 0x6890, 0xe9e4, 0x3663, 0x481a, 0x0, 0x0);
        gbc.writeMem(0x5eef, { 0xc9 });
        gbc.writeMem(0xc293, { 0x6d, 0xf0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc295, gbc.sp());
        EXPECT(0xf06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc293));
        EXPECT(0xf0, gbc.readMem(0xc294));
        // C9 0196
        gbc.setState(0xc2ec, 0x2ef3, 0x7b60, 0x8d67, 0x66ec, 0x996e, 0x1, 0x0);
        gbc.writeMem(0x2ef3, { 0x99, 0xaa });
        gbc.writeMem(0xc2ec, { 0xc9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2ef5, gbc.sp());
        EXPECT(0xaa99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc2ec));
        // C9 0197
        gbc.setState(0x91ae, 0xb3b5, 0x1b0, 0xd53c, 0x899a, 0x323f, 0x1, 0x1);
        gbc.writeMem(0x91ae, { 0xc9 });
        gbc.writeMem(0xb3b5, { 0x24, 0xd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb3b7, gbc.sp());
        EXPECT(0xd24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x91ae));
        EXPECT(0x24, gbc.readMem(0xb3b5));
        EXPECT(0xd, gbc.readMem(0xb3b6));
        // C9 0198
        gbc.setState(0xd708, 0xc22, 0x23f0, 0x672, 0xc5d9, 0x2069, 0x1, 0x0);
        gbc.writeMem(0xc22, { 0x8e, 0xab });
        gbc.writeMem(0xd708, { 0xc9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc24, gbc.sp());
        EXPECT(0xab8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd708));
        // C9 0199
        gbc.setState(0x5595, 0x4e8b, 0x99c0, 0x2c52, 0xcbca, 0x173e, 0x0, 0x1);
        gbc.writeMem(0x4e8b, { 0x6c, 0x5c });
        gbc.writeMem(0x5595, { 0xc9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4e8d, gbc.sp());
        EXPECT(0x5c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 019B
        gbc.setState(0x6c6c, 0xd2a9, 0x2a40, 0xd158, 0x35dc, 0x424a, 0x1, 0x0);
        gbc.writeMem(0x6c6c, { 0xc9 });
        gbc.writeMem(0xd2a9, { 0xd9, 0x79 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd2ab, gbc.sp());
        EXPECT(0x79d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd2a9));
        EXPECT(0x79, gbc.readMem(0xd2aa));
        // C9 019C
        gbc.setState(0xa30f, 0x22b1, 0x40a0, 0xa83a, 0xac62, 0x36a7, 0x1, 0x1);
        gbc.writeMem(0x22b1, { 0x75, 0x8 });
        gbc.writeMem(0xa30f, { 0xc9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x22b3, gbc.sp());
        EXPECT(0x875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa30f));
        // C9 019D
        gbc.setState(0xc166, 0xcd0f, 0xba90, 0x6db, 0x1c9f, 0xa7a7, 0x0, 0x1);
        gbc.writeMem(0xc166, { 0xc9 });
        gbc.writeMem(0xcd0f, { 0x69, 0xee });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcd11, gbc.sp());
        EXPECT(0xee69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc166));
        EXPECT(0x69, gbc.readMem(0xcd0f));
        EXPECT(0xee, gbc.readMem(0xcd10));
        // C9 019E
        gbc.setState(0x638c, 0x785f, 0xc160, 0x449c, 0x2b5d, 0xf04e, 0x1, 0x1);
        gbc.writeMem(0x638c, { 0xc9 });
        gbc.writeMem(0x785f, { 0x63, 0x75 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7861, gbc.sp());
        EXPECT(0x7563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 019F
        gbc.setState(0xc527, 0xe263, 0x2f60, 0x5647, 0x6865, 0xbae0, 0x1, 0x1);
        gbc.writeMem(0xc527, { 0xc9 });
        gbc.writeMem(0xe263, { 0x87, 0x7c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe265, gbc.sp());
        EXPECT(0x7c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc527));
        EXPECT(0x87, gbc.readMem(0xe263));
        EXPECT(0x7c, gbc.readMem(0xe264));
        // C9 01A0
        gbc.setState(0x70c0, 0x23f4, 0xa520, 0x243a, 0xc0bf, 0x8aa5, 0x1, 0x1);
        gbc.writeMem(0x23f4, { 0x19, 0x38 });
        gbc.writeMem(0x70c0, { 0xc9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x23f6, gbc.sp());
        EXPECT(0x3819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 01A1
        gbc.setState(0x106b, 0x2f15, 0x9030, 0x7e32, 0xdb2b, 0x558d, 0x0, 0x1);
        gbc.writeMem(0x106b, { 0xc9 });
        gbc.writeMem(0x2f15, { 0xbe, 0x20 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2f17, gbc.sp());
        EXPECT(0x20be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01A2
        gbc.setState(0xc0e1, 0xf8a6, 0xe550, 0xdd5d, 0xad2c, 0xae7a, 0x1, 0x0);
        gbc.writeMem(0xc0e1, { 0xc9 });
        gbc.writeMem(0xf8a6, { 0x50, 0x48 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf8a8, gbc.sp());
        EXPECT(0x4850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc0e1));
        EXPECT(0x50, gbc.readMem(0xf8a6));
        EXPECT(0x48, gbc.readMem(0xf8a7));
        // C9 01A3
        gbc.setState(0x91b9, 0xd471, 0xa460, 0x81c6, 0xa61c, 0x19c8, 0x1, 0x1);
        gbc.writeMem(0x91b9, { 0xc9 });
        gbc.writeMem(0xd471, { 0xc0, 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd473, gbc.sp());
        EXPECT(0x9bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x91b9));
        EXPECT(0xc0, gbc.readMem(0xd471));
        EXPECT(0x9b, gbc.readMem(0xd472));
        // C9 01A5
        gbc.setState(0xe5fd, 0xe6e8, 0x3ae0, 0x2d27, 0x34b9, 0xcec0, 0x0, 0x0);
        gbc.writeMem(0xe5fd, { 0xc9 });
        gbc.writeMem(0xe6e8, { 0xea, 0x80 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe6ea, gbc.sp());
        EXPECT(0x80ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe5fd));
        EXPECT(0xea, gbc.readMem(0xe6e8));
        EXPECT(0x80, gbc.readMem(0xe6e9));
        // C9 01A6
        gbc.setState(0xaa96, 0xce24, 0x2c60, 0x6609, 0xb599, 0xd38b, 0x1, 0x0);
        gbc.writeMem(0xaa96, { 0xc9 });
        gbc.writeMem(0xce24, { 0x84, 0x3f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xce26, gbc.sp());
        EXPECT(0x3f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xaa96));
        EXPECT(0x84, gbc.readMem(0xce24));
        EXPECT(0x3f, gbc.readMem(0xce25));
        // C9 01A7
        gbc.setState(0x656c, 0xdae6, 0x9570, 0x162f, 0xf6ce, 0x680a, 0x1, 0x1);
        gbc.writeMem(0x656c, { 0xc9 });
        gbc.writeMem(0xdae6, { 0xef, 0x78 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdae8, gbc.sp());
        EXPECT(0x78ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xdae6));
        EXPECT(0x78, gbc.readMem(0xdae7));
        // C9 01A8
        gbc.setState(0x55dd, 0xbcf9, 0xaa0, 0x3260, 0x8d8, 0xb3a9, 0x0, 0x1);
        gbc.writeMem(0x55dd, { 0xc9 });
        gbc.writeMem(0xbcf9, { 0x65, 0xae });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbcfb, gbc.sp());
        EXPECT(0xae65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbcf9));
        EXPECT(0xae, gbc.readMem(0xbcfa));
        // C9 01A9
        gbc.setState(0x8b54, 0xfcfc, 0x9650, 0x1568, 0x4f58, 0xb60d, 0x1, 0x0);
        gbc.writeMem(0x8b54, { 0xc9 });
        gbc.writeMem(0xfcfc, { 0xb7, 0xf6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfcfe, gbc.sp());
        EXPECT(0xf6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8b54));
        EXPECT(0xb7, gbc.readMem(0xfcfc));
        EXPECT(0xf6, gbc.readMem(0xfcfd));
        // C9 01AA
        gbc.setState(0x368f, 0x5f86, 0xc230, 0x4d19, 0x329e, 0x50c2, 0x1, 0x1);
        gbc.writeMem(0x368f, { 0xc9 });
        gbc.writeMem(0x5f86, { 0xa8, 0x13 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5f88, gbc.sp());
        EXPECT(0x13a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01AB
        gbc.setState(0xa088, 0xa36c, 0x6e70, 0x3743, 0x614a, 0xb33d, 0x0, 0x1);
        gbc.writeMem(0xa088, { 0xc9 });
        gbc.writeMem(0xa36c, { 0x33, 0xf8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa36e, gbc.sp());
        EXPECT(0xf833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa088));
        EXPECT(0x33, gbc.readMem(0xa36c));
        EXPECT(0xf8, gbc.readMem(0xa36d));
        // C9 01AC
        gbc.setState(0x4ce2, 0x1608, 0x6b90, 0x5685, 0x4960, 0xfe90, 0x1, 0x1);
        gbc.writeMem(0x1608, { 0xc1, 0xb2 });
        gbc.writeMem(0x4ce2, { 0xc9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x160a, gbc.sp());
        EXPECT(0xb2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01AD
        gbc.setState(0xe49e, 0xf656, 0x29f0, 0xfcf0, 0x54d4, 0x2efe, 0x0, 0x0);
        gbc.writeMem(0xe49e, { 0xc9 });
        gbc.writeMem(0xf656, { 0x36, 0x70 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf658, gbc.sp());
        EXPECT(0x7036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe49e));
        EXPECT(0x36, gbc.readMem(0xf656));
        EXPECT(0x70, gbc.readMem(0xf657));
        // C9 01AE
        gbc.setState(0x87b4, 0xddb4, 0xbd10, 0xecbe, 0x18a2, 0xd86f, 0x0, 0x1);
        gbc.writeMem(0x87b4, { 0xc9 });
        gbc.writeMem(0xddb4, { 0x1b, 0xf6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xddb6, gbc.sp());
        EXPECT(0xf61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x87b4));
        EXPECT(0x1b, gbc.readMem(0xddb4));
        EXPECT(0xf6, gbc.readMem(0xddb5));
        // C9 01AF
        gbc.setState(0x81e1, 0xe00a, 0x76f0, 0x7c41, 0xc434, 0x67c4, 0x1, 0x0);
        gbc.writeMem(0x81e1, { 0xc9 });
        gbc.writeMem(0xe00a, { 0x77, 0xa1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe00c, gbc.sp());
        EXPECT(0xa177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x81e1));
        EXPECT(0x77, gbc.readMem(0xe00a));
        EXPECT(0xa1, gbc.readMem(0xe00b));
        // C9 01B0
        gbc.setState(0xacc2, 0x98f7, 0xab70, 0x98d9, 0x9cbe, 0x1f81, 0x0, 0x0);
        gbc.writeMem(0x98f7, { 0xb, 0x25 });
        gbc.writeMem(0xacc2, { 0xc9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x98f9, gbc.sp());
        EXPECT(0x250b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x98f7));
        EXPECT(0x25, gbc.readMem(0x98f8));
        EXPECT(0xc9, gbc.readMem(0xacc2));
        // C9 01B2
        gbc.setState(0x71b2, 0xa35f, 0xa5f0, 0x932d, 0x7ff1, 0x94ae, 0x0, 0x1);
        gbc.writeMem(0x71b2, { 0xc9 });
        gbc.writeMem(0xa35f, { 0x18, 0x2d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa361, gbc.sp());
        EXPECT(0x2d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa35f));
        EXPECT(0x2d, gbc.readMem(0xa360));
        // C9 01B3
        gbc.setState(0x2fde, 0xaeb3, 0xce80, 0xea40, 0x4ae8, 0xc773, 0x1, 0x0);
        gbc.writeMem(0x2fde, { 0xc9 });
        gbc.writeMem(0xaeb3, { 0x7b, 0x25 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xaeb5, gbc.sp());
        EXPECT(0x257b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xaeb3));
        EXPECT(0x25, gbc.readMem(0xaeb4));
        // C9 01B4
        gbc.setState(0x22c2, 0x8280, 0x8ce0, 0x2f3c, 0x853f, 0x3e10, 0x1, 0x0);
        gbc.writeMem(0x22c2, { 0xc9 });
        gbc.writeMem(0x8280, { 0x13, 0xb8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8282, gbc.sp());
        EXPECT(0xb813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8280));
        EXPECT(0xb8, gbc.readMem(0x8281));
        // C9 01B5
        gbc.setState(0x5bc9, 0xe68f, 0x1030, 0xa3c2, 0x42c2, 0x1e9d, 0x1, 0x1);
        gbc.writeMem(0x5bc9, { 0xc9 });
        gbc.writeMem(0xe68f, { 0xc7, 0x62 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe691, gbc.sp());
        EXPECT(0x62c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xe68f));
        EXPECT(0x62, gbc.readMem(0xe690));
        // C9 01B7
        gbc.setState(0x263, 0x6015, 0x4bc0, 0xf9b4, 0xf6ed, 0xdceb, 0x1, 0x1);
        gbc.writeMem(0x263, { 0xc9 });
        gbc.writeMem(0x6015, { 0x1d, 0xa5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6017, gbc.sp());
        EXPECT(0xa51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 01B8
        gbc.setState(0x3144, 0x9c21, 0x7540, 0xd42c, 0x4733, 0xe320, 0x1, 0x0);
        gbc.writeMem(0x3144, { 0xc9 });
        gbc.writeMem(0x9c21, { 0x81, 0xe4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9c23, gbc.sp());
        EXPECT(0xe481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9c21));
        EXPECT(0xe4, gbc.readMem(0x9c22));
        // C9 01B9
        gbc.setState(0xe4ab, 0x5a50, 0x41e0, 0xe1dd, 0xb944, 0x8b18, 0x0, 0x0);
        gbc.writeMem(0x5a50, { 0xb3, 0x35 });
        gbc.writeMem(0xe4ab, { 0xc9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5a52, gbc.sp());
        EXPECT(0x35b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe4ab));
        // C9 01BA
        gbc.setState(0x5496, 0x99fb, 0xeb70, 0x1301, 0x9802, 0x95bd, 0x1, 0x1);
        gbc.writeMem(0x5496, { 0xc9 });
        gbc.writeMem(0x99fb, { 0x75, 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x99fd, gbc.sp());
        EXPECT(0xac75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x99fb));
        EXPECT(0xac, gbc.readMem(0x99fc));
        // C9 01BB
        gbc.setState(0x3d9e, 0x253b, 0x6650, 0x3c8c, 0xa3ec, 0xc7ef, 0x1, 0x0);
        gbc.writeMem(0x253b, { 0x1c, 0xa6 });
        gbc.writeMem(0x3d9e, { 0xc9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x253d, gbc.sp());
        EXPECT(0xa61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01BC
        gbc.setState(0x7be, 0x607d, 0xfa70, 0xe5ed, 0x506e, 0xf4b0, 0x0, 0x1);
        gbc.writeMem(0x7be, { 0xc9 });
        gbc.writeMem(0x607d, { 0xc, 0xcb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x607f, gbc.sp());
        EXPECT(0xcb0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01BD
        gbc.setState(0xef8a, 0xc90b, 0x6e10, 0x61b8, 0xfae1, 0x8cc8, 0x1, 0x0);
        gbc.writeMem(0xc90b, { 0x36, 0xef });
        gbc.writeMem(0xef8a, { 0xc9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc90d, gbc.sp());
        EXPECT(0xef36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc90b));
        EXPECT(0xef, gbc.readMem(0xc90c));
        EXPECT(0xc9, gbc.readMem(0xef8a));
        // C9 01BE
        gbc.setState(0x81d0, 0x9bc2, 0x3810, 0x338b, 0x1cd2, 0x590a, 0x0, 0x0);
        gbc.writeMem(0x81d0, { 0xc9 });
        gbc.writeMem(0x9bc2, { 0xb0, 0x9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9bc4, gbc.sp());
        EXPECT(0x9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x81d0));
        EXPECT(0xb0, gbc.readMem(0x9bc2));
        EXPECT(0x9, gbc.readMem(0x9bc3));
        // C9 01BF
        gbc.setState(0x131a, 0xed68, 0x1530, 0x327b, 0x8136, 0x8831, 0x0, 0x0);
        gbc.writeMem(0x131a, { 0xc9 });
        gbc.writeMem(0xed68, { 0xc3, 0x51 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xed6a, gbc.sp());
        EXPECT(0x51c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xed68));
        EXPECT(0x51, gbc.readMem(0xed69));
        // C9 01C0
        gbc.setState(0x9e76, 0x8280, 0xa5c0, 0x28d1, 0x890c, 0xcdb7, 0x1, 0x1);
        gbc.writeMem(0x8280, { 0x13, 0xb8 });
        gbc.writeMem(0x9e76, { 0xc9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8282, gbc.sp());
        EXPECT(0xb813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8280));
        EXPECT(0xb8, gbc.readMem(0x8281));
        EXPECT(0xc9, gbc.readMem(0x9e76));
        // C9 01C1
        gbc.setState(0x957d, 0xf19a, 0xb300, 0xd213, 0x74d7, 0xfe6d, 0x1, 0x1);
        gbc.writeMem(0x957d, { 0xc9 });
        gbc.writeMem(0xf19a, { 0x38, 0x5a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf19c, gbc.sp());
        EXPECT(0x5a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x957d));
        EXPECT(0x38, gbc.readMem(0xf19a));
        EXPECT(0x5a, gbc.readMem(0xf19b));
        // C9 01C2
        gbc.setState(0xb79, 0x6ae9, 0x7ad0, 0xe8b2, 0x9c2d, 0x9b09, 0x1, 0x0);
        gbc.writeMem(0xb79, { 0xc9 });
        gbc.writeMem(0x6ae9, { 0x7f, 0x64 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6aeb, gbc.sp());
        EXPECT(0x647f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01C3
        gbc.setState(0x949, 0x65f1, 0xf960, 0x5f00, 0x8d74, 0x774f, 0x0, 0x1);
        gbc.writeMem(0x949, { 0xc9 });
        gbc.writeMem(0x65f1, { 0xcc, 0xd3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x65f3, gbc.sp());
        EXPECT(0xd3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 01C4
        gbc.setState(0x95b, 0x4624, 0x1540, 0xb274, 0xa5e0, 0x4422, 0x1, 0x0);
        gbc.writeMem(0x95b, { 0xc9 });
        gbc.writeMem(0x4624, { 0x79, 0x46 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4626, gbc.sp());
        EXPECT(0x4679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 01C5
        gbc.setState(0x5a1b, 0xa646, 0x1710, 0x10be, 0xb055, 0x9247, 0x0, 0x1);
        gbc.writeMem(0x5a1b, { 0xc9 });
        gbc.writeMem(0xa646, { 0xa, 0x40 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa648, gbc.sp());
        EXPECT(0x400a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa646));
        EXPECT(0x40, gbc.readMem(0xa647));
        // C9 01C6
        gbc.setState(0x4b24, 0x2a4c, 0xeb10, 0x8319, 0x5a62, 0xf819, 0x1, 0x1);
        gbc.writeMem(0x2a4c, { 0x63, 0xa9 });
        gbc.writeMem(0x4b24, { 0xc9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2a4e, gbc.sp());
        EXPECT(0xa963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01C7
        gbc.setState(0x4870, 0x7c52, 0xd210, 0x82e, 0xcefa, 0x13a5, 0x0, 0x1);
        gbc.writeMem(0x4870, { 0xc9 });
        gbc.writeMem(0x7c52, { 0x5d, 0x20 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7c54, gbc.sp());
        EXPECT(0x205d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01C9
        gbc.setState(0x23c6, 0x1d3f, 0x8450, 0x8156, 0xc6a3, 0x8bae, 0x0, 0x0);
        gbc.writeMem(0x1d3f, { 0xb3, 0x86 });
        gbc.writeMem(0x23c6, { 0xc9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1d41, gbc.sp());
        EXPECT(0x86b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01CA
        gbc.setState(0xd986, 0x66be, 0xdfc0, 0x2b0d, 0x5dd, 0x425e, 0x1, 0x0);
        gbc.writeMem(0x66be, { 0x47, 0x3e });
        gbc.writeMem(0xd986, { 0xc9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x66c0, gbc.sp());
        EXPECT(0x3e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd986));
        // C9 01CB
        gbc.setState(0x8247, 0x30b5, 0x6930, 0x344c, 0x2619, 0x652f, 0x1, 0x1);
        gbc.writeMem(0x30b5, { 0x42, 0xb5 });
        gbc.writeMem(0x8247, { 0xc9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x30b7, gbc.sp());
        EXPECT(0xb542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8247));
        // C9 01CC
        gbc.setState(0xb4bc, 0x1e77, 0x8800, 0xb233, 0xb139, 0x194, 0x0, 0x0);
        gbc.writeMem(0x1e77, { 0x8f, 0xd9 });
        gbc.writeMem(0xb4bc, { 0xc9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1e79, gbc.sp());
        EXPECT(0xd98f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb4bc));
        // C9 01CD
        gbc.setState(0x271a, 0xc7f3, 0xc640, 0x1c76, 0xb74, 0x9cb8, 0x1, 0x1);
        gbc.writeMem(0x271a, { 0xc9 });
        gbc.writeMem(0xc7f3, { 0xfc, 0x22 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc7f5, gbc.sp());
        EXPECT(0x22fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xc7f3));
        EXPECT(0x22, gbc.readMem(0xc7f4));
        // C9 01CE
        gbc.setState(0x74a4, 0xe791, 0xc210, 0x58fa, 0xe4c6, 0xf6a8, 0x1, 0x1);
        gbc.writeMem(0x74a4, { 0xc9 });
        gbc.writeMem(0xe791, { 0x25, 0x73 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe793, gbc.sp());
        EXPECT(0x7325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe791));
        EXPECT(0x73, gbc.readMem(0xe792));
        // C9 01CF
        gbc.setState(0xb76, 0x6039, 0x2e10, 0xcb3b, 0xeba1, 0x4115, 0x0, 0x0);
        gbc.writeMem(0xb76, { 0xc9 });
        gbc.writeMem(0x6039, { 0xc8, 0xe0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x603b, gbc.sp());
        EXPECT(0xe0c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01D0
        gbc.setState(0xd9c3, 0x7786, 0x7880, 0x379e, 0xada7, 0xa483, 0x0, 0x1);
        gbc.writeMem(0x7786, { 0x57, 0x92 });
        gbc.writeMem(0xd9c3, { 0xc9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7788, gbc.sp());
        EXPECT(0x9257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd9c3));
        // C9 01D2
        gbc.setState(0x74f6, 0x3ad, 0xfaa0, 0xc230, 0x46c2, 0xde5b, 0x1, 0x0);
        gbc.writeMem(0x3ad, { 0xbf, 0xed });
        gbc.writeMem(0x74f6, { 0xc9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3af, gbc.sp());
        EXPECT(0xedbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 01D3
        gbc.setState(0x17fa, 0x5957, 0x9990, 0x259c, 0x926e, 0xa68, 0x0, 0x1);
        gbc.writeMem(0x17fa, { 0xc9 });
        gbc.writeMem(0x5957, { 0x42, 0xd4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5959, gbc.sp());
        EXPECT(0xd442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01D4
        gbc.setState(0x31ac, 0x6467, 0x29b0, 0xa77d, 0xf7e6, 0x460b, 0x1, 0x1);
        gbc.writeMem(0x31ac, { 0xc9 });
        gbc.writeMem(0x6467, { 0x7d, 0xc6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6469, gbc.sp());
        EXPECT(0xc67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01D6
        gbc.setState(0x8251, 0x10d2, 0x2e50, 0xfbd1, 0xd77d, 0x8b58, 0x1, 0x0);
        gbc.writeMem(0x10d2, { 0x86, 0xdb });
        gbc.writeMem(0x8251, { 0xc9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x10d4, gbc.sp());
        EXPECT(0xdb86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8251));
        // C9 01D8
        gbc.setState(0x86e4, 0x21df, 0x4d80, 0x33c6, 0xec5b, 0xedcd, 0x0, 0x1);
        gbc.writeMem(0x21df, { 0xc1, 0x13 });
        gbc.writeMem(0x86e4, { 0xc9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x21e1, gbc.sp());
        EXPECT(0x13c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x86e4));
        // C9 01D9
        gbc.setState(0x1c71, 0xd49d, 0x8c40, 0x4861, 0x50ea, 0x8d86, 0x1, 0x0);
        gbc.writeMem(0x1c71, { 0xc9 });
        gbc.writeMem(0xd49d, { 0xee, 0x81 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd49f, gbc.sp());
        EXPECT(0x81ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xd49d));
        EXPECT(0x81, gbc.readMem(0xd49e));
        // C9 01DA
        gbc.setState(0x5ff7, 0x896b, 0x30e0, 0x2695, 0x14b9, 0x2d, 0x0, 0x0);
        gbc.writeMem(0x5ff7, { 0xc9 });
        gbc.writeMem(0x896b, { 0x43, 0xe7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x896d, gbc.sp());
        EXPECT(0xe743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x896b));
        EXPECT(0xe7, gbc.readMem(0x896c));
        // C9 01DB
        gbc.setState(0x9154, 0x5b6f, 0xb440, 0x861b, 0xae8e, 0x8565, 0x1, 0x1);
        gbc.writeMem(0x5b6f, { 0xaf, 0x14 });
        gbc.writeMem(0x9154, { 0xc9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5b71, gbc.sp());
        EXPECT(0x14af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9154));
        // C9 01DC
        gbc.setState(0x6b2c, 0xbe47, 0xf0b0, 0xf580, 0x4151, 0x1835, 0x1, 0x1);
        gbc.writeMem(0x6b2c, { 0xc9 });
        gbc.writeMem(0xbe47, { 0x14, 0x3b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbe49, gbc.sp());
        EXPECT(0x3b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbe47));
        EXPECT(0x3b, gbc.readMem(0xbe48));
        // C9 01DE
        gbc.setState(0x9b76, 0xc08d, 0x87f0, 0x2c2a, 0x61d1, 0xa6d2, 0x1, 0x0);
        gbc.writeMem(0x9b76, { 0xc9 });
        gbc.writeMem(0xc08d, { 0xa6, 0xd2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc08f, gbc.sp());
        EXPECT(0xd2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9b76));
        EXPECT(0xa6, gbc.readMem(0xc08d));
        EXPECT(0xd2, gbc.readMem(0xc08e));
        // C9 01DF
        gbc.setState(0x4db7, 0xa43, 0x8aa0, 0xa23c, 0xfe6, 0xeafc, 0x1, 0x0);
        gbc.writeMem(0xa43, { 0x76, 0x82 });
        gbc.writeMem(0x4db7, { 0xc9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa45, gbc.sp());
        EXPECT(0x8276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 01E0
        gbc.setState(0x68f8, 0x4ae0, 0x2100, 0xdc83, 0x4586, 0xa993, 0x0, 0x0);
        gbc.writeMem(0x4ae0, { 0xfd, 0x6f });
        gbc.writeMem(0x68f8, { 0xc9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4ae2, gbc.sp());
        EXPECT(0x6ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 01E1
        gbc.setState(0x174e, 0xcc7b, 0x5b90, 0xb9b0, 0x5a2b, 0xd584, 0x0, 0x0);
        gbc.writeMem(0x174e, { 0xc9 });
        gbc.writeMem(0xcc7b, { 0x2c, 0x39 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcc7d, gbc.sp());
        EXPECT(0x392c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcc7b));
        EXPECT(0x39, gbc.readMem(0xcc7c));
        // C9 01E2
        gbc.setState(0xb770, 0xf8cb, 0xf960, 0x2ae3, 0xe9a7, 0x5967, 0x1, 0x1);
        gbc.writeMem(0xb770, { 0xc9 });
        gbc.writeMem(0xf8cb, { 0x2a, 0x57 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf8cd, gbc.sp());
        EXPECT(0x572a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb770));
        EXPECT(0x2a, gbc.readMem(0xf8cb));
        EXPECT(0x57, gbc.readMem(0xf8cc));
        // C9 01E3
        gbc.setState(0xd23, 0x55ad, 0xa220, 0x506, 0x95fe, 0x9b9d, 0x0, 0x0);
        gbc.writeMem(0xd23, { 0xc9 });
        gbc.writeMem(0x55ad, { 0x49, 0xc5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x55af, gbc.sp());
        EXPECT(0xc549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 01E4
        gbc.setState(0xd063, 0xa5c1, 0x1520, 0x8480, 0x4557, 0x7d32, 0x1, 0x1);
        gbc.writeMem(0xa5c1, { 0x16, 0x79 });
        gbc.writeMem(0xd063, { 0xc9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa5c3, gbc.sp());
        EXPECT(0x7916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa5c1));
        EXPECT(0x79, gbc.readMem(0xa5c2));
        EXPECT(0xc9, gbc.readMem(0xd063));
        // C9 01E5
        gbc.setState(0x94da, 0xf7d0, 0xbf10, 0xc21b, 0xbcf7, 0x159, 0x0, 0x1);
        gbc.writeMem(0x94da, { 0xc9 });
        gbc.writeMem(0xf7d0, { 0x2a, 0x8d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf7d2, gbc.sp());
        EXPECT(0x8d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x94da));
        EXPECT(0x2a, gbc.readMem(0xf7d0));
        EXPECT(0x8d, gbc.readMem(0xf7d1));
        // C9 01E6
        gbc.setState(0x3df0, 0x41e1, 0x5190, 0x83ae, 0x4491, 0x5893, 0x1, 0x1);
        gbc.writeMem(0x3df0, { 0xc9 });
        gbc.writeMem(0x41e1, { 0xd7, 0xf4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x41e3, gbc.sp());
        EXPECT(0xf4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01E7
        gbc.setState(0xb8e7, 0xadd0, 0x7290, 0x2007, 0x563d, 0x7c0f, 0x0, 0x1);
        gbc.writeMem(0xadd0, { 0x36, 0xca });
        gbc.writeMem(0xb8e7, { 0xc9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xadd2, gbc.sp());
        EXPECT(0xca36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xadd0));
        EXPECT(0xca, gbc.readMem(0xadd1));
        EXPECT(0xc9, gbc.readMem(0xb8e7));
        // C9 01E8
        gbc.setState(0xe565, 0x88fe, 0xfc20, 0xd669, 0x13a2, 0x1948, 0x0, 0x0);
        gbc.writeMem(0x88fe, { 0xe8, 0x4e });
        gbc.writeMem(0xe565, { 0xc9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8900, gbc.sp());
        EXPECT(0x4ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x88fe));
        EXPECT(0x4e, gbc.readMem(0x88ff));
        EXPECT(0xc9, gbc.readMem(0xe565));
        // C9 01E9
        gbc.setState(0x59c6, 0xbcb6, 0x6af0, 0xf705, 0xfec4, 0x7fc5, 0x1, 0x0);
        gbc.writeMem(0x59c6, { 0xc9 });
        gbc.writeMem(0xbcb6, { 0xa4, 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbcb8, gbc.sp());
        EXPECT(0x6aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbcb6));
        EXPECT(0x6a, gbc.readMem(0xbcb7));
        // C9 01EA
        gbc.setState(0x1503, 0x82fd, 0xbcb0, 0xd73c, 0xb701, 0x78b9, 0x0, 0x0);
        gbc.writeMem(0x1503, { 0xc9 });
        gbc.writeMem(0x82fd, { 0x7a, 0x88 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x82ff, gbc.sp());
        EXPECT(0x887a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x82fd));
        EXPECT(0x88, gbc.readMem(0x82fe));
        // C9 01EB
        gbc.setState(0x1d03, 0x4f4c, 0xa800, 0xa032, 0x4bb, 0x3ae0, 0x1, 0x0);
        gbc.writeMem(0x1d03, { 0xc9 });
        gbc.writeMem(0x4f4c, { 0xce, 0xa9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4f4e, gbc.sp());
        EXPECT(0xa9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 01EC
        gbc.setState(0x8c8, 0x94d2, 0x8050, 0xd1f6, 0xb71a, 0xe428, 0x0, 0x0);
        gbc.writeMem(0x8c8, { 0xc9 });
        gbc.writeMem(0x94d2, { 0xd0, 0xfc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x94d4, gbc.sp());
        EXPECT(0xfcd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x94d2));
        EXPECT(0xfc, gbc.readMem(0x94d3));
        // C9 01ED
        gbc.setState(0xa4fb, 0x16ce, 0xcb10, 0x5691, 0xdd85, 0xfa27, 0x1, 0x0);
        gbc.writeMem(0x16ce, { 0x6d, 0x53 });
        gbc.writeMem(0xa4fb, { 0xc9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x16d0, gbc.sp());
        EXPECT(0x536d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa4fb));
        // C9 01EE
        gbc.setState(0x6f2, 0xd5d, 0x3170, 0x53, 0x57a4, 0xfb71, 0x1, 0x1);
        gbc.writeMem(0x6f2, { 0xc9 });
        gbc.writeMem(0xd5d, { 0x85, 0x6d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd5f, gbc.sp());
        EXPECT(0x6d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01EF
        gbc.setState(0x44bf, 0xa093, 0x3930, 0x8be2, 0xda5e, 0x53ab, 0x0, 0x1);
        gbc.writeMem(0x44bf, { 0xc9 });
        gbc.writeMem(0xa093, { 0x1, 0x29 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa095, gbc.sp());
        EXPECT(0x2901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xa093));
        EXPECT(0x29, gbc.readMem(0xa094));
        // C9 01F0
        gbc.setState(0x876c, 0x7899, 0x8e0, 0xaa15, 0x92c1, 0xa9e9, 0x0, 0x0);
        gbc.writeMem(0x7899, { 0x38, 0xe4 });
        gbc.writeMem(0x876c, { 0xc9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x789b, gbc.sp());
        EXPECT(0xe438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x876c));
        // C9 01F1
        gbc.setState(0x685d, 0xf29b, 0xf600, 0x1518, 0x4a14, 0xe7f, 0x1, 0x1);
        gbc.writeMem(0x685d, { 0xc9 });
        gbc.writeMem(0xf29b, { 0x88, 0x79 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf29d, gbc.sp());
        EXPECT(0x7988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xf29b));
        EXPECT(0x79, gbc.readMem(0xf29c));
        // C9 01F2
        gbc.setState(0x99fb, 0x297e, 0x2930, 0x2251, 0x232c, 0x1285, 0x0, 0x1);
        gbc.writeMem(0x297e, { 0xee, 0x72 });
        gbc.writeMem(0x99fb, { 0xc9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2980, gbc.sp());
        EXPECT(0x72ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x99fb));
        // C9 01F3
        gbc.setState(0x25de, 0x76e3, 0xc900, 0xef9f, 0xcffe, 0xaeb2, 0x1, 0x0);
        gbc.writeMem(0x25de, { 0xc9 });
        gbc.writeMem(0x76e3, { 0x42, 0x4c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x76e5, gbc.sp());
        EXPECT(0x4c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 01F4
        gbc.setState(0xca3e, 0x653e, 0xe1f0, 0xe989, 0x7b06, 0x6244, 0x0, 0x0);
        gbc.writeMem(0x653e, { 0x13, 0x58 });
        gbc.writeMem(0xca3e, { 0xc9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6540, gbc.sp());
        EXPECT(0x5813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xca3e));
        // C9 01F5
        gbc.setState(0x8ab, 0x7814, 0x5f30, 0x680, 0x276f, 0xcae4, 0x1, 0x1);
        gbc.writeMem(0x8ab, { 0xc9 });
        gbc.writeMem(0x7814, { 0x4, 0xea });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7816, gbc.sp());
        EXPECT(0xea04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01F6
        gbc.setState(0x2d4a, 0x6a93, 0x5bb0, 0xe6a5, 0x3cd2, 0x28aa, 0x0, 0x0);
        gbc.writeMem(0x2d4a, { 0xc9 });
        gbc.writeMem(0x6a93, { 0x80, 0x76 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6a95, gbc.sp());
        EXPECT(0x7680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01F7
        gbc.setState(0xee1a, 0x756f, 0x7520, 0xf7fa, 0x6aec, 0xdd9a, 0x1, 0x1);
        gbc.writeMem(0x756f, { 0x3f, 0x4c });
        gbc.writeMem(0xee1a, { 0xc9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7571, gbc.sp());
        EXPECT(0x4c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xee1a));
        // C9 01F8
        gbc.setState(0xa17d, 0xf120, 0xada0, 0x3901, 0x9260, 0x42e3, 0x0, 0x0);
        gbc.writeMem(0xa17d, { 0xc9 });
        gbc.writeMem(0xf120, { 0x95, 0x97 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf122, gbc.sp());
        EXPECT(0x9795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa17d));
        EXPECT(0x95, gbc.readMem(0xf120));
        EXPECT(0x97, gbc.readMem(0xf121));
        // C9 01F9
        gbc.setState(0xb20e, 0x4e88, 0x7aa0, 0x99fc, 0x176a, 0xb028, 0x1, 0x0);
        gbc.writeMem(0x4e88, { 0x42, 0x9f });
        gbc.writeMem(0xb20e, { 0xc9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4e8a, gbc.sp());
        EXPECT(0x9f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb20e));
        // C9 01FA
        gbc.setState(0xe173, 0xa7ff, 0xf270, 0xca3, 0x5842, 0xe80a, 0x0, 0x0);
        gbc.writeMem(0xa7ff, { 0xb9, 0x54 });
        gbc.writeMem(0xe173, { 0xc9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa801, gbc.sp());
        EXPECT(0x54b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa7ff));
        EXPECT(0x54, gbc.readMem(0xa800));
        EXPECT(0xc9, gbc.readMem(0xe173));
        // C9 01FB
        gbc.setState(0x2b5b, 0x118f, 0xf4f0, 0xad23, 0x26b7, 0x3b78, 0x1, 0x0);
        gbc.writeMem(0x118f, { 0x12, 0x93 });
        gbc.writeMem(0x2b5b, { 0xc9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1191, gbc.sp());
        EXPECT(0x9312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 01FD
        gbc.setState(0x8ca4, 0xe488, 0x83a0, 0xba1d, 0xdefc, 0x5988, 0x1, 0x0);
        gbc.writeMem(0x8ca4, { 0xc9 });
        gbc.writeMem(0xe488, { 0x12, 0x92 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe48a, gbc.sp());
        EXPECT(0x9212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8ca4));
        EXPECT(0x12, gbc.readMem(0xe488));
        EXPECT(0x92, gbc.readMem(0xe489));
        // C9 01FE
        gbc.setState(0x7bbb, 0x4eb9, 0xf800, 0xd97a, 0xc75b, 0x7378, 0x1, 0x1);
        gbc.writeMem(0x4eb9, { 0x21, 0x53 });
        gbc.writeMem(0x7bbb, { 0xc9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4ebb, gbc.sp());
        EXPECT(0x5321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 01FF
        gbc.setState(0x3a73, 0xef9f, 0x3bf0, 0x51f2, 0xf693, 0x26fe, 0x1, 0x0);
        gbc.writeMem(0x3a73, { 0xc9 });
        gbc.writeMem(0xef9f, { 0x4f, 0x98 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xefa1, gbc.sp());
        EXPECT(0x984f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xef9f));
        EXPECT(0x98, gbc.readMem(0xefa0));
        // C9 0200
        gbc.setState(0xc717, 0x28c3, 0x2df0, 0x2efe, 0xdcc0, 0x7efe, 0x0, 0x1);
        gbc.writeMem(0x28c3, { 0xd0, 0x17 });
        gbc.writeMem(0xc717, { 0xc9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x28c5, gbc.sp());
        EXPECT(0x17d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc717));
        // C9 0201
        gbc.setState(0x3732, 0x4bb6, 0x1170, 0xc2d2, 0x85f9, 0xe3bf, 0x0, 0x1);
        gbc.writeMem(0x3732, { 0xc9 });
        gbc.writeMem(0x4bb6, { 0x51, 0xf0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4bb8, gbc.sp());
        EXPECT(0xf051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0202
        gbc.setState(0x9109, 0xeb3, 0xbb40, 0xc89c, 0xf74b, 0xd6b, 0x1, 0x0);
        gbc.writeMem(0xeb3, { 0xc2, 0x3c });
        gbc.writeMem(0x9109, { 0xc9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xeb5, gbc.sp());
        EXPECT(0x3cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9109));
        // C9 0203
        gbc.setState(0xc9e8, 0xcb3b, 0xa5f0, 0x82a3, 0xe44, 0xad4b, 0x1, 0x0);
        gbc.writeMem(0xc9e8, { 0xc9 });
        gbc.writeMem(0xcb3b, { 0x7d, 0x88 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcb3d, gbc.sp());
        EXPECT(0x887d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc9e8));
        EXPECT(0x7d, gbc.readMem(0xcb3b));
        EXPECT(0x88, gbc.readMem(0xcb3c));
        // C9 0204
        gbc.setState(0x84ac, 0xb6d2, 0xeb90, 0x1f4, 0xee17, 0x8d8b, 0x1, 0x1);
        gbc.writeMem(0x84ac, { 0xc9 });
        gbc.writeMem(0xb6d2, { 0x36, 0xdc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb6d4, gbc.sp());
        EXPECT(0xdc36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x84ac));
        EXPECT(0x36, gbc.readMem(0xb6d2));
        EXPECT(0xdc, gbc.readMem(0xb6d3));
        // C9 0205
        gbc.setState(0x4627, 0x6029, 0xf680, 0xaed7, 0xa1dd, 0x889, 0x1, 0x1);
        gbc.writeMem(0x4627, { 0xc9 });
        gbc.writeMem(0x6029, { 0xda, 0x1f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x602b, gbc.sp());
        EXPECT(0x1fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0206
        gbc.setState(0xc310, 0xdb9c, 0xe930, 0x6582, 0x612e, 0x5748, 0x0, 0x0);
        gbc.writeMem(0xc310, { 0xc9 });
        gbc.writeMem(0xdb9c, { 0xea, 0x82 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdb9e, gbc.sp());
        EXPECT(0x82ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc310));
        EXPECT(0xea, gbc.readMem(0xdb9c));
        EXPECT(0x82, gbc.readMem(0xdb9d));
        // C9 0208
        gbc.setState(0x8409, 0x49a1, 0x4810, 0xe6c0, 0x38ab, 0xbfba, 0x0, 0x1);
        gbc.writeMem(0x49a1, { 0x2f, 0x25 });
        gbc.writeMem(0x8409, { 0xc9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x49a3, gbc.sp());
        EXPECT(0x252f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8409));
        // C9 0209
        gbc.setState(0x781a, 0x46c5, 0xe620, 0x1f3c, 0x16d7, 0x6074, 0x0, 0x1);
        gbc.writeMem(0x46c5, { 0x16, 0x57 });
        gbc.writeMem(0x781a, { 0xc9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x46c7, gbc.sp());
        EXPECT(0x5716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 020A
        gbc.setState(0xeff1, 0xe8f3, 0x81a0, 0x6c4d, 0x4c47, 0xb777, 0x0, 0x0);
        gbc.writeMem(0xe8f3, { 0x92, 0xa });
        gbc.writeMem(0xeff1, { 0xc9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe8f5, gbc.sp());
        EXPECT(0xa92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe8f3));
        EXPECT(0xa, gbc.readMem(0xe8f4));
        EXPECT(0xc9, gbc.readMem(0xeff1));
        // C9 020B
        gbc.setState(0xa0df, 0xf39a, 0xa290, 0xed55, 0xe04a, 0xb7bc, 0x1, 0x1);
        gbc.writeMem(0xa0df, { 0xc9 });
        gbc.writeMem(0xf39a, { 0xc3, 0x63 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf39c, gbc.sp());
        EXPECT(0x63c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa0df));
        EXPECT(0xc3, gbc.readMem(0xf39a));
        EXPECT(0x63, gbc.readMem(0xf39b));
        // C9 020C
        gbc.setState(0x614d, 0x5847, 0x7660, 0x404a, 0x3686, 0xb0eb, 0x1, 0x1);
        gbc.writeMem(0x5847, { 0xcb, 0x46 });
        gbc.writeMem(0x614d, { 0xc9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5849, gbc.sp());
        EXPECT(0x46cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 020D
        gbc.setState(0x600d, 0xd1b1, 0xd690, 0x56c6, 0xd490, 0xafd0, 0x1, 0x1);
        gbc.writeMem(0x600d, { 0xc9 });
        gbc.writeMem(0xd1b1, { 0x7a, 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd1b3, gbc.sp());
        EXPECT(0x3b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd1b1));
        EXPECT(0x3b, gbc.readMem(0xd1b2));
        // C9 020F
        gbc.setState(0x94cb, 0x6b4c, 0xe9f0, 0x3105, 0xbc1, 0x657c, 0x0, 0x1);
        gbc.writeMem(0x6b4c, { 0x4a, 0xb9 });
        gbc.writeMem(0x94cb, { 0xc9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6b4e, gbc.sp());
        EXPECT(0xb94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x94cb));
        // C9 0210
        gbc.setState(0x5728, 0x884b, 0x150, 0xb90a, 0x5a3a, 0x6e7, 0x1, 0x1);
        gbc.writeMem(0x5728, { 0xc9 });
        gbc.writeMem(0x884b, { 0xc3, 0xcd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x884d, gbc.sp());
        EXPECT(0xcdc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x884b));
        EXPECT(0xcd, gbc.readMem(0x884c));
        // C9 0211
        gbc.setState(0xbe04, 0x726c, 0x67b0, 0x36b6, 0x788e, 0xcf66, 0x0, 0x1);
        gbc.writeMem(0x726c, { 0xf5, 0xec });
        gbc.writeMem(0xbe04, { 0xc9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x726e, gbc.sp());
        EXPECT(0xecf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbe04));
        // C9 0212
        gbc.setState(0x8295, 0xacb5, 0xe520, 0xc1c, 0x50c3, 0xe781, 0x1, 0x1);
        gbc.writeMem(0x8295, { 0xc9 });
        gbc.writeMem(0xacb5, { 0x74, 0xcf });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xacb7, gbc.sp());
        EXPECT(0xcf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8295));
        EXPECT(0x74, gbc.readMem(0xacb5));
        EXPECT(0xcf, gbc.readMem(0xacb6));
        // C9 0213
        gbc.setState(0x27a3, 0x8326, 0x6910, 0x85a, 0x148d, 0xbcd8, 0x1, 0x1);
        gbc.writeMem(0x27a3, { 0xc9 });
        gbc.writeMem(0x8326, { 0xb, 0xf6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8328, gbc.sp());
        EXPECT(0xf60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8326));
        EXPECT(0xf6, gbc.readMem(0x8327));
        // C9 0214
        gbc.setState(0x98ef, 0x5cd9, 0xea50, 0xb342, 0xe12b, 0xdf8c, 0x0, 0x1);
        gbc.writeMem(0x5cd9, { 0xd0, 0x9c });
        gbc.writeMem(0x98ef, { 0xc9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5cdb, gbc.sp());
        EXPECT(0x9cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x98ef));
        // C9 0215
        gbc.setState(0xa3, 0x5b4e, 0x6b20, 0x997e, 0x8b86, 0xf35e, 0x1, 0x1);
        gbc.writeMem(0xa3, { 0xc9 });
        gbc.writeMem(0x5b4e, { 0xfd, 0xd3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5b50, gbc.sp());
        EXPECT(0xd3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0216
        gbc.setState(0x3260, 0x29bf, 0x94f0, 0xc71, 0x55f1, 0xc232, 0x0, 0x1);
        gbc.writeMem(0x29bf, { 0x93, 0x4f });
        gbc.writeMem(0x3260, { 0xc9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x29c1, gbc.sp());
        EXPECT(0x4f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0217
        gbc.setState(0x1c22, 0x8566, 0xe170, 0x197d, 0xb471, 0x4a91, 0x1, 0x1);
        gbc.writeMem(0x1c22, { 0xc9 });
        gbc.writeMem(0x8566, { 0x4f, 0x14 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8568, gbc.sp());
        EXPECT(0x144f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x8566));
        EXPECT(0x14, gbc.readMem(0x8567));
        // C9 0218
        gbc.setState(0xcf20, 0x941f, 0x1fa0, 0x63e6, 0xf2db, 0xa03e, 0x1, 0x0);
        gbc.writeMem(0x941f, { 0x97, 0xd8 });
        gbc.writeMem(0xcf20, { 0xc9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9421, gbc.sp());
        EXPECT(0xd897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x941f));
        EXPECT(0xd8, gbc.readMem(0x9420));
        EXPECT(0xc9, gbc.readMem(0xcf20));
        // C9 0219
        gbc.setState(0x2f59, 0x7890, 0xd950, 0x5644, 0x4e3c, 0x8506, 0x1, 0x1);
        gbc.writeMem(0x2f59, { 0xc9 });
        gbc.writeMem(0x7890, { 0x41, 0x18 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7892, gbc.sp());
        EXPECT(0x1841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 021A
        gbc.setState(0x8a17, 0x414e, 0x8c90, 0x19ae, 0x5dca, 0x3230, 0x0, 0x1);
        gbc.writeMem(0x414e, { 0x1c, 0x18 });
        gbc.writeMem(0x8a17, { 0xc9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4150, gbc.sp());
        EXPECT(0x181c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8a17));
        // C9 021C
        gbc.setState(0x3a94, 0xc628, 0x94c0, 0xd4b7, 0x301f, 0xa779, 0x0, 0x0);
        gbc.writeMem(0x3a94, { 0xc9 });
        gbc.writeMem(0xc628, { 0x3f, 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc62a, gbc.sp());
        EXPECT(0x7b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc628));
        EXPECT(0x7b, gbc.readMem(0xc629));
        // C9 021D
        gbc.setState(0x93d2, 0xd467, 0x1ae0, 0x876a, 0x852f, 0x6e38, 0x1, 0x0);
        gbc.writeMem(0x93d2, { 0xc9 });
        gbc.writeMem(0xd467, { 0x2a, 0xa0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd469, gbc.sp());
        EXPECT(0xa02a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x93d2));
        EXPECT(0x2a, gbc.readMem(0xd467));
        EXPECT(0xa0, gbc.readMem(0xd468));
        // C9 021E
        gbc.setState(0x166, 0xd908, 0x3140, 0x6258, 0xec4, 0x7c36, 0x1, 0x1);
        gbc.writeMem(0x166, { 0xc9 });
        gbc.writeMem(0xd908, { 0xd4, 0x44 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd90a, gbc.sp());
        EXPECT(0x44d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd908));
        EXPECT(0x44, gbc.readMem(0xd909));
        // C9 021F
        gbc.setState(0x1a2a, 0x695, 0x2fb0, 0xfa6b, 0xfd24, 0x1712, 0x0, 0x0);
        gbc.writeMem(0x695, { 0x39, 0x68 });
        gbc.writeMem(0x1a2a, { 0xc9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x697, gbc.sp());
        EXPECT(0x6839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0220
        gbc.setState(0xa038, 0x1403, 0xec20, 0xc80c, 0xa092, 0x2991, 0x0, 0x1);
        gbc.writeMem(0x1403, { 0xcd, 0x39 });
        gbc.writeMem(0xa038, { 0xc9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1405, gbc.sp());
        EXPECT(0x39cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa038));
        // C9 0221
        gbc.setState(0xe280, 0x1ee7, 0x6310, 0x5e8f, 0x30c7, 0xd533, 0x0, 0x1);
        gbc.writeMem(0x1ee7, { 0x4b, 0xc9 });
        gbc.writeMem(0xe280, { 0xc9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1ee9, gbc.sp());
        EXPECT(0xc94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe280));
        // C9 0222
        gbc.setState(0xeab9, 0x8f8e, 0x3a70, 0x99a6, 0xa9ca, 0x26e3, 0x1, 0x1);
        gbc.writeMem(0x8f8e, { 0x90, 0x4e });
        gbc.writeMem(0xeab9, { 0xc9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8f90, gbc.sp());
        EXPECT(0x4e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x8f8e));
        EXPECT(0x4e, gbc.readMem(0x8f8f));
        EXPECT(0xc9, gbc.readMem(0xeab9));
        // C9 0223
        gbc.setState(0x976b, 0x7421, 0xac0, 0x5699, 0x813e, 0xf894, 0x0, 0x1);
        gbc.writeMem(0x7421, { 0x36, 0xbd });
        gbc.writeMem(0x976b, { 0xc9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7423, gbc.sp());
        EXPECT(0xbd36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x976b));
        // C9 0224
        gbc.setState(0xb72e, 0xf62d, 0x2b80, 0xb58a, 0x1b22, 0xa039, 0x1, 0x0);
        gbc.writeMem(0xb72e, { 0xc9 });
        gbc.writeMem(0xf62d, { 0x94, 0xbd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf62f, gbc.sp());
        EXPECT(0xbd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb72e));
        EXPECT(0x94, gbc.readMem(0xf62d));
        EXPECT(0xbd, gbc.readMem(0xf62e));
        // C9 0225
        gbc.setState(0xbd64, 0x24a7, 0xfbc0, 0xa675, 0xa18e, 0x6ddf, 0x0, 0x0);
        gbc.writeMem(0x24a7, { 0x44, 0x7f });
        gbc.writeMem(0xbd64, { 0xc9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x24a9, gbc.sp());
        EXPECT(0x7f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbd64));
        // C9 0226
        gbc.setState(0xd487, 0x95b8, 0xa140, 0x74e4, 0x280d, 0x8f98, 0x0, 0x0);
        gbc.writeMem(0x95b8, { 0x4, 0x14 });
        gbc.writeMem(0xd487, { 0xc9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x95ba, gbc.sp());
        EXPECT(0x1404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x95b8));
        EXPECT(0x14, gbc.readMem(0x95b9));
        EXPECT(0xc9, gbc.readMem(0xd487));
        // C9 0227
        gbc.setState(0x3b68, 0x4258, 0x2690, 0x32f5, 0x70dc, 0xf90e, 0x1, 0x0);
        gbc.writeMem(0x3b68, { 0xc9 });
        gbc.writeMem(0x4258, { 0xdb, 0x36 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x425a, gbc.sp());
        EXPECT(0x36db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0228
        gbc.setState(0xb7dc, 0x2a19, 0x2d80, 0xad3, 0x2298, 0x5183, 0x1, 0x1);
        gbc.writeMem(0x2a19, { 0x61, 0x46 });
        gbc.writeMem(0xb7dc, { 0xc9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2a1b, gbc.sp());
        EXPECT(0x4661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb7dc));
        // C9 0229
        gbc.setState(0x5201, 0x4a1b, 0xeb30, 0x87aa, 0xd1b2, 0xbdee, 0x1, 0x0);
        gbc.writeMem(0x4a1b, { 0xf0, 0x50 });
        gbc.writeMem(0x5201, { 0xc9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4a1d, gbc.sp());
        EXPECT(0x50f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 022A
        gbc.setState(0x6c53, 0x62b, 0xf360, 0xfb19, 0x9f0, 0x9345, 0x1, 0x0);
        gbc.writeMem(0x62b, { 0x1, 0x8 });
        gbc.writeMem(0x6c53, { 0xc9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x62d, gbc.sp());
        EXPECT(0x801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 022B
        gbc.setState(0x807a, 0x776e, 0x370, 0x1ff8, 0xb755, 0x1e18, 0x1, 0x1);
        gbc.writeMem(0x776e, { 0x6c, 0x5c });
        gbc.writeMem(0x807a, { 0xc9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7770, gbc.sp());
        EXPECT(0x5c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x807a));
        // C9 022C
        gbc.setState(0xc0f4, 0xbd43, 0xd740, 0x941d, 0x9435, 0x2059, 0x1, 0x0);
        gbc.writeMem(0xbd43, { 0xdb, 0xfc });
        gbc.writeMem(0xc0f4, { 0xc9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbd45, gbc.sp());
        EXPECT(0xfcdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xbd43));
        EXPECT(0xfc, gbc.readMem(0xbd44));
        EXPECT(0xc9, gbc.readMem(0xc0f4));
        // C9 022D
        gbc.setState(0x1b97, 0x2dc1, 0x3800, 0xc53e, 0x21a8, 0x83f5, 0x0, 0x1);
        gbc.writeMem(0x1b97, { 0xc9 });
        gbc.writeMem(0x2dc1, { 0x35, 0x3f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2dc3, gbc.sp());
        EXPECT(0x3f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 022E
        gbc.setState(0xc252, 0xa7ed, 0xb9c0, 0x326d, 0x50c1, 0x472, 0x0, 0x1);
        gbc.writeMem(0xa7ed, { 0x77, 0xd2 });
        gbc.writeMem(0xc252, { 0xc9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa7ef, gbc.sp());
        EXPECT(0xd277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa7ed));
        EXPECT(0xd2, gbc.readMem(0xa7ee));
        EXPECT(0xc9, gbc.readMem(0xc252));
        // C9 022F
        gbc.setState(0xc1dd, 0x639e, 0x8ad0, 0x51e8, 0x916, 0xb024, 0x1, 0x0);
        gbc.writeMem(0x639e, { 0xf, 0x71 });
        gbc.writeMem(0xc1dd, { 0xc9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x63a0, gbc.sp());
        EXPECT(0x710f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc1dd));
        // C9 0230
        gbc.setState(0xad6f, 0x8667, 0xeb60, 0xf2b5, 0xd67, 0xfe82, 0x1, 0x0);
        gbc.writeMem(0x8667, { 0xdc, 0x4 });
        gbc.writeMem(0xad6f, { 0xc9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8669, gbc.sp());
        EXPECT(0x4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x8667));
        EXPECT(0x4, gbc.readMem(0x8668));
        EXPECT(0xc9, gbc.readMem(0xad6f));
        // C9 0231
        gbc.setState(0xe80e, 0x7827, 0xc270, 0x3e66, 0x7f8e, 0x1c3c, 0x1, 0x1);
        gbc.writeMem(0x7827, { 0x22, 0x72 });
        gbc.writeMem(0xe80e, { 0xc9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7829, gbc.sp());
        EXPECT(0x7222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe80e));
        // C9 0232
        gbc.setState(0xd9d9, 0xeb3f, 0xa110, 0x2aa9, 0xdfda, 0x4309, 0x0, 0x0);
        gbc.writeMem(0xd9d9, { 0xc9 });
        gbc.writeMem(0xeb3f, { 0x10, 0x4b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xeb41, gbc.sp());
        EXPECT(0x4b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd9d9));
        EXPECT(0x10, gbc.readMem(0xeb3f));
        EXPECT(0x4b, gbc.readMem(0xeb40));
        // C9 0233
        gbc.setState(0x7c6f, 0xa676, 0x87c0, 0xb352, 0xa932, 0x4def, 0x1, 0x0);
        gbc.writeMem(0x7c6f, { 0xc9 });
        gbc.writeMem(0xa676, { 0x40, 0x85 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa678, gbc.sp());
        EXPECT(0x8540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa676));
        EXPECT(0x85, gbc.readMem(0xa677));
        // C9 0234
        gbc.setState(0xe745, 0x15d1, 0x23d0, 0x2559, 0x224b, 0x6d6, 0x0, 0x1);
        gbc.writeMem(0x15d1, { 0xd9, 0x4f });
        gbc.writeMem(0xe745, { 0xc9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x15d3, gbc.sp());
        EXPECT(0x4fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe745));
        // C9 0235
        gbc.setState(0xe697, 0x6732, 0x2ec0, 0x3247, 0xea7c, 0x5334, 0x1, 0x1);
        gbc.writeMem(0x6732, { 0x2c, 0x5d });
        gbc.writeMem(0xe697, { 0xc9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6734, gbc.sp());
        EXPECT(0x5d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe697));
        // C9 0236
        gbc.setState(0xe043, 0x1f71, 0xe720, 0x7ef1, 0xa5d2, 0x28f3, 0x0, 0x1);
        gbc.writeMem(0x1f71, { 0x6d, 0x65 });
        gbc.writeMem(0xe043, { 0xc9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1f73, gbc.sp());
        EXPECT(0x656d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe043));
        // C9 0237
        gbc.setState(0xbfdb, 0xfed, 0x5030, 0xcf73, 0x9eec, 0x95e5, 0x0, 0x1);
        gbc.writeMem(0xfed, { 0xe1, 0x10 });
        gbc.writeMem(0xbfdb, { 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfef, gbc.sp());
        EXPECT(0x10e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbfdb));
        // C9 0238
        gbc.setState(0xdb66, 0x1628, 0x1f80, 0xd7e3, 0xa1c6, 0xd6f5, 0x0, 0x0);
        gbc.writeMem(0x1628, { 0x14, 0xf7 });
        gbc.writeMem(0xdb66, { 0xc9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x162a, gbc.sp());
        EXPECT(0xf714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdb66));
        // C9 0239
        gbc.setState(0xd8f5, 0x53fe, 0x3b20, 0x7560, 0xfcfa, 0x10e, 0x1, 0x1);
        gbc.writeMem(0x53fe, { 0x23, 0xd7 });
        gbc.writeMem(0xd8f5, { 0xc9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5400, gbc.sp());
        EXPECT(0xd723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd8f5));
        // C9 023A
        gbc.setState(0x3e95, 0xab7, 0xd520, 0x126, 0x8171, 0x3737, 0x1, 0x0);
        gbc.writeMem(0xab7, { 0xe6, 0xb5 });
        gbc.writeMem(0x3e95, { 0xc9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xab9, gbc.sp());
        EXPECT(0xb5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 023B
        gbc.setState(0x456f, 0xd01c, 0x8650, 0x7f5c, 0xd8e7, 0xd88c, 0x0, 0x0);
        gbc.writeMem(0x456f, { 0xc9 });
        gbc.writeMem(0xd01c, { 0xad, 0xd1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd01e, gbc.sp());
        EXPECT(0xd1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xd01c));
        EXPECT(0xd1, gbc.readMem(0xd01d));
        // C9 023C
        gbc.setState(0x58e7, 0x412a, 0x3e80, 0xe13b, 0xbf6e, 0xdf76, 0x1, 0x0);
        gbc.writeMem(0x412a, { 0xf9, 0x94 });
        gbc.writeMem(0x58e7, { 0xc9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x412c, gbc.sp());
        EXPECT(0x94f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 023D
        gbc.setState(0x64c5, 0xaba6, 0xfe30, 0x21d4, 0x97fa, 0xbb7c, 0x1, 0x1);
        gbc.writeMem(0x64c5, { 0xc9 });
        gbc.writeMem(0xaba6, { 0xa6, 0xf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xaba8, gbc.sp());
        EXPECT(0xfa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xaba6));
        EXPECT(0xf, gbc.readMem(0xaba7));
        // C9 023E
        gbc.setState(0xc1a8, 0x942, 0xf380, 0x7749, 0x273b, 0xd869, 0x0, 0x0);
        gbc.writeMem(0x942, { 0x4d, 0x5e });
        gbc.writeMem(0xc1a8, { 0xc9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x944, gbc.sp());
        EXPECT(0x5e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc1a8));
        // C9 023F
        gbc.setState(0x5863, 0xfa79, 0x7400, 0x7eff, 0xeeea, 0x5df3, 0x1, 0x0);
        gbc.writeMem(0x5863, { 0xc9 });
        gbc.writeMem(0xfa79, { 0x94, 0xce });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfa7b, gbc.sp());
        EXPECT(0xce94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xfa79));
        EXPECT(0xce, gbc.readMem(0xfa7a));
        // C9 0240
        gbc.setState(0x9430, 0x3199, 0x42f0, 0xf2a9, 0x8b83, 0x69c1, 0x0, 0x1);
        gbc.writeMem(0x3199, { 0xa8, 0xa3 });
        gbc.writeMem(0x9430, { 0xc9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x319b, gbc.sp());
        EXPECT(0xa3a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9430));
        // C9 0241
        gbc.setState(0x6f16, 0x15fb, 0x7f40, 0xf8d3, 0x3102, 0x422c, 0x1, 0x0);
        gbc.writeMem(0x15fb, { 0x7d, 0xc0 });
        gbc.writeMem(0x6f16, { 0xc9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x15fd, gbc.sp());
        EXPECT(0xc07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0242
        gbc.setState(0xd578, 0xb3dd, 0x40d0, 0x6c8d, 0x960b, 0xceff, 0x0, 0x0);
        gbc.writeMem(0xb3dd, { 0xc2, 0xbe });
        gbc.writeMem(0xd578, { 0xc9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb3df, gbc.sp());
        EXPECT(0xbec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb3dd));
        EXPECT(0xbe, gbc.readMem(0xb3de));
        EXPECT(0xc9, gbc.readMem(0xd578));
        // C9 0243
        gbc.setState(0x3ad9, 0xb5f, 0x8bc0, 0x41c7, 0x4163, 0xf2c3, 0x0, 0x1);
        gbc.writeMem(0xb5f, { 0xfa, 0x51 });
        gbc.writeMem(0x3ad9, { 0xc9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb61, gbc.sp());
        EXPECT(0x51fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0244
        gbc.setState(0xc3f7, 0xa70, 0x6c10, 0xbea4, 0x3eef, 0x9534, 0x0, 0x1);
        gbc.writeMem(0xa70, { 0x54, 0x45 });
        gbc.writeMem(0xc3f7, { 0xc9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa72, gbc.sp());
        EXPECT(0x4554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc3f7));
        // C9 0245
        gbc.setState(0xa3bb, 0x935b, 0x5640, 0xdb12, 0x1388, 0x96ba, 0x0, 0x0);
        gbc.writeMem(0x935b, { 0xbb, 0xe0 });
        gbc.writeMem(0xa3bb, { 0xc9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x935d, gbc.sp());
        EXPECT(0xe0bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x935b));
        EXPECT(0xe0, gbc.readMem(0x935c));
        EXPECT(0xc9, gbc.readMem(0xa3bb));
        // C9 0246
        gbc.setState(0xa776, 0xb044, 0xbd00, 0xbd0e, 0x1c40, 0xb4de, 0x0, 0x0);
        gbc.writeMem(0xa776, { 0xc9 });
        gbc.writeMem(0xb044, { 0x7e, 0x5f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb046, gbc.sp());
        EXPECT(0x5f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa776));
        EXPECT(0x7e, gbc.readMem(0xb044));
        EXPECT(0x5f, gbc.readMem(0xb045));
        // C9 0247
        gbc.setState(0x2a01, 0x5bfa, 0xd8d0, 0x41d1, 0x198d, 0xd4d4, 0x0, 0x1);
        gbc.writeMem(0x2a01, { 0xc9 });
        gbc.writeMem(0x5bfa, { 0x6e, 0x8d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5bfc, gbc.sp());
        EXPECT(0x8d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0248
        gbc.setState(0xca42, 0x74bb, 0x8050, 0xdbc5, 0xdabd, 0xe6cb, 0x1, 0x1);
        gbc.writeMem(0x74bb, { 0xcf, 0x45 });
        gbc.writeMem(0xca42, { 0xc9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x74bd, gbc.sp());
        EXPECT(0x45cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xca42));
        // C9 0249
        gbc.setState(0x86c0, 0xfdc1, 0x8a30, 0x1923, 0xccde, 0x8b2f, 0x0, 0x0);
        gbc.writeMem(0x86c0, { 0xc9 });
        gbc.writeMem(0xfdc1, { 0xe8, 0xf8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfdc3, gbc.sp());
        EXPECT(0xf8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x86c0));
        EXPECT(0xe8, gbc.readMem(0xfdc1));
        EXPECT(0xf8, gbc.readMem(0xfdc2));
        // C9 024A
        gbc.setState(0xa8df, 0xd8b5, 0xa8f0, 0x61f4, 0xa637, 0xcfae, 0x1, 0x1);
        gbc.writeMem(0xa8df, { 0xc9 });
        gbc.writeMem(0xd8b5, { 0x3c, 0x6a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd8b7, gbc.sp());
        EXPECT(0x6a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa8df));
        EXPECT(0x3c, gbc.readMem(0xd8b5));
        EXPECT(0x6a, gbc.readMem(0xd8b6));
        // C9 024B
        gbc.setState(0x9c6b, 0x8fcb, 0xbf40, 0x7e79, 0xbf4d, 0x6c7f, 0x1, 0x1);
        gbc.writeMem(0x8fcb, { 0xd2, 0x20 });
        gbc.writeMem(0x9c6b, { 0xc9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8fcd, gbc.sp());
        EXPECT(0x20d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x8fcb));
        EXPECT(0x20, gbc.readMem(0x8fcc));
        EXPECT(0xc9, gbc.readMem(0x9c6b));
        // C9 024C
        gbc.setState(0xd2f9, 0x12f6, 0x4b70, 0x9e1, 0x8120, 0x685d, 0x0, 0x1);
        gbc.writeMem(0x12f6, { 0xf3, 0x22 });
        gbc.writeMem(0xd2f9, { 0xc9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x12f8, gbc.sp());
        EXPECT(0x22f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd2f9));
        // C9 024D
        gbc.setState(0xd180, 0xe6fe, 0xdc00, 0x801e, 0x8af9, 0x199a, 0x1, 0x0);
        gbc.writeMem(0xd180, { 0xc9 });
        gbc.writeMem(0xe6fe, { 0x9c, 0x28 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe700, gbc.sp());
        EXPECT(0x289c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd180));
        EXPECT(0x9c, gbc.readMem(0xe6fe));
        EXPECT(0x28, gbc.readMem(0xe6ff));
        // C9 024F
        gbc.setState(0x68e4, 0xa63d, 0x5aa0, 0xc603, 0x19be, 0x7c05, 0x0, 0x1);
        gbc.writeMem(0x68e4, { 0xc9 });
        gbc.writeMem(0xa63d, { 0xb2, 0xa });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa63f, gbc.sp());
        EXPECT(0xab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa63d));
        EXPECT(0xa, gbc.readMem(0xa63e));
        // C9 0250
        gbc.setState(0x3719, 0xe24c, 0xe440, 0x5cb2, 0x1bbe, 0x3a6, 0x0, 0x1);
        gbc.writeMem(0x3719, { 0xc9 });
        gbc.writeMem(0xe24c, { 0xf2, 0x1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe24e, gbc.sp());
        EXPECT(0x1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xe24c));
        EXPECT(0x1, gbc.readMem(0xe24d));
        // C9 0251
        gbc.setState(0xb872, 0x30e, 0x3790, 0x2c4f, 0x3e99, 0x76ff, 0x0, 0x1);
        gbc.writeMem(0x30e, { 0xb1, 0xa6 });
        gbc.writeMem(0xb872, { 0xc9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x310, gbc.sp());
        EXPECT(0xa6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb872));
        // C9 0252
        gbc.setState(0xad0c, 0xf527, 0x8180, 0xcd4d, 0xe36d, 0xa404, 0x1, 0x1);
        gbc.writeMem(0xad0c, { 0xc9 });
        gbc.writeMem(0xf527, { 0x23, 0x6d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf529, gbc.sp());
        EXPECT(0x6d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xad0c));
        EXPECT(0x23, gbc.readMem(0xf527));
        EXPECT(0x6d, gbc.readMem(0xf528));
        // C9 0253
        gbc.setState(0xbe28, 0xef38, 0x2ab0, 0x3805, 0x1e87, 0x62eb, 0x0, 0x1);
        gbc.writeMem(0xbe28, { 0xc9 });
        gbc.writeMem(0xef38, { 0xab, 0x2c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xef3a, gbc.sp());
        EXPECT(0x2cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbe28));
        EXPECT(0xab, gbc.readMem(0xef38));
        EXPECT(0x2c, gbc.readMem(0xef39));
        // C9 0254
        gbc.setState(0x3fc3, 0xdc1c, 0x4170, 0xb4a2, 0x869b, 0xe7b, 0x0, 0x0);
        gbc.writeMem(0x3fc3, { 0xc9 });
        gbc.writeMem(0xdc1c, { 0x5b, 0xd6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdc1e, gbc.sp());
        EXPECT(0xd65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdc1c));
        EXPECT(0xd6, gbc.readMem(0xdc1d));
        // C9 0255
        gbc.setState(0xee42, 0x4eb0, 0x90d0, 0x2dda, 0x4ab4, 0xd191, 0x1, 0x1);
        gbc.writeMem(0x4eb0, { 0xf9, 0x13 });
        gbc.writeMem(0xee42, { 0xc9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4eb2, gbc.sp());
        EXPECT(0x13f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xee42));
        // C9 0256
        gbc.setState(0x73a0, 0x3501, 0xb780, 0xa87, 0xa33f, 0x78b7, 0x1, 0x1);
        gbc.writeMem(0x3501, { 0x5, 0x3 });
        gbc.writeMem(0x73a0, { 0xc9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3503, gbc.sp());
        EXPECT(0x305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0257
        gbc.setState(0x9507, 0x29e1, 0x93d0, 0xbc70, 0x3540, 0x2c1b, 0x0, 0x0);
        gbc.writeMem(0x29e1, { 0xf5, 0x94 });
        gbc.writeMem(0x9507, { 0xc9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x29e3, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9507));
        // C9 0258
        gbc.setState(0x8e95, 0x9e51, 0xe280, 0x447f, 0x530a, 0xba95, 0x1, 0x0);
        gbc.writeMem(0x8e95, { 0xc9 });
        gbc.writeMem(0x9e51, { 0x63, 0xdf });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9e53, gbc.sp());
        EXPECT(0xdf63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8e95));
        EXPECT(0x63, gbc.readMem(0x9e51));
        EXPECT(0xdf, gbc.readMem(0x9e52));
        // C9 0259
        gbc.setState(0x33af, 0xde74, 0x46a0, 0x6e3a, 0x9aee, 0xf9d0, 0x0, 0x1);
        gbc.writeMem(0x33af, { 0xc9 });
        gbc.writeMem(0xde74, { 0x8e, 0x42 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xde76, gbc.sp());
        EXPECT(0x428e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xde74));
        EXPECT(0x42, gbc.readMem(0xde75));
        // C9 025A
        gbc.setState(0xc55c, 0x1c90, 0xa380, 0xb65c, 0xbbab, 0x726b, 0x1, 0x0);
        gbc.writeMem(0x1c90, { 0xfb, 0xcb });
        gbc.writeMem(0xc55c, { 0xc9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1c92, gbc.sp());
        EXPECT(0xcbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc55c));
        // C9 025B
        gbc.setState(0xd0de, 0xf9eb, 0xc230, 0x64d6, 0x4f30, 0xeb38, 0x1, 0x1);
        gbc.writeMem(0xd0de, { 0xc9 });
        gbc.writeMem(0xf9eb, { 0x9d, 0xea });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf9ed, gbc.sp());
        EXPECT(0xea9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd0de));
        EXPECT(0x9d, gbc.readMem(0xf9eb));
        EXPECT(0xea, gbc.readMem(0xf9ec));
        // C9 025C
        gbc.setState(0x125, 0xdeea, 0xe460, 0x2c99, 0x6fc3, 0x5286, 0x0, 0x1);
        gbc.writeMem(0x125, { 0xc9 });
        gbc.writeMem(0xdeea, { 0x23, 0x95 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdeec, gbc.sp());
        EXPECT(0x9523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xdeea));
        EXPECT(0x95, gbc.readMem(0xdeeb));
        // C9 025D
        gbc.setState(0x7dbe, 0x2f30, 0xaab0, 0xaf81, 0x6b5, 0xc550, 0x1, 0x0);
        gbc.writeMem(0x2f30, { 0x6b, 0xe9 });
        gbc.writeMem(0x7dbe, { 0xc9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2f32, gbc.sp());
        EXPECT(0xe96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 025E
        gbc.setState(0xc741, 0xb05, 0xafe0, 0xe998, 0x3100, 0xf087, 0x1, 0x1);
        gbc.writeMem(0xb05, { 0x8c, 0x61 });
        gbc.writeMem(0xc741, { 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb07, gbc.sp());
        EXPECT(0x618c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc741));
        // C9 025F
        gbc.setState(0x3e9e, 0xd592, 0x11c0, 0x7356, 0x2ac6, 0xbaa6, 0x0, 0x1);
        gbc.writeMem(0x3e9e, { 0xc9 });
        gbc.writeMem(0xd592, { 0x8c, 0xe3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd594, gbc.sp());
        EXPECT(0xe38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd592));
        EXPECT(0xe3, gbc.readMem(0xd593));
        // C9 0260
        gbc.setState(0x77a2, 0xf485, 0x6c00, 0xc3a3, 0xdeb0, 0xf385, 0x0, 0x1);
        gbc.writeMem(0x77a2, { 0xc9 });
        gbc.writeMem(0xf485, { 0x0, 0x95 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf487, gbc.sp());
        EXPECT(0x9500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf485));
        EXPECT(0x95, gbc.readMem(0xf486));
        // C9 0261
        gbc.setState(0xe0c8, 0x2ea9, 0xbe50, 0x5a56, 0x52c0, 0xa6b0, 0x0, 0x1);
        gbc.writeMem(0x2ea9, { 0x89, 0xf2 });
        gbc.writeMem(0xe0c8, { 0xc9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2eab, gbc.sp());
        EXPECT(0xf289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe0c8));
        // C9 0262
        gbc.setState(0xae51, 0x3283, 0xb700, 0xfeab, 0xdf1, 0xa515, 0x0, 0x0);
        gbc.writeMem(0x3283, { 0x2, 0x5f });
        gbc.writeMem(0xae51, { 0xc9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3285, gbc.sp());
        EXPECT(0x5f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xae51));
        // C9 0263
        gbc.setState(0x932f, 0x74e1, 0x28b0, 0x2482, 0x9146, 0x7145, 0x0, 0x1);
        gbc.writeMem(0x74e1, { 0x9a, 0x19 });
        gbc.writeMem(0x932f, { 0xc9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x74e3, gbc.sp());
        EXPECT(0x199a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x932f));
        // C9 0264
        gbc.setState(0x8ee9, 0xc087, 0xd630, 0x4295, 0x292, 0xce9b, 0x0, 0x1);
        gbc.writeMem(0x8ee9, { 0xc9 });
        gbc.writeMem(0xc087, { 0x26, 0x97 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc089, gbc.sp());
        EXPECT(0x9726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8ee9));
        EXPECT(0x26, gbc.readMem(0xc087));
        EXPECT(0x97, gbc.readMem(0xc088));
        // C9 0265
        gbc.setState(0xbc26, 0xa9b4, 0xf580, 0x920b, 0x602f, 0x595, 0x0, 0x1);
        gbc.writeMem(0xa9b4, { 0x58, 0xe8 });
        gbc.writeMem(0xbc26, { 0xc9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa9b6, gbc.sp());
        EXPECT(0xe858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa9b4));
        EXPECT(0xe8, gbc.readMem(0xa9b5));
        EXPECT(0xc9, gbc.readMem(0xbc26));
        // C9 0266
        gbc.setState(0x39c8, 0x15c0, 0xd580, 0xb58b, 0x94cc, 0xbd71, 0x0, 0x0);
        gbc.writeMem(0x15c0, { 0xf8, 0x2b });
        gbc.writeMem(0x39c8, { 0xc9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x15c2, gbc.sp());
        EXPECT(0x2bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0267
        gbc.setState(0xa9a4, 0x7861, 0x5640, 0xbb61, 0x2648, 0xd31f, 0x0, 0x0);
        gbc.writeMem(0x7861, { 0x77, 0xea });
        gbc.writeMem(0xa9a4, { 0xc9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7863, gbc.sp());
        EXPECT(0xea77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa9a4));
        // C9 0268
        gbc.setState(0xc8bc, 0xf98e, 0x1080, 0x4fc4, 0xbb50, 0x2e12, 0x0, 0x1);
        gbc.writeMem(0xc8bc, { 0xc9 });
        gbc.writeMem(0xf98e, { 0xd0, 0xaf });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf990, gbc.sp());
        EXPECT(0xafd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc8bc));
        EXPECT(0xd0, gbc.readMem(0xf98e));
        EXPECT(0xaf, gbc.readMem(0xf98f));
        // C9 0269
        gbc.setState(0xbee3, 0x1013, 0x40e0, 0xf39f, 0x8c5c, 0x911e, 0x1, 0x1);
        gbc.writeMem(0x1013, { 0x90, 0x1f });
        gbc.writeMem(0xbee3, { 0xc9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1015, gbc.sp());
        EXPECT(0x1f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbee3));
        // C9 026A
        gbc.setState(0xb1, 0x5e8e, 0x3440, 0xa84f, 0xfdce, 0xea78, 0x1, 0x0);
        gbc.writeMem(0xb1, { 0xc9 });
        gbc.writeMem(0x5e8e, { 0x5f, 0xfe });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5e90, gbc.sp());
        EXPECT(0xfe5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 026B
        gbc.setState(0xe04f, 0xd722, 0x43d0, 0x77a8, 0xb392, 0x15cb, 0x0, 0x0);
        gbc.writeMem(0xd722, { 0xfe, 0xa4 });
        gbc.writeMem(0xe04f, { 0xc9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd724, gbc.sp());
        EXPECT(0xa4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd722));
        EXPECT(0xa4, gbc.readMem(0xd723));
        EXPECT(0xc9, gbc.readMem(0xe04f));
        // C9 026D
        gbc.setState(0xa9fd, 0x6b80, 0x2be0, 0x6d24, 0xae8e, 0x2755, 0x1, 0x0);
        gbc.writeMem(0x6b80, { 0x57, 0x40 });
        gbc.writeMem(0xa9fd, { 0xc9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6b82, gbc.sp());
        EXPECT(0x4057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa9fd));
        // C9 026E
        gbc.setState(0xaf07, 0xf87e, 0x9ff0, 0x6ee6, 0x140d, 0xea12, 0x1, 0x0);
        gbc.writeMem(0xaf07, { 0xc9 });
        gbc.writeMem(0xf87e, { 0x13, 0x99 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf880, gbc.sp());
        EXPECT(0x9913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xaf07));
        EXPECT(0x13, gbc.readMem(0xf87e));
        EXPECT(0x99, gbc.readMem(0xf87f));
        // C9 026F
        gbc.setState(0x260a, 0x427c, 0xa8a0, 0xe7cf, 0x8ea8, 0x7fd1, 0x1, 0x1);
        gbc.writeMem(0x260a, { 0xc9 });
        gbc.writeMem(0x427c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x427e, gbc.sp());
        EXPECT(0xf8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0270
        gbc.setState(0xa424, 0x4d2b, 0xad60, 0xfdf0, 0x86d3, 0x488e, 0x0, 0x0);
        gbc.writeMem(0x4d2b, { 0x1, 0x32 });
        gbc.writeMem(0xa424, { 0xc9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4d2d, gbc.sp());
        EXPECT(0x3201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa424));
        // C9 0271
        gbc.setState(0x7b9e, 0x2348, 0xd3e0, 0x143b, 0x6550, 0x72c6, 0x1, 0x1);
        gbc.writeMem(0x2348, { 0xe1, 0xf2 });
        gbc.writeMem(0x7b9e, { 0xc9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x234a, gbc.sp());
        EXPECT(0xf2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0272
        gbc.setState(0x9786, 0xb32, 0x110, 0xca77, 0xe778, 0xc7c1, 0x1, 0x1);
        gbc.writeMem(0xb32, { 0xba, 0x4f });
        gbc.writeMem(0x9786, { 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb34, gbc.sp());
        EXPECT(0x4fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9786));
        // C9 0273
        gbc.setState(0x700e, 0x7c8a, 0xf400, 0x5fa0, 0x1074, 0xfc7a, 0x0, 0x0);
        gbc.writeMem(0x700e, { 0xc9 });
        gbc.writeMem(0x7c8a, { 0x45, 0x7e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7c8c, gbc.sp());
        EXPECT(0x7e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0274
        gbc.setState(0x8ad5, 0x9929, 0x1880, 0x39b7, 0x431c, 0x7e72, 0x0, 0x0);
        gbc.writeMem(0x8ad5, { 0xc9 });
        gbc.writeMem(0x9929, { 0x30, 0xfb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x992b, gbc.sp());
        EXPECT(0xfb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8ad5));
        EXPECT(0x30, gbc.readMem(0x9929));
        EXPECT(0xfb, gbc.readMem(0x992a));
        // C9 0275
        gbc.setState(0x520c, 0x61db, 0x7440, 0xa56b, 0x402c, 0x82b0, 0x1, 0x0);
        gbc.writeMem(0x520c, { 0xc9 });
        gbc.writeMem(0x61db, { 0xa3, 0xc8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x61dd, gbc.sp());
        EXPECT(0xc8a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0276
        gbc.setState(0x7a5, 0x9b95, 0x4cb0, 0x319e, 0xcfd6, 0x5c63, 0x1, 0x0);
        gbc.writeMem(0x7a5, { 0xc9 });
        gbc.writeMem(0x9b95, { 0xd3, 0x91 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9b97, gbc.sp());
        EXPECT(0x91d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0x9b95));
        EXPECT(0x91, gbc.readMem(0x9b96));
        // C9 0277
        gbc.setState(0xe3b6, 0x2d90, 0x6d30, 0xf320, 0xf3da, 0xb7c8, 0x0, 0x0);
        gbc.writeMem(0x2d90, { 0xa9, 0x53 });
        gbc.writeMem(0xe3b6, { 0xc9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2d92, gbc.sp());
        EXPECT(0x53a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe3b6));
        // C9 0278
        gbc.setState(0x9b09, 0xe19b, 0xb1b0, 0x7496, 0xbe8e, 0x7eea, 0x0, 0x0);
        gbc.writeMem(0x9b09, { 0xc9 });
        gbc.writeMem(0xe19b, { 0xe0, 0x63 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe19d, gbc.sp());
        EXPECT(0x63e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9b09));
        EXPECT(0xe0, gbc.readMem(0xe19b));
        EXPECT(0x63, gbc.readMem(0xe19c));
        // C9 0279
        gbc.setState(0x54f1, 0xe9a9, 0x7da0, 0x6ecf, 0x9cf3, 0x41f6, 0x1, 0x1);
        gbc.writeMem(0x54f1, { 0xc9 });
        gbc.writeMem(0xe9a9, { 0x1e, 0x1d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe9ab, gbc.sp());
        EXPECT(0x1d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xe9a9));
        EXPECT(0x1d, gbc.readMem(0xe9aa));
        // C9 027A
        gbc.setState(0xabe3, 0xd9c1, 0x940, 0x22a5, 0x6686, 0x7be8, 0x0, 0x1);
        gbc.writeMem(0xabe3, { 0xc9 });
        gbc.writeMem(0xd9c1, { 0x2c, 0x70 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd9c3, gbc.sp());
        EXPECT(0x702c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xabe3));
        EXPECT(0x2c, gbc.readMem(0xd9c1));
        EXPECT(0x70, gbc.readMem(0xd9c2));
        // C9 027B
        gbc.setState(0x2c19, 0xab81, 0xec10, 0x3954, 0xb7dd, 0xc37c, 0x0, 0x0);
        gbc.writeMem(0x2c19, { 0xc9 });
        gbc.writeMem(0xab81, { 0x7d, 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xab83, gbc.sp());
        EXPECT(0xbd7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xab81));
        EXPECT(0xbd, gbc.readMem(0xab82));
        // C9 027C
        gbc.setState(0x9ce5, 0xb7bc, 0x2d30, 0x94e2, 0x25dc, 0x192a, 0x0, 0x0);
        gbc.writeMem(0x9ce5, { 0xc9 });
        gbc.writeMem(0xb7bc, { 0xb9, 0x69 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb7be, gbc.sp());
        EXPECT(0x69b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9ce5));
        EXPECT(0xb9, gbc.readMem(0xb7bc));
        EXPECT(0x69, gbc.readMem(0xb7bd));
        // C9 027D
        gbc.setState(0xa9e0, 0x2bdf, 0xcb20, 0x4bf8, 0x1f9b, 0x50d1, 0x0, 0x0);
        gbc.writeMem(0x2bdf, { 0xcb, 0x1 });
        gbc.writeMem(0xa9e0, { 0xc9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2be1, gbc.sp());
        EXPECT(0x1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa9e0));
        // C9 027E
        gbc.setState(0x989d, 0x9785, 0x2c50, 0xc065, 0x6090, 0x86c7, 0x1, 0x1);
        gbc.writeMem(0x9785, { 0x3d, 0xdc });
        gbc.writeMem(0x989d, { 0xc9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9787, gbc.sp());
        EXPECT(0xdc3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x9785));
        EXPECT(0xdc, gbc.readMem(0x9786));
        EXPECT(0xc9, gbc.readMem(0x989d));
        // C9 027F
        gbc.setState(0x2975, 0xa353, 0xa9a0, 0xfea3, 0x1128, 0xda25, 0x0, 0x0);
        gbc.writeMem(0x2975, { 0xc9 });
        gbc.writeMem(0xa353, { 0xe8, 0x4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa355, gbc.sp());
        EXPECT(0x4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xa353));
        EXPECT(0x4, gbc.readMem(0xa354));
        // C9 0280
        gbc.setState(0x58c9, 0x185, 0x8ca0, 0x8f2e, 0xd5ac, 0x3462, 0x1, 0x1);
        gbc.writeMem(0x185, { 0x18, 0x2b });
        gbc.writeMem(0x58c9, { 0xc9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x187, gbc.sp());
        EXPECT(0x2b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0281
        gbc.setState(0x2eeb, 0x148b, 0x8020, 0xda0e, 0xec0a, 0x108d, 0x0, 0x1);
        gbc.writeMem(0x148b, { 0xb2, 0x70 });
        gbc.writeMem(0x2eeb, { 0xc9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x148d, gbc.sp());
        EXPECT(0x70b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0282
        gbc.setState(0x8e56, 0x7a2a, 0x6d70, 0x1727, 0xb684, 0x5701, 0x0, 0x1);
        gbc.writeMem(0x7a2a, { 0xb9, 0x59 });
        gbc.writeMem(0x8e56, { 0xc9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7a2c, gbc.sp());
        EXPECT(0x59b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8e56));
        // C9 0283
        gbc.setState(0xa2f3, 0xf8f1, 0x7e50, 0xc8, 0x4792, 0x575b, 0x1, 0x1);
        gbc.writeMem(0xa2f3, { 0xc9 });
        gbc.writeMem(0xf8f1, { 0xd9, 0x90 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf8f3, gbc.sp());
        EXPECT(0x90d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa2f3));
        EXPECT(0xd9, gbc.readMem(0xf8f1));
        EXPECT(0x90, gbc.readMem(0xf8f2));
        // C9 0284
        gbc.setState(0x1a2e, 0x2686, 0xd320, 0x834c, 0x7e0c, 0x5fe5, 0x1, 0x1);
        gbc.writeMem(0x1a2e, { 0xc9 });
        gbc.writeMem(0x2686, { 0xe3, 0x19 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2688, gbc.sp());
        EXPECT(0x19e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0285
        gbc.setState(0x954e, 0xf4a4, 0xd900, 0xa16b, 0x974b, 0xc4bf, 0x1, 0x1);
        gbc.writeMem(0x954e, { 0xc9 });
        gbc.writeMem(0xf4a4, { 0xf, 0x2b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf4a6, gbc.sp());
        EXPECT(0x2b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x954e));
        EXPECT(0xf, gbc.readMem(0xf4a4));
        EXPECT(0x2b, gbc.readMem(0xf4a5));
        // C9 0286
        gbc.setState(0x82bb, 0xf942, 0x6170, 0xe87e, 0x1ba7, 0xe3da, 0x1, 0x1);
        gbc.writeMem(0x82bb, { 0xc9 });
        gbc.writeMem(0xf942, { 0xa8, 0x3f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf944, gbc.sp());
        EXPECT(0x3fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x82bb));
        EXPECT(0xa8, gbc.readMem(0xf942));
        EXPECT(0x3f, gbc.readMem(0xf943));
        // C9 0287
        gbc.setState(0x521b, 0x51e0, 0x660, 0xd04d, 0x601b, 0x651f, 0x0, 0x1);
        gbc.writeMem(0x51e0, { 0xe4, 0x20 });
        gbc.writeMem(0x521b, { 0xc9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x51e2, gbc.sp());
        EXPECT(0x20e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0288
        gbc.setState(0xc0cc, 0x1863, 0x4280, 0x31, 0x9c7a, 0xe491, 0x0, 0x1);
        gbc.writeMem(0x1863, { 0xd4, 0x7 });
        gbc.writeMem(0xc0cc, { 0xc9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1865, gbc.sp());
        EXPECT(0x7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc0cc));
        // C9 0289
        gbc.setState(0xf00, 0xf64, 0xbe70, 0x9880, 0x7b34, 0x9d48, 0x1, 0x1);
        gbc.writeMem(0xf00, { 0xc9 });
        gbc.writeMem(0xf64, { 0xa1, 0x39 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf66, gbc.sp());
        EXPECT(0x39a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 028A
        gbc.setState(0x5f22, 0x2239, 0xf10, 0x80f2, 0x5c0, 0x3ac8, 0x0, 0x1);
        gbc.writeMem(0x2239, { 0x90, 0x83 });
        gbc.writeMem(0x5f22, { 0xc9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x223b, gbc.sp());
        EXPECT(0x8390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 028B
        gbc.setState(0x4142, 0xa, 0x8400, 0x6520, 0xc4af, 0x4ceb, 0x0, 0x1);
        gbc.writeMem(0xa, { 0xba, 0x4c });
        gbc.writeMem(0x4142, { 0xc9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc, gbc.sp());
        EXPECT(0x4cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 028C
        gbc.setState(0x566d, 0xa045, 0xbe20, 0xcf85, 0xa702, 0x4d82, 0x1, 0x0);
        gbc.writeMem(0x566d, { 0xc9 });
        gbc.writeMem(0xa045, { 0xe0, 0xd8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa047, gbc.sp());
        EXPECT(0xd8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa045));
        EXPECT(0xd8, gbc.readMem(0xa046));
        // C9 028D
        gbc.setState(0xd09c, 0x263a, 0xb460, 0xbaab, 0x6517, 0xd2fd, 0x0, 0x0);
        gbc.writeMem(0x263a, { 0x2e, 0xe5 });
        gbc.writeMem(0xd09c, { 0xc9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x263c, gbc.sp());
        EXPECT(0xe52e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd09c));
        // C9 028F
        gbc.setState(0x3313, 0xc24c, 0x150, 0x3b20, 0xd7cc, 0x3d20, 0x0, 0x1);
        gbc.writeMem(0x3313, { 0xc9 });
        gbc.writeMem(0xc24c, { 0xe6, 0x57 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc24e, gbc.sp());
        EXPECT(0x57e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc24c));
        EXPECT(0x57, gbc.readMem(0xc24d));
        // C9 0290
        gbc.setState(0xc3a2, 0x2597, 0xce80, 0x2dab, 0x57e, 0xf20d, 0x0, 0x0);
        gbc.writeMem(0x2597, { 0xd4, 0x59 });
        gbc.writeMem(0xc3a2, { 0xc9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2599, gbc.sp());
        EXPECT(0x59d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc3a2));
        // C9 0291
        gbc.setState(0x6848, 0xa78d, 0x5540, 0x296a, 0xf103, 0xf04d, 0x0, 0x1);
        gbc.writeMem(0x6848, { 0xc9 });
        gbc.writeMem(0xa78d, { 0x70, 0xd9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa78f, gbc.sp());
        EXPECT(0xd970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xa78d));
        EXPECT(0xd9, gbc.readMem(0xa78e));
        // C9 0292
        gbc.setState(0x2bd1, 0xc521, 0xf4a0, 0xd68e, 0xdeba, 0x9ed3, 0x1, 0x0);
        gbc.writeMem(0x2bd1, { 0xc9 });
        gbc.writeMem(0xc521, { 0xc2, 0x27 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc523, gbc.sp());
        EXPECT(0x27c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc521));
        EXPECT(0x27, gbc.readMem(0xc522));
        // C9 0293
        gbc.setState(0x11a3, 0xe70c, 0xb3c0, 0x1847, 0x32ec, 0xc729, 0x1, 0x1);
        gbc.writeMem(0x11a3, { 0xc9 });
        gbc.writeMem(0xe70c, { 0xc7, 0x5e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe70e, gbc.sp());
        EXPECT(0x5ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xe70c));
        EXPECT(0x5e, gbc.readMem(0xe70d));
        // C9 0294
        gbc.setState(0xe48, 0x247e, 0x2420, 0xb592, 0xd108, 0xcaf5, 0x0, 0x0);
        gbc.writeMem(0xe48, { 0xc9 });
        gbc.writeMem(0x247e, { 0xfb, 0x51 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2480, gbc.sp());
        EXPECT(0x51fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0295
        gbc.setState(0x6689, 0x9c3f, 0x3760, 0xae6f, 0xac3d, 0x40b4, 0x0, 0x1);
        gbc.writeMem(0x6689, { 0xc9 });
        gbc.writeMem(0x9c3f, { 0x1c, 0x7e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9c41, gbc.sp());
        EXPECT(0x7e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9c3f));
        EXPECT(0x7e, gbc.readMem(0x9c40));
        // C9 0296
        gbc.setState(0x9440, 0x2972, 0x87e0, 0x50c9, 0xe91e, 0xf438, 0x0, 0x0);
        gbc.writeMem(0x2972, { 0x2, 0xd6 });
        gbc.writeMem(0x9440, { 0xc9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2974, gbc.sp());
        EXPECT(0xd602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9440));
        // C9 0297
        gbc.setState(0x56f0, 0x2b6f, 0x15a0, 0x40ba, 0xf29d, 0xe38c, 0x0, 0x1);
        gbc.writeMem(0x2b6f, { 0x3f, 0x33 });
        gbc.writeMem(0x56f0, { 0xc9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2b71, gbc.sp());
        EXPECT(0x333f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0298
        gbc.setState(0x42f9, 0xe3b3, 0x780, 0x206c, 0x7872, 0xa813, 0x0, 0x1);
        gbc.writeMem(0x42f9, { 0xc9 });
        gbc.writeMem(0xe3b3, { 0x36, 0xb2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe3b5, gbc.sp());
        EXPECT(0xb236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe3b3));
        EXPECT(0xb2, gbc.readMem(0xe3b4));
        // C9 0299
        gbc.setState(0x2c00, 0x406f, 0x2c40, 0x184d, 0x329d, 0x46, 0x0, 0x1);
        gbc.writeMem(0x2c00, { 0xc9 });
        gbc.writeMem(0x406f, { 0x69, 0x9b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4071, gbc.sp());
        EXPECT(0x9b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 029A
        gbc.setState(0xeaf3, 0x3e25, 0xd9e0, 0x79e8, 0xe1f9, 0x8371, 0x1, 0x0);
        gbc.writeMem(0x3e25, { 0x2a, 0x3e });
        gbc.writeMem(0xeaf3, { 0xc9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3e27, gbc.sp());
        EXPECT(0x3e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xeaf3));
        // C9 029B
        gbc.setState(0x210a, 0x74e5, 0x2f40, 0x38a1, 0xd6be, 0x7bd2, 0x1, 0x1);
        gbc.writeMem(0x210a, { 0xc9 });
        gbc.writeMem(0x74e5, { 0x4c, 0x64 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x74e7, gbc.sp());
        EXPECT(0x644c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 029C
        gbc.setState(0xb19d, 0x7cf0, 0xf210, 0xbdb5, 0xebaa, 0xd19, 0x0, 0x0);
        gbc.writeMem(0x7cf0, { 0x51, 0x5a });
        gbc.writeMem(0xb19d, { 0xc9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7cf2, gbc.sp());
        EXPECT(0x5a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb19d));
        // C9 029D
        gbc.setState(0xb0eb, 0x6e66, 0x2120, 0x29f3, 0x60ab, 0x21eb, 0x1, 0x0);
        gbc.writeMem(0x6e66, { 0x25, 0x60 });
        gbc.writeMem(0xb0eb, { 0xc9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6e68, gbc.sp());
        EXPECT(0x6025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb0eb));
        // C9 029E
        gbc.setState(0x4742, 0xa199, 0xa1d0, 0xc1df, 0x8e36, 0x6832, 0x0, 0x1);
        gbc.writeMem(0x4742, { 0xc9 });
        gbc.writeMem(0xa199, { 0x7f, 0xf3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa19b, gbc.sp());
        EXPECT(0xf37f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa199));
        EXPECT(0xf3, gbc.readMem(0xa19a));
        // C9 029F
        gbc.setState(0xaa8c, 0x126d, 0x6ff0, 0x3448, 0xae22, 0xd884, 0x1, 0x0);
        gbc.writeMem(0x126d, { 0x55, 0x87 });
        gbc.writeMem(0xaa8c, { 0xc9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x126f, gbc.sp());
        EXPECT(0x8755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xaa8c));
        // C9 02A0
        gbc.setState(0xd96c, 0x4f09, 0x48b0, 0x38a, 0x86a8, 0x78ae, 0x0, 0x0);
        gbc.writeMem(0x4f09, { 0x34, 0x2b });
        gbc.writeMem(0xd96c, { 0xc9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4f0b, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd96c));
        // C9 02A1
        gbc.setState(0x1013, 0x245b, 0x8bf0, 0xe543, 0x3923, 0xe7fd, 0x0, 0x1);
        gbc.writeMem(0x1013, { 0xc9 });
        gbc.writeMem(0x245b, { 0xfd, 0xb4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x245d, gbc.sp());
        EXPECT(0xb4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02A2
        gbc.setState(0x7637, 0xaa9c, 0xd890, 0xf4ba, 0xda3e, 0x7891, 0x1, 0x1);
        gbc.writeMem(0x7637, { 0xc9 });
        gbc.writeMem(0xaa9c, { 0xec, 0x83 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaa9e, gbc.sp());
        EXPECT(0x83ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xaa9c));
        EXPECT(0x83, gbc.readMem(0xaa9d));
        // C9 02A3
        gbc.setState(0x8e07, 0x62d3, 0xce70, 0xae1b, 0x4d44, 0x590d, 0x1, 0x1);
        gbc.writeMem(0x62d3, { 0x83, 0x89 });
        gbc.writeMem(0x8e07, { 0xc9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x62d5, gbc.sp());
        EXPECT(0x8983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8e07));
        // C9 02A4
        gbc.setState(0x8c2a, 0x5ff9, 0x6e70, 0xa7f6, 0xfd5b, 0xae0f, 0x0, 0x0);
        gbc.writeMem(0x5ff9, { 0x4b, 0x16 });
        gbc.writeMem(0x8c2a, { 0xc9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5ffb, gbc.sp());
        EXPECT(0x164b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8c2a));
        // C9 02A5
        gbc.setState(0x6944, 0x856c, 0x4870, 0x72cb, 0x991f, 0x88db, 0x1, 0x0);
        gbc.writeMem(0x6944, { 0xc9 });
        gbc.writeMem(0x856c, { 0x6b, 0xb2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x856e, gbc.sp());
        EXPECT(0xb26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x856c));
        EXPECT(0xb2, gbc.readMem(0x856d));
        // C9 02A6
        gbc.setState(0xae7e, 0xd26e, 0x6560, 0x5683, 0xff2d, 0x7df7, 0x1, 0x0);
        gbc.writeMem(0xae7e, { 0xc9 });
        gbc.writeMem(0xd26e, { 0x9c, 0xed });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd270, gbc.sp());
        EXPECT(0xed9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xae7e));
        EXPECT(0x9c, gbc.readMem(0xd26e));
        EXPECT(0xed, gbc.readMem(0xd26f));
        // C9 02A7
        gbc.setState(0x8a05, 0x2756, 0x9370, 0x93, 0x8295, 0xaadb, 0x0, 0x1);
        gbc.writeMem(0x2756, { 0x31, 0x1 });
        gbc.writeMem(0x8a05, { 0xc9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2758, gbc.sp());
        EXPECT(0x131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8a05));
        // C9 02A8
        gbc.setState(0x668f, 0x224e, 0xab50, 0x42b2, 0x637c, 0x88e1, 0x1, 0x1);
        gbc.writeMem(0x224e, { 0xba, 0x78 });
        gbc.writeMem(0x668f, { 0xc9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2250, gbc.sp());
        EXPECT(0x78ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02A9
        gbc.setState(0xc5ca, 0xa727, 0xf410, 0x777e, 0x4659, 0x300a, 0x0, 0x0);
        gbc.writeMem(0xa727, { 0xe9, 0x5d });
        gbc.writeMem(0xc5ca, { 0xc9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa729, gbc.sp());
        EXPECT(0x5de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa727));
        EXPECT(0x5d, gbc.readMem(0xa728));
        EXPECT(0xc9, gbc.readMem(0xc5ca));
        // C9 02AA
        gbc.setState(0xaae9, 0x72a8, 0x7ea0, 0x3318, 0x4db0, 0xa23d, 0x0, 0x0);
        gbc.writeMem(0x72a8, { 0xdf, 0x10 });
        gbc.writeMem(0xaae9, { 0xc9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x72aa, gbc.sp());
        EXPECT(0x10df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xaae9));
        // C9 02AB
        gbc.setState(0x89ba, 0x79c2, 0xf2d0, 0x26f3, 0x5e11, 0x62df, 0x1, 0x0);
        gbc.writeMem(0x79c2, { 0x54, 0xc1 });
        gbc.writeMem(0x89ba, { 0xc9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x79c4, gbc.sp());
        EXPECT(0xc154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x89ba));
        // C9 02AC
        gbc.setState(0xe039, 0x44e5, 0x510, 0x1cf, 0xd3c4, 0x4847, 0x0, 0x1);
        gbc.writeMem(0x44e5, { 0x35, 0xf4 });
        gbc.writeMem(0xe039, { 0xc9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x44e7, gbc.sp());
        EXPECT(0xf435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe039));
        // C9 02AD
        gbc.setState(0xadeb, 0xa607, 0x52a0, 0x4b74, 0x7b75, 0x6204, 0x1, 0x1);
        gbc.writeMem(0xa607, { 0x49, 0x24 });
        gbc.writeMem(0xadeb, { 0xc9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa609, gbc.sp());
        EXPECT(0x2449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa607));
        EXPECT(0x24, gbc.readMem(0xa608));
        EXPECT(0xc9, gbc.readMem(0xadeb));
        // C9 02AF
        gbc.setState(0x2427, 0x546d, 0x9090, 0xce31, 0x13bf, 0x57d8, 0x1, 0x1);
        gbc.writeMem(0x2427, { 0xc9 });
        gbc.writeMem(0x546d, { 0x7d, 0xbf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x546f, gbc.sp());
        EXPECT(0xbf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02B0
        gbc.setState(0x155d, 0xcfce, 0x5de0, 0xd0f0, 0xf96d, 0x18a0, 0x1, 0x1);
        gbc.writeMem(0x155d, { 0xc9 });
        gbc.writeMem(0xcfce, { 0x68, 0x23 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcfd0, gbc.sp());
        EXPECT(0x2368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcfce));
        EXPECT(0x23, gbc.readMem(0xcfcf));
        // C9 02B1
        gbc.setState(0x129c, 0x2480, 0x65d0, 0xe09f, 0xd80e, 0xb321, 0x0, 0x1);
        gbc.writeMem(0x129c, { 0xc9 });
        gbc.writeMem(0x2480, { 0xb9, 0xc1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2482, gbc.sp());
        EXPECT(0xc1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02B2
        gbc.setState(0x9d17, 0x600d, 0xe90, 0x6be7, 0xd3e8, 0x2eca, 0x1, 0x1);
        gbc.writeMem(0x600d, { 0x69, 0xef });
        gbc.writeMem(0x9d17, { 0xc9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x600f, gbc.sp());
        EXPECT(0xef69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9d17));
        // C9 02B3
        gbc.setState(0xac23, 0x81c1, 0xa70, 0xa40f, 0x1239, 0xbb7d, 0x0, 0x1);
        gbc.writeMem(0x81c1, { 0x77, 0xc6 });
        gbc.writeMem(0xac23, { 0xc9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x81c3, gbc.sp());
        EXPECT(0xc677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x81c1));
        EXPECT(0xc6, gbc.readMem(0x81c2));
        EXPECT(0xc9, gbc.readMem(0xac23));
        // C9 02B4
        gbc.setState(0x1efe, 0x36cf, 0x1e70, 0x633a, 0x72c, 0x3a6d, 0x1, 0x0);
        gbc.writeMem(0x1efe, { 0xc9 });
        gbc.writeMem(0x36cf, { 0x38, 0xa0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x36d1, gbc.sp());
        EXPECT(0xa038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02B5
        gbc.setState(0x427, 0x56f, 0x5b80, 0x626, 0x261, 0x5f38, 0x0, 0x1);
        gbc.writeMem(0x427, { 0xc9 });
        gbc.writeMem(0x56f, { 0x76, 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x571, gbc.sp());
        EXPECT(0x7376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 02B6
        gbc.setState(0xe99a, 0xe39, 0x9dc0, 0x2765, 0xc6c1, 0x466d, 0x1, 0x0);
        gbc.writeMem(0xe39, { 0x66, 0x6a });
        gbc.writeMem(0xe99a, { 0xc9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe3b, gbc.sp());
        EXPECT(0x6a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe99a));
        // C9 02B7
        gbc.setState(0xb696, 0xfc3c, 0xfb40, 0x292f, 0xf088, 0xa1f5, 0x1, 0x1);
        gbc.writeMem(0xb696, { 0xc9 });
        gbc.writeMem(0xfc3c, { 0x59, 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfc3e, gbc.sp());
        EXPECT(0x1359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb696));
        EXPECT(0x59, gbc.readMem(0xfc3c));
        EXPECT(0x13, gbc.readMem(0xfc3d));
        // C9 02B8
        gbc.setState(0x4a77, 0x6ef, 0x3d00, 0xddf, 0x46f, 0x8beb, 0x0, 0x1);
        gbc.writeMem(0x6ef, { 0xfc, 0xdc });
        gbc.writeMem(0x4a77, { 0xc9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6f1, gbc.sp());
        EXPECT(0xdcfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 02B9
        gbc.setState(0x6981, 0x8b13, 0xa1a0, 0x798, 0x4432, 0x97f, 0x0, 0x0);
        gbc.writeMem(0x6981, { 0xc9 });
        gbc.writeMem(0x8b13, { 0xc7, 0x2a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8b15, gbc.sp());
        EXPECT(0x2ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8b13));
        EXPECT(0x2a, gbc.readMem(0x8b14));
        // C9 02BA
        gbc.setState(0x7d17, 0xd531, 0x3ed0, 0x573a, 0xf91, 0x4d34, 0x1, 0x0);
        gbc.writeMem(0x7d17, { 0xc9 });
        gbc.writeMem(0xd531, { 0x4, 0x76 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd533, gbc.sp());
        EXPECT(0x7604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd531));
        EXPECT(0x76, gbc.readMem(0xd532));
        // C9 02BB
        gbc.setState(0x2034, 0x9288, 0x7160, 0xd1b1, 0x9347, 0xac07, 0x1, 0x0);
        gbc.writeMem(0x2034, { 0xc9 });
        gbc.writeMem(0x9288, { 0x5a, 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x928a, gbc.sp());
        EXPECT(0x855a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x9288));
        EXPECT(0x85, gbc.readMem(0x9289));
        // C9 02BC
        gbc.setState(0xede7, 0x395c, 0x80c0, 0x4290, 0x743a, 0xca5c, 0x0, 0x0);
        gbc.writeMem(0x395c, { 0x9c, 0xc8 });
        gbc.writeMem(0xede7, { 0xc9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x395e, gbc.sp());
        EXPECT(0xc89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xede7));
        // C9 02BD
        gbc.setState(0xcd5d, 0xdd14, 0x8350, 0xf734, 0x73f3, 0x2da4, 0x1, 0x1);
        gbc.writeMem(0xcd5d, { 0xc9 });
        gbc.writeMem(0xdd14, { 0x99, 0x92 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdd16, gbc.sp());
        EXPECT(0x9299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xcd5d));
        EXPECT(0x99, gbc.readMem(0xdd14));
        EXPECT(0x92, gbc.readMem(0xdd15));
        // C9 02BE
        gbc.setState(0x9b5c, 0xefee, 0xf80, 0xa5ff, 0xa65d, 0xedef, 0x1, 0x0);
        gbc.writeMem(0x9b5c, { 0xc9 });
        gbc.writeMem(0xefee, { 0x25, 0x32 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xeff0, gbc.sp());
        EXPECT(0x3225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9b5c));
        EXPECT(0x25, gbc.readMem(0xefee));
        EXPECT(0x32, gbc.readMem(0xefef));
        // C9 02BF
        gbc.setState(0x3998, 0x2bd5, 0x2db0, 0x2c66, 0x2008, 0xb79d, 0x1, 0x1);
        gbc.writeMem(0x2bd5, { 0x21, 0xa3 });
        gbc.writeMem(0x3998, { 0xc9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2bd7, gbc.sp());
        EXPECT(0xa321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02C0
        gbc.setState(0xa75c, 0x7b2b, 0x4d90, 0x38da, 0x85a1, 0xd2b2, 0x1, 0x1);
        gbc.writeMem(0x7b2b, { 0x18, 0xde });
        gbc.writeMem(0xa75c, { 0xc9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7b2d, gbc.sp());
        EXPECT(0xde18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa75c));
        // C9 02C1
        gbc.setState(0xebc8, 0xaa29, 0x3f0, 0xc719, 0x2c30, 0x5e8a, 0x0, 0x1);
        gbc.writeMem(0xaa29, { 0xc0, 0x7 });
        gbc.writeMem(0xebc8, { 0xc9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaa2b, gbc.sp());
        EXPECT(0x7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xaa29));
        EXPECT(0x7, gbc.readMem(0xaa2a));
        EXPECT(0xc9, gbc.readMem(0xebc8));
        // C9 02C2
        gbc.setState(0x3c79, 0x4b48, 0x55b0, 0xb137, 0x7a2a, 0x9da2, 0x1, 0x1);
        gbc.writeMem(0x3c79, { 0xc9 });
        gbc.writeMem(0x4b48, { 0x89, 0xde });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4b4a, gbc.sp());
        EXPECT(0xde89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02C3
        gbc.setState(0x7321, 0x6fab, 0xe4a0, 0x7aba, 0x8d5f, 0xb032, 0x0, 0x1);
        gbc.writeMem(0x6fab, { 0x93, 0x42 });
        gbc.writeMem(0x7321, { 0xc9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6fad, gbc.sp());
        EXPECT(0x4293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 02C4
        gbc.setState(0x2ef0, 0x120e, 0x75b0, 0x2868, 0x9256, 0xc6ad, 0x1, 0x1);
        gbc.writeMem(0x120e, { 0x85, 0x94 });
        gbc.writeMem(0x2ef0, { 0xc9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1210, gbc.sp());
        EXPECT(0x9485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02C5
        gbc.setState(0xe42, 0x8fb9, 0xf600, 0x5ff7, 0xe00a, 0x5736, 0x1, 0x0);
        gbc.writeMem(0xe42, { 0xc9 });
        gbc.writeMem(0x8fb9, { 0x71, 0xd8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8fbb, gbc.sp());
        EXPECT(0xd871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8fb9));
        EXPECT(0xd8, gbc.readMem(0x8fba));
        // C9 02C6
        gbc.setState(0x5c32, 0xeab0, 0xf3b0, 0x6862, 0xac2, 0x4ea7, 0x0, 0x1);
        gbc.writeMem(0x5c32, { 0xc9 });
        gbc.writeMem(0xeab0, { 0x33, 0xd1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xeab2, gbc.sp());
        EXPECT(0xd133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xeab0));
        EXPECT(0xd1, gbc.readMem(0xeab1));
        // C9 02C7
        gbc.setState(0xc1f9, 0x341a, 0xdc30, 0x9089, 0x43fc, 0x77ba, 0x0, 0x0);
        gbc.writeMem(0x341a, { 0x3e, 0xac });
        gbc.writeMem(0xc1f9, { 0xc9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x341c, gbc.sp());
        EXPECT(0xac3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc1f9));
        // C9 02C8
        gbc.setState(0xa584, 0x10ec, 0x64f0, 0xdb26, 0xf9a7, 0x33d9, 0x0, 0x1);
        gbc.writeMem(0x10ec, { 0x76, 0x95 });
        gbc.writeMem(0xa584, { 0xc9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x10ee, gbc.sp());
        EXPECT(0x9576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa584));
        // C9 02C9
        gbc.setState(0x49a6, 0x314b, 0x3a20, 0xbfc0, 0xe39, 0x41f8, 0x0, 0x0);
        gbc.writeMem(0x314b, { 0x6f, 0xed });
        gbc.writeMem(0x49a6, { 0xc9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x314d, gbc.sp());
        EXPECT(0xed6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 02CA
        gbc.setState(0x9627, 0x5c13, 0x8950, 0xb83, 0x1c94, 0x936e, 0x1, 0x0);
        gbc.writeMem(0x5c13, { 0x3e, 0x12 });
        gbc.writeMem(0x9627, { 0xc9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5c15, gbc.sp());
        EXPECT(0x123e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9627));
        // C9 02CB
        gbc.setState(0x67e8, 0x63c1, 0x4d0, 0x8883, 0xaee, 0x731d, 0x1, 0x0);
        gbc.writeMem(0x63c1, { 0x13, 0x96 });
        gbc.writeMem(0x67e8, { 0xc9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x63c3, gbc.sp());
        EXPECT(0x9613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02CC
        gbc.setState(0x180a, 0x9140, 0x1280, 0xcaec, 0x73fe, 0xa32b, 0x0, 0x0);
        gbc.writeMem(0x180a, { 0xc9 });
        gbc.writeMem(0x9140, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9142, gbc.sp());
        EXPECT(0xf616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9140));
        EXPECT(0xf6, gbc.readMem(0x9141));
        // C9 02CD
        gbc.setState(0xe992, 0xec3c, 0xbaa0, 0xa4a7, 0x5bfc, 0x4040, 0x0, 0x1);
        gbc.writeMem(0xe992, { 0xc9 });
        gbc.writeMem(0xec3c, { 0xbc, 0x2c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xec3e, gbc.sp());
        EXPECT(0x2cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe992));
        EXPECT(0xbc, gbc.readMem(0xec3c));
        EXPECT(0x2c, gbc.readMem(0xec3d));
        // C9 02CE
        gbc.setState(0x99cd, 0xb86f, 0x90d0, 0x4ddd, 0x967e, 0x3488, 0x0, 0x0);
        gbc.writeMem(0x99cd, { 0xc9 });
        gbc.writeMem(0xb86f, { 0xdd, 0xc5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb871, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x99cd));
        EXPECT(0xdd, gbc.readMem(0xb86f));
        EXPECT(0xc5, gbc.readMem(0xb870));
        // C9 02CF
        gbc.setState(0xdd64, 0xd258, 0xc5e0, 0x4147, 0x4492, 0x4e37, 0x1, 0x1);
        gbc.writeMem(0xd258, { 0x59, 0xb2 });
        gbc.writeMem(0xdd64, { 0xc9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd25a, gbc.sp());
        EXPECT(0xb259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xd258));
        EXPECT(0xb2, gbc.readMem(0xd259));
        EXPECT(0xc9, gbc.readMem(0xdd64));
        // C9 02D0
        gbc.setState(0x4fa7, 0x5c4, 0x7890, 0x4ee5, 0xab4e, 0x1f84, 0x1, 0x1);
        gbc.writeMem(0x5c4, { 0x7f, 0x2e });
        gbc.writeMem(0x4fa7, { 0xc9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5c6, gbc.sp());
        EXPECT(0x2e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02D1
        gbc.setState(0x591e, 0x51bb, 0xfc00, 0x87cb, 0x4ff7, 0xc25c, 0x1, 0x1);
        gbc.writeMem(0x51bb, { 0x4c, 0x8b });
        gbc.writeMem(0x591e, { 0xc9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x51bd, gbc.sp());
        EXPECT(0x8b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 02D2
        gbc.setState(0xde32, 0xcfd6, 0x41e0, 0x50e, 0x2f5a, 0xeb25, 0x1, 0x1);
        gbc.writeMem(0xcfd6, { 0x11, 0x91 });
        gbc.writeMem(0xde32, { 0xc9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcfd8, gbc.sp());
        EXPECT(0x9111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcfd6));
        EXPECT(0x91, gbc.readMem(0xcfd7));
        EXPECT(0xc9, gbc.readMem(0xde32));
        // C9 02D3
        gbc.setState(0xef70, 0x2c5d, 0x3210, 0x26be, 0x58b7, 0xe3a3, 0x1, 0x1);
        gbc.writeMem(0x2c5d, { 0xf7, 0x1d });
        gbc.writeMem(0xef70, { 0xc9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2c5f, gbc.sp());
        EXPECT(0x1df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xef70));
        // C9 02D4
        gbc.setState(0xef3a, 0x99b5, 0x1920, 0xa71b, 0x76a7, 0xbc9b, 0x1, 0x0);
        gbc.writeMem(0x99b5, { 0x4b, 0xc0 });
        gbc.writeMem(0xef3a, { 0xc9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x99b7, gbc.sp());
        EXPECT(0xc04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x99b5));
        EXPECT(0xc0, gbc.readMem(0x99b6));
        EXPECT(0xc9, gbc.readMem(0xef3a));
        // C9 02D5
        gbc.setState(0xabcb, 0x3f2a, 0xe740, 0x4919, 0xcd5b, 0x7a29, 0x1, 0x1);
        gbc.writeMem(0x3f2a, { 0x56, 0x34 });
        gbc.writeMem(0xabcb, { 0xc9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3f2c, gbc.sp());
        EXPECT(0x3456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xabcb));
        // C9 02D6
        gbc.setState(0xbe3d, 0x711a, 0xeb00, 0xe6ee, 0x50da, 0x9d24, 0x0, 0x1);
        gbc.writeMem(0x711a, { 0x34, 0xc3 });
        gbc.writeMem(0xbe3d, { 0xc9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x711c, gbc.sp());
        EXPECT(0xc334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbe3d));
        // C9 02D7
        gbc.setState(0x3892, 0xa96d, 0x15b0, 0x465f, 0xbc4e, 0x1c1b, 0x1, 0x1);
        gbc.writeMem(0x3892, { 0xc9 });
        gbc.writeMem(0xa96d, { 0x7b, 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa96f, gbc.sp());
        EXPECT(0x2f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa96d));
        EXPECT(0x2f, gbc.readMem(0xa96e));
        // C9 02D9
        gbc.setState(0x1297, 0x996, 0x25b0, 0x1387, 0x3f99, 0xd33c, 0x1, 0x0);
        gbc.writeMem(0x996, { 0x3a, 0xc7 });
        gbc.writeMem(0x1297, { 0xc9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x998, gbc.sp());
        EXPECT(0xc73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02DA
        gbc.setState(0x274, 0xc697, 0xa0, 0xaeb9, 0x3afd, 0x3222, 0x1, 0x0);
        gbc.writeMem(0x274, { 0xc9 });
        gbc.writeMem(0xc697, { 0x46, 0x8d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc699, gbc.sp());
        EXPECT(0x8d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xc697));
        EXPECT(0x8d, gbc.readMem(0xc698));
        // C9 02DB
        gbc.setState(0xd95, 0xcdfb, 0xf6e0, 0x14cb, 0x359e, 0x1bae, 0x1, 0x0);
        gbc.writeMem(0xd95, { 0xc9 });
        gbc.writeMem(0xcdfb, { 0x5a, 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcdfd, gbc.sp());
        EXPECT(0x2f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xcdfb));
        EXPECT(0x2f, gbc.readMem(0xcdfc));
        // C9 02DC
        gbc.setState(0x90fe, 0xabf9, 0x2c40, 0x91c, 0xf982, 0xdb1c, 0x0, 0x1);
        gbc.writeMem(0x90fe, { 0xc9 });
        gbc.writeMem(0xabf9, { 0xaf, 0x82 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xabfb, gbc.sp());
        EXPECT(0x82af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x90fe));
        EXPECT(0xaf, gbc.readMem(0xabf9));
        EXPECT(0x82, gbc.readMem(0xabfa));
        // C9 02DE
        gbc.setState(0x792a, 0xa9b0, 0xe3f0, 0x691f, 0xb48e, 0x99a9, 0x1, 0x0);
        gbc.writeMem(0x792a, { 0xc9 });
        gbc.writeMem(0xa9b0, { 0x6a, 0xaf });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa9b2, gbc.sp());
        EXPECT(0xaf6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa9b0));
        EXPECT(0xaf, gbc.readMem(0xa9b1));
        // C9 02DF
        gbc.setState(0xa8d1, 0xb985, 0xf560, 0xea21, 0xd67d, 0xc821, 0x1, 0x0);
        gbc.writeMem(0xa8d1, { 0xc9 });
        gbc.writeMem(0xb985, { 0x30, 0x96 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb987, gbc.sp());
        EXPECT(0x9630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa8d1));
        EXPECT(0x30, gbc.readMem(0xb985));
        EXPECT(0x96, gbc.readMem(0xb986));
        // C9 02E0
        gbc.setState(0xdeb1, 0xe64e, 0x7d60, 0x8bf9, 0xcfb6, 0x17e1, 0x0, 0x0);
        gbc.writeMem(0xdeb1, { 0xc9 });
        gbc.writeMem(0xe64e, { 0x7e, 0xc8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe650, gbc.sp());
        EXPECT(0xc87e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdeb1));
        EXPECT(0x7e, gbc.readMem(0xe64e));
        EXPECT(0xc8, gbc.readMem(0xe64f));
        // C9 02E1
        gbc.setState(0xd8d1, 0x474d, 0xc100, 0x49c1, 0xa6a7, 0x461, 0x1, 0x0);
        gbc.writeMem(0x474d, { 0x64, 0x19 });
        gbc.writeMem(0xd8d1, { 0xc9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x474f, gbc.sp());
        EXPECT(0x1964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd8d1));
        // C9 02E2
        gbc.setState(0xd19a, 0x547f, 0xd6f0, 0xd220, 0x56f5, 0xf887, 0x1, 0x0);
        gbc.writeMem(0x547f, { 0x49, 0x46 });
        gbc.writeMem(0xd19a, { 0xc9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5481, gbc.sp());
        EXPECT(0x4649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd19a));
        // C9 02E4
        gbc.setState(0x8ea, 0x202e, 0xf30, 0xdc0b, 0xbf7b, 0xd59d, 0x0, 0x1);
        gbc.writeMem(0x8ea, { 0xc9 });
        gbc.writeMem(0x202e, { 0x71, 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2030, gbc.sp());
        EXPECT(0xf171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02E5
        gbc.setState(0xd2fa, 0x74c2, 0xf9c0, 0x6d47, 0x366c, 0x57fb, 0x1, 0x1);
        gbc.writeMem(0x74c2, { 0x8, 0x91 });
        gbc.writeMem(0xd2fa, { 0xc9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x74c4, gbc.sp());
        EXPECT(0x9108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd2fa));
        // C9 02E8
        gbc.setState(0xe5ed, 0xe5c1, 0x91d0, 0x24be, 0x9923, 0x690a, 0x0, 0x0);
        gbc.writeMem(0xe5c1, { 0x15, 0x79 });
        gbc.writeMem(0xe5ed, { 0xc9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe5c3, gbc.sp());
        EXPECT(0x7915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe5c1));
        EXPECT(0x79, gbc.readMem(0xe5c2));
        EXPECT(0xc9, gbc.readMem(0xe5ed));
        // C9 02E9
        gbc.setState(0x9e55, 0x7a57, 0x250, 0xa650, 0x2e5e, 0xa2f5, 0x0, 0x1);
        gbc.writeMem(0x7a57, { 0xb8, 0xa9 });
        gbc.writeMem(0x9e55, { 0xc9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7a59, gbc.sp());
        EXPECT(0xa9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9e55));
        // C9 02EA
        gbc.setState(0x3255, 0x50b1, 0xf720, 0xf89c, 0xe907, 0xd618, 0x1, 0x0);
        gbc.writeMem(0x3255, { 0xc9 });
        gbc.writeMem(0x50b1, { 0xec, 0xda });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x50b3, gbc.sp());
        EXPECT(0xdaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 02EC
        gbc.setState(0x2a1a, 0x8146, 0xeb50, 0x77ed, 0xfe31, 0xf2c9, 0x1, 0x1);
        gbc.writeMem(0x2a1a, { 0xc9 });
        gbc.writeMem(0x8146, { 0x6b, 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8148, gbc.sp());
        EXPECT(0x106b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8146));
        EXPECT(0x10, gbc.readMem(0x8147));
        // C9 02ED
        gbc.setState(0xb2d1, 0xf1d1, 0xaff0, 0x4020, 0x279e, 0xf279, 0x0, 0x0);
        gbc.writeMem(0xb2d1, { 0xc9 });
        gbc.writeMem(0xf1d1, { 0xc6, 0x44 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf1d3, gbc.sp());
        EXPECT(0x44c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb2d1));
        EXPECT(0xc6, gbc.readMem(0xf1d1));
        EXPECT(0x44, gbc.readMem(0xf1d2));
        // C9 02EE
        gbc.setState(0xb624, 0xcf81, 0x3f40, 0x116b, 0x87eb, 0x6ad8, 0x1, 0x1);
        gbc.writeMem(0xb624, { 0xc9 });
        gbc.writeMem(0xcf81, { 0x81, 0xb6 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcf83, gbc.sp());
        EXPECT(0xb681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb624));
        EXPECT(0x81, gbc.readMem(0xcf81));
        EXPECT(0xb6, gbc.readMem(0xcf82));
        // C9 02EF
        gbc.setState(0xc2e4, 0x5241, 0x3f50, 0x7a82, 0x8bdf, 0xae52, 0x1, 0x0);
        gbc.writeMem(0x5241, { 0xa8, 0x77 });
        gbc.writeMem(0xc2e4, { 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5243, gbc.sp());
        EXPECT(0x77a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc2e4));
        // C9 02F0
        gbc.setState(0xa928, 0xaafc, 0x7e00, 0xd89c, 0x2952, 0x1e46, 0x1, 0x1);
        gbc.writeMem(0xa928, { 0xc9 });
        gbc.writeMem(0xaafc, { 0x3c, 0xf3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaafe, gbc.sp());
        EXPECT(0xf33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa928));
        EXPECT(0x3c, gbc.readMem(0xaafc));
        EXPECT(0xf3, gbc.readMem(0xaafd));
        // C9 02F2
        gbc.setState(0x7971, 0x5afe, 0x6a30, 0xe72d, 0x783b, 0xaa46, 0x1, 0x0);
        gbc.writeMem(0x5afe, { 0x5e, 0x28 });
        gbc.writeMem(0x7971, { 0xc9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5b00, gbc.sp());
        EXPECT(0x285e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02F3
        gbc.setState(0x72d1, 0xbc9a, 0x5c00, 0x585e, 0x5c59, 0xe62e, 0x0, 0x1);
        gbc.writeMem(0x72d1, { 0xc9 });
        gbc.writeMem(0xbc9a, { 0xfc, 0x78 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbc9c, gbc.sp());
        EXPECT(0x78fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xbc9a));
        EXPECT(0x78, gbc.readMem(0xbc9b));
        // C9 02F4
        gbc.setState(0x3942, 0xe392, 0x73d0, 0x8233, 0x9799, 0x865, 0x0, 0x1);
        gbc.writeMem(0x3942, { 0xc9 });
        gbc.writeMem(0xe392, { 0x15, 0x72 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe394, gbc.sp());
        EXPECT(0x7215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe392));
        EXPECT(0x72, gbc.readMem(0xe393));
        // C9 02F6
        gbc.setState(0x402f, 0xac16, 0x8550, 0xf22f, 0x37b4, 0xca03, 0x1, 0x1);
        gbc.writeMem(0x402f, { 0xc9 });
        gbc.writeMem(0xac16, { 0x53, 0x8e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xac18, gbc.sp());
        EXPECT(0x8e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xac16));
        EXPECT(0x8e, gbc.readMem(0xac17));
        // C9 02F7
        gbc.setState(0xb4d8, 0xee5b, 0x8990, 0x338d, 0xd41b, 0x738, 0x1, 0x1);
        gbc.writeMem(0xb4d8, { 0xc9 });
        gbc.writeMem(0xee5b, { 0x9f, 0xa6 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xee5d, gbc.sp());
        EXPECT(0xa69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb4d8));
        EXPECT(0x9f, gbc.readMem(0xee5b));
        EXPECT(0xa6, gbc.readMem(0xee5c));
        // C9 02F8
        gbc.setState(0x22e8, 0x4a9, 0xb510, 0x4b78, 0x5cab, 0xce5e, 0x0, 0x0);
        gbc.writeMem(0x4a9, { 0xd1, 0x33 });
        gbc.writeMem(0x22e8, { 0xc9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4ab, gbc.sp());
        EXPECT(0x33d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 02F9
        gbc.setState(0x8adc, 0x8519, 0x5960, 0xc19a, 0x7615, 0x5888, 0x0, 0x1);
        gbc.writeMem(0x8519, { 0xed, 0xbf });
        gbc.writeMem(0x8adc, { 0xc9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x851b, gbc.sp());
        EXPECT(0xbfed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8519));
        EXPECT(0xbf, gbc.readMem(0x851a));
        EXPECT(0xc9, gbc.readMem(0x8adc));
        // C9 02FA
        gbc.setState(0xa7a0, 0x5c5b, 0x6850, 0x1092, 0x3d24, 0x10e0, 0x0, 0x1);
        gbc.writeMem(0x5c5b, { 0x4e, 0x49 });
        gbc.writeMem(0xa7a0, { 0xc9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5c5d, gbc.sp());
        EXPECT(0x494e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa7a0));
        // C9 02FB
        gbc.setState(0xdc2e, 0x4405, 0xcf50, 0x32a7, 0xf3cf, 0x252e, 0x0, 0x0);
        gbc.writeMem(0x4405, { 0xac, 0xce });
        gbc.writeMem(0xdc2e, { 0xc9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4407, gbc.sp());
        EXPECT(0xceac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdc2e));
        // C9 02FC
        gbc.setState(0x52ef, 0xaa65, 0x14e0, 0xbec5, 0x2111, 0xa383, 0x0, 0x0);
        gbc.writeMem(0x52ef, { 0xc9 });
        gbc.writeMem(0xaa65, { 0x10, 0x11 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaa67, gbc.sp());
        EXPECT(0x1110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaa65));
        EXPECT(0x11, gbc.readMem(0xaa66));
        // C9 02FD
        gbc.setState(0x9d23, 0xb211, 0xfde0, 0x8734, 0x6e51, 0x695b, 0x1, 0x1);
        gbc.writeMem(0x9d23, { 0xc9 });
        gbc.writeMem(0xb211, { 0xfd, 0xe6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb213, gbc.sp());
        EXPECT(0xe6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9d23));
        EXPECT(0xfd, gbc.readMem(0xb211));
        EXPECT(0xe6, gbc.readMem(0xb212));
        // C9 02FE
        gbc.setState(0xcfb6, 0xcf0, 0xfa80, 0x57a7, 0xb68, 0xd3c8, 0x0, 0x0);
        gbc.writeMem(0xcf0, { 0x47, 0xb0 });
        gbc.writeMem(0xcfb6, { 0xc9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcf2, gbc.sp());
        EXPECT(0xb047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xcfb6));
        // C9 02FF
        gbc.setState(0x783e, 0x4701, 0xdc10, 0xd114, 0xcb3c, 0x4bf2, 0x1, 0x0);
        gbc.writeMem(0x4701, { 0x2, 0xff });
        gbc.writeMem(0x783e, { 0xc9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4703, gbc.sp());
        EXPECT(0xff02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0300
        gbc.setState(0x588c, 0x4d5a, 0xd420, 0xd17f, 0x8c42, 0x2efd, 0x0, 0x0);
        gbc.writeMem(0x4d5a, { 0x74, 0x6a });
        gbc.writeMem(0x588c, { 0xc9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4d5c, gbc.sp());
        EXPECT(0x6a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0301
        gbc.setState(0x2784, 0x800, 0x33e0, 0xda38, 0x7a2f, 0x31b8, 0x0, 0x1);
        gbc.writeMem(0x800, { 0x76, 0xea });
        gbc.writeMem(0x2784, { 0xc9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x802, gbc.sp());
        EXPECT(0xea76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0302
        gbc.setState(0xefa4, 0x84c5, 0xe360, 0xa3b1, 0x4b12, 0xdd4f, 0x1, 0x0);
        gbc.writeMem(0x84c5, { 0x3b, 0x2f });
        gbc.writeMem(0xefa4, { 0xc9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x84c7, gbc.sp());
        EXPECT(0x2f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x84c5));
        EXPECT(0x2f, gbc.readMem(0x84c6));
        EXPECT(0xc9, gbc.readMem(0xefa4));
        // C9 0304
        gbc.setState(0x5ca8, 0xfb73, 0x1cf0, 0x7e85, 0xd9d9, 0xf3b2, 0x1, 0x1);
        gbc.writeMem(0x5ca8, { 0xc9 });
        gbc.writeMem(0xfb73, { 0xd, 0xf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfb75, gbc.sp());
        EXPECT(0xf0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xfb73));
        EXPECT(0xf, gbc.readMem(0xfb74));
        // C9 0305
        gbc.setState(0xd072, 0x51c6, 0xb7a0, 0xaa81, 0x1e75, 0x22a, 0x1, 0x0);
        gbc.writeMem(0x51c6, { 0xc9, 0x7e });
        gbc.writeMem(0xd072, { 0xc9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x51c8, gbc.sp());
        EXPECT(0x7ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd072));
        // C9 0306
        gbc.setState(0x71b0, 0xeac0, 0xa7d0, 0xcc5b, 0xe22, 0x3bea, 0x1, 0x1);
        gbc.writeMem(0x71b0, { 0xc9 });
        gbc.writeMem(0xeac0, { 0x3b, 0x9f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeac2, gbc.sp());
        EXPECT(0x9f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xeac0));
        EXPECT(0x9f, gbc.readMem(0xeac1));
        // C9 0307
        gbc.setState(0x25e7, 0x9c00, 0xa860, 0x488e, 0x4125, 0x5610, 0x1, 0x0);
        gbc.writeMem(0x25e7, { 0xc9 });
        gbc.writeMem(0x9c00, { 0x79, 0xfa });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9c02, gbc.sp());
        EXPECT(0xfa79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9c00));
        EXPECT(0xfa, gbc.readMem(0x9c01));
        // C9 0308
        gbc.setState(0xb1c2, 0xb800, 0xa6c0, 0xbb7d, 0xfda6, 0xe148, 0x0, 0x1);
        gbc.writeMem(0xb1c2, { 0xc9 });
        gbc.writeMem(0xb800, { 0xa2, 0x79 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb802, gbc.sp());
        EXPECT(0x79a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb1c2));
        EXPECT(0xa2, gbc.readMem(0xb800));
        EXPECT(0x79, gbc.readMem(0xb801));
        // C9 0309
        gbc.setState(0xaf92, 0xb938, 0xc820, 0x5744, 0x9eff, 0x3d89, 0x1, 0x0);
        gbc.writeMem(0xaf92, { 0xc9 });
        gbc.writeMem(0xb938, { 0x2e, 0x7b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb93a, gbc.sp());
        EXPECT(0x7b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xaf92));
        EXPECT(0x2e, gbc.readMem(0xb938));
        EXPECT(0x7b, gbc.readMem(0xb939));
        // C9 030A
        gbc.setState(0x602a, 0x7f85, 0xa750, 0x1352, 0x9787, 0x901, 0x0, 0x0);
        gbc.writeMem(0x602a, { 0xc9 });
        gbc.writeMem(0x7f85, { 0x8f, 0xbd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7f87, gbc.sp());
        EXPECT(0xbd8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 030B
        gbc.setState(0x62b9, 0xe5b, 0x1fe0, 0x69a7, 0x77e1, 0x7155, 0x1, 0x1);
        gbc.writeMem(0xe5b, { 0x1b, 0x74 });
        gbc.writeMem(0x62b9, { 0xc9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe5d, gbc.sp());
        EXPECT(0x741b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 030C
        gbc.setState(0xab79, 0xf658, 0x370, 0x43cf, 0xd4bc, 0xec23, 0x0, 0x1);
        gbc.writeMem(0xab79, { 0xc9 });
        gbc.writeMem(0xf658, { 0x1c, 0x5e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf65a, gbc.sp());
        EXPECT(0x5e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xab79));
        EXPECT(0x1c, gbc.readMem(0xf658));
        EXPECT(0x5e, gbc.readMem(0xf659));
        // C9 030D
        gbc.setState(0xa385, 0x16e2, 0x62b0, 0xa053, 0xe7b4, 0xfc8f, 0x0, 0x1);
        gbc.writeMem(0x16e2, { 0xa8, 0xc5 });
        gbc.writeMem(0xa385, { 0xc9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x16e4, gbc.sp());
        EXPECT(0xc5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa385));
        // C9 030E
        gbc.setState(0xe470, 0x87e1, 0x9850, 0x6031, 0xfbd5, 0x39d4, 0x0, 0x0);
        gbc.writeMem(0x87e1, { 0x4f, 0xda });
        gbc.writeMem(0xe470, { 0xc9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x87e3, gbc.sp());
        EXPECT(0xda4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x87e1));
        EXPECT(0xda, gbc.readMem(0x87e2));
        EXPECT(0xc9, gbc.readMem(0xe470));
        // C9 030F
        gbc.setState(0x11d9, 0xaf11, 0x56c0, 0x950b, 0xef39, 0xec8f, 0x0, 0x0);
        gbc.writeMem(0x11d9, { 0xc9 });
        gbc.writeMem(0xaf11, { 0x8e, 0x4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaf13, gbc.sp());
        EXPECT(0x48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xaf11));
        EXPECT(0x4, gbc.readMem(0xaf12));
        // C9 0310
        gbc.setState(0xa519, 0x1e39, 0x3340, 0x6fae, 0x52a, 0x2995, 0x1, 0x0);
        gbc.writeMem(0x1e39, { 0xd4, 0x4b });
        gbc.writeMem(0xa519, { 0xc9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1e3b, gbc.sp());
        EXPECT(0x4bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa519));
        // C9 0311
        gbc.setState(0x5fe8, 0x2fae, 0x3360, 0xe2fe, 0x6ff0, 0x5a98, 0x0, 0x1);
        gbc.writeMem(0x2fae, { 0xc9, 0xc1 });
        gbc.writeMem(0x5fe8, { 0xc9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2fb0, gbc.sp());
        EXPECT(0xc1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0312
        gbc.setState(0x4a44, 0xc8cb, 0xbb80, 0xd578, 0xaa17, 0xb8ef, 0x1, 0x1);
        gbc.writeMem(0x4a44, { 0xc9 });
        gbc.writeMem(0xc8cb, { 0x8d, 0xaa });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc8cd, gbc.sp());
        EXPECT(0xaa8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc8cb));
        EXPECT(0xaa, gbc.readMem(0xc8cc));
        // C9 0313
        gbc.setState(0x58fe, 0x19a2, 0xfef0, 0x6634, 0xa8d2, 0x395, 0x1, 0x1);
        gbc.writeMem(0x19a2, { 0x71, 0xd4 });
        gbc.writeMem(0x58fe, { 0xc9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x19a4, gbc.sp());
        EXPECT(0xd471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0314
        gbc.setState(0xb5d1, 0xa2a6, 0xee50, 0x991f, 0xd778, 0x7665, 0x1, 0x1);
        gbc.writeMem(0xa2a6, { 0x9e, 0x92 });
        gbc.writeMem(0xb5d1, { 0xc9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa2a8, gbc.sp());
        EXPECT(0x929e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa2a6));
        EXPECT(0x92, gbc.readMem(0xa2a7));
        EXPECT(0xc9, gbc.readMem(0xb5d1));
        // C9 0315
        gbc.setState(0x22bb, 0xf98d, 0x71e0, 0x4015, 0xa1cd, 0xfb91, 0x0, 0x0);
        gbc.writeMem(0x22bb, { 0xc9 });
        gbc.writeMem(0xf98d, { 0xd6, 0xd0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf98f, gbc.sp());
        EXPECT(0xd0d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xf98d));
        EXPECT(0xd0, gbc.readMem(0xf98e));
        // C9 0316
        gbc.setState(0x5e7e, 0xce2, 0x3800, 0x8575, 0x382, 0xedf7, 0x1, 0x0);
        gbc.writeMem(0xce2, { 0xfb, 0xd3 });
        gbc.writeMem(0x5e7e, { 0xc9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xce4, gbc.sp());
        EXPECT(0xd3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0317
        gbc.setState(0xa2e4, 0x8df2, 0xde70, 0xc1ab, 0x2ffe, 0xad91, 0x1, 0x0);
        gbc.writeMem(0x8df2, { 0x96, 0xca });
        gbc.writeMem(0xa2e4, { 0xc9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8df4, gbc.sp());
        EXPECT(0xca96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8df2));
        EXPECT(0xca, gbc.readMem(0x8df3));
        EXPECT(0xc9, gbc.readMem(0xa2e4));
        // C9 0319
        gbc.setState(0x5cca, 0x7cbb, 0xdba0, 0xa9ef, 0xb64c, 0xb900, 0x0, 0x1);
        gbc.writeMem(0x5cca, { 0xc9 });
        gbc.writeMem(0x7cbb, { 0xeb, 0x8d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7cbd, gbc.sp());
        EXPECT(0x8deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 031A
        gbc.setState(0xdaf2, 0x2b31, 0x17d0, 0xad42, 0xe7dd, 0x8ca5, 0x0, 0x0);
        gbc.writeMem(0x2b31, { 0x81, 0x97 });
        gbc.writeMem(0xdaf2, { 0xc9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2b33, gbc.sp());
        EXPECT(0x9781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdaf2));
        // C9 031D
        gbc.setState(0x78b6, 0x8cab, 0x79b0, 0xabfb, 0xd08b, 0x50fc, 0x0, 0x1);
        gbc.writeMem(0x78b6, { 0xc9 });
        gbc.writeMem(0x8cab, { 0xc5, 0xe1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8cad, gbc.sp());
        EXPECT(0xe1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8cab));
        EXPECT(0xe1, gbc.readMem(0x8cac));
        // C9 031E
        gbc.setState(0x31de, 0x5f70, 0x6a40, 0xb238, 0x39c, 0xb77f, 0x0, 0x1);
        gbc.writeMem(0x31de, { 0xc9 });
        gbc.writeMem(0x5f70, { 0x27, 0x95 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5f72, gbc.sp());
        EXPECT(0x9527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 031F
        gbc.setState(0xae62, 0x4e71, 0xf9a0, 0x1203, 0xebb, 0xc18b, 0x0, 0x0);
        gbc.writeMem(0x4e71, { 0xe, 0x5f });
        gbc.writeMem(0xae62, { 0xc9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4e73, gbc.sp());
        EXPECT(0x5f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xae62));
        // C9 0320
        gbc.setState(0x5bc3, 0x295f, 0x5690, 0x1b45, 0xeb2b, 0x9144, 0x1, 0x1);
        gbc.writeMem(0x295f, { 0x9b, 0xfe });
        gbc.writeMem(0x5bc3, { 0xc9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0xfe9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0321
        gbc.setState(0x1c75, 0x1965, 0x6320, 0x9f4, 0x892d, 0x9fda, 0x0, 0x0);
        gbc.writeMem(0x1965, { 0xbb, 0xb6 });
        gbc.writeMem(0x1c75, { 0xc9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1967, gbc.sp());
        EXPECT(0xb6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0322
        gbc.setState(0x250d, 0x17d6, 0xf640, 0x7697, 0x1f85, 0x19fd, 0x1, 0x1);
        gbc.writeMem(0x17d6, { 0xfe, 0x18 });
        gbc.writeMem(0x250d, { 0xc9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x17d8, gbc.sp());
        EXPECT(0x18fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0323
        gbc.setState(0x6c92, 0x7f57, 0x110, 0xe5a8, 0x9359, 0xee98, 0x0, 0x0);
        gbc.writeMem(0x6c92, { 0xc9 });
        gbc.writeMem(0x7f57, { 0x4b, 0x94 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7f59, gbc.sp());
        EXPECT(0x944b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0324
        gbc.setState(0x6b2e, 0xdbf3, 0xb0a0, 0x8e06, 0x4ff2, 0x30b3, 0x1, 0x0);
        gbc.writeMem(0x6b2e, { 0xc9 });
        gbc.writeMem(0xdbf3, { 0x67, 0xbe });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdbf5, gbc.sp());
        EXPECT(0xbe67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xdbf3));
        EXPECT(0xbe, gbc.readMem(0xdbf4));
        // C9 0325
        gbc.setState(0x6be0, 0x6cc, 0x9bd0, 0x6181, 0x1f76, 0x124, 0x1, 0x1);
        gbc.writeMem(0x6cc, { 0xee, 0xd4 });
        gbc.writeMem(0x6be0, { 0xc9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6ce, gbc.sp());
        EXPECT(0xd4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0326
        gbc.setState(0xc54d, 0x4150, 0x1420, 0xcdf8, 0x6c30, 0x933b, 0x0, 0x0);
        gbc.writeMem(0x4150, { 0xa9, 0x4c });
        gbc.writeMem(0xc54d, { 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4152, gbc.sp());
        EXPECT(0x4ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc54d));
        // C9 0327
        gbc.setState(0x1dfc, 0xd3d7, 0xd360, 0x3fd6, 0x915c, 0xb58a, 0x1, 0x0);
        gbc.writeMem(0x1dfc, { 0xc9 });
        gbc.writeMem(0xd3d7, { 0xfc, 0xdc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd3d9, gbc.sp());
        EXPECT(0xdcfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xd3d7));
        EXPECT(0xdc, gbc.readMem(0xd3d8));
        // C9 0328
        gbc.setState(0xde65, 0xecca, 0x2930, 0xf98b, 0xd837, 0x1a93, 0x0, 0x1);
        gbc.writeMem(0xde65, { 0xc9 });
        gbc.writeMem(0xecca, { 0xf9, 0xf0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xeccc, gbc.sp());
        EXPECT(0xf0f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xde65));
        EXPECT(0xf9, gbc.readMem(0xecca));
        EXPECT(0xf0, gbc.readMem(0xeccb));
        // C9 0329
        gbc.setState(0xe177, 0xccea, 0x4270, 0xe46b, 0x5db4, 0x2b1a, 0x0, 0x0);
        gbc.writeMem(0xccea, { 0x71, 0xcf });
        gbc.writeMem(0xe177, { 0xc9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xccec, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xccea));
        EXPECT(0xcf, gbc.readMem(0xcceb));
        EXPECT(0xc9, gbc.readMem(0xe177));
        // C9 032A
        gbc.setState(0xc404, 0x90af, 0x6930, 0xa643, 0x98d1, 0x8cd6, 0x1, 0x0);
        gbc.writeMem(0x90af, { 0x82, 0xc7 });
        gbc.writeMem(0xc404, { 0xc9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x90b1, gbc.sp());
        EXPECT(0xc782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x90af));
        EXPECT(0xc7, gbc.readMem(0x90b0));
        EXPECT(0xc9, gbc.readMem(0xc404));
        // C9 032B
        gbc.setState(0x15f1, 0xcbb2, 0xdec0, 0x68f3, 0x3d8, 0x2cdb, 0x1, 0x0);
        gbc.writeMem(0x15f1, { 0xc9 });
        gbc.writeMem(0xcbb2, { 0xff, 0xfd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcbb4, gbc.sp());
        EXPECT(0xfdff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xcbb2));
        EXPECT(0xfd, gbc.readMem(0xcbb3));
        // C9 032C
        gbc.setState(0xbd80, 0x19c3, 0x9400, 0x10c6, 0x8b1d, 0x88df, 0x1, 0x1);
        gbc.writeMem(0x19c3, { 0xde, 0x92 });
        gbc.writeMem(0xbd80, { 0xc9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x19c5, gbc.sp());
        EXPECT(0x92de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbd80));
        // C9 032D
        gbc.setState(0xb0b2, 0xcf9, 0xa3a0, 0xdf0a, 0xcf48, 0x7305, 0x0, 0x1);
        gbc.writeMem(0xcf9, { 0xe9, 0x38 });
        gbc.writeMem(0xb0b2, { 0xc9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcfb, gbc.sp());
        EXPECT(0x38e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb0b2));
        // C9 032E
        gbc.setState(0xb215, 0x6084, 0xe750, 0xa4de, 0xd079, 0xfd9, 0x1, 0x1);
        gbc.writeMem(0x6084, { 0xd6, 0x98 });
        gbc.writeMem(0xb215, { 0xc9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6086, gbc.sp());
        EXPECT(0x98d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb215));
        // C9 032F
        gbc.setState(0x4d73, 0x56e9, 0xc480, 0x2e78, 0x7525, 0xb3ca, 0x1, 0x1);
        gbc.writeMem(0x4d73, { 0xc9 });
        gbc.writeMem(0x56e9, { 0xee, 0x40 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x56eb, gbc.sp());
        EXPECT(0x40ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0330
        gbc.setState(0xc79b, 0xb476, 0x4220, 0xf40e, 0xd50c, 0x8280, 0x0, 0x0);
        gbc.writeMem(0xb476, { 0x2d, 0x2 });
        gbc.writeMem(0xc79b, { 0xc9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb478, gbc.sp());
        EXPECT(0x22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb476));
        EXPECT(0x2, gbc.readMem(0xb477));
        EXPECT(0xc9, gbc.readMem(0xc79b));
        // C9 0331
        gbc.setState(0xb118, 0x6387, 0x5010, 0xd385, 0xf068, 0xff3b, 0x1, 0x0);
        gbc.writeMem(0x6387, { 0xf2, 0x30 });
        gbc.writeMem(0xb118, { 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6389, gbc.sp());
        EXPECT(0x30f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb118));
        // C9 0332
        gbc.setState(0x3c11, 0xddbf, 0xba70, 0x4716, 0xb1d9, 0x9c19, 0x0, 0x1);
        gbc.writeMem(0x3c11, { 0xc9 });
        gbc.writeMem(0xddbf, { 0x20, 0x89 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xddc1, gbc.sp());
        EXPECT(0x8920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xddbf));
        EXPECT(0x89, gbc.readMem(0xddc0));
        // C9 0333
        gbc.setState(0x5692, 0xd528, 0x8370, 0xbf17, 0x2ce0, 0x9040, 0x1, 0x1);
        gbc.writeMem(0x5692, { 0xc9 });
        gbc.writeMem(0xd528, { 0xb4, 0xa3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd52a, gbc.sp());
        EXPECT(0xa3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xd528));
        EXPECT(0xa3, gbc.readMem(0xd529));
        // C9 0334
        gbc.setState(0x6337, 0x27cf, 0x3000, 0x88c8, 0x597a, 0x6fd1, 0x0, 0x1);
        gbc.writeMem(0x27cf, { 0xef, 0xec });
        gbc.writeMem(0x6337, { 0xc9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x27d1, gbc.sp());
        EXPECT(0xecef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0335
        gbc.setState(0x74e2, 0x7d1c, 0xf070, 0xe23f, 0xe33a, 0xa10d, 0x1, 0x1);
        gbc.writeMem(0x74e2, { 0xc9 });
        gbc.writeMem(0x7d1c, { 0x24, 0x26 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7d1e, gbc.sp());
        EXPECT(0x2624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0336
        gbc.setState(0x5512, 0x445b, 0x25f0, 0x51d7, 0x7115, 0x4d21, 0x1, 0x0);
        gbc.writeMem(0x445b, { 0x2f, 0x17 });
        gbc.writeMem(0x5512, { 0xc9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x445d, gbc.sp());
        EXPECT(0x172f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0337
        gbc.setState(0x5cf4, 0x80f, 0x2640, 0xd256, 0xbdee, 0xb336, 0x1, 0x1);
        gbc.writeMem(0x80f, { 0xd4, 0x23 });
        gbc.writeMem(0x5cf4, { 0xc9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x811, gbc.sp());
        EXPECT(0x23d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0338
        gbc.setState(0xea2d, 0x96ba, 0x5200, 0xcd36, 0x2802, 0x6e82, 0x1, 0x1);
        gbc.writeMem(0x96ba, { 0x8c, 0xc8 });
        gbc.writeMem(0xea2d, { 0xc9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x96bc, gbc.sp());
        EXPECT(0xc88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x96ba));
        EXPECT(0xc8, gbc.readMem(0x96bb));
        EXPECT(0xc9, gbc.readMem(0xea2d));
        // C9 0339
        gbc.setState(0x1143, 0x819d, 0xd0, 0xe2bb, 0x547a, 0xc0d1, 0x1, 0x1);
        gbc.writeMem(0x1143, { 0xc9 });
        gbc.writeMem(0x819d, { 0xc8, 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x819f, gbc.sp());
        EXPECT(0x37c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x819d));
        EXPECT(0x37, gbc.readMem(0x819e));
        // C9 033A
        gbc.setState(0xa26a, 0xcaca, 0xbb20, 0xa225, 0x7384, 0x206f, 0x1, 0x0);
        gbc.writeMem(0xa26a, { 0xc9 });
        gbc.writeMem(0xcaca, { 0x73, 0x82 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcacc, gbc.sp());
        EXPECT(0x8273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa26a));
        EXPECT(0x73, gbc.readMem(0xcaca));
        EXPECT(0x82, gbc.readMem(0xcacb));
        // C9 033B
        gbc.setState(0x265a, 0x5073, 0xac40, 0xc52b, 0x7195, 0x2e, 0x1, 0x0);
        gbc.writeMem(0x265a, { 0xc9 });
        gbc.writeMem(0x5073, { 0x3, 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5075, gbc.sp());
        EXPECT(0x8f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 033C
        gbc.setState(0x9396, 0xc25a, 0x6ae0, 0x5faf, 0x33a4, 0xb27d, 0x0, 0x1);
        gbc.writeMem(0x9396, { 0xc9 });
        gbc.writeMem(0xc25a, { 0x5b, 0x88 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc25c, gbc.sp());
        EXPECT(0x885b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9396));
        EXPECT(0x5b, gbc.readMem(0xc25a));
        EXPECT(0x88, gbc.readMem(0xc25b));
        // C9 033D
        gbc.setState(0x805a, 0x7f8c, 0xb610, 0x464a, 0xb8d1, 0x4112, 0x0, 0x0);
        gbc.writeMem(0x7f8c, { 0xfb, 0x30 });
        gbc.writeMem(0x805a, { 0xc9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7f8e, gbc.sp());
        EXPECT(0x30fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x805a));
        // C9 033E
        gbc.setState(0x5ae3, 0x7c74, 0x3bd0, 0x1767, 0xc64, 0xcba6, 0x1, 0x1);
        gbc.writeMem(0x5ae3, { 0xc9 });
        gbc.writeMem(0x7c74, { 0xee, 0x30 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7c76, gbc.sp());
        EXPECT(0x30ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 033F
        gbc.setState(0x8486, 0xf877, 0x9970, 0x6035, 0x8f84, 0xe34f, 0x1, 0x0);
        gbc.writeMem(0x8486, { 0xc9 });
        gbc.writeMem(0xf877, { 0xb0, 0xe2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf879, gbc.sp());
        EXPECT(0xe2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8486));
        EXPECT(0xb0, gbc.readMem(0xf877));
        EXPECT(0xe2, gbc.readMem(0xf878));
        // C9 0340
        gbc.setState(0x7717, 0x5131, 0x3040, 0x5de9, 0x68f7, 0x83a2, 0x1, 0x1);
        gbc.writeMem(0x5131, { 0x8c, 0x9b });
        gbc.writeMem(0x7717, { 0xc9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5133, gbc.sp());
        EXPECT(0x9b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0341
        gbc.setState(0xc38d, 0xe27b, 0xfc30, 0xd786, 0xb46f, 0xa7b8, 0x0, 0x1);
        gbc.writeMem(0xc38d, { 0xc9 });
        gbc.writeMem(0xe27b, { 0x9c, 0x76 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe27d, gbc.sp());
        EXPECT(0x769c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc38d));
        EXPECT(0x9c, gbc.readMem(0xe27b));
        EXPECT(0x76, gbc.readMem(0xe27c));
        // C9 0342
        gbc.setState(0x11c5, 0x6761, 0x1030, 0xe63c, 0x9c93, 0x9a6c, 0x0, 0x1);
        gbc.writeMem(0x11c5, { 0xc9 });
        gbc.writeMem(0x6761, { 0xb5, 0x93 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6763, gbc.sp());
        EXPECT(0x93b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0343
        gbc.setState(0x27f2, 0x195c, 0x7b90, 0x7910, 0xec37, 0xddca, 0x0, 0x1);
        gbc.writeMem(0x195c, { 0x52, 0x54 });
        gbc.writeMem(0x27f2, { 0xc9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x195e, gbc.sp());
        EXPECT(0x5452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0344
        gbc.setState(0xc25, 0x48ef, 0x7210, 0xd472, 0xba8d, 0xe124, 0x0, 0x0);
        gbc.writeMem(0xc25, { 0xc9 });
        gbc.writeMem(0x48ef, { 0x2a, 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x48f1, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0345
        gbc.setState(0x85a4, 0x487b, 0x4600, 0x1b82, 0x65b2, 0x2284, 0x0, 0x1);
        gbc.writeMem(0x487b, { 0x42, 0xe6 });
        gbc.writeMem(0x85a4, { 0xc9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x487d, gbc.sp());
        EXPECT(0xe642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x85a4));
        // C9 0346
        gbc.setState(0x3a7d, 0x84f4, 0xa1e0, 0xa450, 0xae2a, 0x96a0, 0x0, 0x1);
        gbc.writeMem(0x3a7d, { 0xc9 });
        gbc.writeMem(0x84f4, { 0x1d, 0xd9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x84f6, gbc.sp());
        EXPECT(0xd91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x84f4));
        EXPECT(0xd9, gbc.readMem(0x84f5));
        // C9 0347
        gbc.setState(0x9b8b, 0xb625, 0x9250, 0x9ad6, 0x5e66, 0x7244, 0x0, 0x0);
        gbc.writeMem(0x9b8b, { 0xc9 });
        gbc.writeMem(0xb625, { 0x6b, 0x49 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb627, gbc.sp());
        EXPECT(0x496b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9b8b));
        EXPECT(0x6b, gbc.readMem(0xb625));
        EXPECT(0x49, gbc.readMem(0xb626));
        // C9 0348
        gbc.setState(0x9a46, 0x33ce, 0x5230, 0x295f, 0x658b, 0x8d7f, 0x0, 0x1);
        gbc.writeMem(0x33ce, { 0x96, 0x7c });
        gbc.writeMem(0x9a46, { 0xc9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x33d0, gbc.sp());
        EXPECT(0x7c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9a46));
        // C9 0349
        gbc.setState(0x82ef, 0x2275, 0x8f10, 0x5dc2, 0x6d9f, 0xc5d8, 0x0, 0x0);
        gbc.writeMem(0x2275, { 0xe, 0x87 });
        gbc.writeMem(0x82ef, { 0xc9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2277, gbc.sp());
        EXPECT(0x870e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x82ef));
        // C9 034A
        gbc.setState(0xe312, 0x3e6, 0xe60, 0xeea8, 0x66e3, 0x595e, 0x0, 0x1);
        gbc.writeMem(0x3e6, { 0xee, 0x85 });
        gbc.writeMem(0xe312, { 0xc9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3e8, gbc.sp());
        EXPECT(0x85ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe312));
        // C9 034B
        gbc.setState(0xd373, 0x2e68, 0x7ca0, 0x7a28, 0xe9, 0x5f44, 0x0, 0x0);
        gbc.writeMem(0x2e68, { 0xf2, 0xa5 });
        gbc.writeMem(0xd373, { 0xc9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2e6a, gbc.sp());
        EXPECT(0xa5f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd373));
        // C9 034C
        gbc.setState(0xd5e4, 0xefee, 0x1010, 0x3ae, 0x883, 0xfd3d, 0x1, 0x0);
        gbc.writeMem(0xd5e4, { 0xc9 });
        gbc.writeMem(0xefee, { 0x25, 0x32 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xeff0, gbc.sp());
        EXPECT(0x3225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd5e4));
        EXPECT(0x25, gbc.readMem(0xefee));
        EXPECT(0x32, gbc.readMem(0xefef));
        // C9 034D
        gbc.setState(0x507e, 0x2881, 0x9200, 0x3252, 0x465b, 0xc8fc, 0x1, 0x0);
        gbc.writeMem(0x2881, { 0x96, 0xb6 });
        gbc.writeMem(0x507e, { 0xc9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2883, gbc.sp());
        EXPECT(0xb696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 034E
        gbc.setState(0x32a0, 0xc887, 0xc610, 0x707d, 0x764c, 0x5def, 0x1, 0x1);
        gbc.writeMem(0x32a0, { 0xc9 });
        gbc.writeMem(0xc887, { 0xb5, 0x56 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc889, gbc.sp());
        EXPECT(0x56b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc887));
        EXPECT(0x56, gbc.readMem(0xc888));
        // C9 034F
        gbc.setState(0x2db1, 0xae1a, 0xbba0, 0xe831, 0xa84f, 0xd7a8, 0x1, 0x1);
        gbc.writeMem(0x2db1, { 0xc9 });
        gbc.writeMem(0xae1a, { 0x7a, 0xaa });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xae1c, gbc.sp());
        EXPECT(0xaa7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xae1a));
        EXPECT(0xaa, gbc.readMem(0xae1b));
        // C9 0350
        gbc.setState(0x5167, 0xfe27, 0x2690, 0x1e7e, 0x17c, 0x84ce, 0x0, 0x0);
        gbc.writeMem(0x5167, { 0xc9 });
        gbc.writeMem(0xfe27, { 0x9, 0xce });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfe29, gbc.sp());
        EXPECT(0xce09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xfe27));
        EXPECT(0xce, gbc.readMem(0xfe28));
        // C9 0351
        gbc.setState(0x6417, 0xa291, 0x3680, 0x40e7, 0xea5f, 0xb8cc, 0x0, 0x1);
        gbc.writeMem(0x6417, { 0xc9 });
        gbc.writeMem(0xa291, { 0xd, 0x3a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa293, gbc.sp());
        EXPECT(0x3a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xa291));
        EXPECT(0x3a, gbc.readMem(0xa292));
        // C9 0352
        gbc.setState(0x40ba, 0x8a80, 0xd4b0, 0xfa55, 0x92bd, 0xc785, 0x1, 0x0);
        gbc.writeMem(0x40ba, { 0xc9 });
        gbc.writeMem(0x8a80, { 0x9a, 0x3b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8a82, gbc.sp());
        EXPECT(0x3b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8a80));
        EXPECT(0x3b, gbc.readMem(0x8a81));
        // C9 0353
        gbc.setState(0x332, 0xf18d, 0x19a0, 0x4164, 0x1b7d, 0x2dbd, 0x1, 0x1);
        gbc.writeMem(0x332, { 0xc9 });
        gbc.writeMem(0xf18d, { 0x17, 0x90 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf18f, gbc.sp());
        EXPECT(0x9017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xf18d));
        EXPECT(0x90, gbc.readMem(0xf18e));
        // C9 0354
        gbc.setState(0xd77a, 0x7510, 0x5e60, 0xb88a, 0xb8df, 0x385b, 0x1, 0x1);
        gbc.writeMem(0x7510, { 0x5b, 0x3e });
        gbc.writeMem(0xd77a, { 0xc9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7512, gbc.sp());
        EXPECT(0x3e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd77a));
        // C9 0355
        gbc.setState(0x8a38, 0xa827, 0xe500, 0x7da, 0x4dd5, 0x8b0b, 0x0, 0x0);
        gbc.writeMem(0x8a38, { 0xc9 });
        gbc.writeMem(0xa827, { 0xe3, 0x3a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa829, gbc.sp());
        EXPECT(0x3ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8a38));
        EXPECT(0xe3, gbc.readMem(0xa827));
        EXPECT(0x3a, gbc.readMem(0xa828));
        // C9 0356
        gbc.setState(0x57b, 0x2bf8, 0x3970, 0x7e1b, 0xc365, 0x2ad5, 0x0, 0x1);
        gbc.writeMem(0x57b, { 0xc9 });
        gbc.writeMem(0x2bf8, { 0x85, 0xa });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2bfa, gbc.sp());
        EXPECT(0xa85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0358
        gbc.setState(0x9688, 0xb18f, 0x84b0, 0x7ba6, 0x57af, 0x61f5, 0x0, 0x1);
        gbc.writeMem(0x9688, { 0xc9 });
        gbc.writeMem(0xb18f, { 0x85, 0xc3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb191, gbc.sp());
        EXPECT(0xc385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9688));
        EXPECT(0x85, gbc.readMem(0xb18f));
        EXPECT(0xc3, gbc.readMem(0xb190));
        // C9 0359
        gbc.setState(0xec8c, 0xac28, 0xa270, 0x1e18, 0x952f, 0xbf9a, 0x0, 0x0);
        gbc.writeMem(0xac28, { 0x7c, 0x55 });
        gbc.writeMem(0xec8c, { 0xc9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xac2a, gbc.sp());
        EXPECT(0x557c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xac28));
        EXPECT(0x55, gbc.readMem(0xac29));
        EXPECT(0xc9, gbc.readMem(0xec8c));
        // C9 035A
        gbc.setState(0x413e, 0xf8dc, 0x3c50, 0x2933, 0x1242, 0x86e, 0x0, 0x0);
        gbc.writeMem(0x413e, { 0xc9 });
        gbc.writeMem(0xf8dc, { 0xd9, 0x9a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf8de, gbc.sp());
        EXPECT(0x9ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xf8dc));
        EXPECT(0x9a, gbc.readMem(0xf8dd));
        // C9 035B
        gbc.setState(0x8686, 0xed20, 0xcfb0, 0x4442, 0xd0aa, 0xee0b, 0x0, 0x0);
        gbc.writeMem(0x8686, { 0xc9 });
        gbc.writeMem(0xed20, { 0xd0, 0xe });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xed22, gbc.sp());
        EXPECT(0xed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8686));
        EXPECT(0xd0, gbc.readMem(0xed20));
        EXPECT(0xe, gbc.readMem(0xed21));
        // C9 035C
        gbc.setState(0xb8b3, 0x4424, 0x5460, 0xac5a, 0x3de1, 0x8f58, 0x0, 0x0);
        gbc.writeMem(0x4424, { 0xa, 0x7f });
        gbc.writeMem(0xb8b3, { 0xc9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4426, gbc.sp());
        EXPECT(0x7f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb8b3));
        // C9 035D
        gbc.setState(0xad6, 0x511f, 0x6fe0, 0x913a, 0xbce3, 0xa864, 0x1, 0x0);
        gbc.writeMem(0xad6, { 0xc9 });
        gbc.writeMem(0x511f, { 0xc5, 0x57 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5121, gbc.sp());
        EXPECT(0x57c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 035E
        gbc.setState(0x1daa, 0x6d, 0xa540, 0x4b9b, 0x86a, 0xaea2, 0x0, 0x0);
        gbc.writeMem(0x6d, { 0x13, 0x29 });
        gbc.writeMem(0x1daa, { 0xc9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6f, gbc.sp());
        EXPECT(0x2913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 035F
        gbc.setState(0xd5e2, 0xdb58, 0x40, 0x848f, 0x44fd, 0x623b, 0x0, 0x1);
        gbc.writeMem(0xd5e2, { 0xc9 });
        gbc.writeMem(0xdb58, { 0xea, 0x17 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdb5a, gbc.sp());
        EXPECT(0x17ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd5e2));
        EXPECT(0xea, gbc.readMem(0xdb58));
        EXPECT(0x17, gbc.readMem(0xdb59));
        // C9 0360
        gbc.setState(0x3f2e, 0x2959, 0x8e10, 0x2032, 0xda22, 0xcfc3, 0x1, 0x0);
        gbc.writeMem(0x2959, { 0x99, 0x3b });
        gbc.writeMem(0x3f2e, { 0xc9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x295b, gbc.sp());
        EXPECT(0x3b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0361
        gbc.setState(0x18ae, 0x1128, 0x55e0, 0x6270, 0x9c65, 0xabd, 0x0, 0x1);
        gbc.writeMem(0x1128, { 0xcd, 0xc6 });
        gbc.writeMem(0x18ae, { 0xc9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x112a, gbc.sp());
        EXPECT(0xc6cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0362
        gbc.setState(0x7ac, 0x400d, 0x6380, 0x56f0, 0xa9d2, 0x1257, 0x0, 0x1);
        gbc.writeMem(0x7ac, { 0xc9 });
        gbc.writeMem(0x400d, { 0xeb, 0x62 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x400f, gbc.sp());
        EXPECT(0x62eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0363
        gbc.setState(0x1d35, 0xcc8e, 0x94c0, 0x9c0, 0x213b, 0xbeed, 0x1, 0x0);
        gbc.writeMem(0x1d35, { 0xc9 });
        gbc.writeMem(0xcc8e, { 0xf, 0xd9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcc90, gbc.sp());
        EXPECT(0xd90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xcc8e));
        EXPECT(0xd9, gbc.readMem(0xcc8f));
        // C9 0364
        gbc.setState(0x68b2, 0x1c7e, 0xc9f0, 0xbf5f, 0x776b, 0xa283, 0x1, 0x0);
        gbc.writeMem(0x1c7e, { 0xad, 0x80 });
        gbc.writeMem(0x68b2, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1c80, gbc.sp());
        EXPECT(0x80ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0365
        gbc.setState(0x6810, 0x8448, 0x60a0, 0xfdea, 0xcfdf, 0x96a6, 0x0, 0x1);
        gbc.writeMem(0x6810, { 0xc9 });
        gbc.writeMem(0x8448, { 0x98, 0x54 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0x5498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8448));
        EXPECT(0x54, gbc.readMem(0x8449));
        // C9 0366
        gbc.setState(0x5ed9, 0x6024, 0xba10, 0xdc1f, 0x69db, 0x45bb, 0x1, 0x0);
        gbc.writeMem(0x5ed9, { 0xc9 });
        gbc.writeMem(0x6024, { 0x19, 0xcc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6026, gbc.sp());
        EXPECT(0xcc19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0367
        gbc.setState(0xd206, 0xaa43, 0xc1c0, 0x59ed, 0x32bd, 0x5d0c, 0x1, 0x1);
        gbc.writeMem(0xaa43, { 0x3, 0xe3 });
        gbc.writeMem(0xd206, { 0xc9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaa45, gbc.sp());
        EXPECT(0xe303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xaa43));
        EXPECT(0xe3, gbc.readMem(0xaa44));
        EXPECT(0xc9, gbc.readMem(0xd206));
        // C9 0368
        gbc.setState(0x371d, 0x9cfd, 0x3930, 0xa020, 0x35b, 0x90c9, 0x0, 0x1);
        gbc.writeMem(0x371d, { 0xc9 });
        gbc.writeMem(0x9cfd, { 0x63, 0x5e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9cff, gbc.sp());
        EXPECT(0x5e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x9cfd));
        EXPECT(0x5e, gbc.readMem(0x9cfe));
        // C9 0369
        gbc.setState(0x4547, 0x7771, 0x15c0, 0x4bad, 0x875e, 0xc6fb, 0x0, 0x0);
        gbc.writeMem(0x4547, { 0xc9 });
        gbc.writeMem(0x7771, { 0xae, 0xac });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7773, gbc.sp());
        EXPECT(0xacae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 036A
        gbc.setState(0xa5cd, 0x7918, 0xeca0, 0xe486, 0x54bd, 0xdb59, 0x0, 0x1);
        gbc.writeMem(0x7918, { 0xf8, 0xdc });
        gbc.writeMem(0xa5cd, { 0xc9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x791a, gbc.sp());
        EXPECT(0xdcf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa5cd));
        // C9 036B
        gbc.setState(0x87b6, 0x49ff, 0x9df0, 0xca47, 0xf1b5, 0x222d, 0x1, 0x0);
        gbc.writeMem(0x49ff, { 0xa7, 0x1f });
        gbc.writeMem(0x87b6, { 0xc9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4a01, gbc.sp());
        EXPECT(0x1fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x87b6));
        // C9 036C
        gbc.setState(0xce3a, 0x86ac, 0x1ff0, 0x20b5, 0x8ef1, 0xda74, 0x1, 0x1);
        gbc.writeMem(0x86ac, { 0x1f, 0xbb });
        gbc.writeMem(0xce3a, { 0xc9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x86ae, gbc.sp());
        EXPECT(0xbb1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x86ac));
        EXPECT(0xbb, gbc.readMem(0x86ad));
        EXPECT(0xc9, gbc.readMem(0xce3a));
        // C9 036D
        gbc.setState(0xc704, 0x3d0d, 0x3040, 0x6102, 0x5ab4, 0xee74, 0x1, 0x1);
        gbc.writeMem(0x3d0d, { 0xaf, 0x89 });
        gbc.writeMem(0xc704, { 0xc9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3d0f, gbc.sp());
        EXPECT(0x89af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc704));
        // C9 036E
        gbc.setState(0xaf9, 0x1b8e, 0xfba0, 0xa534, 0x8a27, 0xade7, 0x0, 0x1);
        gbc.writeMem(0xaf9, { 0xc9 });
        gbc.writeMem(0x1b8e, { 0x7e, 0x50 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1b90, gbc.sp());
        EXPECT(0x507e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 036F
        gbc.setState(0x7066, 0x3dea, 0x4720, 0x7947, 0xac68, 0x285, 0x0, 0x0);
        gbc.writeMem(0x3dea, { 0xb0, 0xcd });
        gbc.writeMem(0x7066, { 0xc9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3dec, gbc.sp());
        EXPECT(0xcdb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0370
        gbc.setState(0x48b3, 0x5f7d, 0x5b80, 0x5985, 0x12de, 0xf70e, 0x0, 0x1);
        gbc.writeMem(0x48b3, { 0xc9 });
        gbc.writeMem(0x5f7d, { 0x9b, 0xea });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5f7f, gbc.sp());
        EXPECT(0xea9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0371
        gbc.setState(0x4099, 0x716a, 0xa7c0, 0xdec1, 0x84a4, 0x157, 0x1, 0x1);
        gbc.writeMem(0x4099, { 0xc9 });
        gbc.writeMem(0x716a, { 0xa4, 0xa2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x716c, gbc.sp());
        EXPECT(0xa2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0372
        gbc.setState(0xdc37, 0x2537, 0xb570, 0xb3e1, 0xcc19, 0x936e, 0x1, 0x0);
        gbc.writeMem(0x2537, { 0x6a, 0xe8 });
        gbc.writeMem(0xdc37, { 0xc9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2539, gbc.sp());
        EXPECT(0xe86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdc37));
        // C9 0373
        gbc.setState(0x60e0, 0x2776, 0x5b0, 0xdb58, 0xeaf4, 0x6538, 0x0, 0x0);
        gbc.writeMem(0x2776, { 0x67, 0xf6 });
        gbc.writeMem(0x60e0, { 0xc9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2778, gbc.sp());
        EXPECT(0xf667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0374
        gbc.setState(0x39c7, 0xa6cc, 0x9eb0, 0x15f6, 0x66cc, 0x8b22, 0x0, 0x0);
        gbc.writeMem(0x39c7, { 0xc9 });
        gbc.writeMem(0xa6cc, { 0x83, 0x68 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa6ce, gbc.sp());
        EXPECT(0x6883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xa6cc));
        EXPECT(0x68, gbc.readMem(0xa6cd));
        // C9 0376
        gbc.setState(0xa3cc, 0xcc1a, 0xeaf0, 0x724d, 0x91db, 0xf96c, 0x1, 0x0);
        gbc.writeMem(0xa3cc, { 0xc9 });
        gbc.writeMem(0xcc1a, { 0xa0, 0xc3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcc1c, gbc.sp());
        EXPECT(0xc3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa3cc));
        EXPECT(0xa0, gbc.readMem(0xcc1a));
        EXPECT(0xc3, gbc.readMem(0xcc1b));
        // C9 0377
        gbc.setState(0xcdaf, 0xb11f, 0xcf60, 0x3d5f, 0x4dc0, 0xf4dc, 0x0, 0x1);
        gbc.writeMem(0xb11f, { 0xf, 0x6d });
        gbc.writeMem(0xcdaf, { 0xc9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb121, gbc.sp());
        EXPECT(0x6d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xb11f));
        EXPECT(0x6d, gbc.readMem(0xb120));
        EXPECT(0xc9, gbc.readMem(0xcdaf));
        // C9 0378
        gbc.setState(0xdb46, 0xeb47, 0x1da0, 0x68a5, 0xf948, 0xbdbb, 0x0, 0x0);
        gbc.writeMem(0xdb46, { 0xc9 });
        gbc.writeMem(0xeb47, { 0x12, 0xa0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xeb49, gbc.sp());
        EXPECT(0xa012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdb46));
        EXPECT(0x12, gbc.readMem(0xeb47));
        EXPECT(0xa0, gbc.readMem(0xeb48));
        // C9 0379
        gbc.setState(0x5b43, 0x9330, 0xb380, 0x3a51, 0x408f, 0xb1fe, 0x1, 0x0);
        gbc.writeMem(0x5b43, { 0xc9 });
        gbc.writeMem(0x9330, { 0x72, 0x63 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9332, gbc.sp());
        EXPECT(0x6372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9330));
        EXPECT(0x63, gbc.readMem(0x9331));
        // C9 037A
        gbc.setState(0x1504, 0x2b47, 0xd150, 0x4fd1, 0x4f13, 0x7f90, 0x0, 0x0);
        gbc.writeMem(0x1504, { 0xc9 });
        gbc.writeMem(0x2b47, { 0x6c, 0x7f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2b49, gbc.sp());
        EXPECT(0x7f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 037B
        gbc.setState(0xba25, 0x45a5, 0x2890, 0x1fd, 0xeb00, 0x9590, 0x0, 0x0);
        gbc.writeMem(0x45a5, { 0x46, 0x66 });
        gbc.writeMem(0xba25, { 0xc9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x45a7, gbc.sp());
        EXPECT(0x6646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xba25));
        // C9 037C
        gbc.setState(0x524e, 0x62c7, 0x22e0, 0xce42, 0xd2d9, 0x850f, 0x0, 0x1);
        gbc.writeMem(0x524e, { 0xc9 });
        gbc.writeMem(0x62c7, { 0xf2, 0xb1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x62c9, gbc.sp());
        EXPECT(0xb1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 037D
        gbc.setState(0x661a, 0x4340, 0x3f60, 0x94a7, 0x23f2, 0x9bc2, 0x0, 0x0);
        gbc.writeMem(0x4340, { 0x91, 0xa8 });
        gbc.writeMem(0x661a, { 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4342, gbc.sp());
        EXPECT(0xa891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 037E
        gbc.setState(0xa31, 0x5292, 0x27b0, 0x17e1, 0x2a05, 0x64b5, 0x1, 0x0);
        gbc.writeMem(0xa31, { 0xc9 });
        gbc.writeMem(0x5292, { 0x50, 0x48 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5294, gbc.sp());
        EXPECT(0x4850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 037F
        gbc.setState(0x8239, 0x1882, 0xd530, 0x6c2c, 0x2e0c, 0xf369, 0x0, 0x0);
        gbc.writeMem(0x1882, { 0xcb, 0x3 });
        gbc.writeMem(0x8239, { 0xc9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1884, gbc.sp());
        EXPECT(0x3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8239));
        // C9 0380
        gbc.setState(0xca2a, 0x4d40, 0xc4a0, 0x5f9, 0xe259, 0xc7ad, 0x0, 0x1);
        gbc.writeMem(0x4d40, { 0x73, 0x1b });
        gbc.writeMem(0xca2a, { 0xc9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4d42, gbc.sp());
        EXPECT(0x1b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xca2a));
        // C9 0381
        gbc.setState(0x3e3b, 0x805, 0x55f0, 0xda6a, 0x42c6, 0xdf0e, 0x0, 0x0);
        gbc.writeMem(0x805, { 0xf5, 0x3d });
        gbc.writeMem(0x3e3b, { 0xc9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x807, gbc.sp());
        EXPECT(0x3df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0382
        gbc.setState(0xda9d, 0x2c6, 0x8900, 0xb396, 0x7972, 0x745f, 0x1, 0x1);
        gbc.writeMem(0x2c6, { 0xd5, 0x6b });
        gbc.writeMem(0xda9d, { 0xc9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2c8, gbc.sp());
        EXPECT(0x6bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xda9d));
        // C9 0383
        gbc.setState(0x7ceb, 0x5462, 0xa870, 0xa2ba, 0x592b, 0xfa3b, 0x1, 0x1);
        gbc.writeMem(0x5462, { 0x27, 0x33 });
        gbc.writeMem(0x7ceb, { 0xc9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5464, gbc.sp());
        EXPECT(0x3327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0384
        gbc.setState(0x1efe, 0x6c1, 0x330, 0x1db6, 0x622d, 0xeb5f, 0x1, 0x0);
        gbc.writeMem(0x6c1, { 0x24, 0xe7 });
        gbc.writeMem(0x1efe, { 0xc9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6c3, gbc.sp());
        EXPECT(0xe724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0385
        gbc.setState(0x6193, 0xa047, 0xcde0, 0x6f5e, 0xa7da, 0xe13e, 0x0, 0x0);
        gbc.writeMem(0x6193, { 0xc9 });
        gbc.writeMem(0xa047, { 0x82, 0xce });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa049, gbc.sp());
        EXPECT(0xce82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa047));
        EXPECT(0xce, gbc.readMem(0xa048));
        // C9 0386
        gbc.setState(0x3b91, 0x7c6, 0x5500, 0xb8e6, 0x1025, 0x6c61, 0x0, 0x0);
        gbc.writeMem(0x7c6, { 0xa2, 0xc8 });
        gbc.writeMem(0x3b91, { 0xc9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7c8, gbc.sp());
        EXPECT(0xc8a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0387
        gbc.setState(0x551a, 0x2a1d, 0x4670, 0x8fdf, 0x7aa2, 0x8dc5, 0x1, 0x0);
        gbc.writeMem(0x2a1d, { 0x95, 0xb2 });
        gbc.writeMem(0x551a, { 0xc9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2a1f, gbc.sp());
        EXPECT(0xb295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0388
        gbc.setState(0xe46c, 0xe618, 0x9320, 0xca87, 0xf0e0, 0x3897, 0x0, 0x0);
        gbc.writeMem(0xe46c, { 0xc9 });
        gbc.writeMem(0xe618, { 0x4a, 0x71 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe61a, gbc.sp());
        EXPECT(0x714a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe46c));
        EXPECT(0x4a, gbc.readMem(0xe618));
        EXPECT(0x71, gbc.readMem(0xe619));
        // C9 0389
        gbc.setState(0xc5ae, 0x5db, 0xb670, 0xcd5e, 0xccca, 0x3981, 0x1, 0x1);
        gbc.writeMem(0x5db, { 0x9, 0x42 });
        gbc.writeMem(0xc5ae, { 0xc9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5dd, gbc.sp());
        EXPECT(0x4209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc5ae));
        // C9 038A
        gbc.setState(0xa9fa, 0x746f, 0x8df0, 0x6259, 0x64a6, 0xb2c1, 0x1, 0x0);
        gbc.writeMem(0x746f, { 0xdd, 0x96 });
        gbc.writeMem(0xa9fa, { 0xc9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7471, gbc.sp());
        EXPECT(0x96dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa9fa));
        // C9 038B
        gbc.setState(0xad2c, 0xd24, 0xdb30, 0xdc2f, 0x1447, 0xf7a5, 0x1, 0x1);
        gbc.writeMem(0xd24, { 0xa6, 0x8c });
        gbc.writeMem(0xad2c, { 0xc9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd26, gbc.sp());
        EXPECT(0x8ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xad2c));
        // C9 038C
        gbc.setState(0xa1d0, 0x88ff, 0x9d60, 0x124d, 0x9e06, 0x6c03, 0x1, 0x0);
        gbc.writeMem(0x88ff, { 0x4e, 0x17 });
        gbc.writeMem(0xa1d0, { 0xc9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8901, gbc.sp());
        EXPECT(0x174e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x88ff));
        EXPECT(0x17, gbc.readMem(0x8900));
        EXPECT(0xc9, gbc.readMem(0xa1d0));
        // C9 038D
        gbc.setState(0x555c, 0xaa32, 0xd190, 0x80b4, 0xb60b, 0xa187, 0x1, 0x0);
        gbc.writeMem(0x555c, { 0xc9 });
        gbc.writeMem(0xaa32, { 0xee, 0xe9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xaa34, gbc.sp());
        EXPECT(0xe9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xaa32));
        EXPECT(0xe9, gbc.readMem(0xaa33));
        // C9 038E
        gbc.setState(0xe834, 0xe77d, 0x9850, 0x9962, 0x8cbd, 0x2e85, 0x0, 0x0);
        gbc.writeMem(0xe77d, { 0x90, 0x46 });
        gbc.writeMem(0xe834, { 0xc9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe77f, gbc.sp());
        EXPECT(0x4690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xe77d));
        EXPECT(0x46, gbc.readMem(0xe77e));
        EXPECT(0xc9, gbc.readMem(0xe834));
        // C9 038F
        gbc.setState(0x9a62, 0xac6b, 0x2ac0, 0x1932, 0x9123, 0xc62d, 0x1, 0x0);
        gbc.writeMem(0x9a62, { 0xc9 });
        gbc.writeMem(0xac6b, { 0x71, 0x86 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xac6d, gbc.sp());
        EXPECT(0x8671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9a62));
        EXPECT(0x71, gbc.readMem(0xac6b));
        EXPECT(0x86, gbc.readMem(0xac6c));
        // C9 0390
        gbc.setState(0x31d2, 0x47b4, 0x7c70, 0x30dd, 0xbace, 0x8930, 0x1, 0x0);
        gbc.writeMem(0x31d2, { 0xc9 });
        gbc.writeMem(0x47b4, { 0x96, 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x47b6, gbc.sp());
        EXPECT(0x6196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0391
        gbc.setState(0x55ee, 0x5be5, 0x5e60, 0x2355, 0xba80, 0x4ccf, 0x1, 0x0);
        gbc.writeMem(0x55ee, { 0xc9 });
        gbc.writeMem(0x5be5, { 0x5a, 0x9c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5be7, gbc.sp());
        EXPECT(0x9c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0392
        gbc.setState(0x9c14, 0x7008, 0xe5b0, 0x7721, 0xf400, 0x6f2c, 0x1, 0x1);
        gbc.writeMem(0x7008, { 0x79, 0xfe });
        gbc.writeMem(0x9c14, { 0xc9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x700a, gbc.sp());
        EXPECT(0xfe79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9c14));
        // C9 0393
        gbc.setState(0x4600, 0xbae0, 0xbc80, 0xe0f4, 0x9f4d, 0x84ef, 0x0, 0x1);
        gbc.writeMem(0x4600, { 0xc9 });
        gbc.writeMem(0xbae0, { 0x14, 0xec });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbae2, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbae0));
        EXPECT(0xec, gbc.readMem(0xbae1));
        // C9 0394
        gbc.setState(0x6334, 0x3c0a, 0x9f00, 0x2ae, 0x6584, 0xd935, 0x1, 0x1);
        gbc.writeMem(0x3c0a, { 0xe1, 0xeb });
        gbc.writeMem(0x6334, { 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3c0c, gbc.sp());
        EXPECT(0xebe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0395
        gbc.setState(0x2745, 0x3bff, 0x3a0, 0xdcc8, 0x32bf, 0xef32, 0x0, 0x1);
        gbc.writeMem(0x2745, { 0xc9 });
        gbc.writeMem(0x3bff, { 0x9b, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3c01, gbc.sp());
        EXPECT(0x9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 0396
        gbc.setState(0x49a0, 0x1db3, 0x2ff0, 0x3f12, 0x9f9a, 0x15dc, 0x0, 0x0);
        gbc.writeMem(0x1db3, { 0xee, 0xcc });
        gbc.writeMem(0x49a0, { 0xc9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1db5, gbc.sp());
        EXPECT(0xccee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0397
        gbc.setState(0x50e, 0x6638, 0x7a70, 0xbb5a, 0x7e78, 0xc6a1, 0x0, 0x1);
        gbc.writeMem(0x50e, { 0xc9 });
        gbc.writeMem(0x6638, { 0x73, 0xcb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x663a, gbc.sp());
        EXPECT(0xcb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 0398
        gbc.setState(0x9a7b, 0xb2e0, 0x7f50, 0xbb0d, 0x2dcb, 0xb984, 0x1, 0x1);
        gbc.writeMem(0x9a7b, { 0xc9 });
        gbc.writeMem(0xb2e0, { 0xed, 0xea });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb2e2, gbc.sp());
        EXPECT(0xeaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9a7b));
        EXPECT(0xed, gbc.readMem(0xb2e0));
        EXPECT(0xea, gbc.readMem(0xb2e1));
        // C9 0399
        gbc.setState(0x58fc, 0xc273, 0xbad0, 0xa755, 0x6944, 0xfc92, 0x1, 0x1);
        gbc.writeMem(0x58fc, { 0xc9 });
        gbc.writeMem(0xc273, { 0x38, 0x60 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc275, gbc.sp());
        EXPECT(0x6038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc273));
        EXPECT(0x60, gbc.readMem(0xc274));
        // C9 039B
        gbc.setState(0x6b40, 0x5245, 0x1c10, 0x396, 0xea73, 0x94eb, 0x0, 0x0);
        gbc.writeMem(0x5245, { 0xf3, 0xd0 });
        gbc.writeMem(0x6b40, { 0xc9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5247, gbc.sp());
        EXPECT(0xd0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 039C
        gbc.setState(0x2c5e, 0x14f, 0x34a0, 0xaecd, 0x3b07, 0x3e05, 0x0, 0x0);
        gbc.writeMem(0x14f, { 0x4b, 0x3a });
        gbc.writeMem(0x2c5e, { 0xc9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x151, gbc.sp());
        EXPECT(0x3a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 039D
        gbc.setState(0xb99b, 0xa18b, 0x4140, 0x9007, 0x4e4a, 0xe83f, 0x1, 0x0);
        gbc.writeMem(0xa18b, { 0x3a, 0x68 });
        gbc.writeMem(0xb99b, { 0xc9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa18d, gbc.sp());
        EXPECT(0x683a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xa18b));
        EXPECT(0x68, gbc.readMem(0xa18c));
        EXPECT(0xc9, gbc.readMem(0xb99b));
        // C9 039E
        gbc.setState(0x5f48, 0x103a, 0xbad0, 0xe69, 0x3c5f, 0x6b6, 0x1, 0x1);
        gbc.writeMem(0x103a, { 0xb2, 0x22 });
        gbc.writeMem(0x5f48, { 0xc9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x103c, gbc.sp());
        EXPECT(0x22b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 039F
        gbc.setState(0x48c3, 0x30d6, 0xf700, 0xf89f, 0xe62c, 0x4060, 0x1, 0x0);
        gbc.writeMem(0x30d6, { 0x83, 0xc3 });
        gbc.writeMem(0x48c3, { 0xc9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x30d8, gbc.sp());
        EXPECT(0xc383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03A0
        gbc.setState(0x8d5e, 0xad8a, 0xfd50, 0x38e9, 0x1e7, 0x8ce2, 0x1, 0x0);
        gbc.writeMem(0x8d5e, { 0xc9 });
        gbc.writeMem(0xad8a, { 0x85, 0x49 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xad8c, gbc.sp());
        EXPECT(0x4985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8d5e));
        EXPECT(0x85, gbc.readMem(0xad8a));
        EXPECT(0x49, gbc.readMem(0xad8b));
        // C9 03A1
        gbc.setState(0xb604, 0x894, 0xbcc0, 0xc76e, 0xd0a0, 0xd794, 0x0, 0x1);
        gbc.writeMem(0x894, { 0x1f, 0xff });
        gbc.writeMem(0xb604, { 0xc9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x896, gbc.sp());
        EXPECT(0xff1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb604));
        // C9 03A2
        gbc.setState(0x9809, 0x7805, 0xba80, 0x8d7a, 0x6d24, 0x69e3, 0x1, 0x0);
        gbc.writeMem(0x7805, { 0xe7, 0xfb });
        gbc.writeMem(0x9809, { 0xc9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7807, gbc.sp());
        EXPECT(0xfbe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9809));
        // C9 03A3
        gbc.setState(0x9364, 0x63f1, 0xa070, 0x3513, 0x7345, 0x7a53, 0x0, 0x1);
        gbc.writeMem(0x63f1, { 0xb, 0xde });
        gbc.writeMem(0x9364, { 0xc9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x63f3, gbc.sp());
        EXPECT(0xde0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9364));
        // C9 03A4
        gbc.setState(0xb03a, 0xa991, 0xc930, 0xf7eb, 0x1d2b, 0x4e5f, 0x1, 0x1);
        gbc.writeMem(0xa991, { 0x85, 0xeb });
        gbc.writeMem(0xb03a, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa993, gbc.sp());
        EXPECT(0xeb85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa991));
        EXPECT(0xeb, gbc.readMem(0xa992));
        EXPECT(0xc9, gbc.readMem(0xb03a));
        // C9 03A5
        gbc.setState(0xdff4, 0x69ad, 0xf110, 0x6b50, 0xd4b4, 0xef73, 0x0, 0x0);
        gbc.writeMem(0x69ad, { 0x36, 0xc0 });
        gbc.writeMem(0xdff4, { 0xc9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x69af, gbc.sp());
        EXPECT(0xc036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdff4));
        // C9 03A6
        gbc.setState(0x4bef, 0xc85f, 0xfe0, 0x6f83, 0x145c, 0x2dbc, 0x0, 0x0);
        gbc.writeMem(0x4bef, { 0xc9 });
        gbc.writeMem(0xc85f, { 0x1a, 0x10 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc861, gbc.sp());
        EXPECT(0x101a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc85f));
        EXPECT(0x10, gbc.readMem(0xc860));
        // C9 03A7
        gbc.setState(0xe6d5, 0x552e, 0x4340, 0x7d7, 0x71d3, 0xf64, 0x0, 0x0);
        gbc.writeMem(0x552e, { 0xdd, 0xa2 });
        gbc.writeMem(0xe6d5, { 0xc9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5530, gbc.sp());
        EXPECT(0xa2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe6d5));
        // C9 03A8
        gbc.setState(0x5b12, 0x4b5a, 0x3f00, 0xefa8, 0x9549, 0x677f, 0x1, 0x1);
        gbc.writeMem(0x4b5a, { 0x8, 0x84 });
        gbc.writeMem(0x5b12, { 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4b5c, gbc.sp());
        EXPECT(0x8408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03A9
        gbc.setState(0x7be8, 0x540d, 0x9e40, 0xbac1, 0x5b7, 0x7807, 0x0, 0x1);
        gbc.writeMem(0x540d, { 0xc4, 0x23 });
        gbc.writeMem(0x7be8, { 0xc9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x540f, gbc.sp());
        EXPECT(0x23c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03AB
        gbc.setState(0x59eb, 0x8fef, 0xdf0, 0x766e, 0x6640, 0x1074, 0x1, 0x0);
        gbc.writeMem(0x59eb, { 0xc9 });
        gbc.writeMem(0x8fef, { 0xde, 0x18 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8ff1, gbc.sp());
        EXPECT(0x18de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x8fef));
        EXPECT(0x18, gbc.readMem(0x8ff0));
        // C9 03AC
        gbc.setState(0x3f18, 0x34e4, 0x3720, 0xdee5, 0x874f, 0x5a8a, 0x0, 0x0);
        gbc.writeMem(0x34e4, { 0x53, 0x29 });
        gbc.writeMem(0x3f18, { 0xc9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x34e6, gbc.sp());
        EXPECT(0x2953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03AD
        gbc.setState(0xcc6a, 0xe608, 0x3510, 0x8ec7, 0x1472, 0xf544, 0x1, 0x0);
        gbc.writeMem(0xcc6a, { 0xc9 });
        gbc.writeMem(0xe608, { 0x2a, 0xef });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe60a, gbc.sp());
        EXPECT(0xef2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xcc6a));
        EXPECT(0x2a, gbc.readMem(0xe608));
        EXPECT(0xef, gbc.readMem(0xe609));
        // C9 03AE
        gbc.setState(0x41c7, 0x712c, 0x8c50, 0xa030, 0x6d8e, 0xc47e, 0x0, 0x1);
        gbc.writeMem(0x41c7, { 0xc9 });
        gbc.writeMem(0x712c, { 0xa6, 0x6c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x712e, gbc.sp());
        EXPECT(0x6ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 03AF
        gbc.setState(0xa3cd, 0xe3a8, 0xd200, 0xbd04, 0xeab8, 0xce98, 0x0, 0x1);
        gbc.writeMem(0xa3cd, { 0xc9 });
        gbc.writeMem(0xe3a8, { 0xf2, 0x4e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe3aa, gbc.sp());
        EXPECT(0x4ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa3cd));
        EXPECT(0xf2, gbc.readMem(0xe3a8));
        EXPECT(0x4e, gbc.readMem(0xe3a9));
        // C9 03B1
        gbc.setState(0xcf27, 0xf14e, 0x92b0, 0xb2c9, 0xeb5a, 0xc452, 0x1, 0x0);
        gbc.writeMem(0xcf27, { 0xc9 });
        gbc.writeMem(0xf14e, { 0x42, 0xd5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf150, gbc.sp());
        EXPECT(0xd542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xcf27));
        EXPECT(0x42, gbc.readMem(0xf14e));
        EXPECT(0xd5, gbc.readMem(0xf14f));
        // C9 03B2
        gbc.setState(0xca3e, 0xff45, 0x7020, 0x59f4, 0x9878, 0xb96d, 0x0, 0x0);
        gbc.writeMem(0xca3e, { 0xc9 });
        gbc.writeMem(0xff45, { 0xd4, 0xbc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xff47, gbc.sp());
        EXPECT(0xbcd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xca3e));
        EXPECT(0xd4, gbc.readMem(0xff45));
        EXPECT(0xbc, gbc.readMem(0xff46));
        // C9 03B3
        gbc.setState(0x9aa0, 0x56d7, 0x2ff0, 0xec8a, 0x2e86, 0xdc8b, 0x1, 0x1);
        gbc.writeMem(0x56d7, { 0x94, 0x4a });
        gbc.writeMem(0x9aa0, { 0xc9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x56d9, gbc.sp());
        EXPECT(0x4a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9aa0));
        // C9 03B4
        gbc.setState(0x47a2, 0xaa6d, 0x9ab0, 0x6bb4, 0xf2dc, 0x8d3, 0x0, 0x1);
        gbc.writeMem(0x47a2, { 0xc9 });
        gbc.writeMem(0xaa6d, { 0x3a, 0xbe });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xaa6f, gbc.sp());
        EXPECT(0xbe3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xaa6d));
        EXPECT(0xbe, gbc.readMem(0xaa6e));
        // C9 03B5
        gbc.setState(0x429b, 0xf699, 0x78f0, 0x7e15, 0x81c2, 0x6c96, 0x0, 0x0);
        gbc.writeMem(0x429b, { 0xc9 });
        gbc.writeMem(0xf699, { 0x2b, 0xf5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf69b, gbc.sp());
        EXPECT(0xf52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xf699));
        EXPECT(0xf5, gbc.readMem(0xf69a));
        // C9 03B6
        gbc.setState(0x22ce, 0x9e48, 0xe270, 0x351b, 0x61ec, 0xb96c, 0x1, 0x0);
        gbc.writeMem(0x22ce, { 0xc9 });
        gbc.writeMem(0x9e48, { 0x96, 0x6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9e4a, gbc.sp());
        EXPECT(0x696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x9e48));
        EXPECT(0x6, gbc.readMem(0x9e49));
        // C9 03B7
        gbc.setState(0xa679, 0x4b33, 0x6670, 0xd922, 0x658c, 0x456d, 0x1, 0x0);
        gbc.writeMem(0x4b33, { 0xc, 0xb2 });
        gbc.writeMem(0xa679, { 0xc9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4b35, gbc.sp());
        EXPECT(0xb20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa679));
        // C9 03B8
        gbc.setState(0xbafd, 0x2e2d, 0xe270, 0xf69b, 0x2eef, 0xab17, 0x0, 0x0);
        gbc.writeMem(0x2e2d, { 0x8d, 0x12 });
        gbc.writeMem(0xbafd, { 0xc9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2e2f, gbc.sp());
        EXPECT(0x128d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbafd));
        // C9 03B9
        gbc.setState(0x5b14, 0x7ddf, 0x640, 0x794f, 0x7bb4, 0x38c0, 0x0, 0x1);
        gbc.writeMem(0x5b14, { 0xc9 });
        gbc.writeMem(0x7ddf, { 0x39, 0xd4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7de1, gbc.sp());
        EXPECT(0xd439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03BA
        gbc.setState(0xe29c, 0x266a, 0x6fd0, 0x3baf, 0x4112, 0xe746, 0x1, 0x1);
        gbc.writeMem(0x266a, { 0xdc, 0xb7 });
        gbc.writeMem(0xe29c, { 0xc9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x266c, gbc.sp());
        EXPECT(0xb7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe29c));
        // C9 03BB
        gbc.setState(0x8061, 0x6b18, 0xdab0, 0xe340, 0x429a, 0xa8f8, 0x0, 0x1);
        gbc.writeMem(0x6b18, { 0x82, 0xe4 });
        gbc.writeMem(0x8061, { 0xc9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6b1a, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8061));
        // C9 03BC
        gbc.setState(0x45e9, 0x1a7f, 0x2760, 0x848e, 0x457, 0xa0fe, 0x0, 0x1);
        gbc.writeMem(0x1a7f, { 0x63, 0xd });
        gbc.writeMem(0x45e9, { 0xc9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1a81, gbc.sp());
        EXPECT(0xd63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03BD
        gbc.setState(0xee42, 0x7f52, 0x4ec0, 0x25cb, 0xda76, 0xe292, 0x0, 0x0);
        gbc.writeMem(0x7f52, { 0x34, 0x48 });
        gbc.writeMem(0xee42, { 0xc9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0x4834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xee42));
        // C9 03BE
        gbc.setState(0x1b54, 0x3421, 0x81e0, 0x3382, 0xd0ec, 0x825f, 0x1, 0x0);
        gbc.writeMem(0x1b54, { 0xc9 });
        gbc.writeMem(0x3421, { 0x90, 0x93 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3423, gbc.sp());
        EXPECT(0x9390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03BF
        gbc.setState(0xd251, 0xbefd, 0x40, 0xa01b, 0xf1ad, 0xdc45, 0x1, 0x1);
        gbc.writeMem(0xbefd, { 0x7e, 0xf7 });
        gbc.writeMem(0xd251, { 0xc9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbeff, gbc.sp());
        EXPECT(0xf77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbefd));
        EXPECT(0xf7, gbc.readMem(0xbefe));
        EXPECT(0xc9, gbc.readMem(0xd251));
        // C9 03C1
        gbc.setState(0x3823, 0x7aad, 0x97a0, 0x7a17, 0x5196, 0x47a0, 0x0, 0x0);
        gbc.writeMem(0x3823, { 0xc9 });
        gbc.writeMem(0x7aad, { 0xd1, 0x80 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7aaf, gbc.sp());
        EXPECT(0x80d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03C2
        gbc.setState(0x5ee3, 0x1099, 0xb2b0, 0x4f46, 0x80ef, 0x1ca6, 0x0, 0x1);
        gbc.writeMem(0x1099, { 0xf2, 0x36 });
        gbc.writeMem(0x5ee3, { 0xc9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x109b, gbc.sp());
        EXPECT(0x36f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 03C3
        gbc.setState(0xecc1, 0x831b, 0x9960, 0xbee, 0x2b9f, 0x3624, 0x1, 0x1);
        gbc.writeMem(0x831b, { 0x1e, 0xe0 });
        gbc.writeMem(0xecc1, { 0xc9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x831d, gbc.sp());
        EXPECT(0xe01e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x831b));
        EXPECT(0xe0, gbc.readMem(0x831c));
        EXPECT(0xc9, gbc.readMem(0xecc1));
        // C9 03C4
        gbc.setState(0x3418, 0x487f, 0x78e0, 0xfaf4, 0x282b, 0x467f, 0x1, 0x1);
        gbc.writeMem(0x3418, { 0xc9 });
        gbc.writeMem(0x487f, { 0x25, 0x19 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4881, gbc.sp());
        EXPECT(0x1925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03C5
        gbc.setState(0x51f7, 0x4e0f, 0xfac0, 0xf558, 0x7fe3, 0xf202, 0x0, 0x0);
        gbc.writeMem(0x4e0f, { 0xa4, 0xee });
        gbc.writeMem(0x51f7, { 0xc9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4e11, gbc.sp());
        EXPECT(0xeea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03C6
        gbc.setState(0x6ddd, 0x47b2, 0x7650, 0x2979, 0xecce, 0xf85f, 0x1, 0x0);
        gbc.writeMem(0x47b2, { 0xfe, 0x61 });
        gbc.writeMem(0x6ddd, { 0xc9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x47b4, gbc.sp());
        EXPECT(0x61fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 03C7
        gbc.setState(0x9716, 0xbe19, 0x2510, 0x65e3, 0xd8a2, 0xf994, 0x1, 0x0);
        gbc.writeMem(0x9716, { 0xc9 });
        gbc.writeMem(0xbe19, { 0x35, 0x6e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbe1b, gbc.sp());
        EXPECT(0x6e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9716));
        EXPECT(0x35, gbc.readMem(0xbe19));
        EXPECT(0x6e, gbc.readMem(0xbe1a));
        // C9 03C8
        gbc.setState(0xd37b, 0x4056, 0xa750, 0xfce5, 0x10cb, 0x4fb5, 0x1, 0x1);
        gbc.writeMem(0x4056, { 0xe8, 0x8d });
        gbc.writeMem(0xd37b, { 0xc9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4058, gbc.sp());
        EXPECT(0x8de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd37b));
        // C9 03C9
        gbc.setState(0xce3, 0x553a, 0x42f0, 0xa637, 0xd0d2, 0x3e07, 0x1, 0x1);
        gbc.writeMem(0xce3, { 0xc9 });
        gbc.writeMem(0x553a, { 0x71, 0xd });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x553c, gbc.sp());
        EXPECT(0xd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 03CA
        gbc.setState(0x36e9, 0x7795, 0x1e00, 0xc69b, 0x7479, 0xdc50, 0x0, 0x0);
        gbc.writeMem(0x36e9, { 0xc9 });
        gbc.writeMem(0x7795, { 0x65, 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7797, gbc.sp());
        EXPECT(0x6d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03CB
        gbc.setState(0x6874, 0x4aaa, 0x24c0, 0x8a87, 0xa196, 0x892f, 0x1, 0x1);
        gbc.writeMem(0x4aaa, { 0x44, 0x93 });
        gbc.writeMem(0x6874, { 0xc9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4aac, gbc.sp());
        EXPECT(0x9344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03CC
        gbc.setState(0x267, 0xc4ad, 0x76c0, 0x11c4, 0x4420, 0xee0b, 0x0, 0x0);
        gbc.writeMem(0x267, { 0xc9 });
        gbc.writeMem(0xc4ad, { 0xd3, 0xc2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc4af, gbc.sp());
        EXPECT(0xc2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xc4ad));
        EXPECT(0xc2, gbc.readMem(0xc4ae));
        // C9 03CE
        gbc.setState(0x5aa9, 0xa076, 0xfea0, 0xc9ad, 0x71cf, 0x840e, 0x1, 0x0);
        gbc.writeMem(0x5aa9, { 0xc9 });
        gbc.writeMem(0xa076, { 0x94, 0x6f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa078, gbc.sp());
        EXPECT(0x6f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa076));
        EXPECT(0x6f, gbc.readMem(0xa077));
        // C9 03CF
        gbc.setState(0x7454, 0xdfa8, 0x5250, 0x8a6d, 0x6ff1, 0x6613, 0x0, 0x1);
        gbc.writeMem(0x7454, { 0xc9 });
        gbc.writeMem(0xdfa8, { 0xaa, 0xba });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdfaa, gbc.sp());
        EXPECT(0xbaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdfa8));
        EXPECT(0xba, gbc.readMem(0xdfa9));
        // C9 03D0
        gbc.setState(0xc93f, 0x7e29, 0x3f90, 0x1087, 0x2d7d, 0x7cea, 0x0, 0x1);
        gbc.writeMem(0x7e29, { 0x35, 0x3c });
        gbc.writeMem(0xc93f, { 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7e2b, gbc.sp());
        EXPECT(0x3c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc93f));
        // C9 03D1
        gbc.setState(0x84be, 0xb704, 0xc510, 0x3a2d, 0xb26d, 0x6ff9, 0x1, 0x0);
        gbc.writeMem(0x84be, { 0xc9 });
        gbc.writeMem(0xb704, { 0xf3, 0x2d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb706, gbc.sp());
        EXPECT(0x2df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x84be));
        EXPECT(0xf3, gbc.readMem(0xb704));
        EXPECT(0x2d, gbc.readMem(0xb705));
        // C9 03D2
        gbc.setState(0x63fd, 0xe73e, 0xeae0, 0x1e6b, 0xf29d, 0x213, 0x0, 0x0);
        gbc.writeMem(0x63fd, { 0xc9 });
        gbc.writeMem(0xe73e, { 0x6e, 0x76 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe740, gbc.sp());
        EXPECT(0x766e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe73e));
        EXPECT(0x76, gbc.readMem(0xe73f));
        // C9 03D3
        gbc.setState(0x5549, 0xb668, 0xf410, 0xa035, 0x8ba1, 0x83e2, 0x0, 0x1);
        gbc.writeMem(0x5549, { 0xc9 });
        gbc.writeMem(0xb668, { 0xfa, 0x21 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb66a, gbc.sp());
        EXPECT(0x21fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb668));
        EXPECT(0x21, gbc.readMem(0xb669));
        // C9 03D4
        gbc.setState(0x638e, 0x212e, 0x1ad0, 0x86e4, 0xd790, 0x701d, 0x1, 0x1);
        gbc.writeMem(0x212e, { 0x2f, 0x55 });
        gbc.writeMem(0x638e, { 0xc9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2130, gbc.sp());
        EXPECT(0x552f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 03D5
        gbc.setState(0x175f, 0xe491, 0x8280, 0x8788, 0x16de, 0xefe0, 0x0, 0x1);
        gbc.writeMem(0x175f, { 0xc9 });
        gbc.writeMem(0xe491, { 0x58, 0x99 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe493, gbc.sp());
        EXPECT(0x9958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe491));
        EXPECT(0x99, gbc.readMem(0xe492));
        // C9 03D6
        gbc.setState(0x2bd9, 0x99ab, 0xed90, 0x42de, 0xe058, 0x957a, 0x0, 0x1);
        gbc.writeMem(0x2bd9, { 0xc9 });
        gbc.writeMem(0x99ab, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x99ad, gbc.sp());
        EXPECT(0x6dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ab));
        EXPECT(0x6d, gbc.readMem(0x99ac));
        // C9 03D7
        gbc.setState(0x7238, 0x6fa7, 0x14a0, 0x6d48, 0xe8fe, 0x8f2f, 0x0, 0x1);
        gbc.writeMem(0x6fa7, { 0xe9, 0x2c });
        gbc.writeMem(0x7238, { 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6fa9, gbc.sp());
        EXPECT(0x2ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03D8
        gbc.setState(0xd023, 0xae0a, 0xbbd0, 0x5c9, 0x6e4d, 0xf5ad, 0x0, 0x1);
        gbc.writeMem(0xae0a, { 0xb9, 0x5c });
        gbc.writeMem(0xd023, { 0xc9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xae0c, gbc.sp());
        EXPECT(0x5cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xae0a));
        EXPECT(0x5c, gbc.readMem(0xae0b));
        EXPECT(0xc9, gbc.readMem(0xd023));
        // C9 03D9
        gbc.setState(0xc681, 0x6f5c, 0x1540, 0xcc5d, 0xf57c, 0x8cec, 0x1, 0x0);
        gbc.writeMem(0x6f5c, { 0x25, 0xbb });
        gbc.writeMem(0xc681, { 0xc9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6f5e, gbc.sp());
        EXPECT(0xbb25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc681));
        // C9 03DA
        gbc.setState(0x352e, 0xf698, 0x5ee0, 0xae4b, 0x9f9, 0xfe5f, 0x1, 0x1);
        gbc.writeMem(0x352e, { 0xc9 });
        gbc.writeMem(0xf698, { 0xa0, 0x2b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf69a, gbc.sp());
        EXPECT(0x2ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xf698));
        EXPECT(0x2b, gbc.readMem(0xf699));
        // C9 03DB
        gbc.setState(0x55ed, 0x5157, 0xb720, 0x7963, 0x1239, 0xd796, 0x1, 0x0);
        gbc.writeMem(0x5157, { 0x92, 0xb3 });
        gbc.writeMem(0x55ed, { 0xc9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5159, gbc.sp());
        EXPECT(0xb392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03DC
        gbc.setState(0x96cb, 0x8125, 0x7ec0, 0x6bef, 0x4658, 0x9c24, 0x1, 0x0);
        gbc.writeMem(0x8125, { 0xdb, 0xbc });
        gbc.writeMem(0x96cb, { 0xc9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8127, gbc.sp());
        EXPECT(0xbcdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x8125));
        EXPECT(0xbc, gbc.readMem(0x8126));
        EXPECT(0xc9, gbc.readMem(0x96cb));
        // C9 03DD
        gbc.setState(0x9efb, 0xd74b, 0xb320, 0x19ca, 0x968d, 0xe5a1, 0x0, 0x1);
        gbc.writeMem(0x9efb, { 0xc9 });
        gbc.writeMem(0xd74b, { 0xd5, 0xa7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd74d, gbc.sp());
        EXPECT(0xa7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9efb));
        EXPECT(0xd5, gbc.readMem(0xd74b));
        EXPECT(0xa7, gbc.readMem(0xd74c));
        // C9 03DE
        gbc.setState(0x1ebf, 0xc235, 0x94b0, 0x4795, 0xf9b8, 0x25ee, 0x0, 0x0);
        gbc.writeMem(0x1ebf, { 0xc9 });
        gbc.writeMem(0xc235, { 0xa, 0xff });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc237, gbc.sp());
        EXPECT(0xff0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc235));
        EXPECT(0xff, gbc.readMem(0xc236));
        // C9 03DF
        gbc.setState(0x1071, 0x7640, 0x57b0, 0x7e9f, 0xec7c, 0xcefe, 0x0, 0x1);
        gbc.writeMem(0x1071, { 0xc9 });
        gbc.writeMem(0x7640, { 0xb5, 0x5f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7642, gbc.sp());
        EXPECT(0x5fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C9 03E0
        gbc.setState(0x8fdf, 0x1c44, 0x5450, 0x9d5d, 0x9917, 0x1374, 0x1, 0x1);
        gbc.writeMem(0x1c44, { 0xe6, 0x3d });
        gbc.writeMem(0x8fdf, { 0xc9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1c46, gbc.sp());
        EXPECT(0x3de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8fdf));
        // C9 03E3
        gbc.setState(0x3a1c, 0x6244, 0x43e0, 0x283, 0x77e, 0x5bda, 0x0, 0x0);
        gbc.writeMem(0x3a1c, { 0xc9 });
        gbc.writeMem(0x6244, { 0x2e, 0x30 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6246, gbc.sp());
        EXPECT(0x302e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03E4
        gbc.setState(0xc40, 0xbe98, 0x1b00, 0x8eb5, 0xfbae, 0x8ba9, 0x0, 0x1);
        gbc.writeMem(0xc40, { 0xc9 });
        gbc.writeMem(0xbe98, { 0x83, 0x26 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbe9a, gbc.sp());
        EXPECT(0x2683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xbe98));
        EXPECT(0x26, gbc.readMem(0xbe99));
        // C9 03E5
        gbc.setState(0x698d, 0x7e, 0x2380, 0x76b3, 0xb4bd, 0x1ac2, 0x1, 0x0);
        gbc.writeMem(0x7e, { 0xbc, 0x95 });
        gbc.writeMem(0x698d, { 0xc9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x80, gbc.sp());
        EXPECT(0x95bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03E6
        gbc.setState(0x16b6, 0x17eb, 0x9760, 0x7146, 0xb088, 0x49a9, 0x0, 0x1);
        gbc.writeMem(0x16b6, { 0xc9 });
        gbc.writeMem(0x17eb, { 0xbd, 0xef });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x17ed, gbc.sp());
        EXPECT(0xefbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C9 03E7
        gbc.setState(0x16a8, 0x18fe, 0x90c0, 0x432b, 0xa528, 0xef, 0x1, 0x0);
        gbc.writeMem(0x16a8, { 0xc9 });
        gbc.writeMem(0x18fe, { 0x6b, 0x1a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1900, gbc.sp());
        EXPECT(0x1a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
