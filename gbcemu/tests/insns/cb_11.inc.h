    TEST(gbcemu, opcode_cb_11) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 11 0001
        gbc.setState(0x563e, 0xc850, 0xc610, 0xac1f, 0x1a83, 0xe40d, 0x0, 0x1);
        gbc.writeMem(0x563e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc850, gbc.sp());
        EXPECT(0x5640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0002
        gbc.setState(0x3b33, 0x8298, 0x92f0, 0x2a6f, 0x2e69, 0x34eb, 0x0, 0x1);
        gbc.writeMem(0x3b33, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8298, gbc.sp());
        EXPECT(0x3b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0003
        gbc.setState(0xa6a5, 0xaeaf, 0x470, 0xa58, 0x4124, 0xce55, 0x1, 0x1);
        gbc.writeMem(0xa6a5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xaeaf, gbc.sp());
        EXPECT(0xa6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a5));
        EXPECT(0x11, gbc.readMem(0xa6a6));
        // CB 11 0004
        gbc.setState(0xe13a, 0x75c9, 0xd070, 0x2170, 0x279b, 0xdf63, 0x1, 0x0);
        gbc.writeMem(0xe13a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x75c9, gbc.sp());
        EXPECT(0xe13c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe13a));
        EXPECT(0x11, gbc.readMem(0xe13b));
        // CB 11 0005
        gbc.setState(0xb5da, 0x41d2, 0x4cc0, 0x139d, 0x97d5, 0x10a3, 0x1, 0x1);
        gbc.writeMem(0xb5da, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x41d2, gbc.sp());
        EXPECT(0xb5dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5da));
        EXPECT(0x11, gbc.readMem(0xb5db));
        // CB 11 0006
        gbc.setState(0x728f, 0x48ca, 0x1350, 0xb16c, 0xf4c8, 0xcde8, 0x0, 0x1);
        gbc.writeMem(0x728f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x48ca, gbc.sp());
        EXPECT(0x7291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0007
        gbc.setState(0x735c, 0xf44b, 0x3860, 0x7af, 0x63d, 0xe51a, 0x0, 0x1);
        gbc.writeMem(0x735c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf44b, gbc.sp());
        EXPECT(0x735e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0008
        gbc.setState(0xab75, 0xb662, 0xef0, 0xf5e9, 0xb5c, 0xde79, 0x0, 0x1);
        gbc.writeMem(0xab75, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb662, gbc.sp());
        EXPECT(0xab77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab75));
        EXPECT(0x11, gbc.readMem(0xab76));
        // CB 11 0009
        gbc.setState(0x4f31, 0x9729, 0x90d0, 0x8e32, 0x7091, 0x8810, 0x0, 0x1);
        gbc.writeMem(0x4f31, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9729, gbc.sp());
        EXPECT(0x4f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 000A
        gbc.setState(0x8f78, 0x53f1, 0xd8a0, 0x935d, 0x482a, 0x6fd8, 0x0, 0x1);
        gbc.writeMem(0x8f78, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x53f1, gbc.sp());
        EXPECT(0x8f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f78));
        EXPECT(0x11, gbc.readMem(0x8f79));
        // CB 11 000C
        gbc.setState(0x576a, 0x4cc6, 0xdb90, 0xf55c, 0x886b, 0x54b2, 0x1, 0x0);
        gbc.writeMem(0x576a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4cc6, gbc.sp());
        EXPECT(0x576c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 000D
        gbc.setState(0xc920, 0x2de4, 0x2a00, 0x7712, 0x58ba, 0x6d5b, 0x0, 0x0);
        gbc.writeMem(0xc920, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2de4, gbc.sp());
        EXPECT(0xc922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc920));
        EXPECT(0x11, gbc.readMem(0xc921));
        // CB 11 000F
        gbc.setState(0xe9fa, 0x2c9c, 0x6c50, 0x63e5, 0xfeef, 0xe289, 0x1, 0x0);
        gbc.writeMem(0xe9fa, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2c9c, gbc.sp());
        EXPECT(0xe9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9fa));
        EXPECT(0x11, gbc.readMem(0xe9fb));
        // CB 11 0010
        gbc.setState(0xd85e, 0x2340, 0x3bd0, 0x5c2d, 0x9685, 0x277, 0x0, 0x1);
        gbc.writeMem(0xd85e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2340, gbc.sp());
        EXPECT(0xd860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85e));
        EXPECT(0x11, gbc.readMem(0xd85f));
        // CB 11 0012
        gbc.setState(0x7ae5, 0xc836, 0x9490, 0xfe6d, 0x7e6, 0x777a, 0x1, 0x0);
        gbc.writeMem(0x7ae5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc836, gbc.sp());
        EXPECT(0x7ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0013
        gbc.setState(0xa057, 0xe2d3, 0x5eb0, 0x7f10, 0x1456, 0x8a5b, 0x1, 0x0);
        gbc.writeMem(0xa057, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe2d3, gbc.sp());
        EXPECT(0xa059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa057));
        EXPECT(0x11, gbc.readMem(0xa058));
        // CB 11 0014
        gbc.setState(0x8342, 0x4ca8, 0x2c70, 0xaf88, 0xcf91, 0x4ec, 0x0, 0x1);
        gbc.writeMem(0x8342, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4ca8, gbc.sp());
        EXPECT(0x8344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8342));
        EXPECT(0x11, gbc.readMem(0x8343));
        // CB 11 0015
        gbc.setState(0x4ae6, 0x3f95, 0x4600, 0x39f1, 0x4520, 0xdc7a, 0x0, 0x1);
        gbc.writeMem(0x4ae6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3f95, gbc.sp());
        EXPECT(0x4ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0016
        gbc.setState(0xe760, 0xcadb, 0x36b0, 0x6648, 0x8e0e, 0x8da0, 0x1, 0x0);
        gbc.writeMem(0xe760, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcadb, gbc.sp());
        EXPECT(0xe762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe760));
        EXPECT(0x11, gbc.readMem(0xe761));
        // CB 11 0017
        gbc.setState(0xc0a1, 0x7f54, 0x6c40, 0x5453, 0xe47f, 0x3a0d, 0x1, 0x0);
        gbc.writeMem(0xc0a1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0xc0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a1));
        EXPECT(0x11, gbc.readMem(0xc0a2));
        // CB 11 0018
        gbc.setState(0xb888, 0xf419, 0xf950, 0x5ab1, 0x86b6, 0xe611, 0x1, 0x1);
        gbc.writeMem(0xb888, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf419, gbc.sp());
        EXPECT(0xb88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb888));
        EXPECT(0x11, gbc.readMem(0xb889));
        // CB 11 0019
        gbc.setState(0xbd05, 0xeccc, 0xaf50, 0x7551, 0x3fa1, 0xe0bb, 0x0, 0x1);
        gbc.writeMem(0xbd05, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xeccc, gbc.sp());
        EXPECT(0xbd07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd05));
        EXPECT(0x11, gbc.readMem(0xbd06));
        // CB 11 001B
        gbc.setState(0x4fec, 0x8ac3, 0xe150, 0xa315, 0xa780, 0x178e, 0x0, 0x1);
        gbc.writeMem(0x4fec, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8ac3, gbc.sp());
        EXPECT(0x4fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 001C
        gbc.setState(0x3667, 0xa5a5, 0x5c20, 0x5957, 0xae99, 0x7f44, 0x1, 0x0);
        gbc.writeMem(0x3667, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa5a5, gbc.sp());
        EXPECT(0x3669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 001D
        gbc.setState(0xdc99, 0x4587, 0x6300, 0x7b04, 0x7f48, 0xa09c, 0x0, 0x1);
        gbc.writeMem(0xdc99, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4587, gbc.sp());
        EXPECT(0xdc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc99));
        EXPECT(0x11, gbc.readMem(0xdc9a));
        // CB 11 001E
        gbc.setState(0xcdfe, 0x1f5, 0xf2e0, 0x749d, 0x582c, 0x81e, 0x1, 0x1);
        gbc.writeMem(0xcdfe, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1f5, gbc.sp());
        EXPECT(0xce00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdfe));
        EXPECT(0x11, gbc.readMem(0xcdff));
        // CB 11 001F
        gbc.setState(0x854c, 0x8aaa, 0x3b0, 0xc327, 0xa629, 0xb85d, 0x0, 0x0);
        gbc.writeMem(0x854c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8aaa, gbc.sp());
        EXPECT(0x854e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854c));
        EXPECT(0x11, gbc.readMem(0x854d));
        // CB 11 0020
        gbc.setState(0xed6, 0x9d18, 0x2ef0, 0xf453, 0x1e13, 0xf99, 0x1, 0x1);
        gbc.writeMem(0xed6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9d18, gbc.sp());
        EXPECT(0xed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0021
        gbc.setState(0x733b, 0x2b04, 0xdd10, 0xa1e1, 0xe151, 0x2465, 0x1, 0x1);
        gbc.writeMem(0x733b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2b04, gbc.sp());
        EXPECT(0x733d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0022
        gbc.setState(0x599, 0x1fa0, 0x41e0, 0x20f8, 0x4364, 0x199d, 0x0, 0x1);
        gbc.writeMem(0x599, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1fa0, gbc.sp());
        EXPECT(0x59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0023
        gbc.setState(0xace0, 0x776b, 0x4f20, 0x67c3, 0xfd06, 0xeb54, 0x0, 0x1);
        gbc.writeMem(0xace0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x776b, gbc.sp());
        EXPECT(0xace2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace0));
        EXPECT(0x11, gbc.readMem(0xace1));
        // CB 11 0024
        gbc.setState(0x1c9b, 0xa1dc, 0x2a10, 0x3691, 0x7b85, 0x2535, 0x1, 0x1);
        gbc.writeMem(0x1c9b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa1dc, gbc.sp());
        EXPECT(0x1c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0025
        gbc.setState(0x5179, 0x5952, 0xdfe0, 0x36d7, 0x80cb, 0x4b9f, 0x0, 0x0);
        gbc.writeMem(0x5179, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5952, gbc.sp());
        EXPECT(0x517b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0026
        gbc.setState(0x4015, 0x8781, 0x31c0, 0xa64e, 0x6a92, 0x5c39, 0x0, 0x0);
        gbc.writeMem(0x4015, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8781, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0027
        gbc.setState(0xdb1c, 0xede1, 0xc580, 0xf69f, 0x90c2, 0xf0a4, 0x1, 0x1);
        gbc.writeMem(0xdb1c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xede1, gbc.sp());
        EXPECT(0xdb1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1c));
        EXPECT(0x11, gbc.readMem(0xdb1d));
        // CB 11 0028
        gbc.setState(0xc919, 0x4786, 0xf090, 0x3af1, 0xb326, 0xac6e, 0x0, 0x0);
        gbc.writeMem(0xc919, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4786, gbc.sp());
        EXPECT(0xc91b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc919));
        EXPECT(0x11, gbc.readMem(0xc91a));
        // CB 11 0029
        gbc.setState(0xdf8f, 0x703, 0xef70, 0xf672, 0x4ca8, 0x879e, 0x0, 0x1);
        gbc.writeMem(0xdf8f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x703, gbc.sp());
        EXPECT(0xdf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8f));
        EXPECT(0x11, gbc.readMem(0xdf90));
        // CB 11 002A
        gbc.setState(0x79ad, 0xdac9, 0xc450, 0xd163, 0xbf02, 0xe078, 0x0, 0x0);
        gbc.writeMem(0x79ad, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdac9, gbc.sp());
        EXPECT(0x79af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 002B
        gbc.setState(0x238c, 0x1fcf, 0x9920, 0x98f5, 0xd22f, 0x3471, 0x1, 0x0);
        gbc.writeMem(0x238c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1fcf, gbc.sp());
        EXPECT(0x238e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 002C
        gbc.setState(0xb67, 0x2c84, 0x2ab0, 0xccd9, 0xd3b7, 0xb85e, 0x0, 0x0);
        gbc.writeMem(0xb67, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2c84, gbc.sp());
        EXPECT(0xb69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 002D
        gbc.setState(0x49a0, 0x7373, 0x2e30, 0x11f2, 0x192c, 0xd0b7, 0x0, 0x0);
        gbc.writeMem(0x49a0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7373, gbc.sp());
        EXPECT(0x49a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 002E
        gbc.setState(0xd3a1, 0xf004, 0xef10, 0x77c, 0x7027, 0xf176, 0x0, 0x0);
        gbc.writeMem(0xd3a1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf004, gbc.sp());
        EXPECT(0xd3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a1));
        EXPECT(0x11, gbc.readMem(0xd3a2));
        // CB 11 002F
        gbc.setState(0x9af2, 0x2a7f, 0xfc30, 0x75d, 0x7f32, 0x4818, 0x1, 0x1);
        gbc.writeMem(0x9af2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0x9af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af2));
        EXPECT(0x11, gbc.readMem(0x9af3));
        // CB 11 0030
        gbc.setState(0x4a4a, 0x63d9, 0xb4d0, 0x323a, 0x4673, 0x4c5, 0x1, 0x1);
        gbc.writeMem(0x4a4a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x63d9, gbc.sp());
        EXPECT(0x4a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0031
        gbc.setState(0x684c, 0xc90b, 0xe0a0, 0x50a7, 0xc232, 0xd, 0x1, 0x0);
        gbc.writeMem(0x684c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc90b, gbc.sp());
        EXPECT(0x684e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0032
        gbc.setState(0x735f, 0x812a, 0x49c0, 0xc008, 0x44f0, 0x3c83, 0x1, 0x1);
        gbc.writeMem(0x735f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x812a, gbc.sp());
        EXPECT(0x7361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0033
        gbc.setState(0xb9ba, 0xe438, 0x3850, 0xc1a3, 0xe642, 0x10f0, 0x1, 0x1);
        gbc.writeMem(0xb9ba, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe438, gbc.sp());
        EXPECT(0xb9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ba));
        EXPECT(0x11, gbc.readMem(0xb9bb));
        // CB 11 0034
        gbc.setState(0x18b5, 0xacce, 0x1680, 0x153e, 0x3518, 0xc032, 0x1, 0x0);
        gbc.writeMem(0x18b5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xacce, gbc.sp());
        EXPECT(0x18b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0035
        gbc.setState(0x6214, 0x329c, 0x1ee0, 0x58b5, 0x125f, 0xaca7, 0x0, 0x0);
        gbc.writeMem(0x6214, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x329c, gbc.sp());
        EXPECT(0x6216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0036
        gbc.setState(0x2c3c, 0xc085, 0x75f0, 0x30f0, 0x3d3, 0xbd9e, 0x0, 0x0);
        gbc.writeMem(0x2c3c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc085, gbc.sp());
        EXPECT(0x2c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0037
        gbc.setState(0x14fc, 0xc88e, 0x3190, 0x1632, 0xd269, 0x21c8, 0x0, 0x0);
        gbc.writeMem(0x14fc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc88e, gbc.sp());
        EXPECT(0x14fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0039
        gbc.setState(0x3458, 0xfcfa, 0x6aa0, 0xb1dc, 0xd1cd, 0xe5f, 0x1, 0x1);
        gbc.writeMem(0x3458, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfcfa, gbc.sp());
        EXPECT(0x345a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 003A
        gbc.setState(0x6974, 0xf257, 0xba40, 0x3faa, 0x6084, 0x506e, 0x1, 0x0);
        gbc.writeMem(0x6974, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf257, gbc.sp());
        EXPECT(0x6976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 003B
        gbc.setState(0x1a79, 0x6c24, 0x6850, 0x39ea, 0xc873, 0xa63f, 0x0, 0x0);
        gbc.writeMem(0x1a79, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6c24, gbc.sp());
        EXPECT(0x1a7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 003C
        gbc.setState(0x5d80, 0xc717, 0x1790, 0xf5d7, 0x60de, 0xab9a, 0x0, 0x0);
        gbc.writeMem(0x5d80, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc717, gbc.sp());
        EXPECT(0x5d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 003D
        gbc.setState(0x3d25, 0xb81c, 0x9730, 0xd545, 0x121, 0x4c28, 0x0, 0x1);
        gbc.writeMem(0x3d25, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb81c, gbc.sp());
        EXPECT(0x3d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 003E
        gbc.setState(0x8175, 0xfb1c, 0x7910, 0x1705, 0x9ac4, 0x79b1, 0x1, 0x0);
        gbc.writeMem(0x8175, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfb1c, gbc.sp());
        EXPECT(0x8177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8175));
        EXPECT(0x11, gbc.readMem(0x8176));
        // CB 11 003F
        gbc.setState(0x5902, 0x8a68, 0x9e20, 0x78dd, 0xbdaf, 0xa7ab, 0x1, 0x0);
        gbc.writeMem(0x5902, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8a68, gbc.sp());
        EXPECT(0x5904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0040
        gbc.setState(0x5d25, 0xeba3, 0xcb10, 0xd525, 0x1265, 0x6018, 0x1, 0x0);
        gbc.writeMem(0x5d25, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xeba3, gbc.sp());
        EXPECT(0x5d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0041
        gbc.setState(0x5b5f, 0x814e, 0xa100, 0x5ed4, 0xb2a8, 0xb6a, 0x0, 0x1);
        gbc.writeMem(0x5b5f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x814e, gbc.sp());
        EXPECT(0x5b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0042
        gbc.setState(0x9fe9, 0x2279, 0x1dc0, 0xa01a, 0xf344, 0x5782, 0x0, 0x0);
        gbc.writeMem(0x9fe9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2279, gbc.sp());
        EXPECT(0x9feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe9));
        EXPECT(0x11, gbc.readMem(0x9fea));
        // CB 11 0043
        gbc.setState(0xb6a5, 0x4c56, 0x55c0, 0x60c, 0xb062, 0xf04, 0x0, 0x0);
        gbc.writeMem(0xb6a5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4c56, gbc.sp());
        EXPECT(0xb6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a5));
        EXPECT(0x11, gbc.readMem(0xb6a6));
        // CB 11 0045
        gbc.setState(0xb66c, 0x1bd8, 0xd190, 0xc20e, 0x7fb0, 0x25f6, 0x0, 0x1);
        gbc.writeMem(0xb66c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1bd8, gbc.sp());
        EXPECT(0xb66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb66c));
        EXPECT(0x11, gbc.readMem(0xb66d));
        // CB 11 0046
        gbc.setState(0x3ba6, 0xe80d, 0x25a0, 0xfa7a, 0x6541, 0x33d2, 0x0, 0x0);
        gbc.writeMem(0x3ba6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe80d, gbc.sp());
        EXPECT(0x3ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0047
        gbc.setState(0x4913, 0x144e, 0x7710, 0xf1d6, 0x4435, 0xc03c, 0x0, 0x1);
        gbc.writeMem(0x4913, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x144e, gbc.sp());
        EXPECT(0x4915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0048
        gbc.setState(0x8fc0, 0xb5e3, 0x7690, 0x2a18, 0x92d3, 0x4eb4, 0x1, 0x0);
        gbc.writeMem(0x8fc0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb5e3, gbc.sp());
        EXPECT(0x8fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc0));
        EXPECT(0x11, gbc.readMem(0x8fc1));
        // CB 11 0049
        gbc.setState(0xb7f9, 0x43a, 0xef0, 0x849c, 0xadc1, 0xce23, 0x0, 0x1);
        gbc.writeMem(0xb7f9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x43a, gbc.sp());
        EXPECT(0xb7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f9));
        EXPECT(0x11, gbc.readMem(0xb7fa));
        // CB 11 004A
        gbc.setState(0x405b, 0x8dd8, 0x9640, 0x5ed1, 0xc147, 0x18e4, 0x0, 0x1);
        gbc.writeMem(0x405b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8dd8, gbc.sp());
        EXPECT(0x405d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 004B
        gbc.setState(0x8f77, 0xf3b, 0x3860, 0xc92a, 0x5488, 0xcf63, 0x1, 0x1);
        gbc.writeMem(0x8f77, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf3b, gbc.sp());
        EXPECT(0x8f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f77));
        EXPECT(0x11, gbc.readMem(0x8f78));
        // CB 11 004C
        gbc.setState(0x443b, 0x9ea7, 0x6dc0, 0xbd17, 0x4e79, 0x71da, 0x1, 0x0);
        gbc.writeMem(0x443b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9ea7, gbc.sp());
        EXPECT(0x443d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 004D
        gbc.setState(0x9ef2, 0xf2fc, 0xd2c0, 0x2a1b, 0xca3e, 0x5673, 0x1, 0x0);
        gbc.writeMem(0x9ef2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf2fc, gbc.sp());
        EXPECT(0x9ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef2));
        EXPECT(0x11, gbc.readMem(0x9ef3));
        // CB 11 004E
        gbc.setState(0x5d88, 0x157e, 0xab0, 0x9a62, 0xbf31, 0x4c89, 0x0, 0x1);
        gbc.writeMem(0x5d88, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x157e, gbc.sp());
        EXPECT(0x5d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 004F
        gbc.setState(0x362b, 0xcf9f, 0xaab0, 0x1820, 0xb1a3, 0xb7c1, 0x1, 0x0);
        gbc.writeMem(0x362b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcf9f, gbc.sp());
        EXPECT(0x362d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0050
        gbc.setState(0x2a9f, 0x9c86, 0xbc20, 0x1982, 0xda26, 0xdff6, 0x1, 0x1);
        gbc.writeMem(0x2a9f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9c86, gbc.sp());
        EXPECT(0x2aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0051
        gbc.setState(0x6acd, 0x8c98, 0x8680, 0x7dff, 0xd222, 0x28c, 0x1, 0x1);
        gbc.writeMem(0x6acd, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8c98, gbc.sp());
        EXPECT(0x6acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0052
        gbc.setState(0xe9f8, 0xacbd, 0x32f0, 0xfa13, 0xa353, 0xf52a, 0x0, 0x1);
        gbc.writeMem(0xe9f8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xacbd, gbc.sp());
        EXPECT(0xe9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f8));
        EXPECT(0x11, gbc.readMem(0xe9f9));
        // CB 11 0053
        gbc.setState(0x3b51, 0x8f3c, 0xb5c0, 0x4213, 0x12b4, 0x792d, 0x1, 0x1);
        gbc.writeMem(0x3b51, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8f3c, gbc.sp());
        EXPECT(0x3b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0054
        gbc.setState(0x3705, 0xb93d, 0x4b20, 0x733e, 0xd46c, 0x9091, 0x0, 0x1);
        gbc.writeMem(0x3705, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb93d, gbc.sp());
        EXPECT(0x3707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0055
        gbc.setState(0xa432, 0xf9cd, 0xca00, 0xb438, 0xa074, 0xd80b, 0x0, 0x0);
        gbc.writeMem(0xa432, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf9cd, gbc.sp());
        EXPECT(0xa434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa432));
        EXPECT(0x11, gbc.readMem(0xa433));
        // CB 11 0056
        gbc.setState(0xece0, 0xfaf1, 0xfd90, 0x70d7, 0xd62d, 0x404a, 0x0, 0x0);
        gbc.writeMem(0xece0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfaf1, gbc.sp());
        EXPECT(0xece2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece0));
        EXPECT(0x11, gbc.readMem(0xece1));
        // CB 11 0057
        gbc.setState(0x8d3b, 0x595b, 0x26e0, 0x38b2, 0xab6b, 0x3170, 0x1, 0x0);
        gbc.writeMem(0x8d3b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x595b, gbc.sp());
        EXPECT(0x8d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3b));
        EXPECT(0x11, gbc.readMem(0x8d3c));
        // CB 11 0058
        gbc.setState(0x1716, 0x11e8, 0x54c0, 0xb29f, 0x4a55, 0x28b0, 0x1, 0x1);
        gbc.writeMem(0x1716, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x11e8, gbc.sp());
        EXPECT(0x1718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0059
        gbc.setState(0x3a09, 0x87f9, 0x3910, 0xcf54, 0x280, 0xdf3d, 0x0, 0x1);
        gbc.writeMem(0x3a09, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x87f9, gbc.sp());
        EXPECT(0x3a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 005A
        gbc.setState(0xa4cf, 0x1a22, 0x4c00, 0x1a14, 0x9f55, 0xc5a6, 0x1, 0x0);
        gbc.writeMem(0xa4cf, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1a22, gbc.sp());
        EXPECT(0xa4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4cf));
        EXPECT(0x11, gbc.readMem(0xa4d0));
        // CB 11 005B
        gbc.setState(0x17a8, 0x7e8b, 0xec80, 0x501f, 0x3879, 0x55c1, 0x1, 0x1);
        gbc.writeMem(0x17a8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7e8b, gbc.sp());
        EXPECT(0x17aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 005C
        gbc.setState(0x56b3, 0x6ddd, 0xb360, 0x58c9, 0xe356, 0xc809, 0x1, 0x0);
        gbc.writeMem(0x56b3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6ddd, gbc.sp());
        EXPECT(0x56b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 005D
        gbc.setState(0x68ef, 0x47c3, 0xbd80, 0xb29d, 0x3d6e, 0xc205, 0x0, 0x1);
        gbc.writeMem(0x68ef, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x47c3, gbc.sp());
        EXPECT(0x68f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 005E
        gbc.setState(0x32da, 0x43d4, 0x2bc0, 0x4865, 0xdf05, 0x7698, 0x1, 0x0);
        gbc.writeMem(0x32da, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x43d4, gbc.sp());
        EXPECT(0x32dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 005F
        gbc.setState(0xab53, 0x7ecd, 0xc560, 0xb71, 0x9289, 0x1dc5, 0x0, 0x1);
        gbc.writeMem(0xab53, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7ecd, gbc.sp());
        EXPECT(0xab55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab53));
        EXPECT(0x11, gbc.readMem(0xab54));
        // CB 11 0060
        gbc.setState(0xc64d, 0x3755, 0x8340, 0xeceb, 0x522d, 0x10d1, 0x0, 0x1);
        gbc.writeMem(0xc64d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3755, gbc.sp());
        EXPECT(0xc64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64d));
        EXPECT(0x11, gbc.readMem(0xc64e));
        // CB 11 0061
        gbc.setState(0x95b9, 0x3dfb, 0xedf0, 0xe2f6, 0x7105, 0xd7e4, 0x0, 0x0);
        gbc.writeMem(0x95b9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3dfb, gbc.sp());
        EXPECT(0x95bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b9));
        EXPECT(0x11, gbc.readMem(0x95ba));
        // CB 11 0062
        gbc.setState(0x86e4, 0xcd55, 0x5960, 0xdd5a, 0x162, 0x74a1, 0x0, 0x0);
        gbc.writeMem(0x86e4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcd55, gbc.sp());
        EXPECT(0x86e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e4));
        EXPECT(0x11, gbc.readMem(0x86e5));
        // CB 11 0063
        gbc.setState(0x997, 0x722a, 0x9d10, 0xfee5, 0xc576, 0x82e4, 0x1, 0x0);
        gbc.writeMem(0x997, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x722a, gbc.sp());
        EXPECT(0x999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0064
        gbc.setState(0xa9de, 0xfff5, 0x6af0, 0xf464, 0xe518, 0x24d9, 0x0, 0x0);
        gbc.writeMem(0xa9de, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfff5, gbc.sp());
        EXPECT(0xa9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9de));
        EXPECT(0x11, gbc.readMem(0xa9df));
        // CB 11 0065
        gbc.setState(0xb9ea, 0xfd40, 0x7b10, 0x102e, 0x8e30, 0x4a03, 0x0, 0x1);
        gbc.writeMem(0xb9ea, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfd40, gbc.sp());
        EXPECT(0xb9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ea));
        EXPECT(0x11, gbc.readMem(0xb9eb));
        // CB 11 0066
        gbc.setState(0xd4e8, 0xa4e9, 0x7670, 0x3904, 0x65b, 0xb620, 0x0, 0x0);
        gbc.writeMem(0xd4e8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa4e9, gbc.sp());
        EXPECT(0xd4ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e8));
        EXPECT(0x11, gbc.readMem(0xd4e9));
        // CB 11 0067
        gbc.setState(0xa388, 0x12ea, 0x9650, 0xf36c, 0x9461, 0xab2d, 0x0, 0x1);
        gbc.writeMem(0xa388, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0xa38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa388));
        EXPECT(0x11, gbc.readMem(0xa389));
        // CB 11 0068
        gbc.setState(0x2786, 0xd4f, 0x9600, 0x1dce, 0x8165, 0x1710, 0x0, 0x0);
        gbc.writeMem(0x2786, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd4f, gbc.sp());
        EXPECT(0x2788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0069
        gbc.setState(0xc881, 0x625a, 0x2160, 0x866b, 0x2bd2, 0x9871, 0x0, 0x0);
        gbc.writeMem(0xc881, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x625a, gbc.sp());
        EXPECT(0xc883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc881));
        EXPECT(0x11, gbc.readMem(0xc882));
        // CB 11 006A
        gbc.setState(0xc5a2, 0xf363, 0x4f50, 0xf260, 0x87d6, 0xea56, 0x1, 0x0);
        gbc.writeMem(0xc5a2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf363, gbc.sp());
        EXPECT(0xc5a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a2));
        EXPECT(0x11, gbc.readMem(0xc5a3));
        // CB 11 006B
        gbc.setState(0xbe8e, 0x28a9, 0x7580, 0x5c4c, 0x5d75, 0x2f7f, 0x0, 0x0);
        gbc.writeMem(0xbe8e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x28a9, gbc.sp());
        EXPECT(0xbe90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8e));
        EXPECT(0x11, gbc.readMem(0xbe8f));
        // CB 11 006C
        gbc.setState(0xc6b, 0x41ba, 0x14e0, 0x5af1, 0xde76, 0xd7b9, 0x1, 0x1);
        gbc.writeMem(0xc6b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x41ba, gbc.sp());
        EXPECT(0xc6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 006D
        gbc.setState(0xcfd3, 0x182f, 0xd20, 0x88a1, 0xae03, 0xe349, 0x0, 0x0);
        gbc.writeMem(0xcfd3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x182f, gbc.sp());
        EXPECT(0xcfd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd3));
        EXPECT(0x11, gbc.readMem(0xcfd4));
        // CB 11 006E
        gbc.setState(0x922d, 0x8396, 0x9100, 0x49b2, 0xa9f2, 0x5b65, 0x1, 0x0);
        gbc.writeMem(0x922d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8396, gbc.sp());
        EXPECT(0x922f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922d));
        EXPECT(0x11, gbc.readMem(0x922e));
        // CB 11 006F
        gbc.setState(0xbc48, 0x7683, 0x1890, 0x1e3a, 0x559f, 0xe265, 0x1, 0x0);
        gbc.writeMem(0xbc48, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7683, gbc.sp());
        EXPECT(0xbc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc48));
        EXPECT(0x11, gbc.readMem(0xbc49));
        // CB 11 0070
        gbc.setState(0x4611, 0x9002, 0xfca0, 0x8d5b, 0x861d, 0xfb01, 0x1, 0x1);
        gbc.writeMem(0x4611, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9002, gbc.sp());
        EXPECT(0x4613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0071
        gbc.setState(0xc29a, 0x870b, 0x4a80, 0xe406, 0x239f, 0x3a9, 0x1, 0x1);
        gbc.writeMem(0xc29a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x870b, gbc.sp());
        EXPECT(0xc29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29a));
        EXPECT(0x11, gbc.readMem(0xc29b));
        // CB 11 0072
        gbc.setState(0x6abb, 0x8b01, 0x6fc0, 0x4d0e, 0xd07e, 0xd115, 0x1, 0x0);
        gbc.writeMem(0x6abb, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8b01, gbc.sp());
        EXPECT(0x6abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0073
        gbc.setState(0x35d7, 0x49a0, 0xe020, 0x3437, 0x4fe, 0xdf86, 0x1, 0x0);
        gbc.writeMem(0x35d7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x49a0, gbc.sp());
        EXPECT(0x35d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0074
        gbc.setState(0x5eb1, 0x861b, 0x1aa0, 0x9ff, 0xb659, 0xf83e, 0x1, 0x1);
        gbc.writeMem(0x5eb1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x861b, gbc.sp());
        EXPECT(0x5eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0075
        gbc.setState(0x8cc5, 0xcdef, 0x20e0, 0x59e7, 0xcbd5, 0xa2c0, 0x1, 0x0);
        gbc.writeMem(0x8cc5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcdef, gbc.sp());
        EXPECT(0x8cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc5));
        EXPECT(0x11, gbc.readMem(0x8cc6));
        // CB 11 0076
        gbc.setState(0x8ad3, 0x761, 0x4a30, 0x6155, 0x1d21, 0x7e5b, 0x0, 0x0);
        gbc.writeMem(0x8ad3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x761, gbc.sp());
        EXPECT(0x8ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad3));
        EXPECT(0x11, gbc.readMem(0x8ad4));
        // CB 11 0077
        gbc.setState(0x3e51, 0xfa9f, 0x8260, 0x2603, 0x7d0d, 0xe887, 0x1, 0x1);
        gbc.writeMem(0x3e51, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfa9f, gbc.sp());
        EXPECT(0x3e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0078
        gbc.setState(0x9582, 0x62b5, 0xe0, 0xc851, 0x3493, 0x61f9, 0x0, 0x1);
        gbc.writeMem(0x9582, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x62b5, gbc.sp());
        EXPECT(0x9584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9582));
        EXPECT(0x11, gbc.readMem(0x9583));
        // CB 11 0079
        gbc.setState(0x1e71, 0x7fc9, 0x6ba0, 0xb0c4, 0xd8b1, 0x103c, 0x1, 0x0);
        gbc.writeMem(0x1e71, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7fc9, gbc.sp());
        EXPECT(0x1e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 007A
        gbc.setState(0x1114, 0xfbc4, 0xbf40, 0xbc10, 0xc630, 0xe21c, 0x0, 0x0);
        gbc.writeMem(0x1114, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfbc4, gbc.sp());
        EXPECT(0x1116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 007B
        gbc.setState(0x44a5, 0x2099, 0x94e0, 0xc010, 0x2b47, 0x9608, 0x0, 0x1);
        gbc.writeMem(0x44a5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2099, gbc.sp());
        EXPECT(0x44a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 007C
        gbc.setState(0x7423, 0xaf3c, 0x8b00, 0x8e8b, 0xad1f, 0x23f7, 0x0, 0x1);
        gbc.writeMem(0x7423, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaf3c, gbc.sp());
        EXPECT(0x7425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 007D
        gbc.setState(0x34b3, 0xed4e, 0x4460, 0x26ef, 0x2e13, 0xe056, 0x0, 0x1);
        gbc.writeMem(0x34b3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xed4e, gbc.sp());
        EXPECT(0x34b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 007E
        gbc.setState(0x4299, 0xfc7e, 0xcba0, 0x961b, 0x82f0, 0x8232, 0x1, 0x1);
        gbc.writeMem(0x4299, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfc7e, gbc.sp());
        EXPECT(0x429b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 007F
        gbc.setState(0x457c, 0xf52a, 0x9790, 0x7979, 0xe385, 0x3648, 0x1, 0x1);
        gbc.writeMem(0x457c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf52a, gbc.sp());
        EXPECT(0x457e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0080
        gbc.setState(0xa2d0, 0xfc5d, 0x68e0, 0x11f6, 0xd13, 0xb865, 0x0, 0x1);
        gbc.writeMem(0xa2d0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfc5d, gbc.sp());
        EXPECT(0xa2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d0));
        EXPECT(0x11, gbc.readMem(0xa2d1));
        // CB 11 0081
        gbc.setState(0xcf53, 0xdf72, 0x40f0, 0x9a3b, 0xd3d8, 0x3788, 0x0, 0x0);
        gbc.writeMem(0xcf53, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdf72, gbc.sp());
        EXPECT(0xcf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf53));
        EXPECT(0x11, gbc.readMem(0xcf54));
        // CB 11 0082
        gbc.setState(0x33b3, 0x44e1, 0x2e30, 0x6431, 0xa9cf, 0xe29d, 0x1, 0x1);
        gbc.writeMem(0x33b3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x44e1, gbc.sp());
        EXPECT(0x33b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0084
        gbc.setState(0x3182, 0xb755, 0xb240, 0xebe0, 0x5b42, 0xc732, 0x0, 0x0);
        gbc.writeMem(0x3182, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb755, gbc.sp());
        EXPECT(0x3184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0085
        gbc.setState(0x3c32, 0x34ae, 0xa7a0, 0xe471, 0x5466, 0x135b, 0x1, 0x1);
        gbc.writeMem(0x3c32, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x34ae, gbc.sp());
        EXPECT(0x3c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0086
        gbc.setState(0xc415, 0x4bb, 0x3780, 0x6109, 0x45fb, 0x6309, 0x0, 0x0);
        gbc.writeMem(0xc415, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4bb, gbc.sp());
        EXPECT(0xc417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc415));
        EXPECT(0x11, gbc.readMem(0xc416));
        // CB 11 0087
        gbc.setState(0x4cf2, 0xba21, 0x1d20, 0x803b, 0xf98e, 0xacd, 0x1, 0x0);
        gbc.writeMem(0x4cf2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xba21, gbc.sp());
        EXPECT(0x4cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0088
        gbc.setState(0x8e2c, 0x2eef, 0x5de0, 0xad7, 0xfe00, 0x9937, 0x1, 0x1);
        gbc.writeMem(0x8e2c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2eef, gbc.sp());
        EXPECT(0x8e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2c));
        EXPECT(0x11, gbc.readMem(0x8e2d));
        // CB 11 0089
        gbc.setState(0x8222, 0x3ec1, 0xb3b0, 0xbe0a, 0xde41, 0x80ab, 0x1, 0x0);
        gbc.writeMem(0x8222, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3ec1, gbc.sp());
        EXPECT(0x8224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8222));
        EXPECT(0x11, gbc.readMem(0x8223));
        // CB 11 008A
        gbc.setState(0xa496, 0x5ff, 0x77e0, 0x5fd9, 0xb83e, 0x3097, 0x1, 0x0);
        gbc.writeMem(0xa496, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5ff, gbc.sp());
        EXPECT(0xa498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa496));
        EXPECT(0x11, gbc.readMem(0xa497));
        // CB 11 008B
        gbc.setState(0x805c, 0xe991, 0x2950, 0x95be, 0x6aa8, 0xa964, 0x1, 0x1);
        gbc.writeMem(0x805c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe991, gbc.sp());
        EXPECT(0x805e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x805c));
        EXPECT(0x11, gbc.readMem(0x805d));
        // CB 11 008C
        gbc.setState(0x2d87, 0xe031, 0x8fe0, 0xedae, 0x8fdd, 0xb366, 0x0, 0x1);
        gbc.writeMem(0x2d87, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe031, gbc.sp());
        EXPECT(0x2d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 008D
        gbc.setState(0xe17, 0x27bf, 0xc880, 0xe74c, 0x26d9, 0x250a, 0x0, 0x1);
        gbc.writeMem(0xe17, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x27bf, gbc.sp());
        EXPECT(0xe19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 008E
        gbc.setState(0x2a39, 0xe6ff, 0xa30, 0x8b1f, 0xa4d3, 0x2e43, 0x0, 0x1);
        gbc.writeMem(0x2a39, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe6ff, gbc.sp());
        EXPECT(0x2a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 008F
        gbc.setState(0x2a54, 0xe4ba, 0x5690, 0x363d, 0xa681, 0x8292, 0x1, 0x1);
        gbc.writeMem(0x2a54, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe4ba, gbc.sp());
        EXPECT(0x2a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0090
        gbc.setState(0x73b4, 0x6f83, 0x4d70, 0xcf2b, 0x8b15, 0xc195, 0x0, 0x0);
        gbc.writeMem(0x73b4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6f83, gbc.sp());
        EXPECT(0x73b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0091
        gbc.setState(0x3171, 0x78eb, 0xa8f0, 0xed, 0xdf63, 0x729c, 0x0, 0x1);
        gbc.writeMem(0x3171, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x78eb, gbc.sp());
        EXPECT(0x3173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0092
        gbc.setState(0x6ab, 0x6e9f, 0x62d0, 0x9717, 0x4f89, 0x6e2d, 0x1, 0x1);
        gbc.writeMem(0x6ab, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6e9f, gbc.sp());
        EXPECT(0x6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0093
        gbc.setState(0xea04, 0xd352, 0x6d50, 0x4ed, 0xf1d2, 0xd3, 0x1, 0x1);
        gbc.writeMem(0xea04, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd352, gbc.sp());
        EXPECT(0xea06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea04));
        EXPECT(0x11, gbc.readMem(0xea05));
        // CB 11 0094
        gbc.setState(0xa954, 0x8c6, 0xa440, 0x9dda, 0xebaf, 0x38b7, 0x0, 0x0);
        gbc.writeMem(0xa954, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8c6, gbc.sp());
        EXPECT(0xa956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa954));
        EXPECT(0x11, gbc.readMem(0xa955));
        // CB 11 0095
        gbc.setState(0x734a, 0x2245, 0xf190, 0x5beb, 0xde7c, 0xfafc, 0x0, 0x0);
        gbc.writeMem(0x734a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2245, gbc.sp());
        EXPECT(0x734c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0096
        gbc.setState(0xc4be, 0x640e, 0x2600, 0xf7a4, 0xe398, 0x2935, 0x1, 0x0);
        gbc.writeMem(0xc4be, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x640e, gbc.sp());
        EXPECT(0xc4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4be));
        EXPECT(0x11, gbc.readMem(0xc4bf));
        // CB 11 0097
        gbc.setState(0x9258, 0x2934, 0x280, 0xdea4, 0x2f97, 0x3829, 0x1, 0x1);
        gbc.writeMem(0x9258, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2934, gbc.sp());
        EXPECT(0x925a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9258));
        EXPECT(0x11, gbc.readMem(0x9259));
        // CB 11 0098
        gbc.setState(0x4d96, 0xa1d2, 0x9040, 0x1f39, 0xb7ff, 0x4957, 0x0, 0x0);
        gbc.writeMem(0x4d96, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa1d2, gbc.sp());
        EXPECT(0x4d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 009A
        gbc.setState(0xc4b5, 0xa595, 0x15d0, 0x8b02, 0x29f1, 0x7157, 0x1, 0x1);
        gbc.writeMem(0xc4b5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa595, gbc.sp());
        EXPECT(0xc4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b5));
        EXPECT(0x11, gbc.readMem(0xc4b6));
        // CB 11 009B
        gbc.setState(0x3300, 0x6dff, 0x1260, 0xd622, 0xdc54, 0xf8f4, 0x0, 0x1);
        gbc.writeMem(0x3300, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6dff, gbc.sp());
        EXPECT(0x3302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 009C
        gbc.setState(0x7f93, 0x1e3d, 0xd460, 0x1d33, 0x9405, 0x990f, 0x0, 0x1);
        gbc.writeMem(0x7f93, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1e3d, gbc.sp());
        EXPECT(0x7f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 009D
        gbc.setState(0x6db, 0x9b46, 0x6a40, 0x2c7e, 0xf01b, 0x345b, 0x1, 0x1);
        gbc.writeMem(0x6db, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9b46, gbc.sp());
        EXPECT(0x6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 009E
        gbc.setState(0x7d65, 0x5d76, 0xeca0, 0x6fee, 0xe4ed, 0x68ec, 0x1, 0x0);
        gbc.writeMem(0x7d65, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5d76, gbc.sp());
        EXPECT(0x7d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 009F
        gbc.setState(0xac72, 0x7c25, 0xa880, 0x405d, 0xd101, 0x156b, 0x0, 0x1);
        gbc.writeMem(0xac72, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7c25, gbc.sp());
        EXPECT(0xac74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac72));
        EXPECT(0x11, gbc.readMem(0xac73));
        // CB 11 00A0
        gbc.setState(0x825, 0x4bba, 0xae00, 0xde84, 0xfbe1, 0x61c5, 0x1, 0x1);
        gbc.writeMem(0x825, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4bba, gbc.sp());
        EXPECT(0x827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00A2
        gbc.setState(0x8e02, 0x83eb, 0xf250, 0x176f, 0x5359, 0x2dea, 0x1, 0x1);
        gbc.writeMem(0x8e02, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x83eb, gbc.sp());
        EXPECT(0x8e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e02));
        EXPECT(0x11, gbc.readMem(0x8e03));
        // CB 11 00A3
        gbc.setState(0x9e4f, 0x3323, 0x2c00, 0x582f, 0xca03, 0x6cd5, 0x0, 0x1);
        gbc.writeMem(0x9e4f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3323, gbc.sp());
        EXPECT(0x9e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4f));
        EXPECT(0x11, gbc.readMem(0x9e50));
        // CB 11 00A4
        gbc.setState(0x7563, 0x19ab, 0xcaf0, 0xc3cb, 0xe5f, 0x1fa, 0x1, 0x0);
        gbc.writeMem(0x7563, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x19ab, gbc.sp());
        EXPECT(0x7565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00A5
        gbc.setState(0xe7db, 0xecd1, 0x160, 0x83ef, 0x176f, 0x5f33, 0x1, 0x1);
        gbc.writeMem(0xe7db, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xecd1, gbc.sp());
        EXPECT(0xe7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7db));
        EXPECT(0x11, gbc.readMem(0xe7dc));
        // CB 11 00A6
        gbc.setState(0x335c, 0x5e40, 0x38d0, 0xaad7, 0xceee, 0x2f89, 0x0, 0x0);
        gbc.writeMem(0x335c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5e40, gbc.sp());
        EXPECT(0x335e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00A7
        gbc.setState(0x7b90, 0x2d03, 0x1a40, 0xbaa3, 0x7368, 0xb746, 0x1, 0x0);
        gbc.writeMem(0x7b90, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2d03, gbc.sp());
        EXPECT(0x7b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00A9
        gbc.setState(0x9a3d, 0xe903, 0x5d70, 0x607e, 0x4519, 0xd310, 0x1, 0x0);
        gbc.writeMem(0x9a3d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe903, gbc.sp());
        EXPECT(0x9a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3d));
        EXPECT(0x11, gbc.readMem(0x9a3e));
        // CB 11 00AA
        gbc.setState(0x553, 0xf7be, 0xbdc0, 0xd334, 0xec9b, 0xcab8, 0x0, 0x1);
        gbc.writeMem(0x553, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf7be, gbc.sp());
        EXPECT(0x555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00AB
        gbc.setState(0x28fe, 0x69f7, 0x7010, 0x6e48, 0x56f1, 0xf4c8, 0x0, 0x0);
        gbc.writeMem(0x28fe, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x69f7, gbc.sp());
        EXPECT(0x2900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00AC
        gbc.setState(0x7040, 0x1aec, 0xb780, 0xaf02, 0x676d, 0x49ac, 0x0, 0x0);
        gbc.writeMem(0x7040, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1aec, gbc.sp());
        EXPECT(0x7042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00AD
        gbc.setState(0x6c3d, 0x5651, 0x2270, 0xa1bb, 0xbad8, 0xf4ec, 0x1, 0x1);
        gbc.writeMem(0x6c3d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5651, gbc.sp());
        EXPECT(0x6c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00AE
        gbc.setState(0xb55b, 0xb3ac, 0xb370, 0x8bb3, 0x16d3, 0x98b3, 0x1, 0x0);
        gbc.writeMem(0xb55b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb3ac, gbc.sp());
        EXPECT(0xb55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55b));
        EXPECT(0x11, gbc.readMem(0xb55c));
        // CB 11 00AF
        gbc.setState(0x3691, 0x441a, 0x1d80, 0xfdd8, 0x2722, 0xd447, 0x1, 0x0);
        gbc.writeMem(0x3691, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x441a, gbc.sp());
        EXPECT(0x3693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00B0
        gbc.setState(0xf8d, 0xc769, 0x6370, 0x1e45, 0xa1eb, 0x54cc, 0x0, 0x1);
        gbc.writeMem(0xf8d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc769, gbc.sp());
        EXPECT(0xf8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00B1
        gbc.setState(0x9838, 0xdbec, 0x9860, 0x70d0, 0xefb7, 0xb596, 0x0, 0x0);
        gbc.writeMem(0x9838, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdbec, gbc.sp());
        EXPECT(0x983a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9838));
        EXPECT(0x11, gbc.readMem(0x9839));
        // CB 11 00B2
        gbc.setState(0xb13c, 0x38b7, 0x3f80, 0x3d43, 0x7cae, 0x4eb2, 0x0, 0x1);
        gbc.writeMem(0xb13c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x38b7, gbc.sp());
        EXPECT(0xb13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb13c));
        EXPECT(0x11, gbc.readMem(0xb13d));
        // CB 11 00B3
        gbc.setState(0xb25e, 0xf8d8, 0xc370, 0x3bc6, 0x3e9f, 0xc71d, 0x0, 0x0);
        gbc.writeMem(0xb25e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf8d8, gbc.sp());
        EXPECT(0xb260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25e));
        EXPECT(0x11, gbc.readMem(0xb25f));
        // CB 11 00B4
        gbc.setState(0xaf53, 0xa1fd, 0x3df0, 0x1138, 0x9578, 0x7764, 0x1, 0x0);
        gbc.writeMem(0xaf53, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa1fd, gbc.sp());
        EXPECT(0xaf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf53));
        EXPECT(0x11, gbc.readMem(0xaf54));
        // CB 11 00B5
        gbc.setState(0x73a4, 0xdeba, 0xb440, 0x2e14, 0x93f0, 0x5df8, 0x0, 0x0);
        gbc.writeMem(0x73a4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdeba, gbc.sp());
        EXPECT(0x73a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00B6
        gbc.setState(0x90f1, 0xcf3f, 0x7990, 0x998c, 0x8e85, 0xdc6f, 0x1, 0x0);
        gbc.writeMem(0x90f1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcf3f, gbc.sp());
        EXPECT(0x90f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f1));
        EXPECT(0x11, gbc.readMem(0x90f2));
        // CB 11 00B7
        gbc.setState(0xb62b, 0xb6ed, 0x8ee0, 0xce10, 0xe091, 0xcaea, 0x1, 0x0);
        gbc.writeMem(0xb62b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb6ed, gbc.sp());
        EXPECT(0xb62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb62b));
        EXPECT(0x11, gbc.readMem(0xb62c));
        // CB 11 00B8
        gbc.setState(0xe8f4, 0x5618, 0xb770, 0xc6b5, 0xee65, 0xf53, 0x1, 0x1);
        gbc.writeMem(0xe8f4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5618, gbc.sp());
        EXPECT(0xe8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f4));
        EXPECT(0x11, gbc.readMem(0xe8f5));
        // CB 11 00B9
        gbc.setState(0xb793, 0x4474, 0x6b10, 0x9fb4, 0x83b9, 0xec65, 0x0, 0x0);
        gbc.writeMem(0xb793, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4474, gbc.sp());
        EXPECT(0xb795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb793));
        EXPECT(0x11, gbc.readMem(0xb794));
        // CB 11 00BA
        gbc.setState(0x5a99, 0xc0a0, 0xb5d0, 0x519d, 0x86f, 0xe028, 0x0, 0x0);
        gbc.writeMem(0x5a99, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc0a0, gbc.sp());
        EXPECT(0x5a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00BB
        gbc.setState(0xc425, 0xc4d8, 0xf100, 0xc775, 0x831d, 0x166b, 0x1, 0x1);
        gbc.writeMem(0xc425, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc4d8, gbc.sp());
        EXPECT(0xc427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc425));
        EXPECT(0x11, gbc.readMem(0xc426));
        // CB 11 00BC
        gbc.setState(0x5e44, 0x7e1d, 0xc710, 0x92dc, 0x3db0, 0x3afa, 0x1, 0x1);
        gbc.writeMem(0x5e44, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7e1d, gbc.sp());
        EXPECT(0x5e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00BD
        gbc.setState(0xc59c, 0xdf5c, 0xd250, 0xdb83, 0xe39f, 0x64fa, 0x0, 0x1);
        gbc.writeMem(0xc59c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdf5c, gbc.sp());
        EXPECT(0xc59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59c));
        EXPECT(0x11, gbc.readMem(0xc59d));
        // CB 11 00BE
        gbc.setState(0x93c3, 0x66b6, 0xf150, 0xc9c6, 0x313, 0xb982, 0x0, 0x0);
        gbc.writeMem(0x93c3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x66b6, gbc.sp());
        EXPECT(0x93c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c3));
        EXPECT(0x11, gbc.readMem(0x93c4));
        // CB 11 00BF
        gbc.setState(0xe834, 0x584, 0xf3b0, 0xf4ff, 0x6de0, 0xe033, 0x0, 0x0);
        gbc.writeMem(0xe834, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x584, gbc.sp());
        EXPECT(0xe836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe834));
        EXPECT(0x11, gbc.readMem(0xe835));
        // CB 11 00C0
        gbc.setState(0x39f9, 0x770d, 0xd200, 0x9ead, 0x5f7c, 0xc1b9, 0x0, 0x0);
        gbc.writeMem(0x39f9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x770d, gbc.sp());
        EXPECT(0x39fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00C1
        gbc.setState(0xc7ef, 0x3eba, 0x4410, 0x4b30, 0x39db, 0x8be8, 0x1, 0x0);
        gbc.writeMem(0xc7ef, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3eba, gbc.sp());
        EXPECT(0xc7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ef));
        EXPECT(0x11, gbc.readMem(0xc7f0));
        // CB 11 00C2
        gbc.setState(0x2d54, 0xca88, 0xe20, 0x3972, 0xa3b, 0xbe60, 0x0, 0x1);
        gbc.writeMem(0x2d54, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xca88, gbc.sp());
        EXPECT(0x2d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00C3
        gbc.setState(0xa5b3, 0xd57e, 0xafb0, 0x94d0, 0xc02d, 0xc547, 0x0, 0x1);
        gbc.writeMem(0xa5b3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd57e, gbc.sp());
        EXPECT(0xa5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b3));
        EXPECT(0x11, gbc.readMem(0xa5b4));
        // CB 11 00C4
        gbc.setState(0x512d, 0x58c, 0x6e90, 0x5229, 0x1a07, 0xd555, 0x1, 0x1);
        gbc.writeMem(0x512d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x58c, gbc.sp());
        EXPECT(0x512f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00C5
        gbc.setState(0x2ba4, 0x73da, 0x6480, 0x6cf6, 0x85d4, 0x67e8, 0x0, 0x0);
        gbc.writeMem(0x2ba4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x73da, gbc.sp());
        EXPECT(0x2ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00C6
        gbc.setState(0xb894, 0x1318, 0x4fa0, 0x61e2, 0x55ce, 0x2980, 0x0, 0x0);
        gbc.writeMem(0xb894, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1318, gbc.sp());
        EXPECT(0xb896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb894));
        EXPECT(0x11, gbc.readMem(0xb895));
        // CB 11 00C7
        gbc.setState(0x1137, 0x49cc, 0xec80, 0xab25, 0xa630, 0xbba8, 0x0, 0x0);
        gbc.writeMem(0x1137, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x49cc, gbc.sp());
        EXPECT(0x1139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00C8
        gbc.setState(0xcb52, 0xfb5a, 0xd810, 0x2800, 0x931a, 0x5e3, 0x0, 0x1);
        gbc.writeMem(0xcb52, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfb5a, gbc.sp());
        EXPECT(0xcb54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb52));
        EXPECT(0x11, gbc.readMem(0xcb53));
        // CB 11 00C9
        gbc.setState(0xed48, 0x76c8, 0x2fb0, 0x1428, 0x9ade, 0x5c1, 0x0, 0x1);
        gbc.writeMem(0xed48, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x76c8, gbc.sp());
        EXPECT(0xed4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed48));
        EXPECT(0x11, gbc.readMem(0xed49));
        // CB 11 00CA
        gbc.setState(0xd0e5, 0x48e, 0xb550, 0x3243, 0x9e66, 0xc823, 0x1, 0x0);
        gbc.writeMem(0xd0e5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x48e, gbc.sp());
        EXPECT(0xd0e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e5));
        EXPECT(0x11, gbc.readMem(0xd0e6));
        // CB 11 00CB
        gbc.setState(0x41e, 0x8b4c, 0x85f0, 0x8d1c, 0x2085, 0xa533, 0x0, 0x0);
        gbc.writeMem(0x41e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8b4c, gbc.sp());
        EXPECT(0x420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00CC
        gbc.setState(0x6b52, 0x2332, 0x47d0, 0x767, 0x83a0, 0xf31f, 0x0, 0x1);
        gbc.writeMem(0x6b52, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2332, gbc.sp());
        EXPECT(0x6b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00CD
        gbc.setState(0xb903, 0xa632, 0xdff0, 0x6427, 0x3aca, 0x1c78, 0x0, 0x0);
        gbc.writeMem(0xb903, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa632, gbc.sp());
        EXPECT(0xb905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb903));
        EXPECT(0x11, gbc.readMem(0xb904));
        // CB 11 00CE
        gbc.setState(0x5255, 0x73b9, 0x2890, 0xa0ed, 0x9f5e, 0x471e, 0x1, 0x1);
        gbc.writeMem(0x5255, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x73b9, gbc.sp());
        EXPECT(0x5257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00CF
        gbc.setState(0x8550, 0x4fbc, 0x9ab0, 0x5041, 0x705a, 0x8445, 0x0, 0x1);
        gbc.writeMem(0x8550, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4fbc, gbc.sp());
        EXPECT(0x8552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8550));
        EXPECT(0x11, gbc.readMem(0x8551));
        // CB 11 00D0
        gbc.setState(0x588f, 0x2af1, 0xf8f0, 0xc94, 0x8f41, 0xbb47, 0x1, 0x0);
        gbc.writeMem(0x588f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2af1, gbc.sp());
        EXPECT(0x5891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00D1
        gbc.setState(0x9885, 0xa09c, 0xaf20, 0x9dce, 0x13d3, 0xa92a, 0x0, 0x1);
        gbc.writeMem(0x9885, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa09c, gbc.sp());
        EXPECT(0x9887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9885));
        EXPECT(0x11, gbc.readMem(0x9886));
        // CB 11 00D3
        gbc.setState(0xc9f8, 0x2ec0, 0x6da0, 0x362c, 0x2988, 0x7c02, 0x0, 0x0);
        gbc.writeMem(0xc9f8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2ec0, gbc.sp());
        EXPECT(0xc9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f8));
        EXPECT(0x11, gbc.readMem(0xc9f9));
        // CB 11 00D4
        gbc.setState(0x9c96, 0xde89, 0x2750, 0x4467, 0x84d5, 0xdc4f, 0x0, 0x0);
        gbc.writeMem(0x9c96, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xde89, gbc.sp());
        EXPECT(0x9c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c96));
        EXPECT(0x11, gbc.readMem(0x9c97));
        // CB 11 00D5
        gbc.setState(0xe766, 0x8c62, 0xb230, 0x9b32, 0x2da4, 0x37b8, 0x1, 0x1);
        gbc.writeMem(0xe766, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8c62, gbc.sp());
        EXPECT(0xe768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe766));
        EXPECT(0x11, gbc.readMem(0xe767));
        // CB 11 00D6
        gbc.setState(0xac69, 0x5183, 0x2100, 0x96af, 0xd611, 0xc31a, 0x0, 0x1);
        gbc.writeMem(0xac69, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5183, gbc.sp());
        EXPECT(0xac6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac69));
        EXPECT(0x11, gbc.readMem(0xac6a));
        // CB 11 00D7
        gbc.setState(0xca60, 0x3c71, 0x67e0, 0x7565, 0xeeef, 0xcfb2, 0x1, 0x1);
        gbc.writeMem(0xca60, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3c71, gbc.sp());
        EXPECT(0xca62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca60));
        EXPECT(0x11, gbc.readMem(0xca61));
        // CB 11 00D8
        gbc.setState(0xca9, 0x9286, 0xc6a0, 0xc0f3, 0x90b2, 0x76a0, 0x0, 0x0);
        gbc.writeMem(0xca9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9286, gbc.sp());
        EXPECT(0xcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00D9
        gbc.setState(0x40e2, 0xca85, 0x3110, 0x6459, 0xabb2, 0x7933, 0x0, 0x0);
        gbc.writeMem(0x40e2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xca85, gbc.sp());
        EXPECT(0x40e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00DA
        gbc.setState(0x9a4a, 0xcb46, 0x8960, 0xc772, 0xaeb, 0xc6d7, 0x1, 0x1);
        gbc.writeMem(0x9a4a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcb46, gbc.sp());
        EXPECT(0x9a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a4a));
        EXPECT(0x11, gbc.readMem(0x9a4b));
        // CB 11 00DB
        gbc.setState(0x67d5, 0x323e, 0xefe0, 0x5b33, 0x4c1c, 0xd21a, 0x1, 0x0);
        gbc.writeMem(0x67d5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x323e, gbc.sp());
        EXPECT(0x67d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00DC
        gbc.setState(0xcd4, 0x6798, 0x7bd0, 0xdf66, 0x59dd, 0xd00e, 0x1, 0x1);
        gbc.writeMem(0xcd4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6798, gbc.sp());
        EXPECT(0xcd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00DD
        gbc.setState(0x1151, 0xe38, 0x9ee0, 0x47fe, 0x7e20, 0x5731, 0x0, 0x1);
        gbc.writeMem(0x1151, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe38, gbc.sp());
        EXPECT(0x1153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00DE
        gbc.setState(0x4ea, 0x560b, 0xd860, 0x1c83, 0xbaee, 0x83d5, 0x0, 0x0);
        gbc.writeMem(0x4ea, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x560b, gbc.sp());
        EXPECT(0x4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00DF
        gbc.setState(0x7281, 0x22f0, 0xacd0, 0xf675, 0xb85c, 0x7f0, 0x0, 0x0);
        gbc.writeMem(0x7281, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x22f0, gbc.sp());
        EXPECT(0x7283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00E0
        gbc.setState(0x96db, 0x8e86, 0xede0, 0x5673, 0x3b6a, 0x6b3d, 0x1, 0x0);
        gbc.writeMem(0x96db, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8e86, gbc.sp());
        EXPECT(0x96dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96db));
        EXPECT(0x11, gbc.readMem(0x96dc));
        // CB 11 00E1
        gbc.setState(0xeb0c, 0x9e15, 0xe610, 0xbc40, 0x7cc1, 0xa9e9, 0x1, 0x0);
        gbc.writeMem(0xeb0c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9e15, gbc.sp());
        EXPECT(0xeb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0c));
        EXPECT(0x11, gbc.readMem(0xeb0d));
        // CB 11 00E2
        gbc.setState(0x7f3, 0x7b15, 0xf720, 0xe4f9, 0x9bca, 0x4b22, 0x1, 0x0);
        gbc.writeMem(0x7f3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7b15, gbc.sp());
        EXPECT(0x7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00E3
        gbc.setState(0x6cfc, 0x8bc, 0xf6d0, 0x78ff, 0x22cf, 0xc4c3, 0x1, 0x0);
        gbc.writeMem(0x6cfc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8bc, gbc.sp());
        EXPECT(0x6cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00E4
        gbc.setState(0x69b1, 0x7e7, 0x6250, 0xa03c, 0x260d, 0x344f, 0x1, 0x1);
        gbc.writeMem(0x69b1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7e7, gbc.sp());
        EXPECT(0x69b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00E5
        gbc.setState(0x8599, 0x8603, 0x2590, 0x37f5, 0xf28, 0x8db7, 0x1, 0x0);
        gbc.writeMem(0x8599, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8603, gbc.sp());
        EXPECT(0x859b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8599));
        EXPECT(0x11, gbc.readMem(0x859a));
        // CB 11 00E6
        gbc.setState(0x3484, 0x7c84, 0x6bd0, 0x738b, 0x8c09, 0x43a5, 0x0, 0x0);
        gbc.writeMem(0x3484, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7c84, gbc.sp());
        EXPECT(0x3486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00E7
        gbc.setState(0x5bc4, 0xda4e, 0xc660, 0x8fd6, 0x145d, 0x82d5, 0x0, 0x1);
        gbc.writeMem(0x5bc4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xda4e, gbc.sp());
        EXPECT(0x5bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00E8
        gbc.setState(0x95aa, 0x24d5, 0x7ce0, 0x93a5, 0x3699, 0x6df7, 0x1, 0x0);
        gbc.writeMem(0x95aa, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x24d5, gbc.sp());
        EXPECT(0x95ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95aa));
        EXPECT(0x11, gbc.readMem(0x95ab));
        // CB 11 00E9
        gbc.setState(0x4eac, 0x61d5, 0x6320, 0xe0d7, 0x183e, 0xc168, 0x1, 0x0);
        gbc.writeMem(0x4eac, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x61d5, gbc.sp());
        EXPECT(0x4eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00EA
        gbc.setState(0x6b33, 0x81d1, 0xc650, 0x5386, 0x188c, 0x894e, 0x1, 0x0);
        gbc.writeMem(0x6b33, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x81d1, gbc.sp());
        EXPECT(0x6b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00EB
        gbc.setState(0x47c2, 0x667c, 0x26a0, 0xd0a0, 0x7abf, 0x181e, 0x1, 0x0);
        gbc.writeMem(0x47c2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x667c, gbc.sp());
        EXPECT(0x47c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00EC
        gbc.setState(0xd534, 0x2a0c, 0xbc60, 0x1081, 0x1c22, 0xe23f, 0x0, 0x1);
        gbc.writeMem(0xd534, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2a0c, gbc.sp());
        EXPECT(0xd536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd534));
        EXPECT(0x11, gbc.readMem(0xd535));
        // CB 11 00ED
        gbc.setState(0x2687, 0x89c9, 0x75f0, 0x8de4, 0xc124, 0x77f2, 0x0, 0x0);
        gbc.writeMem(0x2687, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x89c9, gbc.sp());
        EXPECT(0x2689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00EE
        gbc.setState(0x2d9, 0x75f3, 0x2270, 0x1cdc, 0x4ff9, 0x44a5, 0x1, 0x1);
        gbc.writeMem(0x2d9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x75f3, gbc.sp());
        EXPECT(0x2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00EF
        gbc.setState(0xe70d, 0x5d96, 0xc850, 0x1144, 0xb42e, 0xb007, 0x1, 0x0);
        gbc.writeMem(0xe70d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5d96, gbc.sp());
        EXPECT(0xe70f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70d));
        EXPECT(0x11, gbc.readMem(0xe70e));
        // CB 11 00F0
        gbc.setState(0x9c8f, 0xad7a, 0xf2d0, 0x6d0e, 0xa57e, 0x481b, 0x0, 0x1);
        gbc.writeMem(0x9c8f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xad7a, gbc.sp());
        EXPECT(0x9c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c8f));
        EXPECT(0x11, gbc.readMem(0x9c90));
        // CB 11 00F2
        gbc.setState(0x94c0, 0xce55, 0x6ce0, 0xcce0, 0x47b4, 0x71c9, 0x1, 0x1);
        gbc.writeMem(0x94c0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xce55, gbc.sp());
        EXPECT(0x94c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c0));
        EXPECT(0x11, gbc.readMem(0x94c1));
        // CB 11 00F3
        gbc.setState(0x4dd6, 0xfaca, 0xf2c0, 0xc595, 0xb50f, 0x2f4f, 0x0, 0x0);
        gbc.writeMem(0x4dd6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfaca, gbc.sp());
        EXPECT(0x4dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00F4
        gbc.setState(0x72b0, 0xa853, 0x3c10, 0x2708, 0x3d09, 0xcac3, 0x0, 0x0);
        gbc.writeMem(0x72b0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa853, gbc.sp());
        EXPECT(0x72b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00F5
        gbc.setState(0xb450, 0xbfa4, 0x670, 0xacb9, 0x1f3d, 0xf2f7, 0x1, 0x1);
        gbc.writeMem(0xb450, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbfa4, gbc.sp());
        EXPECT(0xb452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb450));
        EXPECT(0x11, gbc.readMem(0xb451));
        // CB 11 00F6
        gbc.setState(0x78f3, 0x9608, 0xeb20, 0xcc82, 0x7efc, 0xd319, 0x1, 0x0);
        gbc.writeMem(0x78f3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9608, gbc.sp());
        EXPECT(0x78f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 00F7
        gbc.setState(0x5fa6, 0xa93b, 0x25f0, 0xc03b, 0x7bfc, 0xa470, 0x1, 0x0);
        gbc.writeMem(0x5fa6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa93b, gbc.sp());
        EXPECT(0x5fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00F8
        gbc.setState(0x505a, 0x558a, 0xe050, 0x8f00, 0xc24a, 0xe312, 0x1, 0x0);
        gbc.writeMem(0x505a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x558a, gbc.sp());
        EXPECT(0x505c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 00F9
        gbc.setState(0x8b86, 0x4efe, 0x9780, 0xf8a1, 0x833a, 0xe651, 0x1, 0x0);
        gbc.writeMem(0x8b86, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4efe, gbc.sp());
        EXPECT(0x8b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b86));
        EXPECT(0x11, gbc.readMem(0x8b87));
        // CB 11 00FA
        gbc.setState(0x97f5, 0x8502, 0xa270, 0x8c50, 0x6b17, 0xd729, 0x0, 0x1);
        gbc.writeMem(0x97f5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8502, gbc.sp());
        EXPECT(0x97f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f5));
        EXPECT(0x11, gbc.readMem(0x97f6));
        // CB 11 00FB
        gbc.setState(0x9bea, 0xbdd1, 0x5c40, 0xd1ca, 0x9ec, 0xc083, 0x1, 0x1);
        gbc.writeMem(0x9bea, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbdd1, gbc.sp());
        EXPECT(0x9bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bea));
        EXPECT(0x11, gbc.readMem(0x9beb));
        // CB 11 00FC
        gbc.setState(0x815b, 0x8289, 0x2660, 0xb49a, 0x8f9e, 0x49da, 0x0, 0x0);
        gbc.writeMem(0x815b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8289, gbc.sp());
        EXPECT(0x815d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815b));
        EXPECT(0x11, gbc.readMem(0x815c));
        // CB 11 00FE
        gbc.setState(0xae16, 0x2c84, 0xe830, 0xb573, 0x1007, 0xa6a5, 0x1, 0x0);
        gbc.writeMem(0xae16, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2c84, gbc.sp());
        EXPECT(0xae18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae16));
        EXPECT(0x11, gbc.readMem(0xae17));
        // CB 11 00FF
        gbc.setState(0xc011, 0x2034, 0x2fe0, 0x82a6, 0x1e70, 0x8e8, 0x0, 0x0);
        gbc.writeMem(0xc011, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2034, gbc.sp());
        EXPECT(0xc013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc011));
        EXPECT(0x11, gbc.readMem(0xc012));
        // CB 11 0100
        gbc.setState(0xd33e, 0x8d06, 0xf8b0, 0x80dc, 0xdb7b, 0xb04d, 0x0, 0x1);
        gbc.writeMem(0xd33e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8d06, gbc.sp());
        EXPECT(0xd340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33e));
        EXPECT(0x11, gbc.readMem(0xd33f));
        // CB 11 0101
        gbc.setState(0x533c, 0x3d84, 0xb270, 0xf845, 0x60f1, 0xc6a1, 0x1, 0x0);
        gbc.writeMem(0x533c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3d84, gbc.sp());
        EXPECT(0x533e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0102
        gbc.setState(0xec72, 0xb15e, 0xf7d0, 0x98d8, 0xb978, 0x3769, 0x0, 0x1);
        gbc.writeMem(0xec72, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb15e, gbc.sp());
        EXPECT(0xec74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec72));
        EXPECT(0x11, gbc.readMem(0xec73));
        // CB 11 0103
        gbc.setState(0x7fe2, 0xcba8, 0xe630, 0xa5dc, 0x8c17, 0x5f51, 0x0, 0x0);
        gbc.writeMem(0x7fe2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcba8, gbc.sp());
        EXPECT(0x7fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0104
        gbc.setState(0x3f0e, 0x8aeb, 0x3210, 0x359c, 0x51ae, 0x5059, 0x1, 0x1);
        gbc.writeMem(0x3f0e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8aeb, gbc.sp());
        EXPECT(0x3f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0105
        gbc.setState(0x1cc3, 0x17f5, 0xd3f0, 0xe6a5, 0xc70a, 0x55e8, 0x0, 0x0);
        gbc.writeMem(0x1cc3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x17f5, gbc.sp());
        EXPECT(0x1cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0106
        gbc.setState(0x6d70, 0x5ed9, 0xbde0, 0xdb63, 0xa175, 0x56e, 0x1, 0x0);
        gbc.writeMem(0x6d70, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5ed9, gbc.sp());
        EXPECT(0x6d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0107
        gbc.setState(0xe31, 0x41dc, 0xa420, 0x952a, 0xb27, 0x93b3, 0x0, 0x1);
        gbc.writeMem(0xe31, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x41dc, gbc.sp());
        EXPECT(0xe33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0108
        gbc.setState(0x65a3, 0xb7ce, 0x6070, 0xeece, 0x2c0f, 0x6a4d, 0x1, 0x0);
        gbc.writeMem(0x65a3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb7ce, gbc.sp());
        EXPECT(0x65a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0109
        gbc.setState(0xb575, 0x1dbe, 0x2c40, 0xe2eb, 0x2817, 0xe94d, 0x0, 0x1);
        gbc.writeMem(0xb575, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1dbe, gbc.sp());
        EXPECT(0xb577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb575));
        EXPECT(0x11, gbc.readMem(0xb576));
        // CB 11 010A
        gbc.setState(0xc3b1, 0xe5a5, 0x2850, 0x91ad, 0x2407, 0xb14f, 0x1, 0x0);
        gbc.writeMem(0xc3b1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe5a5, gbc.sp());
        EXPECT(0xc3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b1));
        EXPECT(0x11, gbc.readMem(0xc3b2));
        // CB 11 010B
        gbc.setState(0xe27, 0xb12c, 0xa010, 0x1819, 0x27d5, 0xeceb, 0x0, 0x1);
        gbc.writeMem(0xe27, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb12c, gbc.sp());
        EXPECT(0xe29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 010C
        gbc.setState(0xb746, 0xb350, 0x7050, 0x9e83, 0xce4c, 0xac31, 0x0, 0x0);
        gbc.writeMem(0xb746, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb350, gbc.sp());
        EXPECT(0xb748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb746));
        EXPECT(0x11, gbc.readMem(0xb747));
        // CB 11 010D
        gbc.setState(0x6858, 0x92b2, 0x9d0, 0x53ae, 0x2384, 0x6ab8, 0x1, 0x0);
        gbc.writeMem(0x6858, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x92b2, gbc.sp());
        EXPECT(0x685a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 010E
        gbc.setState(0xd231, 0x65f0, 0x6d30, 0xdb67, 0x6e0d, 0xff3, 0x0, 0x1);
        gbc.writeMem(0xd231, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x65f0, gbc.sp());
        EXPECT(0xd233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd231));
        EXPECT(0x11, gbc.readMem(0xd232));
        // CB 11 010F
        gbc.setState(0x193c, 0xa1e9, 0xb330, 0x73d2, 0xf25c, 0xa412, 0x0, 0x1);
        gbc.writeMem(0x193c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa1e9, gbc.sp());
        EXPECT(0x193e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0110
        gbc.setState(0x9f8c, 0x97f2, 0x5ee0, 0x263b, 0x47b, 0x5093, 0x1, 0x1);
        gbc.writeMem(0x9f8c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x97f2, gbc.sp());
        EXPECT(0x9f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8c));
        EXPECT(0x11, gbc.readMem(0x9f8d));
        // CB 11 0111
        gbc.setState(0xc144, 0x1c0f, 0xdda0, 0x2b26, 0xee36, 0x753f, 0x1, 0x1);
        gbc.writeMem(0xc144, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1c0f, gbc.sp());
        EXPECT(0xc146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc144));
        EXPECT(0x11, gbc.readMem(0xc145));
        // CB 11 0112
        gbc.setState(0xaa31, 0x211f, 0x7830, 0x3982, 0xe44, 0x4c31, 0x0, 0x0);
        gbc.writeMem(0xaa31, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x211f, gbc.sp());
        EXPECT(0xaa33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa31));
        EXPECT(0x11, gbc.readMem(0xaa32));
        // CB 11 0113
        gbc.setState(0x7a3a, 0xfbb3, 0xef00, 0x3fa, 0x16fc, 0x50a3, 0x0, 0x1);
        gbc.writeMem(0x7a3a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfbb3, gbc.sp());
        EXPECT(0x7a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0114
        gbc.setState(0x7ddd, 0x4219, 0x4210, 0x3adf, 0x71f4, 0xd9d1, 0x1, 0x1);
        gbc.writeMem(0x7ddd, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4219, gbc.sp());
        EXPECT(0x7ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0115
        gbc.setState(0x64f9, 0xee6d, 0x5f70, 0x3d99, 0x1034, 0x7c59, 0x1, 0x1);
        gbc.writeMem(0x64f9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xee6d, gbc.sp());
        EXPECT(0x64fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0116
        gbc.setState(0xc871, 0x55e3, 0x9210, 0x3f61, 0x9f00, 0x9bd0, 0x0, 0x0);
        gbc.writeMem(0xc871, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x55e3, gbc.sp());
        EXPECT(0xc873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc871));
        EXPECT(0x11, gbc.readMem(0xc872));
        // CB 11 0117
        gbc.setState(0xb42d, 0xec34, 0x19c0, 0x846a, 0xf9f2, 0xf973, 0x0, 0x1);
        gbc.writeMem(0xb42d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xec34, gbc.sp());
        EXPECT(0xb42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42d));
        EXPECT(0x11, gbc.readMem(0xb42e));
        // CB 11 0118
        gbc.setState(0x1b54, 0x870b, 0x4020, 0x8a9, 0xddc1, 0x3a10, 0x1, 0x1);
        gbc.writeMem(0x1b54, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x870b, gbc.sp());
        EXPECT(0x1b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0119
        gbc.setState(0x245d, 0xd122, 0x32f0, 0xcbd5, 0x4a77, 0x505, 0x0, 0x0);
        gbc.writeMem(0x245d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd122, gbc.sp());
        EXPECT(0x245f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 011A
        gbc.setState(0xd0a4, 0x192c, 0x76e0, 0xa69, 0x84a9, 0xf169, 0x1, 0x0);
        gbc.writeMem(0xd0a4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x192c, gbc.sp());
        EXPECT(0xd0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a4));
        EXPECT(0x11, gbc.readMem(0xd0a5));
        // CB 11 011B
        gbc.setState(0xa836, 0xf25e, 0x4d30, 0xffd1, 0x9295, 0xdf7, 0x1, 0x0);
        gbc.writeMem(0xa836, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf25e, gbc.sp());
        EXPECT(0xa838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa836));
        EXPECT(0x11, gbc.readMem(0xa837));
        // CB 11 011C
        gbc.setState(0xe667, 0xdf62, 0xbb00, 0x515, 0x370a, 0xd467, 0x0, 0x1);
        gbc.writeMem(0xe667, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdf62, gbc.sp());
        EXPECT(0xe669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe667));
        EXPECT(0x11, gbc.readMem(0xe668));
        // CB 11 011D
        gbc.setState(0xa40, 0x30f3, 0xf730, 0x1d42, 0xdab4, 0x1d08, 0x1, 0x1);
        gbc.writeMem(0xa40, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x30f3, gbc.sp());
        EXPECT(0xa42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 011E
        gbc.setState(0x2dea, 0x39f0, 0xd930, 0xccf, 0x6c5c, 0x7666, 0x0, 0x0);
        gbc.writeMem(0x2dea, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x39f0, gbc.sp());
        EXPECT(0x2dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 011F
        gbc.setState(0xca62, 0x8126, 0x6ed0, 0xe4e4, 0xf028, 0x5099, 0x0, 0x1);
        gbc.writeMem(0xca62, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8126, gbc.sp());
        EXPECT(0xca64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca62));
        EXPECT(0x11, gbc.readMem(0xca63));
        // CB 11 0120
        gbc.setState(0x5b2a, 0x1543, 0xf1d0, 0xe33b, 0xb90a, 0x14d7, 0x0, 0x0);
        gbc.writeMem(0x5b2a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1543, gbc.sp());
        EXPECT(0x5b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0121
        gbc.setState(0xe55f, 0xbf67, 0xb3f0, 0x109d, 0xff72, 0xbefa, 0x1, 0x1);
        gbc.writeMem(0xe55f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbf67, gbc.sp());
        EXPECT(0xe561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55f));
        EXPECT(0x11, gbc.readMem(0xe560));
        // CB 11 0122
        gbc.setState(0x4f4d, 0x1db0, 0x9ce0, 0x89ba, 0x3cc7, 0xdc1e, 0x0, 0x1);
        gbc.writeMem(0x4f4d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1db0, gbc.sp());
        EXPECT(0x4f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0123
        gbc.setState(0x9a02, 0xa7d0, 0x7af0, 0x419a, 0x2f24, 0xc3d1, 0x1, 0x1);
        gbc.writeMem(0x9a02, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa7d0, gbc.sp());
        EXPECT(0x9a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a02));
        EXPECT(0x11, gbc.readMem(0x9a03));
        // CB 11 0124
        gbc.setState(0xc92, 0x256f, 0x2760, 0xe7f5, 0x2915, 0xc644, 0x0, 0x0);
        gbc.writeMem(0xc92, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x256f, gbc.sp());
        EXPECT(0xc94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0125
        gbc.setState(0x68e0, 0x2c0c, 0x4c60, 0x40b8, 0xeb3f, 0x7b99, 0x1, 0x0);
        gbc.writeMem(0x68e0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2c0c, gbc.sp());
        EXPECT(0x68e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0126
        gbc.setState(0x902, 0xe189, 0x3a0, 0x603, 0x676d, 0xe11e, 0x1, 0x1);
        gbc.writeMem(0x902, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe189, gbc.sp());
        EXPECT(0x904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0127
        gbc.setState(0x8c8c, 0x6236, 0xa800, 0xb5dd, 0x6a38, 0x78b7, 0x0, 0x1);
        gbc.writeMem(0x8c8c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6236, gbc.sp());
        EXPECT(0x8c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8c));
        EXPECT(0x11, gbc.readMem(0x8c8d));
        // CB 11 0128
        gbc.setState(0x150, 0xe80e, 0xe910, 0x6997, 0x99ec, 0x7f33, 0x0, 0x1);
        gbc.writeMem(0x150, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe80e, gbc.sp());
        EXPECT(0x152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0129
        gbc.setState(0xe260, 0x859b, 0xc030, 0x2af, 0xb563, 0x87c, 0x0, 0x1);
        gbc.writeMem(0xe260, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x859b, gbc.sp());
        EXPECT(0xe262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe260));
        EXPECT(0x11, gbc.readMem(0xe261));
        // CB 11 012A
        gbc.setState(0xc006, 0x441, 0xa920, 0xe1ed, 0x2bc9, 0x1829, 0x0, 0x1);
        gbc.writeMem(0xc006, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x441, gbc.sp());
        EXPECT(0xc008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc006));
        EXPECT(0x11, gbc.readMem(0xc007));
        // CB 11 012B
        gbc.setState(0x434c, 0x2425, 0xf8c0, 0xd88b, 0x108b, 0x49fa, 0x1, 0x1);
        gbc.writeMem(0x434c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2425, gbc.sp());
        EXPECT(0x434e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 012C
        gbc.setState(0x73e8, 0x9cdf, 0x6a90, 0xad3f, 0x9f06, 0x5624, 0x0, 0x0);
        gbc.writeMem(0x73e8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9cdf, gbc.sp());
        EXPECT(0x73ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 012D
        gbc.setState(0xcff0, 0xd3d, 0x2550, 0x1153, 0x8f40, 0xfa49, 0x0, 0x0);
        gbc.writeMem(0xcff0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd3d, gbc.sp());
        EXPECT(0xcff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff0));
        EXPECT(0x11, gbc.readMem(0xcff1));
        // CB 11 012E
        gbc.setState(0xa14e, 0xf6c1, 0x4c90, 0xf401, 0x6260, 0xf784, 0x1, 0x1);
        gbc.writeMem(0xa14e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf6c1, gbc.sp());
        EXPECT(0xa150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14e));
        EXPECT(0x11, gbc.readMem(0xa14f));
        // CB 11 012F
        gbc.setState(0x70d8, 0x7689, 0xb710, 0xc57f, 0xebe0, 0x5f01, 0x1, 0x1);
        gbc.writeMem(0x70d8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7689, gbc.sp());
        EXPECT(0x70da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0130
        gbc.setState(0xb4b0, 0xbc55, 0xb10, 0xe61a, 0x73fe, 0x363a, 0x1, 0x0);
        gbc.writeMem(0xb4b0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbc55, gbc.sp());
        EXPECT(0xb4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b0));
        EXPECT(0x11, gbc.readMem(0xb4b1));
        // CB 11 0131
        gbc.setState(0x31c8, 0x28cd, 0x73f0, 0xee4, 0xc62c, 0xa645, 0x1, 0x0);
        gbc.writeMem(0x31c8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x28cd, gbc.sp());
        EXPECT(0x31ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0132
        gbc.setState(0x7940, 0x3074, 0x5750, 0x2c1c, 0x8051, 0x8a68, 0x1, 0x0);
        gbc.writeMem(0x7940, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3074, gbc.sp());
        EXPECT(0x7942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0133
        gbc.setState(0x755, 0x2da0, 0x6620, 0x909c, 0x5b2b, 0x93d, 0x0, 0x1);
        gbc.writeMem(0x755, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2da0, gbc.sp());
        EXPECT(0x757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0134
        gbc.setState(0x919d, 0x986d, 0x7010, 0x2151, 0x3e31, 0x123e, 0x1, 0x0);
        gbc.writeMem(0x919d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x986d, gbc.sp());
        EXPECT(0x919f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x919d));
        EXPECT(0x11, gbc.readMem(0x919e));
        // CB 11 0135
        gbc.setState(0x9ccc, 0x1598, 0xdd0, 0x2694, 0xa156, 0x25bf, 0x1, 0x1);
        gbc.writeMem(0x9ccc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1598, gbc.sp());
        EXPECT(0x9cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccc));
        EXPECT(0x11, gbc.readMem(0x9ccd));
        // CB 11 0136
        gbc.setState(0x938d, 0x601c, 0x7de0, 0xf927, 0xa8a0, 0xc126, 0x0, 0x1);
        gbc.writeMem(0x938d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x601c, gbc.sp());
        EXPECT(0x938f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938d));
        EXPECT(0x11, gbc.readMem(0x938e));
        // CB 11 0137
        gbc.setState(0xa1a0, 0xbad5, 0xbf90, 0x857b, 0xe8c3, 0xbe65, 0x1, 0x0);
        gbc.writeMem(0xa1a0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbad5, gbc.sp());
        EXPECT(0xa1a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a0));
        EXPECT(0x11, gbc.readMem(0xa1a1));
        // CB 11 0138
        gbc.setState(0x3658, 0xed3f, 0x23c0, 0x303b, 0xb409, 0x90ed, 0x0, 0x0);
        gbc.writeMem(0x3658, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xed3f, gbc.sp());
        EXPECT(0x365a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0139
        gbc.setState(0xcd19, 0xcf7b, 0xfb00, 0x1082, 0xa533, 0x785a, 0x1, 0x0);
        gbc.writeMem(0xcd19, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcf7b, gbc.sp());
        EXPECT(0xcd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd19));
        EXPECT(0x11, gbc.readMem(0xcd1a));
        // CB 11 013A
        gbc.setState(0x7e6d, 0xa6ba, 0x3150, 0xde62, 0xa42, 0xfbf8, 0x0, 0x0);
        gbc.writeMem(0x7e6d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa6ba, gbc.sp());
        EXPECT(0x7e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 013B
        gbc.setState(0xb5d9, 0x5722, 0x44d0, 0xe85e, 0xca8, 0xecfa, 0x0, 0x0);
        gbc.writeMem(0xb5d9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5722, gbc.sp());
        EXPECT(0xb5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d9));
        EXPECT(0x11, gbc.readMem(0xb5da));
        // CB 11 013C
        gbc.setState(0xa098, 0xd751, 0x8760, 0xccc, 0xba8c, 0xfd4b, 0x0, 0x1);
        gbc.writeMem(0xa098, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd751, gbc.sp());
        EXPECT(0xa09a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa098));
        EXPECT(0x11, gbc.readMem(0xa099));
        // CB 11 013D
        gbc.setState(0xa8f6, 0x1f42, 0x8770, 0x8d17, 0xf0ca, 0xd0de, 0x1, 0x1);
        gbc.writeMem(0xa8f6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1f42, gbc.sp());
        EXPECT(0xa8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f6));
        EXPECT(0x11, gbc.readMem(0xa8f7));
        // CB 11 013E
        gbc.setState(0x871, 0xb36f, 0x9f0, 0x7020, 0xc7da, 0xcdbe, 0x1, 0x0);
        gbc.writeMem(0x871, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb36f, gbc.sp());
        EXPECT(0x873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 013F
        gbc.setState(0x50ed, 0x2eed, 0x37d0, 0x87fd, 0x6474, 0x699a, 0x0, 0x1);
        gbc.writeMem(0x50ed, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2eed, gbc.sp());
        EXPECT(0x50ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0140
        gbc.setState(0x5956, 0xbb72, 0xf090, 0xc6f7, 0xb1d1, 0x2fc6, 0x1, 0x0);
        gbc.writeMem(0x5956, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbb72, gbc.sp());
        EXPECT(0x5958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0141
        gbc.setState(0x2d49, 0x2efa, 0x3000, 0x3a87, 0xa6eb, 0x2abc, 0x0, 0x1);
        gbc.writeMem(0x2d49, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2efa, gbc.sp());
        EXPECT(0x2d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0142
        gbc.setState(0x4f06, 0x5c5e, 0xc750, 0x5543, 0x1451, 0x4cc9, 0x0, 0x1);
        gbc.writeMem(0x4f06, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5c5e, gbc.sp());
        EXPECT(0x4f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0143
        gbc.setState(0xa0ea, 0x2103, 0x6990, 0xf6db, 0xd09e, 0x6847, 0x0, 0x1);
        gbc.writeMem(0xa0ea, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2103, gbc.sp());
        EXPECT(0xa0ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ea));
        EXPECT(0x11, gbc.readMem(0xa0eb));
        // CB 11 0144
        gbc.setState(0x52ef, 0x7d48, 0xeb70, 0xef47, 0x28ea, 0x2925, 0x0, 0x0);
        gbc.writeMem(0x52ef, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7d48, gbc.sp());
        EXPECT(0x52f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0145
        gbc.setState(0x7a5e, 0x6a29, 0xe690, 0xd9ac, 0x7004, 0x7870, 0x0, 0x1);
        gbc.writeMem(0x7a5e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6a29, gbc.sp());
        EXPECT(0x7a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0146
        gbc.setState(0x90e9, 0xdb9a, 0x7020, 0x5262, 0x8fb9, 0x681f, 0x1, 0x0);
        gbc.writeMem(0x90e9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdb9a, gbc.sp());
        EXPECT(0x90eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e9));
        EXPECT(0x11, gbc.readMem(0x90ea));
        // CB 11 0148
        gbc.setState(0x54f6, 0x52eb, 0xccf0, 0x8073, 0x83cc, 0xcb21, 0x1, 0x0);
        gbc.writeMem(0x54f6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x52eb, gbc.sp());
        EXPECT(0x54f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0149
        gbc.setState(0xab1a, 0xd888, 0x61a0, 0xde97, 0x1000, 0xbbe4, 0x0, 0x0);
        gbc.writeMem(0xab1a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd888, gbc.sp());
        EXPECT(0xab1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab1a));
        EXPECT(0x11, gbc.readMem(0xab1b));
        // CB 11 014A
        gbc.setState(0xeefd, 0x92ba, 0xca10, 0x1b3a, 0x592d, 0xa85e, 0x1, 0x0);
        gbc.writeMem(0xeefd, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x92ba, gbc.sp());
        EXPECT(0xeeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefd));
        EXPECT(0x11, gbc.readMem(0xeefe));
        // CB 11 014B
        gbc.setState(0xef1f, 0xa7ba, 0x8d70, 0xe072, 0x5196, 0xef10, 0x1, 0x0);
        gbc.writeMem(0xef1f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa7ba, gbc.sp());
        EXPECT(0xef21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1f));
        EXPECT(0x11, gbc.readMem(0xef20));
        // CB 11 014C
        gbc.setState(0x9ee6, 0xe6eb, 0xda60, 0xf9e3, 0xef3d, 0xce9c, 0x1, 0x0);
        gbc.writeMem(0x9ee6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe6eb, gbc.sp());
        EXPECT(0x9ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee6));
        EXPECT(0x11, gbc.readMem(0x9ee7));
        // CB 11 014D
        gbc.setState(0x7012, 0x642d, 0xfa80, 0x21e, 0xe64, 0x48b3, 0x0, 0x1);
        gbc.writeMem(0x7012, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x642d, gbc.sp());
        EXPECT(0x7014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 014E
        gbc.setState(0xcf3b, 0xa5f4, 0x4630, 0x774a, 0xa641, 0x4ade, 0x1, 0x1);
        gbc.writeMem(0xcf3b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa5f4, gbc.sp());
        EXPECT(0xcf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf3b));
        EXPECT(0x11, gbc.readMem(0xcf3c));
        // CB 11 014F
        gbc.setState(0xe60d, 0xc1f5, 0x7ed0, 0xd6ad, 0xe94, 0xc2c9, 0x1, 0x1);
        gbc.writeMem(0xe60d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc1f5, gbc.sp());
        EXPECT(0xe60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe60d));
        EXPECT(0x11, gbc.readMem(0xe60e));
        // CB 11 0150
        gbc.setState(0xe287, 0x74b, 0xc2f0, 0x91da, 0x57cb, 0xfb6f, 0x0, 0x1);
        gbc.writeMem(0xe287, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x74b, gbc.sp());
        EXPECT(0xe289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe287));
        EXPECT(0x11, gbc.readMem(0xe288));
        // CB 11 0151
        gbc.setState(0xcc61, 0x6d00, 0xfb10, 0xce0, 0x12fa, 0xd057, 0x0, 0x0);
        gbc.writeMem(0xcc61, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6d00, gbc.sp());
        EXPECT(0xcc63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc61));
        EXPECT(0x11, gbc.readMem(0xcc62));
        // CB 11 0152
        gbc.setState(0x76d5, 0xf418, 0xc360, 0x785e, 0x6901, 0x1119, 0x0, 0x0);
        gbc.writeMem(0x76d5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf418, gbc.sp());
        EXPECT(0x76d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0153
        gbc.setState(0xa093, 0x975d, 0xc230, 0xd8d6, 0xb37c, 0xfdd7, 0x1, 0x1);
        gbc.writeMem(0xa093, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x975d, gbc.sp());
        EXPECT(0xa095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa093));
        EXPECT(0x11, gbc.readMem(0xa094));
        // CB 11 0154
        gbc.setState(0xa69a, 0xb160, 0xbf20, 0xa331, 0x2516, 0x619d, 0x1, 0x1);
        gbc.writeMem(0xa69a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb160, gbc.sp());
        EXPECT(0xa69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa69a));
        EXPECT(0x11, gbc.readMem(0xa69b));
        // CB 11 0155
        gbc.setState(0xe8ef, 0x4160, 0x2d60, 0x22e3, 0x6fdd, 0x14d7, 0x0, 0x1);
        gbc.writeMem(0xe8ef, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4160, gbc.sp());
        EXPECT(0xe8f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ef));
        EXPECT(0x11, gbc.readMem(0xe8f0));
        // CB 11 0156
        gbc.setState(0xe1cb, 0x7a09, 0x46c0, 0xdc20, 0x3be9, 0xe241, 0x0, 0x0);
        gbc.writeMem(0xe1cb, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7a09, gbc.sp());
        EXPECT(0xe1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cb));
        EXPECT(0x11, gbc.readMem(0xe1cc));
        // CB 11 0157
        gbc.setState(0x54c2, 0x1747, 0xd980, 0x17c2, 0x6655, 0x15f6, 0x0, 0x0);
        gbc.writeMem(0x54c2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1747, gbc.sp());
        EXPECT(0x54c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0158
        gbc.setState(0x3439, 0x73dd, 0x8710, 0x9654, 0x7e1, 0xc8, 0x0, 0x1);
        gbc.writeMem(0x3439, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x73dd, gbc.sp());
        EXPECT(0x343b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0159
        gbc.setState(0x4c7e, 0xa55d, 0xf70, 0xeb0c, 0x4d, 0x371e, 0x1, 0x1);
        gbc.writeMem(0x4c7e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa55d, gbc.sp());
        EXPECT(0x4c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 015A
        gbc.setState(0xc52d, 0xca99, 0x5800, 0x6305, 0x2bb2, 0xc012, 0x1, 0x1);
        gbc.writeMem(0xc52d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xca99, gbc.sp());
        EXPECT(0xc52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52d));
        EXPECT(0x11, gbc.readMem(0xc52e));
        // CB 11 015B
        gbc.setState(0xb6e, 0x787c, 0x990, 0x32c5, 0x9e26, 0xfe84, 0x0, 0x1);
        gbc.writeMem(0xb6e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x787c, gbc.sp());
        EXPECT(0xb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 015C
        gbc.setState(0x8f96, 0xf35, 0x1150, 0x2070, 0x8a07, 0xc957, 0x0, 0x1);
        gbc.writeMem(0x8f96, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf35, gbc.sp());
        EXPECT(0x8f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f96));
        EXPECT(0x11, gbc.readMem(0x8f97));
        // CB 11 015D
        gbc.setState(0xeda1, 0x7a54, 0x4cb0, 0xcccc, 0x233, 0x7aa, 0x1, 0x0);
        gbc.writeMem(0xeda1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7a54, gbc.sp());
        EXPECT(0xeda3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda1));
        EXPECT(0x11, gbc.readMem(0xeda2));
        // CB 11 015E
        gbc.setState(0x7bbb, 0x39c, 0x5400, 0xb751, 0x6beb, 0xa7a, 0x1, 0x0);
        gbc.writeMem(0x7bbb, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x39c, gbc.sp());
        EXPECT(0x7bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 015F
        gbc.setState(0x7829, 0x577c, 0x1d50, 0x5d30, 0x51d8, 0x48a2, 0x1, 0x0);
        gbc.writeMem(0x7829, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x577c, gbc.sp());
        EXPECT(0x782b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0160
        gbc.setState(0xb260, 0x316f, 0xd120, 0x3127, 0xa383, 0xb1c, 0x0, 0x0);
        gbc.writeMem(0xb260, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x316f, gbc.sp());
        EXPECT(0xb262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb260));
        EXPECT(0x11, gbc.readMem(0xb261));
        // CB 11 0161
        gbc.setState(0x1645, 0x9b05, 0x9ac0, 0x1adb, 0x4fca, 0xc8cd, 0x1, 0x0);
        gbc.writeMem(0x1645, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9b05, gbc.sp());
        EXPECT(0x1647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0162
        gbc.setState(0xd644, 0xecd5, 0x3ab0, 0x5917, 0xcd21, 0xfb82, 0x1, 0x0);
        gbc.writeMem(0xd644, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xecd5, gbc.sp());
        EXPECT(0xd646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd644));
        EXPECT(0x11, gbc.readMem(0xd645));
        // CB 11 0163
        gbc.setState(0x95b2, 0x77ed, 0x87c0, 0xc1ca, 0x6d22, 0x862b, 0x1, 0x0);
        gbc.writeMem(0x95b2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x77ed, gbc.sp());
        EXPECT(0x95b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b2));
        EXPECT(0x11, gbc.readMem(0x95b3));
        // CB 11 0164
        gbc.setState(0x6fbf, 0x97b3, 0xe1e0, 0x5751, 0x1522, 0xea5d, 0x1, 0x1);
        gbc.writeMem(0x6fbf, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x97b3, gbc.sp());
        EXPECT(0x6fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0165
        gbc.setState(0x5db8, 0x2d8, 0xd770, 0x28e6, 0x100a, 0xd8e7, 0x1, 0x1);
        gbc.writeMem(0x5db8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2d8, gbc.sp());
        EXPECT(0x5dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0166
        gbc.setState(0x7d93, 0x33ba, 0xa640, 0xba81, 0xd42e, 0x58dc, 0x1, 0x0);
        gbc.writeMem(0x7d93, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x33ba, gbc.sp());
        EXPECT(0x7d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0167
        gbc.setState(0x1380, 0xddaa, 0x5530, 0x5e0f, 0x63e4, 0xc97, 0x1, 0x0);
        gbc.writeMem(0x1380, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xddaa, gbc.sp());
        EXPECT(0x1382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0168
        gbc.setState(0xbd6f, 0xd015, 0x6380, 0x301, 0x4cc7, 0x36d4, 0x1, 0x1);
        gbc.writeMem(0xbd6f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd015, gbc.sp());
        EXPECT(0xbd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6f));
        EXPECT(0x11, gbc.readMem(0xbd70));
        // CB 11 0169
        gbc.setState(0xab0c, 0xdc8a, 0x7070, 0xd9b0, 0x6bec, 0xd2ba, 0x0, 0x0);
        gbc.writeMem(0xab0c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdc8a, gbc.sp());
        EXPECT(0xab0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0c));
        EXPECT(0x11, gbc.readMem(0xab0d));
        // CB 11 016A
        gbc.setState(0xd806, 0x316, 0x1740, 0x86ce, 0xd9eb, 0x44c, 0x0, 0x1);
        gbc.writeMem(0xd806, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x316, gbc.sp());
        EXPECT(0xd808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd806));
        EXPECT(0x11, gbc.readMem(0xd807));
        // CB 11 016B
        gbc.setState(0x4b9d, 0xbcd0, 0x1c10, 0x2531, 0x9be2, 0xcc64, 0x1, 0x0);
        gbc.writeMem(0x4b9d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbcd0, gbc.sp());
        EXPECT(0x4b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 016C
        gbc.setState(0xbaf0, 0xdecd, 0xf1e0, 0xac2, 0x1b56, 0x877c, 0x0, 0x1);
        gbc.writeMem(0xbaf0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdecd, gbc.sp());
        EXPECT(0xbaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf0));
        EXPECT(0x11, gbc.readMem(0xbaf1));
        // CB 11 016D
        gbc.setState(0x95bb, 0x2b32, 0xb440, 0x63ba, 0x2c34, 0x5934, 0x1, 0x0);
        gbc.writeMem(0x95bb, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2b32, gbc.sp());
        EXPECT(0x95bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95bb));
        EXPECT(0x11, gbc.readMem(0x95bc));
        // CB 11 016E
        gbc.setState(0xdb9d, 0x6db2, 0xee70, 0x6fad, 0xfc31, 0x504, 0x1, 0x1);
        gbc.writeMem(0xdb9d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6db2, gbc.sp());
        EXPECT(0xdb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9d));
        EXPECT(0x11, gbc.readMem(0xdb9e));
        // CB 11 016F
        gbc.setState(0x34cf, 0x6d5f, 0x7d10, 0x5dc, 0x13fa, 0x6d82, 0x1, 0x0);
        gbc.writeMem(0x34cf, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6d5f, gbc.sp());
        EXPECT(0x34d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0170
        gbc.setState(0xb68e, 0x90b, 0x41d0, 0x584d, 0x83ae, 0x1b7d, 0x0, 0x0);
        gbc.writeMem(0xb68e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x90b, gbc.sp());
        EXPECT(0xb690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb68e));
        EXPECT(0x11, gbc.readMem(0xb68f));
        // CB 11 0172
        gbc.setState(0xaa84, 0xcc8, 0x370, 0xb47c, 0xd2ab, 0x1072, 0x1, 0x1);
        gbc.writeMem(0xaa84, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcc8, gbc.sp());
        EXPECT(0xaa86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa84));
        EXPECT(0x11, gbc.readMem(0xaa85));
        // CB 11 0173
        gbc.setState(0xb8e, 0x780f, 0x4ba0, 0xb93d, 0xb073, 0x2a7e, 0x0, 0x1);
        gbc.writeMem(0xb8e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x780f, gbc.sp());
        EXPECT(0xb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0174
        gbc.setState(0x398b, 0x4054, 0xe260, 0xf81f, 0x4601, 0xe6b3, 0x0, 0x0);
        gbc.writeMem(0x398b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4054, gbc.sp());
        EXPECT(0x398d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0176
        gbc.setState(0x844a, 0x8364, 0x37d0, 0x3160, 0x9409, 0x8452, 0x0, 0x0);
        gbc.writeMem(0x844a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8364, gbc.sp());
        EXPECT(0x844c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x844a));
        EXPECT(0x11, gbc.readMem(0x844b));
        // CB 11 0177
        gbc.setState(0x4080, 0x1a27, 0x8f90, 0xa16b, 0xcbd8, 0xcf44, 0x1, 0x1);
        gbc.writeMem(0x4080, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1a27, gbc.sp());
        EXPECT(0x4082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0178
        gbc.setState(0x876c, 0xc8bf, 0x9260, 0xec3a, 0xc11, 0xb7e5, 0x1, 0x0);
        gbc.writeMem(0x876c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc8bf, gbc.sp());
        EXPECT(0x876e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x876c));
        EXPECT(0x11, gbc.readMem(0x876d));
        // CB 11 0179
        gbc.setState(0xca40, 0xcd11, 0xeec0, 0xaaea, 0x5cf1, 0x5048, 0x0, 0x1);
        gbc.writeMem(0xca40, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcd11, gbc.sp());
        EXPECT(0xca42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca40));
        EXPECT(0x11, gbc.readMem(0xca41));
        // CB 11 017A
        gbc.setState(0x927e, 0xd3fa, 0x2010, 0x8ebe, 0x8d9f, 0xc26, 0x0, 0x1);
        gbc.writeMem(0x927e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd3fa, gbc.sp());
        EXPECT(0x9280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927e));
        EXPECT(0x11, gbc.readMem(0x927f));
        // CB 11 017B
        gbc.setState(0x9206, 0xb4b3, 0xe8e0, 0x7afc, 0x2c90, 0x7c94, 0x1, 0x0);
        gbc.writeMem(0x9206, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb4b3, gbc.sp());
        EXPECT(0x9208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9206));
        EXPECT(0x11, gbc.readMem(0x9207));
        // CB 11 017C
        gbc.setState(0x483f, 0x90e0, 0x2330, 0x83db, 0xb6a9, 0x14d5, 0x0, 0x1);
        gbc.writeMem(0x483f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x90e0, gbc.sp());
        EXPECT(0x4841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 017D
        gbc.setState(0xa406, 0x8ac1, 0xa730, 0xee05, 0x2c38, 0xaea, 0x1, 0x0);
        gbc.writeMem(0xa406, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8ac1, gbc.sp());
        EXPECT(0xa408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa406));
        EXPECT(0x11, gbc.readMem(0xa407));
        // CB 11 017E
        gbc.setState(0xda31, 0x252a, 0x8190, 0xeab0, 0xfa9f, 0xd3a9, 0x0, 0x1);
        gbc.writeMem(0xda31, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x252a, gbc.sp());
        EXPECT(0xda33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda31));
        EXPECT(0x11, gbc.readMem(0xda32));
        // CB 11 017F
        gbc.setState(0x957c, 0xad03, 0x2de0, 0x2402, 0xf69b, 0x704e, 0x0, 0x0);
        gbc.writeMem(0x957c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xad03, gbc.sp());
        EXPECT(0x957e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957c));
        EXPECT(0x11, gbc.readMem(0x957d));
        // CB 11 0180
        gbc.setState(0xeb13, 0x2915, 0x1f50, 0xf665, 0x4752, 0xbc1d, 0x1, 0x0);
        gbc.writeMem(0xeb13, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2915, gbc.sp());
        EXPECT(0xeb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb13));
        EXPECT(0x11, gbc.readMem(0xeb14));
        // CB 11 0181
        gbc.setState(0x4625, 0xe7a1, 0x4fc0, 0x1209, 0x3361, 0xf8fc, 0x1, 0x1);
        gbc.writeMem(0x4625, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe7a1, gbc.sp());
        EXPECT(0x4627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0182
        gbc.setState(0x2515, 0x8fed, 0xef50, 0x8bf7, 0xf9c2, 0x1a41, 0x1, 0x0);
        gbc.writeMem(0x2515, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8fed, gbc.sp());
        EXPECT(0x2517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0183
        gbc.setState(0xb6a1, 0x68ef, 0x8020, 0xf55d, 0x2116, 0xca00, 0x0, 0x0);
        gbc.writeMem(0xb6a1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x68ef, gbc.sp());
        EXPECT(0xb6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a1));
        EXPECT(0x11, gbc.readMem(0xb6a2));
        // CB 11 0184
        gbc.setState(0x608, 0x20cd, 0x1760, 0x62dc, 0x8e81, 0x2ea0, 0x1, 0x0);
        gbc.writeMem(0x608, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x20cd, gbc.sp());
        EXPECT(0x60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0185
        gbc.setState(0x861c, 0x64f3, 0xf360, 0x4c08, 0x56ee, 0x6a24, 0x0, 0x0);
        gbc.writeMem(0x861c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x64f3, gbc.sp());
        EXPECT(0x861e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861c));
        EXPECT(0x11, gbc.readMem(0x861d));
        // CB 11 0186
        gbc.setState(0x111e, 0x4999, 0x37a0, 0x37da, 0x29ba, 0xb58f, 0x1, 0x0);
        gbc.writeMem(0x111e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4999, gbc.sp());
        EXPECT(0x1120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0187
        gbc.setState(0xeefb, 0xbe2f, 0xe800, 0xa244, 0x74cc, 0x1b4e, 0x1, 0x0);
        gbc.writeMem(0xeefb, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbe2f, gbc.sp());
        EXPECT(0xeefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefb));
        EXPECT(0x11, gbc.readMem(0xeefc));
        // CB 11 0188
        gbc.setState(0xbfab, 0x33b0, 0xa9f0, 0x6a3b, 0xbb2, 0xe5a5, 0x0, 0x1);
        gbc.writeMem(0xbfab, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x33b0, gbc.sp());
        EXPECT(0xbfad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfab));
        EXPECT(0x11, gbc.readMem(0xbfac));
        // CB 11 0189
        gbc.setState(0x6276, 0xda8c, 0xcf50, 0xc59c, 0xc9d7, 0x8b2d, 0x0, 0x0);
        gbc.writeMem(0x6276, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xda8c, gbc.sp());
        EXPECT(0x6278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 018A
        gbc.setState(0xdbee, 0xd10e, 0xa4a0, 0xbdab, 0x2a14, 0xf9f0, 0x1, 0x1);
        gbc.writeMem(0xdbee, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd10e, gbc.sp());
        EXPECT(0xdbf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbee));
        EXPECT(0x11, gbc.readMem(0xdbef));
        // CB 11 018B
        gbc.setState(0x4b84, 0x880f, 0x8a00, 0xa303, 0x300c, 0xb268, 0x1, 0x0);
        gbc.writeMem(0x4b84, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x880f, gbc.sp());
        EXPECT(0x4b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 018C
        gbc.setState(0x3983, 0x5cf2, 0xff60, 0xfddf, 0x977b, 0x6074, 0x1, 0x1);
        gbc.writeMem(0x3983, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5cf2, gbc.sp());
        EXPECT(0x3985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 018D
        gbc.setState(0x856d, 0x4b53, 0x3260, 0xac1c, 0x1f6d, 0xab3e, 0x1, 0x0);
        gbc.writeMem(0x856d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4b53, gbc.sp());
        EXPECT(0x856f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856d));
        EXPECT(0x11, gbc.readMem(0x856e));
        // CB 11 018E
        gbc.setState(0x3d90, 0x9e48, 0x41a0, 0x15eb, 0xf6be, 0x5c2c, 0x0, 0x1);
        gbc.writeMem(0x3d90, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9e48, gbc.sp());
        EXPECT(0x3d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 018F
        gbc.setState(0x3b20, 0x273c, 0x5220, 0x1ff9, 0x8d47, 0x406f, 0x0, 0x0);
        gbc.writeMem(0x3b20, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x273c, gbc.sp());
        EXPECT(0x3b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0190
        gbc.setState(0xd0dc, 0x654e, 0x4a50, 0x7980, 0x1695, 0x19df, 0x1, 0x1);
        gbc.writeMem(0xd0dc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x654e, gbc.sp());
        EXPECT(0xd0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0dc));
        EXPECT(0x11, gbc.readMem(0xd0dd));
        // CB 11 0191
        gbc.setState(0x11d3, 0xcd84, 0x8970, 0xf7e3, 0xe2f0, 0xadfe, 0x1, 0x1);
        gbc.writeMem(0x11d3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcd84, gbc.sp());
        EXPECT(0x11d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0192
        gbc.setState(0x4817, 0x25ea, 0xe650, 0xca12, 0xc513, 0x680a, 0x0, 0x0);
        gbc.writeMem(0x4817, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x25ea, gbc.sp());
        EXPECT(0x4819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0193
        gbc.setState(0x188d, 0x7e70, 0x75b0, 0x12ec, 0x1cc6, 0x92eb, 0x0, 0x0);
        gbc.writeMem(0x188d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7e70, gbc.sp());
        EXPECT(0x188f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0195
        gbc.setState(0xbe34, 0xf2b1, 0xbd30, 0xb7fe, 0x30db, 0x3cf, 0x1, 0x1);
        gbc.writeMem(0xbe34, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf2b1, gbc.sp());
        EXPECT(0xbe36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe34));
        EXPECT(0x11, gbc.readMem(0xbe35));
        // CB 11 0197
        gbc.setState(0xce4e, 0xd089, 0x4100, 0x7eee, 0xfc4, 0x1238, 0x0, 0x0);
        gbc.writeMem(0xce4e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd089, gbc.sp());
        EXPECT(0xce50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4e));
        EXPECT(0x11, gbc.readMem(0xce4f));
        // CB 11 0198
        gbc.setState(0xb942, 0xe5b0, 0x1080, 0x5140, 0x4e23, 0x2966, 0x1, 0x0);
        gbc.writeMem(0xb942, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe5b0, gbc.sp());
        EXPECT(0xb944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb942));
        EXPECT(0x11, gbc.readMem(0xb943));
        // CB 11 0199
        gbc.setState(0xb07b, 0x9f, 0x7700, 0x975b, 0xc980, 0x645a, 0x1, 0x1);
        gbc.writeMem(0xb07b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9f, gbc.sp());
        EXPECT(0xb07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07b));
        EXPECT(0x11, gbc.readMem(0xb07c));
        // CB 11 019A
        gbc.setState(0x4e64, 0x742a, 0x94e0, 0xcbfe, 0x5a45, 0x4611, 0x1, 0x1);
        gbc.writeMem(0x4e64, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x742a, gbc.sp());
        EXPECT(0x4e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 019B
        gbc.setState(0xb088, 0x38e3, 0x2d30, 0xe467, 0x1874, 0x9019, 0x1, 0x0);
        gbc.writeMem(0xb088, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x38e3, gbc.sp());
        EXPECT(0xb08a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb088));
        EXPECT(0x11, gbc.readMem(0xb089));
        // CB 11 019C
        gbc.setState(0x1119, 0xb66a, 0x980, 0xe1d9, 0x1354, 0x549a, 0x0, 0x1);
        gbc.writeMem(0x1119, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb66a, gbc.sp());
        EXPECT(0x111b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 019D
        gbc.setState(0x87fa, 0x2b97, 0xf4c0, 0x827b, 0xd5b6, 0xe089, 0x0, 0x0);
        gbc.writeMem(0x87fa, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2b97, gbc.sp());
        EXPECT(0x87fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fa));
        EXPECT(0x11, gbc.readMem(0x87fb));
        // CB 11 019E
        gbc.setState(0x5687, 0xd4be, 0xa190, 0xa424, 0xe1dc, 0x58df, 0x1, 0x1);
        gbc.writeMem(0x5687, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd4be, gbc.sp());
        EXPECT(0x5689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 019F
        gbc.setState(0xa230, 0x2de8, 0x7040, 0x25eb, 0xcf70, 0xcd06, 0x0, 0x0);
        gbc.writeMem(0xa230, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2de8, gbc.sp());
        EXPECT(0xa232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa230));
        EXPECT(0x11, gbc.readMem(0xa231));
        // CB 11 01A0
        gbc.setState(0xe4bc, 0xf012, 0xd320, 0x4ca1, 0x6588, 0x285, 0x1, 0x0);
        gbc.writeMem(0xe4bc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf012, gbc.sp());
        EXPECT(0xe4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bc));
        EXPECT(0x11, gbc.readMem(0xe4bd));
        // CB 11 01A1
        gbc.setState(0x3663, 0x8121, 0x28d0, 0x2464, 0x545d, 0x22, 0x1, 0x0);
        gbc.writeMem(0x3663, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8121, gbc.sp());
        EXPECT(0x3665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01A2
        gbc.setState(0xd107, 0xda1d, 0xb420, 0x910c, 0x24f, 0xdf9, 0x1, 0x1);
        gbc.writeMem(0xd107, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xda1d, gbc.sp());
        EXPECT(0xd109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd107));
        EXPECT(0x11, gbc.readMem(0xd108));
        // CB 11 01A3
        gbc.setState(0x5043, 0x8a57, 0x5850, 0xfffa, 0x74bd, 0x6599, 0x1, 0x0);
        gbc.writeMem(0x5043, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8a57, gbc.sp());
        EXPECT(0x5045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01A4
        gbc.setState(0x4702, 0xffdd, 0x1760, 0x9e49, 0xf75c, 0x5dac, 0x1, 0x0);
        gbc.writeMem(0x4702, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xffdd, gbc.sp());
        EXPECT(0x4704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01A6
        gbc.setState(0x77b3, 0x3d6c, 0x8b00, 0x58d1, 0x9c98, 0xe50, 0x1, 0x0);
        gbc.writeMem(0x77b3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3d6c, gbc.sp());
        EXPECT(0x77b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01A7
        gbc.setState(0x1345, 0x9ed3, 0x2ef0, 0xe55c, 0xd674, 0x855a, 0x0, 0x0);
        gbc.writeMem(0x1345, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9ed3, gbc.sp());
        EXPECT(0x1347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01A8
        gbc.setState(0xae36, 0xe700, 0x64d0, 0xdcb9, 0xac7f, 0xc1a5, 0x0, 0x1);
        gbc.writeMem(0xae36, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe700, gbc.sp());
        EXPECT(0xae38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae36));
        EXPECT(0x11, gbc.readMem(0xae37));
        // CB 11 01A9
        gbc.setState(0xefc6, 0xeb52, 0xd8c0, 0xa3fb, 0xc347, 0x87c9, 0x0, 0x0);
        gbc.writeMem(0xefc6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xeb52, gbc.sp());
        EXPECT(0xefc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc6));
        EXPECT(0x11, gbc.readMem(0xefc7));
        // CB 11 01AA
        gbc.setState(0x6da5, 0xba6, 0x8fb0, 0x822d, 0x2f56, 0x8954, 0x1, 0x1);
        gbc.writeMem(0x6da5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xba6, gbc.sp());
        EXPECT(0x6da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01AB
        gbc.setState(0xea88, 0xcbe4, 0xc4b0, 0x7384, 0xc997, 0xa52c, 0x1, 0x1);
        gbc.writeMem(0xea88, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcbe4, gbc.sp());
        EXPECT(0xea8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea88));
        EXPECT(0x11, gbc.readMem(0xea89));
        // CB 11 01AC
        gbc.setState(0xef0c, 0xda5e, 0xa550, 0xd96, 0xf64d, 0xd49, 0x1, 0x1);
        gbc.writeMem(0xef0c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xda5e, gbc.sp());
        EXPECT(0xef0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef0c));
        EXPECT(0x11, gbc.readMem(0xef0d));
        // CB 11 01AD
        gbc.setState(0xb2a, 0xb379, 0x84c0, 0x5305, 0xe6bc, 0x9660, 0x0, 0x0);
        gbc.writeMem(0xb2a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb379, gbc.sp());
        EXPECT(0xb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01AE
        gbc.setState(0x3ddc, 0xeece, 0x3310, 0xbc0, 0x5a30, 0x9c54, 0x0, 0x0);
        gbc.writeMem(0x3ddc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeece, gbc.sp());
        EXPECT(0x3dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01AF
        gbc.setState(0xa559, 0x198f, 0x6540, 0x42f9, 0xa949, 0x4b06, 0x0, 0x0);
        gbc.writeMem(0xa559, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x198f, gbc.sp());
        EXPECT(0xa55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa559));
        EXPECT(0x11, gbc.readMem(0xa55a));
        // CB 11 01B0
        gbc.setState(0x3c98, 0x73f4, 0x1b30, 0x117, 0xb326, 0x1ccd, 0x1, 0x1);
        gbc.writeMem(0x3c98, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x73f4, gbc.sp());
        EXPECT(0x3c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01B1
        gbc.setState(0x9cfa, 0xafea, 0x6a10, 0x561e, 0x6f2b, 0x5044, 0x0, 0x0);
        gbc.writeMem(0x9cfa, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xafea, gbc.sp());
        EXPECT(0x9cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfa));
        EXPECT(0x11, gbc.readMem(0x9cfb));
        // CB 11 01B2
        gbc.setState(0x8846, 0xb5bb, 0xc600, 0xe16b, 0xa84b, 0x7b23, 0x0, 0x1);
        gbc.writeMem(0x8846, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb5bb, gbc.sp());
        EXPECT(0x8848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8846));
        EXPECT(0x11, gbc.readMem(0x8847));
        // CB 11 01B4
        gbc.setState(0xdf74, 0x4902, 0x5e0, 0xe691, 0x7de3, 0x9e07, 0x1, 0x0);
        gbc.writeMem(0xdf74, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4902, gbc.sp());
        EXPECT(0xdf76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf74));
        EXPECT(0x11, gbc.readMem(0xdf75));
        // CB 11 01B5
        gbc.setState(0xc2ee, 0x2f2a, 0x5b30, 0xe17e, 0x25ed, 0x73f1, 0x1, 0x0);
        gbc.writeMem(0xc2ee, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2f2a, gbc.sp());
        EXPECT(0xc2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ee));
        EXPECT(0x11, gbc.readMem(0xc2ef));
        // CB 11 01B6
        gbc.setState(0x234b, 0xe079, 0x9300, 0xf2c, 0xfb5e, 0x63f9, 0x1, 0x1);
        gbc.writeMem(0x234b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe079, gbc.sp());
        EXPECT(0x234d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01B7
        gbc.setState(0xa2c7, 0x727e, 0x3670, 0x30d9, 0xb118, 0x5e7, 0x1, 0x1);
        gbc.writeMem(0xa2c7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x727e, gbc.sp());
        EXPECT(0xa2c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c7));
        EXPECT(0x11, gbc.readMem(0xa2c8));
        // CB 11 01B8
        gbc.setState(0xd3f0, 0x26e3, 0x9ef0, 0xc89a, 0x7e27, 0xb1ab, 0x0, 0x0);
        gbc.writeMem(0xd3f0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x26e3, gbc.sp());
        EXPECT(0xd3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f0));
        EXPECT(0x11, gbc.readMem(0xd3f1));
        // CB 11 01B9
        gbc.setState(0x142b, 0x6e3f, 0x2330, 0xef59, 0x600f, 0x78d5, 0x0, 0x1);
        gbc.writeMem(0x142b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6e3f, gbc.sp());
        EXPECT(0x142d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01BA
        gbc.setState(0xdc9a, 0x95f1, 0x23c0, 0x5c52, 0x7b24, 0x7538, 0x0, 0x0);
        gbc.writeMem(0xdc9a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x95f1, gbc.sp());
        EXPECT(0xdc9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9a));
        EXPECT(0x11, gbc.readMem(0xdc9b));
        // CB 11 01BB
        gbc.setState(0x1768, 0x4295, 0xfef0, 0xc628, 0x9f, 0x48c1, 0x0, 0x1);
        gbc.writeMem(0x1768, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4295, gbc.sp());
        EXPECT(0x176a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01BC
        gbc.setState(0x4e97, 0xa897, 0xa0d0, 0x9a2f, 0x9876, 0x77b7, 0x0, 0x1);
        gbc.writeMem(0x4e97, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa897, gbc.sp());
        EXPECT(0x4e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01BD
        gbc.setState(0x8174, 0x492c, 0x8d00, 0x514e, 0x57fa, 0x451d, 0x0, 0x0);
        gbc.writeMem(0x8174, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x492c, gbc.sp());
        EXPECT(0x8176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8174));
        EXPECT(0x11, gbc.readMem(0x8175));
        // CB 11 01BE
        gbc.setState(0x61fb, 0x372a, 0x7840, 0x6343, 0xc87e, 0x253e, 0x1, 0x1);
        gbc.writeMem(0x61fb, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x372a, gbc.sp());
        EXPECT(0x61fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01BF
        gbc.setState(0xb10d, 0x555a, 0xc60, 0x7b96, 0x2e43, 0x1497, 0x0, 0x1);
        gbc.writeMem(0xb10d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x555a, gbc.sp());
        EXPECT(0xb10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10d));
        EXPECT(0x11, gbc.readMem(0xb10e));
        // CB 11 01C0
        gbc.setState(0x7c8, 0xefdd, 0xd90, 0xf8d, 0xa848, 0x11ad, 0x1, 0x0);
        gbc.writeMem(0x7c8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xefdd, gbc.sp());
        EXPECT(0x7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01C1
        gbc.setState(0xde22, 0x748b, 0x8de0, 0x4941, 0xee95, 0xbc25, 0x1, 0x1);
        gbc.writeMem(0xde22, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x748b, gbc.sp());
        EXPECT(0xde24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde22));
        EXPECT(0x11, gbc.readMem(0xde23));
        // CB 11 01C2
        gbc.setState(0x26da, 0xbba, 0xe040, 0xc6f3, 0x490, 0x7ae0, 0x1, 0x1);
        gbc.writeMem(0x26da, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbba, gbc.sp());
        EXPECT(0x26dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01C4
        gbc.setState(0xe1ae, 0xe714, 0xe5d0, 0xb338, 0x5e2c, 0xdcc4, 0x1, 0x1);
        gbc.writeMem(0xe1ae, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe714, gbc.sp());
        EXPECT(0xe1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ae));
        EXPECT(0x11, gbc.readMem(0xe1af));
        // CB 11 01C5
        gbc.setState(0x964c, 0xd35b, 0x4c10, 0xc25, 0x8738, 0x4eb1, 0x0, 0x1);
        gbc.writeMem(0x964c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd35b, gbc.sp());
        EXPECT(0x964e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x964c));
        EXPECT(0x11, gbc.readMem(0x964d));
        // CB 11 01C6
        gbc.setState(0x38f6, 0xde70, 0xc4e0, 0x82c8, 0x4509, 0x1104, 0x0, 0x1);
        gbc.writeMem(0x38f6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xde70, gbc.sp());
        EXPECT(0x38f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01C7
        gbc.setState(0x940f, 0xf968, 0x6bb0, 0x4a72, 0x29ff, 0xaef6, 0x1, 0x1);
        gbc.writeMem(0x940f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf968, gbc.sp());
        EXPECT(0x9411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940f));
        EXPECT(0x11, gbc.readMem(0x9410));
        // CB 11 01C8
        gbc.setState(0x35eb, 0x9a6, 0xfe30, 0xcf49, 0x292c, 0x6a9d, 0x1, 0x1);
        gbc.writeMem(0x35eb, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9a6, gbc.sp());
        EXPECT(0x35ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01C9
        gbc.setState(0xee56, 0x8c78, 0x9be0, 0x35d, 0x6f69, 0x1a50, 0x1, 0x1);
        gbc.writeMem(0xee56, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8c78, gbc.sp());
        EXPECT(0xee58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee56));
        EXPECT(0x11, gbc.readMem(0xee57));
        // CB 11 01CA
        gbc.setState(0x2034, 0x6885, 0x5240, 0x8fd6, 0x898f, 0x7cf0, 0x0, 0x0);
        gbc.writeMem(0x2034, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6885, gbc.sp());
        EXPECT(0x2036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01CB
        gbc.setState(0x66c5, 0xd58e, 0x6510, 0xe179, 0x326d, 0xc020, 0x0, 0x1);
        gbc.writeMem(0x66c5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd58e, gbc.sp());
        EXPECT(0x66c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01CC
        gbc.setState(0x27fa, 0x9cee, 0x70b0, 0xbb1a, 0xed01, 0xa81b, 0x0, 0x1);
        gbc.writeMem(0x27fa, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9cee, gbc.sp());
        EXPECT(0x27fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01CD
        gbc.setState(0xb332, 0x682e, 0xc700, 0x893b, 0x3c8a, 0x8caa, 0x0, 0x0);
        gbc.writeMem(0xb332, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x682e, gbc.sp());
        EXPECT(0xb334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb332));
        EXPECT(0x11, gbc.readMem(0xb333));
        // CB 11 01CE
        gbc.setState(0x2270, 0x1e7a, 0xd240, 0x771c, 0xbf9, 0x43bf, 0x0, 0x1);
        gbc.writeMem(0x2270, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1e7a, gbc.sp());
        EXPECT(0x2272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01CF
        gbc.setState(0xafc, 0x50ff, 0x15c0, 0x8693, 0x7656, 0xa110, 0x0, 0x0);
        gbc.writeMem(0xafc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x50ff, gbc.sp());
        EXPECT(0xafe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01D0
        gbc.setState(0xba7, 0x57ad, 0x2720, 0x812, 0x8ab0, 0xfcb5, 0x0, 0x0);
        gbc.writeMem(0xba7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x57ad, gbc.sp());
        EXPECT(0xba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01D1
        gbc.setState(0x2d30, 0x1cc, 0xe920, 0x9044, 0x17e2, 0xd3b9, 0x1, 0x1);
        gbc.writeMem(0x2d30, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1cc, gbc.sp());
        EXPECT(0x2d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01D2
        gbc.setState(0x6dde, 0xa0ba, 0x2b80, 0xec1f, 0xbd1f, 0x2b37, 0x0, 0x0);
        gbc.writeMem(0x6dde, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa0ba, gbc.sp());
        EXPECT(0x6de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01D3
        gbc.setState(0x8c92, 0x671, 0x63b0, 0xbb56, 0xf80c, 0x839, 0x0, 0x0);
        gbc.writeMem(0x8c92, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x671, gbc.sp());
        EXPECT(0x8c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c92));
        EXPECT(0x11, gbc.readMem(0x8c93));
        // CB 11 01D4
        gbc.setState(0x35ed, 0xdf1e, 0xef10, 0x61eb, 0x3da9, 0xcbb9, 0x0, 0x1);
        gbc.writeMem(0x35ed, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdf1e, gbc.sp());
        EXPECT(0x35ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01D5
        gbc.setState(0xdfc5, 0x674f, 0x3770, 0xcfb9, 0x2155, 0x373c, 0x1, 0x0);
        gbc.writeMem(0xdfc5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x674f, gbc.sp());
        EXPECT(0xdfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc5));
        EXPECT(0x11, gbc.readMem(0xdfc6));
        // CB 11 01D6
        gbc.setState(0xbf9f, 0xc057, 0x9750, 0xae57, 0xe57a, 0xaa5a, 0x0, 0x0);
        gbc.writeMem(0xbf9f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc057, gbc.sp());
        EXPECT(0xbfa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf9f));
        EXPECT(0x11, gbc.readMem(0xbfa0));
        // CB 11 01D7
        gbc.setState(0x6f69, 0xe164, 0x97d0, 0xa8bd, 0xdf04, 0xe08f, 0x0, 0x0);
        gbc.writeMem(0x6f69, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe164, gbc.sp());
        EXPECT(0x6f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01D8
        gbc.setState(0xee0e, 0x9a5c, 0x5f20, 0xc4ef, 0xe623, 0x7488, 0x0, 0x0);
        gbc.writeMem(0xee0e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9a5c, gbc.sp());
        EXPECT(0xee10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0e));
        EXPECT(0x11, gbc.readMem(0xee0f));
        // CB 11 01D9
        gbc.setState(0x9583, 0x2828, 0x920, 0x2e27, 0xe5e0, 0x209a, 0x1, 0x0);
        gbc.writeMem(0x9583, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2828, gbc.sp());
        EXPECT(0x9585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9583));
        EXPECT(0x11, gbc.readMem(0x9584));
        // CB 11 01DA
        gbc.setState(0x3963, 0xe4f2, 0x96c0, 0xcacd, 0x391d, 0x7f3d, 0x1, 0x1);
        gbc.writeMem(0x3963, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe4f2, gbc.sp());
        EXPECT(0x3965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01DB
        gbc.setState(0x386d, 0xf113, 0xafc0, 0x442f, 0x308b, 0xd154, 0x1, 0x1);
        gbc.writeMem(0x386d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf113, gbc.sp());
        EXPECT(0x386f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01DC
        gbc.setState(0xca78, 0x4067, 0xa460, 0xf8ee, 0xe824, 0x6a60, 0x1, 0x1);
        gbc.writeMem(0xca78, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4067, gbc.sp());
        EXPECT(0xca7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca78));
        EXPECT(0x11, gbc.readMem(0xca79));
        // CB 11 01DF
        gbc.setState(0xb2d5, 0x6bc2, 0xaa60, 0x4ded, 0xfacd, 0xf2a8, 0x0, 0x0);
        gbc.writeMem(0xb2d5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6bc2, gbc.sp());
        EXPECT(0xb2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d5));
        EXPECT(0x11, gbc.readMem(0xb2d6));
        // CB 11 01E0
        gbc.setState(0x72d7, 0x3b3e, 0xd6e0, 0x2724, 0x3b7, 0xa85b, 0x0, 0x1);
        gbc.writeMem(0x72d7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3b3e, gbc.sp());
        EXPECT(0x72d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01E1
        gbc.setState(0x6474, 0x63b4, 0x8230, 0x6303, 0xe2e3, 0x593b, 0x0, 0x1);
        gbc.writeMem(0x6474, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x63b4, gbc.sp());
        EXPECT(0x6476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01E2
        gbc.setState(0x5046, 0xd4f1, 0x9b40, 0xce8b, 0xba71, 0xe072, 0x0, 0x0);
        gbc.writeMem(0x5046, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd4f1, gbc.sp());
        EXPECT(0x5048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01E3
        gbc.setState(0x363c, 0x2d3a, 0x72a0, 0x229d, 0x4d5f, 0xf59f, 0x1, 0x0);
        gbc.writeMem(0x363c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2d3a, gbc.sp());
        EXPECT(0x363e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01E5
        gbc.setState(0xd3ec, 0x630c, 0x61b0, 0x99cc, 0x41f4, 0x6a95, 0x1, 0x1);
        gbc.writeMem(0xd3ec, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x630c, gbc.sp());
        EXPECT(0xd3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ec));
        EXPECT(0x11, gbc.readMem(0xd3ed));
        // CB 11 01E6
        gbc.setState(0x440a, 0xb58e, 0x7990, 0x569, 0x6060, 0x3101, 0x1, 0x1);
        gbc.writeMem(0x440a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb58e, gbc.sp());
        EXPECT(0x440c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01E7
        gbc.setState(0x70e7, 0xc18, 0xba90, 0x3dc9, 0x723a, 0x105, 0x0, 0x1);
        gbc.writeMem(0x70e7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc18, gbc.sp());
        EXPECT(0x70e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01E8
        gbc.setState(0xcf60, 0xe87e, 0xbba0, 0x25cc, 0x44a, 0x4a22, 0x1, 0x0);
        gbc.writeMem(0xcf60, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe87e, gbc.sp());
        EXPECT(0xcf62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf60));
        EXPECT(0x11, gbc.readMem(0xcf61));
        // CB 11 01E9
        gbc.setState(0xa37f, 0xe6c9, 0x4eb0, 0x954f, 0x3ffb, 0xa18f, 0x0, 0x1);
        gbc.writeMem(0xa37f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe6c9, gbc.sp());
        EXPECT(0xa381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37f));
        EXPECT(0x11, gbc.readMem(0xa380));
        // CB 11 01EA
        gbc.setState(0x862f, 0xe2fc, 0xc890, 0xd65a, 0xf04d, 0x7515, 0x1, 0x1);
        gbc.writeMem(0x862f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe2fc, gbc.sp());
        EXPECT(0x8631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862f));
        EXPECT(0x11, gbc.readMem(0x8630));
        // CB 11 01EC
        gbc.setState(0x3387, 0xb6b0, 0xc7a0, 0x8323, 0x8826, 0x333, 0x1, 0x0);
        gbc.writeMem(0x3387, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb6b0, gbc.sp());
        EXPECT(0x3389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01ED
        gbc.setState(0xeb59, 0x579b, 0xcad0, 0xc210, 0x3d70, 0x1f01, 0x1, 0x1);
        gbc.writeMem(0xeb59, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x579b, gbc.sp());
        EXPECT(0xeb5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb59));
        EXPECT(0x11, gbc.readMem(0xeb5a));
        // CB 11 01EE
        gbc.setState(0x4379, 0xefef, 0x6d20, 0x857f, 0x7123, 0x225e, 0x1, 0x0);
        gbc.writeMem(0x4379, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xefef, gbc.sp());
        EXPECT(0x437b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01EF
        gbc.setState(0x2e44, 0x5615, 0xd3f0, 0x6341, 0x4814, 0x2888, 0x1, 0x1);
        gbc.writeMem(0x2e44, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5615, gbc.sp());
        EXPECT(0x2e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01F0
        gbc.setState(0x5945, 0xf60e, 0xa690, 0xd81a, 0xf7d7, 0x715b, 0x0, 0x1);
        gbc.writeMem(0x5945, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf60e, gbc.sp());
        EXPECT(0x5947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01F1
        gbc.setState(0x8b0b, 0x434d, 0x1460, 0x602f, 0x3024, 0x5bc5, 0x0, 0x1);
        gbc.writeMem(0x8b0b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0x8b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0b));
        EXPECT(0x11, gbc.readMem(0x8b0c));
        // CB 11 01F2
        gbc.setState(0x1466, 0x44d, 0x270, 0xb698, 0xac78, 0x1281, 0x1, 0x0);
        gbc.writeMem(0x1466, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x44d, gbc.sp());
        EXPECT(0x1468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01F3
        gbc.setState(0x732c, 0xe0a2, 0xd350, 0x5e58, 0x2931, 0x71df, 0x0, 0x1);
        gbc.writeMem(0x732c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe0a2, gbc.sp());
        EXPECT(0x732e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01F4
        gbc.setState(0xc437, 0xd16d, 0x6dd0, 0x854, 0x5870, 0xd5a5, 0x1, 0x0);
        gbc.writeMem(0xc437, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd16d, gbc.sp());
        EXPECT(0xc439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc437));
        EXPECT(0x11, gbc.readMem(0xc438));
        // CB 11 01F5
        gbc.setState(0x5e11, 0x4852, 0x8a70, 0xbeea, 0x1121, 0x371c, 0x0, 0x1);
        gbc.writeMem(0x5e11, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4852, gbc.sp());
        EXPECT(0x5e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01F6
        gbc.setState(0x946e, 0x47dc, 0x2da0, 0xdbf4, 0x3cc0, 0x72d2, 0x1, 0x0);
        gbc.writeMem(0x946e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x47dc, gbc.sp());
        EXPECT(0x9470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946e));
        EXPECT(0x11, gbc.readMem(0x946f));
        // CB 11 01F7
        gbc.setState(0xe460, 0x7a73, 0xef0, 0xd48a, 0x7ce4, 0xd228, 0x0, 0x0);
        gbc.writeMem(0xe460, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7a73, gbc.sp());
        EXPECT(0xe462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe460));
        EXPECT(0x11, gbc.readMem(0xe461));
        // CB 11 01F8
        gbc.setState(0x1eb7, 0xd3e7, 0x3a70, 0xc3d7, 0x3ade, 0x516, 0x1, 0x0);
        gbc.writeMem(0x1eb7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd3e7, gbc.sp());
        EXPECT(0x1eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 01F9
        gbc.setState(0x30fe, 0x43e7, 0x7c60, 0xa93a, 0xae, 0xf9ce, 0x0, 0x1);
        gbc.writeMem(0x30fe, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x43e7, gbc.sp());
        EXPECT(0x3100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 01FA
        gbc.setState(0x83b4, 0x3c5b, 0x2fb0, 0x4a5f, 0x4d46, 0xcbba, 0x1, 0x1);
        gbc.writeMem(0x83b4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3c5b, gbc.sp());
        EXPECT(0x83b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b4));
        EXPECT(0x11, gbc.readMem(0x83b5));
        // CB 11 01FB
        gbc.setState(0xa3a7, 0xf285, 0x9dc0, 0x59a, 0x4b1e, 0x5652, 0x0, 0x0);
        gbc.writeMem(0xa3a7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf285, gbc.sp());
        EXPECT(0xa3a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a7));
        EXPECT(0x11, gbc.readMem(0xa3a8));
        // CB 11 01FC
        gbc.setState(0xd6e9, 0x4d3e, 0x6250, 0x2b90, 0x1b15, 0x20c6, 0x1, 0x1);
        gbc.writeMem(0xd6e9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4d3e, gbc.sp());
        EXPECT(0xd6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e9));
        EXPECT(0x11, gbc.readMem(0xd6ea));
        // CB 11 01FD
        gbc.setState(0xdb29, 0x440, 0x1470, 0xadb0, 0x5898, 0xebb9, 0x0, 0x0);
        gbc.writeMem(0xdb29, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x440, gbc.sp());
        EXPECT(0xdb2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb29));
        EXPECT(0x11, gbc.readMem(0xdb2a));
        // CB 11 01FE
        gbc.setState(0xa518, 0x683b, 0xa0b0, 0xee2f, 0x9353, 0x1cd4, 0x0, 0x1);
        gbc.writeMem(0xa518, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x683b, gbc.sp());
        EXPECT(0xa51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa518));
        EXPECT(0x11, gbc.readMem(0xa519));
        // CB 11 01FF
        gbc.setState(0x3bb8, 0xde9c, 0xcde0, 0xb869, 0x9177, 0x51b3, 0x0, 0x0);
        gbc.writeMem(0x3bb8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xde9c, gbc.sp());
        EXPECT(0x3bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0200
        gbc.setState(0x3a8d, 0x245b, 0xc180, 0xfba1, 0xe25d, 0x1955, 0x0, 0x1);
        gbc.writeMem(0x3a8d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x245b, gbc.sp());
        EXPECT(0x3a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0201
        gbc.setState(0xac5a, 0x75ae, 0x3ef0, 0x1603, 0x41ae, 0xb6a3, 0x0, 0x0);
        gbc.writeMem(0xac5a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x75ae, gbc.sp());
        EXPECT(0xac5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5a));
        EXPECT(0x11, gbc.readMem(0xac5b));
        // CB 11 0202
        gbc.setState(0xc5b7, 0xe1fd, 0x9cd0, 0x7555, 0xab8e, 0xb6b2, 0x1, 0x0);
        gbc.writeMem(0xc5b7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe1fd, gbc.sp());
        EXPECT(0xc5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b7));
        EXPECT(0x11, gbc.readMem(0xc5b8));
        // CB 11 0203
        gbc.setState(0x4b73, 0x8565, 0x99d0, 0x1dc1, 0xc57d, 0x25b2, 0x0, 0x1);
        gbc.writeMem(0x4b73, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8565, gbc.sp());
        EXPECT(0x4b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0204
        gbc.setState(0x81f2, 0xd378, 0xdb10, 0x19c4, 0x3be6, 0x8d77, 0x0, 0x1);
        gbc.writeMem(0x81f2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd378, gbc.sp());
        EXPECT(0x81f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f2));
        EXPECT(0x11, gbc.readMem(0x81f3));
        // CB 11 0205
        gbc.setState(0x1493, 0xcd21, 0xafc0, 0xa4a3, 0x63d, 0x9509, 0x1, 0x0);
        gbc.writeMem(0x1493, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcd21, gbc.sp());
        EXPECT(0x1495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0206
        gbc.setState(0xe4f8, 0x9144, 0x7fc0, 0x263, 0xc414, 0x50c3, 0x1, 0x1);
        gbc.writeMem(0xe4f8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9144, gbc.sp());
        EXPECT(0xe4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f8));
        EXPECT(0x11, gbc.readMem(0xe4f9));
        // CB 11 0207
        gbc.setState(0x4238, 0x6b92, 0x9830, 0x80d, 0xf1a6, 0xd86d, 0x0, 0x0);
        gbc.writeMem(0x4238, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6b92, gbc.sp());
        EXPECT(0x423a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0208
        gbc.setState(0xabec, 0xf336, 0x5430, 0xbdfa, 0x3b20, 0xec76, 0x0, 0x1);
        gbc.writeMem(0xabec, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf336, gbc.sp());
        EXPECT(0xabee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabec));
        EXPECT(0x11, gbc.readMem(0xabed));
        // CB 11 0209
        gbc.setState(0x8f5e, 0x71e8, 0x1f60, 0x834b, 0x9d42, 0x83a9, 0x1, 0x1);
        gbc.writeMem(0x8f5e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x71e8, gbc.sp());
        EXPECT(0x8f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5e));
        EXPECT(0x11, gbc.readMem(0x8f5f));
        // CB 11 020A
        gbc.setState(0x8246, 0x8e70, 0x34f0, 0x628a, 0x3cc6, 0xda62, 0x1, 0x1);
        gbc.writeMem(0x8246, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8e70, gbc.sp());
        EXPECT(0x8248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8246));
        EXPECT(0x11, gbc.readMem(0x8247));
        // CB 11 020B
        gbc.setState(0xd6a9, 0x978b, 0x6320, 0x89, 0xc16, 0x9ee1, 0x0, 0x0);
        gbc.writeMem(0xd6a9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x978b, gbc.sp());
        EXPECT(0xd6ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a9));
        EXPECT(0x11, gbc.readMem(0xd6aa));
        // CB 11 020C
        gbc.setState(0xa21d, 0xcf20, 0x95f0, 0xc578, 0x286b, 0xb6b1, 0x1, 0x1);
        gbc.writeMem(0xa21d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcf20, gbc.sp());
        EXPECT(0xa21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa21d));
        EXPECT(0x11, gbc.readMem(0xa21e));
        // CB 11 020D
        gbc.setState(0xdb7c, 0xc919, 0xd270, 0xd76e, 0x6b77, 0x6e20, 0x0, 0x0);
        gbc.writeMem(0xdb7c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc919, gbc.sp());
        EXPECT(0xdb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7c));
        EXPECT(0x11, gbc.readMem(0xdb7d));
        // CB 11 020E
        gbc.setState(0x7386, 0x7c7f, 0xdab0, 0x81b4, 0x6ce7, 0x8c55, 0x1, 0x0);
        gbc.writeMem(0x7386, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7c7f, gbc.sp());
        EXPECT(0x7388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 020F
        gbc.setState(0xda91, 0xe1b7, 0xac70, 0xbad7, 0x95d, 0x2fbc, 0x0, 0x0);
        gbc.writeMem(0xda91, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe1b7, gbc.sp());
        EXPECT(0xda93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda91));
        EXPECT(0x11, gbc.readMem(0xda92));
        // CB 11 0210
        gbc.setState(0x9724, 0x9fe8, 0x5b40, 0xe00a, 0x38a, 0x9f73, 0x1, 0x1);
        gbc.writeMem(0x9724, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9fe8, gbc.sp());
        EXPECT(0x9726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9724));
        EXPECT(0x11, gbc.readMem(0x9725));
        // CB 11 0211
        gbc.setState(0x671, 0x19a2, 0xdde0, 0x6fd2, 0x66a4, 0x6d85, 0x1, 0x1);
        gbc.writeMem(0x671, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x19a2, gbc.sp());
        EXPECT(0x673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0212
        gbc.setState(0xd855, 0xea87, 0xd90, 0x4405, 0x7c3, 0x95fc, 0x1, 0x1);
        gbc.writeMem(0xd855, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xea87, gbc.sp());
        EXPECT(0xd857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd855));
        EXPECT(0x11, gbc.readMem(0xd856));
        // CB 11 0213
        gbc.setState(0x84f0, 0x929c, 0x2ec0, 0x8c7c, 0x9f0e, 0xdc77, 0x1, 0x1);
        gbc.writeMem(0x84f0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x929c, gbc.sp());
        EXPECT(0x84f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f0));
        EXPECT(0x11, gbc.readMem(0x84f1));
        // CB 11 0214
        gbc.setState(0xa81a, 0x3bd7, 0x9f90, 0x1fed, 0xda31, 0x78ad, 0x1, 0x1);
        gbc.writeMem(0xa81a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3bd7, gbc.sp());
        EXPECT(0xa81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81a));
        EXPECT(0x11, gbc.readMem(0xa81b));
        // CB 11 0215
        gbc.setState(0x88da, 0xd426, 0xb930, 0x7732, 0x30aa, 0x6b84, 0x1, 0x0);
        gbc.writeMem(0x88da, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd426, gbc.sp());
        EXPECT(0x88dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88da));
        EXPECT(0x11, gbc.readMem(0x88db));
        // CB 11 0216
        gbc.setState(0xaa7d, 0x62d2, 0x5420, 0xd5c8, 0xb5ed, 0x553b, 0x0, 0x0);
        gbc.writeMem(0xaa7d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x62d2, gbc.sp());
        EXPECT(0xaa7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7d));
        EXPECT(0x11, gbc.readMem(0xaa7e));
        // CB 11 0217
        gbc.setState(0x5969, 0xe45e, 0x5d10, 0x6441, 0x6e08, 0x1c27, 0x0, 0x0);
        gbc.writeMem(0x5969, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe45e, gbc.sp());
        EXPECT(0x596b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0218
        gbc.setState(0xe799, 0xbbe0, 0xf880, 0x7516, 0x9d1e, 0xaf3b, 0x0, 0x0);
        gbc.writeMem(0xe799, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbbe0, gbc.sp());
        EXPECT(0xe79b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe799));
        EXPECT(0x11, gbc.readMem(0xe79a));
        // CB 11 0219
        gbc.setState(0x9ce, 0x19d8, 0x3960, 0x9075, 0x8685, 0x2ac, 0x1, 0x1);
        gbc.writeMem(0x9ce, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x19d8, gbc.sp());
        EXPECT(0x9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 021A
        gbc.setState(0x8b06, 0xd84e, 0xe9d0, 0x855, 0x399, 0xa2a5, 0x0, 0x0);
        gbc.writeMem(0x8b06, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd84e, gbc.sp());
        EXPECT(0x8b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b06));
        EXPECT(0x11, gbc.readMem(0x8b07));
        // CB 11 021B
        gbc.setState(0x8f95, 0x93a3, 0x1620, 0xef4, 0x8d14, 0x62d9, 0x1, 0x1);
        gbc.writeMem(0x8f95, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x93a3, gbc.sp());
        EXPECT(0x8f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f95));
        EXPECT(0x11, gbc.readMem(0x8f96));
        // CB 11 021C
        gbc.setState(0x95e3, 0x23d1, 0x4e50, 0x5fd7, 0x47cc, 0xd4f8, 0x1, 0x0);
        gbc.writeMem(0x95e3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x23d1, gbc.sp());
        EXPECT(0x95e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e3));
        EXPECT(0x11, gbc.readMem(0x95e4));
        // CB 11 021D
        gbc.setState(0xa036, 0xa7b3, 0x30c0, 0x3af6, 0xf772, 0x408e, 0x0, 0x0);
        gbc.writeMem(0xa036, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa7b3, gbc.sp());
        EXPECT(0xa038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa036));
        EXPECT(0x11, gbc.readMem(0xa037));
        // CB 11 021E
        gbc.setState(0x704e, 0xb7d2, 0xf290, 0x746a, 0x6880, 0x4b0d, 0x1, 0x0);
        gbc.writeMem(0x704e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb7d2, gbc.sp());
        EXPECT(0x7050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 021F
        gbc.setState(0x823e, 0x413e, 0xb3d0, 0xf27c, 0x915f, 0xb99b, 0x1, 0x1);
        gbc.writeMem(0x823e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x413e, gbc.sp());
        EXPECT(0x8240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823e));
        EXPECT(0x11, gbc.readMem(0x823f));
        // CB 11 0220
        gbc.setState(0x7b1c, 0x1107, 0x450, 0x4e6d, 0x50ed, 0x6b49, 0x0, 0x1);
        gbc.writeMem(0x7b1c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1107, gbc.sp());
        EXPECT(0x7b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0221
        gbc.setState(0xd5f5, 0xc76c, 0x5c00, 0x1537, 0xb68e, 0x2cc0, 0x0, 0x1);
        gbc.writeMem(0xd5f5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc76c, gbc.sp());
        EXPECT(0xd5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f5));
        EXPECT(0x11, gbc.readMem(0xd5f6));
        // CB 11 0222
        gbc.setState(0x693d, 0xc743, 0xfce0, 0xf787, 0x8448, 0x87af, 0x1, 0x1);
        gbc.writeMem(0x693d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc743, gbc.sp());
        EXPECT(0x693f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0223
        gbc.setState(0xec1e, 0x34f0, 0xad30, 0xf7d6, 0xeced, 0xe0be, 0x1, 0x0);
        gbc.writeMem(0xec1e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x34f0, gbc.sp());
        EXPECT(0xec20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1e));
        EXPECT(0x11, gbc.readMem(0xec1f));
        // CB 11 0224
        gbc.setState(0x69e4, 0x9a08, 0xfd20, 0xa426, 0x8579, 0xf6ec, 0x1, 0x1);
        gbc.writeMem(0x69e4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9a08, gbc.sp());
        EXPECT(0x69e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0225
        gbc.setState(0xba78, 0xf6be, 0xb5d0, 0x7ce3, 0xce39, 0x168b, 0x1, 0x1);
        gbc.writeMem(0xba78, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf6be, gbc.sp());
        EXPECT(0xba7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba78));
        EXPECT(0x11, gbc.readMem(0xba79));
        // CB 11 0226
        gbc.setState(0xbaab, 0x7285, 0xdd20, 0x564d, 0xf386, 0x8542, 0x1, 0x1);
        gbc.writeMem(0xbaab, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7285, gbc.sp());
        EXPECT(0xbaad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaab));
        EXPECT(0x11, gbc.readMem(0xbaac));
        // CB 11 0227
        gbc.setState(0x1f25, 0xfaa, 0x1720, 0xcdbb, 0xe915, 0x1887, 0x1, 0x0);
        gbc.writeMem(0x1f25, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfaa, gbc.sp());
        EXPECT(0x1f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0228
        gbc.setState(0xa1f1, 0x931f, 0x20a0, 0x8649, 0x896b, 0xbe5c, 0x1, 0x0);
        gbc.writeMem(0xa1f1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x931f, gbc.sp());
        EXPECT(0xa1f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f1));
        EXPECT(0x11, gbc.readMem(0xa1f2));
        // CB 11 0229
        gbc.setState(0x5828, 0x86dc, 0x3d80, 0xc1da, 0x3dbb, 0xfe59, 0x1, 0x1);
        gbc.writeMem(0x5828, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x86dc, gbc.sp());
        EXPECT(0x582a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 022A
        gbc.setState(0x79e3, 0x9c2a, 0xd220, 0xe956, 0x911c, 0xf53b, 0x1, 0x0);
        gbc.writeMem(0x79e3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9c2a, gbc.sp());
        EXPECT(0x79e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 022B
        gbc.setState(0x3541, 0x2d15, 0xecb0, 0x2f93, 0xe68f, 0x6401, 0x1, 0x0);
        gbc.writeMem(0x3541, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2d15, gbc.sp());
        EXPECT(0x3543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 022C
        gbc.setState(0x48b6, 0x7421, 0xecd0, 0xa0ac, 0xdade, 0xd457, 0x1, 0x1);
        gbc.writeMem(0x48b6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7421, gbc.sp());
        EXPECT(0x48b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 022D
        gbc.setState(0x3b7c, 0xe3c2, 0x65c0, 0x4bab, 0x5d35, 0xccfe, 0x1, 0x0);
        gbc.writeMem(0x3b7c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe3c2, gbc.sp());
        EXPECT(0x3b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 022E
        gbc.setState(0x170c, 0x8210, 0xc900, 0xab35, 0xf417, 0x9b82, 0x0, 0x1);
        gbc.writeMem(0x170c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8210, gbc.sp());
        EXPECT(0x170e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 022F
        gbc.setState(0x46de, 0xf168, 0x5fd0, 0xddab, 0xb238, 0x61ba, 0x0, 0x1);
        gbc.writeMem(0x46de, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf168, gbc.sp());
        EXPECT(0x46e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0230
        gbc.setState(0xc7d6, 0xb4b, 0xf050, 0x843, 0x24a5, 0xa877, 0x1, 0x1);
        gbc.writeMem(0xc7d6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb4b, gbc.sp());
        EXPECT(0xc7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d6));
        EXPECT(0x11, gbc.readMem(0xc7d7));
        // CB 11 0231
        gbc.setState(0x1423, 0x26f3, 0x9c20, 0x5283, 0x88fa, 0x8a9d, 0x0, 0x1);
        gbc.writeMem(0x1423, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x26f3, gbc.sp());
        EXPECT(0x1425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0233
        gbc.setState(0x6eb1, 0x350e, 0xf3c0, 0x492d, 0xa6d0, 0xdb8b, 0x1, 0x0);
        gbc.writeMem(0x6eb1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x350e, gbc.sp());
        EXPECT(0x6eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0234
        gbc.setState(0x26b7, 0x56ce, 0xcdf0, 0xcd80, 0x1507, 0xdd48, 0x0, 0x0);
        gbc.writeMem(0x26b7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x56ce, gbc.sp());
        EXPECT(0x26b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0235
        gbc.setState(0x670b, 0x499f, 0x35f0, 0x8901, 0x7fce, 0x8723, 0x0, 0x1);
        gbc.writeMem(0x670b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x499f, gbc.sp());
        EXPECT(0x670d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0236
        gbc.setState(0x6760, 0xc481, 0x3740, 0xf8b6, 0x5581, 0x43f3, 0x0, 0x1);
        gbc.writeMem(0x6760, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc481, gbc.sp());
        EXPECT(0x6762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0237
        gbc.setState(0xa052, 0xca47, 0x60e0, 0x760d, 0x7469, 0xc02a, 0x1, 0x1);
        gbc.writeMem(0xa052, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xca47, gbc.sp());
        EXPECT(0xa054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa052));
        EXPECT(0x11, gbc.readMem(0xa053));
        // CB 11 0238
        gbc.setState(0x192f, 0x784d, 0x85d0, 0x8a9a, 0x9e58, 0x792f, 0x0, 0x0);
        gbc.writeMem(0x192f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x784d, gbc.sp());
        EXPECT(0x1931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0239
        gbc.setState(0x3ce3, 0x9bea, 0xe6c0, 0x48bb, 0xb24a, 0xa5e3, 0x0, 0x1);
        gbc.writeMem(0x3ce3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9bea, gbc.sp());
        EXPECT(0x3ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 023A
        gbc.setState(0xbd72, 0xa424, 0xf1e0, 0x452f, 0x32ad, 0x7c25, 0x0, 0x1);
        gbc.writeMem(0xbd72, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa424, gbc.sp());
        EXPECT(0xbd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd72));
        EXPECT(0x11, gbc.readMem(0xbd73));
        // CB 11 023B
        gbc.setState(0xd006, 0x723b, 0x94a0, 0xb9db, 0x9702, 0x5123, 0x1, 0x1);
        gbc.writeMem(0xd006, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x723b, gbc.sp());
        EXPECT(0xd008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd006));
        EXPECT(0x11, gbc.readMem(0xd007));
        // CB 11 023C
        gbc.setState(0xbc47, 0x4f63, 0x5830, 0x9795, 0x7a71, 0xa6a5, 0x0, 0x0);
        gbc.writeMem(0xbc47, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4f63, gbc.sp());
        EXPECT(0xbc49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc47));
        EXPECT(0x11, gbc.readMem(0xbc48));
        // CB 11 023D
        gbc.setState(0xdac5, 0x9324, 0xa50, 0xbe44, 0x8d77, 0xc17f, 0x0, 0x1);
        gbc.writeMem(0xdac5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9324, gbc.sp());
        EXPECT(0xdac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac5));
        EXPECT(0x11, gbc.readMem(0xdac6));
        // CB 11 023E
        gbc.setState(0x9570, 0x27a, 0x6140, 0x3426, 0x986d, 0x31ce, 0x1, 0x0);
        gbc.writeMem(0x9570, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x27a, gbc.sp());
        EXPECT(0x9572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9570));
        EXPECT(0x11, gbc.readMem(0x9571));
        // CB 11 023F
        gbc.setState(0x81e4, 0xf8d4, 0x5bb0, 0x6a6e, 0x2bb7, 0x3be1, 0x1, 0x1);
        gbc.writeMem(0x81e4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf8d4, gbc.sp());
        EXPECT(0x81e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e4));
        EXPECT(0x11, gbc.readMem(0x81e5));
        // CB 11 0240
        gbc.setState(0x3850, 0xcb2a, 0x4b00, 0x8952, 0x41e8, 0x292f, 0x1, 0x0);
        gbc.writeMem(0x3850, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcb2a, gbc.sp());
        EXPECT(0x3852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0241
        gbc.setState(0x33e9, 0x4142, 0x3c50, 0xd218, 0x1e07, 0x978d, 0x1, 0x1);
        gbc.writeMem(0x33e9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4142, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0242
        gbc.setState(0x8b4f, 0xbd5, 0xfe00, 0xdb94, 0xe510, 0xfcd0, 0x0, 0x0);
        gbc.writeMem(0x8b4f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbd5, gbc.sp());
        EXPECT(0x8b51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b4f));
        EXPECT(0x11, gbc.readMem(0x8b50));
        // CB 11 0243
        gbc.setState(0x6c8a, 0x481, 0x6ec0, 0x624, 0x5bb, 0x2f83, 0x1, 0x0);
        gbc.writeMem(0x6c8a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x481, gbc.sp());
        EXPECT(0x6c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0244
        gbc.setState(0xee58, 0x81c4, 0x1b70, 0x2b48, 0x59d6, 0x6225, 0x1, 0x1);
        gbc.writeMem(0xee58, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x81c4, gbc.sp());
        EXPECT(0xee5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee58));
        EXPECT(0x11, gbc.readMem(0xee59));
        // CB 11 0245
        gbc.setState(0x7612, 0x7eab, 0xaad0, 0x9168, 0xc3a7, 0x7f86, 0x0, 0x0);
        gbc.writeMem(0x7612, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7eab, gbc.sp());
        EXPECT(0x7614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0246
        gbc.setState(0xaa3c, 0x859f, 0x1500, 0x598b, 0x4110, 0x166a, 0x1, 0x1);
        gbc.writeMem(0xaa3c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x859f, gbc.sp());
        EXPECT(0xaa3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa3c));
        EXPECT(0x11, gbc.readMem(0xaa3d));
        // CB 11 0249
        gbc.setState(0xd1a5, 0xd987, 0x6630, 0x7cb8, 0xaf04, 0x2e5f, 0x1, 0x0);
        gbc.writeMem(0xd1a5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd987, gbc.sp());
        EXPECT(0xd1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a5));
        EXPECT(0x11, gbc.readMem(0xd1a6));
        // CB 11 024A
        gbc.setState(0x273f, 0xff09, 0xc280, 0x22ef, 0x9838, 0xf03c, 0x1, 0x1);
        gbc.writeMem(0x273f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xff09, gbc.sp());
        EXPECT(0x2741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 024B
        gbc.setState(0xe75e, 0xd8, 0xb410, 0x4254, 0xdb4f, 0xe4ca, 0x0, 0x0);
        gbc.writeMem(0xe75e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd8, gbc.sp());
        EXPECT(0xe760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75e));
        EXPECT(0x11, gbc.readMem(0xe75f));
        // CB 11 024C
        gbc.setState(0xb3b8, 0x6e48, 0x8d60, 0x3368, 0xc454, 0x82ce, 0x0, 0x0);
        gbc.writeMem(0xb3b8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6e48, gbc.sp());
        EXPECT(0xb3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b8));
        EXPECT(0x11, gbc.readMem(0xb3b9));
        // CB 11 024D
        gbc.setState(0xe78b, 0x1c40, 0x2300, 0xfef7, 0x60ff, 0x7e47, 0x0, 0x1);
        gbc.writeMem(0xe78b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1c40, gbc.sp());
        EXPECT(0xe78d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78b));
        EXPECT(0x11, gbc.readMem(0xe78c));
        // CB 11 024E
        gbc.setState(0xbfdf, 0x65f1, 0xf860, 0x33c0, 0xf9c1, 0xc845, 0x0, 0x1);
        gbc.writeMem(0xbfdf, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x65f1, gbc.sp());
        EXPECT(0xbfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfdf));
        EXPECT(0x11, gbc.readMem(0xbfe0));
        // CB 11 024F
        gbc.setState(0xe45e, 0x8cef, 0x60, 0x5380, 0xf5cc, 0xc848, 0x0, 0x0);
        gbc.writeMem(0xe45e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8cef, gbc.sp());
        EXPECT(0xe460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45e));
        EXPECT(0x11, gbc.readMem(0xe45f));
        // CB 11 0250
        gbc.setState(0x5142, 0xba07, 0xf910, 0x6854, 0x352d, 0xc983, 0x0, 0x1);
        gbc.writeMem(0x5142, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xba07, gbc.sp());
        EXPECT(0x5144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0251
        gbc.setState(0x9c86, 0xe428, 0x240, 0x2285, 0x18a4, 0xd903, 0x0, 0x1);
        gbc.writeMem(0x9c86, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe428, gbc.sp());
        EXPECT(0x9c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c86));
        EXPECT(0x11, gbc.readMem(0x9c87));
        // CB 11 0252
        gbc.setState(0xb625, 0xd9ff, 0xd500, 0x725a, 0xbb5b, 0x1d40, 0x1, 0x1);
        gbc.writeMem(0xb625, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd9ff, gbc.sp());
        EXPECT(0xb627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb625));
        EXPECT(0x11, gbc.readMem(0xb626));
        // CB 11 0253
        gbc.setState(0x6c9f, 0x7484, 0x91b0, 0xafea, 0x64d8, 0x992b, 0x1, 0x0);
        gbc.writeMem(0x6c9f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7484, gbc.sp());
        EXPECT(0x6ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0254
        gbc.setState(0x81cb, 0x7748, 0xe90, 0x868d, 0x78a2, 0x7e0d, 0x0, 0x0);
        gbc.writeMem(0x81cb, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7748, gbc.sp());
        EXPECT(0x81cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81cb));
        EXPECT(0x11, gbc.readMem(0x81cc));
        // CB 11 0256
        gbc.setState(0x61ec, 0x58c8, 0x9510, 0xa8d3, 0xfeb3, 0x97d2, 0x1, 0x0);
        gbc.writeMem(0x61ec, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x58c8, gbc.sp());
        EXPECT(0x61ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0257
        gbc.setState(0xd335, 0x3bb8, 0x26a0, 0x2958, 0xcdb5, 0x762f, 0x1, 0x0);
        gbc.writeMem(0xd335, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3bb8, gbc.sp());
        EXPECT(0xd337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd335));
        EXPECT(0x11, gbc.readMem(0xd336));
        // CB 11 0259
        gbc.setState(0x5404, 0xa16c, 0x59a0, 0x1e2b, 0x5331, 0x739c, 0x0, 0x0);
        gbc.writeMem(0x5404, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa16c, gbc.sp());
        EXPECT(0x5406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 025A
        gbc.setState(0xc70f, 0x4e5b, 0xb300, 0x701, 0xcd19, 0x867f, 0x0, 0x0);
        gbc.writeMem(0xc70f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4e5b, gbc.sp());
        EXPECT(0xc711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc70f));
        EXPECT(0x11, gbc.readMem(0xc710));
        // CB 11 025B
        gbc.setState(0xee40, 0x96f2, 0x9ec0, 0x3a5f, 0xa218, 0x35f6, 0x0, 0x0);
        gbc.writeMem(0xee40, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x96f2, gbc.sp());
        EXPECT(0xee42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee40));
        EXPECT(0x11, gbc.readMem(0xee41));
        // CB 11 025C
        gbc.setState(0x5701, 0xf839, 0xae60, 0x9183, 0xe8ef, 0x1562, 0x0, 0x1);
        gbc.writeMem(0x5701, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf839, gbc.sp());
        EXPECT(0x5703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 025D
        gbc.setState(0xd8e0, 0xcd2e, 0xab20, 0x721d, 0x98d1, 0xbff1, 0x1, 0x1);
        gbc.writeMem(0xd8e0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcd2e, gbc.sp());
        EXPECT(0xd8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e0));
        EXPECT(0x11, gbc.readMem(0xd8e1));
        // CB 11 025E
        gbc.setState(0x2c66, 0x4039, 0xc450, 0x98b5, 0x9a3a, 0xfff6, 0x1, 0x0);
        gbc.writeMem(0x2c66, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4039, gbc.sp());
        EXPECT(0x2c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 025F
        gbc.setState(0xa957, 0xb235, 0x3990, 0x3ef4, 0x59, 0x8780, 0x1, 0x1);
        gbc.writeMem(0xa957, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb235, gbc.sp());
        EXPECT(0xa959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa957));
        EXPECT(0x11, gbc.readMem(0xa958));
        // CB 11 0260
        gbc.setState(0x4f80, 0xb759, 0x88a0, 0xdde0, 0x287a, 0x71f5, 0x1, 0x1);
        gbc.writeMem(0x4f80, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb759, gbc.sp());
        EXPECT(0x4f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0261
        gbc.setState(0xe76b, 0xb1f2, 0xc240, 0xb86, 0xb106, 0x6bdd, 0x1, 0x1);
        gbc.writeMem(0xe76b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb1f2, gbc.sp());
        EXPECT(0xe76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76b));
        EXPECT(0x11, gbc.readMem(0xe76c));
        // CB 11 0262
        gbc.setState(0xb8f3, 0x91ff, 0xb170, 0xffda, 0x802a, 0xfffa, 0x0, 0x1);
        gbc.writeMem(0xb8f3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x91ff, gbc.sp());
        EXPECT(0xb8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f3));
        EXPECT(0x11, gbc.readMem(0xb8f4));
        // CB 11 0263
        gbc.setState(0x6e8, 0x8379, 0x2030, 0x993b, 0xaaae, 0x35d5, 0x0, 0x1);
        gbc.writeMem(0x6e8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8379, gbc.sp());
        EXPECT(0x6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0264
        gbc.setState(0x68be, 0x5515, 0x9d70, 0xef1a, 0xb25b, 0xc289, 0x0, 0x1);
        gbc.writeMem(0x68be, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5515, gbc.sp());
        EXPECT(0x68c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0265
        gbc.setState(0x65b1, 0xa2f2, 0x7e80, 0x5b0c, 0x29ab, 0x346e, 0x0, 0x1);
        gbc.writeMem(0x65b1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa2f2, gbc.sp());
        EXPECT(0x65b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0266
        gbc.setState(0x2998, 0x7b22, 0xae60, 0x72b5, 0x6faf, 0x1f26, 0x0, 0x1);
        gbc.writeMem(0x2998, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7b22, gbc.sp());
        EXPECT(0x299a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0267
        gbc.setState(0xeee5, 0xd092, 0x1160, 0x4e66, 0xce5c, 0x7d40, 0x0, 0x1);
        gbc.writeMem(0xeee5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd092, gbc.sp());
        EXPECT(0xeee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee5));
        EXPECT(0x11, gbc.readMem(0xeee6));
        // CB 11 0268
        gbc.setState(0x474e, 0xdbe7, 0xe00, 0xf7f5, 0x61a7, 0x8ebf, 0x0, 0x1);
        gbc.writeMem(0x474e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdbe7, gbc.sp());
        EXPECT(0x4750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0269
        gbc.setState(0x3dcf, 0x523e, 0xd610, 0x2b88, 0x3c91, 0xfe6b, 0x1, 0x1);
        gbc.writeMem(0x3dcf, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x523e, gbc.sp());
        EXPECT(0x3dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 026A
        gbc.setState(0x6da2, 0x152d, 0x99d0, 0xaacc, 0xc09f, 0xf6e5, 0x0, 0x1);
        gbc.writeMem(0x6da2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x152d, gbc.sp());
        EXPECT(0x6da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 026B
        gbc.setState(0xc850, 0xfe00, 0x5b50, 0x6095, 0x1ecf, 0xaff7, 0x1, 0x0);
        gbc.writeMem(0xc850, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfe00, gbc.sp());
        EXPECT(0xc852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc850));
        EXPECT(0x11, gbc.readMem(0xc851));
        // CB 11 026C
        gbc.setState(0x9810, 0x80a, 0xf360, 0x2918, 0xf2b0, 0x8f76, 0x0, 0x1);
        gbc.writeMem(0x9810, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x80a, gbc.sp());
        EXPECT(0x9812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9810));
        EXPECT(0x11, gbc.readMem(0x9811));
        // CB 11 026E
        gbc.setState(0x208e, 0xcd8f, 0xf0b0, 0xa21d, 0xa14e, 0x32ed, 0x1, 0x1);
        gbc.writeMem(0x208e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcd8f, gbc.sp());
        EXPECT(0x2090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 026F
        gbc.setState(0x21ac, 0x7478, 0xef50, 0x7828, 0x2af1, 0x9f44, 0x1, 0x0);
        gbc.writeMem(0x21ac, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7478, gbc.sp());
        EXPECT(0x21ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0270
        gbc.setState(0x9f1, 0x11cf, 0x8670, 0xb5f6, 0x7356, 0x6ff, 0x1, 0x1);
        gbc.writeMem(0x9f1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x11cf, gbc.sp());
        EXPECT(0x9f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0272
        gbc.setState(0xd0e6, 0x5f44, 0xc760, 0x3ffe, 0xf175, 0x90bf, 0x1, 0x0);
        gbc.writeMem(0xd0e6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5f44, gbc.sp());
        EXPECT(0xd0e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e6));
        EXPECT(0x11, gbc.readMem(0xd0e7));
        // CB 11 0273
        gbc.setState(0xb644, 0xefde, 0x8290, 0x4ae3, 0xeb2c, 0xe8b7, 0x1, 0x0);
        gbc.writeMem(0xb644, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xefde, gbc.sp());
        EXPECT(0xb646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb644));
        EXPECT(0x11, gbc.readMem(0xb645));
        // CB 11 0275
        gbc.setState(0xbd55, 0x6f78, 0x56e0, 0xac3e, 0xda0a, 0xc04d, 0x0, 0x0);
        gbc.writeMem(0xbd55, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6f78, gbc.sp());
        EXPECT(0xbd57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd55));
        EXPECT(0x11, gbc.readMem(0xbd56));
        // CB 11 0276
        gbc.setState(0xca82, 0xcfc8, 0x4770, 0x9104, 0x8300, 0xf206, 0x1, 0x0);
        gbc.writeMem(0xca82, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcfc8, gbc.sp());
        EXPECT(0xca84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca82));
        EXPECT(0x11, gbc.readMem(0xca83));
        // CB 11 0277
        gbc.setState(0xcf4c, 0x9595, 0x8370, 0x6b85, 0xd2f3, 0x83dd, 0x0, 0x0);
        gbc.writeMem(0xcf4c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9595, gbc.sp());
        EXPECT(0xcf4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4c));
        EXPECT(0x11, gbc.readMem(0xcf4d));
        // CB 11 0278
        gbc.setState(0x7c43, 0x1dc2, 0x2d80, 0x1b5d, 0x576a, 0x920b, 0x0, 0x1);
        gbc.writeMem(0x7c43, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1dc2, gbc.sp());
        EXPECT(0x7c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0279
        gbc.setState(0xac31, 0x6523, 0xc990, 0xcf2e, 0xe57b, 0x1a54, 0x1, 0x1);
        gbc.writeMem(0xac31, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6523, gbc.sp());
        EXPECT(0xac33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac31));
        EXPECT(0x11, gbc.readMem(0xac32));
        // CB 11 027A
        gbc.setState(0xeed3, 0x6813, 0xb50, 0xb6f0, 0xa9bf, 0x48cb, 0x1, 0x0);
        gbc.writeMem(0xeed3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6813, gbc.sp());
        EXPECT(0xeed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed3));
        EXPECT(0x11, gbc.readMem(0xeed4));
        // CB 11 027B
        gbc.setState(0x8188, 0x56a4, 0x98f0, 0xd955, 0x4fa5, 0x9dd6, 0x0, 0x1);
        gbc.writeMem(0x8188, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x56a4, gbc.sp());
        EXPECT(0x818a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8188));
        EXPECT(0x11, gbc.readMem(0x8189));
        // CB 11 027C
        gbc.setState(0x58e6, 0xa3f7, 0x1340, 0x1cb2, 0xfc50, 0x1606, 0x1, 0x1);
        gbc.writeMem(0x58e6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa3f7, gbc.sp());
        EXPECT(0x58e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 027D
        gbc.setState(0xc162, 0x8e92, 0x8270, 0x7767, 0x75cf, 0x45b8, 0x1, 0x1);
        gbc.writeMem(0xc162, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8e92, gbc.sp());
        EXPECT(0xc164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc162));
        EXPECT(0x11, gbc.readMem(0xc163));
        // CB 11 027E
        gbc.setState(0x140f, 0x28e0, 0x5c90, 0x7a75, 0x5225, 0xce39, 0x1, 0x1);
        gbc.writeMem(0x140f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x28e0, gbc.sp());
        EXPECT(0x1411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 027F
        gbc.setState(0x46de, 0xe61a, 0x6570, 0x6a05, 0xb09f, 0x12e3, 0x0, 0x1);
        gbc.writeMem(0x46de, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe61a, gbc.sp());
        EXPECT(0x46e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0280
        gbc.setState(0x8aa3, 0xa2a7, 0x2b90, 0x78d2, 0x5583, 0x5282, 0x1, 0x0);
        gbc.writeMem(0x8aa3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa2a7, gbc.sp());
        EXPECT(0x8aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa3));
        EXPECT(0x11, gbc.readMem(0x8aa4));
        // CB 11 0281
        gbc.setState(0xeb37, 0xe617, 0x420, 0x4730, 0x70a4, 0x3a3, 0x1, 0x1);
        gbc.writeMem(0xeb37, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe617, gbc.sp());
        EXPECT(0xeb39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb37));
        EXPECT(0x11, gbc.readMem(0xeb38));
        // CB 11 0282
        gbc.setState(0xc17e, 0xe8a4, 0x6d30, 0x8c32, 0xab6f, 0x6668, 0x0, 0x0);
        gbc.writeMem(0xc17e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe8a4, gbc.sp());
        EXPECT(0xc180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc17e));
        EXPECT(0x11, gbc.readMem(0xc17f));
        // CB 11 0283
        gbc.setState(0xd43, 0x13aa, 0xd8c0, 0xe9f3, 0x237d, 0x9e0, 0x1, 0x1);
        gbc.writeMem(0xd43, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x13aa, gbc.sp());
        EXPECT(0xd45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0284
        gbc.setState(0x2996, 0x12d0, 0x9080, 0x8626, 0x33fc, 0x5a92, 0x1, 0x0);
        gbc.writeMem(0x2996, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x12d0, gbc.sp());
        EXPECT(0x2998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0285
        gbc.setState(0xf49, 0x5f40, 0xbab0, 0x83a, 0xed2, 0x5719, 0x0, 0x0);
        gbc.writeMem(0xf49, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5f40, gbc.sp());
        EXPECT(0xf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0286
        gbc.setState(0xdb08, 0x15ff, 0x43c0, 0x349a, 0xe740, 0x8e66, 0x1, 0x1);
        gbc.writeMem(0xdb08, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x15ff, gbc.sp());
        EXPECT(0xdb0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb08));
        EXPECT(0x11, gbc.readMem(0xdb09));
        // CB 11 0287
        gbc.setState(0x7365, 0x1bd7, 0x8130, 0x6902, 0xb4ca, 0x2de9, 0x1, 0x0);
        gbc.writeMem(0x7365, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1bd7, gbc.sp());
        EXPECT(0x7367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0288
        gbc.setState(0xd3da, 0xd4d9, 0x5070, 0x7892, 0xf5f2, 0x197a, 0x1, 0x1);
        gbc.writeMem(0xd3da, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd4d9, gbc.sp());
        EXPECT(0xd3dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3da));
        EXPECT(0x11, gbc.readMem(0xd3db));
        // CB 11 0289
        gbc.setState(0x4b80, 0x58dd, 0xef20, 0xf0a7, 0x6ace, 0xdb2b, 0x1, 0x1);
        gbc.writeMem(0x4b80, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x58dd, gbc.sp());
        EXPECT(0x4b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 028A
        gbc.setState(0x2b33, 0x49a6, 0x6830, 0xe8e6, 0x7082, 0x2bde, 0x1, 0x1);
        gbc.writeMem(0x2b33, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x49a6, gbc.sp());
        EXPECT(0x2b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 028B
        gbc.setState(0x631f, 0x8ec6, 0x7d0, 0xdc80, 0xff24, 0xe775, 0x0, 0x1);
        gbc.writeMem(0x631f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8ec6, gbc.sp());
        EXPECT(0x6321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 028C
        gbc.setState(0xb1e, 0x468b, 0x1390, 0xd2be, 0x9549, 0xb4c7, 0x0, 0x1);
        gbc.writeMem(0xb1e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x468b, gbc.sp());
        EXPECT(0xb20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 028D
        gbc.setState(0x662, 0xd359, 0x5db0, 0x156c, 0xa529, 0xcc86, 0x0, 0x0);
        gbc.writeMem(0x662, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd359, gbc.sp());
        EXPECT(0x664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 028E
        gbc.setState(0xa2b2, 0xd24, 0x4050, 0x3588, 0x1c30, 0x47e0, 0x0, 0x0);
        gbc.writeMem(0xa2b2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd24, gbc.sp());
        EXPECT(0xa2b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b2));
        EXPECT(0x11, gbc.readMem(0xa2b3));
        // CB 11 028F
        gbc.setState(0xc0c7, 0xbcaf, 0x45d0, 0xb696, 0x4f5a, 0x9694, 0x0, 0x0);
        gbc.writeMem(0xc0c7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbcaf, gbc.sp());
        EXPECT(0xc0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c7));
        EXPECT(0x11, gbc.readMem(0xc0c8));
        // CB 11 0290
        gbc.setState(0x2d4c, 0xe9d, 0x11c0, 0x5645, 0x344c, 0x9ab2, 0x0, 0x1);
        gbc.writeMem(0x2d4c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe9d, gbc.sp());
        EXPECT(0x2d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0291
        gbc.setState(0xa136, 0x9246, 0xd160, 0x3443, 0xea52, 0xddeb, 0x1, 0x1);
        gbc.writeMem(0xa136, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9246, gbc.sp());
        EXPECT(0xa138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa136));
        EXPECT(0x11, gbc.readMem(0xa137));
        // CB 11 0292
        gbc.setState(0xe569, 0xc668, 0x1780, 0x8615, 0x8aa3, 0x2e17, 0x0, 0x1);
        gbc.writeMem(0xe569, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc668, gbc.sp());
        EXPECT(0xe56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe569));
        EXPECT(0x11, gbc.readMem(0xe56a));
        // CB 11 0293
        gbc.setState(0xf1b, 0xf934, 0x9030, 0x297c, 0x8e7b, 0xa650, 0x1, 0x1);
        gbc.writeMem(0xf1b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf934, gbc.sp());
        EXPECT(0xf1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0294
        gbc.setState(0xd30, 0x4bcc, 0x1a80, 0x72fb, 0x6303, 0x2ce, 0x0, 0x0);
        gbc.writeMem(0xd30, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4bcc, gbc.sp());
        EXPECT(0xd32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0295
        gbc.setState(0x9ed8, 0xa74e, 0x42f0, 0xacca, 0x460f, 0x26ea, 0x0, 0x0);
        gbc.writeMem(0x9ed8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa74e, gbc.sp());
        EXPECT(0x9eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed8));
        EXPECT(0x11, gbc.readMem(0x9ed9));
        // CB 11 0296
        gbc.setState(0x6010, 0x8cfa, 0x35c0, 0x695a, 0xe95b, 0x40df, 0x1, 0x0);
        gbc.writeMem(0x6010, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8cfa, gbc.sp());
        EXPECT(0x6012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0297
        gbc.setState(0x1be0, 0x4811, 0xfe30, 0xcb53, 0xda77, 0x770e, 0x0, 0x0);
        gbc.writeMem(0x1be0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4811, gbc.sp());
        EXPECT(0x1be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0298
        gbc.setState(0x6606, 0xc490, 0x3420, 0x25e6, 0xf446, 0x7cd3, 0x0, 0x0);
        gbc.writeMem(0x6606, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc490, gbc.sp());
        EXPECT(0x6608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0299
        gbc.setState(0xcd3e, 0xdade, 0xa90, 0x5d78, 0xf162, 0x39d5, 0x1, 0x0);
        gbc.writeMem(0xcd3e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdade, gbc.sp());
        EXPECT(0xcd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3e));
        EXPECT(0x11, gbc.readMem(0xcd3f));
        // CB 11 029A
        gbc.setState(0x4c41, 0x4093, 0x8860, 0xf966, 0xaa97, 0x5009, 0x0, 0x1);
        gbc.writeMem(0x4c41, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4093, gbc.sp());
        EXPECT(0x4c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 029B
        gbc.setState(0x4f73, 0x5f07, 0xe680, 0x1d92, 0xf1d6, 0x9de8, 0x0, 0x0);
        gbc.writeMem(0x4f73, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5f07, gbc.sp());
        EXPECT(0x4f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 029C
        gbc.setState(0xa60e, 0xa5d7, 0xae00, 0x1973, 0xbf4f, 0xa3a8, 0x0, 0x1);
        gbc.writeMem(0xa60e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa5d7, gbc.sp());
        EXPECT(0xa610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60e));
        EXPECT(0x11, gbc.readMem(0xa60f));
        // CB 11 029D
        gbc.setState(0x90a1, 0xb758, 0x2260, 0x6501, 0xf7c8, 0x249e, 0x1, 0x1);
        gbc.writeMem(0x90a1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb758, gbc.sp());
        EXPECT(0x90a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a1));
        EXPECT(0x11, gbc.readMem(0x90a2));
        // CB 11 029E
        gbc.setState(0x390d, 0xc3f, 0xc180, 0x14eb, 0x50d3, 0xe349, 0x1, 0x0);
        gbc.writeMem(0x390d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc3f, gbc.sp());
        EXPECT(0x390f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 029F
        gbc.setState(0x67ae, 0x29b3, 0xa9f0, 0xcfe3, 0xd090, 0xefc5, 0x0, 0x0);
        gbc.writeMem(0x67ae, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x29b3, gbc.sp());
        EXPECT(0x67b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02A0
        gbc.setState(0xb02, 0x742d, 0x3c80, 0x9c64, 0xe4b4, 0xc13f, 0x0, 0x1);
        gbc.writeMem(0xb02, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x742d, gbc.sp());
        EXPECT(0xb04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02A1
        gbc.setState(0x15c7, 0x3941, 0xfd0, 0x9b15, 0x958d, 0x82a2, 0x1, 0x0);
        gbc.writeMem(0x15c7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3941, gbc.sp());
        EXPECT(0x15c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02A2
        gbc.setState(0x1e76, 0x44bf, 0x8d00, 0x7ff4, 0xdfa1, 0xf86c, 0x0, 0x1);
        gbc.writeMem(0x1e76, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x44bf, gbc.sp());
        EXPECT(0x1e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02A3
        gbc.setState(0x32d3, 0xf175, 0x1b50, 0x6efc, 0x393d, 0x5705, 0x1, 0x1);
        gbc.writeMem(0x32d3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf175, gbc.sp());
        EXPECT(0x32d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02A4
        gbc.setState(0x2595, 0x40bf, 0xc790, 0x8be7, 0x9464, 0xf12a, 0x0, 0x1);
        gbc.writeMem(0x2595, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x40bf, gbc.sp());
        EXPECT(0x2597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02A5
        gbc.setState(0xe25a, 0x18b1, 0x5970, 0xe3c7, 0x3ed9, 0x44a5, 0x1, 0x1);
        gbc.writeMem(0xe25a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x18b1, gbc.sp());
        EXPECT(0xe25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25a));
        EXPECT(0x11, gbc.readMem(0xe25b));
        // CB 11 02A6
        gbc.setState(0xc47b, 0x729d, 0x5460, 0x6194, 0x4ccb, 0xcee8, 0x0, 0x0);
        gbc.writeMem(0xc47b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x729d, gbc.sp());
        EXPECT(0xc47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47b));
        EXPECT(0x11, gbc.readMem(0xc47c));
        // CB 11 02A7
        gbc.setState(0x1f3, 0x38d2, 0x4ed0, 0xd70e, 0x70a5, 0xc2aa, 0x1, 0x0);
        gbc.writeMem(0x1f3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x38d2, gbc.sp());
        EXPECT(0x1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02A8
        gbc.setState(0x6fda, 0x3aa8, 0x4be0, 0x219e, 0x4423, 0xf2de, 0x0, 0x0);
        gbc.writeMem(0x6fda, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3aa8, gbc.sp());
        EXPECT(0x6fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02A9
        gbc.setState(0x3a92, 0x44c2, 0xb520, 0x48a8, 0xf6c7, 0x1de, 0x1, 0x1);
        gbc.writeMem(0x3a92, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x44c2, gbc.sp());
        EXPECT(0x3a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02AA
        gbc.setState(0x3ca8, 0xe43, 0x5250, 0x3d8c, 0xd30e, 0xc473, 0x0, 0x1);
        gbc.writeMem(0x3ca8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe43, gbc.sp());
        EXPECT(0x3caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02AC
        gbc.setState(0x4e31, 0x8ffe, 0x7540, 0x7f, 0x4b6c, 0xd390, 0x1, 0x0);
        gbc.writeMem(0x4e31, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8ffe, gbc.sp());
        EXPECT(0x4e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02AD
        gbc.setState(0x8fad, 0x58b2, 0xd4c0, 0x3df1, 0xe5a5, 0xd6e6, 0x1, 0x1);
        gbc.writeMem(0x8fad, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x58b2, gbc.sp());
        EXPECT(0x8faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fad));
        EXPECT(0x11, gbc.readMem(0x8fae));
        // CB 11 02AE
        gbc.setState(0xda33, 0xf7ea, 0x85c0, 0x3228, 0x107e, 0x8d0f, 0x0, 0x1);
        gbc.writeMem(0xda33, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf7ea, gbc.sp());
        EXPECT(0xda35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda33));
        EXPECT(0x11, gbc.readMem(0xda34));
        // CB 11 02AF
        gbc.setState(0x1f3d, 0xf2eb, 0x8400, 0x340f, 0xa5e3, 0x1609, 0x0, 0x0);
        gbc.writeMem(0x1f3d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0x1f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02B0
        gbc.setState(0x1f02, 0x5ee0, 0xf8d0, 0x81cc, 0xa794, 0xff3d, 0x0, 0x0);
        gbc.writeMem(0x1f02, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5ee0, gbc.sp());
        EXPECT(0x1f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02B1
        gbc.setState(0x3e6e, 0xb7a8, 0x3f80, 0x3672, 0xaa04, 0x6d7b, 0x0, 0x0);
        gbc.writeMem(0x3e6e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb7a8, gbc.sp());
        EXPECT(0x3e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02B2
        gbc.setState(0x48f3, 0x2eb4, 0x6400, 0xe5e, 0xdd7f, 0x7c87, 0x0, 0x1);
        gbc.writeMem(0x48f3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2eb4, gbc.sp());
        EXPECT(0x48f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02B3
        gbc.setState(0x537f, 0xcc19, 0xdf50, 0x19, 0xba86, 0x2b0d, 0x1, 0x1);
        gbc.writeMem(0x537f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcc19, gbc.sp());
        EXPECT(0x5381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02B4
        gbc.setState(0x7dad, 0xe667, 0x3a30, 0xc2ee, 0xe6b5, 0x57a7, 0x1, 0x1);
        gbc.writeMem(0x7dad, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe667, gbc.sp());
        EXPECT(0x7daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02B5
        gbc.setState(0x7569, 0x87da, 0xb000, 0x96a5, 0x52c3, 0x9ec6, 0x0, 0x1);
        gbc.writeMem(0x7569, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x87da, gbc.sp());
        EXPECT(0x756b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02B6
        gbc.setState(0x456c, 0x4eac, 0xab10, 0x85e4, 0xe6b3, 0x5ec8, 0x0, 0x1);
        gbc.writeMem(0x456c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4eac, gbc.sp());
        EXPECT(0x456e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02B9
        gbc.setState(0x380e, 0x30ce, 0xc3a0, 0x111d, 0xb772, 0x59ed, 0x1, 0x0);
        gbc.writeMem(0x380e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x30ce, gbc.sp());
        EXPECT(0x3810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02BA
        gbc.setState(0x453d, 0xc297, 0x3de0, 0xcc17, 0xdde1, 0x3bf3, 0x1, 0x0);
        gbc.writeMem(0x453d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc297, gbc.sp());
        EXPECT(0x453f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02BC
        gbc.setState(0x9441, 0x9151, 0x2410, 0x124e, 0xffc9, 0x598a, 0x0, 0x1);
        gbc.writeMem(0x9441, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9151, gbc.sp());
        EXPECT(0x9443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9441));
        EXPECT(0x11, gbc.readMem(0x9442));
        // CB 11 02BD
        gbc.setState(0x93c7, 0x2558, 0x1e60, 0x31dd, 0xee2c, 0xf30e, 0x1, 0x0);
        gbc.writeMem(0x93c7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2558, gbc.sp());
        EXPECT(0x93c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c7));
        EXPECT(0x11, gbc.readMem(0x93c8));
        // CB 11 02BE
        gbc.setState(0x5807, 0x56a7, 0x2a80, 0x3ead, 0x3041, 0xb51, 0x0, 0x0);
        gbc.writeMem(0x5807, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x56a7, gbc.sp());
        EXPECT(0x5809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02BF
        gbc.setState(0xa0be, 0x667f, 0xb820, 0x73bc, 0xf105, 0xdfab, 0x1, 0x1);
        gbc.writeMem(0xa0be, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x667f, gbc.sp());
        EXPECT(0xa0c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0be));
        EXPECT(0x11, gbc.readMem(0xa0bf));
        // CB 11 02C0
        gbc.setState(0x1ca4, 0xbedc, 0xe200, 0xf32c, 0x1347, 0xad75, 0x1, 0x0);
        gbc.writeMem(0x1ca4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbedc, gbc.sp());
        EXPECT(0x1ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02C1
        gbc.setState(0x27d9, 0xe3e7, 0xc9c0, 0xba1a, 0x5beb, 0xe110, 0x0, 0x0);
        gbc.writeMem(0x27d9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe3e7, gbc.sp());
        EXPECT(0x27db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02C3
        gbc.setState(0x1940, 0x1a49, 0xdff0, 0xb828, 0x9b2, 0x61b6, 0x1, 0x0);
        gbc.writeMem(0x1940, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1a49, gbc.sp());
        EXPECT(0x1942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02C4
        gbc.setState(0xa128, 0x4066, 0xb470, 0x7be4, 0x3a8f, 0xf548, 0x0, 0x1);
        gbc.writeMem(0xa128, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4066, gbc.sp());
        EXPECT(0xa12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa128));
        EXPECT(0x11, gbc.readMem(0xa129));
        // CB 11 02C5
        gbc.setState(0xcf22, 0x2ad7, 0x6a10, 0x2793, 0x6bd6, 0xbbd1, 0x0, 0x0);
        gbc.writeMem(0xcf22, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2ad7, gbc.sp());
        EXPECT(0xcf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf22));
        EXPECT(0x11, gbc.readMem(0xcf23));
        // CB 11 02C6
        gbc.setState(0x8aaf, 0xe31f, 0x4920, 0x2df3, 0x2bdf, 0xdcfa, 0x1, 0x1);
        gbc.writeMem(0x8aaf, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe31f, gbc.sp());
        EXPECT(0x8ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aaf));
        EXPECT(0x11, gbc.readMem(0x8ab0));
        // CB 11 02C7
        gbc.setState(0x7bd1, 0x4fcb, 0x9370, 0xaabe, 0xa704, 0x5f12, 0x1, 0x0);
        gbc.writeMem(0x7bd1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4fcb, gbc.sp());
        EXPECT(0x7bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02C8
        gbc.setState(0xca6f, 0x17c, 0x4c60, 0x3587, 0x7978, 0x70ff, 0x0, 0x0);
        gbc.writeMem(0xca6f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x17c, gbc.sp());
        EXPECT(0xca71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6f));
        EXPECT(0x11, gbc.readMem(0xca70));
        // CB 11 02C9
        gbc.setState(0x84b4, 0x618f, 0x7e60, 0xb92f, 0x2b7e, 0xbdfb, 0x1, 0x1);
        gbc.writeMem(0x84b4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x618f, gbc.sp());
        EXPECT(0x84b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b4));
        EXPECT(0x11, gbc.readMem(0x84b5));
        // CB 11 02CA
        gbc.setState(0x74f5, 0xcfb8, 0x58f0, 0xad9e, 0x9aef, 0xc6a6, 0x1, 0x1);
        gbc.writeMem(0x74f5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcfb8, gbc.sp());
        EXPECT(0x74f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02CB
        gbc.setState(0x2c4a, 0x80f0, 0x4d90, 0x6b16, 0xfdec, 0x23bd, 0x1, 0x0);
        gbc.writeMem(0x2c4a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x80f0, gbc.sp());
        EXPECT(0x2c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02CC
        gbc.setState(0x5b1f, 0xcd05, 0xe9d0, 0xdd8d, 0x915e, 0x62d2, 0x1, 0x1);
        gbc.writeMem(0x5b1f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcd05, gbc.sp());
        EXPECT(0x5b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02CE
        gbc.setState(0x239c, 0xdcd8, 0xc6c0, 0x36ce, 0x77ee, 0x6c8, 0x1, 0x1);
        gbc.writeMem(0x239c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdcd8, gbc.sp());
        EXPECT(0x239e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02CF
        gbc.setState(0x3061, 0xce2b, 0x94c0, 0x23a5, 0x2ac8, 0x8d1f, 0x1, 0x0);
        gbc.writeMem(0x3061, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0x3063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02D0
        gbc.setState(0x57c5, 0xd8f0, 0x1880, 0xa412, 0xdabc, 0x526, 0x1, 0x0);
        gbc.writeMem(0x57c5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd8f0, gbc.sp());
        EXPECT(0x57c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02D1
        gbc.setState(0xb99f, 0xb9a2, 0xeec0, 0x494f, 0xab99, 0x8ecd, 0x1, 0x0);
        gbc.writeMem(0xb99f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb9a2, gbc.sp());
        EXPECT(0xb9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99f));
        EXPECT(0x11, gbc.readMem(0xb9a0));
        // CB 11 02D2
        gbc.setState(0x51ac, 0x11b3, 0x3530, 0x2d9f, 0xe6eb, 0x170, 0x1, 0x0);
        gbc.writeMem(0x51ac, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x11b3, gbc.sp());
        EXPECT(0x51ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02D3
        gbc.setState(0x61a2, 0x7d38, 0x50d0, 0x9cd7, 0x144, 0x3d5c, 0x0, 0x0);
        gbc.writeMem(0x61a2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7d38, gbc.sp());
        EXPECT(0x61a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02D5
        gbc.setState(0x5daf, 0x87ff, 0x6f10, 0xad0a, 0xeb79, 0xe15d, 0x0, 0x1);
        gbc.writeMem(0x5daf, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x87ff, gbc.sp());
        EXPECT(0x5db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02D6
        gbc.setState(0x19c9, 0xcec5, 0x2aa0, 0xa38c, 0xdde8, 0xd455, 0x0, 0x0);
        gbc.writeMem(0x19c9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcec5, gbc.sp());
        EXPECT(0x19cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02D7
        gbc.setState(0x352, 0x6aeb, 0x57c0, 0x584e, 0x8abf, 0x7c05, 0x1, 0x0);
        gbc.writeMem(0x352, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6aeb, gbc.sp());
        EXPECT(0x354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02D8
        gbc.setState(0x9169, 0xd1d, 0xc0a0, 0x54a9, 0x5c5b, 0x4a07, 0x0, 0x0);
        gbc.writeMem(0x9169, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd1d, gbc.sp());
        EXPECT(0x916b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9169));
        EXPECT(0x11, gbc.readMem(0x916a));
        // CB 11 02D9
        gbc.setState(0x7fed, 0x964f, 0x9c30, 0x36bb, 0xd252, 0x3dbf, 0x0, 0x0);
        gbc.writeMem(0x7fed, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x964f, gbc.sp());
        EXPECT(0x7fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02DA
        gbc.setState(0xdcbb, 0xc68f, 0x5190, 0xebaf, 0x7648, 0x7c1, 0x0, 0x0);
        gbc.writeMem(0xdcbb, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc68f, gbc.sp());
        EXPECT(0xdcbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbb));
        EXPECT(0x11, gbc.readMem(0xdcbc));
        // CB 11 02DB
        gbc.setState(0xd857, 0x51b7, 0xdd50, 0x5a4a, 0xc31d, 0xcbe, 0x1, 0x0);
        gbc.writeMem(0xd857, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x51b7, gbc.sp());
        EXPECT(0xd859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd857));
        EXPECT(0x11, gbc.readMem(0xd858));
        // CB 11 02DC
        gbc.setState(0xda19, 0xf3b8, 0xb9a0, 0x7a04, 0x5f8f, 0x10d2, 0x0, 0x1);
        gbc.writeMem(0xda19, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf3b8, gbc.sp());
        EXPECT(0xda1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda19));
        EXPECT(0x11, gbc.readMem(0xda1a));
        // CB 11 02DD
        gbc.setState(0xcee7, 0xac05, 0xb4b0, 0x92ea, 0x7d57, 0x746e, 0x0, 0x0);
        gbc.writeMem(0xcee7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xac05, gbc.sp());
        EXPECT(0xcee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee7));
        EXPECT(0x11, gbc.readMem(0xcee8));
        // CB 11 02DE
        gbc.setState(0x405d, 0xb6b6, 0x1790, 0x5a31, 0x947f, 0x4e17, 0x1, 0x0);
        gbc.writeMem(0x405d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb6b6, gbc.sp());
        EXPECT(0x405f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02DF
        gbc.setState(0xc9, 0x65f2, 0xc3e0, 0x9538, 0x73c0, 0xc00b, 0x0, 0x0);
        gbc.writeMem(0xc9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x65f2, gbc.sp());
        EXPECT(0xcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02E1
        gbc.setState(0xc8ac, 0xcb21, 0x67a0, 0xded, 0xad4c, 0x44b4, 0x1, 0x0);
        gbc.writeMem(0xc8ac, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcb21, gbc.sp());
        EXPECT(0xc8ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ac));
        EXPECT(0x11, gbc.readMem(0xc8ad));
        // CB 11 02E2
        gbc.setState(0x9a41, 0xd27e, 0x5780, 0xcf5c, 0xbabe, 0xbe54, 0x0, 0x1);
        gbc.writeMem(0x9a41, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd27e, gbc.sp());
        EXPECT(0x9a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a41));
        EXPECT(0x11, gbc.readMem(0x9a42));
        // CB 11 02E3
        gbc.setState(0x83d5, 0x8250, 0x12e0, 0x60e1, 0x80d6, 0x7930, 0x0, 0x0);
        gbc.writeMem(0x83d5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8250, gbc.sp());
        EXPECT(0x83d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d5));
        EXPECT(0x11, gbc.readMem(0x83d6));
        // CB 11 02E4
        gbc.setState(0x10cf, 0x6735, 0xcc30, 0x4737, 0x1757, 0x1130, 0x0, 0x0);
        gbc.writeMem(0x10cf, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6735, gbc.sp());
        EXPECT(0x10d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02E5
        gbc.setState(0xe2f6, 0xc88, 0x3490, 0xf3e7, 0xa87f, 0x5cb2, 0x0, 0x0);
        gbc.writeMem(0xe2f6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc88, gbc.sp());
        EXPECT(0xe2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f6));
        EXPECT(0x11, gbc.readMem(0xe2f7));
        // CB 11 02E6
        gbc.setState(0x1d4c, 0xfb69, 0x44e0, 0x8a68, 0xd61a, 0x4e5e, 0x1, 0x1);
        gbc.writeMem(0x1d4c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfb69, gbc.sp());
        EXPECT(0x1d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02E7
        gbc.setState(0x400c, 0x4c00, 0xa1b0, 0x4b0c, 0xa465, 0xae03, 0x0, 0x1);
        gbc.writeMem(0x400c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4c00, gbc.sp());
        EXPECT(0x400e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02E8
        gbc.setState(0x93af, 0x579, 0xdde0, 0xa35f, 0xf105, 0x25ca, 0x1, 0x1);
        gbc.writeMem(0x93af, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x579, gbc.sp());
        EXPECT(0x93b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93af));
        EXPECT(0x11, gbc.readMem(0x93b0));
        // CB 11 02E9
        gbc.setState(0x2740, 0x5d98, 0xe270, 0xb5fc, 0xd669, 0xee67, 0x0, 0x0);
        gbc.writeMem(0x2740, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5d98, gbc.sp());
        EXPECT(0x2742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02EA
        gbc.setState(0x5da6, 0x71d1, 0xf020, 0xb1f6, 0x7c2d, 0x625, 0x1, 0x0);
        gbc.writeMem(0x5da6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x71d1, gbc.sp());
        EXPECT(0x5da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02EB
        gbc.setState(0x14f3, 0x8eec, 0x1490, 0xb743, 0x6422, 0x25e8, 0x0, 0x1);
        gbc.writeMem(0x14f3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8eec, gbc.sp());
        EXPECT(0x14f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02EC
        gbc.setState(0x6bc, 0xae14, 0xa140, 0x802d, 0xe6a2, 0x82e4, 0x0, 0x0);
        gbc.writeMem(0x6bc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xae14, gbc.sp());
        EXPECT(0x6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02ED
        gbc.setState(0x5d70, 0x7421, 0x6c90, 0xb71e, 0x50b9, 0x2204, 0x1, 0x1);
        gbc.writeMem(0x5d70, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7421, gbc.sp());
        EXPECT(0x5d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02EE
        gbc.setState(0x9b9a, 0xbbd5, 0x83f0, 0x1f2, 0x9ca3, 0xd15f, 0x1, 0x0);
        gbc.writeMem(0x9b9a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbbd5, gbc.sp());
        EXPECT(0x9b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b9a));
        EXPECT(0x11, gbc.readMem(0x9b9b));
        // CB 11 02EF
        gbc.setState(0xa004, 0x9be2, 0xe0c0, 0xa09d, 0xa584, 0xcdf2, 0x0, 0x0);
        gbc.writeMem(0xa004, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9be2, gbc.sp());
        EXPECT(0xa006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa004));
        EXPECT(0x11, gbc.readMem(0xa005));
        // CB 11 02F0
        gbc.setState(0xc648, 0x54a9, 0xa10, 0xb771, 0x79b5, 0x16bb, 0x0, 0x0);
        gbc.writeMem(0xc648, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x54a9, gbc.sp());
        EXPECT(0xc64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc648));
        EXPECT(0x11, gbc.readMem(0xc649));
        // CB 11 02F1
        gbc.setState(0x332e, 0x69d9, 0x41d0, 0xf49e, 0xcdf4, 0xcfc6, 0x1, 0x1);
        gbc.writeMem(0x332e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x69d9, gbc.sp());
        EXPECT(0x3330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02F2
        gbc.setState(0x9997, 0x52b1, 0x8e60, 0x4609, 0xcbb, 0xe0ed, 0x1, 0x1);
        gbc.writeMem(0x9997, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x52b1, gbc.sp());
        EXPECT(0x9999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9997));
        EXPECT(0x11, gbc.readMem(0x9998));
        // CB 11 02F3
        gbc.setState(0x80d1, 0x2b54, 0x2f20, 0xd04d, 0xf80d, 0x59a4, 0x0, 0x1);
        gbc.writeMem(0x80d1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2b54, gbc.sp());
        EXPECT(0x80d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d1));
        EXPECT(0x11, gbc.readMem(0x80d2));
        // CB 11 02F4
        gbc.setState(0x986b, 0xda5e, 0xa4e0, 0x8a97, 0x44b6, 0xb9d2, 0x0, 0x0);
        gbc.writeMem(0x986b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xda5e, gbc.sp());
        EXPECT(0x986d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x986b));
        EXPECT(0x11, gbc.readMem(0x986c));
        // CB 11 02F5
        gbc.setState(0x21ce, 0x7458, 0x7c90, 0x6151, 0x4225, 0x6837, 0x0, 0x1);
        gbc.writeMem(0x21ce, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7458, gbc.sp());
        EXPECT(0x21d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02F6
        gbc.setState(0x1c20, 0x5932, 0xce60, 0xe398, 0x1c39, 0xaea6, 0x1, 0x1);
        gbc.writeMem(0x1c20, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5932, gbc.sp());
        EXPECT(0x1c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02F7
        gbc.setState(0xb23b, 0xa840, 0x1af0, 0x9b64, 0x9af7, 0x331a, 0x0, 0x1);
        gbc.writeMem(0xb23b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa840, gbc.sp());
        EXPECT(0xb23d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb23b));
        EXPECT(0x11, gbc.readMem(0xb23c));
        // CB 11 02F8
        gbc.setState(0x243e, 0xe1c6, 0xcd80, 0x30c6, 0x1fc5, 0xa6be, 0x0, 0x1);
        gbc.writeMem(0x243e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe1c6, gbc.sp());
        EXPECT(0x2440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 02FA
        gbc.setState(0xec16, 0xeed3, 0x31e0, 0x4fa1, 0x2df2, 0x30f9, 0x1, 0x0);
        gbc.writeMem(0xec16, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xeed3, gbc.sp());
        EXPECT(0xec18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec16));
        EXPECT(0x11, gbc.readMem(0xec17));
        // CB 11 02FC
        gbc.setState(0xd8f9, 0x23e4, 0x6660, 0x5ce8, 0x2afb, 0x8f92, 0x1, 0x0);
        gbc.writeMem(0xd8f9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x23e4, gbc.sp());
        EXPECT(0xd8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f9));
        EXPECT(0x11, gbc.readMem(0xd8fa));
        // CB 11 02FD
        gbc.setState(0xcf97, 0x35b7, 0x7bd0, 0x6c58, 0x7c60, 0x6c5d, 0x1, 0x0);
        gbc.writeMem(0xcf97, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x35b7, gbc.sp());
        EXPECT(0xcf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf97));
        EXPECT(0x11, gbc.readMem(0xcf98));
        // CB 11 02FE
        gbc.setState(0x4eff, 0xc86e, 0xda80, 0xbe5d, 0xb37c, 0x886d, 0x0, 0x1);
        gbc.writeMem(0x4eff, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc86e, gbc.sp());
        EXPECT(0x4f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 02FF
        gbc.setState(0xd2da, 0xa233, 0x6b30, 0xe9, 0xe1b, 0x1d2, 0x0, 0x0);
        gbc.writeMem(0xd2da, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa233, gbc.sp());
        EXPECT(0xd2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2da));
        EXPECT(0x11, gbc.readMem(0xd2db));
        // CB 11 0300
        gbc.setState(0x3336, 0xa214, 0x1a40, 0x9279, 0xe962, 0xab5e, 0x0, 0x1);
        gbc.writeMem(0x3336, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa214, gbc.sp());
        EXPECT(0x3338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0302
        gbc.setState(0xe48c, 0x751a, 0x5420, 0x8604, 0x20e8, 0x17d0, 0x1, 0x1);
        gbc.writeMem(0xe48c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x751a, gbc.sp());
        EXPECT(0xe48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48c));
        EXPECT(0x11, gbc.readMem(0xe48d));
        // CB 11 0303
        gbc.setState(0x444b, 0xb57d, 0x6450, 0x7519, 0xdfcd, 0x850e, 0x1, 0x1);
        gbc.writeMem(0x444b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb57d, gbc.sp());
        EXPECT(0x444d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0304
        gbc.setState(0x4ea9, 0x4793, 0xaa70, 0xc7bc, 0xc516, 0xd4e3, 0x1, 0x0);
        gbc.writeMem(0x4ea9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4793, gbc.sp());
        EXPECT(0x4eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0305
        gbc.setState(0x6068, 0x1284, 0x8cf0, 0x771c, 0x2d1d, 0x8628, 0x1, 0x0);
        gbc.writeMem(0x6068, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1284, gbc.sp());
        EXPECT(0x606a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0306
        gbc.setState(0xd164, 0xe225, 0x7960, 0x2bb5, 0x3888, 0x416, 0x0, 0x0);
        gbc.writeMem(0xd164, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe225, gbc.sp());
        EXPECT(0xd166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd164));
        EXPECT(0x11, gbc.readMem(0xd165));
        // CB 11 0307
        gbc.setState(0x1b29, 0xd095, 0xc2e0, 0x42cb, 0x7765, 0xe0bf, 0x1, 0x1);
        gbc.writeMem(0x1b29, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd095, gbc.sp());
        EXPECT(0x1b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0308
        gbc.setState(0x35c, 0xe140, 0x22e0, 0x5217, 0xf66e, 0x9a6c, 0x1, 0x1);
        gbc.writeMem(0x35c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe140, gbc.sp());
        EXPECT(0x35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0309
        gbc.setState(0x8f50, 0x43ae, 0xdcd0, 0xe321, 0xad61, 0x379c, 0x0, 0x0);
        gbc.writeMem(0x8f50, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x43ae, gbc.sp());
        EXPECT(0x8f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f50));
        EXPECT(0x11, gbc.readMem(0x8f51));
        // CB 11 030A
        gbc.setState(0x374, 0xd821, 0x4130, 0xcfd4, 0xbdb2, 0x2328, 0x0, 0x1);
        gbc.writeMem(0x374, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd821, gbc.sp());
        EXPECT(0x376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 030C
        gbc.setState(0x4b21, 0xe0c2, 0x7190, 0x87dc, 0xa443, 0x6175, 0x1, 0x0);
        gbc.writeMem(0x4b21, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe0c2, gbc.sp());
        EXPECT(0x4b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 030D
        gbc.setState(0x38e0, 0x58d, 0x8540, 0x34d0, 0xd40c, 0xef65, 0x1, 0x1);
        gbc.writeMem(0x38e0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x58d, gbc.sp());
        EXPECT(0x38e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 030E
        gbc.setState(0x7e41, 0x6eb0, 0xb820, 0xc401, 0xfe7b, 0x80d1, 0x1, 0x1);
        gbc.writeMem(0x7e41, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6eb0, gbc.sp());
        EXPECT(0x7e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 030F
        gbc.setState(0xcd5d, 0x208c, 0xc330, 0x1b7c, 0x3028, 0x8ee9, 0x1, 0x0);
        gbc.writeMem(0xcd5d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x208c, gbc.sp());
        EXPECT(0xcd5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5d));
        EXPECT(0x11, gbc.readMem(0xcd5e));
        // CB 11 0310
        gbc.setState(0xdc25, 0x2871, 0x7be0, 0xae12, 0xd390, 0x94a1, 0x0, 0x0);
        gbc.writeMem(0xdc25, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2871, gbc.sp());
        EXPECT(0xdc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc25));
        EXPECT(0x11, gbc.readMem(0xdc26));
        // CB 11 0311
        gbc.setState(0x1a71, 0x42b1, 0xbfb0, 0xd5dd, 0xe644, 0x37d8, 0x1, 0x0);
        gbc.writeMem(0x1a71, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x42b1, gbc.sp());
        EXPECT(0x1a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0312
        gbc.setState(0x6d20, 0xd7ff, 0xbfd0, 0x2c0f, 0xfad0, 0x3b4f, 0x0, 0x0);
        gbc.writeMem(0x6d20, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd7ff, gbc.sp());
        EXPECT(0x6d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0313
        gbc.setState(0xa5bd, 0x5517, 0x21f0, 0xbc91, 0x9806, 0x66c7, 0x1, 0x0);
        gbc.writeMem(0xa5bd, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5517, gbc.sp());
        EXPECT(0xa5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5bd));
        EXPECT(0x11, gbc.readMem(0xa5be));
        // CB 11 0314
        gbc.setState(0x13c3, 0xbe4b, 0x6530, 0xd2bb, 0xbc2b, 0x267c, 0x0, 0x0);
        gbc.writeMem(0x13c3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbe4b, gbc.sp());
        EXPECT(0x13c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0315
        gbc.setState(0xdcb2, 0x5e95, 0xbc70, 0xf57f, 0x195e, 0xe3b8, 0x0, 0x1);
        gbc.writeMem(0xdcb2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5e95, gbc.sp());
        EXPECT(0xdcb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb2));
        EXPECT(0x11, gbc.readMem(0xdcb3));
        // CB 11 0316
        gbc.setState(0x8456, 0xa31c, 0xa710, 0xde2, 0xe7df, 0x8f2a, 0x1, 0x0);
        gbc.writeMem(0x8456, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa31c, gbc.sp());
        EXPECT(0x8458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8456));
        EXPECT(0x11, gbc.readMem(0x8457));
        // CB 11 0317
        gbc.setState(0xc2dc, 0x9147, 0xbf70, 0x12cd, 0xa027, 0x13df, 0x1, 0x0);
        gbc.writeMem(0xc2dc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9147, gbc.sp());
        EXPECT(0xc2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2dc));
        EXPECT(0x11, gbc.readMem(0xc2dd));
        // CB 11 0318
        gbc.setState(0x521d, 0xd2cf, 0x7eb0, 0x3c28, 0xe1bd, 0xdab1, 0x0, 0x1);
        gbc.writeMem(0x521d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd2cf, gbc.sp());
        EXPECT(0x521f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0319
        gbc.setState(0x4a27, 0xe32d, 0x3580, 0x8ed9, 0x6187, 0x8d79, 0x0, 0x0);
        gbc.writeMem(0x4a27, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe32d, gbc.sp());
        EXPECT(0x4a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 031A
        gbc.setState(0x51dc, 0xf47d, 0x640, 0x9d68, 0xa5b6, 0x6ea0, 0x0, 0x0);
        gbc.writeMem(0x51dc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf47d, gbc.sp());
        EXPECT(0x51de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 031B
        gbc.setState(0x7f8c, 0x1509, 0xda40, 0xaf66, 0xb8b4, 0x5023, 0x1, 0x0);
        gbc.writeMem(0x7f8c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1509, gbc.sp());
        EXPECT(0x7f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 031C
        gbc.setState(0x3dc1, 0xe205, 0x3bf0, 0xa474, 0x9caa, 0xfc7f, 0x0, 0x0);
        gbc.writeMem(0x3dc1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe205, gbc.sp());
        EXPECT(0x3dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 031D
        gbc.setState(0x4ad0, 0x533, 0x2420, 0xeaed, 0xef6f, 0x4c4d, 0x1, 0x1);
        gbc.writeMem(0x4ad0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x533, gbc.sp());
        EXPECT(0x4ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 031E
        gbc.setState(0xdd87, 0x3086, 0x1d70, 0xbcc2, 0xe8e3, 0xbf3c, 0x0, 0x0);
        gbc.writeMem(0xdd87, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3086, gbc.sp());
        EXPECT(0xdd89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd87));
        EXPECT(0x11, gbc.readMem(0xdd88));
        // CB 11 0320
        gbc.setState(0xb6a, 0xb44a, 0xc7c0, 0x936d, 0x46ab, 0xb184, 0x0, 0x0);
        gbc.writeMem(0xb6a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb44a, gbc.sp());
        EXPECT(0xb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0321
        gbc.setState(0x2a3d, 0xea58, 0xe7f0, 0xd032, 0x4399, 0x93fa, 0x1, 0x0);
        gbc.writeMem(0x2a3d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xea58, gbc.sp());
        EXPECT(0x2a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0322
        gbc.setState(0x6156, 0x6bfd, 0x67c0, 0x329f, 0x2ef6, 0x83bd, 0x1, 0x1);
        gbc.writeMem(0x6156, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6bfd, gbc.sp());
        EXPECT(0x6158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0323
        gbc.setState(0x11f9, 0xafda, 0x6300, 0x492a, 0x1f50, 0x7cae, 0x1, 0x0);
        gbc.writeMem(0x11f9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xafda, gbc.sp());
        EXPECT(0x11fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0324
        gbc.setState(0x6ad9, 0xb01e, 0x8b70, 0xe526, 0xdb01, 0xe936, 0x0, 0x0);
        gbc.writeMem(0x6ad9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb01e, gbc.sp());
        EXPECT(0x6adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0325
        gbc.setState(0xe823, 0x2deb, 0xe0e0, 0x4092, 0x439b, 0xd7b0, 0x0, 0x1);
        gbc.writeMem(0xe823, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2deb, gbc.sp());
        EXPECT(0xe825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe823));
        EXPECT(0x11, gbc.readMem(0xe824));
        // CB 11 0326
        gbc.setState(0xe7c7, 0x9f96, 0x380, 0xf674, 0x776e, 0xcbac, 0x0, 0x0);
        gbc.writeMem(0xe7c7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9f96, gbc.sp());
        EXPECT(0xe7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c7));
        EXPECT(0x11, gbc.readMem(0xe7c8));
        // CB 11 0327
        gbc.setState(0x33e9, 0x58c3, 0xcd70, 0xd29, 0x26b4, 0xf84f, 0x1, 0x0);
        gbc.writeMem(0x33e9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x58c3, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0329
        gbc.setState(0xce4f, 0x94b9, 0x73c0, 0x53af, 0x2b0c, 0x18d8, 0x1, 0x1);
        gbc.writeMem(0xce4f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x94b9, gbc.sp());
        EXPECT(0xce51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4f));
        EXPECT(0x11, gbc.readMem(0xce50));
        // CB 11 032C
        gbc.setState(0x104c, 0x40d0, 0xd7f0, 0xe506, 0x6d8, 0x360d, 0x1, 0x0);
        gbc.writeMem(0x104c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x40d0, gbc.sp());
        EXPECT(0x104e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 032D
        gbc.setState(0x62d8, 0x8657, 0x17c0, 0x4016, 0xbb75, 0xe073, 0x0, 0x0);
        gbc.writeMem(0x62d8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8657, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 032E
        gbc.setState(0xd4ff, 0x9225, 0x2400, 0xc514, 0x7ee, 0xadc, 0x0, 0x0);
        gbc.writeMem(0xd4ff, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9225, gbc.sp());
        EXPECT(0xd501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ff));
        EXPECT(0x11, gbc.readMem(0xd500));
        // CB 11 032F
        gbc.setState(0x43c6, 0x3563, 0x630, 0xcfb7, 0x9297, 0x678d, 0x0, 0x0);
        gbc.writeMem(0x43c6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3563, gbc.sp());
        EXPECT(0x43c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0330
        gbc.setState(0x5681, 0xf9d3, 0x5dc0, 0xb392, 0xe41, 0xf209, 0x1, 0x1);
        gbc.writeMem(0x5681, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf9d3, gbc.sp());
        EXPECT(0x5683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0331
        gbc.setState(0x5fe0, 0x2d70, 0x4610, 0x8de4, 0x4036, 0xeb2f, 0x0, 0x0);
        gbc.writeMem(0x5fe0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2d70, gbc.sp());
        EXPECT(0x5fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0332
        gbc.setState(0x61, 0x533, 0xc390, 0xb861, 0xf0d, 0x4e2f, 0x1, 0x1);
        gbc.writeMem(0x61, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x533, gbc.sp());
        EXPECT(0x63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0333
        gbc.setState(0x34d5, 0xfd8c, 0x5530, 0x901e, 0x693e, 0x16bd, 0x1, 0x1);
        gbc.writeMem(0x34d5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfd8c, gbc.sp());
        EXPECT(0x34d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0334
        gbc.setState(0x9e27, 0xbfd2, 0x6ca0, 0xd371, 0x8962, 0xd8fb, 0x0, 0x1);
        gbc.writeMem(0x9e27, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbfd2, gbc.sp());
        EXPECT(0x9e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e27));
        EXPECT(0x11, gbc.readMem(0x9e28));
        // CB 11 0337
        gbc.setState(0x97e6, 0xfd77, 0x2130, 0xa4d8, 0x8f6d, 0xf14b, 0x0, 0x0);
        gbc.writeMem(0x97e6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfd77, gbc.sp());
        EXPECT(0x97e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e6));
        EXPECT(0x11, gbc.readMem(0x97e7));
        // CB 11 0338
        gbc.setState(0x9a35, 0xff3f, 0x1120, 0xa3a1, 0x6f7a, 0xeb65, 0x1, 0x1);
        gbc.writeMem(0x9a35, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xff3f, gbc.sp());
        EXPECT(0x9a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a35));
        EXPECT(0x11, gbc.readMem(0x9a36));
        // CB 11 0339
        gbc.setState(0xe0a1, 0xd9d2, 0xeac0, 0x9ed2, 0xdb70, 0x5fb5, 0x0, 0x1);
        gbc.writeMem(0xe0a1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd9d2, gbc.sp());
        EXPECT(0xe0a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a1));
        EXPECT(0x11, gbc.readMem(0xe0a2));
        // CB 11 033A
        gbc.setState(0x1e92, 0x2f82, 0x92b0, 0x59e5, 0xbf45, 0x1695, 0x0, 0x1);
        gbc.writeMem(0x1e92, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2f82, gbc.sp());
        EXPECT(0x1e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 033B
        gbc.setState(0xbf8a, 0x4a33, 0xb3c0, 0x39b7, 0x9a1c, 0xaff2, 0x1, 0x1);
        gbc.writeMem(0xbf8a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4a33, gbc.sp());
        EXPECT(0xbf8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8a));
        EXPECT(0x11, gbc.readMem(0xbf8b));
        // CB 11 033C
        gbc.setState(0xe87a, 0xecb2, 0x6d80, 0xf5fb, 0x2092, 0xd0e1, 0x1, 0x0);
        gbc.writeMem(0xe87a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xecb2, gbc.sp());
        EXPECT(0xe87c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87a));
        EXPECT(0x11, gbc.readMem(0xe87b));
        // CB 11 033D
        gbc.setState(0x13f5, 0x6f06, 0xc2b0, 0x165b, 0xc3ef, 0x6587, 0x1, 0x1);
        gbc.writeMem(0x13f5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6f06, gbc.sp());
        EXPECT(0x13f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 033E
        gbc.setState(0x9208, 0xc186, 0xc3f0, 0x9f87, 0x5854, 0x5e48, 0x0, 0x0);
        gbc.writeMem(0x9208, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc186, gbc.sp());
        EXPECT(0x920a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9208));
        EXPECT(0x11, gbc.readMem(0x9209));
        // CB 11 033F
        gbc.setState(0x615b, 0xbac7, 0xe0d0, 0x1080, 0x9f15, 0xe50, 0x1, 0x1);
        gbc.writeMem(0x615b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbac7, gbc.sp());
        EXPECT(0x615d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0340
        gbc.setState(0x6c93, 0x3817, 0x6050, 0x9e5, 0x8667, 0x9a16, 0x0, 0x1);
        gbc.writeMem(0x6c93, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3817, gbc.sp());
        EXPECT(0x6c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0341
        gbc.setState(0xdb3, 0xb127, 0x86e0, 0xddcf, 0xa86c, 0xf724, 0x1, 0x1);
        gbc.writeMem(0xdb3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb127, gbc.sp());
        EXPECT(0xdb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0342
        gbc.setState(0x7bfa, 0xa50c, 0xb190, 0xab2f, 0x49f4, 0x35a5, 0x0, 0x0);
        gbc.writeMem(0x7bfa, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa50c, gbc.sp());
        EXPECT(0x7bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0343
        gbc.setState(0xc6d3, 0xc987, 0xfcf0, 0x4cc7, 0x81cc, 0xa805, 0x1, 0x1);
        gbc.writeMem(0xc6d3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc987, gbc.sp());
        EXPECT(0xc6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d3));
        EXPECT(0x11, gbc.readMem(0xc6d4));
        // CB 11 0344
        gbc.setState(0xc45e, 0x5975, 0x9fb0, 0x6ad1, 0xec7f, 0x9562, 0x0, 0x1);
        gbc.writeMem(0xc45e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5975, gbc.sp());
        EXPECT(0xc460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45e));
        EXPECT(0x11, gbc.readMem(0xc45f));
        // CB 11 0345
        gbc.setState(0xde93, 0xd68a, 0x7850, 0xe6b7, 0x416f, 0xfaca, 0x0, 0x1);
        gbc.writeMem(0xde93, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd68a, gbc.sp());
        EXPECT(0xde95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde93));
        EXPECT(0x11, gbc.readMem(0xde94));
        // CB 11 0346
        gbc.setState(0x6faa, 0xddd2, 0x24d0, 0x5308, 0x1cf7, 0x3f33, 0x1, 0x0);
        gbc.writeMem(0x6faa, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xddd2, gbc.sp());
        EXPECT(0x6fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0347
        gbc.setState(0xad66, 0x5d8e, 0xf4a0, 0xfa9a, 0xc066, 0x8bbc, 0x1, 0x0);
        gbc.writeMem(0xad66, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5d8e, gbc.sp());
        EXPECT(0xad68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad66));
        EXPECT(0x11, gbc.readMem(0xad67));
        // CB 11 0348
        gbc.setState(0x1a05, 0x452b, 0x54d0, 0xa116, 0x8e8e, 0x14b0, 0x1, 0x0);
        gbc.writeMem(0x1a05, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x452b, gbc.sp());
        EXPECT(0x1a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0349
        gbc.setState(0x3416, 0x65cf, 0x4510, 0x9ec8, 0xea47, 0xcd44, 0x1, 0x1);
        gbc.writeMem(0x3416, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x65cf, gbc.sp());
        EXPECT(0x3418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 034A
        gbc.setState(0xda5e, 0x24ae, 0x2aa0, 0x100e, 0xe0e, 0x636e, 0x1, 0x1);
        gbc.writeMem(0xda5e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x24ae, gbc.sp());
        EXPECT(0xda60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5e));
        EXPECT(0x11, gbc.readMem(0xda5f));
        // CB 11 034B
        gbc.setState(0xddf4, 0xe585, 0x57a0, 0x860b, 0x95c8, 0x57c0, 0x1, 0x0);
        gbc.writeMem(0xddf4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe585, gbc.sp());
        EXPECT(0xddf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf4));
        EXPECT(0x11, gbc.readMem(0xddf5));
        // CB 11 034C
        gbc.setState(0x765a, 0xfb4d, 0x42a0, 0xb0e3, 0x746a, 0x5ea, 0x0, 0x1);
        gbc.writeMem(0x765a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfb4d, gbc.sp());
        EXPECT(0x765c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 034D
        gbc.setState(0x181b, 0xc015, 0x9c40, 0xc3aa, 0x6df6, 0xbe94, 0x0, 0x1);
        gbc.writeMem(0x181b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc015, gbc.sp());
        EXPECT(0x181d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 034E
        gbc.setState(0x101, 0x6bd9, 0xdee0, 0xe8d3, 0x337, 0x466e, 0x0, 0x1);
        gbc.writeMem(0x101, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6bd9, gbc.sp());
        EXPECT(0x103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 034F
        gbc.setState(0x394b, 0x5fd6, 0xc850, 0xb838, 0xf6aa, 0xa7b8, 0x0, 0x0);
        gbc.writeMem(0x394b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5fd6, gbc.sp());
        EXPECT(0x394d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0350
        gbc.setState(0xd0d7, 0x2182, 0x910, 0xf58f, 0x9783, 0x79b6, 0x0, 0x1);
        gbc.writeMem(0xd0d7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2182, gbc.sp());
        EXPECT(0xd0d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d7));
        EXPECT(0x11, gbc.readMem(0xd0d8));
        // CB 11 0351
        gbc.setState(0x74bc, 0x9219, 0xd250, 0x9e27, 0x3e8c, 0xc64a, 0x1, 0x0);
        gbc.writeMem(0x74bc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9219, gbc.sp());
        EXPECT(0x74be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0352
        gbc.setState(0xc230, 0xa700, 0x57f0, 0xb9af, 0xb19c, 0xf453, 0x1, 0x0);
        gbc.writeMem(0xc230, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa700, gbc.sp());
        EXPECT(0xc232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc230));
        EXPECT(0x11, gbc.readMem(0xc231));
        // CB 11 0353
        gbc.setState(0xeb81, 0xb60c, 0xd930, 0x3f97, 0x689f, 0xed36, 0x0, 0x0);
        gbc.writeMem(0xeb81, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb60c, gbc.sp());
        EXPECT(0xeb83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb81));
        EXPECT(0x11, gbc.readMem(0xeb82));
        // CB 11 0354
        gbc.setState(0xb24, 0x537e, 0x18d0, 0x3bff, 0xacdd, 0xec29, 0x1, 0x0);
        gbc.writeMem(0xb24, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x537e, gbc.sp());
        EXPECT(0xb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0357
        gbc.setState(0x8a75, 0x3b19, 0xbcd0, 0x8220, 0x999d, 0xc7e2, 0x0, 0x1);
        gbc.writeMem(0x8a75, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3b19, gbc.sp());
        EXPECT(0x8a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a75));
        EXPECT(0x11, gbc.readMem(0x8a76));
        // CB 11 0358
        gbc.setState(0x11b, 0x2c44, 0xe9d0, 0x29e4, 0xef56, 0x48d6, 0x1, 0x1);
        gbc.writeMem(0x11b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2c44, gbc.sp());
        EXPECT(0x11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0359
        gbc.setState(0x75b2, 0x6af, 0x7240, 0x14fa, 0xa2b3, 0xda4, 0x1, 0x1);
        gbc.writeMem(0x75b2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6af, gbc.sp());
        EXPECT(0x75b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 035A
        gbc.setState(0xcf74, 0xe2a7, 0x210, 0xe2db, 0x3aae, 0xa5de, 0x1, 0x0);
        gbc.writeMem(0xcf74, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe2a7, gbc.sp());
        EXPECT(0xcf76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf74));
        EXPECT(0x11, gbc.readMem(0xcf75));
        // CB 11 035B
        gbc.setState(0x590c, 0x6988, 0x6300, 0x6437, 0x9e8d, 0xb805, 0x1, 0x0);
        gbc.writeMem(0x590c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6988, gbc.sp());
        EXPECT(0x590e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 035C
        gbc.setState(0x7476, 0xf520, 0x8b00, 0x6f22, 0xc79, 0x7aad, 0x1, 0x0);
        gbc.writeMem(0x7476, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf520, gbc.sp());
        EXPECT(0x7478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 035D
        gbc.setState(0x92c1, 0x1217, 0x4960, 0x3f9e, 0xe64b, 0xc418, 0x1, 0x0);
        gbc.writeMem(0x92c1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1217, gbc.sp());
        EXPECT(0x92c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c1));
        EXPECT(0x11, gbc.readMem(0x92c2));
        // CB 11 035E
        gbc.setState(0xb02e, 0xb10a, 0x1690, 0x849a, 0x78a2, 0x3828, 0x1, 0x0);
        gbc.writeMem(0xb02e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb10a, gbc.sp());
        EXPECT(0xb030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02e));
        EXPECT(0x11, gbc.readMem(0xb02f));
        // CB 11 035F
        gbc.setState(0x4d23, 0x5599, 0xb830, 0x4749, 0x3278, 0x4241, 0x1, 0x0);
        gbc.writeMem(0x4d23, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5599, gbc.sp());
        EXPECT(0x4d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0360
        gbc.setState(0x1f63, 0xc0c4, 0xf890, 0xe6d, 0xda71, 0xe83b, 0x0, 0x0);
        gbc.writeMem(0x1f63, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc0c4, gbc.sp());
        EXPECT(0x1f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0361
        gbc.setState(0x31ea, 0xd761, 0xc1a0, 0xa36f, 0x1cc9, 0x6fb2, 0x0, 0x0);
        gbc.writeMem(0x31ea, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd761, gbc.sp());
        EXPECT(0x31ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0362
        gbc.setState(0xe747, 0x961f, 0xa490, 0x2e2, 0x6725, 0xca92, 0x0, 0x1);
        gbc.writeMem(0xe747, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x961f, gbc.sp());
        EXPECT(0xe749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe747));
        EXPECT(0x11, gbc.readMem(0xe748));
        // CB 11 0363
        gbc.setState(0xf2b, 0xb25d, 0x1020, 0x970e, 0xddcc, 0xbf47, 0x1, 0x1);
        gbc.writeMem(0xf2b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb25d, gbc.sp());
        EXPECT(0xf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0364
        gbc.setState(0xa016, 0xfda0, 0xfb90, 0x3447, 0xefdf, 0x9b68, 0x0, 0x1);
        gbc.writeMem(0xa016, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfda0, gbc.sp());
        EXPECT(0xa018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa016));
        EXPECT(0x11, gbc.readMem(0xa017));
        // CB 11 0365
        gbc.setState(0xbc1e, 0xcb82, 0x69c0, 0xebbe, 0x5c3b, 0xae31, 0x0, 0x1);
        gbc.writeMem(0xbc1e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcb82, gbc.sp());
        EXPECT(0xbc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1e));
        EXPECT(0x11, gbc.readMem(0xbc1f));
        // CB 11 0366
        gbc.setState(0x5130, 0xf2a1, 0xfde0, 0xc092, 0x4699, 0x7460, 0x1, 0x1);
        gbc.writeMem(0x5130, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf2a1, gbc.sp());
        EXPECT(0x5132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0367
        gbc.setState(0x87e8, 0x4960, 0x8810, 0xa91e, 0x7aba, 0x83b8, 0x0, 0x0);
        gbc.writeMem(0x87e8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4960, gbc.sp());
        EXPECT(0x87ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e8));
        EXPECT(0x11, gbc.readMem(0x87e9));
        // CB 11 0368
        gbc.setState(0x462e, 0x53a7, 0x1440, 0x77cd, 0x28c1, 0x2505, 0x0, 0x0);
        gbc.writeMem(0x462e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x53a7, gbc.sp());
        EXPECT(0x4630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0369
        gbc.setState(0x33d8, 0x3745, 0x2940, 0x6679, 0xd724, 0x10ae, 0x1, 0x1);
        gbc.writeMem(0x33d8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3745, gbc.sp());
        EXPECT(0x33da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 036A
        gbc.setState(0xcc80, 0xb678, 0x100, 0x6531, 0xdee0, 0xbef6, 0x1, 0x1);
        gbc.writeMem(0xcc80, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb678, gbc.sp());
        EXPECT(0xcc82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc80));
        EXPECT(0x11, gbc.readMem(0xcc81));
        // CB 11 036B
        gbc.setState(0xb747, 0x6e80, 0x9e40, 0x7ea1, 0x6fe1, 0x3e95, 0x0, 0x0);
        gbc.writeMem(0xb747, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6e80, gbc.sp());
        EXPECT(0xb749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb747));
        EXPECT(0x11, gbc.readMem(0xb748));
        // CB 11 036C
        gbc.setState(0x5a93, 0xf198, 0x3190, 0xf29b, 0x27a1, 0x32de, 0x0, 0x0);
        gbc.writeMem(0x5a93, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf198, gbc.sp());
        EXPECT(0x5a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 036D
        gbc.setState(0x3dd7, 0xf2dc, 0x5860, 0x927c, 0xfac4, 0xf125, 0x1, 0x1);
        gbc.writeMem(0x3dd7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf2dc, gbc.sp());
        EXPECT(0x3dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 036E
        gbc.setState(0x6ed3, 0x84d9, 0xedc0, 0xc031, 0xe03f, 0xdaa2, 0x0, 0x0);
        gbc.writeMem(0x6ed3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x84d9, gbc.sp());
        EXPECT(0x6ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 036F
        gbc.setState(0xb9cb, 0x1b53, 0xddd0, 0x6496, 0x6b81, 0x64e5, 0x0, 0x1);
        gbc.writeMem(0xb9cb, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1b53, gbc.sp());
        EXPECT(0xb9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9cb));
        EXPECT(0x11, gbc.readMem(0xb9cc));
        // CB 11 0370
        gbc.setState(0xdbc0, 0x9dac, 0xe330, 0xd553, 0xcfa7, 0xb038, 0x0, 0x1);
        gbc.writeMem(0xdbc0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9dac, gbc.sp());
        EXPECT(0xdbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc0));
        EXPECT(0x11, gbc.readMem(0xdbc1));
        // CB 11 0371
        gbc.setState(0xb908, 0x53af, 0x26d0, 0x497a, 0x3550, 0xf30a, 0x1, 0x0);
        gbc.writeMem(0xb908, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x53af, gbc.sp());
        EXPECT(0xb90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb908));
        EXPECT(0x11, gbc.readMem(0xb909));
        // CB 11 0372
        gbc.setState(0x7269, 0x2516, 0xc3c0, 0xa6b9, 0x22d0, 0x8f94, 0x0, 0x1);
        gbc.writeMem(0x7269, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2516, gbc.sp());
        EXPECT(0x726b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0373
        gbc.setState(0x3c54, 0x3bf, 0x1520, 0xf287, 0xf054, 0xc9ee, 0x0, 0x1);
        gbc.writeMem(0x3c54, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3bf, gbc.sp());
        EXPECT(0x3c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0374
        gbc.setState(0x16ac, 0x63ee, 0x8a80, 0xdc0, 0xb240, 0x8191, 0x1, 0x1);
        gbc.writeMem(0x16ac, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x63ee, gbc.sp());
        EXPECT(0x16ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0375
        gbc.setState(0xeb0d, 0x421c, 0xeb80, 0xc726, 0x3d67, 0xa3dc, 0x1, 0x0);
        gbc.writeMem(0xeb0d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x421c, gbc.sp());
        EXPECT(0xeb0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0d));
        EXPECT(0x11, gbc.readMem(0xeb0e));
        // CB 11 0376
        gbc.setState(0xafb2, 0xa33, 0xb6b0, 0xf84, 0x8ff2, 0x1168, 0x0, 0x1);
        gbc.writeMem(0xafb2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa33, gbc.sp());
        EXPECT(0xafb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb2));
        EXPECT(0x11, gbc.readMem(0xafb3));
        // CB 11 0377
        gbc.setState(0x8f6f, 0xbdbb, 0xbfb0, 0xaf00, 0x336f, 0x4465, 0x1, 0x0);
        gbc.writeMem(0x8f6f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbdbb, gbc.sp());
        EXPECT(0x8f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6f));
        EXPECT(0x11, gbc.readMem(0x8f70));
        // CB 11 0379
        gbc.setState(0x2454, 0x842a, 0x2420, 0xe5dc, 0x753f, 0x26d5, 0x1, 0x0);
        gbc.writeMem(0x2454, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x842a, gbc.sp());
        EXPECT(0x2456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 037A
        gbc.setState(0x36d5, 0x1327, 0xc4c0, 0xb8c6, 0x3514, 0xf15b, 0x0, 0x1);
        gbc.writeMem(0x36d5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1327, gbc.sp());
        EXPECT(0x36d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 037B
        gbc.setState(0xc1db, 0x910e, 0x9040, 0xc4b6, 0xb7a9, 0x46e1, 0x0, 0x0);
        gbc.writeMem(0xc1db, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x910e, gbc.sp());
        EXPECT(0xc1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1db));
        EXPECT(0x11, gbc.readMem(0xc1dc));
        // CB 11 037C
        gbc.setState(0xcc4a, 0x8a9b, 0xe340, 0x73de, 0xe2fc, 0x48e, 0x0, 0x1);
        gbc.writeMem(0xcc4a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8a9b, gbc.sp());
        EXPECT(0xcc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4a));
        EXPECT(0x11, gbc.readMem(0xcc4b));
        // CB 11 037D
        gbc.setState(0xd414, 0x3ef1, 0x9bf0, 0x67f7, 0xaece, 0xcb33, 0x1, 0x1);
        gbc.writeMem(0xd414, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3ef1, gbc.sp());
        EXPECT(0xd416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd414));
        EXPECT(0x11, gbc.readMem(0xd415));
        // CB 11 037E
        gbc.setState(0x13ec, 0xb783, 0x8df0, 0x4cbf, 0x4c48, 0x1e94, 0x1, 0x0);
        gbc.writeMem(0x13ec, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb783, gbc.sp());
        EXPECT(0x13ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0380
        gbc.setState(0x602c, 0xcaaa, 0x5b0, 0x451f, 0xd4dd, 0x86b0, 0x1, 0x1);
        gbc.writeMem(0x602c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcaaa, gbc.sp());
        EXPECT(0x602e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0381
        gbc.setState(0x441, 0xf71d, 0x19b0, 0x1343, 0x57e5, 0x7b3, 0x0, 0x0);
        gbc.writeMem(0x441, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf71d, gbc.sp());
        EXPECT(0x443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0382
        gbc.setState(0x5151, 0xc31b, 0x64c0, 0x2c8, 0x4f27, 0x6221, 0x0, 0x0);
        gbc.writeMem(0x5151, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc31b, gbc.sp());
        EXPECT(0x5153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0383
        gbc.setState(0x5c6, 0x67a8, 0xd1b0, 0x35a6, 0xe281, 0x709a, 0x0, 0x1);
        gbc.writeMem(0x5c6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x67a8, gbc.sp());
        EXPECT(0x5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0384
        gbc.setState(0xad2a, 0x74d6, 0x9cd0, 0xd1, 0xb859, 0xb0e6, 0x0, 0x1);
        gbc.writeMem(0xad2a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x74d6, gbc.sp());
        EXPECT(0xad2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2a));
        EXPECT(0x11, gbc.readMem(0xad2b));
        // CB 11 0385
        gbc.setState(0xb3a, 0xfc39, 0x1330, 0x1b36, 0x5e25, 0x5d5d, 0x1, 0x1);
        gbc.writeMem(0xb3a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfc39, gbc.sp());
        EXPECT(0xb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0386
        gbc.setState(0x9e5, 0xf893, 0x7330, 0x334f, 0xcc21, 0x2685, 0x1, 0x0);
        gbc.writeMem(0x9e5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf893, gbc.sp());
        EXPECT(0x9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0387
        gbc.setState(0xd33a, 0xaf0d, 0x4b90, 0x4904, 0xdf90, 0x8660, 0x1, 0x1);
        gbc.writeMem(0xd33a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaf0d, gbc.sp());
        EXPECT(0xd33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33a));
        EXPECT(0x11, gbc.readMem(0xd33b));
        // CB 11 0388
        gbc.setState(0xc2fe, 0x1efa, 0x96b0, 0x7c6f, 0xcabc, 0x467f, 0x1, 0x0);
        gbc.writeMem(0xc2fe, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1efa, gbc.sp());
        EXPECT(0xc300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2fe));
        EXPECT(0x11, gbc.readMem(0xc2ff));
        // CB 11 0389
        gbc.setState(0x7686, 0x21ac, 0x9860, 0x69f, 0xc108, 0x9f7d, 0x1, 0x1);
        gbc.writeMem(0x7686, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x21ac, gbc.sp());
        EXPECT(0x7688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 038B
        gbc.setState(0x4dda, 0xd4d1, 0x4d40, 0x79b8, 0xb059, 0xa29e, 0x1, 0x1);
        gbc.writeMem(0x4dda, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd4d1, gbc.sp());
        EXPECT(0x4ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 038C
        gbc.setState(0x243f, 0x8662, 0x6f20, 0x229d, 0xd53c, 0x74bb, 0x1, 0x1);
        gbc.writeMem(0x243f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8662, gbc.sp());
        EXPECT(0x2441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 038D
        gbc.setState(0xb554, 0x5de9, 0x25d0, 0x1f26, 0xc485, 0x133c, 0x0, 0x1);
        gbc.writeMem(0xb554, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5de9, gbc.sp());
        EXPECT(0xb556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb554));
        EXPECT(0x11, gbc.readMem(0xb555));
        // CB 11 038E
        gbc.setState(0x78f3, 0xa618, 0xb660, 0x837f, 0xa568, 0x3d3f, 0x1, 0x1);
        gbc.writeMem(0x78f3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa618, gbc.sp());
        EXPECT(0x78f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 038F
        gbc.setState(0x3c30, 0x5325, 0x3110, 0x1b4f, 0xa8f5, 0xd151, 0x1, 0x1);
        gbc.writeMem(0x3c30, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5325, gbc.sp());
        EXPECT(0x3c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0390
        gbc.setState(0xaec6, 0xa779, 0x7b0, 0xfadf, 0xc2e3, 0x9bb1, 0x0, 0x1);
        gbc.writeMem(0xaec6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa779, gbc.sp());
        EXPECT(0xaec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec6));
        EXPECT(0x11, gbc.readMem(0xaec7));
        // CB 11 0391
        gbc.setState(0xa5f1, 0x701a, 0xc6e0, 0x47d6, 0x72b6, 0x972, 0x0, 0x0);
        gbc.writeMem(0xa5f1, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x701a, gbc.sp());
        EXPECT(0xa5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f1));
        EXPECT(0x11, gbc.readMem(0xa5f2));
        // CB 11 0392
        gbc.setState(0xe6d5, 0xbdc6, 0xbd10, 0x35b5, 0x86a5, 0x1a6f, 0x1, 0x1);
        gbc.writeMem(0xe6d5, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbdc6, gbc.sp());
        EXPECT(0xe6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d5));
        EXPECT(0x11, gbc.readMem(0xe6d6));
        // CB 11 0393
        gbc.setState(0x15f4, 0x516e, 0xdfd0, 0xcdee, 0xc05c, 0x429f, 0x1, 0x1);
        gbc.writeMem(0x15f4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x516e, gbc.sp());
        EXPECT(0x15f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 0394
        gbc.setState(0x2d55, 0x9908, 0xf5a0, 0xc72a, 0x7251, 0xbd27, 0x1, 0x1);
        gbc.writeMem(0x2d55, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9908, gbc.sp());
        EXPECT(0x2d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0395
        gbc.setState(0x3ee0, 0x4b8c, 0x18d0, 0x9e4b, 0xff7f, 0x4894, 0x0, 0x0);
        gbc.writeMem(0x3ee0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4b8c, gbc.sp());
        EXPECT(0x3ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0396
        gbc.setState(0x2536, 0x779, 0x3320, 0xf704, 0xf337, 0x3f4d, 0x0, 0x1);
        gbc.writeMem(0x2536, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x779, gbc.sp());
        EXPECT(0x2538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 0397
        gbc.setState(0xe829, 0xcf8b, 0x5980, 0x6f20, 0x31a5, 0xccf2, 0x0, 0x0);
        gbc.writeMem(0xe829, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcf8b, gbc.sp());
        EXPECT(0xe82b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe829));
        EXPECT(0x11, gbc.readMem(0xe82a));
        // CB 11 0398
        gbc.setState(0x9c0b, 0x8634, 0xbfa0, 0x4484, 0x4508, 0xc032, 0x0, 0x0);
        gbc.writeMem(0x9c0b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8634, gbc.sp());
        EXPECT(0x9c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c0b));
        EXPECT(0x11, gbc.readMem(0x9c0c));
        // CB 11 0399
        gbc.setState(0x7573, 0x94ec, 0x4120, 0xe32a, 0xf26f, 0xcf6b, 0x0, 0x1);
        gbc.writeMem(0x7573, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x94ec, gbc.sp());
        EXPECT(0x7575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 039A
        gbc.setState(0x2f52, 0x79fc, 0xdc80, 0x7563, 0x2df6, 0x3629, 0x1, 0x1);
        gbc.writeMem(0x2f52, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x79fc, gbc.sp());
        EXPECT(0x2f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 039B
        gbc.setState(0x3fb8, 0x9a0a, 0xfda0, 0x74ee, 0x55e4, 0x70dc, 0x1, 0x0);
        gbc.writeMem(0x3fb8, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9a0a, gbc.sp());
        EXPECT(0x3fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 039C
        gbc.setState(0x942d, 0xdd20, 0x9f00, 0xdbf8, 0xa5ba, 0xfab6, 0x1, 0x1);
        gbc.writeMem(0x942d, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdd20, gbc.sp());
        EXPECT(0x942f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942d));
        EXPECT(0x11, gbc.readMem(0x942e));
        // CB 11 039D
        gbc.setState(0x1c62, 0x5a96, 0xec40, 0x23e1, 0x44a1, 0x21a0, 0x0, 0x0);
        gbc.writeMem(0x1c62, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5a96, gbc.sp());
        EXPECT(0x1c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 039E
        gbc.setState(0xb289, 0x1cd6, 0xbef0, 0x5eeb, 0xc183, 0x4731, 0x1, 0x1);
        gbc.writeMem(0xb289, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1cd6, gbc.sp());
        EXPECT(0xb28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb289));
        EXPECT(0x11, gbc.readMem(0xb28a));
        // CB 11 039F
        gbc.setState(0xba91, 0xa121, 0x4f90, 0x38f9, 0xfce8, 0x1542, 0x1, 0x1);
        gbc.writeMem(0xba91, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa121, gbc.sp());
        EXPECT(0xba93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba91));
        EXPECT(0x11, gbc.readMem(0xba92));
        // CB 11 03A0
        gbc.setState(0x453e, 0x45e, 0x4190, 0xf122, 0xda3b, 0xe573, 0x0, 0x1);
        gbc.writeMem(0x453e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x45e, gbc.sp());
        EXPECT(0x4540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03A1
        gbc.setState(0x6803, 0xc893, 0xecd0, 0x5f74, 0x39d, 0x95c6, 0x0, 0x1);
        gbc.writeMem(0x6803, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc893, gbc.sp());
        EXPECT(0x6805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03A2
        gbc.setState(0x2e2, 0x5f44, 0x5c0, 0x67ad, 0xdf4b, 0xb3ad, 0x1, 0x1);
        gbc.writeMem(0x2e2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5f44, gbc.sp());
        EXPECT(0x2e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 03A5
        gbc.setState(0x934b, 0xa1c0, 0x8130, 0xd535, 0xce18, 0xf682, 0x1, 0x0);
        gbc.writeMem(0x934b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa1c0, gbc.sp());
        EXPECT(0x934d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934b));
        EXPECT(0x11, gbc.readMem(0x934c));
        // CB 11 03A7
        gbc.setState(0xc9b6, 0x1a50, 0xdee0, 0x6f50, 0x76d1, 0xb0b6, 0x1, 0x0);
        gbc.writeMem(0xc9b6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1a50, gbc.sp());
        EXPECT(0xc9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b6));
        EXPECT(0x11, gbc.readMem(0xc9b7));
        // CB 11 03A8
        gbc.setState(0x4727, 0x69c5, 0xd1e0, 0xaeae, 0xd46d, 0xfa74, 0x1, 0x1);
        gbc.writeMem(0x4727, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x69c5, gbc.sp());
        EXPECT(0x4729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 03AA
        gbc.setState(0x85d7, 0x85e0, 0x6820, 0x64b, 0xde4b, 0x6aee, 0x0, 0x1);
        gbc.writeMem(0x85d7, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x85e0, gbc.sp());
        EXPECT(0x85d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d7));
        EXPECT(0x11, gbc.readMem(0x85d8));
        // CB 11 03AB
        gbc.setState(0xc94e, 0x682a, 0x4340, 0x95f6, 0x25ab, 0x388f, 0x0, 0x1);
        gbc.writeMem(0xc94e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x682a, gbc.sp());
        EXPECT(0xc950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94e));
        EXPECT(0x11, gbc.readMem(0xc94f));
        // CB 11 03AC
        gbc.setState(0x6379, 0x2598, 0x99c0, 0x497c, 0x9f26, 0x56b1, 0x0, 0x0);
        gbc.writeMem(0x6379, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2598, gbc.sp());
        EXPECT(0x637b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03AD
        gbc.setState(0xa41a, 0x25c2, 0xc360, 0xe06f, 0x9197, 0xef95, 0x0, 0x0);
        gbc.writeMem(0xa41a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x25c2, gbc.sp());
        EXPECT(0xa41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41a));
        EXPECT(0x11, gbc.readMem(0xa41b));
        // CB 11 03AE
        gbc.setState(0x9dc3, 0x257a, 0x7e30, 0x2db6, 0xe67, 0xc0f6, 0x1, 0x0);
        gbc.writeMem(0x9dc3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x257a, gbc.sp());
        EXPECT(0x9dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc3));
        EXPECT(0x11, gbc.readMem(0x9dc4));
        // CB 11 03AF
        gbc.setState(0x8f01, 0x9b73, 0x93b0, 0x3602, 0xb736, 0xda93, 0x0, 0x0);
        gbc.writeMem(0x8f01, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9b73, gbc.sp());
        EXPECT(0x8f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f01));
        EXPECT(0x11, gbc.readMem(0x8f02));
        // CB 11 03B0
        gbc.setState(0x378f, 0xc694, 0x62c0, 0x545, 0xe965, 0x4272, 0x0, 0x0);
        gbc.writeMem(0x378f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc694, gbc.sp());
        EXPECT(0x3791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03B1
        gbc.setState(0x6dbc, 0x5295, 0x7260, 0x4359, 0x7dd1, 0x6ecc, 0x0, 0x1);
        gbc.writeMem(0x6dbc, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5295, gbc.sp());
        EXPECT(0x6dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03B2
        gbc.setState(0x1af, 0xfffd, 0x5490, 0x2929, 0x4970, 0x28b2, 0x1, 0x1);
        gbc.writeMem(0x1af, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfffd, gbc.sp());
        EXPECT(0x1b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03B3
        gbc.setState(0x56ae, 0x51f7, 0x36d0, 0xbb01, 0x91fe, 0x2cbe, 0x1, 0x1);
        gbc.writeMem(0x56ae, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x51f7, gbc.sp());
        EXPECT(0x56b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03B4
        gbc.setState(0xf75, 0xbbd9, 0x6340, 0xbcbe, 0xcfa0, 0x6878, 0x0, 0x1);
        gbc.writeMem(0xf75, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbbd9, gbc.sp());
        EXPECT(0xf77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 03B5
        gbc.setState(0x6cc0, 0x7213, 0xbd10, 0x7dd8, 0x85f5, 0x7c35, 0x1, 0x0);
        gbc.writeMem(0x6cc0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7213, gbc.sp());
        EXPECT(0x6cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 03B6
        gbc.setState(0xd268, 0x8262, 0x61e0, 0xcad7, 0x9fb9, 0x8018, 0x0, 0x0);
        gbc.writeMem(0xd268, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8262, gbc.sp());
        EXPECT(0xd26a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd268));
        EXPECT(0x11, gbc.readMem(0xd269));
        // CB 11 03B7
        gbc.setState(0x3983, 0xfb9e, 0xeef0, 0x3be0, 0x8c49, 0x46b6, 0x0, 0x1);
        gbc.writeMem(0x3983, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfb9e, gbc.sp());
        EXPECT(0x3985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 03B8
        gbc.setState(0x35ce, 0xfa78, 0xba90, 0xf87, 0xe07b, 0x6ea2, 0x1, 0x0);
        gbc.writeMem(0x35ce, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfa78, gbc.sp());
        EXPECT(0x35d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 03B9
        gbc.setState(0x9193, 0x5be9, 0x79d0, 0xee8e, 0xa96, 0x9d4, 0x0, 0x0);
        gbc.writeMem(0x9193, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5be9, gbc.sp());
        EXPECT(0x9195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9193));
        EXPECT(0x11, gbc.readMem(0x9194));
        // CB 11 03BA
        gbc.setState(0x85e3, 0x3478, 0x15d0, 0xb639, 0xc71f, 0xf4ea, 0x0, 0x1);
        gbc.writeMem(0x85e3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3478, gbc.sp());
        EXPECT(0x85e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e3));
        EXPECT(0x11, gbc.readMem(0x85e4));
        // CB 11 03BB
        gbc.setState(0x3c5e, 0x96ac, 0xef10, 0x677e, 0x8194, 0xf958, 0x1, 0x1);
        gbc.writeMem(0x3c5e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x96ac, gbc.sp());
        EXPECT(0x3c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03BC
        gbc.setState(0x9af9, 0xf96f, 0xd510, 0x29f, 0x5a17, 0xce17, 0x1, 0x0);
        gbc.writeMem(0x9af9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf96f, gbc.sp());
        EXPECT(0x9afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af9));
        EXPECT(0x11, gbc.readMem(0x9afa));
        // CB 11 03BD
        gbc.setState(0x197c, 0xbc27, 0x61e0, 0x285b, 0x7743, 0x1aba, 0x1, 0x1);
        gbc.writeMem(0x197c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbc27, gbc.sp());
        EXPECT(0x197e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03BE
        gbc.setState(0x4c53, 0x5a16, 0x9390, 0x244a, 0xa432, 0x1508, 0x0, 0x1);
        gbc.writeMem(0x4c53, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5a16, gbc.sp());
        EXPECT(0x4c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03BF
        gbc.setState(0x4044, 0x8ba3, 0xafd0, 0x2c46, 0x189f, 0x6d52, 0x1, 0x1);
        gbc.writeMem(0x4044, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8ba3, gbc.sp());
        EXPECT(0x4046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03C1
        gbc.setState(0xc241, 0xdaca, 0x1730, 0x546b, 0x9174, 0x85fd, 0x0, 0x1);
        gbc.writeMem(0xc241, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdaca, gbc.sp());
        EXPECT(0xc243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc241));
        EXPECT(0x11, gbc.readMem(0xc242));
        // CB 11 03C2
        gbc.setState(0x5d09, 0xa273, 0xce60, 0x120f, 0xe47, 0x995d, 0x0, 0x1);
        gbc.writeMem(0x5d09, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa273, gbc.sp());
        EXPECT(0x5d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03C3
        gbc.setState(0x38e4, 0x60b, 0x86b0, 0x6d21, 0x2ab4, 0x4600, 0x0, 0x1);
        gbc.writeMem(0x38e4, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x60b, gbc.sp());
        EXPECT(0x38e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03C4
        gbc.setState(0x5a1b, 0x75b5, 0x8ae0, 0xe91e, 0x2e75, 0x19dc, 0x0, 0x0);
        gbc.writeMem(0x5a1b, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x75b5, gbc.sp());
        EXPECT(0x5a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03C6
        gbc.setState(0x380c, 0x3991, 0xc990, 0xca20, 0xa5b4, 0x7cfd, 0x1, 0x1);
        gbc.writeMem(0x380c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3991, gbc.sp());
        EXPECT(0x380e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03C7
        gbc.setState(0xd085, 0x65e5, 0x9a30, 0xdfa5, 0x54ad, 0x6dbd, 0x0, 0x1);
        gbc.writeMem(0xd085, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x65e5, gbc.sp());
        EXPECT(0xd087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd085));
        EXPECT(0x11, gbc.readMem(0xd086));
        // CB 11 03C8
        gbc.setState(0xf0, 0x39a, 0x870, 0x70d6, 0xf087, 0x6e13, 0x0, 0x0);
        gbc.writeMem(0xf0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x39a, gbc.sp());
        EXPECT(0xf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 03C9
        gbc.setState(0x8cca, 0x542b, 0x6ef0, 0x48e9, 0xfce1, 0xbf9f, 0x1, 0x1);
        gbc.writeMem(0x8cca, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x542b, gbc.sp());
        EXPECT(0x8ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cca));
        EXPECT(0x11, gbc.readMem(0x8ccb));
        // CB 11 03CA
        gbc.setState(0x848a, 0x1e5f, 0x3100, 0x1af2, 0x7ff, 0xc7e3, 0x0, 0x1);
        gbc.writeMem(0x848a, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1e5f, gbc.sp());
        EXPECT(0x848c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848a));
        EXPECT(0x11, gbc.readMem(0x848b));
        // CB 11 03CC
        gbc.setState(0xea28, 0x675b, 0xdbf0, 0x742d, 0x9baf, 0xdeb6, 0x1, 0x0);
        gbc.writeMem(0xea28, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x675b, gbc.sp());
        EXPECT(0xea2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea28));
        EXPECT(0x11, gbc.readMem(0xea29));
        // CB 11 03CD
        gbc.setState(0x917c, 0x3806, 0x6d60, 0xe363, 0x4b71, 0x3ee4, 0x0, 0x0);
        gbc.writeMem(0x917c, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3806, gbc.sp());
        EXPECT(0x917e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x917c));
        EXPECT(0x11, gbc.readMem(0x917d));
        // CB 11 03CE
        gbc.setState(0xd8b3, 0xdf3d, 0x1740, 0x90a5, 0x6513, 0x97c5, 0x1, 0x1);
        gbc.writeMem(0xd8b3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdf3d, gbc.sp());
        EXPECT(0xd8b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b3));
        EXPECT(0x11, gbc.readMem(0xd8b4));
        // CB 11 03CF
        gbc.setState(0x4c1f, 0x3443, 0xad20, 0xd26, 0x3b3a, 0xb92, 0x0, 0x1);
        gbc.writeMem(0x4c1f, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3443, gbc.sp());
        EXPECT(0x4c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03D0
        gbc.setState(0x3610, 0x8d45, 0x9120, 0x9e6e, 0xc0e4, 0xea1a, 0x1, 0x0);
        gbc.writeMem(0x3610, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8d45, gbc.sp());
        EXPECT(0x3612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03D1
        gbc.setState(0x92a6, 0xdfda, 0x9560, 0xe1e0, 0xe6c4, 0x3ddb, 0x0, 0x1);
        gbc.writeMem(0x92a6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdfda, gbc.sp());
        EXPECT(0x92a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a6));
        EXPECT(0x11, gbc.readMem(0x92a7));
        // CB 11 03D2
        gbc.setState(0xaf23, 0x53d4, 0x1450, 0x348c, 0x481, 0xb4c4, 0x0, 0x0);
        gbc.writeMem(0xaf23, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x53d4, gbc.sp());
        EXPECT(0xaf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf23));
        EXPECT(0x11, gbc.readMem(0xaf24));
        // CB 11 03D3
        gbc.setState(0xd5af, 0xeb35, 0xf2d0, 0x93e4, 0xd8eb, 0xfe92, 0x1, 0x0);
        gbc.writeMem(0xd5af, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xeb35, gbc.sp());
        EXPECT(0xd5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5af));
        EXPECT(0x11, gbc.readMem(0xd5b0));
        // CB 11 03D4
        gbc.setState(0x9100, 0xc16a, 0xfff0, 0x2e18, 0xa9a3, 0x93b9, 0x1, 0x0);
        gbc.writeMem(0x9100, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc16a, gbc.sp());
        EXPECT(0x9102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9100));
        EXPECT(0x11, gbc.readMem(0x9101));
        // CB 11 03D5
        gbc.setState(0x5745, 0x525b, 0x4580, 0x66b8, 0xd1b5, 0x5d3, 0x0, 0x0);
        gbc.writeMem(0x5745, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x525b, gbc.sp());
        EXPECT(0x5747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 03D6
        gbc.setState(0xcf44, 0x8b85, 0xa360, 0x4367, 0x4b6e, 0xc639, 0x1, 0x0);
        gbc.writeMem(0xcf44, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8b85, gbc.sp());
        EXPECT(0xcf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf44));
        EXPECT(0x11, gbc.readMem(0xcf45));
        // CB 11 03D7
        gbc.setState(0x9e17, 0x50b5, 0x2870, 0x2ad2, 0x5bf2, 0x8e5, 0x1, 0x0);
        gbc.writeMem(0x9e17, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x50b5, gbc.sp());
        EXPECT(0x9e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e17));
        EXPECT(0x11, gbc.readMem(0x9e18));
        // CB 11 03D8
        gbc.setState(0xbae0, 0x122b, 0x85d0, 0x8c93, 0x558a, 0x5f58, 0x0, 0x0);
        gbc.writeMem(0xbae0, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x122b, gbc.sp());
        EXPECT(0xbae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae0));
        EXPECT(0x11, gbc.readMem(0xbae1));
        // CB 11 03D9
        gbc.setState(0x5ed6, 0x10ba, 0xe320, 0x70eb, 0x9c10, 0xbc78, 0x0, 0x1);
        gbc.writeMem(0x5ed6, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x10ba, gbc.sp());
        EXPECT(0x5ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 03DA
        gbc.setState(0x38ab, 0x81d1, 0x89b0, 0xd76f, 0x33ac, 0x3bf3, 0x1, 0x0);
        gbc.writeMem(0x38ab, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x81d1, gbc.sp());
        EXPECT(0x38ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03DB
        gbc.setState(0x6b5e, 0xfb44, 0xa350, 0x91e8, 0x1081, 0x5156, 0x1, 0x1);
        gbc.writeMem(0x6b5e, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfb44, gbc.sp());
        EXPECT(0x6b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 03DD
        gbc.setState(0xd454, 0x6779, 0x8760, 0x772a, 0x1c0c, 0x3dae, 0x0, 0x1);
        gbc.writeMem(0xd454, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6779, gbc.sp());
        EXPECT(0xd456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd454));
        EXPECT(0x11, gbc.readMem(0xd455));
        // CB 11 03DE
        gbc.setState(0x18a2, 0xa6ab, 0xf1a0, 0x464f, 0x9671, 0xaaef, 0x1, 0x1);
        gbc.writeMem(0x18a2, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa6ab, gbc.sp());
        EXPECT(0x18a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 11 03DF
        gbc.setState(0xc164, 0x8328, 0xa7c0, 0x8ef9, 0x89ed, 0x2a4b, 0x0, 0x0);
        gbc.writeMem(0xc164, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8328, gbc.sp());
        EXPECT(0xc166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc164));
        EXPECT(0x11, gbc.readMem(0xc165));
        // CB 11 03E0
        gbc.setState(0xea62, 0x2772, 0xf020, 0xc779, 0x469c, 0x60f5, 0x1, 0x0);
        gbc.writeMem(0xea62, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2772, gbc.sp());
        EXPECT(0xea64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea62));
        EXPECT(0x11, gbc.readMem(0xea63));
        // CB 11 03E1
        gbc.setState(0xc319, 0xec53, 0x4f10, 0x6b64, 0x859, 0xdcd7, 0x0, 0x1);
        gbc.writeMem(0xc319, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xec53, gbc.sp());
        EXPECT(0xc31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc319));
        EXPECT(0x11, gbc.readMem(0xc31a));
        // CB 11 03E2
        gbc.setState(0xe7fa, 0x1766, 0xb610, 0xf52d, 0x5e60, 0x51dd, 0x1, 0x0);
        gbc.writeMem(0xe7fa, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1766, gbc.sp());
        EXPECT(0xe7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7fa));
        EXPECT(0x11, gbc.readMem(0xe7fb));
        // CB 11 03E3
        gbc.setState(0xe8c9, 0xe05c, 0x9920, 0xf7ad, 0xe1ce, 0xd9cd, 0x0, 0x0);
        gbc.writeMem(0xe8c9, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe05c, gbc.sp());
        EXPECT(0xe8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c9));
        EXPECT(0x11, gbc.readMem(0xe8ca));
        // CB 11 03E4
        gbc.setState(0x1a36, 0xcb24, 0xb630, 0x8fe1, 0xf5c9, 0x898d, 0x0, 0x0);
        gbc.writeMem(0x1a36, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcb24, gbc.sp());
        EXPECT(0x1a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 11 03E5
        gbc.setState(0xc0ac, 0xfb59, 0xfa00, 0x99ba, 0x4a40, 0x8819, 0x1, 0x0);
        gbc.writeMem(0xc0ac, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfb59, gbc.sp());
        EXPECT(0xc0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ac));
        EXPECT(0x11, gbc.readMem(0xc0ad));
        // CB 11 03E6
        gbc.setState(0xcce3, 0x5ecb, 0xb990, 0xa750, 0xadd3, 0x42e4, 0x1, 0x1);
        gbc.writeMem(0xcce3, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5ecb, gbc.sp());
        EXPECT(0xcce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce3));
        EXPECT(0x11, gbc.readMem(0xcce4));
        // CB 11 03E7
        gbc.setState(0x5178, 0x3f1, 0x5690, 0xf11e, 0xe8e, 0xca63, 0x1, 0x0);
        gbc.writeMem(0x5178, { 0xcb, 0x11 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3f1, gbc.sp());
        EXPECT(0x517a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
