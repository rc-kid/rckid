    TEST(gbcemu, opcode_e0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // E0 0000
        gbc.setState(0xa616, 0xed39, 0xa700, 0xe1f8, 0xb9dc, 0xf821, 0x0, 0x1);
        gbc.writeMem(0xa616, { 0xe0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xed39, gbc.sp());
        EXPECT(0xa618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa616));
        EXPECT(0xc8, gbc.readMem(0xa617));
        EXPECT(0xa7, gbc.readMem(0xffc8));
        // E0 0001
        gbc.setState(0xaf55, 0x5d56, 0xa4a0, 0x8871, 0xb991, 0x2566, 0x0, 0x1);
        gbc.writeMem(0xaf55, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5d56, gbc.sp());
        EXPECT(0xaf57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xaf55));
        EXPECT(0x3f, gbc.readMem(0xaf56));
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // E0 0002
        gbc.setState(0x5050, 0xa765, 0x9110, 0xcc6, 0xca5a, 0x9555, 0x0, 0x1);
        gbc.writeMem(0x5050, { 0xe0, 0xe0 });
        gbc.writeMem(0xffe0, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa765, gbc.sp());
        EXPECT(0x5052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xffe0));
        // E0 0003
        gbc.setState(0xad9, 0xae68, 0x30d0, 0x96a0, 0x123b, 0x4edd, 0x0, 0x0);
        gbc.writeMem(0xad9, { 0xe0, 0x22 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xae68, gbc.sp());
        EXPECT(0xadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xff22));
        // E0 0004
        gbc.setState(0x1f38, 0x91bc, 0x2030, 0x2745, 0xa945, 0x9f02, 0x0, 0x0);
        gbc.writeMem(0x1f38, { 0xe0, 0x96 });
        gbc.writeMem(0xff96, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x91bc, gbc.sp());
        EXPECT(0x1f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xff96));
        // E0 0005
        gbc.setState(0x3e45, 0x44fa, 0xb130, 0x3e5d, 0xe3bb, 0xd314, 0x1, 0x0);
        gbc.writeMem(0x3e45, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x44fa, gbc.sp());
        EXPECT(0x3e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xff2a));
        // E0 0006
        gbc.setState(0x3fe6, 0x6eca, 0xc700, 0x672a, 0x68a4, 0x6954, 0x1, 0x0);
        gbc.writeMem(0x3fe6, { 0xe0, 0x18 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6eca, gbc.sp());
        EXPECT(0x3fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xff18));
        // E0 0007
        gbc.setState(0xa391, 0xa54a, 0xbca0, 0x13cc, 0xc23c, 0x6f20, 0x1, 0x0);
        gbc.writeMem(0xa391, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa54a, gbc.sp());
        EXPECT(0xa393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa391));
        EXPECT(0xea, gbc.readMem(0xa392));
        EXPECT(0xbc, gbc.readMem(0xffea));
        // E0 0008
        gbc.setState(0x95c7, 0x6702, 0x9d0, 0x4b9f, 0x3691, 0xd684, 0x1, 0x0);
        gbc.writeMem(0x95c7, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6702, gbc.sp());
        EXPECT(0x95c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x95c7));
        EXPECT(0xc0, gbc.readMem(0x95c8));
        EXPECT(0x9, gbc.readMem(0xffc0));
        // E0 0009
        gbc.setState(0xda00, 0x126e, 0x52f0, 0x88da, 0x5577, 0x84f6, 0x1, 0x1);
        gbc.writeMem(0xda00, { 0xe0, 0x8b });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x126e, gbc.sp());
        EXPECT(0xda02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xda00));
        EXPECT(0x8b, gbc.readMem(0xda01));
        EXPECT(0x52, gbc.readMem(0xff8b));
        // E0 000A
        gbc.setState(0xef7f, 0xffb0, 0xb3d0, 0xb9f7, 0xa5a9, 0xd8ba, 0x0, 0x0);
        gbc.writeMem(0xef7f, { 0xe0, 0x8c });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xffb0, gbc.sp());
        EXPECT(0xef81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xef7f));
        EXPECT(0x8c, gbc.readMem(0xef80));
        EXPECT(0xb3, gbc.readMem(0xff8c));
        // E0 000B
        gbc.setState(0xb5a8, 0x105b, 0x8450, 0x2d91, 0xb1cd, 0x61c2, 0x0, 0x0);
        gbc.writeMem(0xb5a8, { 0xe0, 0x3e });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x105b, gbc.sp());
        EXPECT(0xb5aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb5a8));
        EXPECT(0x3e, gbc.readMem(0xb5a9));
        EXPECT(0x84, gbc.readMem(0xff3e));
        // E0 000C
        gbc.setState(0x14f9, 0xf6f1, 0xbd80, 0x8719, 0xff91, 0x3010, 0x1, 0x1);
        gbc.writeMem(0x14f9, { 0xe0, 0x6d });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf6f1, gbc.sp());
        EXPECT(0x14fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xff6d));
        // E0 000D
        gbc.setState(0x92db, 0xeeeb, 0xb9b0, 0x3720, 0x644a, 0x5854, 0x0, 0x0);
        gbc.writeMem(0x92db, { 0xe0, 0x53 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeeeb, gbc.sp());
        EXPECT(0x92dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x92db));
        EXPECT(0x53, gbc.readMem(0x92dc));
        EXPECT(0xb9, gbc.readMem(0xff53));
        // E0 000E
        gbc.setState(0xc803, 0x8400, 0x9560, 0xb5f6, 0x26a9, 0xee5d, 0x1, 0x1);
        gbc.writeMem(0xc803, { 0xe0, 0x56 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8400, gbc.sp());
        EXPECT(0xc805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc803));
        EXPECT(0x56, gbc.readMem(0xc804));
        EXPECT(0x95, gbc.readMem(0xff56));
        // E0 000F
        gbc.setState(0x106, 0x5fbf, 0xa4b0, 0x5980, 0xe1b9, 0xd09c, 0x1, 0x0);
        gbc.writeMem(0x106, { 0xe0, 0x8f });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5fbf, gbc.sp());
        EXPECT(0x108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xff8f));
        // E0 0010
        gbc.setState(0xb20c, 0xdd34, 0x4aa0, 0xb687, 0x1b25, 0x2b11, 0x0, 0x0);
        gbc.writeMem(0xb20c, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdd34, gbc.sp());
        EXPECT(0xb20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb20c));
        EXPECT(0xdc, gbc.readMem(0xb20d));
        EXPECT(0x4a, gbc.readMem(0xffdc));
        // E0 0011
        gbc.setState(0xa573, 0x97d0, 0x1400, 0xbe46, 0x2eea, 0xbb91, 0x0, 0x0);
        gbc.writeMem(0xa573, { 0xe0, 0x90 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x97d0, gbc.sp());
        EXPECT(0xa575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa573));
        EXPECT(0x90, gbc.readMem(0xa574));
        EXPECT(0x14, gbc.readMem(0xff90));
        // E0 0012
        gbc.setState(0xad52, 0x1f4d, 0x92b0, 0xf0bf, 0xe661, 0xd8ae, 0x1, 0x0);
        gbc.writeMem(0xad52, { 0xe0, 0x8b });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1f4d, gbc.sp());
        EXPECT(0xad54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xad52));
        EXPECT(0x8b, gbc.readMem(0xad53));
        EXPECT(0x92, gbc.readMem(0xff8b));
        // E0 0013
        gbc.setState(0xa3c9, 0x84ad, 0xf660, 0x672a, 0xe37e, 0x2eb8, 0x0, 0x0);
        gbc.writeMem(0xa3c9, { 0xe0, 0xd5 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x84ad, gbc.sp());
        EXPECT(0xa3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa3c9));
        EXPECT(0xd5, gbc.readMem(0xa3ca));
        EXPECT(0xf6, gbc.readMem(0xffd5));
        // E0 0014
        gbc.setState(0x9057, 0xc50c, 0xb9b0, 0x2ae, 0x2a12, 0xf61e, 0x1, 0x0);
        gbc.writeMem(0x9057, { 0xe0, 0xb4 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc50c, gbc.sp());
        EXPECT(0x9059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9057));
        EXPECT(0xb4, gbc.readMem(0x9058));
        EXPECT(0xb9, gbc.readMem(0xffb4));
        // E0 0015
        gbc.setState(0x86ff, 0xd245, 0xf5e0, 0xd2f, 0x42d6, 0x6609, 0x1, 0x0);
        gbc.writeMem(0x86ff, { 0xe0, 0x98 });
        gbc.writeMem(0xff98, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd245, gbc.sp());
        EXPECT(0x8701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x86ff));
        EXPECT(0x98, gbc.readMem(0x8700));
        EXPECT(0xf5, gbc.readMem(0xff98));
        // E0 0016
        gbc.setState(0x6e21, 0x45c6, 0x5f0, 0xcd66, 0x3176, 0xbad2, 0x1, 0x0);
        gbc.writeMem(0x6e21, { 0xe0, 0x11 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x45c6, gbc.sp());
        EXPECT(0x6e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xff11));
        // E0 0017
        gbc.setState(0x1f57, 0x3d0e, 0x6a90, 0x17eb, 0xed3e, 0xbd5, 0x1, 0x0);
        gbc.writeMem(0x1f57, { 0xe0, 0xc1 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3d0e, gbc.sp());
        EXPECT(0x1f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xffc1));
        // E0 0018
        gbc.setState(0x9e69, 0xd733, 0xdf30, 0x16fa, 0x400, 0x599f, 0x1, 0x1);
        gbc.writeMem(0x9e69, { 0xe0, 0x7f });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd733, gbc.sp());
        EXPECT(0x9e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9e69));
        EXPECT(0x7f, gbc.readMem(0x9e6a));
        EXPECT(0xdf, gbc.readMem(0xff7f));
        // E0 0019
        gbc.setState(0x9665, 0xbe05, 0x1580, 0x17ee, 0xd97e, 0x5425, 0x1, 0x1);
        gbc.writeMem(0x9665, { 0xe0, 0x5b });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbe05, gbc.sp());
        EXPECT(0x9667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9665));
        EXPECT(0x5b, gbc.readMem(0x9666));
        EXPECT(0x15, gbc.readMem(0xff5b));
        // E0 001A
        gbc.setState(0xcb99, 0x6bdf, 0xad40, 0x7250, 0xa30b, 0xe52f, 0x0, 0x0);
        gbc.writeMem(0xcb99, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6bdf, gbc.sp());
        EXPECT(0xcb9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcb99));
        EXPECT(0x48, gbc.readMem(0xcb9a));
        EXPECT(0xad, gbc.readMem(0xff48));
        // E0 001B
        gbc.setState(0xadeb, 0x9bd3, 0x89a0, 0xb316, 0x575b, 0x4f5c, 0x1, 0x0);
        gbc.writeMem(0xadeb, { 0xe0, 0xc1 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9bd3, gbc.sp());
        EXPECT(0xaded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xadeb));
        EXPECT(0xc1, gbc.readMem(0xadec));
        EXPECT(0x89, gbc.readMem(0xffc1));
        // E0 001C
        gbc.setState(0x3745, 0xa2c8, 0xbcf0, 0x3c1c, 0xb6b8, 0xbc72, 0x1, 0x0);
        gbc.writeMem(0x3745, { 0xe0, 0x4d });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0x3747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xff4d));
        // E0 001D
        gbc.setState(0xa009, 0x4bf8, 0xeae0, 0xd84, 0xb689, 0x9855, 0x0, 0x1);
        gbc.writeMem(0xa009, { 0xe0, 0xb6 });
        gbc.writeMem(0xffb6, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4bf8, gbc.sp());
        EXPECT(0xa00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa009));
        EXPECT(0xb6, gbc.readMem(0xa00a));
        EXPECT(0xea, gbc.readMem(0xffb6));
        // E0 001E
        gbc.setState(0x4dc5, 0xc9f2, 0x29e0, 0x5bc8, 0xd178, 0xa2df, 0x1, 0x1);
        gbc.writeMem(0x4dc5, { 0xe0, 0x10 });
        gbc.writeMem(0xff10, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc9f2, gbc.sp());
        EXPECT(0x4dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xff10));
        // E0 001F
        gbc.setState(0x673a, 0x5ce5, 0xfa40, 0x8737, 0xddee, 0xd287, 0x0, 0x1);
        gbc.writeMem(0x673a, { 0xe0, 0xbc });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5ce5, gbc.sp());
        EXPECT(0x673c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xffbc));
        // E0 0020
        gbc.setState(0x5ec5, 0xe3a1, 0x110, 0x45cf, 0x6ec0, 0x9bf1, 0x0, 0x1);
        gbc.writeMem(0x5ec5, { 0xe0, 0xc7 });
        gbc.writeMem(0xffc7, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe3a1, gbc.sp());
        EXPECT(0x5ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xffc7));
        // E0 0021
        gbc.setState(0xa4e3, 0xb142, 0x7b70, 0x37d0, 0xcae7, 0x9afc, 0x1, 0x0);
        gbc.writeMem(0xa4e3, { 0xe0, 0x67 });
        gbc.writeMem(0xff67, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb142, gbc.sp());
        EXPECT(0xa4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa4e3));
        EXPECT(0x67, gbc.readMem(0xa4e4));
        EXPECT(0x7b, gbc.readMem(0xff67));
        // E0 0022
        gbc.setState(0x6c29, 0x34d, 0x56e0, 0xb6fc, 0x19b1, 0xb888, 0x1, 0x0);
        gbc.writeMem(0x6c29, { 0xe0, 0x8b });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x34d, gbc.sp());
        EXPECT(0x6c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xff8b));
        // E0 0023
        gbc.setState(0xab74, 0x897e, 0xea50, 0xb378, 0xf499, 0x3059, 0x0, 0x1);
        gbc.writeMem(0xab74, { 0xe0, 0x41 });
        gbc.writeMem(0xff41, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x897e, gbc.sp());
        EXPECT(0xab76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xab74));
        EXPECT(0x41, gbc.readMem(0xab75));
        EXPECT(0xea, gbc.readMem(0xff41));
        // E0 0024
        gbc.setState(0x906, 0x55ae, 0x76e0, 0xbcd6, 0x1e97, 0x60db, 0x1, 0x0);
        gbc.writeMem(0x906, { 0xe0, 0xa7 });
        gbc.writeMem(0xffa7, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x55ae, gbc.sp());
        EXPECT(0x908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xffa7));
        // E0 0026
        gbc.setState(0x4d42, 0x51cb, 0xa030, 0x8e25, 0xf7a4, 0x4b3d, 0x1, 0x0);
        gbc.writeMem(0x4d42, { 0xe0, 0xec });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x51cb, gbc.sp());
        EXPECT(0x4d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xffec));
        // E0 0027
        gbc.setState(0x6527, 0xf92, 0xb670, 0x966, 0xf17d, 0xd573, 0x1, 0x0);
        gbc.writeMem(0x6527, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf92, gbc.sp());
        EXPECT(0x6529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xffcb));
        // E0 0028
        gbc.setState(0x2d59, 0x4047, 0x6480, 0x673b, 0x2fd9, 0x122, 0x0, 0x1);
        gbc.writeMem(0x2d59, { 0xe0, 0x9c });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4047, gbc.sp());
        EXPECT(0x2d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xff9c));
        // E0 0029
        gbc.setState(0x767e, 0x565c, 0xf730, 0x7a27, 0x6aa, 0xee36, 0x1, 0x1);
        gbc.writeMem(0x767e, { 0xe0, 0xc4 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x565c, gbc.sp());
        EXPECT(0x7680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xffc4));
        // E0 002A
        gbc.setState(0x9e54, 0xdfb8, 0x9b40, 0x641b, 0xdcbf, 0x9b0, 0x1, 0x1);
        gbc.writeMem(0x9e54, { 0xe0, 0x60 });
        gbc.writeMem(0xff60, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdfb8, gbc.sp());
        EXPECT(0x9e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9e54));
        EXPECT(0x60, gbc.readMem(0x9e55));
        EXPECT(0x9b, gbc.readMem(0xff60));
        // E0 002B
        gbc.setState(0x9b19, 0xc92b, 0x1f10, 0xb47d, 0x1da, 0x33e2, 0x1, 0x0);
        gbc.writeMem(0x9b19, { 0xe0, 0xa4 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc92b, gbc.sp());
        EXPECT(0x9b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9b19));
        EXPECT(0xa4, gbc.readMem(0x9b1a));
        EXPECT(0x1f, gbc.readMem(0xffa4));
        // E0 002C
        gbc.setState(0x6671, 0x2470, 0xc930, 0x579d, 0x68f0, 0xef18, 0x1, 0x0);
        gbc.writeMem(0x6671, { 0xe0, 0x15 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2470, gbc.sp());
        EXPECT(0x6673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xff15));
        // E0 002D
        gbc.setState(0x53e4, 0xa006, 0xac90, 0xa911, 0x52c7, 0xa24e, 0x1, 0x0);
        gbc.writeMem(0x53e4, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa006, gbc.sp());
        EXPECT(0x53e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xff2a));
        // E0 002E
        gbc.setState(0x1042, 0xb0f2, 0x9890, 0x26ff, 0x15c, 0xb038, 0x1, 0x0);
        gbc.writeMem(0x1042, { 0xe0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb0f2, gbc.sp());
        EXPECT(0x1044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xffe6));
        // E0 002F
        gbc.setState(0xd1f7, 0x1e54, 0x6960, 0x9650, 0x2f41, 0xf277, 0x0, 0x0);
        gbc.writeMem(0xd1f7, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1e54, gbc.sp());
        EXPECT(0xd1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd1f7));
        EXPECT(0x52, gbc.readMem(0xd1f8));
        EXPECT(0x69, gbc.readMem(0xff52));
        // E0 0030
        gbc.setState(0x1ec7, 0x85cf, 0x7eb0, 0x4db, 0x53bb, 0x808d, 0x0, 0x1);
        gbc.writeMem(0x1ec7, { 0xe0, 0xd });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x85cf, gbc.sp());
        EXPECT(0x1ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xff0d));
        // E0 0031
        gbc.setState(0x1083, 0x7fac, 0x1370, 0x83ed, 0xde29, 0x297a, 0x0, 0x1);
        gbc.writeMem(0x1083, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7fac, gbc.sp());
        EXPECT(0x1085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xffaf));
        // E0 0032
        gbc.setState(0x5d4d, 0x405f, 0x5e20, 0xce8a, 0x898f, 0x69be, 0x1, 0x0);
        gbc.writeMem(0x5d4d, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x405f, gbc.sp());
        EXPECT(0x5d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xffaf));
        // E0 0033
        gbc.setState(0x9984, 0x59e1, 0x24e0, 0x3022, 0x13e7, 0x949d, 0x0, 0x0);
        gbc.writeMem(0x9984, { 0xe0, 0x3c });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x59e1, gbc.sp());
        EXPECT(0x9986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9984));
        EXPECT(0x3c, gbc.readMem(0x9985));
        EXPECT(0x24, gbc.readMem(0xff3c));
        // E0 0034
        gbc.setState(0x48d3, 0x7c33, 0xcce0, 0x4b51, 0x51b7, 0x537e, 0x0, 0x0);
        gbc.writeMem(0x48d3, { 0xe0, 0x1f });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7c33, gbc.sp());
        EXPECT(0x48d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xff1f));
        // E0 0035
        gbc.setState(0x4e1d, 0x9352, 0xb4e0, 0xd5f8, 0x424e, 0xa56d, 0x0, 0x0);
        gbc.writeMem(0x4e1d, { 0xe0, 0x21 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9352, gbc.sp());
        EXPECT(0x4e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xff21));
        // E0 0036
        gbc.setState(0xe0ca, 0x75f7, 0x47c0, 0x56ae, 0x31a5, 0xeae5, 0x0, 0x0);
        gbc.writeMem(0xe0ca, { 0xe0, 0x20 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x75f7, gbc.sp());
        EXPECT(0xe0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe0ca));
        EXPECT(0x20, gbc.readMem(0xe0cb));
        EXPECT(0x47, gbc.readMem(0xff20));
        // E0 0037
        gbc.setState(0x5af0, 0x7f83, 0x31c0, 0x29f6, 0x5144, 0xcc6e, 0x1, 0x0);
        gbc.writeMem(0x5af0, { 0xe0, 0xe5 });
        gbc.writeMem(0xffe5, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7f83, gbc.sp());
        EXPECT(0x5af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xffe5));
        // E0 0039
        gbc.setState(0x4e97, 0x200e, 0x2d70, 0xa590, 0x4dfa, 0x5f8f, 0x0, 0x1);
        gbc.writeMem(0x4e97, { 0xe0, 0xd6 });
        gbc.writeMem(0xffd6, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x200e, gbc.sp());
        EXPECT(0x4e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xffd6));
        // E0 003A
        gbc.setState(0x6565, 0x2df3, 0xd1d0, 0xca91, 0x1337, 0x5bb3, 0x0, 0x1);
        gbc.writeMem(0x6565, { 0xe0, 0x9b });
        gbc.writeMem(0xff9b, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2df3, gbc.sp());
        EXPECT(0x6567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xff9b));
        // E0 003B
        gbc.setState(0x4903, 0x37e3, 0x8c60, 0x84e8, 0x351c, 0xe679, 0x0, 0x0);
        gbc.writeMem(0x4903, { 0xe0, 0x6e });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x37e3, gbc.sp());
        EXPECT(0x4905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xff6e));
        // E0 003C
        gbc.setState(0x356b, 0xe8ed, 0xbd30, 0xd408, 0x213c, 0xfa36, 0x1, 0x0);
        gbc.writeMem(0x356b, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe8ed, gbc.sp());
        EXPECT(0x356d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xffa2));
        // E0 003D
        gbc.setState(0xd632, 0xebf6, 0xfcc0, 0x2930, 0x63be, 0x2f78, 0x1, 0x0);
        gbc.writeMem(0xd632, { 0xe0, 0x82 });
        gbc.writeMem(0xff82, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xebf6, gbc.sp());
        EXPECT(0xd634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd632));
        EXPECT(0x82, gbc.readMem(0xd633));
        EXPECT(0xfc, gbc.readMem(0xff82));
        // E0 003E
        gbc.setState(0xdf01, 0x1dce, 0x8a30, 0x9b55, 0x43bc, 0x3ff3, 0x0, 0x0);
        gbc.writeMem(0xdf01, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1dce, gbc.sp());
        EXPECT(0xdf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdf01));
        EXPECT(0x48, gbc.readMem(0xdf02));
        EXPECT(0x8a, gbc.readMem(0xff48));
        // E0 003F
        gbc.setState(0x3b0a, 0xb594, 0x3280, 0xa053, 0xd34c, 0x16a1, 0x1, 0x0);
        gbc.writeMem(0x3b0a, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb594, gbc.sp());
        EXPECT(0x3b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xffad));
        // E0 0040
        gbc.setState(0x4212, 0xedac, 0x5c80, 0x945c, 0x604f, 0x5e8c, 0x0, 0x0);
        gbc.writeMem(0x4212, { 0xe0, 0x8d });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xedac, gbc.sp());
        EXPECT(0x4214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xff8d));
        // E0 0041
        gbc.setState(0x702a, 0x2e6, 0xdea0, 0xcb3b, 0xc19, 0x13d2, 0x1, 0x0);
        gbc.writeMem(0x702a, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2e6, gbc.sp());
        EXPECT(0x702c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xff4c));
        // E0 0042
        gbc.setState(0xb52e, 0xeac, 0x69f0, 0xb61a, 0xec31, 0x893, 0x0, 0x0);
        gbc.writeMem(0xb52e, { 0xe0, 0x77 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xeac, gbc.sp());
        EXPECT(0xb530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb52e));
        EXPECT(0x77, gbc.readMem(0xb52f));
        EXPECT(0x69, gbc.readMem(0xff77));
        // E0 0043
        gbc.setState(0xb6d2, 0x6200, 0x2190, 0x2d93, 0xdb2f, 0xb45f, 0x0, 0x1);
        gbc.writeMem(0xb6d2, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6200, gbc.sp());
        EXPECT(0xb6d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb6d2));
        EXPECT(0xdc, gbc.readMem(0xb6d3));
        EXPECT(0x21, gbc.readMem(0xffdc));
        // E0 0044
        gbc.setState(0x1fa0, 0x5fdf, 0x2130, 0xf167, 0x569b, 0x1c46, 0x1, 0x0);
        gbc.writeMem(0x1fa0, { 0xe0, 0xbe });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5fdf, gbc.sp());
        EXPECT(0x1fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xffbe));
        // E0 0045
        gbc.setState(0x9d50, 0x9f3a, 0x4c80, 0x39b1, 0x351e, 0x2528, 0x0, 0x0);
        gbc.writeMem(0x9d50, { 0xe0, 0x1f });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9f3a, gbc.sp());
        EXPECT(0x9d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9d50));
        EXPECT(0x1f, gbc.readMem(0x9d51));
        EXPECT(0x4c, gbc.readMem(0xff1f));
        // E0 0046
        gbc.setState(0x46c3, 0x1a43, 0x44d0, 0x941, 0xee10, 0x666c, 0x0, 0x0);
        gbc.writeMem(0x46c3, { 0xe0, 0x74 });
        gbc.writeMem(0xff74, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1a43, gbc.sp());
        EXPECT(0x46c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xff74));
        // E0 0047
        gbc.setState(0x8cb7, 0x8ff6, 0x9020, 0x76e6, 0xc0b6, 0x2315, 0x1, 0x0);
        gbc.writeMem(0x8cb7, { 0xe0, 0xf2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8ff6, gbc.sp());
        EXPECT(0x8cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8cb7));
        EXPECT(0xf2, gbc.readMem(0x8cb8));
        EXPECT(0x90, gbc.readMem(0xfff2));
        // E0 0048
        gbc.setState(0x3aa, 0x8cf7, 0xb0, 0x5ac6, 0x5cca, 0x62f4, 0x1, 0x0);
        gbc.writeMem(0x3aa, { 0xe0, 0x0 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8cf7, gbc.sp());
        EXPECT(0x3ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xff00));
        // E0 0049
        gbc.setState(0x78c5, 0xfb44, 0xb3b0, 0xb1c2, 0x1f95, 0x20a3, 0x0, 0x1);
        gbc.writeMem(0x78c5, { 0xe0, 0xd1 });
        gbc.writeMem(0xffd1, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfb44, gbc.sp());
        EXPECT(0x78c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xffd1));
        // E0 004A
        gbc.setState(0x7c1b, 0xff08, 0x6e0, 0x6c63, 0x787f, 0xcc8d, 0x0, 0x1);
        gbc.writeMem(0x7c1b, { 0xe0, 0x19 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xff08, gbc.sp());
        EXPECT(0x7c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xff19));
        // E0 004C
        gbc.setState(0x7f84, 0x5542, 0xe0a0, 0x1331, 0x63a, 0xccbf, 0x0, 0x0);
        gbc.writeMem(0x7f84, { 0xe0, 0x8f });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5542, gbc.sp());
        EXPECT(0x7f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff8f));
        // E0 004D
        gbc.setState(0x57fa, 0x317e, 0x8c00, 0xec93, 0xf80a, 0xd36e, 0x1, 0x0);
        gbc.writeMem(0x57fa, { 0xe0, 0xde });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x317e, gbc.sp());
        EXPECT(0x57fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xffde));
        // E0 004E
        gbc.setState(0x28f0, 0x665e, 0x1c10, 0x6553, 0xedea, 0x601c, 0x1, 0x0);
        gbc.writeMem(0x28f0, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x665e, gbc.sp());
        EXPECT(0x28f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xff5e));
        // E0 004F
        gbc.setState(0x246e, 0x591c, 0xcb00, 0x8ac2, 0x2871, 0xb7f9, 0x0, 0x1);
        gbc.writeMem(0x246e, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x591c, gbc.sp());
        EXPECT(0x2470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xffa2));
        // E0 0050
        gbc.setState(0x9f45, 0xbc0d, 0x3800, 0x9fe2, 0x7c8, 0x1ea2, 0x1, 0x0);
        gbc.writeMem(0x9f45, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbc0d, gbc.sp());
        EXPECT(0x9f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9f45));
        EXPECT(0xa2, gbc.readMem(0x9f46));
        EXPECT(0x38, gbc.readMem(0xffa2));
        // E0 0051
        gbc.setState(0x2610, 0xf3ca, 0x4e90, 0x27af, 0x7962, 0x7cbe, 0x1, 0x0);
        gbc.writeMem(0x2610, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf3ca, gbc.sp());
        EXPECT(0x2612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xff9a));
        // E0 0052
        gbc.setState(0xbdb3, 0x489c, 0x6810, 0x7490, 0x87a4, 0x7d2a, 0x0, 0x1);
        gbc.writeMem(0xbdb3, { 0xe0, 0xe8 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x489c, gbc.sp());
        EXPECT(0xbdb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbdb3));
        EXPECT(0xe8, gbc.readMem(0xbdb4));
        EXPECT(0x68, gbc.readMem(0xffe8));
        // E0 0053
        gbc.setState(0xe2e1, 0x47a2, 0xfa40, 0x6e03, 0xab46, 0x649b, 0x1, 0x1);
        gbc.writeMem(0xe2e1, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x47a2, gbc.sp());
        EXPECT(0xe2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe2e1));
        EXPECT(0xca, gbc.readMem(0xe2e2));
        EXPECT(0xfa, gbc.readMem(0xffca));
        // E0 0054
        gbc.setState(0xa707, 0x4c0b, 0xec10, 0x2bea, 0x7986, 0x454a, 0x1, 0x0);
        gbc.writeMem(0xa707, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4c0b, gbc.sp());
        EXPECT(0xa709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa707));
        EXPECT(0xaf, gbc.readMem(0xa708));
        EXPECT(0xec, gbc.readMem(0xffaf));
        // E0 0055
        gbc.setState(0x4c94, 0xd36a, 0x6060, 0x7e1b, 0x9897, 0xa172, 0x0, 0x0);
        gbc.writeMem(0x4c94, { 0xe0, 0xe1 });
        gbc.writeMem(0xffe1, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd36a, gbc.sp());
        EXPECT(0x4c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xffe1));
        // E0 0056
        gbc.setState(0x22db, 0xb36f, 0xfaf0, 0xccfd, 0x2fd0, 0xa13d, 0x1, 0x0);
        gbc.writeMem(0x22db, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb36f, gbc.sp());
        EXPECT(0x22dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xff2a));
        // E0 0057
        gbc.setState(0xd9ed, 0xcba9, 0xa6f0, 0x2123, 0x30d0, 0x6304, 0x0, 0x1);
        gbc.writeMem(0xd9ed, { 0xe0, 0x4 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcba9, gbc.sp());
        EXPECT(0xd9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd9ed));
        EXPECT(0x4, gbc.readMem(0xd9ee));
        EXPECT(0xa6, gbc.readMem(0xff04));
        // E0 0058
        gbc.setState(0xc44e, 0xe5fd, 0x4af0, 0xe811, 0xd1a2, 0x718f, 0x1, 0x0);
        gbc.writeMem(0xc44e, { 0xe0, 0xed });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe5fd, gbc.sp());
        EXPECT(0xc450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc44e));
        EXPECT(0xed, gbc.readMem(0xc44f));
        EXPECT(0x4a, gbc.readMem(0xffed));
        // E0 0059
        gbc.setState(0x6a63, 0x387a, 0x6c40, 0xff84, 0x47f6, 0x6b31, 0x0, 0x1);
        gbc.writeMem(0x6a63, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x387a, gbc.sp());
        EXPECT(0x6a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xff5f));
        // E0 005A
        gbc.setState(0xc1b1, 0xbdaf, 0xec90, 0x3a2d, 0xce29, 0x9a93, 0x0, 0x0);
        gbc.writeMem(0xc1b1, { 0xe0, 0xa6 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbdaf, gbc.sp());
        EXPECT(0xc1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc1b1));
        EXPECT(0xa6, gbc.readMem(0xc1b2));
        EXPECT(0xec, gbc.readMem(0xffa6));
        // E0 005B
        gbc.setState(0x9f96, 0x39a2, 0xa1c0, 0x7a16, 0xb2bc, 0x3e8f, 0x0, 0x0);
        gbc.writeMem(0x9f96, { 0xe0, 0x15 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x39a2, gbc.sp());
        EXPECT(0x9f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9f96));
        EXPECT(0x15, gbc.readMem(0x9f97));
        EXPECT(0xa1, gbc.readMem(0xff15));
        // E0 005C
        gbc.setState(0xb5f4, 0x3f21, 0xa490, 0xf0ca, 0x8bf1, 0x8001, 0x1, 0x1);
        gbc.writeMem(0xb5f4, { 0xe0, 0x61 });
        gbc.writeMem(0xff61, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3f21, gbc.sp());
        EXPECT(0xb5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb5f4));
        EXPECT(0x61, gbc.readMem(0xb5f5));
        EXPECT(0xa4, gbc.readMem(0xff61));
        // E0 005D
        gbc.setState(0xe764, 0xfdfb, 0xae10, 0x487f, 0xcda8, 0x62de, 0x1, 0x0);
        gbc.writeMem(0xe764, { 0xe0, 0x8b });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfdfb, gbc.sp());
        EXPECT(0xe766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe764));
        EXPECT(0x8b, gbc.readMem(0xe765));
        EXPECT(0xae, gbc.readMem(0xff8b));
        // E0 005E
        gbc.setState(0x9c33, 0xda13, 0x9200, 0xef96, 0x9206, 0xb707, 0x0, 0x1);
        gbc.writeMem(0x9c33, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xda13, gbc.sp());
        EXPECT(0x9c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9c33));
        EXPECT(0xa2, gbc.readMem(0x9c34));
        EXPECT(0x92, gbc.readMem(0xffa2));
        // E0 005F
        gbc.setState(0xa632, 0xf8ce, 0x8980, 0x2e15, 0x7158, 0x36af, 0x0, 0x1);
        gbc.writeMem(0xa632, { 0xe0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf8ce, gbc.sp());
        EXPECT(0xa634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa632));
        EXPECT(0xb1, gbc.readMem(0xa633));
        EXPECT(0x89, gbc.readMem(0xffb1));
        // E0 0060
        gbc.setState(0x4829, 0xeef2, 0x1bd0, 0x1c8c, 0x5949, 0x8b02, 0x1, 0x1);
        gbc.writeMem(0x4829, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xeef2, gbc.sp());
        EXPECT(0x482b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xff51));
        // E0 0062
        gbc.setState(0xad5, 0x17bf, 0xae20, 0x8531, 0x96f0, 0x9ea1, 0x1, 0x1);
        gbc.writeMem(0xad5, { 0xe0, 0x7a });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x17bf, gbc.sp());
        EXPECT(0xad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xff7a));
        // E0 0063
        gbc.setState(0x64c8, 0x4df3, 0x6d30, 0x655c, 0xe074, 0xc360, 0x1, 0x0);
        gbc.writeMem(0x64c8, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4df3, gbc.sp());
        EXPECT(0x64ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xffad));
        // E0 0064
        gbc.setState(0x82cb, 0xae65, 0xb0b0, 0x9654, 0x21dc, 0x6061, 0x0, 0x1);
        gbc.writeMem(0x82cb, { 0xe0, 0x77 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xae65, gbc.sp());
        EXPECT(0x82cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x82cb));
        EXPECT(0x77, gbc.readMem(0x82cc));
        EXPECT(0xb0, gbc.readMem(0xff77));
        // E0 0065
        gbc.setState(0xc728, 0x9564, 0x6290, 0x30f1, 0x7ff2, 0x8672, 0x1, 0x0);
        gbc.writeMem(0xc728, { 0xe0, 0xbb });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9564, gbc.sp());
        EXPECT(0xc72a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc728));
        EXPECT(0xbb, gbc.readMem(0xc729));
        EXPECT(0x62, gbc.readMem(0xffbb));
        // E0 0066
        gbc.setState(0x295f, 0x1e58, 0x49e0, 0xa8a, 0xf9b6, 0x920a, 0x0, 0x1);
        gbc.writeMem(0x295f, { 0xe0, 0xfe });
        gbc.writeMem(0xfffe, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1e58, gbc.sp());
        EXPECT(0x2961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xfffe));
        // E0 0067
        gbc.setState(0x8180, 0x385d, 0x4400, 0xe8dc, 0x7c45, 0x24e3, 0x1, 0x1);
        gbc.writeMem(0x8180, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x385d, gbc.sp());
        EXPECT(0x8182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8180));
        EXPECT(0x51, gbc.readMem(0x8181));
        EXPECT(0x44, gbc.readMem(0xff51));
        // E0 0068
        gbc.setState(0xe0b6, 0x2c21, 0xa310, 0x9322, 0x1831, 0xde28, 0x0, 0x0);
        gbc.writeMem(0xe0b6, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2c21, gbc.sp());
        EXPECT(0xe0b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe0b6));
        EXPECT(0x2f, gbc.readMem(0xe0b7));
        EXPECT(0xa3, gbc.readMem(0xff2f));
        // E0 006A
        gbc.setState(0xc5ec, 0xa1e7, 0x1620, 0xc500, 0xd679, 0x4e79, 0x1, 0x0);
        gbc.writeMem(0xc5ec, { 0xe0, 0x4 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa1e7, gbc.sp());
        EXPECT(0xc5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc5ec));
        EXPECT(0x4, gbc.readMem(0xc5ed));
        EXPECT(0x16, gbc.readMem(0xff04));
        // E0 006B
        gbc.setState(0xd17a, 0x4ea1, 0x68e0, 0x9f1d, 0x681b, 0x381a, 0x0, 0x0);
        gbc.writeMem(0xd17a, { 0xe0, 0x75 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4ea1, gbc.sp());
        EXPECT(0xd17c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd17a));
        EXPECT(0x75, gbc.readMem(0xd17b));
        EXPECT(0x68, gbc.readMem(0xff75));
        // E0 006C
        gbc.setState(0xa9e1, 0x5b2a, 0xf5f0, 0x9bb3, 0xf2e4, 0x7bbe, 0x1, 0x0);
        gbc.writeMem(0xa9e1, { 0xe0, 0x18 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5b2a, gbc.sp());
        EXPECT(0xa9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa9e1));
        EXPECT(0x18, gbc.readMem(0xa9e2));
        EXPECT(0xf5, gbc.readMem(0xff18));
        // E0 006D
        gbc.setState(0xf1, 0x263a, 0x8920, 0xaf73, 0x8a3, 0xf2af, 0x1, 0x0);
        gbc.writeMem(0xf1, { 0xe0, 0xd4 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x263a, gbc.sp());
        EXPECT(0xf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xffd4));
        // E0 006E
        gbc.setState(0x22b6, 0x11dd, 0x2500, 0x12bc, 0xb0c7, 0x8652, 0x0, 0x0);
        gbc.writeMem(0x22b6, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x11dd, gbc.sp());
        EXPECT(0x22b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xff31));
        // E0 006F
        gbc.setState(0xdb85, 0xc016, 0x7d40, 0xc23a, 0x55be, 0x13c3, 0x1, 0x0);
        gbc.writeMem(0xdb85, { 0xe0, 0x1a });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc016, gbc.sp());
        EXPECT(0xdb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdb85));
        EXPECT(0x1a, gbc.readMem(0xdb86));
        EXPECT(0x7d, gbc.readMem(0xff1a));
        // E0 0070
        gbc.setState(0x378d, 0xc6f6, 0x68d0, 0x51c1, 0x7ac2, 0x175, 0x1, 0x1);
        gbc.writeMem(0x378d, { 0xe0, 0x87 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc6f6, gbc.sp());
        EXPECT(0x378f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xff87));
        // E0 0071
        gbc.setState(0xce18, 0xed41, 0x8ee0, 0xbe24, 0x110c, 0xf4ef, 0x1, 0x0);
        gbc.writeMem(0xce18, { 0xe0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xed41, gbc.sp());
        EXPECT(0xce1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xce18));
        EXPECT(0xc6, gbc.readMem(0xce19));
        EXPECT(0x8e, gbc.readMem(0xffc6));
        // E0 0072
        gbc.setState(0x9bd3, 0xfe5a, 0xdc00, 0xa386, 0xd6c, 0xb945, 0x0, 0x0);
        gbc.writeMem(0x9bd3, { 0xe0, 0x74 });
        gbc.writeMem(0xff74, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfe5a, gbc.sp());
        EXPECT(0x9bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9bd3));
        EXPECT(0x74, gbc.readMem(0x9bd4));
        EXPECT(0xdc, gbc.readMem(0xff74));
        // E0 0073
        gbc.setState(0xd0a4, 0xb61d, 0x5580, 0x4064, 0x26b3, 0x5715, 0x1, 0x0);
        gbc.writeMem(0xd0a4, { 0xe0, 0x4e });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb61d, gbc.sp());
        EXPECT(0xd0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd0a4));
        EXPECT(0x4e, gbc.readMem(0xd0a5));
        EXPECT(0x55, gbc.readMem(0xff4e));
        // E0 0074
        gbc.setState(0xc620, 0xc42f, 0xee0, 0xc7ee, 0xa1de, 0x8a93, 0x0, 0x0);
        gbc.writeMem(0xc620, { 0xe0, 0x65 });
        gbc.writeMem(0xff65, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc42f, gbc.sp());
        EXPECT(0xc622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc620));
        EXPECT(0x65, gbc.readMem(0xc621));
        EXPECT(0xe, gbc.readMem(0xff65));
        // E0 0075
        gbc.setState(0x284b, 0x768f, 0x4570, 0xd30e, 0x962f, 0xdf16, 0x0, 0x1);
        gbc.writeMem(0x284b, { 0xe0, 0x8 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x768f, gbc.sp());
        EXPECT(0x284d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xff08));
        // E0 0076
        gbc.setState(0xb2e4, 0xcdf, 0xfd00, 0x92f6, 0xcf3d, 0x498a, 0x0, 0x0);
        gbc.writeMem(0xb2e4, { 0xe0, 0xf1 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcdf, gbc.sp());
        EXPECT(0xb2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb2e4));
        EXPECT(0xf1, gbc.readMem(0xb2e5));
        EXPECT(0xfd, gbc.readMem(0xfff1));
        // E0 0077
        gbc.setState(0x20fa, 0x919, 0xf320, 0xdc6e, 0xbe46, 0x8c72, 0x1, 0x0);
        gbc.writeMem(0x20fa, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x919, gbc.sp());
        EXPECT(0x20fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xff07));
        // E0 0078
        gbc.setState(0xc1ec, 0xada3, 0x8430, 0xf9fb, 0xc0f, 0xd55d, 0x0, 0x0);
        gbc.writeMem(0xc1ec, { 0xe0, 0xc5 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xada3, gbc.sp());
        EXPECT(0xc1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc1ec));
        EXPECT(0xc5, gbc.readMem(0xc1ed));
        EXPECT(0x84, gbc.readMem(0xffc5));
        // E0 0079
        gbc.setState(0x2dc1, 0x101f, 0x75e0, 0xd70f, 0x6c3e, 0x403e, 0x0, 0x0);
        gbc.writeMem(0x2dc1, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x101f, gbc.sp());
        EXPECT(0x2dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xff3f));
        // E0 007A
        gbc.setState(0xfc6, 0x6b74, 0xfc10, 0xa5f4, 0x9a7c, 0x3858, 0x0, 0x1);
        gbc.writeMem(0xfc6, { 0xe0, 0x6e });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6b74, gbc.sp());
        EXPECT(0xfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xff6e));
        // E0 007B
        gbc.setState(0xb33c, 0x8db6, 0x5bc0, 0x4b6d, 0x9686, 0x9858, 0x0, 0x1);
        gbc.writeMem(0xb33c, { 0xe0, 0x3d });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8db6, gbc.sp());
        EXPECT(0xb33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb33c));
        EXPECT(0x3d, gbc.readMem(0xb33d));
        EXPECT(0x5b, gbc.readMem(0xff3d));
        // E0 007C
        gbc.setState(0xe95a, 0xdb36, 0xcee0, 0x463b, 0xf9b5, 0xc82e, 0x0, 0x1);
        gbc.writeMem(0xe95a, { 0xe0, 0x2e });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdb36, gbc.sp());
        EXPECT(0xe95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe95a));
        EXPECT(0x2e, gbc.readMem(0xe95b));
        EXPECT(0xce, gbc.readMem(0xff2e));
        // E0 007D
        gbc.setState(0xdc40, 0x1de0, 0xa9e0, 0xfef6, 0x2522, 0x7c5c, 0x0, 0x1);
        gbc.writeMem(0xdc40, { 0xe0, 0x91 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1de0, gbc.sp());
        EXPECT(0xdc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdc40));
        EXPECT(0x91, gbc.readMem(0xdc41));
        EXPECT(0xa9, gbc.readMem(0xff91));
        // E0 007E
        gbc.setState(0x9e97, 0xc068, 0xa110, 0xd592, 0xdae0, 0x24, 0x0, 0x1);
        gbc.writeMem(0x9e97, { 0xe0, 0x42 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc068, gbc.sp());
        EXPECT(0x9e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9e97));
        EXPECT(0x42, gbc.readMem(0x9e98));
        EXPECT(0xa1, gbc.readMem(0xff42));
        // E0 007F
        gbc.setState(0x9abe, 0xaee4, 0x1f50, 0x52a3, 0xab25, 0xbb75, 0x0, 0x0);
        gbc.writeMem(0x9abe, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaee4, gbc.sp());
        EXPECT(0x9ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9abe));
        EXPECT(0x27, gbc.readMem(0x9abf));
        EXPECT(0x1f, gbc.readMem(0xff27));
        // E0 0080
        gbc.setState(0x697a, 0x27ac, 0xf330, 0x7255, 0xac10, 0x5cd6, 0x1, 0x0);
        gbc.writeMem(0x697a, { 0xe0, 0x2e });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x27ac, gbc.sp());
        EXPECT(0x697c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xff2e));
        // E0 0081
        gbc.setState(0xeda, 0x3a90, 0xa150, 0xf396, 0x3657, 0x166c, 0x0, 0x1);
        gbc.writeMem(0xeda, { 0xe0, 0x65 });
        gbc.writeMem(0xff65, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3a90, gbc.sp());
        EXPECT(0xedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xff65));
        // E0 0082
        gbc.setState(0x13e0, 0x241, 0x77d0, 0xaf1, 0xfd85, 0x60e6, 0x0, 0x1);
        gbc.writeMem(0x13e0, { 0xe0, 0x4f });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x241, gbc.sp());
        EXPECT(0x13e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xff4f));
        // E0 0083
        gbc.setState(0x45a0, 0x2f10, 0xc1a0, 0x355d, 0x3b27, 0x80c, 0x0, 0x1);
        gbc.writeMem(0x45a0, { 0xe0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2f10, gbc.sp());
        EXPECT(0x45a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xffd7));
        // E0 0084
        gbc.setState(0xd740, 0xce3e, 0xa0, 0x3d43, 0x6d02, 0xdf42, 0x0, 0x1);
        gbc.writeMem(0xd740, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xce3e, gbc.sp());
        EXPECT(0xd742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd740));
        EXPECT(0x4c, gbc.readMem(0xd741));
        EXPECT(0x0, gbc.readMem(0xff4c));
        // E0 0085
        gbc.setState(0xca0, 0x8b51, 0xfb0, 0x5f47, 0x4b1a, 0x41d2, 0x1, 0x1);
        gbc.writeMem(0xca0, { 0xe0, 0x59 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8b51, gbc.sp());
        EXPECT(0xca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xff59));
        // E0 0086
        gbc.setState(0x17c0, 0xad01, 0x62b0, 0xbc3e, 0x2b6f, 0xd641, 0x1, 0x0);
        gbc.writeMem(0x17c0, { 0xe0, 0xf3 });
        gbc.writeMem(0xfff3, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xad01, gbc.sp());
        EXPECT(0x17c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xfff3));
        // E0 0087
        gbc.setState(0x852a, 0x2baf, 0xeb50, 0x60d3, 0xa329, 0x24e6, 0x0, 0x0);
        gbc.writeMem(0x852a, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2baf, gbc.sp());
        EXPECT(0x852c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x852a));
        EXPECT(0x2a, gbc.readMem(0x852b));
        EXPECT(0xeb, gbc.readMem(0xff2a));
        // E0 0088
        gbc.setState(0x6bdf, 0xf78c, 0x0, 0xba6f, 0xec18, 0x464e, 0x1, 0x1);
        gbc.writeMem(0x6bdf, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf78c, gbc.sp());
        EXPECT(0x6be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xff0e));
        // E0 0089
        gbc.setState(0x3b7f, 0x77d, 0x5380, 0x15d0, 0x164, 0xcb2b, 0x0, 0x0);
        gbc.writeMem(0x3b7f, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x77d, gbc.sp());
        EXPECT(0x3b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xff48));
        // E0 008A
        gbc.setState(0x9f09, 0xc117, 0x6760, 0x311d, 0x3302, 0xfca5, 0x0, 0x0);
        gbc.writeMem(0x9f09, { 0xe0, 0xd5 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc117, gbc.sp());
        EXPECT(0x9f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9f09));
        EXPECT(0xd5, gbc.readMem(0x9f0a));
        EXPECT(0x67, gbc.readMem(0xffd5));
        // E0 008B
        gbc.setState(0x3a58, 0xcaee, 0xa590, 0x4b8a, 0x55c8, 0x8dc9, 0x1, 0x1);
        gbc.writeMem(0x3a58, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcaee, gbc.sp());
        EXPECT(0x3a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xffb8));
        // E0 008C
        gbc.setState(0xf2f, 0xb64a, 0x8ae0, 0xe5e7, 0xfa86, 0xb8fa, 0x0, 0x0);
        gbc.writeMem(0xf2f, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb64a, gbc.sp());
        EXPECT(0xf31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xff51));
        // E0 008D
        gbc.setState(0xd808, 0xea75, 0xf550, 0x535b, 0x467f, 0x6692, 0x1, 0x1);
        gbc.writeMem(0xd808, { 0xe0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xea75, gbc.sp());
        EXPECT(0xd80a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd808));
        EXPECT(0xd7, gbc.readMem(0xd809));
        EXPECT(0xf5, gbc.readMem(0xffd7));
        // E0 008E
        gbc.setState(0x62ec, 0x5550, 0xa360, 0x6681, 0x6896, 0x73d2, 0x1, 0x0);
        gbc.writeMem(0x62ec, { 0xe0, 0x90 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5550, gbc.sp());
        EXPECT(0x62ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xff90));
        // E0 008F
        gbc.setState(0xed92, 0x229f, 0x14d0, 0x71fb, 0xc31c, 0xa45, 0x1, 0x0);
        gbc.writeMem(0xed92, { 0xe0, 0x3b });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x229f, gbc.sp());
        EXPECT(0xed94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xed92));
        EXPECT(0x3b, gbc.readMem(0xed93));
        EXPECT(0x14, gbc.readMem(0xff3b));
        // E0 0090
        gbc.setState(0xc511, 0xace0, 0x4810, 0x7f8f, 0x9ddd, 0xfb52, 0x1, 0x0);
        gbc.writeMem(0xc511, { 0xe0, 0x4d });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xace0, gbc.sp());
        EXPECT(0xc513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc511));
        EXPECT(0x4d, gbc.readMem(0xc512));
        EXPECT(0x48, gbc.readMem(0xff4d));
        // E0 0091
        gbc.setState(0x98d, 0x2741, 0xd7e0, 0x7fe3, 0x7086, 0x6a83, 0x1, 0x0);
        gbc.writeMem(0x98d, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2741, gbc.sp());
        EXPECT(0x98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xff80));
        // E0 0092
        gbc.setState(0x524b, 0x859e, 0xcf0, 0xa2ee, 0x1dab, 0x87d2, 0x0, 0x1);
        gbc.writeMem(0x524b, { 0xe0, 0xe4 });
        gbc.writeMem(0xffe4, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x859e, gbc.sp());
        EXPECT(0x524d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xffe4));
        // E0 0093
        gbc.setState(0x366e, 0x9e, 0xbdf0, 0xedd1, 0x809d, 0x5b58, 0x1, 0x0);
        gbc.writeMem(0x366e, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9e, gbc.sp());
        EXPECT(0x3670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xff4c));
        // E0 0094
        gbc.setState(0xa788, 0xb6ff, 0x7380, 0xb989, 0x5f0, 0x3fb3, 0x1, 0x1);
        gbc.writeMem(0xa788, { 0xe0, 0x92 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb6ff, gbc.sp());
        EXPECT(0xa78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa788));
        EXPECT(0x92, gbc.readMem(0xa789));
        EXPECT(0x73, gbc.readMem(0xff92));
        // E0 0095
        gbc.setState(0x8c8, 0xc7cb, 0xd340, 0x4978, 0xeac3, 0x3836, 0x1, 0x1);
        gbc.writeMem(0x8c8, { 0xe0, 0x97 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc7cb, gbc.sp());
        EXPECT(0x8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xff97));
        // E0 0096
        gbc.setState(0x152a, 0xa1e8, 0xb260, 0x32cd, 0x9b0c, 0xb513, 0x1, 0x0);
        gbc.writeMem(0x152a, { 0xe0, 0x2d });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa1e8, gbc.sp());
        EXPECT(0x152c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xff2d));
        // E0 0097
        gbc.setState(0xa847, 0x1b00, 0xbdc0, 0x3c41, 0x823a, 0xd64b, 0x0, 0x1);
        gbc.writeMem(0xa847, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1b00, gbc.sp());
        EXPECT(0xa849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa847));
        EXPECT(0x2a, gbc.readMem(0xa848));
        EXPECT(0xbd, gbc.readMem(0xff2a));
        // E0 0098
        gbc.setState(0x87ac, 0xd0c2, 0xbc60, 0x3e06, 0xd559, 0xd37d, 0x0, 0x0);
        gbc.writeMem(0x87ac, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd0c2, gbc.sp());
        EXPECT(0x87ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x87ac));
        EXPECT(0xcb, gbc.readMem(0x87ad));
        EXPECT(0xbc, gbc.readMem(0xffcb));
        // E0 0099
        gbc.setState(0x2abf, 0x739c, 0x860, 0x65bd, 0x41cd, 0xefab, 0x1, 0x0);
        gbc.writeMem(0x2abf, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x739c, gbc.sp());
        EXPECT(0x2ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xffad));
        // E0 009A
        gbc.setState(0x702f, 0x67de, 0x9b90, 0xeda3, 0xee63, 0x894b, 0x0, 0x0);
        gbc.writeMem(0x702f, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x67de, gbc.sp());
        EXPECT(0x7031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xff9e));
        // E0 009B
        gbc.setState(0xc886, 0x567e, 0x9f30, 0x4459, 0x75c8, 0x2aac, 0x0, 0x0);
        gbc.writeMem(0xc886, { 0xe0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x567e, gbc.sp());
        EXPECT(0xc888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc886));
        EXPECT(0xb5, gbc.readMem(0xc887));
        EXPECT(0x9f, gbc.readMem(0xffb5));
        // E0 009C
        gbc.setState(0x82e1, 0x9a43, 0x6360, 0xc0de, 0x72db, 0xef4a, 0x0, 0x0);
        gbc.writeMem(0x82e1, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9a43, gbc.sp());
        EXPECT(0x82e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x82e1));
        EXPECT(0x5f, gbc.readMem(0x82e2));
        EXPECT(0x63, gbc.readMem(0xff5f));
        // E0 009D
        gbc.setState(0x1822, 0xc087, 0x540, 0x7448, 0x585e, 0xf693, 0x1, 0x0);
        gbc.writeMem(0x1822, { 0xe0, 0x42 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc087, gbc.sp());
        EXPECT(0x1824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xff42));
        // E0 009F
        gbc.setState(0x83, 0x39d4, 0xd780, 0xbe6, 0x3cef, 0xfd02, 0x0, 0x1);
        gbc.writeMem(0x83, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x39d4, gbc.sp());
        EXPECT(0x85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xff23));
        // E0 00A0
        gbc.setState(0x1132, 0x15fa, 0xcd60, 0x46a1, 0x520d, 0x3042, 0x1, 0x0);
        gbc.writeMem(0x1132, { 0xe0, 0x43 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x15fa, gbc.sp());
        EXPECT(0x1134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xff43));
        // E0 00A1
        gbc.setState(0x8ee, 0x7460, 0xcba0, 0x6a, 0x9fb6, 0x19a7, 0x0, 0x1);
        gbc.writeMem(0x8ee, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7460, gbc.sp());
        EXPECT(0x8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xff4c));
        // E0 00A2
        gbc.setState(0x465d, 0xdfc0, 0x6ec0, 0x36f6, 0x7b3e, 0x2406, 0x0, 0x0);
        gbc.writeMem(0x465d, { 0xe0, 0xac });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdfc0, gbc.sp());
        EXPECT(0x465f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xffac));
        // E0 00A3
        gbc.setState(0x4777, 0xa5c2, 0x7d20, 0xf0fe, 0xbed3, 0xf70, 0x1, 0x0);
        gbc.writeMem(0x4777, { 0xe0, 0x58 });
        gbc.writeMem(0xff58, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa5c2, gbc.sp());
        EXPECT(0x4779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xff58));
        // E0 00A4
        gbc.setState(0xaf0d, 0xeff0, 0x55e0, 0x7bda, 0x810c, 0x7e0, 0x0, 0x1);
        gbc.writeMem(0xaf0d, { 0xe0, 0x86 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xeff0, gbc.sp());
        EXPECT(0xaf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xaf0d));
        EXPECT(0x86, gbc.readMem(0xaf0e));
        EXPECT(0x55, gbc.readMem(0xff86));
        // E0 00A5
        gbc.setState(0x342a, 0x8902, 0x5a0, 0xac7c, 0x5d1c, 0xa12c, 0x0, 0x0);
        gbc.writeMem(0x342a, { 0xe0, 0xa6 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8902, gbc.sp());
        EXPECT(0x342c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xffa6));
        // E0 00A6
        gbc.setState(0x2591, 0x5c0, 0x4f50, 0x23de, 0x91df, 0x3e74, 0x0, 0x1);
        gbc.writeMem(0x2591, { 0xe0, 0x6d });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5c0, gbc.sp());
        EXPECT(0x2593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xff6d));
        // E0 00A7
        gbc.setState(0x902f, 0x2883, 0x6db0, 0x631b, 0x4edf, 0x1f00, 0x0, 0x0);
        gbc.writeMem(0x902f, { 0xe0, 0xb6 });
        gbc.writeMem(0xffb6, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2883, gbc.sp());
        EXPECT(0x9031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x902f));
        EXPECT(0xb6, gbc.readMem(0x9030));
        EXPECT(0x6d, gbc.readMem(0xffb6));
        // E0 00A8
        gbc.setState(0x99dc, 0xb206, 0x29b0, 0x174d, 0x576d, 0x7bdd, 0x1, 0x1);
        gbc.writeMem(0x99dc, { 0xe0, 0x6f });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb206, gbc.sp());
        EXPECT(0x99de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x99dc));
        EXPECT(0x6f, gbc.readMem(0x99dd));
        EXPECT(0x29, gbc.readMem(0xff6f));
        // E0 00AB
        gbc.setState(0x40fb, 0xc08d, 0xda10, 0x594f, 0xfde, 0xaf2e, 0x1, 0x1);
        gbc.writeMem(0x40fb, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc08d, gbc.sp());
        EXPECT(0x40fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xff03));
        // E0 00AC
        gbc.setState(0x4efe, 0x2592, 0x25b0, 0xa53e, 0xe3a3, 0x2ecf, 0x1, 0x0);
        gbc.writeMem(0x4efe, { 0xe0, 0x67 });
        gbc.writeMem(0xff67, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2592, gbc.sp());
        EXPECT(0x4f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xff67));
        // E0 00AD
        gbc.setState(0x5c1, 0x3561, 0xedb0, 0x2cfb, 0x1517, 0x600c, 0x0, 0x0);
        gbc.writeMem(0x5c1, { 0xe0, 0x24 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3561, gbc.sp());
        EXPECT(0x5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xff24));
        // E0 00AE
        gbc.setState(0x1f9d, 0xa81d, 0xaf20, 0xa4dc, 0xeda2, 0x32b1, 0x0, 0x0);
        gbc.writeMem(0x1f9d, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa81d, gbc.sp());
        EXPECT(0x1f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xffd0));
        // E0 00AF
        gbc.setState(0xcd8d, 0xd28c, 0x4b90, 0x1399, 0x73ce, 0xd374, 0x0, 0x1);
        gbc.writeMem(0xcd8d, { 0xe0, 0xfd });
        gbc.writeMem(0xfffd, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd28c, gbc.sp());
        EXPECT(0xcd8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcd8d));
        EXPECT(0xfd, gbc.readMem(0xcd8e));
        EXPECT(0x4b, gbc.readMem(0xfffd));
        // E0 00B0
        gbc.setState(0x6972, 0x8f4e, 0x4370, 0x94f6, 0xdcb, 0x3bee, 0x1, 0x1);
        gbc.writeMem(0x6972, { 0xe0, 0x60 });
        gbc.writeMem(0xff60, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8f4e, gbc.sp());
        EXPECT(0x6974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xff60));
        // E0 00B2
        gbc.setState(0x8a0f, 0xd418, 0xaa80, 0x9f7b, 0xc853, 0x9473, 0x0, 0x1);
        gbc.writeMem(0x8a0f, { 0xe0, 0x75 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd418, gbc.sp());
        EXPECT(0x8a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8a0f));
        EXPECT(0x75, gbc.readMem(0x8a10));
        EXPECT(0xaa, gbc.readMem(0xff75));
        // E0 00B3
        gbc.setState(0xee3b, 0xfbab, 0x2ad0, 0xfde2, 0xd910, 0x1342, 0x0, 0x1);
        gbc.writeMem(0xee3b, { 0xe0, 0x7b });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfbab, gbc.sp());
        EXPECT(0xee3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xee3b));
        EXPECT(0x7b, gbc.readMem(0xee3c));
        EXPECT(0x2a, gbc.readMem(0xff7b));
        // E0 00B4
        gbc.setState(0xd512, 0x5443, 0x81b0, 0x4d6, 0xfd4b, 0xc83d, 0x1, 0x1);
        gbc.writeMem(0xd512, { 0xe0, 0xce });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5443, gbc.sp());
        EXPECT(0xd514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd512));
        EXPECT(0xce, gbc.readMem(0xd513));
        EXPECT(0x81, gbc.readMem(0xffce));
        // E0 00B5
        gbc.setState(0xc9eb, 0x3370, 0xb4c0, 0xbccc, 0x69c4, 0x4aab, 0x0, 0x0);
        gbc.writeMem(0xc9eb, { 0xe0, 0x6d });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3370, gbc.sp());
        EXPECT(0xc9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc9eb));
        EXPECT(0x6d, gbc.readMem(0xc9ec));
        EXPECT(0xb4, gbc.readMem(0xff6d));
        // E0 00B6
        gbc.setState(0x290f, 0x8929, 0x7690, 0x2b5f, 0x32b7, 0x8b2a, 0x1, 0x1);
        gbc.writeMem(0x290f, { 0xe0, 0xc2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8929, gbc.sp());
        EXPECT(0x2911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xffc2));
        // E0 00B7
        gbc.setState(0x7862, 0x1eb8, 0x43d0, 0xdf45, 0x86f8, 0xa43e, 0x0, 0x0);
        gbc.writeMem(0x7862, { 0xe0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1eb8, gbc.sp());
        EXPECT(0x7864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xffb1));
        // E0 00B8
        gbc.setState(0x5392, 0x2d9a, 0x7700, 0x5f3d, 0x6261, 0xaf56, 0x0, 0x0);
        gbc.writeMem(0x5392, { 0xe0, 0xf6 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2d9a, gbc.sp());
        EXPECT(0x5394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xfff6));
        // E0 00B9
        gbc.setState(0x7597, 0x69ad, 0x3330, 0xc73f, 0x11b9, 0x1ae1, 0x1, 0x0);
        gbc.writeMem(0x7597, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x69ad, gbc.sp());
        EXPECT(0x7599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xff07));
        // E0 00BA
        gbc.setState(0xaddc, 0x9038, 0xa730, 0xbb41, 0xce26, 0x1fdd, 0x0, 0x0);
        gbc.writeMem(0xaddc, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9038, gbc.sp());
        EXPECT(0xadde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xaddc));
        EXPECT(0x9a, gbc.readMem(0xaddd));
        EXPECT(0xa7, gbc.readMem(0xff9a));
        // E0 00BB
        gbc.setState(0xbd98, 0x2285, 0x250, 0x3eb8, 0x5e6c, 0x66a9, 0x1, 0x0);
        gbc.writeMem(0xbd98, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2285, gbc.sp());
        EXPECT(0xbd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbd98));
        EXPECT(0x9e, gbc.readMem(0xbd99));
        EXPECT(0x2, gbc.readMem(0xff9e));
        // E0 00BC
        gbc.setState(0x3948, 0xd437, 0xfba0, 0x1d3d, 0xe647, 0x5af0, 0x0, 0x0);
        gbc.writeMem(0x3948, { 0xe0, 0x3a });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd437, gbc.sp());
        EXPECT(0x394a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xff3a));
        // E0 00BD
        gbc.setState(0x1f36, 0xc8b7, 0xcf0, 0xa55a, 0x552, 0x911d, 0x1, 0x0);
        gbc.writeMem(0x1f36, { 0xe0, 0x2 });
        gbc.writeMem(0xff02, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc8b7, gbc.sp());
        EXPECT(0x1f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xff02));
        // E0 00BF
        gbc.setState(0x2b29, 0xabc9, 0x2990, 0x75a8, 0xa99f, 0x2981, 0x1, 0x1);
        gbc.writeMem(0x2b29, { 0xe0, 0x18 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xabc9, gbc.sp());
        EXPECT(0x2b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xff18));
        // E0 00C0
        gbc.setState(0x8da5, 0x91c6, 0xada0, 0x7802, 0xbd1b, 0x2e0b, 0x0, 0x1);
        gbc.writeMem(0x8da5, { 0xe0, 0x32 });
        gbc.writeMem(0xff32, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x91c6, gbc.sp());
        EXPECT(0x8da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8da5));
        EXPECT(0x32, gbc.readMem(0x8da6));
        EXPECT(0xad, gbc.readMem(0xff32));
        // E0 00C1
        gbc.setState(0x25e1, 0x5f36, 0x57a0, 0xca40, 0x1a98, 0x2cee, 0x1, 0x1);
        gbc.writeMem(0x25e1, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5f36, gbc.sp());
        EXPECT(0x25e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xff07));
        // E0 00C2
        gbc.setState(0x6c47, 0x7522, 0x9de0, 0x249a, 0x9ab9, 0x4638, 0x1, 0x0);
        gbc.writeMem(0x6c47, { 0xe0, 0xe9 });
        gbc.writeMem(0xffe9, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7522, gbc.sp());
        EXPECT(0x6c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xffe9));
        // E0 00C3
        gbc.setState(0x54b6, 0xdffc, 0xafd0, 0x185b, 0x1d04, 0xb861, 0x0, 0x1);
        gbc.writeMem(0x54b6, { 0xe0, 0xb3 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdffc, gbc.sp());
        EXPECT(0x54b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xffb3));
        // E0 00C4
        gbc.setState(0x5ffa, 0x1f66, 0xe7c0, 0xb1f, 0x94a1, 0xa434, 0x1, 0x1);
        gbc.writeMem(0x5ffa, { 0xe0, 0x57 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1f66, gbc.sp());
        EXPECT(0x5ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xff57));
        // E0 00C5
        gbc.setState(0xd61c, 0x2038, 0xe8e0, 0x6145, 0xef91, 0x959e, 0x0, 0x0);
        gbc.writeMem(0xd61c, { 0xe0, 0x5d });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2038, gbc.sp());
        EXPECT(0xd61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd61c));
        EXPECT(0x5d, gbc.readMem(0xd61d));
        EXPECT(0xe8, gbc.readMem(0xff5d));
        // E0 00C6
        gbc.setState(0x68dc, 0xc078, 0xf990, 0x1862, 0x7414, 0x3f22, 0x0, 0x0);
        gbc.writeMem(0x68dc, { 0xe0, 0x87 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc078, gbc.sp());
        EXPECT(0x68de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xff87));
        // E0 00C8
        gbc.setState(0xc3cf, 0x2d7, 0xf330, 0x297c, 0x3696, 0xb2ab, 0x0, 0x1);
        gbc.writeMem(0xc3cf, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2d7, gbc.sp());
        EXPECT(0xc3d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc3cf));
        EXPECT(0x3, gbc.readMem(0xc3d0));
        EXPECT(0xf3, gbc.readMem(0xff03));
        // E0 00C9
        gbc.setState(0xee56, 0xfc25, 0x15f0, 0x2636, 0x29c5, 0xe8fc, 0x1, 0x0);
        gbc.writeMem(0xee56, { 0xe0, 0x9c });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfc25, gbc.sp());
        EXPECT(0xee58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xee56));
        EXPECT(0x9c, gbc.readMem(0xee57));
        EXPECT(0x15, gbc.readMem(0xff9c));
        // E0 00CA
        gbc.setState(0xcab5, 0xf345, 0x4c80, 0xb9b2, 0x792c, 0xf66d, 0x1, 0x1);
        gbc.writeMem(0xcab5, { 0xe0, 0x42 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf345, gbc.sp());
        EXPECT(0xcab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcab5));
        EXPECT(0x42, gbc.readMem(0xcab6));
        EXPECT(0x4c, gbc.readMem(0xff42));
        // E0 00CB
        gbc.setState(0x3ced, 0x3aac, 0x1580, 0xbff8, 0x76ad, 0x9fff, 0x0, 0x1);
        gbc.writeMem(0x3ced, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3aac, gbc.sp());
        EXPECT(0x3cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xffb2));
        // E0 00CD
        gbc.setState(0xb250, 0xe8ad, 0x2930, 0xb50b, 0xd920, 0xea76, 0x0, 0x1);
        gbc.writeMem(0xb250, { 0xe0, 0x6d });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe8ad, gbc.sp());
        EXPECT(0xb252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb250));
        EXPECT(0x6d, gbc.readMem(0xb251));
        EXPECT(0x29, gbc.readMem(0xff6d));
        // E0 00CF
        gbc.setState(0x10d7, 0x8dd, 0x89f0, 0xde0d, 0x8925, 0x80e7, 0x1, 0x0);
        gbc.writeMem(0x10d7, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8dd, gbc.sp());
        EXPECT(0x10d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xff8a));
        // E0 00D0
        gbc.setState(0x242c, 0x3cfb, 0x8850, 0x8e0, 0x1bb2, 0xd8fb, 0x1, 0x0);
        gbc.writeMem(0x242c, { 0xe0, 0x9 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3cfb, gbc.sp());
        EXPECT(0x242e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xff09));
        // E0 00D2
        gbc.setState(0x50f5, 0xbce6, 0x9a60, 0x537d, 0x528c, 0x630b, 0x1, 0x0);
        gbc.writeMem(0x50f5, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbce6, gbc.sp());
        EXPECT(0x50f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xffab));
        // E0 00D3
        gbc.setState(0xe0f5, 0x97e2, 0x9f50, 0x3200, 0xf7c7, 0xb041, 0x1, 0x1);
        gbc.writeMem(0xe0f5, { 0xe0, 0xed });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x97e2, gbc.sp());
        EXPECT(0xe0f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe0f5));
        EXPECT(0xed, gbc.readMem(0xe0f6));
        EXPECT(0x9f, gbc.readMem(0xffed));
        // E0 00D4
        gbc.setState(0xd97c, 0x57ad, 0x7ca0, 0x16e0, 0xfcf1, 0xfa3a, 0x1, 0x1);
        gbc.writeMem(0xd97c, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x57ad, gbc.sp());
        EXPECT(0xd97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd97c));
        EXPECT(0x8a, gbc.readMem(0xd97d));
        EXPECT(0x7c, gbc.readMem(0xff8a));
        // E0 00D5
        gbc.setState(0x52be, 0xa8ac, 0xe670, 0x1b76, 0x7ec3, 0xb773, 0x0, 0x0);
        gbc.writeMem(0x52be, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa8ac, gbc.sp());
        EXPECT(0x52c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xff9a));
        // E0 00D6
        gbc.setState(0x1f2d, 0x3074, 0x66b0, 0x590c, 0xc87a, 0xd5b8, 0x0, 0x0);
        gbc.writeMem(0x1f2d, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3074, gbc.sp());
        EXPECT(0x1f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xff23));
        // E0 00D7
        gbc.setState(0xe582, 0x8b68, 0x11a0, 0xee3f, 0x78fb, 0x1c54, 0x1, 0x0);
        gbc.writeMem(0xe582, { 0xe0, 0x8f });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8b68, gbc.sp());
        EXPECT(0xe584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe582));
        EXPECT(0x8f, gbc.readMem(0xe583));
        EXPECT(0x11, gbc.readMem(0xff8f));
        // E0 00D8
        gbc.setState(0x60f3, 0x54cc, 0x30b0, 0xef1f, 0x9f47, 0xa880, 0x0, 0x0);
        gbc.writeMem(0x60f3, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x54cc, gbc.sp());
        EXPECT(0x60f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xffab));
        // E0 00D9
        gbc.setState(0x7c19, 0x66f1, 0xef50, 0x64d7, 0xf910, 0x5b45, 0x1, 0x1);
        gbc.writeMem(0x7c19, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x66f1, gbc.sp());
        EXPECT(0x7c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xff2f));
        // E0 00DA
        gbc.setState(0x3473, 0x81ce, 0xcec0, 0x438f, 0x8f49, 0x7469, 0x1, 0x1);
        gbc.writeMem(0x3473, { 0xe0, 0x63 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x81ce, gbc.sp());
        EXPECT(0x3475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xff63));
        // E0 00DB
        gbc.setState(0xba8d, 0x33a9, 0xcb30, 0x73c8, 0x787f, 0xc4ae, 0x1, 0x1);
        gbc.writeMem(0xba8d, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x33a9, gbc.sp());
        EXPECT(0xba8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xba8d));
        EXPECT(0x27, gbc.readMem(0xba8e));
        EXPECT(0xcb, gbc.readMem(0xff27));
        // E0 00DC
        gbc.setState(0xef51, 0x386b, 0xf550, 0xdef4, 0x5faa, 0xead7, 0x0, 0x1);
        gbc.writeMem(0xef51, { 0xe0, 0x63 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x386b, gbc.sp());
        EXPECT(0xef53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xef51));
        EXPECT(0x63, gbc.readMem(0xef52));
        EXPECT(0xf5, gbc.readMem(0xff63));
        // E0 00DD
        gbc.setState(0x62a1, 0xc600, 0xb5f0, 0xa12, 0xa940, 0xe4b3, 0x1, 0x0);
        gbc.writeMem(0x62a1, { 0xe0, 0xec });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc600, gbc.sp());
        EXPECT(0x62a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xffec));
        // E0 00DE
        gbc.setState(0xb2d3, 0xa3c8, 0xd8b0, 0x63d, 0x9154, 0xef19, 0x0, 0x0);
        gbc.writeMem(0xb2d3, { 0xe0, 0x17 });
        gbc.writeMem(0xff17, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa3c8, gbc.sp());
        EXPECT(0xb2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb2d3));
        EXPECT(0x17, gbc.readMem(0xb2d4));
        EXPECT(0xd8, gbc.readMem(0xff17));
        // E0 00DF
        gbc.setState(0x9fde, 0x763c, 0xcde0, 0xe7e8, 0xf154, 0x390d, 0x1, 0x0);
        gbc.writeMem(0x9fde, { 0xe0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x763c, gbc.sp());
        EXPECT(0x9fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9fde));
        EXPECT(0xc6, gbc.readMem(0x9fdf));
        EXPECT(0xcd, gbc.readMem(0xffc6));
        // E0 00E0
        gbc.setState(0x3203, 0x23dd, 0x2be0, 0x2b33, 0x658f, 0x87a6, 0x1, 0x0);
        gbc.writeMem(0x3203, { 0xe0, 0xb0 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x23dd, gbc.sp());
        EXPECT(0x3205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xffb0));
        // E0 00E1
        gbc.setState(0xee5, 0xa568, 0xb620, 0x8d55, 0x3f2e, 0xb676, 0x0, 0x1);
        gbc.writeMem(0xee5, { 0xe0, 0xa4 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa568, gbc.sp());
        EXPECT(0xee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xffa4));
        // E0 00E2
        gbc.setState(0xb2d9, 0xe117, 0x5490, 0x47f4, 0x8cd, 0x4ed, 0x1, 0x0);
        gbc.writeMem(0xb2d9, { 0xe0, 0x9 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe117, gbc.sp());
        EXPECT(0xb2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb2d9));
        EXPECT(0x9, gbc.readMem(0xb2da));
        EXPECT(0x54, gbc.readMem(0xff09));
        // E0 00E3
        gbc.setState(0x4cb0, 0xe9f, 0x2120, 0xc9f9, 0x51d3, 0x2409, 0x1, 0x0);
        gbc.writeMem(0x4cb0, { 0xe0, 0xdb });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe9f, gbc.sp());
        EXPECT(0x4cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xffdb));
        // E0 00E4
        gbc.setState(0x90d5, 0x8b83, 0x9740, 0xe4d4, 0xcc4a, 0x31e9, 0x0, 0x1);
        gbc.writeMem(0x90d5, { 0xe0, 0xa9 });
        gbc.writeMem(0xffa9, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8b83, gbc.sp());
        EXPECT(0x90d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x90d5));
        EXPECT(0xa9, gbc.readMem(0x90d6));
        EXPECT(0x97, gbc.readMem(0xffa9));
        // E0 00E5
        gbc.setState(0x8b5e, 0x14ab, 0x1020, 0x3672, 0xa99b, 0x2913, 0x1, 0x0);
        gbc.writeMem(0x8b5e, { 0xe0, 0xc5 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x14ab, gbc.sp());
        EXPECT(0x8b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8b5e));
        EXPECT(0xc5, gbc.readMem(0x8b5f));
        EXPECT(0x10, gbc.readMem(0xffc5));
        // E0 00E6
        gbc.setState(0x92fa, 0xbbd2, 0xfc30, 0x9168, 0x89ce, 0xa9eb, 0x1, 0x0);
        gbc.writeMem(0x92fa, { 0xe0, 0xf });
        gbc.writeMem(0xff0f, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbbd2, gbc.sp());
        EXPECT(0x92fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x92fa));
        EXPECT(0xf, gbc.readMem(0x92fb));
        EXPECT(0xfc, gbc.readMem(0xff0f));
        // E0 00E7
        gbc.setState(0x865c, 0x9018, 0x8100, 0xbd69, 0x1308, 0x1a3a, 0x0, 0x1);
        gbc.writeMem(0x865c, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9018, gbc.sp());
        EXPECT(0x865e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x865c));
        EXPECT(0x9f, gbc.readMem(0x865d));
        EXPECT(0x81, gbc.readMem(0xff9f));
        // E0 00E9
        gbc.setState(0x8424, 0xeb05, 0x7790, 0x4120, 0x76d, 0x718e, 0x0, 0x1);
        gbc.writeMem(0x8424, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xeb05, gbc.sp());
        EXPECT(0x8426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8424));
        EXPECT(0x35, gbc.readMem(0x8425));
        EXPECT(0x77, gbc.readMem(0xff35));
        // E0 00EA
        gbc.setState(0x120e, 0xc07a, 0x32d0, 0x1a4, 0xf235, 0xa1aa, 0x0, 0x0);
        gbc.writeMem(0x120e, { 0xe0, 0x94 });
        gbc.writeMem(0xff94, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc07a, gbc.sp());
        EXPECT(0x1210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xff94));
        // E0 00EB
        gbc.setState(0x2d3f, 0xe290, 0xaa30, 0x585c, 0xbd9, 0x1458, 0x1, 0x1);
        gbc.writeMem(0x2d3f, { 0xe0, 0xe9 });
        gbc.writeMem(0xffe9, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe290, gbc.sp());
        EXPECT(0x2d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xffe9));
        // E0 00EC
        gbc.setState(0xbf0d, 0xd5f, 0x60d0, 0x29f5, 0x2ed2, 0xdb5c, 0x1, 0x0);
        gbc.writeMem(0xbf0d, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd5f, gbc.sp());
        EXPECT(0xbf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbf0d));
        EXPECT(0xea, gbc.readMem(0xbf0e));
        EXPECT(0x60, gbc.readMem(0xffea));
        // E0 00ED
        gbc.setState(0xbdc4, 0x370b, 0xbf60, 0x1016, 0x6e4c, 0x86e5, 0x1, 0x1);
        gbc.writeMem(0xbdc4, { 0xe0, 0x59 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x370b, gbc.sp());
        EXPECT(0xbdc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbdc4));
        EXPECT(0x59, gbc.readMem(0xbdc5));
        EXPECT(0xbf, gbc.readMem(0xff59));
        // E0 00EE
        gbc.setState(0xc734, 0xc0c5, 0xf5d0, 0x508d, 0x6572, 0x838e, 0x1, 0x1);
        gbc.writeMem(0xc734, { 0xe0, 0xa8 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc0c5, gbc.sp());
        EXPECT(0xc736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc734));
        EXPECT(0xa8, gbc.readMem(0xc735));
        EXPECT(0xf5, gbc.readMem(0xffa8));
        // E0 00EF
        gbc.setState(0x3621, 0x1120, 0xf610, 0x14fc, 0xbbcc, 0x7ec0, 0x1, 0x1);
        gbc.writeMem(0x3621, { 0xe0, 0x60 });
        gbc.writeMem(0xff60, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1120, gbc.sp());
        EXPECT(0x3623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xff60));
        // E0 00F0
        gbc.setState(0xa2de, 0x9ea5, 0x5bd0, 0x3c4f, 0x37dd, 0x83b4, 0x1, 0x1);
        gbc.writeMem(0xa2de, { 0xe0, 0x58 });
        gbc.writeMem(0xff58, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9ea5, gbc.sp());
        EXPECT(0xa2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa2de));
        EXPECT(0x58, gbc.readMem(0xa2df));
        EXPECT(0x5b, gbc.readMem(0xff58));
        // E0 00F1
        gbc.setState(0x474d, 0x894, 0x35b0, 0x710d, 0xe988, 0xab13, 0x1, 0x0);
        gbc.writeMem(0x474d, { 0xe0, 0x19 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x894, gbc.sp());
        EXPECT(0x474f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xff19));
        // E0 00F2
        gbc.setState(0x82bc, 0x330a, 0xea10, 0x3953, 0xbb88, 0xa77, 0x1, 0x0);
        gbc.writeMem(0x82bc, { 0xe0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x330a, gbc.sp());
        EXPECT(0x82be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x82bc));
        EXPECT(0xb7, gbc.readMem(0x82bd));
        EXPECT(0xea, gbc.readMem(0xffb7));
        // E0 00F3
        gbc.setState(0x70f8, 0x791c, 0x40e0, 0x26ba, 0x9ef4, 0xb4da, 0x0, 0x0);
        gbc.writeMem(0x70f8, { 0xe0, 0x41 });
        gbc.writeMem(0xff41, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x791c, gbc.sp());
        EXPECT(0x70fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xff41));
        // E0 00F4
        gbc.setState(0xb7b5, 0xe81a, 0x8cb0, 0xc5a2, 0x2465, 0xd5ff, 0x1, 0x1);
        gbc.writeMem(0xb7b5, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe81a, gbc.sp());
        EXPECT(0xb7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb7b5));
        EXPECT(0xd0, gbc.readMem(0xb7b6));
        EXPECT(0x8c, gbc.readMem(0xffd0));
        // E0 00F6
        gbc.setState(0x1452, 0x8477, 0x3840, 0x31cd, 0x429b, 0xf856, 0x1, 0x0);
        gbc.writeMem(0x1452, { 0xe0, 0x57 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8477, gbc.sp());
        EXPECT(0x1454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xff57));
        // E0 00F7
        gbc.setState(0x2746, 0x64c, 0xc0f0, 0xc0d, 0x16fb, 0x7ed2, 0x0, 0x0);
        gbc.writeMem(0x2746, { 0xe0, 0x61 });
        gbc.writeMem(0xff61, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x64c, gbc.sp());
        EXPECT(0x2748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xff61));
        // E0 00F8
        gbc.setState(0x3afe, 0x98ef, 0x68a0, 0x4040, 0x5a0e, 0x8c5, 0x0, 0x1);
        gbc.writeMem(0x3afe, { 0xe0, 0x16 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x98ef, gbc.sp());
        EXPECT(0x3b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xff16));
        // E0 00F9
        gbc.setState(0x5c42, 0x33fc, 0xac80, 0x2ea3, 0xfd6f, 0x7d1, 0x0, 0x0);
        gbc.writeMem(0x5c42, { 0xe0, 0x5d });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x33fc, gbc.sp());
        EXPECT(0x5c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xff5d));
        // E0 00FB
        gbc.setState(0x402f, 0xd4cd, 0xc840, 0xf7f2, 0x6a12, 0x443, 0x0, 0x0);
        gbc.writeMem(0x402f, { 0xe0, 0x42 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd4cd, gbc.sp());
        EXPECT(0x4031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xff42));
        // E0 00FC
        gbc.setState(0x8f48, 0x2a9e, 0x74a0, 0x292, 0xb224, 0xd243, 0x0, 0x0);
        gbc.writeMem(0x8f48, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2a9e, gbc.sp());
        EXPECT(0x8f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8f48));
        EXPECT(0x5e, gbc.readMem(0x8f49));
        EXPECT(0x74, gbc.readMem(0xff5e));
        // E0 00FD
        gbc.setState(0x2b81, 0xe9b4, 0xd8a0, 0xd858, 0xaae1, 0x1a7b, 0x1, 0x1);
        gbc.writeMem(0x2b81, { 0xe0, 0xc2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe9b4, gbc.sp());
        EXPECT(0x2b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xffc2));
        // E0 00FE
        gbc.setState(0xae04, 0x2e52, 0x18c0, 0xd39e, 0x3e42, 0x1a28, 0x0, 0x0);
        gbc.writeMem(0xae04, { 0xe0, 0xfe });
        gbc.writeMem(0xfffe, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2e52, gbc.sp());
        EXPECT(0xae06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xae04));
        EXPECT(0xfe, gbc.readMem(0xae05));
        EXPECT(0x18, gbc.readMem(0xfffe));
        // E0 00FF
        gbc.setState(0xafe3, 0x9de6, 0xec30, 0xd875, 0x7881, 0xee2f, 0x0, 0x0);
        gbc.writeMem(0xafe3, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9de6, gbc.sp());
        EXPECT(0xafe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xafe3));
        EXPECT(0xa2, gbc.readMem(0xafe4));
        EXPECT(0xec, gbc.readMem(0xffa2));
        // E0 0100
        gbc.setState(0x4e70, 0xabac, 0x450, 0xe3f0, 0x78ab, 0x71f5, 0x0, 0x1);
        gbc.writeMem(0x4e70, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xabac, gbc.sp());
        EXPECT(0x4e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xff0e));
        // E0 0101
        gbc.setState(0xee68, 0x5ffd, 0xd390, 0x6992, 0xb436, 0x2ff1, 0x1, 0x1);
        gbc.writeMem(0xee68, { 0xe0, 0x4e });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5ffd, gbc.sp());
        EXPECT(0xee6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xee68));
        EXPECT(0x4e, gbc.readMem(0xee69));
        EXPECT(0xd3, gbc.readMem(0xff4e));
        // E0 0102
        gbc.setState(0xd004, 0x2849, 0x3c40, 0xefeb, 0x97de, 0xc6cc, 0x1, 0x0);
        gbc.writeMem(0xd004, { 0xe0, 0xcd });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2849, gbc.sp());
        EXPECT(0xd006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd004));
        EXPECT(0xcd, gbc.readMem(0xd005));
        EXPECT(0x3c, gbc.readMem(0xffcd));
        // E0 0103
        gbc.setState(0x6ba2, 0xa26a, 0xe960, 0x1577, 0xb0c7, 0xfdf7, 0x1, 0x0);
        gbc.writeMem(0x6ba2, { 0xe0, 0x43 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa26a, gbc.sp());
        EXPECT(0x6ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xff43));
        // E0 0105
        gbc.setState(0x453e, 0xdf59, 0xa880, 0x7945, 0x7654, 0x5b03, 0x0, 0x1);
        gbc.writeMem(0x453e, { 0xe0, 0x8 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdf59, gbc.sp());
        EXPECT(0x4540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xff08));
        // E0 0106
        gbc.setState(0xb962, 0x26e1, 0xb8d0, 0x2874, 0x327a, 0x215e, 0x0, 0x0);
        gbc.writeMem(0xb962, { 0xe0, 0x71 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x26e1, gbc.sp());
        EXPECT(0xb964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb962));
        EXPECT(0x71, gbc.readMem(0xb963));
        EXPECT(0xb8, gbc.readMem(0xff71));
        // E0 0107
        gbc.setState(0x11f0, 0xf937, 0x4250, 0x653d, 0x18c1, 0x49e, 0x0, 0x1);
        gbc.writeMem(0x11f0, { 0xe0, 0x9d });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf937, gbc.sp());
        EXPECT(0x11f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xff9d));
        // E0 0108
        gbc.setState(0xe3a9, 0x29ca, 0x4180, 0xcef7, 0x907a, 0x42e, 0x0, 0x0);
        gbc.writeMem(0xe3a9, { 0xe0, 0x38 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x29ca, gbc.sp());
        EXPECT(0xe3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe3a9));
        EXPECT(0x38, gbc.readMem(0xe3aa));
        EXPECT(0x41, gbc.readMem(0xff38));
        // E0 0109
        gbc.setState(0x8952, 0xcfa1, 0x23c0, 0x4ebf, 0x862c, 0xc04d, 0x1, 0x1);
        gbc.writeMem(0x8952, { 0xe0, 0x3e });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcfa1, gbc.sp());
        EXPECT(0x8954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8952));
        EXPECT(0x3e, gbc.readMem(0x8953));
        EXPECT(0x23, gbc.readMem(0xff3e));
        // E0 010A
        gbc.setState(0x895f, 0x5176, 0x61a0, 0xadf3, 0x8b8e, 0xbc31, 0x1, 0x1);
        gbc.writeMem(0x895f, { 0xe0, 0x86 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5176, gbc.sp());
        EXPECT(0x8961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x895f));
        EXPECT(0x86, gbc.readMem(0x8960));
        EXPECT(0x61, gbc.readMem(0xff86));
        // E0 010B
        gbc.setState(0x8e49, 0xf5da, 0xd720, 0x2366, 0xdb1b, 0xa2f7, 0x0, 0x0);
        gbc.writeMem(0x8e49, { 0xe0, 0x77 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf5da, gbc.sp());
        EXPECT(0x8e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8e49));
        EXPECT(0x77, gbc.readMem(0x8e4a));
        EXPECT(0xd7, gbc.readMem(0xff77));
        // E0 010C
        gbc.setState(0xd5e, 0xc098, 0xabb0, 0x512d, 0xea1a, 0xb2b3, 0x1, 0x1);
        gbc.writeMem(0xd5e, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc098, gbc.sp());
        EXPECT(0xd60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xff5f));
        // E0 010D
        gbc.setState(0x46e7, 0xb8a5, 0x78b0, 0x53ca, 0x1a79, 0xd1af, 0x0, 0x1);
        gbc.writeMem(0x46e7, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb8a5, gbc.sp());
        EXPECT(0x46e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xff52));
        // E0 010E
        gbc.setState(0x367c, 0xacbd, 0x9550, 0x5771, 0xb74e, 0x2cc6, 0x1, 0x0);
        gbc.writeMem(0x367c, { 0xe0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xacbd, gbc.sp());
        EXPECT(0x367e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xfff9));
        // E0 010F
        gbc.setState(0xda5e, 0x3e31, 0xf040, 0x4154, 0xab66, 0x20fb, 0x1, 0x1);
        gbc.writeMem(0xda5e, { 0xe0, 0x6c });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3e31, gbc.sp());
        EXPECT(0xda60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xda5e));
        EXPECT(0x6c, gbc.readMem(0xda5f));
        EXPECT(0xf0, gbc.readMem(0xff6c));
        // E0 0110
        gbc.setState(0x3a0e, 0x87cd, 0x9580, 0xa4ca, 0x5fd8, 0x67eb, 0x0, 0x1);
        gbc.writeMem(0x3a0e, { 0xe0, 0xc1 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x87cd, gbc.sp());
        EXPECT(0x3a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xffc1));
        // E0 0111
        gbc.setState(0x9728, 0x7418, 0x9a20, 0xd924, 0x5b3, 0xc354, 0x0, 0x0);
        gbc.writeMem(0x9728, { 0xe0, 0xc1 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7418, gbc.sp());
        EXPECT(0x972a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9728));
        EXPECT(0xc1, gbc.readMem(0x9729));
        EXPECT(0x9a, gbc.readMem(0xffc1));
        // E0 0112
        gbc.setState(0x6804, 0x8f91, 0x9670, 0xea3b, 0xb660, 0x3906, 0x1, 0x0);
        gbc.writeMem(0x6804, { 0xe0, 0x12 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8f91, gbc.sp());
        EXPECT(0x6806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xff12));
        // E0 0113
        gbc.setState(0xe50c, 0xc23d, 0x7010, 0xe63c, 0xb940, 0x63ea, 0x0, 0x1);
        gbc.writeMem(0xe50c, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc23d, gbc.sp());
        EXPECT(0xe50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe50c));
        EXPECT(0xcb, gbc.readMem(0xe50d));
        EXPECT(0x70, gbc.readMem(0xffcb));
        // E0 0114
        gbc.setState(0xca7, 0x923a, 0x95e0, 0xf64b, 0xb4a1, 0xde04, 0x1, 0x1);
        gbc.writeMem(0xca7, { 0xe0, 0x2d });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x923a, gbc.sp());
        EXPECT(0xca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xff2d));
        // E0 0115
        gbc.setState(0x11ee, 0x882, 0x37e0, 0xa98, 0xb473, 0x4551, 0x0, 0x0);
        gbc.writeMem(0x11ee, { 0xe0, 0xe3 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x882, gbc.sp());
        EXPECT(0x11f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xffe3));
        // E0 0116
        gbc.setState(0x8472, 0x80d6, 0x3f40, 0x3247, 0xdf97, 0xcab3, 0x1, 0x0);
        gbc.writeMem(0x8472, { 0xe0, 0x5d });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x80d6, gbc.sp());
        EXPECT(0x8474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8472));
        EXPECT(0x5d, gbc.readMem(0x8473));
        EXPECT(0x3f, gbc.readMem(0xff5d));
        // E0 0117
        gbc.setState(0xba00, 0x8452, 0x900, 0xf28b, 0xa226, 0x33c2, 0x1, 0x0);
        gbc.writeMem(0xba00, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8452, gbc.sp());
        EXPECT(0xba02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xba00));
        EXPECT(0x5e, gbc.readMem(0xba01));
        EXPECT(0x9, gbc.readMem(0xff5e));
        // E0 0118
        gbc.setState(0x1adc, 0x2473, 0xf260, 0x39da, 0x25c3, 0x5653, 0x1, 0x0);
        gbc.writeMem(0x1adc, { 0xe0, 0xa3 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2473, gbc.sp());
        EXPECT(0x1ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xffa3));
        // E0 0119
        gbc.setState(0xacf0, 0x482c, 0x10b0, 0xc741, 0x4cf4, 0xc0a2, 0x0, 0x0);
        gbc.writeMem(0xacf0, { 0xe0, 0x59 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x482c, gbc.sp());
        EXPECT(0xacf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xacf0));
        EXPECT(0x59, gbc.readMem(0xacf1));
        EXPECT(0x10, gbc.readMem(0xff59));
        // E0 011A
        gbc.setState(0x64f, 0x11d4, 0x7390, 0xb937, 0x39dd, 0x8207, 0x0, 0x1);
        gbc.writeMem(0x64f, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x11d4, gbc.sp());
        EXPECT(0x651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xff2f));
        // E0 011B
        gbc.setState(0x163a, 0x2f8b, 0xc50, 0xf6c, 0x92ba, 0xc1f2, 0x0, 0x0);
        gbc.writeMem(0x163a, { 0xe0, 0x3e });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2f8b, gbc.sp());
        EXPECT(0x163c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xff3e));
        // E0 011C
        gbc.setState(0xd605, 0x7991, 0x86a0, 0xe154, 0x17a0, 0x60a5, 0x0, 0x0);
        gbc.writeMem(0xd605, { 0xe0, 0x70 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7991, gbc.sp());
        EXPECT(0xd607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd605));
        EXPECT(0x70, gbc.readMem(0xd606));
        EXPECT(0x86, gbc.readMem(0xff70));
        // E0 011D
        gbc.setState(0x41dc, 0xcc89, 0x4820, 0x7099, 0x7db0, 0xf2e2, 0x1, 0x1);
        gbc.writeMem(0x41dc, { 0xe0, 0x24 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcc89, gbc.sp());
        EXPECT(0x41de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xff24));
        // E0 011E
        gbc.setState(0x1612, 0x2fe3, 0x4480, 0x3116, 0x2afa, 0xcf4c, 0x1, 0x0);
        gbc.writeMem(0x1612, { 0xe0, 0xba });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2fe3, gbc.sp());
        EXPECT(0x1614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xffba));
        // E0 011F
        gbc.setState(0x4cf8, 0x3709, 0x83e0, 0xd65e, 0x5bbb, 0xb779, 0x0, 0x0);
        gbc.writeMem(0x4cf8, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3709, gbc.sp());
        EXPECT(0x4cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xff9f));
        // E0 0120
        gbc.setState(0x1e06, 0xa9a9, 0x24d0, 0xe69, 0x5a77, 0xdb63, 0x0, 0x0);
        gbc.writeMem(0x1e06, { 0xe0, 0x75 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa9a9, gbc.sp());
        EXPECT(0x1e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xff75));
        // E0 0121
        gbc.setState(0x808a, 0x2453, 0xf610, 0xc047, 0xc2eb, 0x2c85, 0x1, 0x0);
        gbc.writeMem(0x808a, { 0xe0, 0x16 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2453, gbc.sp());
        EXPECT(0x808c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x808a));
        EXPECT(0x16, gbc.readMem(0x808b));
        EXPECT(0xf6, gbc.readMem(0xff16));
        // E0 0122
        gbc.setState(0x9cb0, 0xa957, 0xedc0, 0xe903, 0xd37, 0xc717, 0x1, 0x0);
        gbc.writeMem(0x9cb0, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa957, gbc.sp());
        EXPECT(0x9cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9cb0));
        EXPECT(0x31, gbc.readMem(0x9cb1));
        EXPECT(0xed, gbc.readMem(0xff31));
        // E0 0124
        gbc.setState(0x2455, 0x8ac6, 0xde20, 0x9fa3, 0x6fd2, 0x9642, 0x1, 0x1);
        gbc.writeMem(0x2455, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8ac6, gbc.sp());
        EXPECT(0x2457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xff83));
        // E0 0125
        gbc.setState(0x2490, 0x5a68, 0x23a0, 0x43d1, 0xa28f, 0xa9d1, 0x0, 0x1);
        gbc.writeMem(0x2490, { 0xe0, 0xeb });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5a68, gbc.sp());
        EXPECT(0x2492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xffeb));
        // E0 0126
        gbc.setState(0xd01b, 0x66e3, 0x4870, 0x958e, 0xb6ec, 0xe323, 0x0, 0x1);
        gbc.writeMem(0xd01b, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x66e3, gbc.sp());
        EXPECT(0xd01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd01b));
        EXPECT(0xad, gbc.readMem(0xd01c));
        EXPECT(0x48, gbc.readMem(0xffad));
        // E0 0127
        gbc.setState(0x84c, 0xa27f, 0x51b0, 0x432, 0x5e85, 0x6ea3, 0x0, 0x0);
        gbc.writeMem(0x84c, { 0xe0, 0xd2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa27f, gbc.sp());
        EXPECT(0x84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xffd2));
        // E0 0128
        gbc.setState(0xc75d, 0x98ea, 0x5db0, 0xdddb, 0x8b85, 0x3797, 0x0, 0x1);
        gbc.writeMem(0xc75d, { 0xe0, 0x9 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x98ea, gbc.sp());
        EXPECT(0xc75f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc75d));
        EXPECT(0x9, gbc.readMem(0xc75e));
        EXPECT(0x5d, gbc.readMem(0xff09));
        // E0 0129
        gbc.setState(0x5dcd, 0x2d3e, 0x59d0, 0x60d8, 0x75e8, 0xc8f0, 0x0, 0x0);
        gbc.writeMem(0x5dcd, { 0xe0, 0xc4 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2d3e, gbc.sp());
        EXPECT(0x5dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xffc4));
        // E0 012A
        gbc.setState(0x598, 0xe3d1, 0x7180, 0x271b, 0xdcb3, 0x99fe, 0x0, 0x1);
        gbc.writeMem(0x598, { 0xe0, 0xeb });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe3d1, gbc.sp());
        EXPECT(0x59a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xffeb));
        // E0 012B
        gbc.setState(0x89aa, 0x5a83, 0xfc70, 0xea7, 0x1ede, 0x9e45, 0x0, 0x0);
        gbc.writeMem(0x89aa, { 0xe0, 0x96 });
        gbc.writeMem(0xff96, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5a83, gbc.sp());
        EXPECT(0x89ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x89aa));
        EXPECT(0x96, gbc.readMem(0x89ab));
        EXPECT(0xfc, gbc.readMem(0xff96));
        // E0 012C
        gbc.setState(0xecb, 0x9580, 0x10e0, 0x77d3, 0xebe8, 0x3eba, 0x0, 0x1);
        gbc.writeMem(0xecb, { 0xe0, 0x6e });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9580, gbc.sp());
        EXPECT(0xecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xff6e));
        // E0 012D
        gbc.setState(0x6261, 0x2f00, 0x3ca0, 0xe402, 0xd34, 0xfe58, 0x0, 0x0);
        gbc.writeMem(0x6261, { 0xe0, 0x26 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2f00, gbc.sp());
        EXPECT(0x6263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xff26));
        // E0 012F
        gbc.setState(0xb34b, 0x9665, 0x5f90, 0x675a, 0x8185, 0x2e5d, 0x0, 0x0);
        gbc.writeMem(0xb34b, { 0xe0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9665, gbc.sp());
        EXPECT(0xb34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb34b));
        EXPECT(0xc9, gbc.readMem(0xb34c));
        EXPECT(0x5f, gbc.readMem(0xffc9));
        // E0 0130
        gbc.setState(0x1aed, 0x1582, 0x6250, 0x3e02, 0x1ded, 0xb0c3, 0x1, 0x0);
        gbc.writeMem(0x1aed, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1582, gbc.sp());
        EXPECT(0x1aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xffcb));
        // E0 0131
        gbc.setState(0x256c, 0x7b36, 0x1df0, 0x9c5c, 0xf992, 0x9930, 0x0, 0x0);
        gbc.writeMem(0x256c, { 0xe0, 0x1e });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7b36, gbc.sp());
        EXPECT(0x256e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xff1e));
        // E0 0132
        gbc.setState(0x6b0b, 0xbe63, 0x22e0, 0x5b96, 0x4f4d, 0xdcf7, 0x1, 0x0);
        gbc.writeMem(0x6b0b, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbe63, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xffca));
        // E0 0133
        gbc.setState(0xa6d4, 0x75fc, 0xd920, 0x6763, 0x7a90, 0x1c27, 0x1, 0x1);
        gbc.writeMem(0xa6d4, { 0xe0, 0x39 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x75fc, gbc.sp());
        EXPECT(0xa6d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa6d4));
        EXPECT(0x39, gbc.readMem(0xa6d5));
        EXPECT(0xd9, gbc.readMem(0xff39));
        // E0 0134
        gbc.setState(0xefb4, 0xafcd, 0x130, 0xa209, 0xb4d4, 0x6aa5, 0x1, 0x1);
        gbc.writeMem(0xefb4, { 0xe0, 0x29 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xafcd, gbc.sp());
        EXPECT(0xefb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xefb4));
        EXPECT(0x29, gbc.readMem(0xefb5));
        EXPECT(0x1, gbc.readMem(0xff29));
        // E0 0135
        gbc.setState(0x2635, 0xd59d, 0xf450, 0xaa93, 0x80b4, 0xd9e7, 0x0, 0x0);
        gbc.writeMem(0x2635, { 0xe0, 0x9 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd59d, gbc.sp());
        EXPECT(0x2637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xff09));
        // E0 0136
        gbc.setState(0x5392, 0xf3, 0x3f30, 0x66cf, 0x1850, 0x4d8d, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0xe0, 0xf6 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf3, gbc.sp());
        EXPECT(0x5394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xfff6));
        // E0 0137
        gbc.setState(0x3e99, 0x4dac, 0x9b50, 0xec3c, 0x9ea5, 0x6770, 0x0, 0x0);
        gbc.writeMem(0x3e99, { 0xe0, 0xe4 });
        gbc.writeMem(0xffe4, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4dac, gbc.sp());
        EXPECT(0x3e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xffe4));
        // E0 0138
        gbc.setState(0xbe9f, 0x6e4e, 0xe270, 0xbffe, 0xd22a, 0x919d, 0x0, 0x1);
        gbc.writeMem(0xbe9f, { 0xe0, 0x6c });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6e4e, gbc.sp());
        EXPECT(0xbea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbe9f));
        EXPECT(0x6c, gbc.readMem(0xbea0));
        EXPECT(0xe2, gbc.readMem(0xff6c));
        // E0 0139
        gbc.setState(0xd0c1, 0x7033, 0x3f20, 0x910c, 0x99c1, 0x3bf2, 0x1, 0x0);
        gbc.writeMem(0xd0c1, { 0xe0, 0xbf });
        gbc.writeMem(0xffbf, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7033, gbc.sp());
        EXPECT(0xd0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd0c1));
        EXPECT(0xbf, gbc.readMem(0xd0c2));
        EXPECT(0x3f, gbc.readMem(0xffbf));
        // E0 013A
        gbc.setState(0xb66, 0xd60e, 0xf470, 0x67fa, 0xbaad, 0x24e0, 0x0, 0x1);
        gbc.writeMem(0xb66, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd60e, gbc.sp());
        EXPECT(0xb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xff2f));
        // E0 013B
        gbc.setState(0x4c87, 0x7bb1, 0x2f80, 0x3965, 0x533e, 0x4272, 0x0, 0x0);
        gbc.writeMem(0x4c87, { 0xe0, 0x33 });
        gbc.writeMem(0xff33, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7bb1, gbc.sp());
        EXPECT(0x4c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xff33));
        // E0 013C
        gbc.setState(0x94, 0xc441, 0x8260, 0xd449, 0x9002, 0xda2a, 0x0, 0x0);
        gbc.writeMem(0x94, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc441, gbc.sp());
        EXPECT(0x96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xff4c));
        // E0 013D
        gbc.setState(0xad0a, 0x132a, 0x620, 0x47d5, 0xfb8, 0x5dbf, 0x1, 0x0);
        gbc.writeMem(0xad0a, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x132a, gbc.sp());
        EXPECT(0xad0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xad0a));
        EXPECT(0x35, gbc.readMem(0xad0b));
        EXPECT(0x6, gbc.readMem(0xff35));
        // E0 013E
        gbc.setState(0xb998, 0x4ef3, 0x65c0, 0x7b60, 0x2ff7, 0x5694, 0x1, 0x0);
        gbc.writeMem(0xb998, { 0xe0, 0xb3 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4ef3, gbc.sp());
        EXPECT(0xb99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb998));
        EXPECT(0xb3, gbc.readMem(0xb999));
        EXPECT(0x65, gbc.readMem(0xffb3));
        // E0 013F
        gbc.setState(0x8d22, 0xbbe6, 0xd8b0, 0xdd55, 0x8ccb, 0xc17d, 0x0, 0x1);
        gbc.writeMem(0x8d22, { 0xe0, 0xd2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbbe6, gbc.sp());
        EXPECT(0x8d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8d22));
        EXPECT(0xd2, gbc.readMem(0x8d23));
        EXPECT(0xd8, gbc.readMem(0xffd2));
        // E0 0140
        gbc.setState(0xf91, 0xfa2d, 0x72f0, 0x6d44, 0x59a9, 0xd985, 0x0, 0x0);
        gbc.writeMem(0xf91, { 0xe0, 0xe8 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfa2d, gbc.sp());
        EXPECT(0xf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xffe8));
        // E0 0141
        gbc.setState(0xd01e, 0xe561, 0x5680, 0x418c, 0xeec, 0x795e, 0x1, 0x1);
        gbc.writeMem(0xd01e, { 0xe0, 0xff });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe561, gbc.sp());
        EXPECT(0xd020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd01e));
        EXPECT(0xff, gbc.readMem(0xd01f));
        EXPECT(0x56, gbc.readMem(0xffff));
        // E0 0142
        gbc.setState(0x46a4, 0xa753, 0xdf20, 0xb6d2, 0x64a, 0x4aa0, 0x1, 0x0);
        gbc.writeMem(0x46a4, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa753, gbc.sp());
        EXPECT(0x46a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xffb8));
        // E0 0143
        gbc.setState(0x3c1a, 0xd574, 0xced0, 0x495f, 0x79b7, 0x4bb0, 0x1, 0x1);
        gbc.writeMem(0x3c1a, { 0xe0, 0x73 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd574, gbc.sp());
        EXPECT(0x3c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xff73));
        // E0 0144
        gbc.setState(0x9a4e, 0x9e30, 0x3510, 0x77b8, 0xf8d4, 0x436f, 0x1, 0x0);
        gbc.writeMem(0x9a4e, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9e30, gbc.sp());
        EXPECT(0x9a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9a4e));
        EXPECT(0xad, gbc.readMem(0x9a4f));
        EXPECT(0x35, gbc.readMem(0xffad));
        // E0 0145
        gbc.setState(0x75a1, 0x7716, 0xc580, 0x5500, 0x76dc, 0xd403, 0x0, 0x1);
        gbc.writeMem(0x75a1, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7716, gbc.sp());
        EXPECT(0x75a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xff83));
        // E0 0147
        gbc.setState(0xaf74, 0xebcb, 0xb370, 0xbd72, 0x3854, 0x6e69, 0x0, 0x1);
        gbc.writeMem(0xaf74, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xebcb, gbc.sp());
        EXPECT(0xaf76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xaf74));
        EXPECT(0x3, gbc.readMem(0xaf75));
        EXPECT(0xb3, gbc.readMem(0xff03));
        // E0 0149
        gbc.setState(0x4268, 0x3619, 0x65b0, 0xb286, 0xcf02, 0x4698, 0x1, 0x0);
        gbc.writeMem(0x4268, { 0xe0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3619, gbc.sp());
        EXPECT(0x426a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xfff7));
        // E0 014A
        gbc.setState(0x4a7d, 0x8aab, 0xae0, 0x25ea, 0xf650, 0xe4c5, 0x0, 0x0);
        gbc.writeMem(0x4a7d, { 0xe0, 0x70 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8aab, gbc.sp());
        EXPECT(0x4a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xff70));
        // E0 014B
        gbc.setState(0xd384, 0xcb38, 0x7310, 0x3e8e, 0x5472, 0x89cc, 0x0, 0x1);
        gbc.writeMem(0xd384, { 0xe0, 0xb3 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcb38, gbc.sp());
        EXPECT(0xd386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd384));
        EXPECT(0xb3, gbc.readMem(0xd385));
        EXPECT(0x73, gbc.readMem(0xffb3));
        // E0 014C
        gbc.setState(0x77be, 0xdcc2, 0x1cb0, 0x7dc, 0x3f12, 0xfab1, 0x1, 0x1);
        gbc.writeMem(0x77be, { 0xe0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdcc2, gbc.sp());
        EXPECT(0x77c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xfff7));
        // E0 014D
        gbc.setState(0xde62, 0xfbbf, 0x6b00, 0x539b, 0xb379, 0x9df1, 0x0, 0x0);
        gbc.writeMem(0xde62, { 0xe0, 0xd9 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfbbf, gbc.sp());
        EXPECT(0xde64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xde62));
        EXPECT(0xd9, gbc.readMem(0xde63));
        EXPECT(0x6b, gbc.readMem(0xffd9));
        // E0 014F
        gbc.setState(0x3807, 0xb5f5, 0xd9e0, 0x4275, 0x924e, 0x8eb6, 0x1, 0x0);
        gbc.writeMem(0x3807, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb5f5, gbc.sp());
        EXPECT(0x3809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xff0e));
        // E0 0151
        gbc.setState(0xb45c, 0x9afd, 0xd350, 0x5897, 0x8dd2, 0xc0, 0x1, 0x0);
        gbc.writeMem(0xb45c, { 0xe0, 0x3b });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9afd, gbc.sp());
        EXPECT(0xb45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb45c));
        EXPECT(0x3b, gbc.readMem(0xb45d));
        EXPECT(0xd3, gbc.readMem(0xff3b));
        // E0 0153
        gbc.setState(0x8d88, 0x3fbf, 0xe5c0, 0x26cc, 0x54da, 0x35f5, 0x1, 0x1);
        gbc.writeMem(0x8d88, { 0xe0, 0x99 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3fbf, gbc.sp());
        EXPECT(0x8d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8d88));
        EXPECT(0x99, gbc.readMem(0x8d89));
        EXPECT(0xe5, gbc.readMem(0xff99));
        // E0 0154
        gbc.setState(0x220e, 0x89c3, 0x5950, 0x28db, 0x19c3, 0xe0e2, 0x0, 0x0);
        gbc.writeMem(0x220e, { 0xe0, 0x29 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x89c3, gbc.sp());
        EXPECT(0x2210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xff29));
        // E0 0155
        gbc.setState(0x9bf7, 0x20c, 0x9440, 0x4e71, 0x9ef6, 0x10a7, 0x0, 0x0);
        gbc.writeMem(0x9bf7, { 0xe0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x20c, gbc.sp());
        EXPECT(0x9bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9bf7));
        EXPECT(0xb7, gbc.readMem(0x9bf8));
        EXPECT(0x94, gbc.readMem(0xffb7));
        // E0 0156
        gbc.setState(0x6e8b, 0x2e54, 0xac30, 0x372c, 0xa15e, 0xb230, 0x1, 0x1);
        gbc.writeMem(0x6e8b, { 0xe0, 0xfc });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2e54, gbc.sp());
        EXPECT(0x6e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xfffc));
        // E0 0158
        gbc.setState(0x17f, 0xf752, 0x8f90, 0xf120, 0xdb31, 0xa216, 0x0, 0x0);
        gbc.writeMem(0x17f, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf752, gbc.sp());
        EXPECT(0x181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xff5e));
        // E0 0159
        gbc.setState(0x54e5, 0xf18a, 0xd020, 0x7c17, 0x9188, 0xb4d3, 0x1, 0x1);
        gbc.writeMem(0x54e5, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf18a, gbc.sp());
        EXPECT(0x54e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xff07));
        // E0 015A
        gbc.setState(0xa67a, 0xeef9, 0x97e0, 0x564b, 0x982, 0x80e5, 0x1, 0x0);
        gbc.writeMem(0xa67a, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xeef9, gbc.sp());
        EXPECT(0xa67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa67a));
        EXPECT(0xd0, gbc.readMem(0xa67b));
        EXPECT(0x97, gbc.readMem(0xffd0));
        // E0 015B
        gbc.setState(0x6da4, 0x3030, 0xffd0, 0xe5a6, 0x8d70, 0xa1e1, 0x0, 0x0);
        gbc.writeMem(0x6da4, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0x6da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xff76));
        // E0 015C
        gbc.setState(0xbd93, 0xb98b, 0x1630, 0x926c, 0xa4d8, 0xa38a, 0x1, 0x0);
        gbc.writeMem(0xbd93, { 0xe0, 0xa6 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb98b, gbc.sp());
        EXPECT(0xbd95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbd93));
        EXPECT(0xa6, gbc.readMem(0xbd94));
        EXPECT(0x16, gbc.readMem(0xffa6));
        // E0 015D
        gbc.setState(0x7a9, 0xd037, 0x35a0, 0xa152, 0x93ea, 0xb9b4, 0x1, 0x1);
        gbc.writeMem(0x7a9, { 0xe0, 0x25 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd037, gbc.sp());
        EXPECT(0x7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xff25));
        // E0 015E
        gbc.setState(0x3bbf, 0x9838, 0xff0, 0xe3c4, 0x81a4, 0x2c5c, 0x0, 0x1);
        gbc.writeMem(0x3bbf, { 0xe0, 0x5b });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9838, gbc.sp());
        EXPECT(0x3bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xff5b));
        // E0 015F
        gbc.setState(0x321e, 0xf409, 0x32c0, 0x9b4f, 0xa65b, 0x6599, 0x1, 0x1);
        gbc.writeMem(0x321e, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf409, gbc.sp());
        EXPECT(0x3220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xffca));
        // E0 0160
        gbc.setState(0xdcf2, 0x65e, 0x9550, 0x8c74, 0x4a0, 0x12ad, 0x1, 0x0);
        gbc.writeMem(0xdcf2, { 0xe0, 0x34 });
        gbc.writeMem(0xff34, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x65e, gbc.sp());
        EXPECT(0xdcf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdcf2));
        EXPECT(0x34, gbc.readMem(0xdcf3));
        EXPECT(0x95, gbc.readMem(0xff34));
        // E0 0161
        gbc.setState(0xdb7b, 0xe13e, 0x2f70, 0x9aa8, 0x9efa, 0xe9d9, 0x1, 0x1);
        gbc.writeMem(0xdb7b, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0xdb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdb7b));
        EXPECT(0xb8, gbc.readMem(0xdb7c));
        EXPECT(0x2f, gbc.readMem(0xffb8));
        // E0 0162
        gbc.setState(0x92a7, 0x477c, 0x6d30, 0xa361, 0xf25c, 0x1897, 0x1, 0x0);
        gbc.writeMem(0x92a7, { 0xe0, 0x25 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x477c, gbc.sp());
        EXPECT(0x92a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x92a7));
        EXPECT(0x25, gbc.readMem(0x92a8));
        EXPECT(0x6d, gbc.readMem(0xff25));
        // E0 0163
        gbc.setState(0xa6cc, 0xd72c, 0xbef0, 0x4230, 0xdd2e, 0x4443, 0x1, 0x1);
        gbc.writeMem(0xa6cc, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd72c, gbc.sp());
        EXPECT(0xa6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa6cc));
        EXPECT(0x68, gbc.readMem(0xa6cd));
        EXPECT(0xbe, gbc.readMem(0xff68));
        // E0 0164
        gbc.setState(0xe4e9, 0x5e2d, 0x13f0, 0xd2ca, 0x26c5, 0x41b7, 0x1, 0x1);
        gbc.writeMem(0xe4e9, { 0xe0, 0xbf });
        gbc.writeMem(0xffbf, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5e2d, gbc.sp());
        EXPECT(0xe4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe4e9));
        EXPECT(0xbf, gbc.readMem(0xe4ea));
        EXPECT(0x13, gbc.readMem(0xffbf));
        // E0 0165
        gbc.setState(0xba2, 0xabf9, 0xb30, 0xc329, 0x1e2e, 0xe069, 0x1, 0x1);
        gbc.writeMem(0xba2, { 0xe0, 0x6a });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xabf9, gbc.sp());
        EXPECT(0xba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xff6a));
        // E0 0166
        gbc.setState(0x2779, 0x8371, 0x28f0, 0xc295, 0xbedf, 0x9dc5, 0x1, 0x1);
        gbc.writeMem(0x2779, { 0xe0, 0x53 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8371, gbc.sp());
        EXPECT(0x277b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xff53));
        // E0 0167
        gbc.setState(0x8efd, 0x272e, 0xdf80, 0x2a3f, 0x5347, 0xaf17, 0x0, 0x0);
        gbc.writeMem(0x8efd, { 0xe0, 0x64 });
        gbc.writeMem(0xff64, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x272e, gbc.sp());
        EXPECT(0x8eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8efd));
        EXPECT(0x64, gbc.readMem(0x8efe));
        EXPECT(0xdf, gbc.readMem(0xff64));
        // E0 0168
        gbc.setState(0xe862, 0x58c7, 0xc240, 0x666d, 0x6df, 0xb15c, 0x0, 0x1);
        gbc.writeMem(0xe862, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x58c7, gbc.sp());
        EXPECT(0xe864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe862));
        EXPECT(0xc0, gbc.readMem(0xe863));
        EXPECT(0xc2, gbc.readMem(0xffc0));
        // E0 0169
        gbc.setState(0xcd67, 0x5e39, 0x3af0, 0xd84b, 0x9777, 0x361c, 0x1, 0x1);
        gbc.writeMem(0xcd67, { 0xe0, 0xa3 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5e39, gbc.sp());
        EXPECT(0xcd69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcd67));
        EXPECT(0xa3, gbc.readMem(0xcd68));
        EXPECT(0x3a, gbc.readMem(0xffa3));
        // E0 016A
        gbc.setState(0xc748, 0xecca, 0x7b90, 0x23c2, 0x90b, 0x978f, 0x1, 0x0);
        gbc.writeMem(0xc748, { 0xe0, 0x95 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xecca, gbc.sp());
        EXPECT(0xc74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc748));
        EXPECT(0x95, gbc.readMem(0xc749));
        EXPECT(0x7b, gbc.readMem(0xff95));
        // E0 016B
        gbc.setState(0xde27, 0x9618, 0x6860, 0x8bf5, 0x49de, 0x2fc8, 0x0, 0x1);
        gbc.writeMem(0xde27, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9618, gbc.sp());
        EXPECT(0xde29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xde27));
        EXPECT(0x2f, gbc.readMem(0xde28));
        EXPECT(0x68, gbc.readMem(0xff2f));
        // E0 016C
        gbc.setState(0xaba9, 0x3a71, 0x54c0, 0x91dd, 0xc1d9, 0x8572, 0x0, 0x1);
        gbc.writeMem(0xaba9, { 0xe0, 0xee });
        gbc.writeMem(0xffee, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3a71, gbc.sp());
        EXPECT(0xabab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xaba9));
        EXPECT(0xee, gbc.readMem(0xabaa));
        EXPECT(0x54, gbc.readMem(0xffee));
        // E0 016D
        gbc.setState(0xdd60, 0xeb21, 0x8f50, 0x73b2, 0xe888, 0xfdca, 0x0, 0x1);
        gbc.writeMem(0xdd60, { 0xe0, 0xc7 });
        gbc.writeMem(0xffc7, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xeb21, gbc.sp());
        EXPECT(0xdd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdd60));
        EXPECT(0xc7, gbc.readMem(0xdd61));
        EXPECT(0x8f, gbc.readMem(0xffc7));
        // E0 016E
        gbc.setState(0xdd14, 0xe3b2, 0x2b70, 0x5a9a, 0x78d4, 0x6840, 0x0, 0x1);
        gbc.writeMem(0xdd14, { 0xe0, 0x92 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe3b2, gbc.sp());
        EXPECT(0xdd16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdd14));
        EXPECT(0x92, gbc.readMem(0xdd15));
        EXPECT(0x2b, gbc.readMem(0xff92));
        // E0 016F
        gbc.setState(0x859, 0xfaf7, 0xb0b0, 0x346d, 0xb932, 0xf85c, 0x1, 0x1);
        gbc.writeMem(0x859, { 0xe0, 0xfb });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfaf7, gbc.sp());
        EXPECT(0x85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xfffb));
        // E0 0170
        gbc.setState(0x177d, 0x945f, 0xc610, 0xd44e, 0x6daa, 0x642d, 0x0, 0x0);
        gbc.writeMem(0x177d, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x945f, gbc.sp());
        EXPECT(0x177f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xffdc));
        // E0 0171
        gbc.setState(0xde98, 0x5fe, 0xcc30, 0x156b, 0xc756, 0x58, 0x0, 0x1);
        gbc.writeMem(0xde98, { 0xe0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5fe, gbc.sp());
        EXPECT(0xde9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xde98));
        EXPECT(0xf9, gbc.readMem(0xde99));
        EXPECT(0xcc, gbc.readMem(0xfff9));
        // E0 0172
        gbc.setState(0xb15d, 0xb4d8, 0x47d0, 0xe279, 0x2ff5, 0x1010, 0x0, 0x1);
        gbc.writeMem(0xb15d, { 0xe0, 0xf6 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb4d8, gbc.sp());
        EXPECT(0xb15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb15d));
        EXPECT(0xf6, gbc.readMem(0xb15e));
        EXPECT(0x47, gbc.readMem(0xfff6));
        // E0 0173
        gbc.setState(0x922a, 0xf9e, 0x71f0, 0x7433, 0x9813, 0xba3a, 0x0, 0x1);
        gbc.writeMem(0x922a, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf9e, gbc.sp());
        EXPECT(0x922c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x922a));
        EXPECT(0xab, gbc.readMem(0x922b));
        EXPECT(0x71, gbc.readMem(0xffab));
        // E0 0174
        gbc.setState(0x875d, 0x5391, 0xa780, 0x39c1, 0x3cf0, 0xf5b6, 0x0, 0x1);
        gbc.writeMem(0x875d, { 0xe0, 0xbd });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5391, gbc.sp());
        EXPECT(0x875f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x875d));
        EXPECT(0xbd, gbc.readMem(0x875e));
        EXPECT(0xa7, gbc.readMem(0xffbd));
        // E0 0175
        gbc.setState(0x3d77, 0xd381, 0xc0d0, 0x95da, 0x8134, 0x14ee, 0x0, 0x0);
        gbc.writeMem(0x3d77, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd381, gbc.sp());
        EXPECT(0x3d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xffb2));
        // E0 0176
        gbc.setState(0x5057, 0x96de, 0x5a40, 0x1d12, 0x1145, 0x66f1, 0x1, 0x0);
        gbc.writeMem(0x5057, { 0xe0, 0x53 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x96de, gbc.sp());
        EXPECT(0x5059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xff53));
        // E0 0177
        gbc.setState(0xed12, 0xd91f, 0x99f0, 0xc675, 0x496d, 0xfd0b, 0x1, 0x0);
        gbc.writeMem(0xed12, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd91f, gbc.sp());
        EXPECT(0xed14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xed12));
        EXPECT(0x27, gbc.readMem(0xed13));
        EXPECT(0x99, gbc.readMem(0xff27));
        // E0 0178
        gbc.setState(0x367d, 0x114a, 0x5eb0, 0x7812, 0x2350, 0x57ab, 0x1, 0x1);
        gbc.writeMem(0x367d, { 0xe0, 0x0 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x114a, gbc.sp());
        EXPECT(0x367f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xff00));
        // E0 0179
        gbc.setState(0xcd53, 0xe826, 0xbf20, 0x8aa1, 0x4829, 0xa8a4, 0x0, 0x1);
        gbc.writeMem(0xcd53, { 0xe0, 0x5a });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe826, gbc.sp());
        EXPECT(0xcd55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcd53));
        EXPECT(0x5a, gbc.readMem(0xcd54));
        EXPECT(0xbf, gbc.readMem(0xff5a));
        // E0 017A
        gbc.setState(0x5890, 0x5f15, 0xf0b0, 0xa4fe, 0x5d76, 0x1321, 0x1, 0x0);
        gbc.writeMem(0x5890, { 0xe0, 0x5a });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5f15, gbc.sp());
        EXPECT(0x5892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xff5a));
        // E0 017B
        gbc.setState(0x2e5c, 0x216f, 0x6ec0, 0x338, 0xefa0, 0x810d, 0x1, 0x1);
        gbc.writeMem(0x2e5c, { 0xe0, 0xf3 });
        gbc.writeMem(0xfff3, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x216f, gbc.sp());
        EXPECT(0x2e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xfff3));
        // E0 017C
        gbc.setState(0x4bef, 0x40e3, 0x70, 0x1ebc, 0xeef8, 0xb911, 0x0, 0x1);
        gbc.writeMem(0x4bef, { 0xe0, 0x5a });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x40e3, gbc.sp());
        EXPECT(0x4bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xff5a));
        // E0 017D
        gbc.setState(0x5085, 0xbc35, 0x8090, 0xc33c, 0x3ded, 0x95c8, 0x0, 0x1);
        gbc.writeMem(0x5085, { 0xe0, 0x19 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbc35, gbc.sp());
        EXPECT(0x5087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xff19));
        // E0 017E
        gbc.setState(0xa8bd, 0xa919, 0x5a60, 0xd013, 0x49f4, 0x8e11, 0x1, 0x1);
        gbc.writeMem(0xa8bd, { 0xe0, 0x39 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa919, gbc.sp());
        EXPECT(0xa8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa8bd));
        EXPECT(0x39, gbc.readMem(0xa8be));
        EXPECT(0x5a, gbc.readMem(0xff39));
        // E0 017F
        gbc.setState(0xd43d, 0x6671, 0x7710, 0x82f2, 0xd33, 0x9cec, 0x0, 0x1);
        gbc.writeMem(0xd43d, { 0xe0, 0x4 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6671, gbc.sp());
        EXPECT(0xd43f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd43d));
        EXPECT(0x4, gbc.readMem(0xd43e));
        EXPECT(0x77, gbc.readMem(0xff04));
        // E0 0180
        gbc.setState(0xc05c, 0x2565, 0x11d0, 0x33a3, 0x97bb, 0xb6db, 0x0, 0x1);
        gbc.writeMem(0xc05c, { 0xe0, 0x42 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2565, gbc.sp());
        EXPECT(0xc05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc05c));
        EXPECT(0x42, gbc.readMem(0xc05d));
        EXPECT(0x11, gbc.readMem(0xff42));
        // E0 0181
        gbc.setState(0x87f8, 0xfd83, 0x72e0, 0xe4b, 0xe6fc, 0x5100, 0x0, 0x0);
        gbc.writeMem(0x87f8, { 0xe0, 0x3b });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfd83, gbc.sp());
        EXPECT(0x87fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x87f8));
        EXPECT(0x3b, gbc.readMem(0x87f9));
        EXPECT(0x72, gbc.readMem(0xff3b));
        // E0 0182
        gbc.setState(0xa207, 0xdf19, 0x2390, 0x821f, 0xcd01, 0x96fc, 0x0, 0x0);
        gbc.writeMem(0xa207, { 0xe0, 0x82 });
        gbc.writeMem(0xff82, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdf19, gbc.sp());
        EXPECT(0xa209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa207));
        EXPECT(0x82, gbc.readMem(0xa208));
        EXPECT(0x23, gbc.readMem(0xff82));
        // E0 0183
        gbc.setState(0xa51, 0xeb29, 0x3130, 0x9d4c, 0x4d0d, 0x7ea1, 0x0, 0x0);
        gbc.writeMem(0xa51, { 0xe0, 0x7a });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xeb29, gbc.sp());
        EXPECT(0xa53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xff7a));
        // E0 0184
        gbc.setState(0x1be7, 0xe438, 0x5380, 0xdb32, 0xb15e, 0x7bf8, 0x0, 0x1);
        gbc.writeMem(0x1be7, { 0xe0, 0xfb });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe438, gbc.sp());
        EXPECT(0x1be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xfffb));
        // E0 0186
        gbc.setState(0xce6, 0xf401, 0x64e0, 0x88c0, 0x231e, 0x3c9d, 0x0, 0x0);
        gbc.writeMem(0xce6, { 0xe0, 0x81 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf401, gbc.sp());
        EXPECT(0xce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xff81));
        // E0 0187
        gbc.setState(0x9129, 0xe60b, 0x1b90, 0x3e90, 0xb98e, 0x7183, 0x1, 0x0);
        gbc.writeMem(0x9129, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe60b, gbc.sp());
        EXPECT(0x912b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9129));
        EXPECT(0xc0, gbc.readMem(0x912a));
        EXPECT(0x1b, gbc.readMem(0xffc0));
        // E0 0188
        gbc.setState(0xc0a4, 0xb246, 0x58a0, 0xcee0, 0x4937, 0x15ca, 0x1, 0x0);
        gbc.writeMem(0xc0a4, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb246, gbc.sp());
        EXPECT(0xc0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc0a4));
        EXPECT(0x51, gbc.readMem(0xc0a5));
        EXPECT(0x58, gbc.readMem(0xff51));
        // E0 0189
        gbc.setState(0x83eb, 0xfe73, 0x2670, 0x7d8e, 0x6c8, 0x1757, 0x1, 0x1);
        gbc.writeMem(0x83eb, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfe73, gbc.sp());
        EXPECT(0x83ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x83eb));
        EXPECT(0x80, gbc.readMem(0x83ec));
        EXPECT(0x26, gbc.readMem(0xff80));
        // E0 018A
        gbc.setState(0xdb36, 0x68ce, 0x8d60, 0x64de, 0x5a12, 0x9bbe, 0x0, 0x1);
        gbc.writeMem(0xdb36, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x68ce, gbc.sp());
        EXPECT(0xdb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdb36));
        EXPECT(0xad, gbc.readMem(0xdb37));
        EXPECT(0x8d, gbc.readMem(0xffad));
        // E0 018B
        gbc.setState(0xae43, 0xa8fa, 0x59a0, 0xb671, 0xb8cb, 0xb56c, 0x0, 0x0);
        gbc.writeMem(0xae43, { 0xe0, 0x56 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa8fa, gbc.sp());
        EXPECT(0xae45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xae43));
        EXPECT(0x56, gbc.readMem(0xae44));
        EXPECT(0x59, gbc.readMem(0xff56));
        // E0 018C
        gbc.setState(0x5143, 0xc277, 0x2250, 0xb1aa, 0xaa48, 0x438e, 0x0, 0x1);
        gbc.writeMem(0x5143, { 0xe0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc277, gbc.sp());
        EXPECT(0x5145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xffc6));
        // E0 018D
        gbc.setState(0x9492, 0xff78, 0xb40, 0xec27, 0xae1f, 0x537a, 0x1, 0x1);
        gbc.writeMem(0x9492, { 0xe0, 0x2e });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xff78, gbc.sp());
        EXPECT(0x9494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9492));
        EXPECT(0x2e, gbc.readMem(0x9493));
        EXPECT(0xb, gbc.readMem(0xff2e));
        // E0 018E
        gbc.setState(0xbd77, 0xc478, 0x7f90, 0xec24, 0xf71a, 0x90ac, 0x1, 0x0);
        gbc.writeMem(0xbd77, { 0xe0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc478, gbc.sp());
        EXPECT(0xbd79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbd77));
        EXPECT(0xf7, gbc.readMem(0xbd78));
        EXPECT(0x7f, gbc.readMem(0xfff7));
        // E0 018F
        gbc.setState(0xd91e, 0x6f68, 0xb1a0, 0x3868, 0x381c, 0x2301, 0x1, 0x0);
        gbc.writeMem(0xd91e, { 0xe0, 0xec });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6f68, gbc.sp());
        EXPECT(0xd920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd91e));
        EXPECT(0xec, gbc.readMem(0xd91f));
        EXPECT(0xb1, gbc.readMem(0xffec));
        // E0 0190
        gbc.setState(0x98c2, 0x4211, 0xed0, 0x34eb, 0xc767, 0x7ec0, 0x0, 0x0);
        gbc.writeMem(0x98c2, { 0xe0, 0x77 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4211, gbc.sp());
        EXPECT(0x98c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x98c2));
        EXPECT(0x77, gbc.readMem(0x98c3));
        EXPECT(0xe, gbc.readMem(0xff77));
        // E0 0191
        gbc.setState(0xae3e, 0x3532, 0xa680, 0x69e6, 0xa903, 0x4490, 0x1, 0x1);
        gbc.writeMem(0xae3e, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3532, gbc.sp());
        EXPECT(0xae40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xae3e));
        EXPECT(0x5e, gbc.readMem(0xae3f));
        EXPECT(0xa6, gbc.readMem(0xff5e));
        // E0 0192
        gbc.setState(0x660, 0x460b, 0xed30, 0x4080, 0xdf03, 0x5d7, 0x0, 0x1);
        gbc.writeMem(0x660, { 0xe0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x460b, gbc.sp());
        EXPECT(0x662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xffb5));
        // E0 0193
        gbc.setState(0x5e2d, 0x2fc6, 0x3970, 0x8020, 0xd7e5, 0x61ca, 0x0, 0x0);
        gbc.writeMem(0x5e2d, { 0xe0, 0x8d });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2fc6, gbc.sp());
        EXPECT(0x5e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xff8d));
        // E0 0194
        gbc.setState(0x6133, 0x37fb, 0x5e70, 0x439b, 0xf591, 0xd2ea, 0x1, 0x0);
        gbc.writeMem(0x6133, { 0xe0, 0x4b });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x37fb, gbc.sp());
        EXPECT(0x6135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xff4b));
        // E0 0195
        gbc.setState(0x9980, 0x9fdd, 0x5f80, 0x7724, 0x70e5, 0xf66b, 0x1, 0x0);
        gbc.writeMem(0x9980, { 0xe0, 0x7d });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9fdd, gbc.sp());
        EXPECT(0x9982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9980));
        EXPECT(0x7d, gbc.readMem(0x9981));
        EXPECT(0x5f, gbc.readMem(0xff7d));
        // E0 0196
        gbc.setState(0x18b8, 0xa677, 0xe7a0, 0xe638, 0x9dc3, 0x54ac, 0x1, 0x1);
        gbc.writeMem(0x18b8, { 0xe0, 0x4a });
        gbc.writeMem(0xff4a, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa677, gbc.sp());
        EXPECT(0x18ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xff4a));
        // E0 0197
        gbc.setState(0x4a96, 0xb18f, 0xd0a0, 0x38b9, 0x4352, 0x9d1e, 0x1, 0x0);
        gbc.writeMem(0x4a96, { 0xe0, 0x55 });
        gbc.writeMem(0xff55, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb18f, gbc.sp());
        EXPECT(0x4a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xff55));
        // E0 0198
        gbc.setState(0xbdb0, 0x5286, 0x9020, 0xef6b, 0xd203, 0x6f5, 0x0, 0x0);
        gbc.writeMem(0xbdb0, { 0xe0, 0x1f });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5286, gbc.sp());
        EXPECT(0xbdb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbdb0));
        EXPECT(0x1f, gbc.readMem(0xbdb1));
        EXPECT(0x90, gbc.readMem(0xff1f));
        // E0 0199
        gbc.setState(0x1b0b, 0xe615, 0x2630, 0xe96, 0x99a7, 0xcf28, 0x1, 0x1);
        gbc.writeMem(0x1b0b, { 0xe0, 0xef });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe615, gbc.sp());
        EXPECT(0x1b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xffef));
        // E0 019A
        gbc.setState(0xbd4a, 0x5e86, 0x7880, 0x8cb2, 0x814, 0xaf85, 0x1, 0x0);
        gbc.writeMem(0xbd4a, { 0xe0, 0x3c });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5e86, gbc.sp());
        EXPECT(0xbd4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbd4a));
        EXPECT(0x3c, gbc.readMem(0xbd4b));
        EXPECT(0x78, gbc.readMem(0xff3c));
        // E0 019B
        gbc.setState(0x1efb, 0xcf26, 0xcab0, 0xdec0, 0x1d34, 0x44d, 0x0, 0x0);
        gbc.writeMem(0x1efb, { 0xe0, 0xdd });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcf26, gbc.sp());
        EXPECT(0x1efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xffdd));
        // E0 019C
        gbc.setState(0x1793, 0xa673, 0x2c70, 0xf964, 0x1c31, 0x82dd, 0x0, 0x1);
        gbc.writeMem(0x1793, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa673, gbc.sp());
        EXPECT(0x1795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xff03));
        // E0 019D
        gbc.setState(0x6403, 0x78ea, 0x98b0, 0x5628, 0x6f08, 0x2c71, 0x0, 0x0);
        gbc.writeMem(0x6403, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x78ea, gbc.sp());
        EXPECT(0x6405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xffcb));
        // E0 019E
        gbc.setState(0x7fd5, 0x4b1e, 0x110, 0xfab9, 0x7da5, 0x6222, 0x1, 0x1);
        gbc.writeMem(0x7fd5, { 0xe0, 0x19 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4b1e, gbc.sp());
        EXPECT(0x7fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xff19));
        // E0 019F
        gbc.setState(0x7fc0, 0x8a3a, 0xcd90, 0x2ab7, 0x2581, 0x13a4, 0x1, 0x0);
        gbc.writeMem(0x7fc0, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8a3a, gbc.sp());
        EXPECT(0x7fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xff80));
        // E0 01A0
        gbc.setState(0xbebd, 0x9b51, 0xa00, 0x8a0a, 0xa594, 0x8323, 0x1, 0x0);
        gbc.writeMem(0xbebd, { 0xe0, 0x9d });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9b51, gbc.sp());
        EXPECT(0xbebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbebd));
        EXPECT(0x9d, gbc.readMem(0xbebe));
        EXPECT(0xa, gbc.readMem(0xff9d));
        // E0 01A1
        gbc.setState(0x1e00, 0x4b2f, 0xf990, 0x6da2, 0x2851, 0x2a99, 0x0, 0x0);
        gbc.writeMem(0x1e00, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4b2f, gbc.sp());
        EXPECT(0x1e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xff83));
        // E0 01A2
        gbc.setState(0xaa21, 0x61af, 0xf040, 0x2487, 0xf79e, 0x66e7, 0x0, 0x0);
        gbc.writeMem(0xaa21, { 0xe0, 0xa8 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x61af, gbc.sp());
        EXPECT(0xaa23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xaa21));
        EXPECT(0xa8, gbc.readMem(0xaa22));
        EXPECT(0xf0, gbc.readMem(0xffa8));
        // E0 01A3
        gbc.setState(0x1a8f, 0xe281, 0x10d0, 0x9c97, 0x3e52, 0x29a8, 0x0, 0x0);
        gbc.writeMem(0x1a8f, { 0xe0, 0x4 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe281, gbc.sp());
        EXPECT(0x1a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xff04));
        // E0 01A4
        gbc.setState(0x3d47, 0x2019, 0x6af0, 0xbc46, 0x4032, 0x92e5, 0x1, 0x0);
        gbc.writeMem(0x3d47, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2019, gbc.sp());
        EXPECT(0x3d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xffca));
        // E0 01A5
        gbc.setState(0xa802, 0x7b9c, 0xb910, 0x752e, 0x2a2d, 0xee60, 0x1, 0x0);
        gbc.writeMem(0xa802, { 0xe0, 0xee });
        gbc.writeMem(0xffee, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7b9c, gbc.sp());
        EXPECT(0xa804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa802));
        EXPECT(0xee, gbc.readMem(0xa803));
        EXPECT(0xb9, gbc.readMem(0xffee));
        // E0 01A6
        gbc.setState(0xdd8a, 0x9439, 0xd590, 0x5db4, 0xf55b, 0x82ff, 0x0, 0x0);
        gbc.writeMem(0xdd8a, { 0xe0, 0x7a });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9439, gbc.sp());
        EXPECT(0xdd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdd8a));
        EXPECT(0x7a, gbc.readMem(0xdd8b));
        EXPECT(0xd5, gbc.readMem(0xff7a));
        // E0 01A7
        gbc.setState(0xe606, 0xa683, 0xc980, 0xb7a3, 0xf4b0, 0xc2c2, 0x1, 0x1);
        gbc.writeMem(0xe606, { 0xe0, 0xfb });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa683, gbc.sp());
        EXPECT(0xe608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe606));
        EXPECT(0xfb, gbc.readMem(0xe607));
        EXPECT(0xc9, gbc.readMem(0xfffb));
        // E0 01A8
        gbc.setState(0x3832, 0xcf56, 0x63e0, 0x20c, 0xde86, 0x1ad1, 0x0, 0x1);
        gbc.writeMem(0x3832, { 0xe0, 0xf });
        gbc.writeMem(0xff0f, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcf56, gbc.sp());
        EXPECT(0x3834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xff0f));
        // E0 01A9
        gbc.setState(0xb59c, 0xfce5, 0x4460, 0x6edd, 0xcc2b, 0xeac9, 0x1, 0x1);
        gbc.writeMem(0xb59c, { 0xe0, 0xbd });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfce5, gbc.sp());
        EXPECT(0xb59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb59c));
        EXPECT(0xbd, gbc.readMem(0xb59d));
        EXPECT(0x44, gbc.readMem(0xffbd));
        // E0 01AA
        gbc.setState(0x646e, 0xd9cd, 0x9940, 0xf6c4, 0xb024, 0x8a31, 0x1, 0x0);
        gbc.writeMem(0x646e, { 0xe0, 0x66 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd9cd, gbc.sp());
        EXPECT(0x6470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xff66));
        // E0 01AB
        gbc.setState(0x2801, 0xc93f, 0x29a0, 0xe4fb, 0x147c, 0xb03d, 0x1, 0x1);
        gbc.writeMem(0x2801, { 0xe0, 0x9c });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc93f, gbc.sp());
        EXPECT(0x2803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xff9c));
        // E0 01AC
        gbc.setState(0x3d0e, 0x1c36, 0x9070, 0xcf71, 0x65db, 0x87fd, 0x1, 0x0);
        gbc.writeMem(0x3d0e, { 0xe0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1c36, gbc.sp());
        EXPECT(0x3d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xfff9));
        // E0 01AD
        gbc.setState(0x78fc, 0x4cca, 0x3a0, 0xcf3d, 0x8c1d, 0x95e2, 0x0, 0x0);
        gbc.writeMem(0x78fc, { 0xe0, 0x74 });
        gbc.writeMem(0xff74, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4cca, gbc.sp());
        EXPECT(0x78fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xff74));
        // E0 01AE
        gbc.setState(0x37d1, 0x2c30, 0xbd0, 0x913a, 0xcd1c, 0x922e, 0x0, 0x0);
        gbc.writeMem(0x37d1, { 0xe0, 0x8e });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2c30, gbc.sp());
        EXPECT(0x37d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xff8e));
        // E0 01AF
        gbc.setState(0xe326, 0x4767, 0xa400, 0xa48b, 0xda46, 0x520e, 0x0, 0x0);
        gbc.writeMem(0xe326, { 0xe0, 0x3a });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4767, gbc.sp());
        EXPECT(0xe328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe326));
        EXPECT(0x3a, gbc.readMem(0xe327));
        EXPECT(0xa4, gbc.readMem(0xff3a));
        // E0 01B1
        gbc.setState(0x2121, 0xa8eb, 0x71e0, 0xe8bc, 0xacaf, 0x4904, 0x1, 0x1);
        gbc.writeMem(0x2121, { 0xe0, 0x62 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa8eb, gbc.sp());
        EXPECT(0x2123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xff62));
        // E0 01B2
        gbc.setState(0x7f1e, 0x1d22, 0x6330, 0x822a, 0x7c06, 0xaa60, 0x0, 0x1);
        gbc.writeMem(0x7f1e, { 0xe0, 0xbf });
        gbc.writeMem(0xffbf, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1d22, gbc.sp());
        EXPECT(0x7f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xffbf));
        // E0 01B3
        gbc.setState(0x4e75, 0x5846, 0xecb0, 0xf58f, 0xeca3, 0x7995, 0x0, 0x1);
        gbc.writeMem(0x4e75, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5846, gbc.sp());
        EXPECT(0x4e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xffaf));
        // E0 01B4
        gbc.setState(0xe68b, 0x2dd6, 0x7c30, 0x7013, 0x232b, 0xf02a, 0x1, 0x1);
        gbc.writeMem(0xe68b, { 0xe0, 0xd4 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2dd6, gbc.sp());
        EXPECT(0xe68d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe68b));
        EXPECT(0xd4, gbc.readMem(0xe68c));
        EXPECT(0x7c, gbc.readMem(0xffd4));
        // E0 01B5
        gbc.setState(0xe58b, 0x6249, 0x7f20, 0x5944, 0xda58, 0xbb6c, 0x0, 0x1);
        gbc.writeMem(0xe58b, { 0xe0, 0x3c });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6249, gbc.sp());
        EXPECT(0xe58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe58b));
        EXPECT(0x3c, gbc.readMem(0xe58c));
        EXPECT(0x7f, gbc.readMem(0xff3c));
        // E0 01B7
        gbc.setState(0x8225, 0x2a60, 0x8440, 0x332d, 0x33d8, 0x3030, 0x0, 0x0);
        gbc.writeMem(0x8225, { 0xe0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2a60, gbc.sp());
        EXPECT(0x8227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8225));
        EXPECT(0xb1, gbc.readMem(0x8226));
        EXPECT(0x84, gbc.readMem(0xffb1));
        // E0 01B8
        gbc.setState(0x7601, 0x1e3a, 0xb200, 0xdde9, 0xe5e0, 0xf5cb, 0x0, 0x0);
        gbc.writeMem(0x7601, { 0xe0, 0xe3 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1e3a, gbc.sp());
        EXPECT(0x7603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xffe3));
        // E0 01B9
        gbc.setState(0x520a, 0xceed, 0x92d0, 0x2e7d, 0x942e, 0xff62, 0x1, 0x1);
        gbc.writeMem(0x520a, { 0xe0, 0x72 });
        gbc.writeMem(0xff72, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xceed, gbc.sp());
        EXPECT(0x520c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xff72));
        // E0 01BA
        gbc.setState(0xce5a, 0xdec2, 0x6ef0, 0xade1, 0x6416, 0x5e20, 0x0, 0x0);
        gbc.writeMem(0xce5a, { 0xe0, 0x36 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdec2, gbc.sp());
        EXPECT(0xce5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xce5a));
        EXPECT(0x36, gbc.readMem(0xce5b));
        EXPECT(0x6e, gbc.readMem(0xff36));
        // E0 01BB
        gbc.setState(0xb6b9, 0x32ab, 0xaed0, 0x1c5a, 0x7cf2, 0xedd1, 0x0, 0x0);
        gbc.writeMem(0xb6b9, { 0xe0, 0xa9 });
        gbc.writeMem(0xffa9, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x32ab, gbc.sp());
        EXPECT(0xb6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb6b9));
        EXPECT(0xa9, gbc.readMem(0xb6ba));
        EXPECT(0xae, gbc.readMem(0xffa9));
        // E0 01BC
        gbc.setState(0xbcec, 0x9bef, 0xd970, 0x5417, 0x123f, 0x8342, 0x0, 0x1);
        gbc.writeMem(0xbcec, { 0xe0, 0xbb });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9bef, gbc.sp());
        EXPECT(0xbcee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbcec));
        EXPECT(0xbb, gbc.readMem(0xbced));
        EXPECT(0xd9, gbc.readMem(0xffbb));
        // E0 01BD
        gbc.setState(0xe1, 0x5d62, 0xd420, 0xe1a0, 0x8727, 0x2ca, 0x1, 0x1);
        gbc.writeMem(0xe1, { 0xe0, 0xc7 });
        gbc.writeMem(0xffc7, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5d62, gbc.sp());
        EXPECT(0xe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xffc7));
        // E0 01BE
        gbc.setState(0xa51e, 0x9fdb, 0x840, 0xc5f2, 0x6aee, 0xca5b, 0x0, 0x1);
        gbc.writeMem(0xa51e, { 0xe0, 0x3c });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9fdb, gbc.sp());
        EXPECT(0xa520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa51e));
        EXPECT(0x3c, gbc.readMem(0xa51f));
        EXPECT(0x8, gbc.readMem(0xff3c));
        // E0 01BF
        gbc.setState(0xb8b9, 0xbacf, 0x79b0, 0xc85e, 0x4422, 0xc828, 0x1, 0x1);
        gbc.writeMem(0xb8b9, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbacf, gbc.sp());
        EXPECT(0xb8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb8b9));
        EXPECT(0xdc, gbc.readMem(0xb8ba));
        EXPECT(0x79, gbc.readMem(0xffdc));
        // E0 01C0
        gbc.setState(0x16f2, 0x167b, 0xd2c0, 0xf510, 0xc593, 0xf131, 0x1, 0x1);
        gbc.writeMem(0x16f2, { 0xe0, 0x22 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x167b, gbc.sp());
        EXPECT(0x16f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xff22));
        // E0 01C1
        gbc.setState(0xea01, 0x768f, 0x2180, 0xf659, 0x38a, 0x3d98, 0x0, 0x1);
        gbc.writeMem(0xea01, { 0xe0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x768f, gbc.sp());
        EXPECT(0xea03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xea01));
        EXPECT(0xe6, gbc.readMem(0xea02));
        EXPECT(0x21, gbc.readMem(0xffe6));
        // E0 01C2
        gbc.setState(0x818d, 0x388, 0xffd0, 0x10e2, 0x8ab8, 0x85bc, 0x1, 0x0);
        gbc.writeMem(0x818d, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x388, gbc.sp());
        EXPECT(0x818f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x818d));
        EXPECT(0xea, gbc.readMem(0x818e));
        EXPECT(0xff, gbc.readMem(0xffea));
        // E0 01C3
        gbc.setState(0xd314, 0x2f36, 0xe970, 0x52b0, 0xebab, 0x53b6, 0x0, 0x1);
        gbc.writeMem(0xd314, { 0xe0, 0xf1 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2f36, gbc.sp());
        EXPECT(0xd316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd314));
        EXPECT(0xf1, gbc.readMem(0xd315));
        EXPECT(0xe9, gbc.readMem(0xfff1));
        // E0 01C4
        gbc.setState(0xd40, 0x72be, 0x570, 0x3937, 0x398f, 0xdc66, 0x1, 0x1);
        gbc.writeMem(0xd40, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x72be, gbc.sp());
        EXPECT(0xd42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xffdc));
        // E0 01C5
        gbc.setState(0xb7cc, 0x6216, 0xc2e0, 0xc37, 0x60fa, 0x1e61, 0x1, 0x1);
        gbc.writeMem(0xb7cc, { 0xe0, 0xd2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6216, gbc.sp());
        EXPECT(0xb7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb7cc));
        EXPECT(0xd2, gbc.readMem(0xb7cd));
        EXPECT(0xc2, gbc.readMem(0xffd2));
        // E0 01C6
        gbc.setState(0xe066, 0x1121, 0xbf0, 0xf15c, 0x379c, 0x4adf, 0x0, 0x0);
        gbc.writeMem(0xe066, { 0xe0, 0x7a });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1121, gbc.sp());
        EXPECT(0xe068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe066));
        EXPECT(0x7a, gbc.readMem(0xe067));
        EXPECT(0xb, gbc.readMem(0xff7a));
        // E0 01C7
        gbc.setState(0x82e6, 0x5e9b, 0x7c30, 0xdfa7, 0xa653, 0x98dd, 0x1, 0x1);
        gbc.writeMem(0x82e6, { 0xe0, 0x39 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5e9b, gbc.sp());
        EXPECT(0x82e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x82e6));
        EXPECT(0x39, gbc.readMem(0x82e7));
        EXPECT(0x7c, gbc.readMem(0xff39));
        // E0 01C8
        gbc.setState(0x63fb, 0x368b, 0x8bd0, 0xc059, 0x1c56, 0x2348, 0x0, 0x0);
        gbc.writeMem(0x63fb, { 0xe0, 0x8c });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x368b, gbc.sp());
        EXPECT(0x63fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xff8c));
        // E0 01C9
        gbc.setState(0xd805, 0xa604, 0xeed0, 0x65aa, 0x2c9e, 0x5ac9, 0x0, 0x1);
        gbc.writeMem(0xd805, { 0xe0, 0x78 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa604, gbc.sp());
        EXPECT(0xd807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd805));
        EXPECT(0x78, gbc.readMem(0xd806));
        EXPECT(0xee, gbc.readMem(0xff78));
        // E0 01CA
        gbc.setState(0x2ea5, 0xc63c, 0x7a90, 0x6c98, 0x431e, 0x28e6, 0x1, 0x0);
        gbc.writeMem(0x2ea5, { 0xe0, 0x14 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc63c, gbc.sp());
        EXPECT(0x2ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xff14));
        // E0 01CB
        gbc.setState(0x9174, 0xf55c, 0x92f0, 0xcd64, 0xf648, 0xb168, 0x1, 0x0);
        gbc.writeMem(0x9174, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf55c, gbc.sp());
        EXPECT(0x9176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9174));
        EXPECT(0x5f, gbc.readMem(0x9175));
        EXPECT(0x92, gbc.readMem(0xff5f));
        // E0 01CC
        gbc.setState(0x9a1f, 0x73e9, 0xc7c0, 0xb51f, 0x1cc5, 0x282c, 0x1, 0x1);
        gbc.writeMem(0x9a1f, { 0xe0, 0x4b });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x73e9, gbc.sp());
        EXPECT(0x9a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9a1f));
        EXPECT(0x4b, gbc.readMem(0x9a20));
        EXPECT(0xc7, gbc.readMem(0xff4b));
        // E0 01CD
        gbc.setState(0x680b, 0xe984, 0x8170, 0x61a1, 0xbfd6, 0x996b, 0x1, 0x0);
        gbc.writeMem(0x680b, { 0xe0, 0x3b });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe984, gbc.sp());
        EXPECT(0x680d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xff3b));
        // E0 01CE
        gbc.setState(0x2cee, 0xe860, 0x5ce0, 0x1dcb, 0xb022, 0x62da, 0x1, 0x1);
        gbc.writeMem(0x2cee, { 0xe0, 0x19 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe860, gbc.sp());
        EXPECT(0x2cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xff19));
        // E0 01CF
        gbc.setState(0xca39, 0x66d6, 0xd3d0, 0xe52a, 0xd1b2, 0xba4d, 0x0, 0x0);
        gbc.writeMem(0xca39, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x66d6, gbc.sp());
        EXPECT(0xca3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xca39));
        EXPECT(0xea, gbc.readMem(0xca3a));
        EXPECT(0xd3, gbc.readMem(0xffea));
        // E0 01D0
        gbc.setState(0x3be8, 0x5ec2, 0xc30, 0x6bca, 0xcff8, 0xdd14, 0x0, 0x0);
        gbc.writeMem(0x3be8, { 0xe0, 0xfa });
        gbc.writeMem(0xfffa, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5ec2, gbc.sp());
        EXPECT(0x3bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xfffa));
        // E0 01D1
        gbc.setState(0x6cd9, 0x8f2e, 0x2c60, 0x1456, 0xa709, 0x75b7, 0x1, 0x0);
        gbc.writeMem(0x6cd9, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8f2e, gbc.sp());
        EXPECT(0x6cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xff3f));
        // E0 01D2
        gbc.setState(0x9f1d, 0xc3d3, 0xa680, 0x881c, 0x4ea6, 0x2e13, 0x1, 0x0);
        gbc.writeMem(0x9f1d, { 0xe0, 0xbb });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc3d3, gbc.sp());
        EXPECT(0x9f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9f1d));
        EXPECT(0xbb, gbc.readMem(0x9f1e));
        EXPECT(0xa6, gbc.readMem(0xffbb));
        // E0 01D3
        gbc.setState(0xe92c, 0xa24b, 0xbd10, 0x583, 0xac01, 0xdd66, 0x0, 0x0);
        gbc.writeMem(0xe92c, { 0xe0, 0xa4 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa24b, gbc.sp());
        EXPECT(0xe92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe92c));
        EXPECT(0xa4, gbc.readMem(0xe92d));
        EXPECT(0xbd, gbc.readMem(0xffa4));
        // E0 01D4
        gbc.setState(0x352c, 0xfca8, 0x2480, 0x4a4c, 0x7d21, 0x1230, 0x1, 0x0);
        gbc.writeMem(0x352c, { 0xe0, 0x43 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfca8, gbc.sp());
        EXPECT(0x352e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xff43));
        // E0 01D5
        gbc.setState(0xfc0, 0xfa4a, 0xeae0, 0xbb2f, 0xb6bf, 0xb969, 0x1, 0x1);
        gbc.writeMem(0xfc0, { 0xe0, 0xae });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfa4a, gbc.sp());
        EXPECT(0xfc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xffae));
        // E0 01D6
        gbc.setState(0x9897, 0x2d4c, 0x1250, 0xb265, 0x5c15, 0xc8b, 0x0, 0x0);
        gbc.writeMem(0x9897, { 0xe0, 0xb3 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2d4c, gbc.sp());
        EXPECT(0x9899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9897));
        EXPECT(0xb3, gbc.readMem(0x9898));
        EXPECT(0x12, gbc.readMem(0xffb3));
        // E0 01D7
        gbc.setState(0x6a92, 0xbb2b, 0xeec0, 0xbebc, 0x8dc0, 0x6a33, 0x1, 0x1);
        gbc.writeMem(0x6a92, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbb2b, gbc.sp());
        EXPECT(0x6a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xff80));
        // E0 01D8
        gbc.setState(0xd74b, 0x69d7, 0x65f0, 0x4099, 0x407, 0x4ec, 0x0, 0x1);
        gbc.writeMem(0xd74b, { 0xe0, 0xa7 });
        gbc.writeMem(0xffa7, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x69d7, gbc.sp());
        EXPECT(0xd74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd74b));
        EXPECT(0xa7, gbc.readMem(0xd74c));
        EXPECT(0x65, gbc.readMem(0xffa7));
        // E0 01D9
        gbc.setState(0xc2d8, 0xf944, 0x9290, 0x408, 0xde27, 0x967d, 0x0, 0x1);
        gbc.writeMem(0xc2d8, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf944, gbc.sp());
        EXPECT(0xc2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc2d8));
        EXPECT(0xdc, gbc.readMem(0xc2d9));
        EXPECT(0x92, gbc.readMem(0xffdc));
        // E0 01DA
        gbc.setState(0x1804, 0x8cb7, 0x9ba0, 0xf2a, 0x5eb9, 0x83c, 0x1, 0x1);
        gbc.writeMem(0x1804, { 0xe0, 0xa1 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8cb7, gbc.sp());
        EXPECT(0x1806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xffa1));
        // E0 01DB
        gbc.setState(0x2ce7, 0x272d, 0xd30, 0xb336, 0x79c0, 0xf401, 0x0, 0x0);
        gbc.writeMem(0x2ce7, { 0xe0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x272d, gbc.sp());
        EXPECT(0x2ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xffd7));
        // E0 01DC
        gbc.setState(0x894d, 0xb757, 0x1f0, 0xba56, 0xd45a, 0x130e, 0x0, 0x1);
        gbc.writeMem(0x894d, { 0xe0, 0xa0 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb757, gbc.sp());
        EXPECT(0x894f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x894d));
        EXPECT(0xa0, gbc.readMem(0x894e));
        EXPECT(0x1, gbc.readMem(0xffa0));
        // E0 01DD
        gbc.setState(0x4bb1, 0xaf0, 0xd8c0, 0x9a21, 0x997a, 0xb6ad, 0x1, 0x1);
        gbc.writeMem(0x4bb1, { 0xe0, 0xd5 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xaf0, gbc.sp());
        EXPECT(0x4bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xffd5));
        // E0 01DF
        gbc.setState(0x8f93, 0xdef6, 0xc3f0, 0x9e63, 0x8d89, 0xbf41, 0x1, 0x1);
        gbc.writeMem(0x8f93, { 0xe0, 0xfa });
        gbc.writeMem(0xfffa, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdef6, gbc.sp());
        EXPECT(0x8f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8f93));
        EXPECT(0xfa, gbc.readMem(0x8f94));
        EXPECT(0xc3, gbc.readMem(0xfffa));
        // E0 01E0
        gbc.setState(0xb7a7, 0xe684, 0x3070, 0x6e2b, 0xabc, 0x21bd, 0x1, 0x1);
        gbc.writeMem(0xb7a7, { 0xe0, 0xee });
        gbc.writeMem(0xffee, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe684, gbc.sp());
        EXPECT(0xb7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb7a7));
        EXPECT(0xee, gbc.readMem(0xb7a8));
        EXPECT(0x30, gbc.readMem(0xffee));
        // E0 01E1
        gbc.setState(0x8d25, 0x3fce, 0xe700, 0xf55a, 0x3c0b, 0x1d96, 0x0, 0x0);
        gbc.writeMem(0x8d25, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3fce, gbc.sp());
        EXPECT(0x8d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8d25));
        EXPECT(0xe, gbc.readMem(0x8d26));
        EXPECT(0xe7, gbc.readMem(0xff0e));
        // E0 01E2
        gbc.setState(0x2a9c, 0x3301, 0x4440, 0x7edc, 0xf5cf, 0x5a, 0x0, 0x0);
        gbc.writeMem(0x2a9c, { 0xe0, 0xdc });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3301, gbc.sp());
        EXPECT(0x2a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xffdc));
        // E0 01E3
        gbc.setState(0xdd5d, 0x42b6, 0x1c90, 0xde3e, 0x3244, 0x5a1c, 0x0, 0x1);
        gbc.writeMem(0xdd5d, { 0xe0, 0xd });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x42b6, gbc.sp());
        EXPECT(0xdd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdd5d));
        EXPECT(0xd, gbc.readMem(0xdd5e));
        EXPECT(0x1c, gbc.readMem(0xff0d));
        // E0 01E5
        gbc.setState(0xa8fa, 0x3010, 0xec30, 0x4fed, 0x4eeb, 0x3538, 0x0, 0x0);
        gbc.writeMem(0xa8fa, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3010, gbc.sp());
        EXPECT(0xa8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa8fa));
        EXPECT(0x76, gbc.readMem(0xa8fb));
        EXPECT(0xec, gbc.readMem(0xff76));
        // E0 01E6
        gbc.setState(0x4016, 0xa170, 0x5870, 0x39b7, 0x6671, 0x3ca, 0x0, 0x0);
        gbc.writeMem(0x4016, { 0xe0, 0x95 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa170, gbc.sp());
        EXPECT(0x4018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xff95));
        // E0 01E7
        gbc.setState(0xebbb, 0x9054, 0x2230, 0x3e96, 0x2d4f, 0x3486, 0x1, 0x1);
        gbc.writeMem(0xebbb, { 0xe0, 0x21 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9054, gbc.sp());
        EXPECT(0xebbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xebbb));
        EXPECT(0x21, gbc.readMem(0xebbc));
        EXPECT(0x22, gbc.readMem(0xff21));
        // E0 01E8
        gbc.setState(0xc7f, 0xb70b, 0x4a60, 0xec53, 0x35be, 0x585a, 0x1, 0x0);
        gbc.writeMem(0xc7f, { 0xe0, 0x8e });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb70b, gbc.sp());
        EXPECT(0xc81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xff8e));
        // E0 01EA
        gbc.setState(0x6782, 0xe1fb, 0x5790, 0x7926, 0x9b69, 0x56e6, 0x0, 0x1);
        gbc.writeMem(0x6782, { 0xe0, 0x5d });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe1fb, gbc.sp());
        EXPECT(0x6784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xff5d));
        // E0 01EB
        gbc.setState(0x33d5, 0x61a0, 0x9e10, 0xfe1d, 0x8fd1, 0x15e2, 0x0, 0x1);
        gbc.writeMem(0x33d5, { 0xe0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x61a0, gbc.sp());
        EXPECT(0x33d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xffc9));
        // E0 01EC
        gbc.setState(0x5167, 0x121d, 0x6490, 0xc5a2, 0x9ab7, 0x44b3, 0x0, 0x0);
        gbc.writeMem(0x5167, { 0xe0, 0xf8 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x121d, gbc.sp());
        EXPECT(0x5169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xfff8));
        // E0 01ED
        gbc.setState(0xe374, 0x7085, 0xd900, 0x17b6, 0xda2a, 0x742c, 0x1, 0x1);
        gbc.writeMem(0xe374, { 0xe0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7085, gbc.sp());
        EXPECT(0xe376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe374));
        EXPECT(0xe6, gbc.readMem(0xe375));
        EXPECT(0xd9, gbc.readMem(0xffe6));
        // E0 01EE
        gbc.setState(0x2433, 0x3373, 0x8630, 0x2c3e, 0x37f5, 0xf8, 0x0, 0x1);
        gbc.writeMem(0x2433, { 0xe0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3373, gbc.sp());
        EXPECT(0x2435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xffb7));
        // E0 01EF
        gbc.setState(0x7c32, 0x938c, 0x4e90, 0x8ff9, 0xfc59, 0xfef0, 0x0, 0x1);
        gbc.writeMem(0x7c32, { 0xe0, 0x79 });
        gbc.writeMem(0xff79, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x938c, gbc.sp());
        EXPECT(0x7c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xff79));
        // E0 01F0
        gbc.setState(0xc4dd, 0xc788, 0xf190, 0xd85, 0x650, 0x1de1, 0x1, 0x0);
        gbc.writeMem(0xc4dd, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc788, gbc.sp());
        EXPECT(0xc4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc4dd));
        EXPECT(0xca, gbc.readMem(0xc4de));
        EXPECT(0xf1, gbc.readMem(0xffca));
        // E0 01F1
        gbc.setState(0xe15e, 0x8e7f, 0x7970, 0xc1dd, 0xd667, 0xfc4c, 0x0, 0x0);
        gbc.writeMem(0xe15e, { 0xe0, 0x66 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8e7f, gbc.sp());
        EXPECT(0xe160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe15e));
        EXPECT(0x66, gbc.readMem(0xe15f));
        EXPECT(0x79, gbc.readMem(0xff66));
        // E0 01F2
        gbc.setState(0x1905, 0x3cc2, 0xfaa0, 0xc509, 0x4561, 0xe04, 0x1, 0x1);
        gbc.writeMem(0x1905, { 0xe0, 0xda });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3cc2, gbc.sp());
        EXPECT(0x1907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xffda));
        // E0 01F3
        gbc.setState(0x382d, 0x9020, 0x7800, 0x14f2, 0x3aa1, 0x66bd, 0x1, 0x0);
        gbc.writeMem(0x382d, { 0xe0, 0x93 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9020, gbc.sp());
        EXPECT(0x382f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xff93));
        // E0 01F4
        gbc.setState(0x6ec9, 0x988b, 0xba80, 0xdfdd, 0xd966, 0x1f86, 0x0, 0x0);
        gbc.writeMem(0x6ec9, { 0xe0, 0xd8 });
        gbc.writeMem(0xffd8, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x988b, gbc.sp());
        EXPECT(0x6ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xffd8));
        // E0 01F5
        gbc.setState(0xc79, 0xd71a, 0x5740, 0x550, 0x8a78, 0xc7ac, 0x0, 0x0);
        gbc.writeMem(0xc79, { 0xe0, 0x44 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd71a, gbc.sp());
        EXPECT(0xc7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xff44));
        // E0 01F6
        gbc.setState(0x1707, 0x92d2, 0x5000, 0x73ae, 0x8157, 0x18d9, 0x1, 0x0);
        gbc.writeMem(0x1707, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x92d2, gbc.sp());
        EXPECT(0x1709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xffb8));
        // E0 01F7
        gbc.setState(0x44c6, 0xd7e8, 0x3d70, 0xe6b7, 0x1ba6, 0xd5a3, 0x1, 0x1);
        gbc.writeMem(0x44c6, { 0xe0, 0x6 });
        gbc.writeMem(0xff06, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd7e8, gbc.sp());
        EXPECT(0x44c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xff06));
        // E0 01F8
        gbc.setState(0x3a53, 0xf532, 0x3250, 0xdcd7, 0x4710, 0x5527, 0x0, 0x1);
        gbc.writeMem(0x3a53, { 0xe0, 0xe1 });
        gbc.writeMem(0xffe1, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0x3a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xffe1));
        // E0 01F9
        gbc.setState(0x19d5, 0x49d8, 0xf1a0, 0x7ca, 0x4b9f, 0xd396, 0x1, 0x0);
        gbc.writeMem(0x19d5, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x49d8, gbc.sp());
        EXPECT(0x19d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xff48));
        // E0 01FA
        gbc.setState(0x6984, 0x92eb, 0x9c60, 0x1e40, 0xd5bc, 0x1007, 0x0, 0x1);
        gbc.writeMem(0x6984, { 0xe0, 0x54 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x92eb, gbc.sp());
        EXPECT(0x6986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xff54));
        // E0 01FB
        gbc.setState(0x3b28, 0x711a, 0xd310, 0xb7da, 0xda5b, 0x4349, 0x1, 0x1);
        gbc.writeMem(0x3b28, { 0xe0, 0x91 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x711a, gbc.sp());
        EXPECT(0x3b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xff91));
        // E0 01FC
        gbc.setState(0x3b03, 0x52dc, 0x14c0, 0xdb16, 0x9cd8, 0x819e, 0x0, 0x1);
        gbc.writeMem(0x3b03, { 0xe0, 0x1 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x52dc, gbc.sp());
        EXPECT(0x3b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xff01));
        // E0 01FD
        gbc.setState(0x9a14, 0xa7c1, 0xd940, 0x4930, 0x4a5e, 0xaaa4, 0x1, 0x1);
        gbc.writeMem(0x9a14, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa7c1, gbc.sp());
        EXPECT(0x9a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9a14));
        EXPECT(0xd0, gbc.readMem(0x9a15));
        EXPECT(0xd9, gbc.readMem(0xffd0));
        // E0 01FE
        gbc.setState(0x5397, 0x466e, 0xc460, 0x4e48, 0xaa9f, 0xa83f, 0x1, 0x1);
        gbc.writeMem(0x5397, { 0xe0, 0xce });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x466e, gbc.sp());
        EXPECT(0x5399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xffce));
        // E0 01FF
        gbc.setState(0xbdf8, 0x8c47, 0x4ac0, 0x154b, 0x7572, 0x3fc3, 0x0, 0x1);
        gbc.writeMem(0xbdf8, { 0xe0, 0xb });
        gbc.writeMem(0xff0b, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8c47, gbc.sp());
        EXPECT(0xbdfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbdf8));
        EXPECT(0xb, gbc.readMem(0xbdf9));
        EXPECT(0x4a, gbc.readMem(0xff0b));
        // E0 0200
        gbc.setState(0x9df1, 0x78b0, 0x4c10, 0x5c72, 0x85e1, 0x98cc, 0x1, 0x1);
        gbc.writeMem(0x9df1, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x78b0, gbc.sp());
        EXPECT(0x9df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9df1));
        EXPECT(0x8a, gbc.readMem(0x9df2));
        EXPECT(0x4c, gbc.readMem(0xff8a));
        // E0 0202
        gbc.setState(0x8e57, 0xaf47, 0xc620, 0x1ea8, 0xa7e, 0xbe43, 0x0, 0x1);
        gbc.writeMem(0x8e57, { 0xe0, 0x10 });
        gbc.writeMem(0xff10, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaf47, gbc.sp());
        EXPECT(0x8e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8e57));
        EXPECT(0x10, gbc.readMem(0x8e58));
        EXPECT(0xc6, gbc.readMem(0xff10));
        // E0 0203
        gbc.setState(0xe374, 0x5b0, 0xfde0, 0x60db, 0xfe28, 0xb574, 0x1, 0x1);
        gbc.writeMem(0xe374, { 0xe0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5b0, gbc.sp());
        EXPECT(0xe376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe374));
        EXPECT(0xe6, gbc.readMem(0xe375));
        EXPECT(0xfd, gbc.readMem(0xffe6));
        // E0 0204
        gbc.setState(0xc179, 0x5cfd, 0x9ba0, 0xf099, 0xe7f, 0xf951, 0x0, 0x1);
        gbc.writeMem(0xc179, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5cfd, gbc.sp());
        EXPECT(0xc17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc179));
        EXPECT(0x9f, gbc.readMem(0xc17a));
        EXPECT(0x9b, gbc.readMem(0xff9f));
        // E0 0205
        gbc.setState(0xd800, 0x55e3, 0x110, 0x8adb, 0xcc6f, 0x4923, 0x1, 0x0);
        gbc.writeMem(0xd800, { 0xe0, 0x29 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x55e3, gbc.sp());
        EXPECT(0xd802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd800));
        EXPECT(0x29, gbc.readMem(0xd801));
        EXPECT(0x1, gbc.readMem(0xff29));
        // E0 0206
        gbc.setState(0x694e, 0x3b80, 0xd3c0, 0x99dd, 0xf2e6, 0xa64a, 0x0, 0x0);
        gbc.writeMem(0x694e, { 0xe0, 0x96 });
        gbc.writeMem(0xff96, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3b80, gbc.sp());
        EXPECT(0x6950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xff96));
        // E0 0207
        gbc.setState(0xed3e, 0x686d, 0x3680, 0xbcfb, 0x8110, 0xd098, 0x1, 0x0);
        gbc.writeMem(0xed3e, { 0xe0, 0xae });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x686d, gbc.sp());
        EXPECT(0xed40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xed3e));
        EXPECT(0xae, gbc.readMem(0xed3f));
        EXPECT(0x36, gbc.readMem(0xffae));
        // E0 0208
        gbc.setState(0x7bc8, 0xe49a, 0xcb40, 0x388b, 0xe225, 0xf69, 0x0, 0x0);
        gbc.writeMem(0x7bc8, { 0xe0, 0x21 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe49a, gbc.sp());
        EXPECT(0x7bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xff21));
        // E0 0209
        gbc.setState(0x7c15, 0xe65e, 0x72c0, 0x90ec, 0x4022, 0x2e4e, 0x1, 0x0);
        gbc.writeMem(0x7c15, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe65e, gbc.sp());
        EXPECT(0x7c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xffab));
        // E0 020A
        gbc.setState(0xa69c, 0x5e5a, 0x86a0, 0xe62d, 0xc4f5, 0xfd5a, 0x1, 0x0);
        gbc.writeMem(0xa69c, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5e5a, gbc.sp());
        EXPECT(0xa69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa69c));
        EXPECT(0x51, gbc.readMem(0xa69d));
        EXPECT(0x86, gbc.readMem(0xff51));
        // E0 020B
        gbc.setState(0xef4, 0xa263, 0x9290, 0x1228, 0x39c0, 0xc252, 0x0, 0x1);
        gbc.writeMem(0xef4, { 0xe0, 0xeb });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa263, gbc.sp());
        EXPECT(0xef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xffeb));
        // E0 020C
        gbc.setState(0x72be, 0x7098, 0x9920, 0xc57f, 0x4138, 0x898b, 0x0, 0x0);
        gbc.writeMem(0x72be, { 0xe0, 0xac });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7098, gbc.sp());
        EXPECT(0x72c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xffac));
        // E0 020D
        gbc.setState(0xbeec, 0x7a15, 0x4910, 0x515f, 0xb5fb, 0xcfeb, 0x1, 0x0);
        gbc.writeMem(0xbeec, { 0xe0, 0xa3 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7a15, gbc.sp());
        EXPECT(0xbeee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbeec));
        EXPECT(0xa3, gbc.readMem(0xbeed));
        EXPECT(0x49, gbc.readMem(0xffa3));
        // E0 020E
        gbc.setState(0xc57f, 0xbd18, 0x38e0, 0x460f, 0x9d96, 0xe1a2, 0x1, 0x1);
        gbc.writeMem(0xc57f, { 0xe0, 0xe0 });
        gbc.writeMem(0xffe0, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbd18, gbc.sp());
        EXPECT(0xc581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc57f));
        EXPECT(0xe0, gbc.readMem(0xc580));
        EXPECT(0x38, gbc.readMem(0xffe0));
        // E0 020F
        gbc.setState(0xcedf, 0x2a23, 0x18a0, 0x315d, 0xbba9, 0x9ec7, 0x1, 0x1);
        gbc.writeMem(0xcedf, { 0xe0, 0xd1 });
        gbc.writeMem(0xffd1, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2a23, gbc.sp());
        EXPECT(0xcee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcedf));
        EXPECT(0xd1, gbc.readMem(0xcee0));
        EXPECT(0x18, gbc.readMem(0xffd1));
        // E0 0211
        gbc.setState(0xd6ff, 0xebe8, 0xf410, 0xf666, 0x125e, 0x4f7a, 0x0, 0x1);
        gbc.writeMem(0xd6ff, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xebe8, gbc.sp());
        EXPECT(0xd701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd6ff));
        EXPECT(0x48, gbc.readMem(0xd700));
        EXPECT(0xf4, gbc.readMem(0xff48));
        // E0 0213
        gbc.setState(0x5260, 0xed3b, 0x970, 0x4b23, 0xa94e, 0x92c5, 0x1, 0x1);
        gbc.writeMem(0x5260, { 0xe0, 0xd8 });
        gbc.writeMem(0xffd8, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xed3b, gbc.sp());
        EXPECT(0x5262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xffd8));
        // E0 0214
        gbc.setState(0xd1a6, 0x776a, 0xe250, 0x152, 0x9ad3, 0x565, 0x0, 0x1);
        gbc.writeMem(0xd1a6, { 0xe0, 0xb9 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x776a, gbc.sp());
        EXPECT(0xd1a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd1a6));
        EXPECT(0xb9, gbc.readMem(0xd1a7));
        EXPECT(0xe2, gbc.readMem(0xffb9));
        // E0 0215
        gbc.setState(0x7a9f, 0x6df, 0x7410, 0xe654, 0xe20a, 0x2360, 0x0, 0x1);
        gbc.writeMem(0x7a9f, { 0xe0, 0x94 });
        gbc.writeMem(0xff94, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6df, gbc.sp());
        EXPECT(0x7aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xff94));
        // E0 0216
        gbc.setState(0x40f6, 0x64ac, 0x6d30, 0x1ff9, 0x7185, 0xc63f, 0x1, 0x0);
        gbc.writeMem(0x40f6, { 0xe0, 0x2b });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x64ac, gbc.sp());
        EXPECT(0x40f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xff2b));
        // E0 0217
        gbc.setState(0x6d6d, 0xad5c, 0x8480, 0x76c0, 0xe359, 0x3ef0, 0x0, 0x1);
        gbc.writeMem(0x6d6d, { 0xe0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xad5c, gbc.sp());
        EXPECT(0x6d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xffa5));
        // E0 0218
        gbc.setState(0x519d, 0xa5c6, 0x3970, 0x941f, 0x640c, 0xb6de, 0x0, 0x0);
        gbc.writeMem(0x519d, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa5c6, gbc.sp());
        EXPECT(0x519f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xff23));
        // E0 0219
        gbc.setState(0xedf1, 0x2948, 0xbf30, 0x42c1, 0x7e14, 0x9237, 0x0, 0x1);
        gbc.writeMem(0xedf1, { 0xe0, 0x71 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2948, gbc.sp());
        EXPECT(0xedf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xedf1));
        EXPECT(0x71, gbc.readMem(0xedf2));
        EXPECT(0xbf, gbc.readMem(0xff71));
        // E0 021A
        gbc.setState(0xac38, 0x28ed, 0x900, 0xcffe, 0xfdc6, 0x2a80, 0x0, 0x1);
        gbc.writeMem(0xac38, { 0xe0, 0x6d });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x28ed, gbc.sp());
        EXPECT(0xac3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xac38));
        EXPECT(0x6d, gbc.readMem(0xac39));
        EXPECT(0x9, gbc.readMem(0xff6d));
        // E0 021B
        gbc.setState(0x2f98, 0x5428, 0xacf0, 0x3592, 0xab2b, 0xf4b1, 0x0, 0x1);
        gbc.writeMem(0x2f98, { 0xe0, 0x1a });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5428, gbc.sp());
        EXPECT(0x2f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xff1a));
        // E0 021C
        gbc.setState(0x2456, 0x11d7, 0x38b0, 0xe4f9, 0x8ee9, 0x44b5, 0x0, 0x0);
        gbc.writeMem(0x2456, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x11d7, gbc.sp());
        EXPECT(0x2458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xff0e));
        // E0 021D
        gbc.setState(0x4b45, 0x62f, 0x9470, 0x1946, 0x8302, 0x185, 0x1, 0x1);
        gbc.writeMem(0x4b45, { 0xe0, 0x13 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x62f, gbc.sp());
        EXPECT(0x4b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xff13));
        // E0 021E
        gbc.setState(0x885c, 0x23e4, 0xe4e0, 0x8068, 0x3e3c, 0xaef4, 0x0, 0x0);
        gbc.writeMem(0x885c, { 0xe0, 0x11 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x23e4, gbc.sp());
        EXPECT(0x885e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x885c));
        EXPECT(0x11, gbc.readMem(0x885d));
        EXPECT(0xe4, gbc.readMem(0xff11));
        // E0 0220
        gbc.setState(0x27ca, 0x3ed4, 0x2f10, 0xdc0c, 0xde8d, 0x50ca, 0x1, 0x1);
        gbc.writeMem(0x27ca, { 0xe0, 0xc4 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3ed4, gbc.sp());
        EXPECT(0x27cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xffc4));
        // E0 0221
        gbc.setState(0xef67, 0xbf6e, 0x89a0, 0x7c1a, 0x23c5, 0x2da4, 0x0, 0x1);
        gbc.writeMem(0xef67, { 0xe0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbf6e, gbc.sp());
        EXPECT(0xef69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xef67));
        EXPECT(0xa5, gbc.readMem(0xef68));
        EXPECT(0x89, gbc.readMem(0xffa5));
        // E0 0222
        gbc.setState(0xdd13, 0x99bc, 0xde20, 0x9d51, 0x4f59, 0x80d9, 0x1, 0x0);
        gbc.writeMem(0xdd13, { 0xe0, 0x99 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x99bc, gbc.sp());
        EXPECT(0xdd15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdd13));
        EXPECT(0x99, gbc.readMem(0xdd14));
        EXPECT(0xde, gbc.readMem(0xff99));
        // E0 0223
        gbc.setState(0x21bd, 0x1759, 0xbef0, 0x7529, 0xd545, 0x29d0, 0x0, 0x0);
        gbc.writeMem(0x21bd, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1759, gbc.sp());
        EXPECT(0x21bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xff8a));
        // E0 0224
        gbc.setState(0x663f, 0x33bd, 0x7290, 0xb937, 0xb54c, 0x9d8, 0x1, 0x0);
        gbc.writeMem(0x663f, { 0xe0, 0x3d });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x33bd, gbc.sp());
        EXPECT(0x6641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xff3d));
        // E0 0225
        gbc.setState(0x1e03, 0xbc6c, 0xaba0, 0xd026, 0x58bf, 0x84cf, 0x0, 0x1);
        gbc.writeMem(0x1e03, { 0xe0, 0x6f });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbc6c, gbc.sp());
        EXPECT(0x1e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xff6f));
        // E0 0226
        gbc.setState(0x2cec, 0xc156, 0x32f0, 0xae8b, 0xbf81, 0x3383, 0x1, 0x1);
        gbc.writeMem(0x2cec, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc156, gbc.sp());
        EXPECT(0x2cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xff4c));
        // E0 0227
        gbc.setState(0x3263, 0x76c3, 0xe150, 0xc88a, 0xcb3c, 0x7a34, 0x1, 0x0);
        gbc.writeMem(0x3263, { 0xe0, 0xa1 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x76c3, gbc.sp());
        EXPECT(0x3265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xffa1));
        // E0 0229
        gbc.setState(0xd64f, 0x7972, 0xcd90, 0x93d9, 0x371b, 0xee18, 0x0, 0x1);
        gbc.writeMem(0xd64f, { 0xe0, 0xb });
        gbc.writeMem(0xff0b, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7972, gbc.sp());
        EXPECT(0xd651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd64f));
        EXPECT(0xb, gbc.readMem(0xd650));
        EXPECT(0xcd, gbc.readMem(0xff0b));
        // E0 022A
        gbc.setState(0x3f23, 0x44a1, 0xe860, 0x46c4, 0x9558, 0xa49a, 0x0, 0x1);
        gbc.writeMem(0x3f23, { 0xe0, 0x1e });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x44a1, gbc.sp());
        EXPECT(0x3f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xff1e));
        // E0 022B
        gbc.setState(0xd92f, 0x69dd, 0xada0, 0x4d5a, 0xbffc, 0xafb9, 0x1, 0x1);
        gbc.writeMem(0xd92f, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x69dd, gbc.sp());
        EXPECT(0xd931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd92f));
        EXPECT(0x48, gbc.readMem(0xd930));
        EXPECT(0xad, gbc.readMem(0xff48));
        // E0 022C
        gbc.setState(0x1ced, 0xf8ef, 0xcd90, 0x6ff, 0x28d1, 0xfaa1, 0x1, 0x1);
        gbc.writeMem(0x1ced, { 0xe0, 0x72 });
        gbc.writeMem(0xff72, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf8ef, gbc.sp());
        EXPECT(0x1cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xff72));
        // E0 022D
        gbc.setState(0x16c3, 0xd495, 0xc430, 0x31b0, 0x29f4, 0x4b0d, 0x0, 0x0);
        gbc.writeMem(0x16c3, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd495, gbc.sp());
        EXPECT(0x16c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xff9a));
        // E0 022E
        gbc.setState(0x6f6, 0xeb4e, 0xd770, 0x1ab8, 0x6a4a, 0x8ead, 0x0, 0x1);
        gbc.writeMem(0x6f6, { 0xe0, 0x54 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xeb4e, gbc.sp());
        EXPECT(0x6f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xff54));
        // E0 022F
        gbc.setState(0x2a78, 0xf4f5, 0x3a0, 0x3063, 0x1b9c, 0xd178, 0x0, 0x0);
        gbc.writeMem(0x2a78, { 0xe0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf4f5, gbc.sp());
        EXPECT(0x2a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xffd7));
        // E0 0230
        gbc.setState(0xab68, 0xcbca, 0x42e0, 0x76d2, 0x8f43, 0x1928, 0x0, 0x0);
        gbc.writeMem(0xab68, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcbca, gbc.sp());
        EXPECT(0xab6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xab68));
        EXPECT(0x4c, gbc.readMem(0xab69));
        EXPECT(0x42, gbc.readMem(0xff4c));
        // E0 0231
        gbc.setState(0xd72c, 0x2f7a, 0xf50, 0x5e0, 0xfc7c, 0xe704, 0x0, 0x0);
        gbc.writeMem(0xd72c, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2f7a, gbc.sp());
        EXPECT(0xd72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd72c));
        EXPECT(0xab, gbc.readMem(0xd72d));
        EXPECT(0xf, gbc.readMem(0xffab));
        // E0 0232
        gbc.setState(0xa64d, 0x6779, 0x4a40, 0x70a0, 0xd46a, 0x53a1, 0x0, 0x1);
        gbc.writeMem(0xa64d, { 0xe0, 0x1a });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6779, gbc.sp());
        EXPECT(0xa64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa64d));
        EXPECT(0x1a, gbc.readMem(0xa64e));
        EXPECT(0x4a, gbc.readMem(0xff1a));
        // E0 0234
        gbc.setState(0x78c0, 0x3928, 0xfe20, 0x6e38, 0x961b, 0xf3f7, 0x0, 0x0);
        gbc.writeMem(0x78c0, { 0xe0, 0x92 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3928, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xff92));
        // E0 0235
        gbc.setState(0xa9b9, 0x8d90, 0xa460, 0x9c03, 0xaeaa, 0x23a0, 0x1, 0x0);
        gbc.writeMem(0xa9b9, { 0xe0, 0x9d });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8d90, gbc.sp());
        EXPECT(0xa9bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa9b9));
        EXPECT(0x9d, gbc.readMem(0xa9ba));
        EXPECT(0xa4, gbc.readMem(0xff9d));
        // E0 0236
        gbc.setState(0x2d84, 0x6d7a, 0x9390, 0x7910, 0x2940, 0xfa54, 0x0, 0x1);
        gbc.writeMem(0x2d84, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6d7a, gbc.sp());
        EXPECT(0x2d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xff0e));
        // E0 0239
        gbc.setState(0x4c8e, 0x7c9d, 0xeea0, 0xc8ad, 0xc5db, 0x781a, 0x1, 0x0);
        gbc.writeMem(0x4c8e, { 0xe0, 0xf0 });
        gbc.writeMem(0xfff0, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7c9d, gbc.sp());
        EXPECT(0x4c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xfff0));
        // E0 023A
        gbc.setState(0x75f8, 0x8a68, 0xf0, 0x254d, 0xd4e6, 0x1b8c, 0x0, 0x1);
        gbc.writeMem(0x75f8, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8a68, gbc.sp());
        EXPECT(0x75fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xffcb));
        // E0 023B
        gbc.setState(0x1c56, 0xd860, 0xef30, 0x6ee3, 0x8f09, 0x37b1, 0x0, 0x1);
        gbc.writeMem(0x1c56, { 0xe0, 0x45 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd860, gbc.sp());
        EXPECT(0x1c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xff45));
        // E0 023C
        gbc.setState(0x5ef4, 0xbc2b, 0xf210, 0x23c4, 0x40dc, 0xe78f, 0x0, 0x1);
        gbc.writeMem(0x5ef4, { 0xe0, 0x89 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbc2b, gbc.sp());
        EXPECT(0x5ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xff89));
        // E0 023E
        gbc.setState(0xb91b, 0x7e10, 0xb510, 0xf9bc, 0xf340, 0x9aca, 0x1, 0x1);
        gbc.writeMem(0xb91b, { 0xe0, 0x17 });
        gbc.writeMem(0xff17, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7e10, gbc.sp());
        EXPECT(0xb91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb91b));
        EXPECT(0x17, gbc.readMem(0xb91c));
        EXPECT(0xb5, gbc.readMem(0xff17));
        // E0 023F
        gbc.setState(0x6bfa, 0xa80e, 0x78c0, 0xbe56, 0x6307, 0x117a, 0x0, 0x1);
        gbc.writeMem(0x6bfa, { 0xe0, 0x6a });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa80e, gbc.sp());
        EXPECT(0x6bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xff6a));
        // E0 0240
        gbc.setState(0xb9f4, 0x6a38, 0x84c0, 0x25c4, 0x6aa0, 0x9b4d, 0x0, 0x0);
        gbc.writeMem(0xb9f4, { 0xe0, 0x6b });
        gbc.writeMem(0xff6b, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6a38, gbc.sp());
        EXPECT(0xb9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb9f4));
        EXPECT(0x6b, gbc.readMem(0xb9f5));
        EXPECT(0x84, gbc.readMem(0xff6b));
        // E0 0241
        gbc.setState(0x30ae, 0xd8bc, 0x6e20, 0x8c17, 0xddf5, 0x1b10, 0x1, 0x1);
        gbc.writeMem(0x30ae, { 0xe0, 0xda });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd8bc, gbc.sp());
        EXPECT(0x30b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xffda));
        // E0 0242
        gbc.setState(0x552c, 0x57f5, 0x1f90, 0xd155, 0x7637, 0x5852, 0x0, 0x1);
        gbc.writeMem(0x552c, { 0xe0, 0xe9 });
        gbc.writeMem(0xffe9, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x57f5, gbc.sp());
        EXPECT(0x552e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xffe9));
        // E0 0243
        gbc.setState(0x411e, 0x1602, 0x6420, 0x1adc, 0x1928, 0x9006, 0x0, 0x1);
        gbc.writeMem(0x411e, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1602, gbc.sp());
        EXPECT(0x4120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xff80));
        // E0 0244
        gbc.setState(0xd700, 0xac12, 0x4b00, 0xdba1, 0xec4a, 0x1384, 0x1, 0x1);
        gbc.writeMem(0xd700, { 0xe0, 0xcf });
        gbc.writeMem(0xffcf, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xac12, gbc.sp());
        EXPECT(0xd702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd700));
        EXPECT(0xcf, gbc.readMem(0xd701));
        EXPECT(0x4b, gbc.readMem(0xffcf));
        // E0 0245
        gbc.setState(0x4534, 0x1ec, 0xfb40, 0x2f4c, 0x3b88, 0xb0a2, 0x0, 0x0);
        gbc.writeMem(0x4534, { 0xe0, 0x5b });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1ec, gbc.sp());
        EXPECT(0x4536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xff5b));
        // E0 0246
        gbc.setState(0x5f26, 0xdb06, 0xa380, 0x79c, 0x9d81, 0x6fc, 0x1, 0x1);
        gbc.writeMem(0x5f26, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdb06, gbc.sp());
        EXPECT(0x5f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xffb2));
        // E0 0247
        gbc.setState(0xa25f, 0x7c93, 0x3cb0, 0xbe7, 0x379e, 0x89fb, 0x1, 0x1);
        gbc.writeMem(0xa25f, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7c93, gbc.sp());
        EXPECT(0xa261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa25f));
        EXPECT(0xcb, gbc.readMem(0xa260));
        EXPECT(0x3c, gbc.readMem(0xffcb));
        // E0 0248
        gbc.setState(0x9d10, 0xd871, 0x65a0, 0xff7f, 0x5f49, 0xce8d, 0x1, 0x1);
        gbc.writeMem(0x9d10, { 0xe0, 0x97 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd871, gbc.sp());
        EXPECT(0x9d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9d10));
        EXPECT(0x97, gbc.readMem(0x9d11));
        EXPECT(0x65, gbc.readMem(0xff97));
        // E0 0249
        gbc.setState(0xdd6d, 0x6759, 0xa5c0, 0xe17, 0x62b8, 0xe19b, 0x0, 0x0);
        gbc.writeMem(0xdd6d, { 0xe0, 0x5a });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6759, gbc.sp());
        EXPECT(0xdd6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdd6d));
        EXPECT(0x5a, gbc.readMem(0xdd6e));
        EXPECT(0xa5, gbc.readMem(0xff5a));
        // E0 024A
        gbc.setState(0x6c34, 0x396b, 0x4ea0, 0xf960, 0x980b, 0xfd57, 0x1, 0x1);
        gbc.writeMem(0x6c34, { 0xe0, 0x6 });
        gbc.writeMem(0xff06, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x396b, gbc.sp());
        EXPECT(0x6c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xff06));
        // E0 024B
        gbc.setState(0x4de6, 0xaa8c, 0x4d30, 0x9e2d, 0xabdc, 0x171b, 0x0, 0x0);
        gbc.writeMem(0x4de6, { 0xe0, 0x78 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xaa8c, gbc.sp());
        EXPECT(0x4de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xff78));
        // E0 024C
        gbc.setState(0x2145, 0x4e4f, 0xea00, 0x6f5d, 0x6b02, 0xf81c, 0x0, 0x1);
        gbc.writeMem(0x2145, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4e4f, gbc.sp());
        EXPECT(0x2147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xff07));
        // E0 024D
        gbc.setState(0x3cd5, 0x1b1, 0x5060, 0xba3e, 0x6fd8, 0xe341, 0x1, 0x1);
        gbc.writeMem(0x3cd5, { 0xe0, 0x75 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1b1, gbc.sp());
        EXPECT(0x3cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xff75));
        // E0 024E
        gbc.setState(0x6e1e, 0x3798, 0x2c40, 0x7caf, 0x3557, 0x3815, 0x1, 0x0);
        gbc.writeMem(0x6e1e, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3798, gbc.sp());
        EXPECT(0x6e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xffc0));
        // E0 024F
        gbc.setState(0xc42a, 0x12e2, 0xd810, 0xf342, 0x50d8, 0x7cb4, 0x1, 0x1);
        gbc.writeMem(0xc42a, { 0xe0, 0x97 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x12e2, gbc.sp());
        EXPECT(0xc42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc42a));
        EXPECT(0x97, gbc.readMem(0xc42b));
        EXPECT(0xd8, gbc.readMem(0xff97));
        // E0 0250
        gbc.setState(0xa841, 0xcb5, 0x1200, 0x8f99, 0x95e6, 0xca2b, 0x0, 0x0);
        gbc.writeMem(0xa841, { 0xe0, 0xba });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcb5, gbc.sp());
        EXPECT(0xa843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa841));
        EXPECT(0xba, gbc.readMem(0xa842));
        EXPECT(0x12, gbc.readMem(0xffba));
        // E0 0251
        gbc.setState(0xc4ae, 0x622, 0x1f30, 0x33de, 0xb733, 0xc720, 0x1, 0x0);
        gbc.writeMem(0xc4ae, { 0xe0, 0x1 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x622, gbc.sp());
        EXPECT(0xc4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc4ae));
        EXPECT(0x1, gbc.readMem(0xc4af));
        EXPECT(0x1f, gbc.readMem(0xff01));
        // E0 0252
        gbc.setState(0xb3c8, 0x8fdf, 0x82f0, 0x8305, 0x89a, 0x8ee, 0x0, 0x1);
        gbc.writeMem(0xb3c8, { 0xe0, 0x88 });
        gbc.writeMem(0xff88, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8fdf, gbc.sp());
        EXPECT(0xb3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb3c8));
        EXPECT(0x88, gbc.readMem(0xb3c9));
        EXPECT(0x82, gbc.readMem(0xff88));
        // E0 0253
        gbc.setState(0x8c4b, 0x82f, 0x50, 0x7112, 0xc0a1, 0x7cfa, 0x0, 0x0);
        gbc.writeMem(0x8c4b, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x82f, gbc.sp());
        EXPECT(0x8c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8c4b));
        EXPECT(0x80, gbc.readMem(0x8c4c));
        EXPECT(0x0, gbc.readMem(0xff80));
        // E0 0254
        gbc.setState(0x937c, 0x8347, 0xba00, 0xa941, 0xd541, 0x52b9, 0x0, 0x1);
        gbc.writeMem(0x937c, { 0xe0, 0xec });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8347, gbc.sp());
        EXPECT(0x937e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x937c));
        EXPECT(0xec, gbc.readMem(0x937d));
        EXPECT(0xba, gbc.readMem(0xffec));
        // E0 0255
        gbc.setState(0x339b, 0xe4a7, 0x5600, 0xa79b, 0x7401, 0xf345, 0x1, 0x0);
        gbc.writeMem(0x339b, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe4a7, gbc.sp());
        EXPECT(0x339d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xffc0));
        // E0 0256
        gbc.setState(0xae1a, 0xbb11, 0x5e50, 0x9ee2, 0x4390, 0xb05, 0x0, 0x0);
        gbc.writeMem(0xae1a, { 0xe0, 0xaa });
        gbc.writeMem(0xffaa, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbb11, gbc.sp());
        EXPECT(0xae1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xae1a));
        EXPECT(0xaa, gbc.readMem(0xae1b));
        EXPECT(0x5e, gbc.readMem(0xffaa));
        // E0 0258
        gbc.setState(0xae5, 0xc884, 0x48f0, 0x9b37, 0xca06, 0x137f, 0x1, 0x1);
        gbc.writeMem(0xae5, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc884, gbc.sp());
        EXPECT(0xae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xff68));
        // E0 0259
        gbc.setState(0x8a16, 0x40a1, 0x4ad0, 0x594e, 0x418e, 0x47d7, 0x1, 0x0);
        gbc.writeMem(0x8a16, { 0xe0, 0x78 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x40a1, gbc.sp());
        EXPECT(0x8a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8a16));
        EXPECT(0x78, gbc.readMem(0x8a17));
        EXPECT(0x4a, gbc.readMem(0xff78));
        // E0 025B
        gbc.setState(0x371b, 0x9906, 0xe210, 0xf44e, 0xab79, 0xc51d, 0x1, 0x0);
        gbc.writeMem(0x371b, { 0xe0, 0xf5 });
        gbc.writeMem(0xfff5, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9906, gbc.sp());
        EXPECT(0x371d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xfff5));
        // E0 025C
        gbc.setState(0x91f6, 0xe02a, 0xeb90, 0xeda, 0x49f5, 0xd199, 0x1, 0x1);
        gbc.writeMem(0x91f6, { 0xe0, 0x1c });
        gbc.writeMem(0xff1c, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe02a, gbc.sp());
        EXPECT(0x91f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x91f6));
        EXPECT(0x1c, gbc.readMem(0x91f7));
        EXPECT(0xeb, gbc.readMem(0xff1c));
        // E0 025D
        gbc.setState(0xa239, 0x83e8, 0xfb0, 0xf7ef, 0xa30f, 0x1132, 0x0, 0x0);
        gbc.writeMem(0xa239, { 0xe0, 0xa6 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x83e8, gbc.sp());
        EXPECT(0xa23b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa239));
        EXPECT(0xa6, gbc.readMem(0xa23a));
        EXPECT(0xf, gbc.readMem(0xffa6));
        // E0 025E
        gbc.setState(0xc3cc, 0xbf4d, 0xd020, 0x866a, 0x9f16, 0xa2b4, 0x1, 0x0);
        gbc.writeMem(0xc3cc, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbf4d, gbc.sp());
        EXPECT(0xc3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc3cc));
        EXPECT(0x9e, gbc.readMem(0xc3cd));
        EXPECT(0xd0, gbc.readMem(0xff9e));
        // E0 025F
        gbc.setState(0xab70, 0xa053, 0x45e0, 0x93bd, 0x7933, 0xb67e, 0x1, 0x1);
        gbc.writeMem(0xab70, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa053, gbc.sp());
        EXPECT(0xab72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xab70));
        EXPECT(0xb2, gbc.readMem(0xab71));
        EXPECT(0x45, gbc.readMem(0xffb2));
        // E0 0260
        gbc.setState(0xd38c, 0x361f, 0xa570, 0x3788, 0xf00e, 0x6b25, 0x1, 0x1);
        gbc.writeMem(0xd38c, { 0xe0, 0x39 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x361f, gbc.sp());
        EXPECT(0xd38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd38c));
        EXPECT(0x39, gbc.readMem(0xd38d));
        EXPECT(0xa5, gbc.readMem(0xff39));
        // E0 0261
        gbc.setState(0xdf10, 0x862f, 0xced0, 0x1d75, 0xc87f, 0x3c21, 0x1, 0x1);
        gbc.writeMem(0xdf10, { 0xe0, 0xd6 });
        gbc.writeMem(0xffd6, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x862f, gbc.sp());
        EXPECT(0xdf12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdf10));
        EXPECT(0xd6, gbc.readMem(0xdf11));
        EXPECT(0xce, gbc.readMem(0xffd6));
        // E0 0262
        gbc.setState(0xae2f, 0xae8a, 0xdc70, 0x92d0, 0xc063, 0x5b30, 0x0, 0x1);
        gbc.writeMem(0xae2f, { 0xe0, 0x98 });
        gbc.writeMem(0xff98, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xae8a, gbc.sp());
        EXPECT(0xae31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xae2f));
        EXPECT(0x98, gbc.readMem(0xae30));
        EXPECT(0xdc, gbc.readMem(0xff98));
        // E0 0263
        gbc.setState(0xc720, 0x91b1, 0xc080, 0xee45, 0x5081, 0x759c, 0x0, 0x0);
        gbc.writeMem(0xc720, { 0xe0, 0x30 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x91b1, gbc.sp());
        EXPECT(0xc722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc720));
        EXPECT(0x30, gbc.readMem(0xc721));
        EXPECT(0xc0, gbc.readMem(0xff30));
        // E0 0264
        gbc.setState(0xc319, 0x2473, 0xab0, 0xfb0a, 0x914, 0xc4b1, 0x0, 0x0);
        gbc.writeMem(0xc319, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2473, gbc.sp());
        EXPECT(0xc31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc319));
        EXPECT(0x3f, gbc.readMem(0xc31a));
        EXPECT(0xa, gbc.readMem(0xff3f));
        // E0 0265
        gbc.setState(0x4de8, 0xa6e4, 0x4a90, 0xb1a9, 0x21e1, 0x3251, 0x0, 0x1);
        gbc.writeMem(0x4de8, { 0xe0, 0xda });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa6e4, gbc.sp());
        EXPECT(0x4dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xffda));
        // E0 0266
        gbc.setState(0xc241, 0x81c5, 0x7ba0, 0xf78f, 0x2e7a, 0xe6d, 0x1, 0x1);
        gbc.writeMem(0xc241, { 0xe0, 0xab });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x81c5, gbc.sp());
        EXPECT(0xc243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc241));
        EXPECT(0xab, gbc.readMem(0xc242));
        EXPECT(0x7b, gbc.readMem(0xffab));
        // E0 0267
        gbc.setState(0xaed2, 0x5331, 0x6150, 0x1df2, 0xc0, 0xe293, 0x1, 0x1);
        gbc.writeMem(0xaed2, { 0xe0, 0x13 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5331, gbc.sp());
        EXPECT(0xaed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xaed2));
        EXPECT(0x13, gbc.readMem(0xaed3));
        EXPECT(0x61, gbc.readMem(0xff13));
        // E0 0268
        gbc.setState(0x6ed1, 0xbfab, 0xa7f0, 0x67f1, 0x69db, 0x8e01, 0x0, 0x0);
        gbc.writeMem(0x6ed1, { 0xe0, 0x64 });
        gbc.writeMem(0xff64, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbfab, gbc.sp());
        EXPECT(0x6ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xff64));
        // E0 0269
        gbc.setState(0x426a, 0xe071, 0xbdc0, 0x5a6d, 0x8601, 0xa180, 0x0, 0x1);
        gbc.writeMem(0x426a, { 0xe0, 0x46 });
        gbc.writeMem(0xff46, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe071, gbc.sp());
        EXPECT(0x426c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xff46));
        // E0 026A
        gbc.setState(0xdfbb, 0x5176, 0x8380, 0x406b, 0x7e4b, 0x5b59, 0x1, 0x0);
        gbc.writeMem(0xdfbb, { 0xe0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5176, gbc.sp());
        EXPECT(0xdfbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdfbb));
        EXPECT(0xa5, gbc.readMem(0xdfbc));
        EXPECT(0x83, gbc.readMem(0xffa5));
        // E0 026C
        gbc.setState(0xa9f6, 0x2e69, 0x7120, 0x7f54, 0x44ae, 0x6887, 0x1, 0x1);
        gbc.writeMem(0xa9f6, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2e69, gbc.sp());
        EXPECT(0xa9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa9f6));
        EXPECT(0x52, gbc.readMem(0xa9f7));
        EXPECT(0x71, gbc.readMem(0xff52));
        // E0 026D
        gbc.setState(0xbbf2, 0xea22, 0xef40, 0x53e1, 0xf49b, 0x7f59, 0x0, 0x1);
        gbc.writeMem(0xbbf2, { 0xe0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xea22, gbc.sp());
        EXPECT(0xbbf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbbf2));
        EXPECT(0xc9, gbc.readMem(0xbbf3));
        EXPECT(0xef, gbc.readMem(0xffc9));
        // E0 026E
        gbc.setState(0x54d, 0x3c2c, 0x2430, 0xc173, 0xc30, 0xa763, 0x1, 0x1);
        gbc.writeMem(0x54d, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3c2c, gbc.sp());
        EXPECT(0x54f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xff68));
        // E0 026F
        gbc.setState(0xe960, 0xe08b, 0xf140, 0x1fe7, 0x25e7, 0xa78f, 0x0, 0x1);
        gbc.writeMem(0xe960, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe08b, gbc.sp());
        EXPECT(0xe962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe960));
        EXPECT(0x9a, gbc.readMem(0xe961));
        EXPECT(0xf1, gbc.readMem(0xff9a));
        // E0 0271
        gbc.setState(0x5f50, 0x9b4a, 0xa060, 0x357d, 0xadf3, 0xaab2, 0x0, 0x1);
        gbc.writeMem(0x5f50, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9b4a, gbc.sp());
        EXPECT(0x5f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xff5e));
        // E0 0272
        gbc.setState(0x1b94, 0xe5a8, 0xfcf0, 0x7baa, 0xa0c7, 0xa65f, 0x0, 0x1);
        gbc.writeMem(0x1b94, { 0xe0, 0x2a });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe5a8, gbc.sp());
        EXPECT(0x1b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xff2a));
        // E0 0273
        gbc.setState(0xd86d, 0x8432, 0x7c60, 0x8c3, 0xe718, 0x6572, 0x0, 0x1);
        gbc.writeMem(0xd86d, { 0xe0, 0xfb });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8432, gbc.sp());
        EXPECT(0xd86f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd86d));
        EXPECT(0xfb, gbc.readMem(0xd86e));
        EXPECT(0x7c, gbc.readMem(0xfffb));
        // E0 0274
        gbc.setState(0x145f, 0xab4f, 0xe310, 0x50e0, 0x5601, 0x9dbd, 0x0, 0x0);
        gbc.writeMem(0x145f, { 0xe0, 0x34 });
        gbc.writeMem(0xff34, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xab4f, gbc.sp());
        EXPECT(0x1461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xff34));
        // E0 0275
        gbc.setState(0x8505, 0x5533, 0x4ba0, 0x2cf0, 0x6b70, 0xbc40, 0x1, 0x1);
        gbc.writeMem(0x8505, { 0xe0, 0xbe });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5533, gbc.sp());
        EXPECT(0x8507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8505));
        EXPECT(0xbe, gbc.readMem(0x8506));
        EXPECT(0x4b, gbc.readMem(0xffbe));
        // E0 0276
        gbc.setState(0xbfd, 0xbf5b, 0x1ea0, 0xffdd, 0xd29e, 0x194f, 0x1, 0x0);
        gbc.writeMem(0xbfd, { 0xe0, 0xd3 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbf5b, gbc.sp());
        EXPECT(0xbff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xffd3));
        // E0 0277
        gbc.setState(0x5962, 0xca2f, 0x3800, 0xa832, 0xe3df, 0xba5a, 0x0, 0x1);
        gbc.writeMem(0x5962, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xca2f, gbc.sp());
        EXPECT(0x5964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xff9f));
        // E0 0278
        gbc.setState(0x9c50, 0xa92, 0xbe30, 0x19bf, 0xbd83, 0x1099, 0x1, 0x0);
        gbc.writeMem(0x9c50, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa92, gbc.sp());
        EXPECT(0x9c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9c50));
        EXPECT(0x51, gbc.readMem(0x9c51));
        EXPECT(0xbe, gbc.readMem(0xff51));
        // E0 027A
        gbc.setState(0xd37f, 0x2680, 0xb500, 0x2c2e, 0x603b, 0x211f, 0x0, 0x1);
        gbc.writeMem(0xd37f, { 0xe0, 0xa9 });
        gbc.writeMem(0xffa9, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2680, gbc.sp());
        EXPECT(0xd381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd37f));
        EXPECT(0xa9, gbc.readMem(0xd380));
        EXPECT(0xb5, gbc.readMem(0xffa9));
        // E0 027C
        gbc.setState(0xe46b, 0xd0af, 0xc290, 0x8879, 0x659b, 0x5c49, 0x1, 0x1);
        gbc.writeMem(0xe46b, { 0xe0, 0x71 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd0af, gbc.sp());
        EXPECT(0xe46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe46b));
        EXPECT(0x71, gbc.readMem(0xe46c));
        EXPECT(0xc2, gbc.readMem(0xff71));
        // E0 027D
        gbc.setState(0xd1ee, 0x9abe, 0x6930, 0xd771, 0x40d0, 0x6d39, 0x0, 0x0);
        gbc.writeMem(0xd1ee, { 0xe0, 0x86 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9abe, gbc.sp());
        EXPECT(0xd1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd1ee));
        EXPECT(0x86, gbc.readMem(0xd1ef));
        EXPECT(0x69, gbc.readMem(0xff86));
        // E0 027E
        gbc.setState(0xa8fe, 0xa94c, 0x39f0, 0x6d32, 0x2c69, 0x4d5d, 0x1, 0x0);
        gbc.writeMem(0xa8fe, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa94c, gbc.sp());
        EXPECT(0xa900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa8fe));
        EXPECT(0x68, gbc.readMem(0xa8ff));
        EXPECT(0x39, gbc.readMem(0xff68));
        // E0 027F
        gbc.setState(0x28fe, 0x1c4e, 0x7650, 0xc51e, 0xd2dd, 0xfcc, 0x1, 0x0);
        gbc.writeMem(0x28fe, { 0xe0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1c4e, gbc.sp());
        EXPECT(0x2900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xffd7));
        // E0 0280
        gbc.setState(0x2e45, 0xc564, 0xa0e0, 0xa7f9, 0xde42, 0xe102, 0x1, 0x0);
        gbc.writeMem(0x2e45, { 0xe0, 0x4a });
        gbc.writeMem(0xff4a, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc564, gbc.sp());
        EXPECT(0x2e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xff4a));
        // E0 0281
        gbc.setState(0x743e, 0x15c4, 0x5620, 0x61c9, 0x1112, 0xe703, 0x0, 0x0);
        gbc.writeMem(0x743e, { 0xe0, 0xa2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x15c4, gbc.sp());
        EXPECT(0x7440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xffa2));
        // E0 0282
        gbc.setState(0x7ae9, 0x1f35, 0xb410, 0x2b64, 0x9fe0, 0x24c2, 0x1, 0x1);
        gbc.writeMem(0x7ae9, { 0xe0, 0x6f });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1f35, gbc.sp());
        EXPECT(0x7aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xff6f));
        // E0 0283
        gbc.setState(0x81e1, 0x4f2b, 0x91b0, 0x88ad, 0xa6b5, 0xe598, 0x0, 0x0);
        gbc.writeMem(0x81e1, { 0xe0, 0xa3 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4f2b, gbc.sp());
        EXPECT(0x81e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x81e1));
        EXPECT(0xa3, gbc.readMem(0x81e2));
        EXPECT(0x91, gbc.readMem(0xffa3));
        // E0 0284
        gbc.setState(0xc23f, 0x53e6, 0x2810, 0x336b, 0x26cd, 0xdce7, 0x1, 0x0);
        gbc.writeMem(0xc23f, { 0xe0, 0x8d });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x53e6, gbc.sp());
        EXPECT(0xc241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc23f));
        EXPECT(0x8d, gbc.readMem(0xc240));
        EXPECT(0x28, gbc.readMem(0xff8d));
        // E0 0285
        gbc.setState(0x1b03, 0x3eb6, 0x38d0, 0xf37a, 0x9b5, 0x797d, 0x0, 0x1);
        gbc.writeMem(0x1b03, { 0xe0, 0x2f });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3eb6, gbc.sp());
        EXPECT(0x1b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xff2f));
        // E0 0286
        gbc.setState(0x897f, 0x7fd5, 0x7580, 0x3697, 0x59ac, 0x29de, 0x0, 0x0);
        gbc.writeMem(0x897f, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7fd5, gbc.sp());
        EXPECT(0x8981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x897f));
        EXPECT(0x8a, gbc.readMem(0x8980));
        EXPECT(0x75, gbc.readMem(0xff8a));
        // E0 0287
        gbc.setState(0xc555, 0xd7e6, 0x7910, 0xe402, 0xe8e7, 0x7f34, 0x0, 0x0);
        gbc.writeMem(0xc555, { 0xe0, 0xe8 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd7e6, gbc.sp());
        EXPECT(0xc557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc555));
        EXPECT(0xe8, gbc.readMem(0xc556));
        EXPECT(0x79, gbc.readMem(0xffe8));
        // E0 0288
        gbc.setState(0x9a9d, 0x3370, 0x6370, 0xba2c, 0x69c7, 0xaf9b, 0x0, 0x1);
        gbc.writeMem(0x9a9d, { 0xe0, 0x73 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3370, gbc.sp());
        EXPECT(0x9a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9a9d));
        EXPECT(0x73, gbc.readMem(0x9a9e));
        EXPECT(0x63, gbc.readMem(0xff73));
        // E0 0289
        gbc.setState(0x19c2, 0x490d, 0xac00, 0x3997, 0xb751, 0x62c7, 0x0, 0x1);
        gbc.writeMem(0x19c2, { 0xe0, 0xde });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x490d, gbc.sp());
        EXPECT(0x19c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xffde));
        // E0 028B
        gbc.setState(0xeb7, 0xadfd, 0x7320, 0x3369, 0x80a1, 0xd8d3, 0x1, 0x0);
        gbc.writeMem(0xeb7, { 0xe0, 0x3a });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xadfd, gbc.sp());
        EXPECT(0xeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xff3a));
        // E0 028C
        gbc.setState(0xebf0, 0xa925, 0x4e70, 0x6aaf, 0xa6a5, 0x303e, 0x0, 0x1);
        gbc.writeMem(0xebf0, { 0xe0, 0xc });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa925, gbc.sp());
        EXPECT(0xebf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xebf0));
        EXPECT(0xc, gbc.readMem(0xebf1));
        EXPECT(0x4e, gbc.readMem(0xff0c));
        // E0 028D
        gbc.setState(0x5689, 0x82ed, 0x3a90, 0x675a, 0xfabb, 0xf8b2, 0x0, 0x0);
        gbc.writeMem(0x5689, { 0xe0, 0xb4 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x82ed, gbc.sp());
        EXPECT(0x568b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xffb4));
        // E0 028E
        gbc.setState(0x63c0, 0xc2a7, 0x92a0, 0x263b, 0x4c29, 0xe830, 0x0, 0x1);
        gbc.writeMem(0x63c0, { 0xe0, 0x13 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc2a7, gbc.sp());
        EXPECT(0x63c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xff13));
        // E0 028F
        gbc.setState(0x9c0f, 0xf1af, 0xe4e0, 0x4b92, 0x58ec, 0x1cca, 0x1, 0x0);
        gbc.writeMem(0x9c0f, { 0xe0, 0x8b });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf1af, gbc.sp());
        EXPECT(0x9c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9c0f));
        EXPECT(0x8b, gbc.readMem(0x9c10));
        EXPECT(0xe4, gbc.readMem(0xff8b));
        // E0 0290
        gbc.setState(0xeef1, 0xd212, 0x3e70, 0x8108, 0x3a58, 0x770c, 0x1, 0x1);
        gbc.writeMem(0xeef1, { 0xe0, 0x93 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd212, gbc.sp());
        EXPECT(0xeef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xeef1));
        EXPECT(0x93, gbc.readMem(0xeef2));
        EXPECT(0x3e, gbc.readMem(0xff93));
        // E0 0291
        gbc.setState(0x1a1b, 0x1815, 0x7b00, 0x46, 0x8e0f, 0x9683, 0x1, 0x0);
        gbc.writeMem(0x1a1b, { 0xe0, 0x40 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1815, gbc.sp());
        EXPECT(0x1a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xff40));
        // E0 0292
        gbc.setState(0x413a, 0xb41c, 0x6970, 0x4b65, 0xc043, 0x6bd5, 0x1, 0x0);
        gbc.writeMem(0x413a, { 0xe0, 0x8 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb41c, gbc.sp());
        EXPECT(0x413c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xff08));
        // E0 0293
        gbc.setState(0x6f00, 0xc52b, 0x36b0, 0xb783, 0xce62, 0x367b, 0x0, 0x0);
        gbc.writeMem(0x6f00, { 0xe0, 0xfc });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc52b, gbc.sp());
        EXPECT(0x6f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xfffc));
        // E0 0295
        gbc.setState(0x1860, 0xd8da, 0x2410, 0x4586, 0x8666, 0xc494, 0x1, 0x0);
        gbc.writeMem(0x1860, { 0xe0, 0x4a });
        gbc.writeMem(0xff4a, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd8da, gbc.sp());
        EXPECT(0x1862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xff4a));
        // E0 0296
        gbc.setState(0x9c97, 0xdd0d, 0x8480, 0x51b2, 0xd985, 0x56f2, 0x0, 0x1);
        gbc.writeMem(0x9c97, { 0xe0, 0xa1 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdd0d, gbc.sp());
        EXPECT(0x9c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9c97));
        EXPECT(0xa1, gbc.readMem(0x9c98));
        EXPECT(0x84, gbc.readMem(0xffa1));
        // E0 0297
        gbc.setState(0x1acb, 0xd971, 0xabb0, 0xd937, 0xa288, 0xaa78, 0x0, 0x1);
        gbc.writeMem(0x1acb, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd971, gbc.sp());
        EXPECT(0x1acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xff35));
        // E0 0298
        gbc.setState(0xc17b, 0x2664, 0xde70, 0x8df3, 0xf788, 0x153c, 0x1, 0x1);
        gbc.writeMem(0xc17b, { 0xe0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2664, gbc.sp());
        EXPECT(0xc17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc17b));
        EXPECT(0xe6, gbc.readMem(0xc17c));
        EXPECT(0xde, gbc.readMem(0xffe6));
        // E0 0299
        gbc.setState(0x9946, 0x2857, 0xa830, 0xacc0, 0xef30, 0xb04e, 0x0, 0x1);
        gbc.writeMem(0x9946, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2857, gbc.sp());
        EXPECT(0x9948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9946));
        EXPECT(0xb8, gbc.readMem(0x9947));
        EXPECT(0xa8, gbc.readMem(0xffb8));
        // E0 029A
        gbc.setState(0xa0a8, 0xe7c9, 0x8160, 0x10ef, 0xdaa8, 0x78ca, 0x1, 0x1);
        gbc.writeMem(0xa0a8, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe7c9, gbc.sp());
        EXPECT(0xa0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa0a8));
        EXPECT(0xea, gbc.readMem(0xa0a9));
        EXPECT(0x81, gbc.readMem(0xffea));
        // E0 029B
        gbc.setState(0x3a4a, 0x3da9, 0xa7e0, 0x324b, 0x8c08, 0x8948, 0x0, 0x1);
        gbc.writeMem(0x3a4a, { 0xe0, 0x4 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3da9, gbc.sp());
        EXPECT(0x3a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xff04));
        // E0 029D
        gbc.setState(0xa38d, 0xc850, 0x59d0, 0xa0bf, 0xd393, 0xd31a, 0x1, 0x0);
        gbc.writeMem(0xa38d, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc850, gbc.sp());
        EXPECT(0xa38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa38d));
        EXPECT(0x27, gbc.readMem(0xa38e));
        EXPECT(0x59, gbc.readMem(0xff27));
        // E0 029E
        gbc.setState(0xefbe, 0x9cfd, 0xc7f0, 0x8a51, 0x846d, 0xdd01, 0x1, 0x1);
        gbc.writeMem(0xefbe, { 0xe0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9cfd, gbc.sp());
        EXPECT(0xefc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xefbe));
        EXPECT(0xa5, gbc.readMem(0xefbf));
        EXPECT(0xc7, gbc.readMem(0xffa5));
        // E0 029F
        gbc.setState(0x88b8, 0x9ed1, 0xd100, 0x7e6b, 0xc4dc, 0xb347, 0x0, 0x0);
        gbc.writeMem(0x88b8, { 0xe0, 0x69 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9ed1, gbc.sp());
        EXPECT(0x88ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x88b8));
        EXPECT(0x69, gbc.readMem(0x88b9));
        EXPECT(0xd1, gbc.readMem(0xff69));
        // E0 02A0
        gbc.setState(0xd136, 0x85ab, 0x4430, 0xeae5, 0xb7b, 0x51b8, 0x1, 0x1);
        gbc.writeMem(0xd136, { 0xe0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x85ab, gbc.sp());
        EXPECT(0xd138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd136));
        EXPECT(0xc9, gbc.readMem(0xd137));
        EXPECT(0x44, gbc.readMem(0xffc9));
        // E0 02A1
        gbc.setState(0x597a, 0xe382, 0x4de0, 0x56ae, 0xd566, 0x39b6, 0x1, 0x0);
        gbc.writeMem(0x597a, { 0xe0, 0x55 });
        gbc.writeMem(0xff55, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe382, gbc.sp());
        EXPECT(0x597c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xff55));
        // E0 02A2
        gbc.setState(0xb106, 0xec01, 0x7a50, 0x8aa3, 0x8e83, 0x6fa3, 0x1, 0x1);
        gbc.writeMem(0xb106, { 0xe0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xec01, gbc.sp());
        EXPECT(0xb108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb106));
        EXPECT(0xa5, gbc.readMem(0xb107));
        EXPECT(0x7a, gbc.readMem(0xffa5));
        // E0 02A3
        gbc.setState(0xa757, 0x8b35, 0x4040, 0x6cdb, 0x2f5, 0x1905, 0x0, 0x0);
        gbc.writeMem(0xa757, { 0xe0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8b35, gbc.sp());
        EXPECT(0xa759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa757));
        EXPECT(0xf9, gbc.readMem(0xa758));
        EXPECT(0x40, gbc.readMem(0xfff9));
        // E0 02A4
        gbc.setState(0xdcd4, 0xdadf, 0x8590, 0xacfd, 0xff77, 0x66b8, 0x0, 0x1);
        gbc.writeMem(0xdcd4, { 0xe0, 0x37 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdadf, gbc.sp());
        EXPECT(0xdcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdcd4));
        EXPECT(0x37, gbc.readMem(0xdcd5));
        EXPECT(0x85, gbc.readMem(0xff37));
        // E0 02A5
        gbc.setState(0xca83, 0xf91b, 0x2dc0, 0xfd54, 0xd41a, 0xaeac, 0x0, 0x1);
        gbc.writeMem(0xca83, { 0xe0, 0x22 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf91b, gbc.sp());
        EXPECT(0xca85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xca83));
        EXPECT(0x22, gbc.readMem(0xca84));
        EXPECT(0x2d, gbc.readMem(0xff22));
        // E0 02A7
        gbc.setState(0x55ef, 0xa94f, 0x630, 0x12a2, 0x23d9, 0xb557, 0x1, 0x1);
        gbc.writeMem(0x55ef, { 0xe0, 0x47 });
        gbc.writeMem(0xff47, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa94f, gbc.sp());
        EXPECT(0x55f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xff47));
        // E0 02A8
        gbc.setState(0x7364, 0xe273, 0xa2f0, 0x133d, 0x73a, 0x8c88, 0x1, 0x0);
        gbc.writeMem(0x7364, { 0xe0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe273, gbc.sp());
        EXPECT(0x7366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xffb5));
        // E0 02A9
        gbc.setState(0xc2fb, 0x390f, 0x7680, 0x54f9, 0x3647, 0x474f, 0x0, 0x0);
        gbc.writeMem(0xc2fb, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x390f, gbc.sp());
        EXPECT(0xc2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc2fb));
        EXPECT(0xb2, gbc.readMem(0xc2fc));
        EXPECT(0x76, gbc.readMem(0xffb2));
        // E0 02AA
        gbc.setState(0xcd30, 0x6da, 0x5430, 0xc961, 0x4718, 0x5410, 0x1, 0x1);
        gbc.writeMem(0xcd30, { 0xe0, 0x32 });
        gbc.writeMem(0xff32, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6da, gbc.sp());
        EXPECT(0xcd32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcd30));
        EXPECT(0x32, gbc.readMem(0xcd31));
        EXPECT(0x54, gbc.readMem(0xff32));
        // E0 02AC
        gbc.setState(0xcbe, 0x3db, 0x71a0, 0x4cb0, 0x76f5, 0xa8bb, 0x0, 0x1);
        gbc.writeMem(0xcbe, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3db, gbc.sp());
        EXPECT(0xcc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xff83));
        // E0 02AD
        gbc.setState(0xcf0c, 0x3558, 0x9d10, 0xec8d, 0x69cc, 0x516e, 0x0, 0x1);
        gbc.writeMem(0xcf0c, { 0xe0, 0x63 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3558, gbc.sp());
        EXPECT(0xcf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcf0c));
        EXPECT(0x63, gbc.readMem(0xcf0d));
        EXPECT(0x9d, gbc.readMem(0xff63));
        // E0 02AE
        gbc.setState(0x8a1b, 0xc497, 0xb1f0, 0xa40d, 0x421b, 0xb81f, 0x1, 0x0);
        gbc.writeMem(0x8a1b, { 0xe0, 0xcb });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc497, gbc.sp());
        EXPECT(0x8a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8a1b));
        EXPECT(0xcb, gbc.readMem(0x8a1c));
        EXPECT(0xb1, gbc.readMem(0xffcb));
        // E0 02AF
        gbc.setState(0xa1b2, 0x3cd4, 0x4c60, 0xa8a8, 0x6e8c, 0x6722, 0x0, 0x1);
        gbc.writeMem(0xa1b2, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3cd4, gbc.sp());
        EXPECT(0xa1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa1b2));
        EXPECT(0x8a, gbc.readMem(0xa1b3));
        EXPECT(0x4c, gbc.readMem(0xff8a));
        // E0 02B0
        gbc.setState(0x9626, 0x69fe, 0xd3c0, 0x2542, 0xa6e5, 0x4d90, 0x0, 0x0);
        gbc.writeMem(0x9626, { 0xe0, 0x7d });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x69fe, gbc.sp());
        EXPECT(0x9628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9626));
        EXPECT(0x7d, gbc.readMem(0x9627));
        EXPECT(0xd3, gbc.readMem(0xff7d));
        // E0 02B1
        gbc.setState(0xa789, 0x2454, 0x38c0, 0xc132, 0x6c30, 0xcbf3, 0x1, 0x1);
        gbc.writeMem(0xa789, { 0xe0, 0x3e });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2454, gbc.sp());
        EXPECT(0xa78b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa789));
        EXPECT(0x3e, gbc.readMem(0xa78a));
        EXPECT(0x38, gbc.readMem(0xff3e));
        // E0 02B2
        gbc.setState(0x1f91, 0x5f22, 0x4ce0, 0x992b, 0xda96, 0xed2a, 0x1, 0x0);
        gbc.writeMem(0x1f91, { 0xe0, 0xd9 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5f22, gbc.sp());
        EXPECT(0x1f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xffd9));
        // E0 02B3
        gbc.setState(0x4797, 0xc7bd, 0xd7b0, 0x3aeb, 0xca5f, 0x7e38, 0x1, 0x1);
        gbc.writeMem(0x4797, { 0xe0, 0x81 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc7bd, gbc.sp());
        EXPECT(0x4799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xff81));
        // E0 02B4
        gbc.setState(0x63d5, 0xa284, 0xd900, 0x5362, 0x6a4b, 0x468c, 0x1, 0x0);
        gbc.writeMem(0x63d5, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa284, gbc.sp());
        EXPECT(0x63d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xff3f));
        // E0 02B5
        gbc.setState(0x1d91, 0x92e1, 0xa2a0, 0x5123, 0x208, 0xe93c, 0x1, 0x1);
        gbc.writeMem(0x1d91, { 0xe0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x92e1, gbc.sp());
        EXPECT(0x1d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xffb5));
        // E0 02B6
        gbc.setState(0xacb6, 0x6978, 0xfd80, 0x4bce, 0x668e, 0x27a4, 0x1, 0x1);
        gbc.writeMem(0xacb6, { 0xe0, 0x77 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6978, gbc.sp());
        EXPECT(0xacb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xacb6));
        EXPECT(0x77, gbc.readMem(0xacb7));
        EXPECT(0xfd, gbc.readMem(0xff77));
        // E0 02B7
        gbc.setState(0x62fd, 0x880c, 0xab70, 0x5189, 0x5c1d, 0x6d12, 0x0, 0x0);
        gbc.writeMem(0x62fd, { 0xe0, 0x4f });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x880c, gbc.sp());
        EXPECT(0x62ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xff4f));
        // E0 02B8
        gbc.setState(0x6556, 0x1d5c, 0x12f0, 0x8e20, 0x256c, 0xb921, 0x0, 0x1);
        gbc.writeMem(0x6556, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1d5c, gbc.sp());
        EXPECT(0x6558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xffd0));
        // E0 02B9
        gbc.setState(0x6eb7, 0xf2c0, 0x26d0, 0x1571, 0x74b0, 0xd6f8, 0x1, 0x0);
        gbc.writeMem(0x6eb7, { 0xe0, 0xeb });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf2c0, gbc.sp());
        EXPECT(0x6eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xffeb));
        // E0 02BA
        gbc.setState(0xde6c, 0xfc61, 0xe440, 0x5f31, 0x1cc6, 0x7d3d, 0x0, 0x1);
        gbc.writeMem(0xde6c, { 0xe0, 0xdb });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfc61, gbc.sp());
        EXPECT(0xde6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xde6c));
        EXPECT(0xdb, gbc.readMem(0xde6d));
        EXPECT(0xe4, gbc.readMem(0xffdb));
        // E0 02BB
        gbc.setState(0x711, 0x793c, 0x92b0, 0x5a0d, 0x5bfc, 0xb7b9, 0x0, 0x1);
        gbc.writeMem(0x711, { 0xe0, 0x4e });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x793c, gbc.sp());
        EXPECT(0x713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xff4e));
        // E0 02BC
        gbc.setState(0xd584, 0xf747, 0x3a0, 0xd587, 0xc1fc, 0x81b4, 0x1, 0x1);
        gbc.writeMem(0xd584, { 0xe0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf747, gbc.sp());
        EXPECT(0xd586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd584));
        EXPECT(0xb5, gbc.readMem(0xd585));
        EXPECT(0x3, gbc.readMem(0xffb5));
        // E0 02BD
        gbc.setState(0xe9f9, 0xa7bc, 0x9b80, 0xa01a, 0x232a, 0x9f59, 0x0, 0x1);
        gbc.writeMem(0xe9f9, { 0xe0, 0xe0 });
        gbc.writeMem(0xffe0, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa7bc, gbc.sp());
        EXPECT(0xe9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe9f9));
        EXPECT(0xe0, gbc.readMem(0xe9fa));
        EXPECT(0x9b, gbc.readMem(0xffe0));
        // E0 02BE
        gbc.setState(0x1bef, 0x6f36, 0x4680, 0xe90f, 0x36cd, 0xdd63, 0x1, 0x1);
        gbc.writeMem(0x1bef, { 0xe0, 0x91 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6f36, gbc.sp());
        EXPECT(0x1bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xff91));
        // E0 02BF
        gbc.setState(0xb578, 0x368f, 0x2250, 0x58d8, 0xceb9, 0xc9c, 0x0, 0x1);
        gbc.writeMem(0xb578, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x368f, gbc.sp());
        EXPECT(0xb57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb578));
        EXPECT(0x76, gbc.readMem(0xb579));
        EXPECT(0x22, gbc.readMem(0xff76));
        // E0 02C0
        gbc.setState(0x1a05, 0x8a95, 0x5950, 0x37b3, 0xfca5, 0x9e48, 0x1, 0x1);
        gbc.writeMem(0x1a05, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8a95, gbc.sp());
        EXPECT(0x1a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xff3f));
        // E0 02C1
        gbc.setState(0x4114, 0xaae8, 0xde10, 0x8b3d, 0xcf6e, 0xe475, 0x1, 0x1);
        gbc.writeMem(0x4114, { 0xe0, 0xfa });
        gbc.writeMem(0xfffa, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaae8, gbc.sp());
        EXPECT(0x4116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xfffa));
        // E0 02C2
        gbc.setState(0x36e8, 0x66d1, 0x92d0, 0x8578, 0x51d2, 0x1bf1, 0x1, 0x1);
        gbc.writeMem(0x36e8, { 0xe0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x66d1, gbc.sp());
        EXPECT(0x36ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xfff9));
        // E0 02C3
        gbc.setState(0x950e, 0x71f6, 0x3960, 0x2bb2, 0xcc5, 0x4279, 0x0, 0x0);
        gbc.writeMem(0x950e, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x71f6, gbc.sp());
        EXPECT(0x9510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x950e));
        EXPECT(0xca, gbc.readMem(0x950f));
        EXPECT(0x39, gbc.readMem(0xffca));
        // E0 02C4
        gbc.setState(0x558b, 0x8734, 0xbae0, 0x9012, 0x9a53, 0xd2e8, 0x1, 0x1);
        gbc.writeMem(0x558b, { 0xe0, 0x4f });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8734, gbc.sp());
        EXPECT(0x558d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xff4f));
        // E0 02C6
        gbc.setState(0x820d, 0xa14a, 0xb720, 0x5a9e, 0x938, 0xeca6, 0x1, 0x1);
        gbc.writeMem(0x820d, { 0xe0, 0xfc });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa14a, gbc.sp());
        EXPECT(0x820f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x820d));
        EXPECT(0xfc, gbc.readMem(0x820e));
        EXPECT(0xb7, gbc.readMem(0xfffc));
        // E0 02C7
        gbc.setState(0x51ca, 0xc87b, 0x2a70, 0xe1e4, 0x7e2e, 0x2f68, 0x0, 0x0);
        gbc.writeMem(0x51ca, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc87b, gbc.sp());
        EXPECT(0x51cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xff31));
        // E0 02C8
        gbc.setState(0xdf40, 0x6ca8, 0xcc20, 0x60a, 0xddf0, 0xaeb8, 0x1, 0x0);
        gbc.writeMem(0xdf40, { 0xe0, 0x14 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6ca8, gbc.sp());
        EXPECT(0xdf42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdf40));
        EXPECT(0x14, gbc.readMem(0xdf41));
        EXPECT(0xcc, gbc.readMem(0xff14));
        // E0 02C9
        gbc.setState(0xa16e, 0xccd2, 0x70f0, 0x110b, 0xce2d, 0x2f8a, 0x0, 0x0);
        gbc.writeMem(0xa16e, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xccd2, gbc.sp());
        EXPECT(0xa170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa16e));
        EXPECT(0x7, gbc.readMem(0xa16f));
        EXPECT(0x70, gbc.readMem(0xff07));
        // E0 02CA
        gbc.setState(0x12d2, 0x8dc7, 0xa930, 0x5117, 0xffcf, 0x1e5b, 0x0, 0x0);
        gbc.writeMem(0x12d2, { 0xe0, 0x89 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8dc7, gbc.sp());
        EXPECT(0x12d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xff89));
        // E0 02CB
        gbc.setState(0xc363, 0x9e7e, 0xff70, 0x4630, 0x184f, 0x67d7, 0x1, 0x0);
        gbc.writeMem(0xc363, { 0xe0, 0x7c });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9e7e, gbc.sp());
        EXPECT(0xc365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc363));
        EXPECT(0x7c, gbc.readMem(0xc364));
        EXPECT(0xff, gbc.readMem(0xff7c));
        // E0 02CC
        gbc.setState(0x3e4, 0xf7d1, 0xa080, 0x9f4a, 0x213e, 0x5c26, 0x1, 0x1);
        gbc.writeMem(0x3e4, { 0xe0, 0x7d });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf7d1, gbc.sp());
        EXPECT(0x3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xff7d));
        // E0 02CD
        gbc.setState(0x4a02, 0x970d, 0xdc70, 0xe490, 0x1275, 0x74b2, 0x0, 0x1);
        gbc.writeMem(0x4a02, { 0xe0, 0x5b });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x970d, gbc.sp());
        EXPECT(0x4a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xff5b));
        // E0 02CE
        gbc.setState(0x2b05, 0xdd93, 0x4620, 0x7590, 0xce5d, 0x2a4f, 0x1, 0x0);
        gbc.writeMem(0x2b05, { 0xe0, 0x1 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdd93, gbc.sp());
        EXPECT(0x2b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xff01));
        // E0 02CF
        gbc.setState(0x8a2d, 0xae4c, 0x5550, 0x906b, 0xa6e1, 0xda6c, 0x0, 0x0);
        gbc.writeMem(0x8a2d, { 0xe0, 0xd3 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xae4c, gbc.sp());
        EXPECT(0x8a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8a2d));
        EXPECT(0xd3, gbc.readMem(0x8a2e));
        EXPECT(0x55, gbc.readMem(0xffd3));
        // E0 02D0
        gbc.setState(0xc4a4, 0x1e47, 0xe9e0, 0x39a9, 0xb352, 0xec9c, 0x0, 0x0);
        gbc.writeMem(0xc4a4, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1e47, gbc.sp());
        EXPECT(0xc4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc4a4));
        EXPECT(0x76, gbc.readMem(0xc4a5));
        EXPECT(0xe9, gbc.readMem(0xff76));
        // E0 02D1
        gbc.setState(0x4999, 0x751b, 0x5be0, 0x614a, 0x7f8f, 0xe27a, 0x0, 0x0);
        gbc.writeMem(0x4999, { 0xe0, 0xa0 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x751b, gbc.sp());
        EXPECT(0x499b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xffa0));
        // E0 02D2
        gbc.setState(0xe25e, 0x3e51, 0xb1f0, 0xfb0f, 0xc802, 0xfc5, 0x1, 0x0);
        gbc.writeMem(0xe25e, { 0xe0, 0xbc });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3e51, gbc.sp());
        EXPECT(0xe260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe25e));
        EXPECT(0xbc, gbc.readMem(0xe25f));
        EXPECT(0xb1, gbc.readMem(0xffbc));
        // E0 02D3
        gbc.setState(0x695d, 0xffac, 0x5340, 0xc26a, 0x6a9, 0x7c06, 0x1, 0x0);
        gbc.writeMem(0x695d, { 0xe0, 0x54 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xffac, gbc.sp());
        EXPECT(0x695f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xff54));
        // E0 02D6
        gbc.setState(0x662f, 0xb860, 0x7070, 0xca77, 0xf710, 0xd477, 0x1, 0x1);
        gbc.writeMem(0x662f, { 0xe0, 0xce });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb860, gbc.sp());
        EXPECT(0x6631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xffce));
        // E0 02D7
        gbc.setState(0x613, 0x9802, 0xa870, 0x20fd, 0xfecd, 0x50ab, 0x0, 0x1);
        gbc.writeMem(0x613, { 0xe0, 0x33 });
        gbc.writeMem(0xff33, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9802, gbc.sp());
        EXPECT(0x615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xff33));
        // E0 02D8
        gbc.setState(0xd7af, 0x9bc1, 0x15d0, 0xe748, 0xaca5, 0xb92f, 0x0, 0x1);
        gbc.writeMem(0xd7af, { 0xe0, 0x40 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9bc1, gbc.sp());
        EXPECT(0xd7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd7af));
        EXPECT(0x40, gbc.readMem(0xd7b0));
        EXPECT(0x15, gbc.readMem(0xff40));
        // E0 02D9
        gbc.setState(0x3797, 0x91c3, 0xd940, 0x8950, 0x74fd, 0x5632, 0x0, 0x1);
        gbc.writeMem(0x3797, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x91c3, gbc.sp());
        EXPECT(0x3799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xffea));
        // E0 02DA
        gbc.setState(0x918d, 0xa9a1, 0x5e00, 0x42af, 0x5d12, 0xfbd2, 0x0, 0x0);
        gbc.writeMem(0x918d, { 0xe0, 0x57 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa9a1, gbc.sp());
        EXPECT(0x918f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x918d));
        EXPECT(0x57, gbc.readMem(0x918e));
        EXPECT(0x5e, gbc.readMem(0xff57));
        // E0 02DB
        gbc.setState(0x6b13, 0x6e19, 0x8940, 0x498f, 0x1c7a, 0xd5fd, 0x1, 0x1);
        gbc.writeMem(0x6b13, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6e19, gbc.sp());
        EXPECT(0x6b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xff27));
        // E0 02DC
        gbc.setState(0x413a, 0xc247, 0x8b80, 0x79f1, 0xd5c, 0x2e1, 0x0, 0x0);
        gbc.writeMem(0x413a, { 0xe0, 0x8 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc247, gbc.sp());
        EXPECT(0x413c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xff08));
        // E0 02DD
        gbc.setState(0x1229, 0xbfd0, 0x1950, 0x1a23, 0xf858, 0xb546, 0x0, 0x0);
        gbc.writeMem(0x1229, { 0xe0, 0x26 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbfd0, gbc.sp());
        EXPECT(0x122b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xff26));
        // E0 02DE
        gbc.setState(0x9eda, 0xcab6, 0x79a0, 0x3039, 0x778d, 0xa7c0, 0x0, 0x0);
        gbc.writeMem(0x9eda, { 0xe0, 0x14 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcab6, gbc.sp());
        EXPECT(0x9edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9eda));
        EXPECT(0x14, gbc.readMem(0x9edb));
        EXPECT(0x79, gbc.readMem(0xff14));
        // E0 02DF
        gbc.setState(0xa9d3, 0xc4ef, 0xcde0, 0xdcce, 0xeaf0, 0x7441, 0x0, 0x1);
        gbc.writeMem(0xa9d3, { 0xe0, 0x69 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc4ef, gbc.sp());
        EXPECT(0xa9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa9d3));
        EXPECT(0x69, gbc.readMem(0xa9d4));
        EXPECT(0xcd, gbc.readMem(0xff69));
        // E0 02E0
        gbc.setState(0x29ec, 0x9d21, 0xeb90, 0x6141, 0x3024, 0xebd3, 0x0, 0x0);
        gbc.writeMem(0x29ec, { 0xe0, 0x90 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9d21, gbc.sp());
        EXPECT(0x29ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xff90));
        // E0 02E1
        gbc.setState(0x5b76, 0xab27, 0x83c0, 0x2f9a, 0x9a1c, 0x8555, 0x0, 0x1);
        gbc.writeMem(0x5b76, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xab27, gbc.sp());
        EXPECT(0x5b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xff23));
        // E0 02E2
        gbc.setState(0x5df4, 0x3345, 0xedd0, 0x6a8c, 0x4a02, 0x809f, 0x1, 0x1);
        gbc.writeMem(0x5df4, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3345, gbc.sp());
        EXPECT(0x5df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xff9a));
        // E0 02E3
        gbc.setState(0xe7d5, 0x291a, 0x23e0, 0xbce5, 0x5713, 0xb3f, 0x1, 0x1);
        gbc.writeMem(0xe7d5, { 0xe0, 0x61 });
        gbc.writeMem(0xff61, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x291a, gbc.sp());
        EXPECT(0xe7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe7d5));
        EXPECT(0x61, gbc.readMem(0xe7d6));
        EXPECT(0x23, gbc.readMem(0xff61));
        // E0 02E4
        gbc.setState(0xa576, 0xd100, 0xf3f0, 0xd526, 0x9972, 0x2fbf, 0x1, 0x0);
        gbc.writeMem(0xa576, { 0xe0, 0xfb });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd100, gbc.sp());
        EXPECT(0xa578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa576));
        EXPECT(0xfb, gbc.readMem(0xa577));
        EXPECT(0xf3, gbc.readMem(0xfffb));
        // E0 02E5
        gbc.setState(0x41aa, 0xa58c, 0x33c0, 0x5e3c, 0xf5ef, 0xe19d, 0x0, 0x1);
        gbc.writeMem(0x41aa, { 0xe0, 0x6c });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa58c, gbc.sp());
        EXPECT(0x41ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xff6c));
        // E0 02E6
        gbc.setState(0x21bb, 0x6dbd, 0xead0, 0x858, 0x1603, 0x2675, 0x0, 0x0);
        gbc.writeMem(0x21bb, { 0xe0, 0xe2 });
        gbc.writeMem(0xffe2, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6dbd, gbc.sp());
        EXPECT(0x21bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xffe2));
        // E0 02E8
        gbc.setState(0xd3, 0xdb3e, 0x30c0, 0x5890, 0xf203, 0x8005, 0x1, 0x0);
        gbc.writeMem(0xd3, { 0xe0, 0xda });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdb3e, gbc.sp());
        EXPECT(0xd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xffda));
        // E0 02E9
        gbc.setState(0x3daa, 0xe9da, 0xccc0, 0x3f7a, 0x5510, 0xaaff, 0x1, 0x0);
        gbc.writeMem(0x3daa, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe9da, gbc.sp());
        EXPECT(0x3dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xff35));
        // E0 02EA
        gbc.setState(0x747c, 0x816b, 0xfe20, 0x5645, 0x66ae, 0x73d, 0x0, 0x0);
        gbc.writeMem(0x747c, { 0xe0, 0x93 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x816b, gbc.sp());
        EXPECT(0x747e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xff93));
        // E0 02EC
        gbc.setState(0xd9fb, 0xc51b, 0x5e10, 0x6f8e, 0x19be, 0xb655, 0x1, 0x0);
        gbc.writeMem(0xd9fb, { 0xe0, 0x54 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc51b, gbc.sp());
        EXPECT(0xd9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd9fb));
        EXPECT(0x54, gbc.readMem(0xd9fc));
        EXPECT(0x5e, gbc.readMem(0xff54));
        // E0 02ED
        gbc.setState(0x3278, 0x200f, 0x2fa0, 0x7305, 0x4bb0, 0x9f86, 0x1, 0x1);
        gbc.writeMem(0x3278, { 0xe0, 0x40 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x200f, gbc.sp());
        EXPECT(0x327a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xff40));
        // E0 02EE
        gbc.setState(0xb5f5, 0xc617, 0x51f0, 0xe5d3, 0x36c8, 0xf689, 0x1, 0x0);
        gbc.writeMem(0xb5f5, { 0xe0, 0xd5 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc617, gbc.sp());
        EXPECT(0xb5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb5f5));
        EXPECT(0xd5, gbc.readMem(0xb5f6));
        EXPECT(0x51, gbc.readMem(0xffd5));
        // E0 02EF
        gbc.setState(0x8c7a, 0xc0b4, 0xc2a0, 0x7f81, 0x7765, 0x8783, 0x1, 0x1);
        gbc.writeMem(0x8c7a, { 0xe0, 0x70 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc0b4, gbc.sp());
        EXPECT(0x8c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8c7a));
        EXPECT(0x70, gbc.readMem(0x8c7b));
        EXPECT(0xc2, gbc.readMem(0xff70));
        // E0 02F0
        gbc.setState(0x5034, 0x182b, 0x7440, 0x5627, 0x5816, 0xe7a7, 0x1, 0x1);
        gbc.writeMem(0x5034, { 0xe0, 0xd3 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x182b, gbc.sp());
        EXPECT(0x5036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xffd3));
        // E0 02F1
        gbc.setState(0xc448, 0xd712, 0xf360, 0x18f1, 0x9611, 0x1117, 0x1, 0x1);
        gbc.writeMem(0xc448, { 0xe0, 0xcc });
        gbc.writeMem(0xffcc, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd712, gbc.sp());
        EXPECT(0xc44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc448));
        EXPECT(0xcc, gbc.readMem(0xc449));
        EXPECT(0xf3, gbc.readMem(0xffcc));
        // E0 02F2
        gbc.setState(0xa5a4, 0x1ae, 0x8560, 0x5f98, 0xe57a, 0xa3fb, 0x1, 0x1);
        gbc.writeMem(0xa5a4, { 0xe0, 0x73 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1ae, gbc.sp());
        EXPECT(0xa5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa5a4));
        EXPECT(0x73, gbc.readMem(0xa5a5));
        EXPECT(0x85, gbc.readMem(0xff73));
        // E0 02F3
        gbc.setState(0x5587, 0xd7b5, 0x74a0, 0x4c5e, 0xb674, 0xc6fc, 0x1, 0x0);
        gbc.writeMem(0x5587, { 0xe0, 0xfd });
        gbc.writeMem(0xfffd, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd7b5, gbc.sp());
        EXPECT(0x5589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xfffd));
        // E0 02F4
        gbc.setState(0xeb41, 0x9787, 0xfd80, 0xd22c, 0x2eee, 0xc7e6, 0x0, 0x1);
        gbc.writeMem(0xeb41, { 0xe0, 0xf8 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9787, gbc.sp());
        EXPECT(0xeb43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xeb41));
        EXPECT(0xf8, gbc.readMem(0xeb42));
        EXPECT(0xfd, gbc.readMem(0xfff8));
        // E0 02F5
        gbc.setState(0xc5aa, 0x5131, 0x8b30, 0xa674, 0x16a7, 0xf01f, 0x0, 0x0);
        gbc.writeMem(0xc5aa, { 0xe0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5131, gbc.sp());
        EXPECT(0xc5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc5aa));
        EXPECT(0xc6, gbc.readMem(0xc5ab));
        EXPECT(0x8b, gbc.readMem(0xffc6));
        // E0 02F6
        gbc.setState(0x9bb, 0xd232, 0xa120, 0x8f15, 0x8004, 0x44ce, 0x0, 0x0);
        gbc.writeMem(0x9bb, { 0xe0, 0x90 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd232, gbc.sp());
        EXPECT(0x9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xff90));
        // E0 02F7
        gbc.setState(0x9e90, 0xb3f3, 0x3c40, 0xc8fe, 0x8abd, 0xb3b0, 0x1, 0x0);
        gbc.writeMem(0x9e90, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb3f3, gbc.sp());
        EXPECT(0x9e92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9e90));
        EXPECT(0x31, gbc.readMem(0x9e91));
        EXPECT(0x3c, gbc.readMem(0xff31));
        // E0 02F8
        gbc.setState(0x63b6, 0x7408, 0xf2c0, 0xdc66, 0x9341, 0xb1bf, 0x1, 0x1);
        gbc.writeMem(0x63b6, { 0xe0, 0x38 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7408, gbc.sp());
        EXPECT(0x63b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xff38));
        // E0 02F9
        gbc.setState(0x5e67, 0x9e04, 0x58c0, 0xc05d, 0x6718, 0xe396, 0x0, 0x0);
        gbc.writeMem(0x5e67, { 0xe0, 0xe7 });
        gbc.writeMem(0xffe7, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9e04, gbc.sp());
        EXPECT(0x5e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xffe7));
        // E0 02FA
        gbc.setState(0xe865, 0xc9d8, 0x2fc0, 0x9361, 0x932c, 0xf391, 0x0, 0x1);
        gbc.writeMem(0xe865, { 0xe0, 0x2b });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc9d8, gbc.sp());
        EXPECT(0xe867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe865));
        EXPECT(0x2b, gbc.readMem(0xe866));
        EXPECT(0x2f, gbc.readMem(0xff2b));
        // E0 02FB
        gbc.setState(0x43a2, 0x4cc6, 0x1890, 0xd0bd, 0xfec5, 0x880b, 0x1, 0x1);
        gbc.writeMem(0x43a2, { 0xe0, 0x69 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4cc6, gbc.sp());
        EXPECT(0x43a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xff69));
        // E0 02FC
        gbc.setState(0x7796, 0xcb82, 0x7230, 0xba2e, 0x3fff, 0xa661, 0x0, 0x0);
        gbc.writeMem(0x7796, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcb82, gbc.sp());
        EXPECT(0x7798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xff31));
        // E0 02FD
        gbc.setState(0x38e3, 0xd983, 0xd920, 0x98, 0xc644, 0xb582, 0x1, 0x1);
        gbc.writeMem(0x38e3, { 0xe0, 0x1b });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd983, gbc.sp());
        EXPECT(0x38e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xff1b));
        // E0 02FE
        gbc.setState(0x521c, 0x3206, 0x8bf0, 0x226b, 0x100f, 0x22a5, 0x1, 0x1);
        gbc.writeMem(0x521c, { 0xe0, 0xc });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3206, gbc.sp());
        EXPECT(0x521e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xff0c));
        // E0 02FF
        gbc.setState(0x42cc, 0x45c2, 0xb960, 0x82bf, 0x3edc, 0x23ff, 0x1, 0x0);
        gbc.writeMem(0x42cc, { 0xe0, 0x8c });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x45c2, gbc.sp());
        EXPECT(0x42ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xff8c));
        // E0 0300
        gbc.setState(0x109f, 0xf8e0, 0xbbd0, 0x6b5b, 0xed12, 0x3231, 0x0, 0x0);
        gbc.writeMem(0x109f, { 0xe0, 0x7c });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf8e0, gbc.sp());
        EXPECT(0x10a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xff7c));
        // E0 0301
        gbc.setState(0xe695, 0xbf02, 0x91d0, 0x875a, 0x2b39, 0xdcfb, 0x0, 0x1);
        gbc.writeMem(0xe695, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbf02, gbc.sp());
        EXPECT(0xe697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe695));
        EXPECT(0x76, gbc.readMem(0xe696));
        EXPECT(0x91, gbc.readMem(0xff76));
        // E0 0302
        gbc.setState(0xd87b, 0x7946, 0x6560, 0x9ea0, 0x28ee, 0x31ab, 0x0, 0x0);
        gbc.writeMem(0xd87b, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7946, gbc.sp());
        EXPECT(0xd87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd87b));
        EXPECT(0x52, gbc.readMem(0xd87c));
        EXPECT(0x65, gbc.readMem(0xff52));
        // E0 0303
        gbc.setState(0xc0a5, 0x44d8, 0xb840, 0x2424, 0x1854, 0xe09e, 0x1, 0x1);
        gbc.writeMem(0xc0a5, { 0xe0, 0x69 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x44d8, gbc.sp());
        EXPECT(0xc0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc0a5));
        EXPECT(0x69, gbc.readMem(0xc0a6));
        EXPECT(0xb8, gbc.readMem(0xff69));
        // E0 0304
        gbc.setState(0x446e, 0x1798, 0x87f0, 0x49ae, 0x8395, 0x5e1f, 0x1, 0x0);
        gbc.writeMem(0x446e, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1798, gbc.sp());
        EXPECT(0x4470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xff80));
        // E0 0305
        gbc.setState(0x6133, 0x98b8, 0x240, 0x1b0c, 0xb3e5, 0x535, 0x1, 0x1);
        gbc.writeMem(0x6133, { 0xe0, 0x4b });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x98b8, gbc.sp());
        EXPECT(0x6135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xff4b));
        // E0 0306
        gbc.setState(0x73f1, 0xe18f, 0x3050, 0xd7fa, 0xc74d, 0xe9eb, 0x0, 0x1);
        gbc.writeMem(0x73f1, { 0xe0, 0x74 });
        gbc.writeMem(0xff74, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe18f, gbc.sp());
        EXPECT(0x73f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xff74));
        // E0 0307
        gbc.setState(0xed5c, 0xf1da, 0x2d40, 0xb336, 0xb535, 0x2ed6, 0x1, 0x0);
        gbc.writeMem(0xed5c, { 0xe0, 0xc3 });
        gbc.writeMem(0xffc3, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf1da, gbc.sp());
        EXPECT(0xed5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xed5c));
        EXPECT(0xc3, gbc.readMem(0xed5d));
        EXPECT(0x2d, gbc.readMem(0xffc3));
        // E0 0308
        gbc.setState(0x4b71, 0x9bed, 0xdaa0, 0xeccd, 0xd340, 0x27e8, 0x1, 0x0);
        gbc.writeMem(0x4b71, { 0xe0, 0x18 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9bed, gbc.sp());
        EXPECT(0x4b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xff18));
        // E0 0309
        gbc.setState(0xa698, 0xe827, 0x9a20, 0xa4d9, 0x282e, 0x6f9a, 0x0, 0x1);
        gbc.writeMem(0xa698, { 0xe0, 0xbb });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe827, gbc.sp());
        EXPECT(0xa69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa698));
        EXPECT(0xbb, gbc.readMem(0xa699));
        EXPECT(0x9a, gbc.readMem(0xffbb));
        // E0 030A
        gbc.setState(0xb909, 0xf170, 0x45c0, 0x9fa4, 0x59a3, 0xee1, 0x1, 0x1);
        gbc.writeMem(0xb909, { 0xe0, 0x5 });
        gbc.writeMem(0xff05, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf170, gbc.sp());
        EXPECT(0xb90b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb909));
        EXPECT(0x5, gbc.readMem(0xb90a));
        EXPECT(0x45, gbc.readMem(0xff05));
        // E0 030B
        gbc.setState(0x87d6, 0x717a, 0x8d40, 0xc8c1, 0xeeb3, 0x3920, 0x0, 0x0);
        gbc.writeMem(0x87d6, { 0xe0, 0x4a });
        gbc.writeMem(0xff4a, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x717a, gbc.sp());
        EXPECT(0x87d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x87d6));
        EXPECT(0x4a, gbc.readMem(0x87d7));
        EXPECT(0x8d, gbc.readMem(0xff4a));
        // E0 030C
        gbc.setState(0x65ed, 0x6e71, 0xcf00, 0xfd23, 0xd73e, 0x605a, 0x1, 0x0);
        gbc.writeMem(0x65ed, { 0xe0, 0x6f });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6e71, gbc.sp());
        EXPECT(0x65ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xff6f));
        // E0 030D
        gbc.setState(0xf6f, 0xa47d, 0x6420, 0x7109, 0xae7c, 0xd2dd, 0x1, 0x1);
        gbc.writeMem(0xf6f, { 0xe0, 0xc });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa47d, gbc.sp());
        EXPECT(0xf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xff0c));
        // E0 030E
        gbc.setState(0x7cfa, 0x302c, 0x5320, 0x5211, 0x8cb4, 0xc968, 0x1, 0x0);
        gbc.writeMem(0x7cfa, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x302c, gbc.sp());
        EXPECT(0x7cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xff07));
        // E0 030F
        gbc.setState(0xcf56, 0x2498, 0x9810, 0x3fec, 0xf51e, 0x4b5d, 0x1, 0x0);
        gbc.writeMem(0xcf56, { 0xe0, 0x85 });
        gbc.writeMem(0xff85, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2498, gbc.sp());
        EXPECT(0xcf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcf56));
        EXPECT(0x85, gbc.readMem(0xcf57));
        EXPECT(0x98, gbc.readMem(0xff85));
        // E0 0310
        gbc.setState(0x9690, 0xc680, 0xcf30, 0x665e, 0x142e, 0xf962, 0x0, 0x1);
        gbc.writeMem(0x9690, { 0xe0, 0x8d });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc680, gbc.sp());
        EXPECT(0x9692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9690));
        EXPECT(0x8d, gbc.readMem(0x9691));
        EXPECT(0xcf, gbc.readMem(0xff8d));
        // E0 0311
        gbc.setState(0x2d0, 0xec4, 0x6cf0, 0x4569, 0xc977, 0x547e, 0x1, 0x1);
        gbc.writeMem(0x2d0, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xec4, gbc.sp());
        EXPECT(0x2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xffaf));
        // E0 0312
        gbc.setState(0x8aee, 0x7fea, 0x9ee0, 0xfff7, 0xa1a5, 0x8129, 0x1, 0x1);
        gbc.writeMem(0x8aee, { 0xe0, 0xe3 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7fea, gbc.sp());
        EXPECT(0x8af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8aee));
        EXPECT(0xe3, gbc.readMem(0x8aef));
        EXPECT(0x9e, gbc.readMem(0xffe3));
        // E0 0313
        gbc.setState(0xe4f3, 0x3da6, 0x2320, 0xf7ec, 0xc437, 0x17a7, 0x1, 0x0);
        gbc.writeMem(0xe4f3, { 0xe0, 0x1f });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3da6, gbc.sp());
        EXPECT(0xe4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe4f3));
        EXPECT(0x1f, gbc.readMem(0xe4f4));
        EXPECT(0x23, gbc.readMem(0xff1f));
        // E0 0314
        gbc.setState(0xef6c, 0x972a, 0x73d0, 0x177f, 0x6553, 0xe7bf, 0x0, 0x1);
        gbc.writeMem(0xef6c, { 0xe0, 0x71 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x972a, gbc.sp());
        EXPECT(0xef6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xef6c));
        EXPECT(0x71, gbc.readMem(0xef6d));
        EXPECT(0x73, gbc.readMem(0xff71));
        // E0 0315
        gbc.setState(0x77c0, 0x28c3, 0xa90, 0xf86b, 0x816a, 0x9f4b, 0x1, 0x0);
        gbc.writeMem(0x77c0, { 0xe0, 0x97 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x28c3, gbc.sp());
        EXPECT(0x77c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xff97));
        // E0 0316
        gbc.setState(0xe7a3, 0x8a44, 0xb540, 0x3020, 0x8d8f, 0xd580, 0x1, 0x1);
        gbc.writeMem(0xe7a3, { 0xe0, 0x2e });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8a44, gbc.sp());
        EXPECT(0xe7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe7a3));
        EXPECT(0x2e, gbc.readMem(0xe7a4));
        EXPECT(0xb5, gbc.readMem(0xff2e));
        // E0 0317
        gbc.setState(0xa770, 0xc927, 0xb530, 0x8f68, 0x32c1, 0x5dd9, 0x0, 0x0);
        gbc.writeMem(0xa770, { 0xe0, 0xfc });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc927, gbc.sp());
        EXPECT(0xa772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa770));
        EXPECT(0xfc, gbc.readMem(0xa771));
        EXPECT(0xb5, gbc.readMem(0xfffc));
        // E0 0318
        gbc.setState(0xa0b0, 0xf2ad, 0x14e0, 0xaef2, 0xae30, 0x9d60, 0x0, 0x1);
        gbc.writeMem(0xa0b0, { 0xe0, 0x8a });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf2ad, gbc.sp());
        EXPECT(0xa0b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa0b0));
        EXPECT(0x8a, gbc.readMem(0xa0b1));
        EXPECT(0x14, gbc.readMem(0xff8a));
        // E0 0319
        gbc.setState(0xdb7a, 0x4eee, 0x280, 0xb63e, 0x2d57, 0x7970, 0x1, 0x0);
        gbc.writeMem(0xdb7a, { 0xe0, 0xe0 });
        gbc.writeMem(0xffe0, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4eee, gbc.sp());
        EXPECT(0xdb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdb7a));
        EXPECT(0xe0, gbc.readMem(0xdb7b));
        EXPECT(0x2, gbc.readMem(0xffe0));
        // E0 031A
        gbc.setState(0xe5a, 0xd451, 0xa690, 0x2aa9, 0x62f2, 0x9780, 0x0, 0x0);
        gbc.writeMem(0xe5a, { 0xe0, 0x1b });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd451, gbc.sp());
        EXPECT(0xe5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xff1b));
        // E0 031B
        gbc.setState(0x1d5a, 0xd18e, 0x5990, 0xbfc5, 0xe6db, 0x5a0f, 0x1, 0x0);
        gbc.writeMem(0x1d5a, { 0xe0, 0x15 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd18e, gbc.sp());
        EXPECT(0x1d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xff15));
        // E0 031C
        gbc.setState(0x7df7, 0xd2d5, 0x32f0, 0xbaa, 0x9416, 0x6df2, 0x0, 0x0);
        gbc.writeMem(0x7df7, { 0xe0, 0x53 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd2d5, gbc.sp());
        EXPECT(0x7df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xff53));
        // E0 031D
        gbc.setState(0xa4b1, 0x70b4, 0x40c0, 0xef5, 0x43ef, 0x3b1c, 0x1, 0x1);
        gbc.writeMem(0xa4b1, { 0xe0, 0x22 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x70b4, gbc.sp());
        EXPECT(0xa4b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa4b1));
        EXPECT(0x22, gbc.readMem(0xa4b2));
        EXPECT(0x40, gbc.readMem(0xff22));
        // E0 031E
        gbc.setState(0x3fed, 0x90e8, 0xaf50, 0x3c, 0x355f, 0x888d, 0x1, 0x1);
        gbc.writeMem(0x3fed, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x90e8, gbc.sp());
        EXPECT(0x3fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xffc0));
        // E0 031F
        gbc.setState(0xce66, 0xe628, 0xf280, 0x8759, 0x30c6, 0x7a12, 0x1, 0x1);
        gbc.writeMem(0xce66, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe628, gbc.sp());
        EXPECT(0xce68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xce66));
        EXPECT(0xad, gbc.readMem(0xce67));
        EXPECT(0xf2, gbc.readMem(0xffad));
        // E0 0320
        gbc.setState(0x5d37, 0x147, 0xb6f0, 0x19e8, 0x628d, 0x41d2, 0x0, 0x0);
        gbc.writeMem(0x5d37, { 0xe0, 0xde });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x147, gbc.sp());
        EXPECT(0x5d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xffde));
        // E0 0321
        gbc.setState(0x7972, 0x3b22, 0xfd70, 0x9767, 0x4e9d, 0x7ecf, 0x1, 0x1);
        gbc.writeMem(0x7972, { 0xe0, 0xa1 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3b22, gbc.sp());
        EXPECT(0x7974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xffa1));
        // E0 0322
        gbc.setState(0xd073, 0xfbc7, 0xce90, 0x65, 0xaa28, 0xb952, 0x0, 0x0);
        gbc.writeMem(0xd073, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfbc7, gbc.sp());
        EXPECT(0xd075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd073));
        EXPECT(0x9e, gbc.readMem(0xd074));
        EXPECT(0xce, gbc.readMem(0xff9e));
        // E0 0324
        gbc.setState(0x76c4, 0xe5f7, 0xcde0, 0x138d, 0xa169, 0xdc0, 0x1, 0x0);
        gbc.writeMem(0x76c4, { 0xe0, 0xd6 });
        gbc.writeMem(0xffd6, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe5f7, gbc.sp());
        EXPECT(0x76c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xffd6));
        // E0 0325
        gbc.setState(0x867c, 0xb452, 0xb070, 0xa5cc, 0x7272, 0xc612, 0x1, 0x0);
        gbc.writeMem(0x867c, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb452, gbc.sp());
        EXPECT(0x867e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x867c));
        EXPECT(0x9a, gbc.readMem(0x867d));
        EXPECT(0xb0, gbc.readMem(0xff9a));
        // E0 0326
        gbc.setState(0x47d3, 0x4315, 0x1510, 0x4389, 0xc2c7, 0x4cd6, 0x1, 0x1);
        gbc.writeMem(0x47d3, { 0xe0, 0xc1 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4315, gbc.sp());
        EXPECT(0x47d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xffc1));
        // E0 0327
        gbc.setState(0x6c3, 0x9c13, 0xf140, 0xb9a8, 0x150f, 0x2327, 0x0, 0x1);
        gbc.writeMem(0x6c3, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9c13, gbc.sp());
        EXPECT(0x6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xffb8));
        // E0 0328
        gbc.setState(0x5f51, 0x44c8, 0x2e70, 0x7d3, 0x6f8e, 0xa918, 0x1, 0x1);
        gbc.writeMem(0x5f51, { 0xe0, 0xbb });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x44c8, gbc.sp());
        EXPECT(0x5f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xffbb));
        // E0 0329
        gbc.setState(0x70e6, 0x5ef1, 0x2160, 0xf7fe, 0xb39c, 0x8d33, 0x0, 0x0);
        gbc.writeMem(0x70e6, { 0xe0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5ef1, gbc.sp());
        EXPECT(0x70e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xffb2));
        // E0 032A
        gbc.setState(0x9912, 0xf7ca, 0xe710, 0xfaf0, 0xe046, 0xc037, 0x0, 0x1);
        gbc.writeMem(0x9912, { 0xe0, 0x21 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf7ca, gbc.sp());
        EXPECT(0x9914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9912));
        EXPECT(0x21, gbc.readMem(0x9913));
        EXPECT(0xe7, gbc.readMem(0xff21));
        // E0 032B
        gbc.setState(0x9b24, 0x84d9, 0xa1d0, 0x22f3, 0x8396, 0x4e34, 0x1, 0x1);
        gbc.writeMem(0x9b24, { 0xe0, 0x7f });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x84d9, gbc.sp());
        EXPECT(0x9b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9b24));
        EXPECT(0x7f, gbc.readMem(0x9b25));
        EXPECT(0xa1, gbc.readMem(0xff7f));
        // E0 032C
        gbc.setState(0x20c6, 0xd35c, 0xd2a0, 0x25df, 0xa6db, 0x302b, 0x1, 0x0);
        gbc.writeMem(0x20c6, { 0xe0, 0x21 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd35c, gbc.sp());
        EXPECT(0x20c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xff21));
        // E0 032D
        gbc.setState(0x3ce, 0x7928, 0x2cc0, 0xec51, 0xde55, 0x1b2c, 0x1, 0x0);
        gbc.writeMem(0x3ce, { 0xe0, 0x45 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7928, gbc.sp());
        EXPECT(0x3d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xff45));
        // E0 032E
        gbc.setState(0x3501, 0xdc70, 0xa8f0, 0xbcba, 0xe7f, 0xbec8, 0x0, 0x1);
        gbc.writeMem(0x3501, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdc70, gbc.sp());
        EXPECT(0x3503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xff03));
        // E0 032F
        gbc.setState(0xb2a5, 0xe52e, 0x3bb0, 0x447, 0xc87a, 0x2aab, 0x1, 0x1);
        gbc.writeMem(0xb2a5, { 0xe0, 0x62 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe52e, gbc.sp());
        EXPECT(0xb2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb2a5));
        EXPECT(0x62, gbc.readMem(0xb2a6));
        EXPECT(0x3b, gbc.readMem(0xff62));
        // E0 0330
        gbc.setState(0xae8c, 0x25bc, 0xf70, 0xd349, 0x176a, 0x11e4, 0x0, 0x1);
        gbc.writeMem(0xae8c, { 0xe0, 0xaa });
        gbc.writeMem(0xffaa, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x25bc, gbc.sp());
        EXPECT(0xae8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xae8c));
        EXPECT(0xaa, gbc.readMem(0xae8d));
        EXPECT(0xf, gbc.readMem(0xffaa));
        // E0 0331
        gbc.setState(0x9807, 0x8faa, 0x1ac0, 0xf573, 0x6727, 0x6f03, 0x0, 0x1);
        gbc.writeMem(0x9807, { 0xe0, 0x46 });
        gbc.writeMem(0xff46, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8faa, gbc.sp());
        EXPECT(0x9809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9807));
        EXPECT(0x46, gbc.readMem(0x9808));
        EXPECT(0x1a, gbc.readMem(0xff46));
        // E0 0332
        gbc.setState(0x547b, 0xdd97, 0xa970, 0xe888, 0x7c02, 0x9bfa, 0x1, 0x0);
        gbc.writeMem(0x547b, { 0xe0, 0x76 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdd97, gbc.sp());
        EXPECT(0x547d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xff76));
        // E0 0333
        gbc.setState(0xe791, 0x12ee, 0xad60, 0x1720, 0x91e9, 0x450, 0x1, 0x0);
        gbc.writeMem(0xe791, { 0xe0, 0x73 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x12ee, gbc.sp());
        EXPECT(0xe793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe791));
        EXPECT(0x73, gbc.readMem(0xe792));
        EXPECT(0xad, gbc.readMem(0xff73));
        // E0 0334
        gbc.setState(0x57c7, 0xe4e2, 0xc980, 0xc192, 0xc1a5, 0x1527, 0x1, 0x1);
        gbc.writeMem(0x57c7, { 0xe0, 0xa1 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe4e2, gbc.sp());
        EXPECT(0x57c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xffa1));
        // E0 0336
        gbc.setState(0x350c, 0x8680, 0xa3b0, 0x4708, 0xf04d, 0xed3b, 0x0, 0x1);
        gbc.writeMem(0x350c, { 0xe0, 0x1e });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8680, gbc.sp());
        EXPECT(0x350e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xff1e));
        // E0 0337
        gbc.setState(0x7abc, 0x6ed9, 0x210, 0xaebe, 0xc49d, 0xc24, 0x1, 0x1);
        gbc.writeMem(0x7abc, { 0xe0, 0xa0 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6ed9, gbc.sp());
        EXPECT(0x7abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xffa0));
        // E0 0338
        gbc.setState(0x90d3, 0x68ea, 0xc550, 0xe580, 0xbb83, 0x2e8a, 0x0, 0x0);
        gbc.writeMem(0x90d3, { 0xe0, 0x58 });
        gbc.writeMem(0xff58, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x68ea, gbc.sp());
        EXPECT(0x90d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x90d3));
        EXPECT(0x58, gbc.readMem(0x90d4));
        EXPECT(0xc5, gbc.readMem(0xff58));
        // E0 0339
        gbc.setState(0xa328, 0xf3f4, 0x3040, 0x9a2c, 0x5eae, 0xa352, 0x0, 0x1);
        gbc.writeMem(0xa328, { 0xe0, 0xa6 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf3f4, gbc.sp());
        EXPECT(0xa32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa328));
        EXPECT(0xa6, gbc.readMem(0xa329));
        EXPECT(0x30, gbc.readMem(0xffa6));
        // E0 033A
        gbc.setState(0xe0cd, 0x10dc, 0xf420, 0xffea, 0x42ce, 0x485a, 0x0, 0x0);
        gbc.writeMem(0xe0cd, { 0xe0, 0x7c });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x10dc, gbc.sp());
        EXPECT(0xe0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe0cd));
        EXPECT(0x7c, gbc.readMem(0xe0ce));
        EXPECT(0xf4, gbc.readMem(0xff7c));
        // E0 033B
        gbc.setState(0xe21, 0xade7, 0x8a70, 0xbe3d, 0xe492, 0x1422, 0x1, 0x0);
        gbc.writeMem(0xe21, { 0xe0, 0x37 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xade7, gbc.sp());
        EXPECT(0xe23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xff37));
        // E0 033C
        gbc.setState(0x43cf, 0xc3af, 0xe740, 0x46c9, 0x7470, 0x76e4, 0x0, 0x0);
        gbc.writeMem(0x43cf, { 0xe0, 0x18 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc3af, gbc.sp());
        EXPECT(0x43d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xff18));
        // E0 033D
        gbc.setState(0x2372, 0xc329, 0x2a0, 0xe33f, 0x6a74, 0x79bb, 0x0, 0x0);
        gbc.writeMem(0x2372, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc329, gbc.sp());
        EXPECT(0x2374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xff9f));
        // E0 033E
        gbc.setState(0x5f9f, 0xc83f, 0xc1a0, 0x7d32, 0xf776, 0x4ce1, 0x1, 0x0);
        gbc.writeMem(0x5f9f, { 0xe0, 0xea });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc83f, gbc.sp());
        EXPECT(0x5fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xffea));
        // E0 033F
        gbc.setState(0x6726, 0xaf61, 0x4180, 0x6853, 0xf508, 0xd577, 0x0, 0x1);
        gbc.writeMem(0x6726, { 0xe0, 0x4c });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xaf61, gbc.sp());
        EXPECT(0x6728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xff4c));
        // E0 0340
        gbc.setState(0x9673, 0xe755, 0x590, 0x32e9, 0xb330, 0x2005, 0x0, 0x1);
        gbc.writeMem(0x9673, { 0xe0, 0xce });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe755, gbc.sp());
        EXPECT(0x9675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9673));
        EXPECT(0xce, gbc.readMem(0x9674));
        EXPECT(0x5, gbc.readMem(0xffce));
        // E0 0341
        gbc.setState(0x1b1e, 0x4977, 0xd780, 0x1c8a, 0x2a28, 0xecb7, 0x1, 0x1);
        gbc.writeMem(0x1b1e, { 0xe0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4977, gbc.sp());
        EXPECT(0x1b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xfff7));
        // E0 0343
        gbc.setState(0x168d, 0x50d6, 0x9f10, 0x7100, 0x2b57, 0x22ba, 0x1, 0x0);
        gbc.writeMem(0x168d, { 0xe0, 0x0 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x50d6, gbc.sp());
        EXPECT(0x168f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xff00));
        // E0 0344
        gbc.setState(0x24fa, 0xdfec, 0x16c0, 0x7ce7, 0xbf2b, 0xd84b, 0x0, 0x1);
        gbc.writeMem(0x24fa, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdfec, gbc.sp());
        EXPECT(0x24fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xff0e));
        // E0 0345
        gbc.setState(0xe11e, 0xfeef, 0x7fd0, 0x934a, 0x57a, 0x602a, 0x0, 0x1);
        gbc.writeMem(0xe11e, { 0xe0, 0x3c });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfeef, gbc.sp());
        EXPECT(0xe120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe11e));
        EXPECT(0x3c, gbc.readMem(0xe11f));
        EXPECT(0x7f, gbc.readMem(0xff3c));
        // E0 0346
        gbc.setState(0x595f, 0x65d2, 0x1070, 0xf6e8, 0x8526, 0x39fe, 0x0, 0x1);
        gbc.writeMem(0x595f, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x65d2, gbc.sp());
        EXPECT(0x5961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xff27));
        // E0 0347
        gbc.setState(0x9e4f, 0x7c, 0x64b0, 0x1b8c, 0x1d15, 0xd5f, 0x0, 0x0);
        gbc.writeMem(0x9e4f, { 0xe0, 0xb9 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7c, gbc.sp());
        EXPECT(0x9e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9e4f));
        EXPECT(0xb9, gbc.readMem(0x9e50));
        EXPECT(0x64, gbc.readMem(0xffb9));
        // E0 0349
        gbc.setState(0x2ee5, 0xefcd, 0xd0c0, 0x3dd4, 0x93b2, 0x50a, 0x0, 0x1);
        gbc.writeMem(0x2ee5, { 0xe0, 0xff });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xefcd, gbc.sp());
        EXPECT(0x2ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xffff));
        // E0 034A
        gbc.setState(0x1d8c, 0xbb7b, 0xcf20, 0x6130, 0xb4bd, 0xae25, 0x0, 0x0);
        gbc.writeMem(0x1d8c, { 0xe0, 0xaf });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbb7b, gbc.sp());
        EXPECT(0x1d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xffaf));
        // E0 034B
        gbc.setState(0x214, 0x8e32, 0x1a10, 0xee77, 0x50da, 0x5259, 0x1, 0x0);
        gbc.writeMem(0x214, { 0xe0, 0xbe });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8e32, gbc.sp());
        EXPECT(0x216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xffbe));
        // E0 034C
        gbc.setState(0x7ccb, 0x750a, 0xfec0, 0x53e6, 0xd4b4, 0xa2cd, 0x1, 0x1);
        gbc.writeMem(0x7ccb, { 0xe0, 0xaa });
        gbc.writeMem(0xffaa, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x750a, gbc.sp());
        EXPECT(0x7ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xffaa));
        // E0 034D
        gbc.setState(0x6253, 0x7a9, 0x6c30, 0xd46c, 0x5766, 0x463a, 0x1, 0x0);
        gbc.writeMem(0x6253, { 0xe0, 0xca });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7a9, gbc.sp());
        EXPECT(0x6255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xffca));
        // E0 034E
        gbc.setState(0x5ada, 0xa393, 0x81b0, 0xcff2, 0x2ce4, 0x928, 0x0, 0x0);
        gbc.writeMem(0x5ada, { 0xe0, 0xa3 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa393, gbc.sp());
        EXPECT(0x5adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xffa3));
        // E0 034F
        gbc.setState(0x6439, 0x2cb7, 0x9e60, 0x3fb6, 0x69f0, 0xc11, 0x0, 0x0);
        gbc.writeMem(0x6439, { 0xe0, 0x58 });
        gbc.writeMem(0xff58, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2cb7, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xff58));
        // E0 0350
        gbc.setState(0x4ccc, 0x8abf, 0x1d90, 0xacd, 0x78af, 0xd42c, 0x1, 0x0);
        gbc.writeMem(0x4ccc, { 0xe0, 0x51 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8abf, gbc.sp());
        EXPECT(0x4cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xff51));
        // E0 0351
        gbc.setState(0x5277, 0xba0a, 0x3e0, 0xc7d6, 0xa987, 0x4d7f, 0x1, 0x1);
        gbc.writeMem(0x5277, { 0xe0, 0xeb });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xba0a, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xffeb));
        // E0 0352
        gbc.setState(0x2659, 0x9dce, 0xd7f0, 0x8ba9, 0x217, 0xea64, 0x0, 0x1);
        gbc.writeMem(0x2659, { 0xe0, 0xda });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9dce, gbc.sp());
        EXPECT(0x265b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xffda));
        // E0 0353
        gbc.setState(0xbdc7, 0x13cd, 0xc010, 0x7671, 0x4610, 0x8d51, 0x1, 0x0);
        gbc.writeMem(0xbdc7, { 0xe0, 0xb6 });
        gbc.writeMem(0xffb6, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x13cd, gbc.sp());
        EXPECT(0xbdc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbdc7));
        EXPECT(0xb6, gbc.readMem(0xbdc8));
        EXPECT(0xc0, gbc.readMem(0xffb6));
        // E0 0354
        gbc.setState(0x48b6, 0x1eaf, 0x6890, 0x7ad9, 0xbd77, 0xf9b0, 0x1, 0x1);
        gbc.writeMem(0x48b6, { 0xe0, 0x0 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1eaf, gbc.sp());
        EXPECT(0x48b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xff00));
        // E0 0355
        gbc.setState(0xc319, 0xd49c, 0x7de0, 0xa85a, 0x75d3, 0xd9f4, 0x1, 0x0);
        gbc.writeMem(0xc319, { 0xe0, 0x3f });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd49c, gbc.sp());
        EXPECT(0xc31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc319));
        EXPECT(0x3f, gbc.readMem(0xc31a));
        EXPECT(0x7d, gbc.readMem(0xff3f));
        // E0 0356
        gbc.setState(0xb7f, 0xae0d, 0x1560, 0xfa63, 0xac89, 0x43bf, 0x0, 0x1);
        gbc.writeMem(0xb7f, { 0xe0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xae0d, gbc.sp());
        EXPECT(0xb81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xffb1));
        // E0 0357
        gbc.setState(0xacee, 0x7854, 0x7840, 0x8c4, 0x32b1, 0x3d52, 0x1, 0x0);
        gbc.writeMem(0xacee, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7854, gbc.sp());
        EXPECT(0xacf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xacee));
        EXPECT(0x52, gbc.readMem(0xacef));
        EXPECT(0x78, gbc.readMem(0xff52));
        // E0 0358
        gbc.setState(0x1f59, 0xb5b0, 0xc2c0, 0x3ee9, 0xae49, 0x856b, 0x1, 0x0);
        gbc.writeMem(0x1f59, { 0xe0, 0x11 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb5b0, gbc.sp());
        EXPECT(0x1f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xff11));
        // E0 0359
        gbc.setState(0xb7a5, 0x8260, 0x9b30, 0xf995, 0x6835, 0xf419, 0x0, 0x0);
        gbc.writeMem(0xb7a5, { 0xe0, 0xec });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8260, gbc.sp());
        EXPECT(0xb7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb7a5));
        EXPECT(0xec, gbc.readMem(0xb7a6));
        EXPECT(0x9b, gbc.readMem(0xffec));
        // E0 035A
        gbc.setState(0x29c7, 0xdc64, 0x48f0, 0x40eb, 0xc99d, 0x2692, 0x0, 0x0);
        gbc.writeMem(0x29c7, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdc64, gbc.sp());
        EXPECT(0x29c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xffc0));
        // E0 035B
        gbc.setState(0x7823, 0xe2c3, 0x4fb0, 0x211c, 0xbf12, 0xa777, 0x1, 0x1);
        gbc.writeMem(0x7823, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe2c3, gbc.sp());
        EXPECT(0x7825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xff23));
        // E0 035C
        gbc.setState(0x22cf, 0x299e, 0x7420, 0x1b93, 0x737f, 0xdf6d, 0x1, 0x1);
        gbc.writeMem(0x22cf, { 0xe0, 0x8f });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x299e, gbc.sp());
        EXPECT(0x22d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xff8f));
        // E0 035D
        gbc.setState(0xdc49, 0x9ccf, 0xd5f0, 0x9943, 0x9ff8, 0xefaa, 0x0, 0x1);
        gbc.writeMem(0xdc49, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9ccf, gbc.sp());
        EXPECT(0xdc4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdc49));
        EXPECT(0x35, gbc.readMem(0xdc4a));
        EXPECT(0xd5, gbc.readMem(0xff35));
        // E0 035E
        gbc.setState(0xdc28, 0xdd12, 0xf540, 0x1fe5, 0x3842, 0x1959, 0x0, 0x0);
        gbc.writeMem(0xdc28, { 0xe0, 0x88 });
        gbc.writeMem(0xff88, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdd12, gbc.sp());
        EXPECT(0xdc2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdc28));
        EXPECT(0x88, gbc.readMem(0xdc29));
        EXPECT(0xf5, gbc.readMem(0xff88));
        // E0 035F
        gbc.setState(0xe9e2, 0xca5c, 0xa0d0, 0x2baa, 0x74f5, 0xdb8a, 0x1, 0x1);
        gbc.writeMem(0xe9e2, { 0xe0, 0x3b });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xca5c, gbc.sp());
        EXPECT(0xe9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe9e2));
        EXPECT(0x3b, gbc.readMem(0xe9e3));
        EXPECT(0xa0, gbc.readMem(0xff3b));
        // E0 0360
        gbc.setState(0xe877, 0xff16, 0x19e0, 0x1b8b, 0xc177, 0x920, 0x0, 0x0);
        gbc.writeMem(0xe877, { 0xe0, 0x6e });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xff16, gbc.sp());
        EXPECT(0xe879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe877));
        EXPECT(0x6e, gbc.readMem(0xe878));
        EXPECT(0x19, gbc.readMem(0xff6e));
        // E0 0361
        gbc.setState(0x8591, 0xf42e, 0x92d0, 0x67c9, 0xc7b7, 0xb629, 0x0, 0x1);
        gbc.writeMem(0x8591, { 0xe0, 0x24 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf42e, gbc.sp());
        EXPECT(0x8593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8591));
        EXPECT(0x24, gbc.readMem(0x8592));
        EXPECT(0x92, gbc.readMem(0xff24));
        // E0 0362
        gbc.setState(0xc975, 0xab7a, 0xcdb0, 0x9ae6, 0x22d1, 0xf3b4, 0x0, 0x1);
        gbc.writeMem(0xc975, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xab7a, gbc.sp());
        EXPECT(0xc977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc975));
        EXPECT(0x5f, gbc.readMem(0xc976));
        EXPECT(0xcd, gbc.readMem(0xff5f));
        // E0 0363
        gbc.setState(0x2fcc, 0x432e, 0x7820, 0xf78e, 0x44bd, 0x3e4a, 0x1, 0x0);
        gbc.writeMem(0x2fcc, { 0xe0, 0x8d });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x432e, gbc.sp());
        EXPECT(0x2fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xff8d));
        // E0 0364
        gbc.setState(0x456b, 0x99e2, 0x6630, 0x7f80, 0x39ee, 0xc8c3, 0x1, 0x1);
        gbc.writeMem(0x456b, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x99e2, gbc.sp());
        EXPECT(0x456d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xff48));
        // E0 0365
        gbc.setState(0x67cb, 0xae4e, 0xdf30, 0x8022, 0x9e95, 0x1d17, 0x1, 0x0);
        gbc.writeMem(0x67cb, { 0xe0, 0x4f });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xae4e, gbc.sp());
        EXPECT(0x67cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xff4f));
        // E0 0366
        gbc.setState(0x7d42, 0x9f0c, 0x6990, 0xf597, 0xb669, 0x58ea, 0x1, 0x1);
        gbc.writeMem(0x7d42, { 0xe0, 0xf3 });
        gbc.writeMem(0xfff3, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9f0c, gbc.sp());
        EXPECT(0x7d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xfff3));
        // E0 0367
        gbc.setState(0x3a20, 0xa0e4, 0xd000, 0xd00f, 0x7c68, 0x7556, 0x0, 0x1);
        gbc.writeMem(0x3a20, { 0xe0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa0e4, gbc.sp());
        EXPECT(0x3a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xffc8));
        // E0 0368
        gbc.setState(0x4ea, 0x76eb, 0x9560, 0x449f, 0x34ea, 0x78bd, 0x0, 0x0);
        gbc.writeMem(0x4ea, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x76eb, gbc.sp());
        EXPECT(0x4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xff68));
        // E0 0369
        gbc.setState(0x273f, 0x85b, 0xd90, 0xd922, 0x3523, 0x2513, 0x0, 0x0);
        gbc.writeMem(0x273f, { 0xe0, 0x63 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x85b, gbc.sp());
        EXPECT(0x2741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xff63));
        // E0 036A
        gbc.setState(0xd48b, 0x8a77, 0x81d0, 0xc43e, 0xa082, 0x95e0, 0x0, 0x1);
        gbc.writeMem(0xd48b, { 0xe0, 0xe8 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8a77, gbc.sp());
        EXPECT(0xd48d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd48b));
        EXPECT(0xe8, gbc.readMem(0xd48c));
        EXPECT(0x81, gbc.readMem(0xffe8));
        // E0 036B
        gbc.setState(0xea13, 0x28b3, 0x7b50, 0x7a8a, 0x2084, 0xd13f, 0x1, 0x1);
        gbc.writeMem(0xea13, { 0xe0, 0x43 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x28b3, gbc.sp());
        EXPECT(0xea15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xea13));
        EXPECT(0x43, gbc.readMem(0xea14));
        EXPECT(0x7b, gbc.readMem(0xff43));
        // E0 036C
        gbc.setState(0x36b9, 0x9ac9, 0x1f10, 0x2ccf, 0x7cbc, 0x46f7, 0x1, 0x0);
        gbc.writeMem(0x36b9, { 0xe0, 0x1 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9ac9, gbc.sp());
        EXPECT(0x36bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xff01));
        // E0 036D
        gbc.setState(0xd18b, 0xe33e, 0x8b90, 0xba3, 0xaa3b, 0xa76b, 0x0, 0x0);
        gbc.writeMem(0xd18b, { 0xe0, 0xb9 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe33e, gbc.sp());
        EXPECT(0xd18d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd18b));
        EXPECT(0xb9, gbc.readMem(0xd18c));
        EXPECT(0x8b, gbc.readMem(0xffb9));
        // E0 036E
        gbc.setState(0x7d3c, 0x14f, 0x1ec0, 0x6ff6, 0x32ae, 0x55f3, 0x0, 0x0);
        gbc.writeMem(0x7d3c, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x14f, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xff52));
        // E0 036F
        gbc.setState(0x6be5, 0xc24e, 0xf680, 0xc70e, 0x2e25, 0x4f8d, 0x0, 0x1);
        gbc.writeMem(0x6be5, { 0xe0, 0x66 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc24e, gbc.sp());
        EXPECT(0x6be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xff66));
        // E0 0370
        gbc.setState(0x3fb3, 0x6f62, 0x9570, 0xbe07, 0x4297, 0x849c, 0x1, 0x0);
        gbc.writeMem(0x3fb3, { 0xe0, 0x5f });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6f62, gbc.sp());
        EXPECT(0x3fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xff5f));
        // E0 0371
        gbc.setState(0xc2e7, 0xfc2e, 0xf8b0, 0x3d17, 0x7d13, 0x2827, 0x0, 0x0);
        gbc.writeMem(0xc2e7, { 0xe0, 0x62 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfc2e, gbc.sp());
        EXPECT(0xc2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc2e7));
        EXPECT(0x62, gbc.readMem(0xc2e8));
        EXPECT(0xf8, gbc.readMem(0xff62));
        // E0 0372
        gbc.setState(0x988, 0xfdb2, 0x4f20, 0x4e2a, 0xd4c9, 0xa22e, 0x0, 0x1);
        gbc.writeMem(0x988, { 0xe0, 0xd9 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfdb2, gbc.sp());
        EXPECT(0x98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xffd9));
        // E0 0373
        gbc.setState(0x10d5, 0x78f4, 0x4330, 0xbf33, 0x2f34, 0xd142, 0x1, 0x1);
        gbc.writeMem(0x10d5, { 0xe0, 0x48 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x78f4, gbc.sp());
        EXPECT(0x10d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xff48));
        // E0 0374
        gbc.setState(0x5ae5, 0x272, 0xc60, 0x61d0, 0x66bc, 0xffe9, 0x0, 0x1);
        gbc.writeMem(0x5ae5, { 0xe0, 0x5 });
        gbc.writeMem(0xff05, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x272, gbc.sp());
        EXPECT(0x5ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xff05));
        // E0 0375
        gbc.setState(0x340d, 0xb415, 0xb700, 0xb91f, 0x54d1, 0x5d5a, 0x1, 0x0);
        gbc.writeMem(0x340d, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb415, gbc.sp());
        EXPECT(0x340f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xff31));
        // E0 0376
        gbc.setState(0x51de, 0x5fe, 0xe0a0, 0xf354, 0x3b5a, 0xc562, 0x1, 0x1);
        gbc.writeMem(0x51de, { 0xe0, 0xce });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5fe, gbc.sp());
        EXPECT(0x51e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xffce));
        // E0 0378
        gbc.setState(0xff4, 0x97c7, 0x1b40, 0xee16, 0xa60d, 0x42c7, 0x0, 0x1);
        gbc.writeMem(0xff4, { 0xe0, 0xf5 });
        gbc.writeMem(0xfff5, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x97c7, gbc.sp());
        EXPECT(0xff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xfff5));
        // E0 0379
        gbc.setState(0xec4d, 0xa6e8, 0x8e00, 0x40c, 0x8473, 0x2f00, 0x0, 0x1);
        gbc.writeMem(0xec4d, { 0xe0, 0xdf });
        gbc.writeMem(0xffdf, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa6e8, gbc.sp());
        EXPECT(0xec4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xec4d));
        EXPECT(0xdf, gbc.readMem(0xec4e));
        EXPECT(0x8e, gbc.readMem(0xffdf));
        // E0 037A
        gbc.setState(0xda97, 0xf627, 0x2e00, 0x43d2, 0x3d4d, 0xfa2e, 0x1, 0x0);
        gbc.writeMem(0xda97, { 0xe0, 0x16 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf627, gbc.sp());
        EXPECT(0xda99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xda97));
        EXPECT(0x16, gbc.readMem(0xda98));
        EXPECT(0x2e, gbc.readMem(0xff16));
        // E0 037B
        gbc.setState(0xa1c3, 0x8b9, 0xa360, 0xe04b, 0x1bd3, 0x84a3, 0x1, 0x1);
        gbc.writeMem(0xa1c3, { 0xe0, 0xbe });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8b9, gbc.sp());
        EXPECT(0xa1c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa1c3));
        EXPECT(0xbe, gbc.readMem(0xa1c4));
        EXPECT(0xa3, gbc.readMem(0xffbe));
        // E0 037C
        gbc.setState(0xa2e9, 0xf480, 0x2e10, 0x9662, 0x3cbf, 0x5907, 0x1, 0x1);
        gbc.writeMem(0xa2e9, { 0xe0, 0x37 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf480, gbc.sp());
        EXPECT(0xa2eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa2e9));
        EXPECT(0x37, gbc.readMem(0xa2ea));
        EXPECT(0x2e, gbc.readMem(0xff37));
        // E0 037D
        gbc.setState(0xb5e7, 0xd883, 0xa650, 0xd352, 0x7b5e, 0xf6ee, 0x1, 0x0);
        gbc.writeMem(0xb5e7, { 0xe0, 0x27 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd883, gbc.sp());
        EXPECT(0xb5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb5e7));
        EXPECT(0x27, gbc.readMem(0xb5e8));
        EXPECT(0xa6, gbc.readMem(0xff27));
        // E0 037E
        gbc.setState(0x36d1, 0x8cc6, 0x4480, 0xc6a, 0x5268, 0xced4, 0x1, 0x1);
        gbc.writeMem(0x36d1, { 0xe0, 0x9f });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8cc6, gbc.sp());
        EXPECT(0x36d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xff9f));
        // E0 037F
        gbc.setState(0x3bea, 0xfe90, 0xc800, 0x7884, 0xbbea, 0xca3f, 0x0, 0x0);
        gbc.writeMem(0x3bea, { 0xe0, 0x3d });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfe90, gbc.sp());
        EXPECT(0x3bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xff3d));
        // E0 0380
        gbc.setState(0xc60d, 0x450f, 0x2170, 0x5edb, 0xb743, 0x67ac, 0x1, 0x0);
        gbc.writeMem(0xc60d, { 0xe0, 0x95 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x450f, gbc.sp());
        EXPECT(0xc60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc60d));
        EXPECT(0x95, gbc.readMem(0xc60e));
        EXPECT(0x21, gbc.readMem(0xff95));
        // E0 0381
        gbc.setState(0x1547, 0x1c62, 0xef40, 0x7366, 0xd60e, 0x2d89, 0x0, 0x1);
        gbc.writeMem(0x1547, { 0xe0, 0x39 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1c62, gbc.sp());
        EXPECT(0x1549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xff39));
        // E0 0382
        gbc.setState(0x2dcb, 0x657a, 0x6040, 0x8711, 0x16b0, 0x30ea, 0x0, 0x1);
        gbc.writeMem(0x2dcb, { 0xe0, 0xef });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x657a, gbc.sp());
        EXPECT(0x2dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xffef));
        // E0 0383
        gbc.setState(0xb463, 0x79ad, 0x3970, 0xa879, 0x3efa, 0x557a, 0x0, 0x1);
        gbc.writeMem(0xb463, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x79ad, gbc.sp());
        EXPECT(0xb465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb463));
        EXPECT(0xc0, gbc.readMem(0xb464));
        EXPECT(0x39, gbc.readMem(0xffc0));
        // E0 0384
        gbc.setState(0x3fff, 0xe0df, 0x1b90, 0x64e9, 0x83f9, 0x23d7, 0x1, 0x1);
        gbc.writeMem(0x3fff, { 0xe0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe0df, gbc.sp());
        EXPECT(0x4001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xffb8));
        // E0 0385
        gbc.setState(0xb21a, 0x9cb, 0x8140, 0x536d, 0x1fcf, 0x231, 0x1, 0x0);
        gbc.writeMem(0xb21a, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9cb, gbc.sp());
        EXPECT(0xb21c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb21a));
        EXPECT(0x23, gbc.readMem(0xb21b));
        EXPECT(0x81, gbc.readMem(0xff23));
        // E0 0386
        gbc.setState(0xe030, 0x92ad, 0x6f80, 0x4073, 0x232, 0x6bee, 0x0, 0x0);
        gbc.writeMem(0xe030, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x92ad, gbc.sp());
        EXPECT(0xe032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe030));
        EXPECT(0x3, gbc.readMem(0xe031));
        EXPECT(0x6f, gbc.readMem(0xff03));
        // E0 0387
        gbc.setState(0x96a4, 0xda96, 0xfaa0, 0x9977, 0x7da, 0x332, 0x1, 0x0);
        gbc.writeMem(0x96a4, { 0xe0, 0x22 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xda96, gbc.sp());
        EXPECT(0x96a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x96a4));
        EXPECT(0x22, gbc.readMem(0x96a5));
        EXPECT(0xfa, gbc.readMem(0xff22));
        // E0 0388
        gbc.setState(0xc876, 0x5faf, 0xb8c0, 0x659e, 0x7b47, 0x5587, 0x1, 0x0);
        gbc.writeMem(0xc876, { 0xe0, 0x1b });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5faf, gbc.sp());
        EXPECT(0xc878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc876));
        EXPECT(0x1b, gbc.readMem(0xc877));
        EXPECT(0xb8, gbc.readMem(0xff1b));
        // E0 0389
        gbc.setState(0x2bba, 0xe442, 0x7220, 0x5762, 0x1b3d, 0x76b0, 0x1, 0x0);
        gbc.writeMem(0x2bba, { 0xe0, 0x23 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe442, gbc.sp());
        EXPECT(0x2bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xff23));
        // E0 038A
        gbc.setState(0x3f34, 0x54d1, 0x2020, 0xd2b9, 0xbe7f, 0x52c8, 0x0, 0x1);
        gbc.writeMem(0x3f34, { 0xe0, 0xc2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x54d1, gbc.sp());
        EXPECT(0x3f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xffc2));
        // E0 038B
        gbc.setState(0x925, 0xfcfc, 0x240, 0x1a01, 0x5917, 0x11f4, 0x1, 0x0);
        gbc.writeMem(0x925, { 0xe0, 0x1b });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfcfc, gbc.sp());
        EXPECT(0x927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xff1b));
        // E0 038E
        gbc.setState(0x7eb0, 0xc4a3, 0x92f0, 0x269e, 0xd603, 0x6bfd, 0x0, 0x1);
        gbc.writeMem(0x7eb0, { 0xe0, 0xc3 });
        gbc.writeMem(0xffc3, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc4a3, gbc.sp());
        EXPECT(0x7eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xffc3));
        // E0 038F
        gbc.setState(0x1459, 0x5623, 0xb6b0, 0x41b8, 0x5ba1, 0x4739, 0x1, 0x1);
        gbc.writeMem(0x1459, { 0xe0, 0x1a });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5623, gbc.sp());
        EXPECT(0x145b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xff1a));
        // E0 0390
        gbc.setState(0x3ddc, 0xfe7a, 0xf0a0, 0x4f4b, 0xd7e5, 0xf50a, 0x1, 0x0);
        gbc.writeMem(0x3ddc, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfe7a, gbc.sp());
        EXPECT(0x3dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xff80));
        // E0 0391
        gbc.setState(0x74b8, 0x673f, 0xecb0, 0x19f6, 0xfd4f, 0xaa83, 0x0, 0x0);
        gbc.writeMem(0x74b8, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x673f, gbc.sp());
        EXPECT(0x74ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xff07));
        // E0 0392
        gbc.setState(0xb4aa, 0x6a5f, 0x56c0, 0x64cc, 0xbeec, 0xfd5d, 0x0, 0x1);
        gbc.writeMem(0xb4aa, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6a5f, gbc.sp());
        EXPECT(0xb4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb4aa));
        EXPECT(0x83, gbc.readMem(0xb4ab));
        EXPECT(0x56, gbc.readMem(0xff83));
        // E0 0393
        gbc.setState(0xdfc9, 0xb0a8, 0x61c0, 0xbaeb, 0x6ba1, 0x9795, 0x0, 0x0);
        gbc.writeMem(0xdfc9, { 0xe0, 0x47 });
        gbc.writeMem(0xff47, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb0a8, gbc.sp());
        EXPECT(0xdfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdfc9));
        EXPECT(0x47, gbc.readMem(0xdfca));
        EXPECT(0x61, gbc.readMem(0xff47));
        // E0 0394
        gbc.setState(0x6e42, 0x9aa6, 0x7c20, 0x176e, 0x7b42, 0x555f, 0x0, 0x0);
        gbc.writeMem(0x6e42, { 0xe0, 0x81 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9aa6, gbc.sp());
        EXPECT(0x6e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xff81));
        // E0 0395
        gbc.setState(0x5818, 0x2f9d, 0xd1c0, 0x3bb, 0x67a8, 0x3035, 0x1, 0x1);
        gbc.writeMem(0x5818, { 0xe0, 0x50 });
        gbc.writeMem(0xff50, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2f9d, gbc.sp());
        EXPECT(0x581a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xff50));
        // E0 0396
        gbc.setState(0xbacd, 0x78e9, 0xaa60, 0xed83, 0xa108, 0x937c, 0x0, 0x0);
        gbc.writeMem(0xbacd, { 0xe0, 0xa4 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x78e9, gbc.sp());
        EXPECT(0xbacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbacd));
        EXPECT(0xa4, gbc.readMem(0xbace));
        EXPECT(0xaa, gbc.readMem(0xffa4));
        // E0 0397
        gbc.setState(0xb7bb, 0xad70, 0x1e00, 0xafa6, 0x108e, 0x5860, 0x0, 0x1);
        gbc.writeMem(0xb7bb, { 0xe0, 0xb9 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xad70, gbc.sp());
        EXPECT(0xb7bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb7bb));
        EXPECT(0xb9, gbc.readMem(0xb7bc));
        EXPECT(0x1e, gbc.readMem(0xffb9));
        // E0 0398
        gbc.setState(0xbea9, 0xca4, 0xdf70, 0x815c, 0xcd10, 0x5d56, 0x0, 0x1);
        gbc.writeMem(0xbea9, { 0xe0, 0x1e });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xca4, gbc.sp());
        EXPECT(0xbeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbea9));
        EXPECT(0x1e, gbc.readMem(0xbeaa));
        EXPECT(0xdf, gbc.readMem(0xff1e));
        // E0 0399
        gbc.setState(0xc23d, 0xc29e, 0xb9b0, 0x266, 0x7f00, 0x49fb, 0x1, 0x0);
        gbc.writeMem(0xc23d, { 0xe0, 0xf4 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc29e, gbc.sp());
        EXPECT(0xc23f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc23d));
        EXPECT(0xf4, gbc.readMem(0xc23e));
        EXPECT(0xb9, gbc.readMem(0xfff4));
        // E0 039A
        gbc.setState(0xd3c0, 0x727b, 0xd100, 0xd75d, 0xc69, 0x5f66, 0x0, 0x1);
        gbc.writeMem(0xd3c0, { 0xe0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x727b, gbc.sp());
        EXPECT(0xd3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd3c0));
        EXPECT(0xd0, gbc.readMem(0xd3c1));
        EXPECT(0xd1, gbc.readMem(0xffd0));
        // E0 039B
        gbc.setState(0xc190, 0x14, 0x5d30, 0xdaa2, 0x7091, 0xf8d2, 0x0, 0x0);
        gbc.writeMem(0xc190, { 0xe0, 0x40 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x14, gbc.sp());
        EXPECT(0xc192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc190));
        EXPECT(0x40, gbc.readMem(0xc191));
        EXPECT(0x5d, gbc.readMem(0xff40));
        // E0 039C
        gbc.setState(0x977e, 0x7439, 0xead0, 0xd142, 0xf8b0, 0xa439, 0x1, 0x1);
        gbc.writeMem(0x977e, { 0xe0, 0xcd });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7439, gbc.sp());
        EXPECT(0x9780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x977e));
        EXPECT(0xcd, gbc.readMem(0x977f));
        EXPECT(0xea, gbc.readMem(0xffcd));
        // E0 039D
        gbc.setState(0xbd40, 0x978a, 0x69b0, 0x6923, 0x8c87, 0x2403, 0x0, 0x1);
        gbc.writeMem(0xbd40, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x978a, gbc.sp());
        EXPECT(0xbd42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbd40));
        EXPECT(0x9e, gbc.readMem(0xbd41));
        EXPECT(0x69, gbc.readMem(0xff9e));
        // E0 039E
        gbc.setState(0xb58, 0x528a, 0xd090, 0xc201, 0x40bb, 0x28e6, 0x1, 0x1);
        gbc.writeMem(0xb58, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x528a, gbc.sp());
        EXPECT(0xb5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xff03));
        // E0 039F
        gbc.setState(0x5a4b, 0xce01, 0xb0, 0xd7d6, 0x4a56, 0xe14c, 0x1, 0x0);
        gbc.writeMem(0x5a4b, { 0xe0, 0x1a });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xce01, gbc.sp());
        EXPECT(0x5a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xff1a));
        // E0 03A0
        gbc.setState(0x7e97, 0x325f, 0xed90, 0x39b, 0x6daf, 0xab56, 0x1, 0x0);
        gbc.writeMem(0x7e97, { 0xe0, 0x4d });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x325f, gbc.sp());
        EXPECT(0x7e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xff4d));
        // E0 03A1
        gbc.setState(0x18e9, 0xbf36, 0xe060, 0x74ad, 0xaf71, 0xc6cc, 0x1, 0x1);
        gbc.writeMem(0x18e9, { 0xe0, 0x1f });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbf36, gbc.sp());
        EXPECT(0x18eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff1f));
        // E0 03A2
        gbc.setState(0x6b92, 0xe08d, 0x2b10, 0xad40, 0x7e83, 0xe7b3, 0x1, 0x0);
        gbc.writeMem(0x6b92, { 0xe0, 0x3e });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe08d, gbc.sp());
        EXPECT(0x6b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xff3e));
        // E0 03A4
        gbc.setState(0x89c0, 0x38a6, 0x1af0, 0x9625, 0x84f2, 0x3fbe, 0x1, 0x1);
        gbc.writeMem(0x89c0, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x38a6, gbc.sp());
        EXPECT(0x89c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x89c0));
        EXPECT(0x80, gbc.readMem(0x89c1));
        EXPECT(0x1a, gbc.readMem(0xff80));
        // E0 03A5
        gbc.setState(0xa1da, 0x18d8, 0x5220, 0xda13, 0xb8f0, 0xc0f6, 0x0, 0x0);
        gbc.writeMem(0xa1da, { 0xe0, 0x41 });
        gbc.writeMem(0xff41, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x18d8, gbc.sp());
        EXPECT(0xa1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa1da));
        EXPECT(0x41, gbc.readMem(0xa1db));
        EXPECT(0x52, gbc.readMem(0xff41));
        // E0 03A6
        gbc.setState(0xe237, 0xa375, 0x37a0, 0xbc85, 0xdb00, 0xe187, 0x1, 0x0);
        gbc.writeMem(0xe237, { 0xe0, 0x84 });
        gbc.writeMem(0xff84, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa375, gbc.sp());
        EXPECT(0xe239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe237));
        EXPECT(0x84, gbc.readMem(0xe238));
        EXPECT(0x37, gbc.readMem(0xff84));
        // E0 03A7
        gbc.setState(0xcb91, 0x20f9, 0x73b0, 0xa169, 0xc756, 0xd5b1, 0x1, 0x1);
        gbc.writeMem(0xcb91, { 0xe0, 0x9a });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x20f9, gbc.sp());
        EXPECT(0xcb93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcb91));
        EXPECT(0x9a, gbc.readMem(0xcb92));
        EXPECT(0x73, gbc.readMem(0xff9a));
        // E0 03A8
        gbc.setState(0x70f2, 0xf58b, 0x2b60, 0x8a1c, 0x73a7, 0x8288, 0x1, 0x0);
        gbc.writeMem(0x70f2, { 0xe0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf58b, gbc.sp());
        EXPECT(0x70f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xffc9));
        // E0 03A9
        gbc.setState(0xa77a, 0xb42b, 0x870, 0x18ed, 0xbed1, 0x2c10, 0x1, 0x0);
        gbc.writeMem(0xa77a, { 0xe0, 0x2e });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb42b, gbc.sp());
        EXPECT(0xa77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa77a));
        EXPECT(0x2e, gbc.readMem(0xa77b));
        EXPECT(0x8, gbc.readMem(0xff2e));
        // E0 03AA
        gbc.setState(0xd696, 0x935, 0xd3f0, 0x8e4a, 0x1efd, 0x66ef, 0x1, 0x1);
        gbc.writeMem(0xd696, { 0xe0, 0x8 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x935, gbc.sp());
        EXPECT(0xd698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd696));
        EXPECT(0x8, gbc.readMem(0xd697));
        EXPECT(0xd3, gbc.readMem(0xff08));
        // E0 03AB
        gbc.setState(0x7bc3, 0x9727, 0x76f0, 0x223f, 0x59b5, 0x83f7, 0x1, 0x1);
        gbc.writeMem(0x7bc3, { 0xe0, 0x66 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9727, gbc.sp());
        EXPECT(0x7bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff66));
        // E0 03AC
        gbc.setState(0xef6, 0xac63, 0x9b10, 0x7b41, 0x2bf, 0x33e7, 0x1, 0x0);
        gbc.writeMem(0xef6, { 0xe0, 0x2b });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xac63, gbc.sp());
        EXPECT(0xef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xff2b));
        // E0 03AE
        gbc.setState(0xd40b, 0x5bda, 0x4910, 0xb672, 0x9a60, 0x97db, 0x1, 0x1);
        gbc.writeMem(0xd40b, { 0xe0, 0x28 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5bda, gbc.sp());
        EXPECT(0xd40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd40b));
        EXPECT(0x28, gbc.readMem(0xd40c));
        EXPECT(0x49, gbc.readMem(0xff28));
        // E0 03AF
        gbc.setState(0xc43c, 0xcf66, 0x7290, 0x4259, 0xe78c, 0xa202, 0x1, 0x1);
        gbc.writeMem(0xc43c, { 0xe0, 0x7 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcf66, gbc.sp());
        EXPECT(0xc43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc43c));
        EXPECT(0x7, gbc.readMem(0xc43d));
        EXPECT(0x72, gbc.readMem(0xff07));
        // E0 03B0
        gbc.setState(0xb2bf, 0xa9d8, 0xc910, 0x968b, 0xbd40, 0x80bf, 0x1, 0x1);
        gbc.writeMem(0xb2bf, { 0xe0, 0x90 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa9d8, gbc.sp());
        EXPECT(0xb2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb2bf));
        EXPECT(0x90, gbc.readMem(0xb2c0));
        EXPECT(0xc9, gbc.readMem(0xff90));
        // E0 03B1
        gbc.setState(0x2dc3, 0x69b6, 0x9b30, 0xe74c, 0x1daf, 0xa0de, 0x0, 0x1);
        gbc.writeMem(0x2dc3, { 0xe0, 0x9e });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x69b6, gbc.sp());
        EXPECT(0x2dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xff9e));
        // E0 03B2
        gbc.setState(0xdfcc, 0xbb59, 0x6050, 0x40ec, 0x7c8a, 0x398c, 0x1, 0x1);
        gbc.writeMem(0xdfcc, { 0xe0, 0xf4 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbb59, gbc.sp());
        EXPECT(0xdfce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdfcc));
        EXPECT(0xf4, gbc.readMem(0xdfcd));
        EXPECT(0x60, gbc.readMem(0xfff4));
        // E0 03B3
        gbc.setState(0x1d0b, 0x93e9, 0x4c0, 0xb146, 0x3a18, 0xa60b, 0x1, 0x1);
        gbc.writeMem(0x1d0b, { 0xe0, 0xed });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x93e9, gbc.sp());
        EXPECT(0x1d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xffed));
        // E0 03B4
        gbc.setState(0x3e51, 0xe64b, 0xe540, 0x7ff7, 0xc332, 0x24b5, 0x0, 0x1);
        gbc.writeMem(0x3e51, { 0xe0, 0x8e });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe64b, gbc.sp());
        EXPECT(0x3e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xff8e));
        // E0 03B5
        gbc.setState(0x5106, 0x86c8, 0xe280, 0xada9, 0xbcf, 0x81c7, 0x1, 0x0);
        gbc.writeMem(0x5106, { 0xe0, 0x68 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x86c8, gbc.sp());
        EXPECT(0x5108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xff68));
        // E0 03B6
        gbc.setState(0x4d, 0xe3cd, 0x5040, 0xe221, 0x85ee, 0xa518, 0x1, 0x1);
        gbc.writeMem(0x4d, { 0xe0, 0x5e });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe3cd, gbc.sp());
        EXPECT(0x4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xff5e));
        // E0 03B7
        gbc.setState(0xc249, 0xd937, 0x86f0, 0x4871, 0x9ae1, 0x4b6f, 0x1, 0x1);
        gbc.writeMem(0xc249, { 0xe0, 0x7b });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd937, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc249));
        EXPECT(0x7b, gbc.readMem(0xc24a));
        EXPECT(0x86, gbc.readMem(0xff7b));
        // E0 03B8
        gbc.setState(0xe62c, 0xf11b, 0x1250, 0xbe94, 0xcdff, 0x39cc, 0x1, 0x1);
        gbc.writeMem(0xe62c, { 0xe0, 0x2c });
        gbc.writeMem(0xff2c, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf11b, gbc.sp());
        EXPECT(0xe62e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe62c));
        EXPECT(0x2c, gbc.readMem(0xe62d));
        EXPECT(0x12, gbc.readMem(0xff2c));
        // E0 03B9
        gbc.setState(0xc393, 0xc08f, 0x5b10, 0xe400, 0xb6e2, 0xabb5, 0x0, 0x0);
        gbc.writeMem(0xc393, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc08f, gbc.sp());
        EXPECT(0xc395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc393));
        EXPECT(0xad, gbc.readMem(0xc394));
        EXPECT(0x5b, gbc.readMem(0xffad));
        // E0 03BA
        gbc.setState(0x241, 0xfba4, 0x3ed0, 0xde77, 0x3ec4, 0xafa3, 0x1, 0x0);
        gbc.writeMem(0x241, { 0xe0, 0xad });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfba4, gbc.sp());
        EXPECT(0x243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xffad));
        // E0 03BB
        gbc.setState(0xd084, 0xb5c, 0xf2a0, 0x7a5d, 0x1a7f, 0xcff8, 0x0, 0x0);
        gbc.writeMem(0xd084, { 0xe0, 0x36 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb5c, gbc.sp());
        EXPECT(0xd086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd084));
        EXPECT(0x36, gbc.readMem(0xd085));
        EXPECT(0xf2, gbc.readMem(0xff36));
        // E0 03BC
        gbc.setState(0x24e0, 0xf6d4, 0x5340, 0x583d, 0x1de7, 0x276, 0x1, 0x0);
        gbc.writeMem(0x24e0, { 0xe0, 0x30 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf6d4, gbc.sp());
        EXPECT(0x24e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xff30));
        // E0 03BD
        gbc.setState(0x939d, 0xc1ae, 0x7d40, 0xbb6a, 0x6448, 0xadd6, 0x0, 0x0);
        gbc.writeMem(0x939d, { 0xe0, 0x92 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc1ae, gbc.sp());
        EXPECT(0x939f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x939d));
        EXPECT(0x92, gbc.readMem(0x939e));
        EXPECT(0x7d, gbc.readMem(0xff92));
        // E0 03BE
        gbc.setState(0x5bf3, 0x6f23, 0xd640, 0x63ec, 0x9d6e, 0x8bde, 0x0, 0x0);
        gbc.writeMem(0x5bf3, { 0xe0, 0x89 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6f23, gbc.sp());
        EXPECT(0x5bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xff89));
        // E0 03BF
        gbc.setState(0xdbb6, 0x53db, 0xb100, 0xe6ff, 0xf3fa, 0x80a0, 0x1, 0x0);
        gbc.writeMem(0xdbb6, { 0xe0, 0x35 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x53db, gbc.sp());
        EXPECT(0xdbb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdbb6));
        EXPECT(0x35, gbc.readMem(0xdbb7));
        EXPECT(0xb1, gbc.readMem(0xff35));
        // E0 03C0
        gbc.setState(0x31cc, 0x3209, 0x6d20, 0x6f73, 0xfd25, 0x9866, 0x1, 0x1);
        gbc.writeMem(0x31cc, { 0xe0, 0x83 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3209, gbc.sp());
        EXPECT(0x31ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xff83));
        // E0 03C1
        gbc.setState(0xeeaf, 0x7ce1, 0xa770, 0xe53f, 0x1074, 0x4123, 0x1, 0x0);
        gbc.writeMem(0xeeaf, { 0xe0, 0xfe });
        gbc.writeMem(0xfffe, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7ce1, gbc.sp());
        EXPECT(0xeeb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xeeaf));
        EXPECT(0xfe, gbc.readMem(0xeeb0));
        EXPECT(0xa7, gbc.readMem(0xfffe));
        // E0 03C2
        gbc.setState(0x6307, 0x9d9e, 0x3100, 0x808f, 0x65d9, 0xfe5b, 0x0, 0x0);
        gbc.writeMem(0x6307, { 0xe0, 0x80 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9d9e, gbc.sp());
        EXPECT(0x6309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xff80));
        // E0 03C4
        gbc.setState(0x9e01, 0x8339, 0xa060, 0x7264, 0x7769, 0x6b4d, 0x0, 0x1);
        gbc.writeMem(0x9e01, { 0xe0, 0x52 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8339, gbc.sp());
        EXPECT(0x9e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9e01));
        EXPECT(0x52, gbc.readMem(0x9e02));
        EXPECT(0xa0, gbc.readMem(0xff52));
        // E0 03C5
        gbc.setState(0xc205, 0xef25, 0x7900, 0x30ea, 0xb0ba, 0xa130, 0x0, 0x1);
        gbc.writeMem(0xc205, { 0xe0, 0xf2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xef25, gbc.sp());
        EXPECT(0xc207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc205));
        EXPECT(0xf2, gbc.readMem(0xc206));
        EXPECT(0x79, gbc.readMem(0xfff2));
        // E0 03C6
        gbc.setState(0x2185, 0xf868, 0xafb0, 0x4180, 0x6907, 0xa4c0, 0x1, 0x1);
        gbc.writeMem(0x2185, { 0xe0, 0x2c });
        gbc.writeMem(0xff2c, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf868, gbc.sp());
        EXPECT(0x2187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xff2c));
        // E0 03C7
        gbc.setState(0x4b35, 0x5846, 0x8dc0, 0x87f, 0x2350, 0x37ed, 0x0, 0x1);
        gbc.writeMem(0x4b35, { 0xe0, 0xfc });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5846, gbc.sp());
        EXPECT(0x4b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xfffc));
        // E0 03C9
        gbc.setState(0x75c1, 0xa1ea, 0xb9d0, 0x253a, 0x4038, 0x88a3, 0x1, 0x1);
        gbc.writeMem(0x75c1, { 0xe0, 0x7b });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa1ea, gbc.sp());
        EXPECT(0x75c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xff7b));
        // E0 03CA
        gbc.setState(0xc545, 0xf206, 0x1710, 0x8454, 0x2683, 0x5b21, 0x0, 0x1);
        gbc.writeMem(0xc545, { 0xe0, 0x26 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf206, gbc.sp());
        EXPECT(0xc547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc545));
        EXPECT(0x26, gbc.readMem(0xc546));
        EXPECT(0x17, gbc.readMem(0xff26));
        // E0 03CB
        gbc.setState(0xd017, 0xaa41, 0x1950, 0xa88d, 0xc67f, 0xd3e4, 0x0, 0x0);
        gbc.writeMem(0xd017, { 0xe0, 0x40 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaa41, gbc.sp());
        EXPECT(0xd019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd017));
        EXPECT(0x40, gbc.readMem(0xd018));
        EXPECT(0x19, gbc.readMem(0xff40));
        // E0 03CC
        gbc.setState(0xdcf0, 0x5ad1, 0x4410, 0x26d0, 0xeee0, 0xf9e4, 0x1, 0x1);
        gbc.writeMem(0xdcf0, { 0xe0, 0x3 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5ad1, gbc.sp());
        EXPECT(0xdcf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdcf0));
        EXPECT(0x3, gbc.readMem(0xdcf1));
        EXPECT(0x44, gbc.readMem(0xff03));
        // E0 03CD
        gbc.setState(0x25e5, 0xdf3c, 0x6ba0, 0xfd12, 0x7a6c, 0xa5b3, 0x1, 0x1);
        gbc.writeMem(0x25e5, { 0xe0, 0x14 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdf3c, gbc.sp());
        EXPECT(0x25e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xff14));
        // E0 03CE
        gbc.setState(0x936f, 0xb089, 0x2410, 0x27b5, 0x6abd, 0x7e6c, 0x0, 0x0);
        gbc.writeMem(0x936f, { 0xe0, 0xae });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb089, gbc.sp());
        EXPECT(0x9371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x936f));
        EXPECT(0xae, gbc.readMem(0x9370));
        EXPECT(0x24, gbc.readMem(0xffae));
        // E0 03CF
        gbc.setState(0xafd7, 0x9703, 0xcc30, 0x3d09, 0xe8e8, 0xd8d1, 0x0, 0x0);
        gbc.writeMem(0xafd7, { 0xe0, 0xc4 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9703, gbc.sp());
        EXPECT(0xafd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xafd7));
        EXPECT(0xc4, gbc.readMem(0xafd8));
        EXPECT(0xcc, gbc.readMem(0xffc4));
        // E0 03D0
        gbc.setState(0xd28c, 0xa506, 0x4630, 0xa5c5, 0x359b, 0x8059, 0x1, 0x0);
        gbc.writeMem(0xd28c, { 0xe0, 0x72 });
        gbc.writeMem(0xff72, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa506, gbc.sp());
        EXPECT(0xd28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd28c));
        EXPECT(0x72, gbc.readMem(0xd28d));
        EXPECT(0x46, gbc.readMem(0xff72));
        // E0 03D1
        gbc.setState(0xeb88, 0x14ca, 0x390, 0x1c98, 0xeb42, 0x71ee, 0x0, 0x1);
        gbc.writeMem(0xeb88, { 0xe0, 0xf2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x14ca, gbc.sp());
        EXPECT(0xeb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xeb88));
        EXPECT(0xf2, gbc.readMem(0xeb89));
        EXPECT(0x3, gbc.readMem(0xfff2));
        // E0 03D2
        gbc.setState(0x53d, 0x6ad3, 0xb010, 0xa1bc, 0x5e60, 0x5937, 0x1, 0x0);
        gbc.writeMem(0x53d, { 0xe0, 0x31 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6ad3, gbc.sp());
        EXPECT(0x53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xff31));
        // E0 03D3
        gbc.setState(0xbc08, 0x737b, 0xcc50, 0x5f88, 0x4848, 0x19d7, 0x0, 0x0);
        gbc.writeMem(0xbc08, { 0xe0, 0xac });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x737b, gbc.sp());
        EXPECT(0xbc0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbc08));
        EXPECT(0xac, gbc.readMem(0xbc09));
        EXPECT(0xcc, gbc.readMem(0xffac));
        // E0 03D4
        gbc.setState(0x93f6, 0xae9f, 0x6ae0, 0xc340, 0x8905, 0x68ac, 0x0, 0x1);
        gbc.writeMem(0x93f6, { 0xe0, 0xac });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xae9f, gbc.sp());
        EXPECT(0x93f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x93f6));
        EXPECT(0xac, gbc.readMem(0x93f7));
        EXPECT(0x6a, gbc.readMem(0xffac));
        // E0 03D5
        gbc.setState(0x5b4e, 0xf876, 0xd070, 0xadcf, 0xd34f, 0x4818, 0x1, 0x1);
        gbc.writeMem(0x5b4e, { 0xe0, 0xd3 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf876, gbc.sp());
        EXPECT(0x5b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xffd3));
        // E0 03D6
        gbc.setState(0x7a09, 0xe791, 0xbb00, 0xaa6c, 0xd1ce, 0xeb48, 0x1, 0x0);
        gbc.writeMem(0x7a09, { 0xe0, 0xe });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe791, gbc.sp());
        EXPECT(0x7a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xff0e));
        // E0 03D7
        gbc.setState(0x92c7, 0xce65, 0xd240, 0x601d, 0xd63d, 0x3b50, 0x1, 0x0);
        gbc.writeMem(0x92c7, { 0xe0, 0x43 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xce65, gbc.sp());
        EXPECT(0x92c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x92c7));
        EXPECT(0x43, gbc.readMem(0x92c8));
        EXPECT(0xd2, gbc.readMem(0xff43));
        // E0 03D8
        gbc.setState(0x983d, 0x150a, 0x9b80, 0x1b7, 0xd4b9, 0xd896, 0x0, 0x0);
        gbc.writeMem(0x983d, { 0xe0, 0xd8 });
        gbc.writeMem(0xffd8, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x150a, gbc.sp());
        EXPECT(0x983f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x983d));
        EXPECT(0xd8, gbc.readMem(0x983e));
        EXPECT(0x9b, gbc.readMem(0xffd8));
        // E0 03D9
        gbc.setState(0x48e8, 0x2c4f, 0xd050, 0xde85, 0xfdfd, 0x9fb4, 0x0, 0x0);
        gbc.writeMem(0x48e8, { 0xe0, 0x2c });
        gbc.writeMem(0xff2c, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2c4f, gbc.sp());
        EXPECT(0x48ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xff2c));
        // E0 03DA
        gbc.setState(0x5593, 0x8d2b, 0xdb30, 0x5ea9, 0x411b, 0x1f7d, 0x1, 0x1);
        gbc.writeMem(0x5593, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8d2b, gbc.sp());
        EXPECT(0x5595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xffc0));
        // E0 03DB
        gbc.setState(0xb30c, 0x5ee9, 0xc720, 0xd185, 0x80f2, 0x21e5, 0x1, 0x1);
        gbc.writeMem(0xb30c, { 0xe0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5ee9, gbc.sp());
        EXPECT(0xb30e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb30c));
        EXPECT(0xc8, gbc.readMem(0xb30d));
        EXPECT(0xc7, gbc.readMem(0xffc8));
        // E0 03DC
        gbc.setState(0xa419, 0x3b23, 0x2c90, 0xe446, 0xc07f, 0xdc8d, 0x1, 0x1);
        gbc.writeMem(0xa419, { 0xe0, 0xc0 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3b23, gbc.sp());
        EXPECT(0xa41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa419));
        EXPECT(0xc0, gbc.readMem(0xa41a));
        EXPECT(0x2c, gbc.readMem(0xffc0));
        // E0 03DD
        gbc.setState(0xa755, 0x3474, 0xcdb0, 0x316, 0xfd72, 0x464d, 0x0, 0x1);
        gbc.writeMem(0xa755, { 0xe0, 0xb4 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3474, gbc.sp());
        EXPECT(0xa757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa755));
        EXPECT(0xb4, gbc.readMem(0xa756));
        EXPECT(0xcd, gbc.readMem(0xffb4));
        // E0 03DE
        gbc.setState(0x14b5, 0xa9ef, 0xcac0, 0xce37, 0x2660, 0x3b12, 0x1, 0x0);
        gbc.writeMem(0x14b5, { 0xe0, 0x5 });
        gbc.writeMem(0xff05, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa9ef, gbc.sp());
        EXPECT(0x14b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xff05));
        // E0 03DF
        gbc.setState(0xcbef, 0xdaf3, 0x6840, 0x1bcb, 0x4b68, 0xccc5, 0x1, 0x0);
        gbc.writeMem(0xcbef, { 0xe0, 0x32 });
        gbc.writeMem(0xff32, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdaf3, gbc.sp());
        EXPECT(0xcbf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcbef));
        EXPECT(0x32, gbc.readMem(0xcbf0));
        EXPECT(0x68, gbc.readMem(0xff32));
        // E0 03E0
        gbc.setState(0x934c, 0xea6b, 0x7a10, 0x2b21, 0x36b2, 0xc67b, 0x0, 0x0);
        gbc.writeMem(0x934c, { 0xe0, 0x9 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xea6b, gbc.sp());
        EXPECT(0x934e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x934c));
        EXPECT(0x9, gbc.readMem(0x934d));
        EXPECT(0x7a, gbc.readMem(0xff09));
        // E0 03E1
        gbc.setState(0x8629, 0xc65e, 0x7840, 0x5930, 0x23ff, 0x6e11, 0x0, 0x0);
        gbc.writeMem(0x8629, { 0xe0, 0x4b });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0x862b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8629));
        EXPECT(0x4b, gbc.readMem(0x862a));
        EXPECT(0x78, gbc.readMem(0xff4b));
        // E0 03E2
        gbc.setState(0x5ed1, 0xc6d6, 0x2210, 0xc216, 0xd7e9, 0xe71c, 0x1, 0x0);
        gbc.writeMem(0x5ed1, { 0xe0, 0xcd });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc6d6, gbc.sp());
        EXPECT(0x5ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xffcd));
        // E0 03E3
        gbc.setState(0xbcc4, 0x874d, 0xa140, 0x6d89, 0x96e0, 0x99a6, 0x0, 0x0);
        gbc.writeMem(0xbcc4, { 0xe0, 0x30 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x874d, gbc.sp());
        EXPECT(0xbcc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbcc4));
        EXPECT(0x30, gbc.readMem(0xbcc5));
        EXPECT(0xa1, gbc.readMem(0xff30));
        // E0 03E5
        gbc.setState(0x6940, 0xee6e, 0xc260, 0xb0ae, 0x2b60, 0xfb09, 0x1, 0x0);
        gbc.writeMem(0x6940, { 0xe0, 0x12 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xee6e, gbc.sp());
        EXPECT(0x6942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xff12));
        // E0 03E6
        gbc.setState(0xb4f0, 0x7eb8, 0x300, 0x73ba, 0x354, 0x26e, 0x0, 0x1);
        gbc.writeMem(0xb4f0, { 0xe0, 0x50 });
        gbc.writeMem(0xff50, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7eb8, gbc.sp());
        EXPECT(0xb4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb4f0));
        EXPECT(0x50, gbc.readMem(0xb4f1));
        EXPECT(0x3, gbc.readMem(0xff50));
    }
