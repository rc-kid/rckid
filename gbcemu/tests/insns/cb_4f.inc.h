    TEST(gbcemu, opcode_cb_4f) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 4F 0000
        gbc.setState(0x6d70, 0x75fd, 0x92e0, 0xc437, 0x5c20, 0x5ddd, 0x1, 0x1);
        gbc.writeMem(0x6d70, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x75fd, gbc.sp());
        EXPECT(0x6d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0001
        gbc.setState(0x99b7, 0x70c0, 0x3b90, 0x2967, 0x3f6b, 0xd4cf, 0x1, 0x1);
        gbc.writeMem(0x99b7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x70c0, gbc.sp());
        EXPECT(0x99b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b7));
        EXPECT(0x4f, gbc.readMem(0x99b8));
        // CB 4F 0002
        gbc.setState(0xb2a1, 0xe0d4, 0xa9e0, 0x7565, 0x77e2, 0xa37f, 0x0, 0x1);
        gbc.writeMem(0xb2a1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe0d4, gbc.sp());
        EXPECT(0xb2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a1));
        EXPECT(0x4f, gbc.readMem(0xb2a2));
        // CB 4F 0003
        gbc.setState(0x4d88, 0xcf61, 0xc660, 0x4d93, 0xb64d, 0x6a0f, 0x1, 0x1);
        gbc.writeMem(0x4d88, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcf61, gbc.sp());
        EXPECT(0x4d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0004
        gbc.setState(0xab8b, 0x245e, 0x61d0, 0x342c, 0x25dd, 0xcf4, 0x0, 0x1);
        gbc.writeMem(0xab8b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x245e, gbc.sp());
        EXPECT(0xab8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab8b));
        EXPECT(0x4f, gbc.readMem(0xab8c));
        // CB 4F 0005
        gbc.setState(0x4444, 0x68fa, 0x2c20, 0x3ac5, 0xb964, 0x390f, 0x1, 0x0);
        gbc.writeMem(0x4444, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x68fa, gbc.sp());
        EXPECT(0x4446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0006
        gbc.setState(0xa004, 0x2152, 0xd0e0, 0xa260, 0xb9dc, 0xd500, 0x1, 0x1);
        gbc.writeMem(0xa004, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2152, gbc.sp());
        EXPECT(0xa006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa004));
        EXPECT(0x4f, gbc.readMem(0xa005));
        // CB 4F 0007
        gbc.setState(0x2126, 0x55f5, 0xf4b0, 0xb3f0, 0xfc51, 0xe5e9, 0x0, 0x1);
        gbc.writeMem(0x2126, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x55f5, gbc.sp());
        EXPECT(0x2128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0008
        gbc.setState(0x2020, 0xece7, 0xa110, 0xaa06, 0xc659, 0x600a, 0x0, 0x0);
        gbc.writeMem(0x2020, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xece7, gbc.sp());
        EXPECT(0x2022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0009
        gbc.setState(0xbe4d, 0xc797, 0x3330, 0x283a, 0x7bb1, 0xa70a, 0x1, 0x0);
        gbc.writeMem(0xbe4d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc797, gbc.sp());
        EXPECT(0xbe4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4d));
        EXPECT(0x4f, gbc.readMem(0xbe4e));
        // CB 4F 000A
        gbc.setState(0x8c55, 0x60a6, 0x4f20, 0xa709, 0xf850, 0x675a, 0x1, 0x0);
        gbc.writeMem(0x8c55, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x60a6, gbc.sp());
        EXPECT(0x8c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c55));
        EXPECT(0x4f, gbc.readMem(0x8c56));
        // CB 4F 000B
        gbc.setState(0x77fd, 0x821, 0x8af0, 0xf835, 0x1963, 0x9b44, 0x1, 0x1);
        gbc.writeMem(0x77fd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x821, gbc.sp());
        EXPECT(0x77ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 000D
        gbc.setState(0xd9b5, 0x6672, 0x99d0, 0x7fcd, 0x462b, 0xfb71, 0x0, 0x1);
        gbc.writeMem(0xd9b5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6672, gbc.sp());
        EXPECT(0xd9b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b5));
        EXPECT(0x4f, gbc.readMem(0xd9b6));
        // CB 4F 000E
        gbc.setState(0x480b, 0x2d47, 0x12b0, 0xe04b, 0x1692, 0x8626, 0x0, 0x0);
        gbc.writeMem(0x480b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2d47, gbc.sp());
        EXPECT(0x480d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 000F
        gbc.setState(0xc9b3, 0x743a, 0xb620, 0xb82a, 0x9319, 0xae81, 0x0, 0x1);
        gbc.writeMem(0xc9b3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x743a, gbc.sp());
        EXPECT(0xc9b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b3));
        EXPECT(0x4f, gbc.readMem(0xc9b4));
        // CB 4F 0010
        gbc.setState(0xcbdd, 0x8aa4, 0xffa0, 0xa0ba, 0x4142, 0x39d1, 0x1, 0x0);
        gbc.writeMem(0xcbdd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8aa4, gbc.sp());
        EXPECT(0xcbdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbdd));
        EXPECT(0x4f, gbc.readMem(0xcbde));
        // CB 4F 0011
        gbc.setState(0x2da9, 0x8228, 0xafe0, 0x735b, 0xf0ce, 0x616d, 0x1, 0x0);
        gbc.writeMem(0x2da9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8228, gbc.sp());
        EXPECT(0x2dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0012
        gbc.setState(0x2883, 0x743f, 0x58a0, 0x44a7, 0xc1a, 0xbcfe, 0x1, 0x0);
        gbc.writeMem(0x2883, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x743f, gbc.sp());
        EXPECT(0x2885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0013
        gbc.setState(0xb20f, 0x8b7c, 0xdb60, 0x4a25, 0xbe17, 0x269b, 0x0, 0x1);
        gbc.writeMem(0xb20f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8b7c, gbc.sp());
        EXPECT(0xb211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20f));
        EXPECT(0x4f, gbc.readMem(0xb210));
        // CB 4F 0014
        gbc.setState(0x31bc, 0x1f23, 0x20d0, 0x76c8, 0xf9f7, 0xd1ff, 0x0, 0x0);
        gbc.writeMem(0x31bc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1f23, gbc.sp());
        EXPECT(0x31be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0015
        gbc.setState(0x6a54, 0x433f, 0xd480, 0xe188, 0x178e, 0xe9af, 0x0, 0x1);
        gbc.writeMem(0x6a54, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x433f, gbc.sp());
        EXPECT(0x6a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0016
        gbc.setState(0xe60e, 0x67cc, 0xd240, 0xeff4, 0xe910, 0x1596, 0x0, 0x0);
        gbc.writeMem(0xe60e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x67cc, gbc.sp());
        EXPECT(0xe610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe60e));
        EXPECT(0x4f, gbc.readMem(0xe60f));
        // CB 4F 0017
        gbc.setState(0x7d97, 0x5c80, 0xd280, 0x7f0f, 0xfb15, 0xf4d7, 0x1, 0x1);
        gbc.writeMem(0x7d97, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5c80, gbc.sp());
        EXPECT(0x7d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0018
        gbc.setState(0x3dd3, 0x94e, 0x80f0, 0xa6a5, 0xc583, 0x4d52, 0x0, 0x0);
        gbc.writeMem(0x3dd3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x94e, gbc.sp());
        EXPECT(0x3dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0019
        gbc.setState(0xb6c8, 0xfdfe, 0x14c0, 0xb027, 0x9002, 0x8462, 0x0, 0x1);
        gbc.writeMem(0xb6c8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfdfe, gbc.sp());
        EXPECT(0xb6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c8));
        EXPECT(0x4f, gbc.readMem(0xb6c9));
        // CB 4F 001A
        gbc.setState(0x5245, 0x7804, 0x1600, 0x5d06, 0x1b20, 0x8286, 0x1, 0x1);
        gbc.writeMem(0x5245, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7804, gbc.sp());
        EXPECT(0x5247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 001B
        gbc.setState(0xab15, 0xf51b, 0xba90, 0x9a0b, 0x5379, 0x722b, 0x1, 0x0);
        gbc.writeMem(0xab15, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf51b, gbc.sp());
        EXPECT(0xab17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab15));
        EXPECT(0x4f, gbc.readMem(0xab16));
        // CB 4F 001C
        gbc.setState(0x4c59, 0x986b, 0x30d0, 0xad7d, 0xdd54, 0x707e, 0x0, 0x1);
        gbc.writeMem(0x4c59, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x986b, gbc.sp());
        EXPECT(0x4c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 001D
        gbc.setState(0xd858, 0x5ab4, 0xa250, 0xa5e8, 0x7ff3, 0xcbad, 0x1, 0x0);
        gbc.writeMem(0xd858, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5ab4, gbc.sp());
        EXPECT(0xd85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd858));
        EXPECT(0x4f, gbc.readMem(0xd859));
        // CB 4F 001E
        gbc.setState(0xbf0e, 0x20d, 0x8380, 0x17bb, 0x2897, 0xe54c, 0x0, 0x1);
        gbc.writeMem(0xbf0e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x20d, gbc.sp());
        EXPECT(0xbf10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0e));
        EXPECT(0x4f, gbc.readMem(0xbf0f));
        // CB 4F 001F
        gbc.setState(0x3bc7, 0x6c54, 0x9fd0, 0x2890, 0xfdd1, 0x3c0d, 0x1, 0x1);
        gbc.writeMem(0x3bc7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6c54, gbc.sp());
        EXPECT(0x3bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0020
        gbc.setState(0xa266, 0x146a, 0xfc00, 0x1387, 0x8397, 0x7cfc, 0x0, 0x0);
        gbc.writeMem(0xa266, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x146a, gbc.sp());
        EXPECT(0xa268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa266));
        EXPECT(0x4f, gbc.readMem(0xa267));
        // CB 4F 0021
        gbc.setState(0x428d, 0xf532, 0x3bf0, 0x3164, 0x3874, 0x99a1, 0x1, 0x1);
        gbc.writeMem(0x428d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0x428f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0022
        gbc.setState(0xe0fa, 0xd6c8, 0x8990, 0x4035, 0x2c52, 0xf2d9, 0x0, 0x1);
        gbc.writeMem(0xe0fa, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd6c8, gbc.sp());
        EXPECT(0xe0fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0fa));
        EXPECT(0x4f, gbc.readMem(0xe0fb));
        // CB 4F 0023
        gbc.setState(0x1588, 0x705c, 0x4080, 0xb51e, 0x6a39, 0x1eea, 0x0, 0x1);
        gbc.writeMem(0x1588, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x705c, gbc.sp());
        EXPECT(0x158a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0024
        gbc.setState(0x57b7, 0x8b96, 0x7c70, 0xa652, 0xf1d9, 0x5f42, 0x0, 0x1);
        gbc.writeMem(0x57b7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8b96, gbc.sp());
        EXPECT(0x57b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0025
        gbc.setState(0x8b9a, 0x70b4, 0x8a00, 0x6084, 0x150f, 0x7183, 0x1, 0x0);
        gbc.writeMem(0x8b9a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x70b4, gbc.sp());
        EXPECT(0x8b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9a));
        EXPECT(0x4f, gbc.readMem(0x8b9b));
        // CB 4F 0026
        gbc.setState(0x2418, 0x5525, 0x6ed0, 0xecf4, 0xeb3b, 0x2508, 0x1, 0x0);
        gbc.writeMem(0x2418, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5525, gbc.sp());
        EXPECT(0x241a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0027
        gbc.setState(0x4768, 0xb71a, 0x5dd0, 0xea86, 0x5762, 0xa224, 0x0, 0x0);
        gbc.writeMem(0x4768, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb71a, gbc.sp());
        EXPECT(0x476a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0028
        gbc.setState(0xa548, 0x7825, 0x61f0, 0x2914, 0x91ed, 0x56b1, 0x1, 0x1);
        gbc.writeMem(0xa548, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7825, gbc.sp());
        EXPECT(0xa54a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa548));
        EXPECT(0x4f, gbc.readMem(0xa549));
        // CB 4F 0029
        gbc.setState(0xd867, 0x6abd, 0xf400, 0xcd6b, 0x1f04, 0xcb38, 0x1, 0x0);
        gbc.writeMem(0xd867, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6abd, gbc.sp());
        EXPECT(0xd869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd867));
        EXPECT(0x4f, gbc.readMem(0xd868));
        // CB 4F 002A
        gbc.setState(0x42f1, 0x53e3, 0xeb90, 0x7c22, 0xf75d, 0xb46d, 0x0, 0x0);
        gbc.writeMem(0x42f1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x53e3, gbc.sp());
        EXPECT(0x42f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 002B
        gbc.setState(0x37da, 0x865a, 0x1d60, 0xec93, 0x2516, 0x6ea7, 0x1, 0x1);
        gbc.writeMem(0x37da, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x865a, gbc.sp());
        EXPECT(0x37dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 002C
        gbc.setState(0x766, 0xf4cc, 0x47d0, 0x9692, 0x91b8, 0xec77, 0x1, 0x1);
        gbc.writeMem(0x766, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf4cc, gbc.sp());
        EXPECT(0x768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 002D
        gbc.setState(0x6cb7, 0xaf7d, 0x5250, 0x92b2, 0x95bc, 0x98df, 0x0, 0x1);
        gbc.writeMem(0x6cb7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xaf7d, gbc.sp());
        EXPECT(0x6cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 002E
        gbc.setState(0x1c48, 0x4d49, 0xb5b0, 0x7fa8, 0x5c94, 0x9f78, 0x1, 0x0);
        gbc.writeMem(0x1c48, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4d49, gbc.sp());
        EXPECT(0x1c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 002F
        gbc.setState(0x6399, 0xa85d, 0xa9c0, 0xdc6b, 0x37f4, 0xd22b, 0x1, 0x0);
        gbc.writeMem(0x6399, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa85d, gbc.sp());
        EXPECT(0x639b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0031
        gbc.setState(0xcff9, 0xe24f, 0xc8c0, 0x86de, 0x69e, 0xb921, 0x0, 0x0);
        gbc.writeMem(0xcff9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe24f, gbc.sp());
        EXPECT(0xcffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff9));
        EXPECT(0x4f, gbc.readMem(0xcffa));
        // CB 4F 0032
        gbc.setState(0x4361, 0xe195, 0x8720, 0x63, 0xd88d, 0xaff8, 0x1, 0x1);
        gbc.writeMem(0x4361, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe195, gbc.sp());
        EXPECT(0x4363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0033
        gbc.setState(0x4b05, 0xe72a, 0x6ba0, 0x194b, 0x3f3d, 0xc75a, 0x1, 0x1);
        gbc.writeMem(0x4b05, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe72a, gbc.sp());
        EXPECT(0x4b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0034
        gbc.setState(0xddd1, 0xe852, 0x9eb0, 0x388c, 0x7635, 0x8e64, 0x0, 0x0);
        gbc.writeMem(0xddd1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe852, gbc.sp());
        EXPECT(0xddd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd1));
        EXPECT(0x4f, gbc.readMem(0xddd2));
        // CB 4F 0035
        gbc.setState(0xc317, 0xb0dc, 0x7a00, 0xd894, 0x81c, 0x3a36, 0x1, 0x0);
        gbc.writeMem(0xc317, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb0dc, gbc.sp());
        EXPECT(0xc319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc317));
        EXPECT(0x4f, gbc.readMem(0xc318));
        // CB 4F 0036
        gbc.setState(0xaa96, 0x5528, 0x4b10, 0xb742, 0x1f44, 0x3e0d, 0x1, 0x0);
        gbc.writeMem(0xaa96, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5528, gbc.sp());
        EXPECT(0xaa98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa96));
        EXPECT(0x4f, gbc.readMem(0xaa97));
        // CB 4F 0037
        gbc.setState(0x3cf, 0x267b, 0xb080, 0xe171, 0x1a90, 0xaae7, 0x1, 0x0);
        gbc.writeMem(0x3cf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x267b, gbc.sp());
        EXPECT(0x3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0038
        gbc.setState(0x4d4b, 0xcec6, 0xae10, 0x4d23, 0x541d, 0xf67d, 0x1, 0x0);
        gbc.writeMem(0x4d4b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcec6, gbc.sp());
        EXPECT(0x4d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0039
        gbc.setState(0x9e0f, 0x95e0, 0x1d80, 0x26ad, 0x7e72, 0xa8dd, 0x1, 0x1);
        gbc.writeMem(0x9e0f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x95e0, gbc.sp());
        EXPECT(0x9e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0f));
        EXPECT(0x4f, gbc.readMem(0x9e10));
        // CB 4F 003A
        gbc.setState(0x8aba, 0x1f01, 0xb750, 0x4b0a, 0xc59, 0xd0af, 0x1, 0x0);
        gbc.writeMem(0x8aba, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1f01, gbc.sp());
        EXPECT(0x8abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aba));
        EXPECT(0x4f, gbc.readMem(0x8abb));
        // CB 4F 003C
        gbc.setState(0xc025, 0x21df, 0xbeb0, 0xb2e0, 0x9058, 0x6eee, 0x0, 0x1);
        gbc.writeMem(0xc025, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x21df, gbc.sp());
        EXPECT(0xc027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc025));
        EXPECT(0x4f, gbc.readMem(0xc026));
        // CB 4F 003D
        gbc.setState(0xa913, 0xfe31, 0x4ea0, 0x9ca2, 0x34cf, 0xaf0b, 0x1, 0x1);
        gbc.writeMem(0xa913, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfe31, gbc.sp());
        EXPECT(0xa915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa913));
        EXPECT(0x4f, gbc.readMem(0xa914));
        // CB 4F 003E
        gbc.setState(0x7210, 0x4b43, 0x2180, 0xfc7d, 0x1831, 0x859b, 0x1, 0x0);
        gbc.writeMem(0x7210, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4b43, gbc.sp());
        EXPECT(0x7212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 003F
        gbc.setState(0xd9d4, 0x365d, 0xc8d0, 0xe6d5, 0xc187, 0x6db5, 0x0, 0x1);
        gbc.writeMem(0xd9d4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x365d, gbc.sp());
        EXPECT(0xd9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d4));
        EXPECT(0x4f, gbc.readMem(0xd9d5));
        // CB 4F 0040
        gbc.setState(0xd02a, 0x1cf7, 0x5120, 0x9151, 0x25f7, 0x76cb, 0x1, 0x0);
        gbc.writeMem(0xd02a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1cf7, gbc.sp());
        EXPECT(0xd02c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02a));
        EXPECT(0x4f, gbc.readMem(0xd02b));
        // CB 4F 0041
        gbc.setState(0xca31, 0xb3c8, 0xaef0, 0xcf37, 0x9cce, 0x7d67, 0x1, 0x1);
        gbc.writeMem(0xca31, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb3c8, gbc.sp());
        EXPECT(0xca33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca31));
        EXPECT(0x4f, gbc.readMem(0xca32));
        // CB 4F 0042
        gbc.setState(0x349, 0x8093, 0xb360, 0x2065, 0x6af1, 0xd975, 0x0, 0x1);
        gbc.writeMem(0x349, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8093, gbc.sp());
        EXPECT(0x34b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0043
        gbc.setState(0x5619, 0x1fca, 0xfde0, 0x582c, 0xf22c, 0x6a61, 0x1, 0x1);
        gbc.writeMem(0x5619, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1fca, gbc.sp());
        EXPECT(0x561b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0044
        gbc.setState(0x7b33, 0xfa5c, 0x3310, 0x49a0, 0xb268, 0x7651, 0x0, 0x1);
        gbc.writeMem(0x7b33, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfa5c, gbc.sp());
        EXPECT(0x7b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0046
        gbc.setState(0x8834, 0xb227, 0x6c00, 0x77b0, 0xbb3e, 0x973b, 0x0, 0x1);
        gbc.writeMem(0x8834, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb227, gbc.sp());
        EXPECT(0x8836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8834));
        EXPECT(0x4f, gbc.readMem(0x8835));
        // CB 4F 0047
        gbc.setState(0xceb, 0xf1ec, 0x78b0, 0x71c6, 0x8c24, 0x1dfa, 0x1, 0x1);
        gbc.writeMem(0xceb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf1ec, gbc.sp());
        EXPECT(0xced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0048
        gbc.setState(0xa3eb, 0xe123, 0xf620, 0xce24, 0x3c10, 0x82e0, 0x0, 0x0);
        gbc.writeMem(0xa3eb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe123, gbc.sp());
        EXPECT(0xa3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3eb));
        EXPECT(0x4f, gbc.readMem(0xa3ec));
        // CB 4F 0049
        gbc.setState(0x1f74, 0x7a0e, 0x9ea0, 0xa2b9, 0xdb1a, 0x551c, 0x0, 0x1);
        gbc.writeMem(0x1f74, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7a0e, gbc.sp());
        EXPECT(0x1f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 004A
        gbc.setState(0xd4d5, 0x9b30, 0x8610, 0xe4e9, 0xba43, 0x2744, 0x1, 0x1);
        gbc.writeMem(0xd4d5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9b30, gbc.sp());
        EXPECT(0xd4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d5));
        EXPECT(0x4f, gbc.readMem(0xd4d6));
        // CB 4F 004B
        gbc.setState(0x19cd, 0xa9ac, 0x1680, 0x27bc, 0x3f29, 0x522d, 0x1, 0x0);
        gbc.writeMem(0x19cd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa9ac, gbc.sp());
        EXPECT(0x19cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 004C
        gbc.setState(0xe9c0, 0xa981, 0xb9e0, 0x539f, 0xa426, 0x5978, 0x1, 0x0);
        gbc.writeMem(0xe9c0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa981, gbc.sp());
        EXPECT(0xe9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c0));
        EXPECT(0x4f, gbc.readMem(0xe9c1));
        // CB 4F 004D
        gbc.setState(0x3730, 0x739a, 0x3180, 0x39ab, 0x8241, 0x2cfa, 0x0, 0x0);
        gbc.writeMem(0x3730, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x739a, gbc.sp());
        EXPECT(0x3732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 004E
        gbc.setState(0x426f, 0xe42a, 0xed70, 0xbd8e, 0xf2bf, 0xbcde, 0x0, 0x0);
        gbc.writeMem(0x426f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe42a, gbc.sp());
        EXPECT(0x4271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 004F
        gbc.setState(0x45c8, 0x2243, 0x130, 0x8142, 0xe886, 0x7766, 0x1, 0x1);
        gbc.writeMem(0x45c8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2243, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0050
        gbc.setState(0x588b, 0xfdc2, 0xbc30, 0xdb6b, 0x778, 0x660b, 0x1, 0x1);
        gbc.writeMem(0x588b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfdc2, gbc.sp());
        EXPECT(0x588d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0051
        gbc.setState(0x3f3, 0x3824, 0x7f00, 0x58df, 0xf1f5, 0x669, 0x0, 0x1);
        gbc.writeMem(0x3f3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3824, gbc.sp());
        EXPECT(0x3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0052
        gbc.setState(0x712c, 0x4da1, 0x8470, 0xa822, 0xa9a, 0xcf2f, 0x0, 0x1);
        gbc.writeMem(0x712c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4da1, gbc.sp());
        EXPECT(0x712e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0053
        gbc.setState(0x4f7, 0x768f, 0x60a0, 0xa87f, 0x186d, 0x2314, 0x0, 0x1);
        gbc.writeMem(0x4f7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x768f, gbc.sp());
        EXPECT(0x4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0055
        gbc.setState(0x7d6c, 0xdef8, 0xa470, 0xbc3e, 0x8085, 0x1ad5, 0x0, 0x0);
        gbc.writeMem(0x7d6c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdef8, gbc.sp());
        EXPECT(0x7d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0056
        gbc.setState(0x156d, 0x152, 0xd7a0, 0x8432, 0x3084, 0x87ac, 0x1, 0x1);
        gbc.writeMem(0x156d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x152, gbc.sp());
        EXPECT(0x156f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0057
        gbc.setState(0xb52d, 0x257a, 0x1890, 0x7a73, 0xce83, 0xdec3, 0x1, 0x0);
        gbc.writeMem(0xb52d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x257a, gbc.sp());
        EXPECT(0xb52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb52d));
        EXPECT(0x4f, gbc.readMem(0xb52e));
        // CB 4F 0058
        gbc.setState(0x64a6, 0x125f, 0xc720, 0xa55, 0xffbe, 0xf8dd, 0x1, 0x0);
        gbc.writeMem(0x64a6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x125f, gbc.sp());
        EXPECT(0x64a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0059
        gbc.setState(0x72ea, 0xad2b, 0x9ee0, 0xbe66, 0x2097, 0xd0b2, 0x0, 0x1);
        gbc.writeMem(0x72ea, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xad2b, gbc.sp());
        EXPECT(0x72ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 005A
        gbc.setState(0x51af, 0x46fd, 0xd240, 0x46af, 0xcc45, 0xe034, 0x1, 0x1);
        gbc.writeMem(0x51af, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x46fd, gbc.sp());
        EXPECT(0x51b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 005B
        gbc.setState(0xc48e, 0x7794, 0x3490, 0x6db, 0xd0f5, 0x281b, 0x1, 0x1);
        gbc.writeMem(0xc48e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7794, gbc.sp());
        EXPECT(0xc490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48e));
        EXPECT(0x4f, gbc.readMem(0xc48f));
        // CB 4F 005C
        gbc.setState(0x40fe, 0x88b, 0xb220, 0x72cc, 0x188f, 0x559d, 0x0, 0x0);
        gbc.writeMem(0x40fe, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x88b, gbc.sp());
        EXPECT(0x4100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 005D
        gbc.setState(0xca8e, 0xb060, 0x6f80, 0x7871, 0xb087, 0xb105, 0x1, 0x0);
        gbc.writeMem(0xca8e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb060, gbc.sp());
        EXPECT(0xca90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca8e));
        EXPECT(0x4f, gbc.readMem(0xca8f));
        // CB 4F 005E
        gbc.setState(0x53, 0x7243, 0x4ad0, 0xbfb5, 0x755f, 0xaa42, 0x1, 0x1);
        gbc.writeMem(0x53, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7243, gbc.sp());
        EXPECT(0x55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 005F
        gbc.setState(0x538, 0xd659, 0x72a0, 0x542b, 0x1a2b, 0x33be, 0x1, 0x0);
        gbc.writeMem(0x538, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd659, gbc.sp());
        EXPECT(0x53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0060
        gbc.setState(0xed55, 0x4f31, 0x6dd0, 0xc474, 0xbe11, 0x599e, 0x0, 0x1);
        gbc.writeMem(0xed55, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4f31, gbc.sp());
        EXPECT(0xed57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed55));
        EXPECT(0x4f, gbc.readMem(0xed56));
        // CB 4F 0061
        gbc.setState(0x62f, 0xa750, 0x80a0, 0x55a9, 0x6a77, 0xd196, 0x1, 0x1);
        gbc.writeMem(0x62f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa750, gbc.sp());
        EXPECT(0x631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0062
        gbc.setState(0x67a5, 0xed79, 0x7b40, 0x7afe, 0x1de2, 0x97ea, 0x1, 0x0);
        gbc.writeMem(0x67a5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xed79, gbc.sp());
        EXPECT(0x67a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0063
        gbc.setState(0xbec2, 0x7fde, 0xece0, 0x465e, 0x78fc, 0xc626, 0x0, 0x0);
        gbc.writeMem(0xbec2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7fde, gbc.sp());
        EXPECT(0xbec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec2));
        EXPECT(0x4f, gbc.readMem(0xbec3));
        // CB 4F 0064
        gbc.setState(0xca5b, 0x93d4, 0xb9d0, 0x49f9, 0x412e, 0xf8aa, 0x1, 0x0);
        gbc.writeMem(0xca5b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x93d4, gbc.sp());
        EXPECT(0xca5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5b));
        EXPECT(0x4f, gbc.readMem(0xca5c));
        // CB 4F 0065
        gbc.setState(0x64fa, 0x554, 0x380, 0x9790, 0xd029, 0x25cf, 0x0, 0x1);
        gbc.writeMem(0x64fa, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x554, gbc.sp());
        EXPECT(0x64fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0066
        gbc.setState(0xa453, 0x2214, 0x86d0, 0xb562, 0xa1dc, 0x8cf3, 0x1, 0x1);
        gbc.writeMem(0xa453, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2214, gbc.sp());
        EXPECT(0xa455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa453));
        EXPECT(0x4f, gbc.readMem(0xa454));
        // CB 4F 0067
        gbc.setState(0x31e3, 0xda, 0x1980, 0x8924, 0xd24e, 0x6406, 0x0, 0x1);
        gbc.writeMem(0x31e3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xda, gbc.sp());
        EXPECT(0x31e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0068
        gbc.setState(0x6f02, 0x257f, 0xc810, 0x7072, 0x50bb, 0x7676, 0x0, 0x1);
        gbc.writeMem(0x6f02, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x257f, gbc.sp());
        EXPECT(0x6f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0069
        gbc.setState(0x4f0b, 0x239b, 0x7310, 0xcfe2, 0xba49, 0x5a62, 0x1, 0x0);
        gbc.writeMem(0x4f0b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x239b, gbc.sp());
        EXPECT(0x4f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 006A
        gbc.setState(0xa7b6, 0x9f97, 0x9980, 0xe375, 0x7d62, 0xd92e, 0x0, 0x0);
        gbc.writeMem(0xa7b6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9f97, gbc.sp());
        EXPECT(0xa7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b6));
        EXPECT(0x4f, gbc.readMem(0xa7b7));
        // CB 4F 006B
        gbc.setState(0xeb75, 0x928b, 0x1de0, 0x2d36, 0xfdc8, 0xb9c5, 0x1, 0x0);
        gbc.writeMem(0xeb75, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x928b, gbc.sp());
        EXPECT(0xeb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb75));
        EXPECT(0x4f, gbc.readMem(0xeb76));
        // CB 4F 006C
        gbc.setState(0xe1f2, 0x3c44, 0x54e0, 0x3076, 0x11e6, 0x7a13, 0x1, 0x0);
        gbc.writeMem(0xe1f2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3c44, gbc.sp());
        EXPECT(0xe1f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f2));
        EXPECT(0x4f, gbc.readMem(0xe1f3));
        // CB 4F 006D
        gbc.setState(0xcb8e, 0x4a96, 0x21c0, 0xd944, 0x936a, 0x6826, 0x1, 0x0);
        gbc.writeMem(0xcb8e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4a96, gbc.sp());
        EXPECT(0xcb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8e));
        EXPECT(0x4f, gbc.readMem(0xcb8f));
        // CB 4F 006E
        gbc.setState(0x7ca8, 0x1650, 0x6ae0, 0xa88b, 0x9704, 0x7cf2, 0x1, 0x0);
        gbc.writeMem(0x7ca8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1650, gbc.sp());
        EXPECT(0x7caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 006F
        gbc.setState(0x53f3, 0x3c6c, 0xe150, 0x45bf, 0xa746, 0x175d, 0x1, 0x1);
        gbc.writeMem(0x53f3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3c6c, gbc.sp());
        EXPECT(0x53f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0071
        gbc.setState(0x47de, 0xb4c6, 0x6380, 0x8cf, 0xcb32, 0xca7d, 0x0, 0x0);
        gbc.writeMem(0x47de, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb4c6, gbc.sp());
        EXPECT(0x47e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0072
        gbc.setState(0x5601, 0xea47, 0xf470, 0x9b5b, 0x90a7, 0x8a36, 0x0, 0x0);
        gbc.writeMem(0x5601, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xea47, gbc.sp());
        EXPECT(0x5603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0073
        gbc.setState(0x11fa, 0xda3b, 0x25b0, 0xc9c5, 0xdf2d, 0xd277, 0x1, 0x1);
        gbc.writeMem(0x11fa, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xda3b, gbc.sp());
        EXPECT(0x11fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0074
        gbc.setState(0x1a9d, 0x7895, 0xed00, 0x35a, 0x8636, 0x1e28, 0x0, 0x0);
        gbc.writeMem(0x1a9d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7895, gbc.sp());
        EXPECT(0x1a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0075
        gbc.setState(0xa274, 0xa84b, 0x51a0, 0x3d1, 0xbc7, 0x3960, 0x0, 0x1);
        gbc.writeMem(0xa274, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa84b, gbc.sp());
        EXPECT(0xa276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa274));
        EXPECT(0x4f, gbc.readMem(0xa275));
        // CB 4F 0076
        gbc.setState(0xab8e, 0x87ac, 0x6e00, 0x15dd, 0x9043, 0x8be8, 0x1, 0x0);
        gbc.writeMem(0xab8e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x87ac, gbc.sp());
        EXPECT(0xab90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab8e));
        EXPECT(0x4f, gbc.readMem(0xab8f));
        // CB 4F 0077
        gbc.setState(0x4931, 0x3866, 0x3580, 0x5e27, 0x70fe, 0x50aa, 0x1, 0x0);
        gbc.writeMem(0x4931, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3866, gbc.sp());
        EXPECT(0x4933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0078
        gbc.setState(0x8e6c, 0x33c9, 0x8930, 0xbbbc, 0x9f0, 0xbc3f, 0x0, 0x1);
        gbc.writeMem(0x8e6c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x33c9, gbc.sp());
        EXPECT(0x8e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6c));
        EXPECT(0x4f, gbc.readMem(0x8e6d));
        // CB 4F 0079
        gbc.setState(0x94cc, 0xf298, 0x84a0, 0xb2e, 0xdaa0, 0x9ba6, 0x1, 0x0);
        gbc.writeMem(0x94cc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf298, gbc.sp());
        EXPECT(0x94ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cc));
        EXPECT(0x4f, gbc.readMem(0x94cd));
        // CB 4F 007A
        gbc.setState(0x170e, 0xe49b, 0xa5d0, 0x911d, 0xa4cd, 0x3c0f, 0x1, 0x0);
        gbc.writeMem(0x170e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe49b, gbc.sp());
        EXPECT(0x1710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 007B
        gbc.setState(0x3e1b, 0xa7c3, 0xc2b0, 0x46ed, 0x9a1f, 0x612d, 0x1, 0x0);
        gbc.writeMem(0x3e1b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa7c3, gbc.sp());
        EXPECT(0x3e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 007C
        gbc.setState(0x6c27, 0x76c3, 0x5740, 0x9630, 0x701c, 0xf544, 0x1, 0x0);
        gbc.writeMem(0x6c27, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x76c3, gbc.sp());
        EXPECT(0x6c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 007D
        gbc.setState(0x13da, 0x11d4, 0x4af0, 0xba84, 0x1362, 0xafe3, 0x1, 0x1);
        gbc.writeMem(0x13da, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x11d4, gbc.sp());
        EXPECT(0x13dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 007E
        gbc.setState(0x4ada, 0x7045, 0x6f00, 0xdcf2, 0xa904, 0x8765, 0x0, 0x0);
        gbc.writeMem(0x4ada, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7045, gbc.sp());
        EXPECT(0x4adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 007F
        gbc.setState(0xb0a7, 0x120c, 0xbad0, 0x1302, 0xb315, 0x35fd, 0x0, 0x1);
        gbc.writeMem(0xb0a7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x120c, gbc.sp());
        EXPECT(0xb0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a7));
        EXPECT(0x4f, gbc.readMem(0xb0a8));
        // CB 4F 0080
        gbc.setState(0xaa3d, 0x8c9e, 0x6bc0, 0xf7f1, 0x7e73, 0xf200, 0x1, 0x1);
        gbc.writeMem(0xaa3d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8c9e, gbc.sp());
        EXPECT(0xaa3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa3d));
        EXPECT(0x4f, gbc.readMem(0xaa3e));
        // CB 4F 0083
        gbc.setState(0x8947, 0x9d5a, 0x5a50, 0xec88, 0xc079, 0x9dd, 0x0, 0x1);
        gbc.writeMem(0x8947, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9d5a, gbc.sp());
        EXPECT(0x8949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8947));
        EXPECT(0x4f, gbc.readMem(0x8948));
        // CB 4F 0084
        gbc.setState(0x4bc9, 0x4c69, 0x17b0, 0xe32c, 0x6b63, 0xeb78, 0x1, 0x1);
        gbc.writeMem(0x4bc9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4c69, gbc.sp());
        EXPECT(0x4bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0085
        gbc.setState(0x2e9e, 0x85b6, 0xacf0, 0x7810, 0xd002, 0x9958, 0x1, 0x0);
        gbc.writeMem(0x2e9e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x85b6, gbc.sp());
        EXPECT(0x2ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0086
        gbc.setState(0x77c6, 0xb161, 0xaf00, 0xa52d, 0x4327, 0x5c0d, 0x0, 0x1);
        gbc.writeMem(0x77c6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb161, gbc.sp());
        EXPECT(0x77c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0087
        gbc.setState(0x82f3, 0x44fb, 0x2fa0, 0xd1a8, 0x3674, 0xc00a, 0x1, 0x0);
        gbc.writeMem(0x82f3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x44fb, gbc.sp());
        EXPECT(0x82f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f3));
        EXPECT(0x4f, gbc.readMem(0x82f4));
        // CB 4F 0088
        gbc.setState(0x578c, 0x813c, 0x4b90, 0xcac2, 0x61f8, 0x7048, 0x1, 0x0);
        gbc.writeMem(0x578c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x813c, gbc.sp());
        EXPECT(0x578e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0089
        gbc.setState(0xe48, 0x18c8, 0xd3b0, 0x89b8, 0xb43d, 0x3ca3, 0x1, 0x0);
        gbc.writeMem(0xe48, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x18c8, gbc.sp());
        EXPECT(0xe4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 008A
        gbc.setState(0x15f2, 0xe05e, 0x76b0, 0x49ad, 0xc47c, 0xb6c5, 0x1, 0x1);
        gbc.writeMem(0x15f2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe05e, gbc.sp());
        EXPECT(0x15f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 008B
        gbc.setState(0x5551, 0xeceb, 0x7590, 0xb3fd, 0xc14e, 0xb0b6, 0x0, 0x1);
        gbc.writeMem(0x5551, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xeceb, gbc.sp());
        EXPECT(0x5553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 008C
        gbc.setState(0x655b, 0x3bd3, 0x4b60, 0x6b0b, 0xffc4, 0x1fbb, 0x0, 0x0);
        gbc.writeMem(0x655b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3bd3, gbc.sp());
        EXPECT(0x655d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 008D
        gbc.setState(0x3825, 0xbc6e, 0x79d0, 0xb8da, 0x8b89, 0xa30f, 0x1, 0x1);
        gbc.writeMem(0x3825, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbc6e, gbc.sp());
        EXPECT(0x3827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 008E
        gbc.setState(0xa8a5, 0x8cdc, 0x7060, 0x844f, 0x57cb, 0xcf4e, 0x1, 0x1);
        gbc.writeMem(0xa8a5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8cdc, gbc.sp());
        EXPECT(0xa8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a5));
        EXPECT(0x4f, gbc.readMem(0xa8a6));
        // CB 4F 008F
        gbc.setState(0x58d4, 0xf83b, 0x5bc0, 0xb52b, 0xb4ee, 0x958d, 0x1, 0x1);
        gbc.writeMem(0x58d4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf83b, gbc.sp());
        EXPECT(0x58d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0090
        gbc.setState(0xecdf, 0xee1d, 0xa610, 0xd6f6, 0x6d17, 0x8add, 0x1, 0x0);
        gbc.writeMem(0xecdf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xee1d, gbc.sp());
        EXPECT(0xece1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecdf));
        EXPECT(0x4f, gbc.readMem(0xece0));
        // CB 4F 0091
        gbc.setState(0x532a, 0x5e1a, 0x5200, 0xd04e, 0x9c70, 0x76e7, 0x0, 0x0);
        gbc.writeMem(0x532a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5e1a, gbc.sp());
        EXPECT(0x532c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0092
        gbc.setState(0xc7e, 0x24d3, 0xe3a0, 0xa4c, 0xb6c8, 0xf26a, 0x1, 0x0);
        gbc.writeMem(0xc7e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x24d3, gbc.sp());
        EXPECT(0xc80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0093
        gbc.setState(0x444c, 0xb53a, 0x5210, 0x29d6, 0x51f8, 0xfbff, 0x1, 0x1);
        gbc.writeMem(0x444c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb53a, gbc.sp());
        EXPECT(0x444e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0094
        gbc.setState(0x9733, 0x2b36, 0x7370, 0xfec5, 0x9190, 0x7545, 0x1, 0x1);
        gbc.writeMem(0x9733, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2b36, gbc.sp());
        EXPECT(0x9735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9733));
        EXPECT(0x4f, gbc.readMem(0x9734));
        // CB 4F 0095
        gbc.setState(0xa64c, 0xe59f, 0x66a0, 0x1cac, 0x5c, 0x9eaa, 0x0, 0x0);
        gbc.writeMem(0xa64c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe59f, gbc.sp());
        EXPECT(0xa64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64c));
        EXPECT(0x4f, gbc.readMem(0xa64d));
        // CB 4F 0096
        gbc.setState(0x693e, 0x531b, 0xa120, 0x2032, 0xc253, 0x6b6e, 0x1, 0x0);
        gbc.writeMem(0x693e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x531b, gbc.sp());
        EXPECT(0x6940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0097
        gbc.setState(0x8718, 0xd417, 0x35c0, 0xa072, 0xf07c, 0x4d9f, 0x0, 0x1);
        gbc.writeMem(0x8718, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd417, gbc.sp());
        EXPECT(0x871a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8718));
        EXPECT(0x4f, gbc.readMem(0x8719));
        // CB 4F 009A
        gbc.setState(0x4c10, 0x93db, 0x9d60, 0x42e3, 0x86bd, 0xabf, 0x1, 0x0);
        gbc.writeMem(0x4c10, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x93db, gbc.sp());
        EXPECT(0x4c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 009B
        gbc.setState(0x293, 0xc93f, 0x63f0, 0x2aa6, 0xb8bd, 0x7120, 0x0, 0x0);
        gbc.writeMem(0x293, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc93f, gbc.sp());
        EXPECT(0x295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 009C
        gbc.setState(0x8926, 0x6112, 0xd1f0, 0x2488, 0x2f1b, 0x122f, 0x1, 0x0);
        gbc.writeMem(0x8926, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6112, gbc.sp());
        EXPECT(0x8928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8926));
        EXPECT(0x4f, gbc.readMem(0x8927));
        // CB 4F 009D
        gbc.setState(0x7ff6, 0xb84a, 0xc0a0, 0x4066, 0xc6f7, 0x1bee, 0x1, 0x1);
        gbc.writeMem(0x7ff6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb84a, gbc.sp());
        EXPECT(0x7ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 009E
        gbc.setState(0x4252, 0xea20, 0xb840, 0x3be1, 0xb500, 0xa9a6, 0x0, 0x1);
        gbc.writeMem(0x4252, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xea20, gbc.sp());
        EXPECT(0x4254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 009F
        gbc.setState(0xddde, 0x24c0, 0x2970, 0x5e7f, 0xc2f6, 0x736a, 0x1, 0x0);
        gbc.writeMem(0xddde, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x24c0, gbc.sp());
        EXPECT(0xdde0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddde));
        EXPECT(0x4f, gbc.readMem(0xdddf));
        // CB 4F 00A0
        gbc.setState(0xba41, 0x7d3d, 0x5d30, 0x4ba0, 0xbd7e, 0x2c53, 0x0, 0x1);
        gbc.writeMem(0xba41, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7d3d, gbc.sp());
        EXPECT(0xba43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba41));
        EXPECT(0x4f, gbc.readMem(0xba42));
        // CB 4F 00A1
        gbc.setState(0xe175, 0x4d74, 0x4540, 0x1f3f, 0xff26, 0xda7f, 0x1, 0x0);
        gbc.writeMem(0xe175, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4d74, gbc.sp());
        EXPECT(0xe177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe175));
        EXPECT(0x4f, gbc.readMem(0xe176));
        // CB 4F 00A2
        gbc.setState(0xab05, 0x95cb, 0x8610, 0x9677, 0xf9ec, 0x2466, 0x1, 0x1);
        gbc.writeMem(0xab05, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x95cb, gbc.sp());
        EXPECT(0xab07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab05));
        EXPECT(0x4f, gbc.readMem(0xab06));
        // CB 4F 00A3
        gbc.setState(0x531c, 0x865f, 0x4bf0, 0xac12, 0xa88d, 0x43fa, 0x0, 0x0);
        gbc.writeMem(0x531c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x865f, gbc.sp());
        EXPECT(0x531e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00A4
        gbc.setState(0x2f9e, 0xe593, 0xd140, 0xddb, 0x4ade, 0x522a, 0x1, 0x0);
        gbc.writeMem(0x2f9e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe593, gbc.sp());
        EXPECT(0x2fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00A5
        gbc.setState(0xc249, 0x99c4, 0xbcb0, 0x495c, 0xc2be, 0x417c, 0x1, 0x1);
        gbc.writeMem(0xc249, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x99c4, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc249));
        EXPECT(0x4f, gbc.readMem(0xc24a));
        // CB 4F 00A6
        gbc.setState(0xac65, 0xdd95, 0xeff0, 0xf7c7, 0x49f, 0x6cc8, 0x1, 0x1);
        gbc.writeMem(0xac65, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdd95, gbc.sp());
        EXPECT(0xac67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac65));
        EXPECT(0x4f, gbc.readMem(0xac66));
        // CB 4F 00A7
        gbc.setState(0xa58d, 0x5cc2, 0x14b0, 0xc35e, 0xb439, 0xed0, 0x1, 0x1);
        gbc.writeMem(0xa58d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5cc2, gbc.sp());
        EXPECT(0xa58f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58d));
        EXPECT(0x4f, gbc.readMem(0xa58e));
        // CB 4F 00A8
        gbc.setState(0x7b77, 0xbdb3, 0xbc20, 0x5132, 0xb4fe, 0x7077, 0x1, 0x0);
        gbc.writeMem(0x7b77, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbdb3, gbc.sp());
        EXPECT(0x7b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00A9
        gbc.setState(0x8ba0, 0x2c7b, 0xc2d0, 0x893a, 0x6434, 0xa62a, 0x0, 0x1);
        gbc.writeMem(0x8ba0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2c7b, gbc.sp());
        EXPECT(0x8ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba0));
        EXPECT(0x4f, gbc.readMem(0x8ba1));
        // CB 4F 00AA
        gbc.setState(0x10cc, 0xf242, 0x5ce0, 0xd7f5, 0x2a4e, 0x36f, 0x0, 0x0);
        gbc.writeMem(0x10cc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf242, gbc.sp());
        EXPECT(0x10ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00AB
        gbc.setState(0xc0a8, 0x71b6, 0x5350, 0xbae5, 0xa5e4, 0x263f, 0x0, 0x0);
        gbc.writeMem(0xc0a8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x71b6, gbc.sp());
        EXPECT(0xc0aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a8));
        EXPECT(0x4f, gbc.readMem(0xc0a9));
        // CB 4F 00AC
        gbc.setState(0x9ae8, 0x6310, 0xac00, 0xbfd2, 0x5d07, 0xed0c, 0x0, 0x1);
        gbc.writeMem(0x9ae8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6310, gbc.sp());
        EXPECT(0x9aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae8));
        EXPECT(0x4f, gbc.readMem(0x9ae9));
        // CB 4F 00AD
        gbc.setState(0x7f7, 0x5bee, 0x4cd0, 0x5845, 0xd483, 0x4c12, 0x1, 0x0);
        gbc.writeMem(0x7f7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5bee, gbc.sp());
        EXPECT(0x7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00AF
        gbc.setState(0xad5b, 0xd147, 0x69b0, 0xeee9, 0x26f, 0xbe21, 0x1, 0x1);
        gbc.writeMem(0xad5b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd147, gbc.sp());
        EXPECT(0xad5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5b));
        EXPECT(0x4f, gbc.readMem(0xad5c));
        // CB 4F 00B0
        gbc.setState(0xeacc, 0x440e, 0xba60, 0xa227, 0x25a8, 0x3dc0, 0x0, 0x1);
        gbc.writeMem(0xeacc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x440e, gbc.sp());
        EXPECT(0xeace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacc));
        EXPECT(0x4f, gbc.readMem(0xeacd));
        // CB 4F 00B1
        gbc.setState(0xca9, 0xc52b, 0x3390, 0xeb76, 0x6477, 0x521e, 0x1, 0x1);
        gbc.writeMem(0xca9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc52b, gbc.sp());
        EXPECT(0xcab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00B2
        gbc.setState(0xb5fc, 0x37c4, 0xd590, 0x47a9, 0x5d75, 0x7536, 0x1, 0x0);
        gbc.writeMem(0xb5fc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x37c4, gbc.sp());
        EXPECT(0xb5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5fc));
        EXPECT(0x4f, gbc.readMem(0xb5fd));
        // CB 4F 00B3
        gbc.setState(0x7699, 0x7710, 0x1130, 0x5f0d, 0x787d, 0x839d, 0x0, 0x0);
        gbc.writeMem(0x7699, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7710, gbc.sp());
        EXPECT(0x769b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00B4
        gbc.setState(0x9744, 0xb359, 0xc630, 0x2d57, 0xa8b5, 0xeb1, 0x0, 0x1);
        gbc.writeMem(0x9744, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb359, gbc.sp());
        EXPECT(0x9746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9744));
        EXPECT(0x4f, gbc.readMem(0x9745));
        // CB 4F 00B5
        gbc.setState(0xa890, 0xd639, 0x3840, 0xafca, 0x3a6b, 0xffdd, 0x1, 0x0);
        gbc.writeMem(0xa890, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd639, gbc.sp());
        EXPECT(0xa892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa890));
        EXPECT(0x4f, gbc.readMem(0xa891));
        // CB 4F 00B6
        gbc.setState(0x60, 0xd7b6, 0x61f0, 0x78a, 0x7a22, 0xe2d6, 0x0, 0x0);
        gbc.writeMem(0x60, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd7b6, gbc.sp());
        EXPECT(0x62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00B7
        gbc.setState(0xe69e, 0x70a6, 0xe850, 0xe19f, 0x52d3, 0x7cec, 0x1, 0x0);
        gbc.writeMem(0xe69e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x70a6, gbc.sp());
        EXPECT(0xe6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69e));
        EXPECT(0x4f, gbc.readMem(0xe69f));
        // CB 4F 00B8
        gbc.setState(0xb67e, 0xd0a6, 0xe1b0, 0xf148, 0xc3d7, 0x5137, 0x1, 0x0);
        gbc.writeMem(0xb67e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd0a6, gbc.sp());
        EXPECT(0xb680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67e));
        EXPECT(0x4f, gbc.readMem(0xb67f));
        // CB 4F 00B9
        gbc.setState(0x72ac, 0x2cfc, 0x2c80, 0xb799, 0x5636, 0xc36f, 0x1, 0x1);
        gbc.writeMem(0x72ac, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2cfc, gbc.sp());
        EXPECT(0x72ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00BA
        gbc.setState(0x6d48, 0xa082, 0x1ea0, 0x2c6e, 0x1813, 0xe34, 0x0, 0x1);
        gbc.writeMem(0x6d48, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa082, gbc.sp());
        EXPECT(0x6d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00BB
        gbc.setState(0x275b, 0x4aa1, 0x6c70, 0xed2b, 0x6552, 0x6f61, 0x1, 0x1);
        gbc.writeMem(0x275b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4aa1, gbc.sp());
        EXPECT(0x275d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00BC
        gbc.setState(0xcae0, 0x29bc, 0x23d0, 0x3ac, 0x1727, 0x2db0, 0x1, 0x0);
        gbc.writeMem(0xcae0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x29bc, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae0));
        EXPECT(0x4f, gbc.readMem(0xcae1));
        // CB 4F 00BD
        gbc.setState(0x8fa5, 0x9045, 0x150, 0x3bda, 0xe017, 0x4528, 0x0, 0x0);
        gbc.writeMem(0x8fa5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9045, gbc.sp());
        EXPECT(0x8fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa5));
        EXPECT(0x4f, gbc.readMem(0x8fa6));
        // CB 4F 00BE
        gbc.setState(0x1ef7, 0x849e, 0x51c0, 0x6726, 0xc49e, 0x4c7f, 0x1, 0x1);
        gbc.writeMem(0x1ef7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x849e, gbc.sp());
        EXPECT(0x1ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00BF
        gbc.setState(0x8d88, 0x4f2b, 0x2d30, 0xf81b, 0xabe5, 0x392a, 0x0, 0x1);
        gbc.writeMem(0x8d88, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4f2b, gbc.sp());
        EXPECT(0x8d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d88));
        EXPECT(0x4f, gbc.readMem(0x8d89));
        // CB 4F 00C0
        gbc.setState(0x90c9, 0x4cee, 0xb880, 0x8837, 0x495, 0x38b7, 0x0, 0x0);
        gbc.writeMem(0x90c9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4cee, gbc.sp());
        EXPECT(0x90cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c9));
        EXPECT(0x4f, gbc.readMem(0x90ca));
        // CB 4F 00C1
        gbc.setState(0x90c4, 0xb21f, 0x5be0, 0x16ca, 0xd952, 0xed33, 0x0, 0x0);
        gbc.writeMem(0x90c4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb21f, gbc.sp());
        EXPECT(0x90c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c4));
        EXPECT(0x4f, gbc.readMem(0x90c5));
        // CB 4F 00C2
        gbc.setState(0x679e, 0xf3fe, 0xd560, 0xb2dc, 0xca9, 0xb4f1, 0x1, 0x0);
        gbc.writeMem(0x679e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf3fe, gbc.sp());
        EXPECT(0x67a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00C3
        gbc.setState(0x554d, 0x5534, 0x2740, 0xd173, 0x2f5d, 0xe22b, 0x0, 0x0);
        gbc.writeMem(0x554d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5534, gbc.sp());
        EXPECT(0x554f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00C4
        gbc.setState(0x96c2, 0xb8dd, 0xc6a0, 0x8ef9, 0x202e, 0x426e, 0x1, 0x1);
        gbc.writeMem(0x96c2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb8dd, gbc.sp());
        EXPECT(0x96c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c2));
        EXPECT(0x4f, gbc.readMem(0x96c3));
        // CB 4F 00C5
        gbc.setState(0x978b, 0xa662, 0xe810, 0x3715, 0x885b, 0x9e15, 0x1, 0x0);
        gbc.writeMem(0x978b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa662, gbc.sp());
        EXPECT(0x978d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978b));
        EXPECT(0x4f, gbc.readMem(0x978c));
        // CB 4F 00C6
        gbc.setState(0x773b, 0x74d2, 0xd580, 0x3148, 0x6db6, 0xe60c, 0x0, 0x0);
        gbc.writeMem(0x773b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x74d2, gbc.sp());
        EXPECT(0x773d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00C7
        gbc.setState(0xbb4d, 0xb866, 0x3350, 0x3785, 0x6717, 0x6d24, 0x1, 0x1);
        gbc.writeMem(0xbb4d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb866, gbc.sp());
        EXPECT(0xbb4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4d));
        EXPECT(0x4f, gbc.readMem(0xbb4e));
        // CB 4F 00C8
        gbc.setState(0x8bf8, 0x3d0c, 0x8b40, 0xe02d, 0xaf1a, 0x639b, 0x1, 0x0);
        gbc.writeMem(0x8bf8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3d0c, gbc.sp());
        EXPECT(0x8bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf8));
        EXPECT(0x4f, gbc.readMem(0x8bf9));
        // CB 4F 00C9
        gbc.setState(0x75d8, 0x6398, 0xeac0, 0x99c4, 0x3ba0, 0x739c, 0x1, 0x1);
        gbc.writeMem(0x75d8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6398, gbc.sp());
        EXPECT(0x75da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00CA
        gbc.setState(0x57c7, 0x9537, 0x8910, 0x7886, 0x83d5, 0x769e, 0x1, 0x0);
        gbc.writeMem(0x57c7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9537, gbc.sp());
        EXPECT(0x57c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00CC
        gbc.setState(0x660b, 0x1005, 0x7600, 0x33e1, 0xc3ee, 0x1266, 0x0, 0x1);
        gbc.writeMem(0x660b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1005, gbc.sp());
        EXPECT(0x660d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00CD
        gbc.setState(0x6c43, 0xa102, 0xa380, 0xdbf7, 0x1c40, 0x99b7, 0x1, 0x0);
        gbc.writeMem(0x6c43, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa102, gbc.sp());
        EXPECT(0x6c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00CE
        gbc.setState(0x766e, 0x8b9d, 0x4c0, 0x2181, 0xd299, 0x394d, 0x0, 0x0);
        gbc.writeMem(0x766e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8b9d, gbc.sp());
        EXPECT(0x7670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00CF
        gbc.setState(0x5ba8, 0xe24, 0xdd10, 0xb023, 0x72be, 0x73c9, 0x1, 0x0);
        gbc.writeMem(0x5ba8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe24, gbc.sp());
        EXPECT(0x5baa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00D0
        gbc.setState(0xa113, 0x3e15, 0xe900, 0xc007, 0x3ae, 0x41c, 0x1, 0x1);
        gbc.writeMem(0xa113, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3e15, gbc.sp());
        EXPECT(0xa115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa113));
        EXPECT(0x4f, gbc.readMem(0xa114));
        // CB 4F 00D1
        gbc.setState(0x43ba, 0x8579, 0xd830, 0xa2f6, 0x5c3e, 0xbff6, 0x0, 0x1);
        gbc.writeMem(0x43ba, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8579, gbc.sp());
        EXPECT(0x43bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00D2
        gbc.setState(0x940b, 0x954e, 0xa3b0, 0xe7af, 0x95ad, 0x2e22, 0x0, 0x0);
        gbc.writeMem(0x940b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x954e, gbc.sp());
        EXPECT(0x940d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940b));
        EXPECT(0x4f, gbc.readMem(0x940c));
        // CB 4F 00D3
        gbc.setState(0x184c, 0x6dd6, 0x8aa0, 0x287e, 0xb429, 0xa19a, 0x0, 0x1);
        gbc.writeMem(0x184c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6dd6, gbc.sp());
        EXPECT(0x184e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00D4
        gbc.setState(0xd9a9, 0xf8d, 0x38c0, 0xb30c, 0x990, 0xeed3, 0x1, 0x0);
        gbc.writeMem(0xd9a9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf8d, gbc.sp());
        EXPECT(0xd9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a9));
        EXPECT(0x4f, gbc.readMem(0xd9aa));
        // CB 4F 00D5
        gbc.setState(0x1d86, 0x9518, 0x2370, 0x624d, 0xf9c0, 0x7dfd, 0x0, 0x0);
        gbc.writeMem(0x1d86, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9518, gbc.sp());
        EXPECT(0x1d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00D6
        gbc.setState(0xdb8a, 0xba44, 0xabe0, 0x6a39, 0x4b59, 0xc55d, 0x1, 0x0);
        gbc.writeMem(0xdb8a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xba44, gbc.sp());
        EXPECT(0xdb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8a));
        EXPECT(0x4f, gbc.readMem(0xdb8b));
        // CB 4F 00D7
        gbc.setState(0x4385, 0xd437, 0xb260, 0x8d42, 0xe13, 0xef1e, 0x0, 0x0);
        gbc.writeMem(0x4385, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd437, gbc.sp());
        EXPECT(0x4387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00D8
        gbc.setState(0xceaa, 0x18a6, 0xc740, 0x62b3, 0xec62, 0x260, 0x0, 0x0);
        gbc.writeMem(0xceaa, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x18a6, gbc.sp());
        EXPECT(0xceac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceaa));
        EXPECT(0x4f, gbc.readMem(0xceab));
        // CB 4F 00D9
        gbc.setState(0x25ed, 0x2f7e, 0x34a0, 0x9c76, 0x7d7f, 0x69c, 0x0, 0x1);
        gbc.writeMem(0x25ed, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2f7e, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00DA
        gbc.setState(0x35e2, 0x249e, 0x590, 0x1b6d, 0xac1b, 0x72e4, 0x0, 0x0);
        gbc.writeMem(0x35e2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x249e, gbc.sp());
        EXPECT(0x35e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00DB
        gbc.setState(0x806, 0xdc4b, 0x4730, 0xd0bd, 0xbe0d, 0x4dd2, 0x1, 0x0);
        gbc.writeMem(0x806, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdc4b, gbc.sp());
        EXPECT(0x808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00DC
        gbc.setState(0xa40e, 0x3883, 0x58e0, 0x1bc4, 0x2125, 0xc7d2, 0x1, 0x0);
        gbc.writeMem(0xa40e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3883, gbc.sp());
        EXPECT(0xa410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40e));
        EXPECT(0x4f, gbc.readMem(0xa40f));
        // CB 4F 00DD
        gbc.setState(0xe2dc, 0x7f9b, 0x1610, 0x4257, 0x2d15, 0x3c3f, 0x1, 0x0);
        gbc.writeMem(0xe2dc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7f9b, gbc.sp());
        EXPECT(0xe2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2dc));
        EXPECT(0x4f, gbc.readMem(0xe2dd));
        // CB 4F 00DE
        gbc.setState(0x9432, 0x8a3b, 0x5f60, 0x1bfe, 0xbf93, 0x529a, 0x1, 0x0);
        gbc.writeMem(0x9432, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8a3b, gbc.sp());
        EXPECT(0x9434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9432));
        EXPECT(0x4f, gbc.readMem(0x9433));
        // CB 4F 00DF
        gbc.setState(0x92ae, 0x5613, 0x1230, 0x5bc, 0x2bbf, 0xdf03, 0x1, 0x1);
        gbc.writeMem(0x92ae, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5613, gbc.sp());
        EXPECT(0x92b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ae));
        EXPECT(0x4f, gbc.readMem(0x92af));
        // CB 4F 00E0
        gbc.setState(0x5788, 0xa2d5, 0x2170, 0x2172, 0x142f, 0x4d77, 0x0, 0x0);
        gbc.writeMem(0x5788, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa2d5, gbc.sp());
        EXPECT(0x578a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00E1
        gbc.setState(0x2f06, 0xee10, 0x86f0, 0xd871, 0x162c, 0x820b, 0x1, 0x0);
        gbc.writeMem(0x2f06, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xee10, gbc.sp());
        EXPECT(0x2f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00E2
        gbc.setState(0x855e, 0xe36b, 0xa110, 0xc359, 0x5cd1, 0x5e62, 0x0, 0x0);
        gbc.writeMem(0x855e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe36b, gbc.sp());
        EXPECT(0x8560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855e));
        EXPECT(0x4f, gbc.readMem(0x855f));
        // CB 4F 00E3
        gbc.setState(0xb0b3, 0x87d7, 0xfe40, 0xdf76, 0xf4df, 0x5e7d, 0x1, 0x0);
        gbc.writeMem(0xb0b3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x87d7, gbc.sp());
        EXPECT(0xb0b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b3));
        EXPECT(0x4f, gbc.readMem(0xb0b4));
        // CB 4F 00E4
        gbc.setState(0xe1f9, 0xf68b, 0xe410, 0x3358, 0x794, 0x98b8, 0x0, 0x1);
        gbc.writeMem(0xe1f9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf68b, gbc.sp());
        EXPECT(0xe1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f9));
        EXPECT(0x4f, gbc.readMem(0xe1fa));
        // CB 4F 00E5
        gbc.setState(0x5c64, 0x5e49, 0x3a70, 0xdf94, 0xb75b, 0x696b, 0x1, 0x1);
        gbc.writeMem(0x5c64, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5e49, gbc.sp());
        EXPECT(0x5c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00E6
        gbc.setState(0x41b0, 0x1c36, 0xb300, 0xaa91, 0x5d19, 0xa5bb, 0x0, 0x0);
        gbc.writeMem(0x41b0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1c36, gbc.sp());
        EXPECT(0x41b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00E7
        gbc.setState(0xafa4, 0xa5ac, 0x70c0, 0x64cf, 0x463a, 0xdec5, 0x0, 0x1);
        gbc.writeMem(0xafa4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa5ac, gbc.sp());
        EXPECT(0xafa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa4));
        EXPECT(0x4f, gbc.readMem(0xafa5));
        // CB 4F 00E8
        gbc.setState(0xd649, 0x2ddb, 0xe560, 0x389c, 0xeea, 0x5e78, 0x0, 0x1);
        gbc.writeMem(0xd649, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2ddb, gbc.sp());
        EXPECT(0xd64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd649));
        EXPECT(0x4f, gbc.readMem(0xd64a));
        // CB 4F 00E9
        gbc.setState(0x56f2, 0xb515, 0x5990, 0xa8b8, 0x6a01, 0xd394, 0x1, 0x1);
        gbc.writeMem(0x56f2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb515, gbc.sp());
        EXPECT(0x56f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00EA
        gbc.setState(0x3d0, 0x3516, 0x6c50, 0xbca5, 0xf84a, 0xd72d, 0x0, 0x0);
        gbc.writeMem(0x3d0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3516, gbc.sp());
        EXPECT(0x3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00EB
        gbc.setState(0x6157, 0xe137, 0x4430, 0xb127, 0x8ee1, 0xab5e, 0x0, 0x0);
        gbc.writeMem(0x6157, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe137, gbc.sp());
        EXPECT(0x6159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00EC
        gbc.setState(0x410, 0x497f, 0x4120, 0x2764, 0xcc58, 0xf9e2, 0x1, 0x1);
        gbc.writeMem(0x410, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x497f, gbc.sp());
        EXPECT(0x412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00ED
        gbc.setState(0xbab5, 0x9122, 0x3fb0, 0x5bbb, 0x487c, 0xf25c, 0x1, 0x1);
        gbc.writeMem(0xbab5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9122, gbc.sp());
        EXPECT(0xbab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab5));
        EXPECT(0x4f, gbc.readMem(0xbab6));
        // CB 4F 00EE
        gbc.setState(0x1bf1, 0xaa0e, 0xee40, 0x6863, 0x858, 0xf21e, 0x1, 0x0);
        gbc.writeMem(0x1bf1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xaa0e, gbc.sp());
        EXPECT(0x1bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00EF
        gbc.setState(0x977f, 0x20d, 0xd40, 0x541c, 0x676f, 0xfa7a, 0x1, 0x1);
        gbc.writeMem(0x977f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x20d, gbc.sp());
        EXPECT(0x9781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x977f));
        EXPECT(0x4f, gbc.readMem(0x9780));
        // CB 4F 00F0
        gbc.setState(0x6794, 0x97ef, 0x86f0, 0x62e3, 0xd995, 0x8a03, 0x1, 0x0);
        gbc.writeMem(0x6794, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x97ef, gbc.sp());
        EXPECT(0x6796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00F1
        gbc.setState(0x98e2, 0x253f, 0x630, 0x89f5, 0x64c4, 0xd9b8, 0x0, 0x0);
        gbc.writeMem(0x98e2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x253f, gbc.sp());
        EXPECT(0x98e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e2));
        EXPECT(0x4f, gbc.readMem(0x98e3));
        // CB 4F 00F2
        gbc.setState(0x1851, 0xb6f2, 0x3430, 0xba1c, 0x31cb, 0x69c1, 0x0, 0x0);
        gbc.writeMem(0x1851, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb6f2, gbc.sp());
        EXPECT(0x1853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00F3
        gbc.setState(0xc01b, 0x1e7f, 0x3910, 0xb70f, 0x8324, 0xb81b, 0x1, 0x1);
        gbc.writeMem(0xc01b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1e7f, gbc.sp());
        EXPECT(0xc01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01b));
        EXPECT(0x4f, gbc.readMem(0xc01c));
        // CB 4F 00F4
        gbc.setState(0x2928, 0xd095, 0xf1f0, 0x39c7, 0x832e, 0x61a5, 0x1, 0x0);
        gbc.writeMem(0x2928, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd095, gbc.sp());
        EXPECT(0x292a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00F5
        gbc.setState(0x20bc, 0x995c, 0xc7e0, 0x99d4, 0x66e5, 0xe1f8, 0x1, 0x0);
        gbc.writeMem(0x20bc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x995c, gbc.sp());
        EXPECT(0x20be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00F7
        gbc.setState(0x3a33, 0x33a1, 0xee00, 0xa761, 0x51d6, 0x37c9, 0x1, 0x0);
        gbc.writeMem(0x3a33, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x33a1, gbc.sp());
        EXPECT(0x3a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00F8
        gbc.setState(0x9b62, 0xe32b, 0x93c0, 0x1078, 0x4ac6, 0x10d0, 0x0, 0x1);
        gbc.writeMem(0x9b62, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe32b, gbc.sp());
        EXPECT(0x9b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b62));
        EXPECT(0x4f, gbc.readMem(0x9b63));
        // CB 4F 00F9
        gbc.setState(0x1615, 0x20ff, 0x6ee0, 0xbc83, 0x6e13, 0x5013, 0x0, 0x0);
        gbc.writeMem(0x1615, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x20ff, gbc.sp());
        EXPECT(0x1617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00FB
        gbc.setState(0xf28, 0xa3f9, 0x4a00, 0x743e, 0xe114, 0x6f3e, 0x1, 0x1);
        gbc.writeMem(0xf28, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa3f9, gbc.sp());
        EXPECT(0xf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 00FC
        gbc.setState(0xb2ca, 0x15d2, 0x9e10, 0x83f2, 0xdb55, 0x57b4, 0x1, 0x0);
        gbc.writeMem(0xb2ca, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x15d2, gbc.sp());
        EXPECT(0xb2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ca));
        EXPECT(0x4f, gbc.readMem(0xb2cb));
        // CB 4F 00FD
        gbc.setState(0xf4b, 0x274f, 0xa710, 0xba38, 0x8e75, 0x97d, 0x1, 0x1);
        gbc.writeMem(0xf4b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x274f, gbc.sp());
        EXPECT(0xf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00FE
        gbc.setState(0xf7a, 0xdc18, 0x8bf0, 0x3394, 0x2df6, 0xcdf8, 0x0, 0x1);
        gbc.writeMem(0xf7a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdc18, gbc.sp());
        EXPECT(0xf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 00FF
        gbc.setState(0x4819, 0x78f6, 0x2790, 0xb4e7, 0x9ceb, 0x82d3, 0x0, 0x1);
        gbc.writeMem(0x4819, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x78f6, gbc.sp());
        EXPECT(0x481b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0101
        gbc.setState(0xa169, 0xb14c, 0x6280, 0x1b30, 0xc65f, 0xcac6, 0x1, 0x0);
        gbc.writeMem(0xa169, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb14c, gbc.sp());
        EXPECT(0xa16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa169));
        EXPECT(0x4f, gbc.readMem(0xa16a));
        // CB 4F 0102
        gbc.setState(0xa2f7, 0x69d5, 0xb1b0, 0xa695, 0x2e48, 0x63fc, 0x1, 0x0);
        gbc.writeMem(0xa2f7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x69d5, gbc.sp());
        EXPECT(0xa2f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f7));
        EXPECT(0x4f, gbc.readMem(0xa2f8));
        // CB 4F 0103
        gbc.setState(0x759c, 0x25b, 0xe460, 0x458b, 0x4693, 0xed73, 0x1, 0x0);
        gbc.writeMem(0x759c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x25b, gbc.sp());
        EXPECT(0x759e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0104
        gbc.setState(0xafa6, 0xaf37, 0x8ee0, 0x58a1, 0x3980, 0x7960, 0x0, 0x1);
        gbc.writeMem(0xafa6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaf37, gbc.sp());
        EXPECT(0xafa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa6));
        EXPECT(0x4f, gbc.readMem(0xafa7));
        // CB 4F 0105
        gbc.setState(0x4a3a, 0xa418, 0x7aa0, 0xc63f, 0xf70d, 0xccc9, 0x1, 0x0);
        gbc.writeMem(0x4a3a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa418, gbc.sp());
        EXPECT(0x4a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0106
        gbc.setState(0x7362, 0xc42c, 0xa360, 0x21b7, 0x65b4, 0x17ea, 0x0, 0x1);
        gbc.writeMem(0x7362, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc42c, gbc.sp());
        EXPECT(0x7364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0107
        gbc.setState(0xa1f2, 0x7efe, 0x8c0, 0xab79, 0x3c68, 0xf221, 0x0, 0x1);
        gbc.writeMem(0xa1f2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7efe, gbc.sp());
        EXPECT(0xa1f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f2));
        EXPECT(0x4f, gbc.readMem(0xa1f3));
        // CB 4F 0108
        gbc.setState(0x8ba, 0xf524, 0x88d0, 0x557c, 0xef20, 0xca67, 0x0, 0x0);
        gbc.writeMem(0x8ba, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf524, gbc.sp());
        EXPECT(0x8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0109
        gbc.setState(0x5cd4, 0x38b6, 0x6f70, 0x5f22, 0x13dd, 0x622d, 0x1, 0x0);
        gbc.writeMem(0x5cd4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x38b6, gbc.sp());
        EXPECT(0x5cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 010A
        gbc.setState(0xc0f4, 0x469d, 0x81f0, 0x3d70, 0xe77f, 0x28b4, 0x0, 0x1);
        gbc.writeMem(0xc0f4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x469d, gbc.sp());
        EXPECT(0xc0f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f4));
        EXPECT(0x4f, gbc.readMem(0xc0f5));
        // CB 4F 010B
        gbc.setState(0xe2c3, 0xd82c, 0x8da0, 0x5610, 0x6ed2, 0xa96d, 0x0, 0x0);
        gbc.writeMem(0xe2c3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd82c, gbc.sp());
        EXPECT(0xe2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c3));
        EXPECT(0x4f, gbc.readMem(0xe2c4));
        // CB 4F 010C
        gbc.setState(0x418c, 0x75e6, 0x6ca0, 0xd165, 0xd926, 0xb73d, 0x0, 0x0);
        gbc.writeMem(0x418c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x75e6, gbc.sp());
        EXPECT(0x418e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 010D
        gbc.setState(0x1efd, 0xcbe, 0x6710, 0x57d0, 0x69a8, 0x173f, 0x1, 0x0);
        gbc.writeMem(0x1efd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcbe, gbc.sp());
        EXPECT(0x1eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 010E
        gbc.setState(0x2d0f, 0x2849, 0x9080, 0x8b01, 0x7647, 0x8bbe, 0x1, 0x0);
        gbc.writeMem(0x2d0f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2849, gbc.sp());
        EXPECT(0x2d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 010F
        gbc.setState(0xe, 0xe217, 0x33f0, 0xa2c7, 0xb25f, 0xa7aa, 0x0, 0x0);
        gbc.writeMem(0xe, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe217, gbc.sp());
        EXPECT(0x10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0111
        gbc.setState(0x551b, 0x33c4, 0xab30, 0x44d5, 0x401d, 0x9b44, 0x1, 0x0);
        gbc.writeMem(0x551b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x33c4, gbc.sp());
        EXPECT(0x551d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0112
        gbc.setState(0x90f9, 0x51df, 0xb9e0, 0x2d07, 0x2d42, 0x978, 0x1, 0x0);
        gbc.writeMem(0x90f9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x51df, gbc.sp());
        EXPECT(0x90fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f9));
        EXPECT(0x4f, gbc.readMem(0x90fa));
        // CB 4F 0113
        gbc.setState(0x868, 0xb17b, 0x6eb0, 0x6d79, 0xc29b, 0xb215, 0x1, 0x0);
        gbc.writeMem(0x868, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb17b, gbc.sp());
        EXPECT(0x86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0114
        gbc.setState(0xd2c8, 0x8624, 0x9a80, 0xd53e, 0xf048, 0xb65f, 0x1, 0x1);
        gbc.writeMem(0xd2c8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8624, gbc.sp());
        EXPECT(0xd2ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c8));
        EXPECT(0x4f, gbc.readMem(0xd2c9));
        // CB 4F 0115
        gbc.setState(0xccb7, 0x7779, 0x9c60, 0x177e, 0x3d4b, 0x62f4, 0x1, 0x1);
        gbc.writeMem(0xccb7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7779, gbc.sp());
        EXPECT(0xccb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb7));
        EXPECT(0x4f, gbc.readMem(0xccb8));
        // CB 4F 0116
        gbc.setState(0xc9af, 0xd08d, 0xfd40, 0xbc7c, 0x7905, 0x6868, 0x1, 0x0);
        gbc.writeMem(0xc9af, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd08d, gbc.sp());
        EXPECT(0xc9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9af));
        EXPECT(0x4f, gbc.readMem(0xc9b0));
        // CB 4F 0117
        gbc.setState(0xb998, 0xcd05, 0xfa50, 0x5f5b, 0x12fd, 0xb52c, 0x1, 0x1);
        gbc.writeMem(0xb998, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcd05, gbc.sp());
        EXPECT(0xb99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb998));
        EXPECT(0x4f, gbc.readMem(0xb999));
        // CB 4F 0118
        gbc.setState(0x35be, 0xe565, 0x2290, 0xa0fa, 0xb34, 0xe8f4, 0x1, 0x1);
        gbc.writeMem(0x35be, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe565, gbc.sp());
        EXPECT(0x35c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0119
        gbc.setState(0x68af, 0xf0e6, 0xae50, 0x3ce6, 0xfe0b, 0x630b, 0x0, 0x1);
        gbc.writeMem(0x68af, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf0e6, gbc.sp());
        EXPECT(0x68b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 011A
        gbc.setState(0x2838, 0x9980, 0x7b10, 0xa91a, 0x73, 0x7560, 0x0, 0x0);
        gbc.writeMem(0x2838, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9980, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 011B
        gbc.setState(0x1bcf, 0xe413, 0xf9f0, 0x7863, 0x718c, 0xfc9a, 0x0, 0x1);
        gbc.writeMem(0x1bcf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe413, gbc.sp());
        EXPECT(0x1bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 011C
        gbc.setState(0x52cb, 0xb2c1, 0xde70, 0x49de, 0x6c24, 0x4060, 0x1, 0x0);
        gbc.writeMem(0x52cb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb2c1, gbc.sp());
        EXPECT(0x52cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 011D
        gbc.setState(0xa05b, 0x3087, 0x8e30, 0x879f, 0x3b02, 0x1cd9, 0x1, 0x0);
        gbc.writeMem(0xa05b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3087, gbc.sp());
        EXPECT(0xa05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05b));
        EXPECT(0x4f, gbc.readMem(0xa05c));
        // CB 4F 011E
        gbc.setState(0x9af8, 0x3a07, 0xf0f0, 0x289e, 0x8cb1, 0x64b0, 0x0, 0x0);
        gbc.writeMem(0x9af8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3a07, gbc.sp());
        EXPECT(0x9afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af8));
        EXPECT(0x4f, gbc.readMem(0x9af9));
        // CB 4F 011F
        gbc.setState(0x77d4, 0xfde7, 0xe990, 0xa381, 0x60d7, 0xe656, 0x0, 0x0);
        gbc.writeMem(0x77d4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfde7, gbc.sp());
        EXPECT(0x77d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0120
        gbc.setState(0x4351, 0x502d, 0x1790, 0x4b75, 0x6069, 0x75cc, 0x1, 0x1);
        gbc.writeMem(0x4351, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x502d, gbc.sp());
        EXPECT(0x4353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0121
        gbc.setState(0x9cae, 0xbcfa, 0xc390, 0xcdf0, 0xccf2, 0x61d1, 0x1, 0x0);
        gbc.writeMem(0x9cae, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbcfa, gbc.sp());
        EXPECT(0x9cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cae));
        EXPECT(0x4f, gbc.readMem(0x9caf));
        // CB 4F 0122
        gbc.setState(0xec52, 0xd5bb, 0xf770, 0x30d3, 0x17e9, 0xe5ca, 0x1, 0x1);
        gbc.writeMem(0xec52, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd5bb, gbc.sp());
        EXPECT(0xec54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec52));
        EXPECT(0x4f, gbc.readMem(0xec53));
        // CB 4F 0123
        gbc.setState(0x271f, 0x81f6, 0x10f0, 0x875c, 0x9e25, 0x48d6, 0x1, 0x1);
        gbc.writeMem(0x271f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x81f6, gbc.sp());
        EXPECT(0x2721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0124
        gbc.setState(0x9939, 0xe439, 0x40, 0x3d49, 0xc23e, 0xe548, 0x0, 0x0);
        gbc.writeMem(0x9939, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe439, gbc.sp());
        EXPECT(0x993b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9939));
        EXPECT(0x4f, gbc.readMem(0x993a));
        // CB 4F 0126
        gbc.setState(0x2918, 0x4bb0, 0xb520, 0x403, 0xf2bc, 0x5e23, 0x0, 0x1);
        gbc.writeMem(0x2918, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4bb0, gbc.sp());
        EXPECT(0x291a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0127
        gbc.setState(0xb1fa, 0xa5be, 0x8740, 0xbaf8, 0x4546, 0x340, 0x0, 0x0);
        gbc.writeMem(0xb1fa, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa5be, gbc.sp());
        EXPECT(0xb1fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1fa));
        EXPECT(0x4f, gbc.readMem(0xb1fb));
        // CB 4F 0128
        gbc.setState(0x7e73, 0x8728, 0xf790, 0xad8e, 0x648d, 0xb8c0, 0x1, 0x0);
        gbc.writeMem(0x7e73, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8728, gbc.sp());
        EXPECT(0x7e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0129
        gbc.setState(0x6438, 0x2011, 0x23c0, 0xf30e, 0x5863, 0x85da, 0x0, 0x1);
        gbc.writeMem(0x6438, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2011, gbc.sp());
        EXPECT(0x643a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 012A
        gbc.setState(0x3a64, 0xa07c, 0x6800, 0x8a0e, 0xb887, 0x9a84, 0x0, 0x1);
        gbc.writeMem(0x3a64, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa07c, gbc.sp());
        EXPECT(0x3a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 012B
        gbc.setState(0x71cf, 0xcfc9, 0xc1b0, 0xc35d, 0xa757, 0xff6e, 0x1, 0x1);
        gbc.writeMem(0x71cf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcfc9, gbc.sp());
        EXPECT(0x71d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 012C
        gbc.setState(0xe7d1, 0x2f6, 0x4900, 0x9c02, 0xceb0, 0x3105, 0x1, 0x0);
        gbc.writeMem(0xe7d1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2f6, gbc.sp());
        EXPECT(0xe7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d1));
        EXPECT(0x4f, gbc.readMem(0xe7d2));
        // CB 4F 012D
        gbc.setState(0x26e1, 0x436e, 0x3270, 0x4de0, 0x9ee7, 0x204, 0x0, 0x1);
        gbc.writeMem(0x26e1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x436e, gbc.sp());
        EXPECT(0x26e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 012E
        gbc.setState(0xc428, 0xc01f, 0xafe0, 0xa0e2, 0x3787, 0x48ee, 0x1, 0x0);
        gbc.writeMem(0xc428, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc01f, gbc.sp());
        EXPECT(0xc42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc428));
        EXPECT(0x4f, gbc.readMem(0xc429));
        // CB 4F 012F
        gbc.setState(0x3cdd, 0x47be, 0x2b90, 0xc614, 0x10f, 0x8aa5, 0x1, 0x1);
        gbc.writeMem(0x3cdd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x47be, gbc.sp());
        EXPECT(0x3cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0130
        gbc.setState(0xa2f4, 0x433c, 0xaf70, 0x90c, 0x47f9, 0x5046, 0x0, 0x0);
        gbc.writeMem(0xa2f4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x433c, gbc.sp());
        EXPECT(0xa2f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f4));
        EXPECT(0x4f, gbc.readMem(0xa2f5));
        // CB 4F 0131
        gbc.setState(0xbb8, 0xdbf4, 0x61a0, 0xaf41, 0x5833, 0xacf3, 0x1, 0x1);
        gbc.writeMem(0xbb8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdbf4, gbc.sp());
        EXPECT(0xbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0132
        gbc.setState(0xe131, 0xca35, 0xdf70, 0xbe8c, 0xdc78, 0x6483, 0x0, 0x0);
        gbc.writeMem(0xe131, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xca35, gbc.sp());
        EXPECT(0xe133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe131));
        EXPECT(0x4f, gbc.readMem(0xe132));
        // CB 4F 0133
        gbc.setState(0x2602, 0x16f4, 0x17e0, 0x4050, 0x3f50, 0x46fa, 0x0, 0x1);
        gbc.writeMem(0x2602, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x16f4, gbc.sp());
        EXPECT(0x2604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0134
        gbc.setState(0x1f4b, 0x235e, 0x8f50, 0x2554, 0xbf0, 0x8a28, 0x1, 0x0);
        gbc.writeMem(0x1f4b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x235e, gbc.sp());
        EXPECT(0x1f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0135
        gbc.setState(0x2302, 0x824e, 0xcfe0, 0xc8b6, 0x9f72, 0x2075, 0x0, 0x0);
        gbc.writeMem(0x2302, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x824e, gbc.sp());
        EXPECT(0x2304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0136
        gbc.setState(0x3509, 0x97b, 0xd20, 0xa6ef, 0xd0c3, 0xbe3f, 0x0, 0x1);
        gbc.writeMem(0x3509, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x97b, gbc.sp());
        EXPECT(0x350b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0137
        gbc.setState(0x3c70, 0x5376, 0x97b0, 0xf8fc, 0x4224, 0xe91d, 0x1, 0x0);
        gbc.writeMem(0x3c70, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5376, gbc.sp());
        EXPECT(0x3c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0138
        gbc.setState(0xa4e7, 0x7dbe, 0xbe90, 0x5263, 0x88f8, 0x9e5c, 0x1, 0x0);
        gbc.writeMem(0xa4e7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7dbe, gbc.sp());
        EXPECT(0xa4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e7));
        EXPECT(0x4f, gbc.readMem(0xa4e8));
        // CB 4F 0139
        gbc.setState(0xb873, 0xc02f, 0x7610, 0xcec6, 0xe4c4, 0x7799, 0x1, 0x0);
        gbc.writeMem(0xb873, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc02f, gbc.sp());
        EXPECT(0xb875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb873));
        EXPECT(0x4f, gbc.readMem(0xb874));
        // CB 4F 013A
        gbc.setState(0xce3b, 0xe885, 0xde0, 0x9047, 0x2a2a, 0x4056, 0x1, 0x0);
        gbc.writeMem(0xce3b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe885, gbc.sp());
        EXPECT(0xce3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce3b));
        EXPECT(0x4f, gbc.readMem(0xce3c));
        // CB 4F 013B
        gbc.setState(0x1c96, 0x60c, 0xb100, 0x3709, 0x426, 0xf30b, 0x1, 0x1);
        gbc.writeMem(0x1c96, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x60c, gbc.sp());
        EXPECT(0x1c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 013C
        gbc.setState(0xb6f1, 0x6a8b, 0x35b0, 0xd08d, 0x4a97, 0x939, 0x0, 0x0);
        gbc.writeMem(0xb6f1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6a8b, gbc.sp());
        EXPECT(0xb6f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f1));
        EXPECT(0x4f, gbc.readMem(0xb6f2));
        // CB 4F 013D
        gbc.setState(0x353a, 0x276c, 0x7de0, 0x444a, 0xab5c, 0xfdf, 0x1, 0x1);
        gbc.writeMem(0x353a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x276c, gbc.sp());
        EXPECT(0x353c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 013E
        gbc.setState(0x20a, 0xf831, 0x6460, 0xaf7c, 0xda0d, 0x391d, 0x1, 0x1);
        gbc.writeMem(0x20a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf831, gbc.sp());
        EXPECT(0x20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 013F
        gbc.setState(0x3ca8, 0xfc65, 0x7f60, 0xa1ef, 0xaa7f, 0xf67a, 0x0, 0x1);
        gbc.writeMem(0x3ca8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfc65, gbc.sp());
        EXPECT(0x3caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0140
        gbc.setState(0xd401, 0x4581, 0x7710, 0x1baa, 0xd236, 0x1ac1, 0x0, 0x1);
        gbc.writeMem(0xd401, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4581, gbc.sp());
        EXPECT(0xd403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd401));
        EXPECT(0x4f, gbc.readMem(0xd402));
        // CB 4F 0141
        gbc.setState(0x5bda, 0x111c, 0x71f0, 0xab74, 0xa01b, 0xd6b5, 0x1, 0x0);
        gbc.writeMem(0x5bda, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x111c, gbc.sp());
        EXPECT(0x5bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0142
        gbc.setState(0x4619, 0xed19, 0x5400, 0x95c4, 0x27ef, 0xfa7e, 0x0, 0x0);
        gbc.writeMem(0x4619, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xed19, gbc.sp());
        EXPECT(0x461b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0143
        gbc.setState(0x29f5, 0xaa1d, 0x5be0, 0x7cbb, 0x58, 0x3135, 0x1, 0x0);
        gbc.writeMem(0x29f5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaa1d, gbc.sp());
        EXPECT(0x29f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0144
        gbc.setState(0xdac8, 0x7244, 0x5660, 0xf7ea, 0x731c, 0xa036, 0x1, 0x0);
        gbc.writeMem(0xdac8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7244, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac8));
        EXPECT(0x4f, gbc.readMem(0xdac9));
        // CB 4F 0145
        gbc.setState(0xc863, 0x68b0, 0xd240, 0x6771, 0x50e1, 0x7927, 0x0, 0x1);
        gbc.writeMem(0xc863, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x68b0, gbc.sp());
        EXPECT(0xc865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc863));
        EXPECT(0x4f, gbc.readMem(0xc864));
        // CB 4F 0146
        gbc.setState(0x3795, 0x8d7b, 0xa790, 0x5318, 0x8ad4, 0x4520, 0x0, 0x1);
        gbc.writeMem(0x3795, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8d7b, gbc.sp());
        EXPECT(0x3797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0147
        gbc.setState(0x58a1, 0x833f, 0x990, 0x7b12, 0xc3d3, 0xba78, 0x1, 0x1);
        gbc.writeMem(0x58a1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x833f, gbc.sp());
        EXPECT(0x58a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0148
        gbc.setState(0xe0d7, 0xe5ed, 0x25d0, 0xa74a, 0xfc1c, 0x5e0c, 0x0, 0x0);
        gbc.writeMem(0xe0d7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe5ed, gbc.sp());
        EXPECT(0xe0d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d7));
        EXPECT(0x4f, gbc.readMem(0xe0d8));
        // CB 4F 0149
        gbc.setState(0xd414, 0x4928, 0x6af0, 0xa568, 0x5e66, 0xfb2e, 0x1, 0x1);
        gbc.writeMem(0xd414, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4928, gbc.sp());
        EXPECT(0xd416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd414));
        EXPECT(0x4f, gbc.readMem(0xd415));
        // CB 4F 014A
        gbc.setState(0xb8ee, 0x6246, 0x9be0, 0xce23, 0xb9f0, 0xcae2, 0x0, 0x0);
        gbc.writeMem(0xb8ee, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6246, gbc.sp());
        EXPECT(0xb8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ee));
        EXPECT(0x4f, gbc.readMem(0xb8ef));
        // CB 4F 014B
        gbc.setState(0x5c3e, 0xabdd, 0xa880, 0x3491, 0xf8da, 0x6233, 0x1, 0x0);
        gbc.writeMem(0x5c3e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xabdd, gbc.sp());
        EXPECT(0x5c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 014C
        gbc.setState(0x45d, 0x36a5, 0xbf60, 0xf4c5, 0xa1f7, 0x50f7, 0x1, 0x1);
        gbc.writeMem(0x45d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x36a5, gbc.sp());
        EXPECT(0x45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 014D
        gbc.setState(0x5bfb, 0x4e9, 0x48b0, 0x5f9b, 0x6e22, 0x6f92, 0x0, 0x1);
        gbc.writeMem(0x5bfb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4e9, gbc.sp());
        EXPECT(0x5bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 014E
        gbc.setState(0x2022, 0x67ed, 0x5160, 0x9806, 0x60dd, 0xac97, 0x0, 0x1);
        gbc.writeMem(0x2022, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x67ed, gbc.sp());
        EXPECT(0x2024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 014F
        gbc.setState(0xc40e, 0x522e, 0xe070, 0xdda1, 0x193c, 0x5403, 0x1, 0x0);
        gbc.writeMem(0xc40e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x522e, gbc.sp());
        EXPECT(0xc410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc40e));
        EXPECT(0x4f, gbc.readMem(0xc40f));
        // CB 4F 0150
        gbc.setState(0x1d1e, 0xbe9c, 0xcbd0, 0xe68f, 0x980a, 0xa520, 0x1, 0x0);
        gbc.writeMem(0x1d1e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbe9c, gbc.sp());
        EXPECT(0x1d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0151
        gbc.setState(0x1da2, 0xbbbb, 0x3960, 0xf4f, 0x130d, 0x30d6, 0x0, 0x1);
        gbc.writeMem(0x1da2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbbbb, gbc.sp());
        EXPECT(0x1da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0152
        gbc.setState(0xd15e, 0xeff3, 0xc690, 0xd01c, 0x1ef6, 0x444c, 0x1, 0x1);
        gbc.writeMem(0xd15e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeff3, gbc.sp());
        EXPECT(0xd160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15e));
        EXPECT(0x4f, gbc.readMem(0xd15f));
        // CB 4F 0153
        gbc.setState(0x2c85, 0x95c9, 0xbf70, 0xcbf9, 0x6a4, 0x7382, 0x0, 0x0);
        gbc.writeMem(0x2c85, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x95c9, gbc.sp());
        EXPECT(0x2c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0154
        gbc.setState(0x5fa0, 0xdb67, 0xa140, 0x9b7f, 0x6e44, 0x5e3a, 0x1, 0x1);
        gbc.writeMem(0x5fa0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdb67, gbc.sp());
        EXPECT(0x5fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0155
        gbc.setState(0x4afa, 0xdd2b, 0x530, 0x95e, 0xb22e, 0x4cea, 0x0, 0x0);
        gbc.writeMem(0x4afa, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdd2b, gbc.sp());
        EXPECT(0x4afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0156
        gbc.setState(0x24af, 0x226b, 0x6760, 0x4d0f, 0xcffd, 0x397b, 0x0, 0x0);
        gbc.writeMem(0x24af, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x226b, gbc.sp());
        EXPECT(0x24b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0157
        gbc.setState(0x4bb7, 0x4766, 0x5a00, 0xad17, 0x97e8, 0x7b1b, 0x0, 0x0);
        gbc.writeMem(0x4bb7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4766, gbc.sp());
        EXPECT(0x4bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0158
        gbc.setState(0x348d, 0x91c5, 0xb8b0, 0x1a0f, 0xa1a6, 0x9829, 0x0, 0x0);
        gbc.writeMem(0x348d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x91c5, gbc.sp());
        EXPECT(0x348f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0159
        gbc.setState(0x9d1f, 0xa17e, 0xf5d0, 0xdf75, 0x19cc, 0xeb3a, 0x1, 0x1);
        gbc.writeMem(0x9d1f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa17e, gbc.sp());
        EXPECT(0x9d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1f));
        EXPECT(0x4f, gbc.readMem(0x9d20));
        // CB 4F 015A
        gbc.setState(0xa373, 0xa5e0, 0xd910, 0x7fb, 0x962a, 0x98a3, 0x1, 0x0);
        gbc.writeMem(0xa373, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa5e0, gbc.sp());
        EXPECT(0xa375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa373));
        EXPECT(0x4f, gbc.readMem(0xa374));
        // CB 4F 015B
        gbc.setState(0xcbd6, 0xfc4c, 0x83f0, 0x9367, 0x51f0, 0xc487, 0x1, 0x1);
        gbc.writeMem(0xcbd6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfc4c, gbc.sp());
        EXPECT(0xcbd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd6));
        EXPECT(0x4f, gbc.readMem(0xcbd7));
        // CB 4F 015C
        gbc.setState(0x4443, 0x2588, 0xb10, 0x8ec7, 0xd313, 0xb34f, 0x0, 0x0);
        gbc.writeMem(0x4443, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2588, gbc.sp());
        EXPECT(0x4445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 015D
        gbc.setState(0x6c36, 0x465f, 0xdea0, 0x1436, 0x7a9, 0x8b9b, 0x1, 0x1);
        gbc.writeMem(0x6c36, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x465f, gbc.sp());
        EXPECT(0x6c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 015E
        gbc.setState(0x6738, 0x17a3, 0xa850, 0x49ae, 0xfac, 0xcc91, 0x0, 0x1);
        gbc.writeMem(0x6738, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x17a3, gbc.sp());
        EXPECT(0x673a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 015F
        gbc.setState(0x702f, 0x17df, 0xf7d0, 0x173f, 0x4eec, 0x9125, 0x0, 0x1);
        gbc.writeMem(0x702f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0x7031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0160
        gbc.setState(0xd1a8, 0x2bd9, 0x2020, 0x1926, 0x3b92, 0xf0bf, 0x0, 0x1);
        gbc.writeMem(0xd1a8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2bd9, gbc.sp());
        EXPECT(0xd1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a8));
        EXPECT(0x4f, gbc.readMem(0xd1a9));
        // CB 4F 0162
        gbc.setState(0xb7b8, 0x50df, 0x5e80, 0x9ac8, 0x7897, 0x23eb, 0x0, 0x1);
        gbc.writeMem(0xb7b8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x50df, gbc.sp());
        EXPECT(0xb7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b8));
        EXPECT(0x4f, gbc.readMem(0xb7b9));
        // CB 4F 0163
        gbc.setState(0xaf4e, 0x70eb, 0xf0c0, 0x10af, 0x307b, 0x555c, 0x1, 0x1);
        gbc.writeMem(0xaf4e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x70eb, gbc.sp());
        EXPECT(0xaf50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4e));
        EXPECT(0x4f, gbc.readMem(0xaf4f));
        // CB 4F 0164
        gbc.setState(0x74ab, 0x281, 0x2960, 0x6673, 0x832d, 0x482f, 0x0, 0x1);
        gbc.writeMem(0x74ab, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x281, gbc.sp());
        EXPECT(0x74ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0165
        gbc.setState(0x66c1, 0xc013, 0xd40, 0xb3ac, 0x7b08, 0x137c, 0x0, 0x1);
        gbc.writeMem(0x66c1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc013, gbc.sp());
        EXPECT(0x66c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0166
        gbc.setState(0xc83f, 0x38ef, 0xa200, 0xbb5c, 0x1172, 0xfa85, 0x0, 0x1);
        gbc.writeMem(0xc83f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x38ef, gbc.sp());
        EXPECT(0xc841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83f));
        EXPECT(0x4f, gbc.readMem(0xc840));
        // CB 4F 0168
        gbc.setState(0x2cf5, 0xe8ad, 0xa080, 0xdc15, 0x70ca, 0xbe18, 0x0, 0x0);
        gbc.writeMem(0x2cf5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe8ad, gbc.sp());
        EXPECT(0x2cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0169
        gbc.setState(0xe133, 0xf88f, 0xbce0, 0x81fe, 0x451b, 0xdd1a, 0x0, 0x1);
        gbc.writeMem(0xe133, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf88f, gbc.sp());
        EXPECT(0xe135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe133));
        EXPECT(0x4f, gbc.readMem(0xe134));
        // CB 4F 016A
        gbc.setState(0x1953, 0x70aa, 0x6b30, 0x96, 0x3456, 0x5693, 0x0, 0x0);
        gbc.writeMem(0x1953, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x70aa, gbc.sp());
        EXPECT(0x1955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 016B
        gbc.setState(0x213b, 0xb813, 0xb540, 0x4561, 0x82c, 0x7f9c, 0x1, 0x0);
        gbc.writeMem(0x213b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb813, gbc.sp());
        EXPECT(0x213d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 016C
        gbc.setState(0x7307, 0x6a69, 0xd600, 0xeed7, 0x1887, 0x8915, 0x1, 0x1);
        gbc.writeMem(0x7307, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6a69, gbc.sp());
        EXPECT(0x7309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 016D
        gbc.setState(0x8b20, 0x9337, 0x7ec0, 0x869a, 0x3c99, 0x5f9, 0x1, 0x1);
        gbc.writeMem(0x8b20, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9337, gbc.sp());
        EXPECT(0x8b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b20));
        EXPECT(0x4f, gbc.readMem(0x8b21));
        // CB 4F 016E
        gbc.setState(0x3ab, 0xac3e, 0x6580, 0x7ca5, 0x69ff, 0x1783, 0x1, 0x0);
        gbc.writeMem(0x3ab, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xac3e, gbc.sp());
        EXPECT(0x3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 016F
        gbc.setState(0xbc2d, 0xf9ae, 0x2d50, 0xe41, 0xf74f, 0xee2d, 0x1, 0x1);
        gbc.writeMem(0xbc2d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf9ae, gbc.sp());
        EXPECT(0xbc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2d));
        EXPECT(0x4f, gbc.readMem(0xbc2e));
        // CB 4F 0170
        gbc.setState(0x2fb4, 0x8889, 0xa520, 0xce59, 0x872a, 0x4fe5, 0x0, 0x1);
        gbc.writeMem(0x2fb4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8889, gbc.sp());
        EXPECT(0x2fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0171
        gbc.setState(0x5291, 0xfb24, 0xcbd0, 0xcbed, 0xd6cf, 0x641d, 0x0, 0x0);
        gbc.writeMem(0x5291, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfb24, gbc.sp());
        EXPECT(0x5293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0172
        gbc.setState(0x5520, 0x2a88, 0x3990, 0xf28f, 0x143, 0xcbfb, 0x0, 0x0);
        gbc.writeMem(0x5520, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2a88, gbc.sp());
        EXPECT(0x5522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0173
        gbc.setState(0xa702, 0xb3f6, 0x5750, 0x754d, 0x7a50, 0x1bdf, 0x0, 0x1);
        gbc.writeMem(0xa702, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb3f6, gbc.sp());
        EXPECT(0xa704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa702));
        EXPECT(0x4f, gbc.readMem(0xa703));
        // CB 4F 0174
        gbc.setState(0x3159, 0xab6c, 0x2210, 0x769b, 0xd606, 0x45f6, 0x0, 0x0);
        gbc.writeMem(0x3159, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xab6c, gbc.sp());
        EXPECT(0x315b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0175
        gbc.setState(0xb340, 0x9051, 0xcf30, 0x1ce5, 0x25f1, 0x275, 0x1, 0x1);
        gbc.writeMem(0xb340, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9051, gbc.sp());
        EXPECT(0xb342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb340));
        EXPECT(0x4f, gbc.readMem(0xb341));
        // CB 4F 0176
        gbc.setState(0xbdfe, 0x66e9, 0xad80, 0x247e, 0xa376, 0x6f8d, 0x0, 0x1);
        gbc.writeMem(0xbdfe, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x66e9, gbc.sp());
        EXPECT(0xbe00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfe));
        EXPECT(0x4f, gbc.readMem(0xbdff));
        // CB 4F 0178
        gbc.setState(0xddc, 0xe6a6, 0xa9b0, 0xe256, 0x9087, 0x9325, 0x0, 0x1);
        gbc.writeMem(0xddc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe6a6, gbc.sp());
        EXPECT(0xdde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0179
        gbc.setState(0xc73c, 0xb382, 0xfff0, 0xab3d, 0x2efd, 0x3122, 0x1, 0x1);
        gbc.writeMem(0xc73c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb382, gbc.sp());
        EXPECT(0xc73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc73c));
        EXPECT(0x4f, gbc.readMem(0xc73d));
        // CB 4F 017A
        gbc.setState(0x8ceb, 0x8a8e, 0xfce0, 0x6db3, 0xcb79, 0x1050, 0x0, 0x1);
        gbc.writeMem(0x8ceb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8a8e, gbc.sp());
        EXPECT(0x8ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ceb));
        EXPECT(0x4f, gbc.readMem(0x8cec));
        // CB 4F 017B
        gbc.setState(0xd78c, 0xc414, 0xa210, 0x91b9, 0xf169, 0x85cb, 0x0, 0x1);
        gbc.writeMem(0xd78c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc414, gbc.sp());
        EXPECT(0xd78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78c));
        EXPECT(0x4f, gbc.readMem(0xd78d));
        // CB 4F 017C
        gbc.setState(0xa035, 0xdcc1, 0xe880, 0xcebd, 0xc110, 0xb07c, 0x1, 0x1);
        gbc.writeMem(0xa035, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdcc1, gbc.sp());
        EXPECT(0xa037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa035));
        EXPECT(0x4f, gbc.readMem(0xa036));
        // CB 4F 017D
        gbc.setState(0x3c7a, 0x9bba, 0x6b50, 0x2282, 0x2e7a, 0x2b51, 0x0, 0x1);
        gbc.writeMem(0x3c7a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9bba, gbc.sp());
        EXPECT(0x3c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 017E
        gbc.setState(0xc45b, 0xfcc7, 0x9710, 0x92ae, 0xae6, 0x19d6, 0x1, 0x1);
        gbc.writeMem(0xc45b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfcc7, gbc.sp());
        EXPECT(0xc45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45b));
        EXPECT(0x4f, gbc.readMem(0xc45c));
        // CB 4F 017F
        gbc.setState(0xa7f6, 0x18d6, 0xc200, 0xe862, 0x7dd5, 0x7dba, 0x1, 0x1);
        gbc.writeMem(0xa7f6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x18d6, gbc.sp());
        EXPECT(0xa7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f6));
        EXPECT(0x4f, gbc.readMem(0xa7f7));
        // CB 4F 0180
        gbc.setState(0x275e, 0x6f2d, 0x21f0, 0x2720, 0xed6a, 0x5eb5, 0x0, 0x0);
        gbc.writeMem(0x275e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6f2d, gbc.sp());
        EXPECT(0x2760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0181
        gbc.setState(0xb457, 0x64aa, 0x8d90, 0x1127, 0x4e6, 0xae43, 0x0, 0x1);
        gbc.writeMem(0xb457, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x64aa, gbc.sp());
        EXPECT(0xb459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb457));
        EXPECT(0x4f, gbc.readMem(0xb458));
        // CB 4F 0182
        gbc.setState(0x72ee, 0xe75a, 0x5370, 0x90d7, 0xe3b4, 0x8417, 0x0, 0x0);
        gbc.writeMem(0x72ee, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe75a, gbc.sp());
        EXPECT(0x72f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0183
        gbc.setState(0x5ca8, 0x6ce5, 0xc270, 0xdfad, 0x87b9, 0x28c9, 0x0, 0x1);
        gbc.writeMem(0x5ca8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6ce5, gbc.sp());
        EXPECT(0x5caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0184
        gbc.setState(0x3a98, 0xb6b4, 0xfc30, 0xc8b2, 0xcfa7, 0xbbbb, 0x1, 0x1);
        gbc.writeMem(0x3a98, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb6b4, gbc.sp());
        EXPECT(0x3a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0185
        gbc.setState(0xd2f7, 0x7ba3, 0x87d0, 0xd817, 0xc80b, 0xc813, 0x1, 0x0);
        gbc.writeMem(0xd2f7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7ba3, gbc.sp());
        EXPECT(0xd2f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f7));
        EXPECT(0x4f, gbc.readMem(0xd2f8));
        // CB 4F 0189
        gbc.setState(0xd697, 0xf25f, 0x6290, 0xbae0, 0x7354, 0xb318, 0x0, 0x1);
        gbc.writeMem(0xd697, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf25f, gbc.sp());
        EXPECT(0xd699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd697));
        EXPECT(0x4f, gbc.readMem(0xd698));
        // CB 4F 018A
        gbc.setState(0xba75, 0xd07c, 0x1b70, 0x80b4, 0xb4c0, 0x5a4e, 0x1, 0x0);
        gbc.writeMem(0xba75, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd07c, gbc.sp());
        EXPECT(0xba77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba75));
        EXPECT(0x4f, gbc.readMem(0xba76));
        // CB 4F 018B
        gbc.setState(0x56ff, 0xda0, 0x2f80, 0x8367, 0xcc89, 0x6fd6, 0x0, 0x0);
        gbc.writeMem(0x56ff, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xda0, gbc.sp());
        EXPECT(0x5701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 018C
        gbc.setState(0x4693, 0x2a9, 0x90e0, 0x42d9, 0x34a5, 0x3b95, 0x0, 0x1);
        gbc.writeMem(0x4693, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2a9, gbc.sp());
        EXPECT(0x4695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 018D
        gbc.setState(0x6ae8, 0x55b9, 0x8ca0, 0x6417, 0xb85b, 0x9c10, 0x0, 0x0);
        gbc.writeMem(0x6ae8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x55b9, gbc.sp());
        EXPECT(0x6aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 018E
        gbc.setState(0x5ed6, 0x1c28, 0x1080, 0x54ab, 0xc39b, 0xed9b, 0x0, 0x1);
        gbc.writeMem(0x5ed6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1c28, gbc.sp());
        EXPECT(0x5ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 018F
        gbc.setState(0x782f, 0x62c7, 0xda70, 0x1980, 0x5c81, 0x284e, 0x1, 0x1);
        gbc.writeMem(0x782f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x62c7, gbc.sp());
        EXPECT(0x7831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0190
        gbc.setState(0xd70c, 0x965a, 0x5a50, 0x957, 0x494a, 0x86aa, 0x1, 0x1);
        gbc.writeMem(0xd70c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x965a, gbc.sp());
        EXPECT(0xd70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70c));
        EXPECT(0x4f, gbc.readMem(0xd70d));
        // CB 4F 0191
        gbc.setState(0x272f, 0x91d4, 0x7dd0, 0xb98a, 0xa797, 0x9822, 0x0, 0x0);
        gbc.writeMem(0x272f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x91d4, gbc.sp());
        EXPECT(0x2731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0192
        gbc.setState(0xb01f, 0xc27c, 0x1430, 0x5121, 0xc25d, 0xbe04, 0x0, 0x0);
        gbc.writeMem(0xb01f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc27c, gbc.sp());
        EXPECT(0xb021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01f));
        EXPECT(0x4f, gbc.readMem(0xb020));
        // CB 4F 0193
        gbc.setState(0xe875, 0xa9fc, 0x4040, 0xca25, 0x28e9, 0xa54c, 0x1, 0x0);
        gbc.writeMem(0xe875, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa9fc, gbc.sp());
        EXPECT(0xe877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe875));
        EXPECT(0x4f, gbc.readMem(0xe876));
        // CB 4F 0194
        gbc.setState(0x951d, 0x397d, 0xb760, 0x438b, 0xbcc4, 0x9a50, 0x0, 0x0);
        gbc.writeMem(0x951d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x397d, gbc.sp());
        EXPECT(0x951f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951d));
        EXPECT(0x4f, gbc.readMem(0x951e));
        // CB 4F 0195
        gbc.setState(0xd4a4, 0xdfba, 0x4580, 0xe6e2, 0x14f, 0xf412, 0x1, 0x1);
        gbc.writeMem(0xd4a4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdfba, gbc.sp());
        EXPECT(0xd4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a4));
        EXPECT(0x4f, gbc.readMem(0xd4a5));
        // CB 4F 0196
        gbc.setState(0x6f50, 0x4d51, 0x55c0, 0xe900, 0x9a32, 0x85f, 0x1, 0x1);
        gbc.writeMem(0x6f50, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4d51, gbc.sp());
        EXPECT(0x6f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0197
        gbc.setState(0x6ed2, 0xb523, 0xddc0, 0xb338, 0xa5ee, 0x8918, 0x1, 0x0);
        gbc.writeMem(0x6ed2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb523, gbc.sp());
        EXPECT(0x6ed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0198
        gbc.setState(0x115c, 0x697e, 0xe7a0, 0x26d7, 0xec11, 0x7f70, 0x1, 0x1);
        gbc.writeMem(0x115c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x697e, gbc.sp());
        EXPECT(0x115e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0199
        gbc.setState(0x7036, 0x6b80, 0x93b0, 0xd444, 0x1fe3, 0xc878, 0x0, 0x0);
        gbc.writeMem(0x7036, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6b80, gbc.sp());
        EXPECT(0x7038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 019A
        gbc.setState(0x641c, 0xf041, 0x8840, 0x3d68, 0xcd42, 0x2b56, 0x1, 0x1);
        gbc.writeMem(0x641c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf041, gbc.sp());
        EXPECT(0x641e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 019B
        gbc.setState(0x159a, 0x6913, 0xe460, 0x425e, 0x322d, 0xf5e, 0x0, 0x1);
        gbc.writeMem(0x159a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6913, gbc.sp());
        EXPECT(0x159c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 019C
        gbc.setState(0xc7d6, 0x494e, 0x9600, 0x1fab, 0x97ca, 0xb041, 0x0, 0x0);
        gbc.writeMem(0xc7d6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x494e, gbc.sp());
        EXPECT(0xc7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d6));
        EXPECT(0x4f, gbc.readMem(0xc7d7));
        // CB 4F 019D
        gbc.setState(0x3743, 0x8227, 0x3fa0, 0x94f, 0x494b, 0xe4b, 0x0, 0x1);
        gbc.writeMem(0x3743, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8227, gbc.sp());
        EXPECT(0x3745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 019E
        gbc.setState(0xda3a, 0x4f06, 0xd9e0, 0x32e4, 0xf249, 0xa568, 0x0, 0x1);
        gbc.writeMem(0xda3a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4f06, gbc.sp());
        EXPECT(0xda3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3a));
        EXPECT(0x4f, gbc.readMem(0xda3b));
        // CB 4F 019F
        gbc.setState(0x83b0, 0x656a, 0x290, 0x1d71, 0xabec, 0x8619, 0x1, 0x0);
        gbc.writeMem(0x83b0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x656a, gbc.sp());
        EXPECT(0x83b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b0));
        EXPECT(0x4f, gbc.readMem(0x83b1));
        // CB 4F 01A0
        gbc.setState(0xe81c, 0xc16f, 0x4a0, 0x1420, 0xa413, 0x8a25, 0x1, 0x1);
        gbc.writeMem(0xe81c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc16f, gbc.sp());
        EXPECT(0xe81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81c));
        EXPECT(0x4f, gbc.readMem(0xe81d));
        // CB 4F 01A1
        gbc.setState(0xdf2a, 0x83aa, 0xc760, 0xe25f, 0x9761, 0xaa22, 0x0, 0x1);
        gbc.writeMem(0xdf2a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x83aa, gbc.sp());
        EXPECT(0xdf2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2a));
        EXPECT(0x4f, gbc.readMem(0xdf2b));
        // CB 4F 01A2
        gbc.setState(0xefbf, 0xc58d, 0xe3c0, 0x434b, 0xc5c5, 0x5a4e, 0x1, 0x1);
        gbc.writeMem(0xefbf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc58d, gbc.sp());
        EXPECT(0xefc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbf));
        EXPECT(0x4f, gbc.readMem(0xefc0));
        // CB 4F 01A3
        gbc.setState(0x94ee, 0xc5e, 0xa280, 0xaf37, 0x5b4d, 0x839, 0x1, 0x1);
        gbc.writeMem(0x94ee, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc5e, gbc.sp());
        EXPECT(0x94f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ee));
        EXPECT(0x4f, gbc.readMem(0x94ef));
        // CB 4F 01A4
        gbc.setState(0xe1cc, 0xffcb, 0xf0b0, 0x134e, 0x9d3b, 0x7240, 0x1, 0x1);
        gbc.writeMem(0xe1cc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xffcb, gbc.sp());
        EXPECT(0xe1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cc));
        EXPECT(0x4f, gbc.readMem(0xe1cd));
        // CB 4F 01A5
        gbc.setState(0xd91b, 0x7a28, 0x19b0, 0x57e2, 0x463f, 0x8cf6, 0x1, 0x1);
        gbc.writeMem(0xd91b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7a28, gbc.sp());
        EXPECT(0xd91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91b));
        EXPECT(0x4f, gbc.readMem(0xd91c));
        // CB 4F 01A6
        gbc.setState(0xa0db, 0x825d, 0xa2e0, 0x560b, 0x2266, 0x94d4, 0x1, 0x1);
        gbc.writeMem(0xa0db, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x825d, gbc.sp());
        EXPECT(0xa0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0db));
        EXPECT(0x4f, gbc.readMem(0xa0dc));
        // CB 4F 01A7
        gbc.setState(0x438, 0xdcc3, 0x9060, 0xaf9e, 0x4783, 0x252, 0x1, 0x0);
        gbc.writeMem(0x438, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdcc3, gbc.sp());
        EXPECT(0x43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01A9
        gbc.setState(0x538e, 0x5534, 0x2050, 0x653c, 0x3699, 0xd21c, 0x1, 0x0);
        gbc.writeMem(0x538e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5534, gbc.sp());
        EXPECT(0x5390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01AA
        gbc.setState(0xca97, 0x3ac9, 0x3610, 0xe438, 0xa876, 0xd16c, 0x0, 0x1);
        gbc.writeMem(0xca97, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3ac9, gbc.sp());
        EXPECT(0xca99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca97));
        EXPECT(0x4f, gbc.readMem(0xca98));
        // CB 4F 01AB
        gbc.setState(0xb9c5, 0x55c2, 0x2cf0, 0x1a29, 0xf01, 0x71df, 0x1, 0x1);
        gbc.writeMem(0xb9c5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x55c2, gbc.sp());
        EXPECT(0xb9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c5));
        EXPECT(0x4f, gbc.readMem(0xb9c6));
        // CB 4F 01AC
        gbc.setState(0xfc8, 0xa2a, 0xf670, 0xb6b7, 0x594, 0xc44, 0x0, 0x0);
        gbc.writeMem(0xfc8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa2a, gbc.sp());
        EXPECT(0xfca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01AD
        gbc.setState(0x7ae2, 0x28f8, 0xb750, 0x6b36, 0x3f11, 0x2700, 0x1, 0x1);
        gbc.writeMem(0x7ae2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x28f8, gbc.sp());
        EXPECT(0x7ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01AF
        gbc.setState(0x25dc, 0x64da, 0x4140, 0x59c6, 0x618e, 0x8d71, 0x1, 0x0);
        gbc.writeMem(0x25dc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x64da, gbc.sp());
        EXPECT(0x25de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01B0
        gbc.setState(0x3c73, 0x2bf9, 0xe8b0, 0x8214, 0x9bd3, 0xac64, 0x1, 0x1);
        gbc.writeMem(0x3c73, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2bf9, gbc.sp());
        EXPECT(0x3c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01B1
        gbc.setState(0x6679, 0x15d0, 0xcd80, 0x6785, 0xb214, 0x9ef2, 0x0, 0x0);
        gbc.writeMem(0x6679, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x15d0, gbc.sp());
        EXPECT(0x667b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01B2
        gbc.setState(0x14a4, 0x7c2d, 0x8af0, 0x27c3, 0x83e3, 0x8da0, 0x1, 0x0);
        gbc.writeMem(0x14a4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7c2d, gbc.sp());
        EXPECT(0x14a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01B3
        gbc.setState(0x2edb, 0x4c7, 0xdba0, 0x6444, 0x3ef5, 0x1b4f, 0x0, 0x1);
        gbc.writeMem(0x2edb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4c7, gbc.sp());
        EXPECT(0x2edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01B5
        gbc.setState(0x45e0, 0xdcff, 0x4110, 0xdf20, 0x7cf6, 0xb866, 0x0, 0x1);
        gbc.writeMem(0x45e0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdcff, gbc.sp());
        EXPECT(0x45e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01B6
        gbc.setState(0xa4b3, 0x713a, 0xbaa0, 0x6f49, 0xc11f, 0x45b8, 0x1, 0x0);
        gbc.writeMem(0xa4b3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x713a, gbc.sp());
        EXPECT(0xa4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b3));
        EXPECT(0x4f, gbc.readMem(0xa4b4));
        // CB 4F 01B7
        gbc.setState(0x5c11, 0x2a8c, 0x1720, 0x74af, 0xf065, 0xf4a3, 0x1, 0x1);
        gbc.writeMem(0x5c11, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2a8c, gbc.sp());
        EXPECT(0x5c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01B8
        gbc.setState(0x45c, 0x1e60, 0xd950, 0x78da, 0xc69a, 0x1ccb, 0x1, 0x1);
        gbc.writeMem(0x45c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1e60, gbc.sp());
        EXPECT(0x45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01B9
        gbc.setState(0xe8bb, 0x8d9a, 0xecf0, 0xac29, 0x6be5, 0x4f2a, 0x0, 0x1);
        gbc.writeMem(0xe8bb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8d9a, gbc.sp());
        EXPECT(0xe8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8bb));
        EXPECT(0x4f, gbc.readMem(0xe8bc));
        // CB 4F 01BA
        gbc.setState(0x6a7c, 0xbff4, 0xc9e0, 0x6c9d, 0xd190, 0x5773, 0x0, 0x0);
        gbc.writeMem(0x6a7c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbff4, gbc.sp());
        EXPECT(0x6a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01BB
        gbc.setState(0x59f4, 0x2a86, 0xc60, 0x1c0c, 0xf26e, 0xf938, 0x1, 0x1);
        gbc.writeMem(0x59f4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2a86, gbc.sp());
        EXPECT(0x59f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01BC
        gbc.setState(0xec84, 0xa06d, 0x2e30, 0x7214, 0xdfd9, 0x58d, 0x1, 0x0);
        gbc.writeMem(0xec84, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa06d, gbc.sp());
        EXPECT(0xec86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec84));
        EXPECT(0x4f, gbc.readMem(0xec85));
        // CB 4F 01BD
        gbc.setState(0x3f2e, 0x6a08, 0xf370, 0x7a2f, 0xb318, 0x5a93, 0x0, 0x1);
        gbc.writeMem(0x3f2e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6a08, gbc.sp());
        EXPECT(0x3f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01BE
        gbc.setState(0x99fa, 0x1303, 0x7970, 0x9834, 0x9779, 0x6b00, 0x0, 0x0);
        gbc.writeMem(0x99fa, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1303, gbc.sp());
        EXPECT(0x99fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fa));
        EXPECT(0x4f, gbc.readMem(0x99fb));
        // CB 4F 01BF
        gbc.setState(0x7731, 0x9b13, 0x54a0, 0x64d7, 0xedeb, 0xead1, 0x1, 0x0);
        gbc.writeMem(0x7731, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9b13, gbc.sp());
        EXPECT(0x7733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01C0
        gbc.setState(0x4042, 0x3f58, 0xd920, 0xdb11, 0x4346, 0xe027, 0x1, 0x0);
        gbc.writeMem(0x4042, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3f58, gbc.sp());
        EXPECT(0x4044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01C1
        gbc.setState(0x407b, 0x14c, 0x6a20, 0xd461, 0x7bfa, 0x2542, 0x1, 0x1);
        gbc.writeMem(0x407b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x14c, gbc.sp());
        EXPECT(0x407d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01C2
        gbc.setState(0x4cf0, 0xd871, 0xda20, 0xc9ae, 0xd79c, 0xc205, 0x1, 0x1);
        gbc.writeMem(0x4cf0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd871, gbc.sp());
        EXPECT(0x4cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01C3
        gbc.setState(0x3317, 0xa707, 0xd500, 0x61d0, 0x4d60, 0x2d19, 0x1, 0x0);
        gbc.writeMem(0x3317, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa707, gbc.sp());
        EXPECT(0x3319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01C5
        gbc.setState(0xaf5e, 0x1a3, 0xa300, 0x92a2, 0xf101, 0x1ce0, 0x0, 0x1);
        gbc.writeMem(0xaf5e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1a3, gbc.sp());
        EXPECT(0xaf60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5e));
        EXPECT(0x4f, gbc.readMem(0xaf5f));
        // CB 4F 01C6
        gbc.setState(0x55f6, 0x494d, 0xf3b0, 0xd037, 0xd16d, 0xd438, 0x0, 0x1);
        gbc.writeMem(0x55f6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x494d, gbc.sp());
        EXPECT(0x55f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01C7
        gbc.setState(0xe991, 0xbb55, 0xaba0, 0x2208, 0xdf45, 0xecda, 0x1, 0x0);
        gbc.writeMem(0xe991, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbb55, gbc.sp());
        EXPECT(0xe993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe991));
        EXPECT(0x4f, gbc.readMem(0xe992));
        // CB 4F 01C8
        gbc.setState(0x7acf, 0xa8fe, 0x3ce0, 0xfe3b, 0x1ba, 0x271, 0x1, 0x1);
        gbc.writeMem(0x7acf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa8fe, gbc.sp());
        EXPECT(0x7ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01C9
        gbc.setState(0x1054, 0x5386, 0xa1b0, 0xf612, 0x8f2, 0x686a, 0x0, 0x0);
        gbc.writeMem(0x1054, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5386, gbc.sp());
        EXPECT(0x1056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01CA
        gbc.setState(0x8c89, 0xb96b, 0x4600, 0xf494, 0x2132, 0xfe71, 0x0, 0x1);
        gbc.writeMem(0x8c89, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb96b, gbc.sp());
        EXPECT(0x8c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c89));
        EXPECT(0x4f, gbc.readMem(0x8c8a));
        // CB 4F 01CB
        gbc.setState(0x1162, 0xc2a3, 0x72a0, 0xad45, 0x6f4d, 0xef1d, 0x1, 0x1);
        gbc.writeMem(0x1162, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc2a3, gbc.sp());
        EXPECT(0x1164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01CC
        gbc.setState(0x406, 0xfa3b, 0x58c0, 0xe9df, 0xd670, 0x18f, 0x1, 0x0);
        gbc.writeMem(0x406, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfa3b, gbc.sp());
        EXPECT(0x408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01CD
        gbc.setState(0x6c27, 0xbc0, 0xe190, 0x8379, 0x3951, 0x29fd, 0x1, 0x1);
        gbc.writeMem(0x6c27, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbc0, gbc.sp());
        EXPECT(0x6c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01CE
        gbc.setState(0x61f7, 0xc6a1, 0x1440, 0xc8f9, 0x10c5, 0x3c81, 0x1, 0x0);
        gbc.writeMem(0x61f7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc6a1, gbc.sp());
        EXPECT(0x61f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01CF
        gbc.setState(0x48e1, 0xbc94, 0x9ae0, 0x20b, 0x5134, 0x9cfa, 0x0, 0x0);
        gbc.writeMem(0x48e1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbc94, gbc.sp());
        EXPECT(0x48e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01D0
        gbc.setState(0xdb60, 0xdd35, 0x7c00, 0x8c28, 0x227c, 0x4f22, 0x0, 0x1);
        gbc.writeMem(0xdb60, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdd35, gbc.sp());
        EXPECT(0xdb62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb60));
        EXPECT(0x4f, gbc.readMem(0xdb61));
        // CB 4F 01D1
        gbc.setState(0xb0c5, 0xfca2, 0x4380, 0xaa3e, 0x7cbd, 0x9acf, 0x1, 0x0);
        gbc.writeMem(0xb0c5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfca2, gbc.sp());
        EXPECT(0xb0c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c5));
        EXPECT(0x4f, gbc.readMem(0xb0c6));
        // CB 4F 01D2
        gbc.setState(0xe641, 0x5339, 0x8ff0, 0x97cf, 0x99a7, 0xe94f, 0x0, 0x0);
        gbc.writeMem(0xe641, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5339, gbc.sp());
        EXPECT(0xe643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe641));
        EXPECT(0x4f, gbc.readMem(0xe642));
        // CB 4F 01D3
        gbc.setState(0x606a, 0xa5c6, 0x5e60, 0xfb70, 0x75b5, 0x3780, 0x1, 0x1);
        gbc.writeMem(0x606a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa5c6, gbc.sp());
        EXPECT(0x606c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01D4
        gbc.setState(0x28b3, 0xfa3, 0x1fe0, 0xc9b7, 0xc5e, 0x5f6e, 0x1, 0x1);
        gbc.writeMem(0x28b3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfa3, gbc.sp());
        EXPECT(0x28b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01D5
        gbc.setState(0x662c, 0xebd9, 0x1b0, 0x1bc6, 0x94df, 0x52d2, 0x0, 0x1);
        gbc.writeMem(0x662c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xebd9, gbc.sp());
        EXPECT(0x662e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01D6
        gbc.setState(0x3fda, 0x65ef, 0x5f60, 0x31fa, 0x203f, 0x5d43, 0x0, 0x1);
        gbc.writeMem(0x3fda, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x65ef, gbc.sp());
        EXPECT(0x3fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01D7
        gbc.setState(0x12f3, 0xb5e8, 0x4d80, 0xbb2c, 0xa671, 0x358e, 0x1, 0x1);
        gbc.writeMem(0x12f3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb5e8, gbc.sp());
        EXPECT(0x12f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01D8
        gbc.setState(0x626b, 0x3403, 0x6990, 0x254f, 0x605, 0x4bb6, 0x1, 0x0);
        gbc.writeMem(0x626b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3403, gbc.sp());
        EXPECT(0x626d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01D9
        gbc.setState(0x6b10, 0xd66e, 0xfdd0, 0xa100, 0x962f, 0xe40b, 0x1, 0x1);
        gbc.writeMem(0x6b10, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd66e, gbc.sp());
        EXPECT(0x6b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01DA
        gbc.setState(0xd808, 0x4a41, 0xec10, 0xd381, 0x618e, 0x838a, 0x0, 0x0);
        gbc.writeMem(0xd808, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4a41, gbc.sp());
        EXPECT(0xd80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd808));
        EXPECT(0x4f, gbc.readMem(0xd809));
        // CB 4F 01DB
        gbc.setState(0xe5de, 0x4da4, 0x6790, 0xc3c, 0xc639, 0x8b5d, 0x1, 0x1);
        gbc.writeMem(0xe5de, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4da4, gbc.sp());
        EXPECT(0xe5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5de));
        EXPECT(0x4f, gbc.readMem(0xe5df));
        // CB 4F 01DC
        gbc.setState(0xe347, 0x1fc3, 0x46f0, 0x93a, 0x1c38, 0x2155, 0x0, 0x0);
        gbc.writeMem(0xe347, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1fc3, gbc.sp());
        EXPECT(0xe349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe347));
        EXPECT(0x4f, gbc.readMem(0xe348));
        // CB 4F 01DD
        gbc.setState(0x350c, 0xb49c, 0x27f0, 0x444d, 0xd8e4, 0xbfb7, 0x0, 0x1);
        gbc.writeMem(0x350c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb49c, gbc.sp());
        EXPECT(0x350e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01DE
        gbc.setState(0x279a, 0x23a0, 0x9260, 0xe8b5, 0x806a, 0xd4b6, 0x0, 0x0);
        gbc.writeMem(0x279a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x23a0, gbc.sp());
        EXPECT(0x279c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01DF
        gbc.setState(0xee56, 0x4efb, 0xff50, 0x6bb8, 0x8ac7, 0xe36, 0x1, 0x1);
        gbc.writeMem(0xee56, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4efb, gbc.sp());
        EXPECT(0xee58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee56));
        EXPECT(0x4f, gbc.readMem(0xee57));
        // CB 4F 01E0
        gbc.setState(0xaeba, 0x68d6, 0xcc40, 0xec7d, 0x24cf, 0xda58, 0x0, 0x1);
        gbc.writeMem(0xaeba, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x68d6, gbc.sp());
        EXPECT(0xaebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeba));
        EXPECT(0x4f, gbc.readMem(0xaebb));
        // CB 4F 01E1
        gbc.setState(0x9f53, 0x77d7, 0xfeb0, 0x4da8, 0xdb78, 0x7123, 0x1, 0x1);
        gbc.writeMem(0x9f53, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x77d7, gbc.sp());
        EXPECT(0x9f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f53));
        EXPECT(0x4f, gbc.readMem(0x9f54));
        // CB 4F 01E2
        gbc.setState(0xacf2, 0x52d, 0xd8d0, 0x20b9, 0xd291, 0x18fd, 0x0, 0x1);
        gbc.writeMem(0xacf2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x52d, gbc.sp());
        EXPECT(0xacf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf2));
        EXPECT(0x4f, gbc.readMem(0xacf3));
        // CB 4F 01E3
        gbc.setState(0x5db2, 0x67b7, 0xc090, 0x1ff2, 0xf455, 0xa777, 0x0, 0x1);
        gbc.writeMem(0x5db2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x67b7, gbc.sp());
        EXPECT(0x5db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01E4
        gbc.setState(0x9dea, 0x5063, 0xdc80, 0xe976, 0x7593, 0xe67c, 0x0, 0x1);
        gbc.writeMem(0x9dea, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5063, gbc.sp());
        EXPECT(0x9dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dea));
        EXPECT(0x4f, gbc.readMem(0x9deb));
        // CB 4F 01E5
        gbc.setState(0xe67a, 0x4529, 0xa140, 0x1ca1, 0x6eeb, 0xec0f, 0x1, 0x0);
        gbc.writeMem(0xe67a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4529, gbc.sp());
        EXPECT(0xe67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe67a));
        EXPECT(0x4f, gbc.readMem(0xe67b));
        // CB 4F 01E6
        gbc.setState(0xc985, 0x2350, 0xea20, 0x97de, 0xf596, 0x74a2, 0x1, 0x1);
        gbc.writeMem(0xc985, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2350, gbc.sp());
        EXPECT(0xc987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc985));
        EXPECT(0x4f, gbc.readMem(0xc986));
        // CB 4F 01E7
        gbc.setState(0xa2db, 0x9d57, 0xd560, 0xd12f, 0xf145, 0x9818, 0x0, 0x0);
        gbc.writeMem(0xa2db, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9d57, gbc.sp());
        EXPECT(0xa2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2db));
        EXPECT(0x4f, gbc.readMem(0xa2dc));
        // CB 4F 01E8
        gbc.setState(0x54ed, 0x35de, 0x9680, 0x9976, 0x947a, 0x949a, 0x1, 0x0);
        gbc.writeMem(0x54ed, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x35de, gbc.sp());
        EXPECT(0x54ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01E9
        gbc.setState(0xeed4, 0xa30f, 0x5340, 0x1f3a, 0xad4a, 0x2f40, 0x1, 0x0);
        gbc.writeMem(0xeed4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa30f, gbc.sp());
        EXPECT(0xeed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed4));
        EXPECT(0x4f, gbc.readMem(0xeed5));
        // CB 4F 01EA
        gbc.setState(0x20ec, 0x106, 0x54b0, 0x6759, 0xc25c, 0x5c42, 0x0, 0x0);
        gbc.writeMem(0x20ec, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x106, gbc.sp());
        EXPECT(0x20ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01EB
        gbc.setState(0x514, 0x192f, 0x410, 0xfc33, 0x93be, 0xcdbe, 0x0, 0x0);
        gbc.writeMem(0x514, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x192f, gbc.sp());
        EXPECT(0x516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01EC
        gbc.setState(0x283e, 0x2f01, 0x9020, 0x86d1, 0xfcec, 0x674f, 0x1, 0x1);
        gbc.writeMem(0x283e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2f01, gbc.sp());
        EXPECT(0x2840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01ED
        gbc.setState(0x433c, 0xbfc5, 0xeb0, 0xa5f2, 0x138a, 0x46bb, 0x0, 0x1);
        gbc.writeMem(0x433c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbfc5, gbc.sp());
        EXPECT(0x433e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01EF
        gbc.setState(0x9448, 0x6732, 0xe7a0, 0xc9fc, 0x815a, 0xbb4f, 0x0, 0x0);
        gbc.writeMem(0x9448, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6732, gbc.sp());
        EXPECT(0x944a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9448));
        EXPECT(0x4f, gbc.readMem(0x9449));
        // CB 4F 01F0
        gbc.setState(0x3961, 0xd575, 0xa490, 0x4013, 0xf157, 0xf0cd, 0x1, 0x1);
        gbc.writeMem(0x3961, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd575, gbc.sp());
        EXPECT(0x3963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01F1
        gbc.setState(0xb80b, 0xe3ae, 0xb20, 0x5489, 0x69ca, 0x16f5, 0x1, 0x1);
        gbc.writeMem(0xb80b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe3ae, gbc.sp());
        EXPECT(0xb80d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb80b));
        EXPECT(0x4f, gbc.readMem(0xb80c));
        // CB 4F 01F2
        gbc.setState(0xe983, 0x4ef8, 0x2ac0, 0x832a, 0x55a, 0x2915, 0x0, 0x1);
        gbc.writeMem(0xe983, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4ef8, gbc.sp());
        EXPECT(0xe985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe983));
        EXPECT(0x4f, gbc.readMem(0xe984));
        // CB 4F 01F3
        gbc.setState(0xb054, 0xe035, 0x1270, 0x51be, 0x97ea, 0xb521, 0x1, 0x1);
        gbc.writeMem(0xb054, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0xb056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb054));
        EXPECT(0x4f, gbc.readMem(0xb055));
        // CB 4F 01F4
        gbc.setState(0xb0b1, 0x10d9, 0x8b90, 0x4bcc, 0x520b, 0x69f7, 0x0, 0x0);
        gbc.writeMem(0xb0b1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x10d9, gbc.sp());
        EXPECT(0xb0b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b1));
        EXPECT(0x4f, gbc.readMem(0xb0b2));
        // CB 4F 01F5
        gbc.setState(0xc8c1, 0xbb16, 0x5db0, 0xf6e1, 0x1939, 0x943c, 0x0, 0x0);
        gbc.writeMem(0xc8c1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbb16, gbc.sp());
        EXPECT(0xc8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c1));
        EXPECT(0x4f, gbc.readMem(0xc8c2));
        // CB 4F 01F6
        gbc.setState(0x6a26, 0x7786, 0x6080, 0xef2a, 0x7f33, 0x6b97, 0x1, 0x0);
        gbc.writeMem(0x6a26, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7786, gbc.sp());
        EXPECT(0x6a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01F7
        gbc.setState(0xd41f, 0x5b9f, 0x7310, 0x358, 0x2c24, 0x3304, 0x0, 0x1);
        gbc.writeMem(0xd41f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5b9f, gbc.sp());
        EXPECT(0xd421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41f));
        EXPECT(0x4f, gbc.readMem(0xd420));
        // CB 4F 01F8
        gbc.setState(0xa268, 0x35d, 0xd7f0, 0x1e2a, 0x8e26, 0xaaae, 0x1, 0x0);
        gbc.writeMem(0xa268, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x35d, gbc.sp());
        EXPECT(0xa26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa268));
        EXPECT(0x4f, gbc.readMem(0xa269));
        // CB 4F 01F9
        gbc.setState(0x3e2b, 0x2468, 0x4df0, 0xd5bc, 0xe2a6, 0xc051, 0x0, 0x0);
        gbc.writeMem(0x3e2b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2468, gbc.sp());
        EXPECT(0x3e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01FA
        gbc.setState(0x789a, 0x7999, 0x6730, 0x4a, 0x94e3, 0xc18a, 0x1, 0x0);
        gbc.writeMem(0x789a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7999, gbc.sp());
        EXPECT(0x789c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01FB
        gbc.setState(0x300d, 0xaf5b, 0x2a70, 0x63b6, 0x9dcf, 0xf39d, 0x1, 0x1);
        gbc.writeMem(0x300d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xaf5b, gbc.sp());
        EXPECT(0x300f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 01FC
        gbc.setState(0xee45, 0x6bfb, 0x2850, 0xb98, 0x708, 0x19b3, 0x0, 0x0);
        gbc.writeMem(0xee45, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6bfb, gbc.sp());
        EXPECT(0xee47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee45));
        EXPECT(0x4f, gbc.readMem(0xee46));
        // CB 4F 01FD
        gbc.setState(0x2f08, 0x51c2, 0xd480, 0x8e72, 0xc62d, 0x76b2, 0x0, 0x1);
        gbc.writeMem(0x2f08, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x51c2, gbc.sp());
        EXPECT(0x2f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 01FE
        gbc.setState(0xe087, 0x4ea4, 0x74a0, 0x91a6, 0xf5b6, 0x7cff, 0x0, 0x1);
        gbc.writeMem(0xe087, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4ea4, gbc.sp());
        EXPECT(0xe089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe087));
        EXPECT(0x4f, gbc.readMem(0xe088));
        // CB 4F 01FF
        gbc.setState(0xcb69, 0x6599, 0xde80, 0xfd73, 0x60ac, 0x4889, 0x1, 0x1);
        gbc.writeMem(0xcb69, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6599, gbc.sp());
        EXPECT(0xcb6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb69));
        EXPECT(0x4f, gbc.readMem(0xcb6a));
        // CB 4F 0200
        gbc.setState(0xdb2d, 0x79b5, 0x53e0, 0xa45b, 0xce6e, 0xa7b1, 0x1, 0x1);
        gbc.writeMem(0xdb2d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x79b5, gbc.sp());
        EXPECT(0xdb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2d));
        EXPECT(0x4f, gbc.readMem(0xdb2e));
        // CB 4F 0201
        gbc.setState(0xab22, 0xa110, 0xa5e0, 0x974f, 0xd25d, 0x3506, 0x0, 0x1);
        gbc.writeMem(0xab22, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa110, gbc.sp());
        EXPECT(0xab24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab22));
        EXPECT(0x4f, gbc.readMem(0xab23));
        // CB 4F 0202
        gbc.setState(0xa420, 0xcbf0, 0x910, 0x38c0, 0xa493, 0xea4c, 0x0, 0x0);
        gbc.writeMem(0xa420, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcbf0, gbc.sp());
        EXPECT(0xa422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa420));
        EXPECT(0x4f, gbc.readMem(0xa421));
        // CB 4F 0203
        gbc.setState(0x7c2d, 0x15af, 0x2120, 0x1bc6, 0xcee0, 0x7776, 0x1, 0x0);
        gbc.writeMem(0x7c2d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x15af, gbc.sp());
        EXPECT(0x7c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0204
        gbc.setState(0xa8c6, 0x714, 0xd350, 0x5516, 0x2e8f, 0xa041, 0x0, 0x1);
        gbc.writeMem(0xa8c6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x714, gbc.sp());
        EXPECT(0xa8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c6));
        EXPECT(0x4f, gbc.readMem(0xa8c7));
        // CB 4F 0205
        gbc.setState(0xe588, 0x5867, 0x2150, 0xdade, 0x85b8, 0x350, 0x0, 0x1);
        gbc.writeMem(0xe588, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5867, gbc.sp());
        EXPECT(0xe58a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe588));
        EXPECT(0x4f, gbc.readMem(0xe589));
        // CB 4F 0206
        gbc.setState(0x712b, 0x59c6, 0x3cb0, 0xd53f, 0x2424, 0x1351, 0x0, 0x0);
        gbc.writeMem(0x712b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x59c6, gbc.sp());
        EXPECT(0x712d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0207
        gbc.setState(0xddf7, 0x2bfe, 0xd4b0, 0xf543, 0xadbc, 0x4fe3, 0x1, 0x1);
        gbc.writeMem(0xddf7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2bfe, gbc.sp());
        EXPECT(0xddf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf7));
        EXPECT(0x4f, gbc.readMem(0xddf8));
        // CB 4F 0208
        gbc.setState(0xd726, 0xe079, 0x7420, 0x3db6, 0x3196, 0xf5e8, 0x1, 0x0);
        gbc.writeMem(0xd726, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe079, gbc.sp());
        EXPECT(0xd728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd726));
        EXPECT(0x4f, gbc.readMem(0xd727));
        // CB 4F 0209
        gbc.setState(0xb812, 0xe815, 0xd670, 0xec11, 0x1de9, 0x9f59, 0x0, 0x0);
        gbc.writeMem(0xb812, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe815, gbc.sp());
        EXPECT(0xb814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb812));
        EXPECT(0x4f, gbc.readMem(0xb813));
        // CB 4F 020A
        gbc.setState(0x18b5, 0xe23f, 0xddc0, 0x165e, 0x50a0, 0xebd8, 0x0, 0x0);
        gbc.writeMem(0x18b5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe23f, gbc.sp());
        EXPECT(0x18b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 020B
        gbc.setState(0xec97, 0x574c, 0xa1c0, 0x9399, 0xb99a, 0xa57e, 0x0, 0x0);
        gbc.writeMem(0xec97, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x574c, gbc.sp());
        EXPECT(0xec99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec97));
        EXPECT(0x4f, gbc.readMem(0xec98));
        // CB 4F 020C
        gbc.setState(0x284, 0x9311, 0x96c0, 0x5a21, 0x775f, 0x2da4, 0x1, 0x0);
        gbc.writeMem(0x284, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9311, gbc.sp());
        EXPECT(0x286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 020D
        gbc.setState(0xb021, 0x904e, 0x6db0, 0xc217, 0x6519, 0xf10d, 0x1, 0x1);
        gbc.writeMem(0xb021, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x904e, gbc.sp());
        EXPECT(0xb023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb021));
        EXPECT(0x4f, gbc.readMem(0xb022));
        // CB 4F 020E
        gbc.setState(0x536, 0x8efb, 0xd490, 0xb142, 0x6a73, 0xe4e9, 0x0, 0x0);
        gbc.writeMem(0x536, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8efb, gbc.sp());
        EXPECT(0x538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 020F
        gbc.setState(0x6ea0, 0x21d1, 0xe7e0, 0x4a1f, 0xf27, 0x973, 0x0, 0x1);
        gbc.writeMem(0x6ea0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x21d1, gbc.sp());
        EXPECT(0x6ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0210
        gbc.setState(0x507c, 0xbeac, 0x1ff0, 0xf9ca, 0x7a1d, 0x299a, 0x0, 0x0);
        gbc.writeMem(0x507c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbeac, gbc.sp());
        EXPECT(0x507e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0211
        gbc.setState(0x2779, 0x52a8, 0x1ca0, 0x4855, 0x843c, 0x93cf, 0x1, 0x1);
        gbc.writeMem(0x2779, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0x277b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0213
        gbc.setState(0x3a00, 0xf7b8, 0xfb70, 0x316f, 0xe2ec, 0x12f2, 0x0, 0x1);
        gbc.writeMem(0x3a00, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf7b8, gbc.sp());
        EXPECT(0x3a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0214
        gbc.setState(0xca9e, 0x4533, 0x52f0, 0xfa0f, 0x78, 0x6490, 0x1, 0x0);
        gbc.writeMem(0xca9e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4533, gbc.sp());
        EXPECT(0xcaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9e));
        EXPECT(0x4f, gbc.readMem(0xca9f));
        // CB 4F 0215
        gbc.setState(0xdce4, 0x61a2, 0xca20, 0x7dee, 0x50fc, 0xa6a7, 0x1, 0x0);
        gbc.writeMem(0xdce4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x61a2, gbc.sp());
        EXPECT(0xdce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce4));
        EXPECT(0x4f, gbc.readMem(0xdce5));
        // CB 4F 0216
        gbc.setState(0xb769, 0x5e8e, 0x5680, 0x4381, 0x9ef0, 0x6521, 0x0, 0x0);
        gbc.writeMem(0xb769, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5e8e, gbc.sp());
        EXPECT(0xb76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb769));
        EXPECT(0x4f, gbc.readMem(0xb76a));
        // CB 4F 0217
        gbc.setState(0x2fe7, 0x5ec7, 0x7680, 0xe487, 0x5390, 0xeedc, 0x0, 0x1);
        gbc.writeMem(0x2fe7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5ec7, gbc.sp());
        EXPECT(0x2fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0218
        gbc.setState(0xa0b5, 0xfa2e, 0x5b60, 0x6c50, 0x96cc, 0xdae4, 0x1, 0x1);
        gbc.writeMem(0xa0b5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfa2e, gbc.sp());
        EXPECT(0xa0b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b5));
        EXPECT(0x4f, gbc.readMem(0xa0b6));
        // CB 4F 0219
        gbc.setState(0x8c75, 0xac70, 0x49c0, 0x38f1, 0x8dee, 0x41e5, 0x0, 0x1);
        gbc.writeMem(0x8c75, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xac70, gbc.sp());
        EXPECT(0x8c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c75));
        EXPECT(0x4f, gbc.readMem(0x8c76));
        // CB 4F 021B
        gbc.setState(0x1864, 0x7dc0, 0x1450, 0x48b5, 0x69b5, 0xcddc, 0x1, 0x1);
        gbc.writeMem(0x1864, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7dc0, gbc.sp());
        EXPECT(0x1866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 021C
        gbc.setState(0x4f4e, 0xe1da, 0x3790, 0xe760, 0x963d, 0x26e8, 0x0, 0x1);
        gbc.writeMem(0x4f4e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe1da, gbc.sp());
        EXPECT(0x4f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 021D
        gbc.setState(0x9ea5, 0x80ed, 0xb4f0, 0xc586, 0xd1a1, 0xe738, 0x0, 0x0);
        gbc.writeMem(0x9ea5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x80ed, gbc.sp());
        EXPECT(0x9ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea5));
        EXPECT(0x4f, gbc.readMem(0x9ea6));
        // CB 4F 021E
        gbc.setState(0xefff, 0xafdc, 0xddd0, 0x64bb, 0x8017, 0xecd3, 0x0, 0x0);
        gbc.writeMem(0xefff, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xafdc, gbc.sp());
        EXPECT(0xf001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefff));
        EXPECT(0x4f, gbc.readMem(0xf000));
        // CB 4F 021F
        gbc.setState(0x6b7c, 0x1458, 0x8300, 0xfa73, 0xb35b, 0xaced, 0x0, 0x0);
        gbc.writeMem(0x6b7c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1458, gbc.sp());
        EXPECT(0x6b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0220
        gbc.setState(0x39fd, 0xa112, 0xc5f0, 0x1664, 0xa9b4, 0x9ad6, 0x0, 0x1);
        gbc.writeMem(0x39fd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa112, gbc.sp());
        EXPECT(0x39ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0221
        gbc.setState(0x13fe, 0x3ccc, 0xb3e0, 0xaecb, 0xa150, 0xbed9, 0x0, 0x0);
        gbc.writeMem(0x13fe, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3ccc, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0222
        gbc.setState(0x1ed8, 0x151e, 0xbc40, 0x7887, 0x16e0, 0xbabe, 0x0, 0x0);
        gbc.writeMem(0x1ed8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x151e, gbc.sp());
        EXPECT(0x1eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0223
        gbc.setState(0x33e4, 0xbd69, 0xb780, 0x92e3, 0x4c6, 0x6d6, 0x1, 0x1);
        gbc.writeMem(0x33e4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbd69, gbc.sp());
        EXPECT(0x33e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0224
        gbc.setState(0xab73, 0x4b31, 0x6d60, 0xed6c, 0x192c, 0xc3ed, 0x1, 0x1);
        gbc.writeMem(0xab73, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4b31, gbc.sp());
        EXPECT(0xab75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab73));
        EXPECT(0x4f, gbc.readMem(0xab74));
        // CB 4F 0225
        gbc.setState(0x8a2b, 0x35e3, 0xec70, 0xa09a, 0x4a0f, 0x46fd, 0x0, 0x1);
        gbc.writeMem(0x8a2b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x35e3, gbc.sp());
        EXPECT(0x8a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2b));
        EXPECT(0x4f, gbc.readMem(0x8a2c));
        // CB 4F 0227
        gbc.setState(0xb83a, 0xd373, 0xd610, 0xc5b1, 0xe8c8, 0xae22, 0x0, 0x0);
        gbc.writeMem(0xb83a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd373, gbc.sp());
        EXPECT(0xb83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83a));
        EXPECT(0x4f, gbc.readMem(0xb83b));
        // CB 4F 0228
        gbc.setState(0x71d8, 0xd51f, 0xf7b0, 0xe05d, 0x22ad, 0x3a0a, 0x0, 0x0);
        gbc.writeMem(0x71d8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd51f, gbc.sp());
        EXPECT(0x71da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0229
        gbc.setState(0x6e08, 0x6920, 0x6b10, 0x2519, 0x9508, 0xa8, 0x0, 0x0);
        gbc.writeMem(0x6e08, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6920, gbc.sp());
        EXPECT(0x6e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 022A
        gbc.setState(0xd1a1, 0x3b56, 0x9440, 0x3d8b, 0xa42, 0xc77d, 0x0, 0x0);
        gbc.writeMem(0xd1a1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3b56, gbc.sp());
        EXPECT(0xd1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a1));
        EXPECT(0x4f, gbc.readMem(0xd1a2));
        // CB 4F 022B
        gbc.setState(0xc54a, 0x116e, 0x8fb0, 0xb6a4, 0x53b1, 0x3d9b, 0x1, 0x0);
        gbc.writeMem(0xc54a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x116e, gbc.sp());
        EXPECT(0xc54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54a));
        EXPECT(0x4f, gbc.readMem(0xc54b));
        // CB 4F 022C
        gbc.setState(0x78fd, 0x94fb, 0x89e0, 0xc9bd, 0xb5a1, 0x3957, 0x1, 0x0);
        gbc.writeMem(0x78fd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x94fb, gbc.sp());
        EXPECT(0x78ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 022D
        gbc.setState(0x8a6c, 0xee53, 0xce20, 0x6824, 0x8b3e, 0xc4b6, 0x0, 0x1);
        gbc.writeMem(0x8a6c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xee53, gbc.sp());
        EXPECT(0x8a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6c));
        EXPECT(0x4f, gbc.readMem(0x8a6d));
        // CB 4F 022E
        gbc.setState(0xd39, 0xd19d, 0x1630, 0x5814, 0x8ed4, 0x315b, 0x1, 0x0);
        gbc.writeMem(0xd39, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd19d, gbc.sp());
        EXPECT(0xd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 022F
        gbc.setState(0x6d90, 0x6b0a, 0x2590, 0xda84, 0xd8e8, 0xf8d4, 0x1, 0x1);
        gbc.writeMem(0x6d90, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6b0a, gbc.sp());
        EXPECT(0x6d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0230
        gbc.setState(0xae12, 0xdd41, 0xfef0, 0x3517, 0x1355, 0xf54e, 0x0, 0x1);
        gbc.writeMem(0xae12, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdd41, gbc.sp());
        EXPECT(0xae14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae12));
        EXPECT(0x4f, gbc.readMem(0xae13));
        // CB 4F 0231
        gbc.setState(0x7e67, 0x41dd, 0x67a0, 0x1662, 0xc36b, 0x5497, 0x1, 0x0);
        gbc.writeMem(0x7e67, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x41dd, gbc.sp());
        EXPECT(0x7e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0232
        gbc.setState(0xe900, 0xc18c, 0xa100, 0x2684, 0xac31, 0x5d46, 0x0, 0x0);
        gbc.writeMem(0xe900, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc18c, gbc.sp());
        EXPECT(0xe902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe900));
        EXPECT(0x4f, gbc.readMem(0xe901));
        // CB 4F 0233
        gbc.setState(0x1ba9, 0xe25c, 0x6200, 0xf0df, 0x37c9, 0x8aac, 0x1, 0x1);
        gbc.writeMem(0x1ba9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe25c, gbc.sp());
        EXPECT(0x1bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0234
        gbc.setState(0x44e, 0xb12f, 0xb350, 0xf4e4, 0x2554, 0xb87, 0x0, 0x0);
        gbc.writeMem(0x44e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb12f, gbc.sp());
        EXPECT(0x450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0235
        gbc.setState(0x1261, 0x4cc8, 0xc0e0, 0xb332, 0x1e31, 0xe700, 0x0, 0x0);
        gbc.writeMem(0x1261, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4cc8, gbc.sp());
        EXPECT(0x1263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0237
        gbc.setState(0xd36a, 0xf280, 0x50c0, 0xbb8c, 0x3bb4, 0x7a1b, 0x1, 0x0);
        gbc.writeMem(0xd36a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf280, gbc.sp());
        EXPECT(0xd36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36a));
        EXPECT(0x4f, gbc.readMem(0xd36b));
        // CB 4F 0238
        gbc.setState(0x3b38, 0xca16, 0xf4f0, 0x93ce, 0x3ba8, 0x9206, 0x0, 0x1);
        gbc.writeMem(0x3b38, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xca16, gbc.sp());
        EXPECT(0x3b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0239
        gbc.setState(0x69a4, 0x4687, 0x3b00, 0x52aa, 0x54ba, 0xb4fc, 0x1, 0x0);
        gbc.writeMem(0x69a4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4687, gbc.sp());
        EXPECT(0x69a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 023A
        gbc.setState(0x2c71, 0xfc38, 0xa260, 0xa05a, 0x309f, 0xac8d, 0x0, 0x1);
        gbc.writeMem(0x2c71, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfc38, gbc.sp());
        EXPECT(0x2c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 023B
        gbc.setState(0xec20, 0xaaea, 0x1ad0, 0x433c, 0x7ed2, 0x788f, 0x0, 0x1);
        gbc.writeMem(0xec20, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaaea, gbc.sp());
        EXPECT(0xec22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec20));
        EXPECT(0x4f, gbc.readMem(0xec21));
        // CB 4F 023C
        gbc.setState(0xda36, 0xb564, 0x6c0, 0x6ef9, 0x6a31, 0x64e, 0x1, 0x1);
        gbc.writeMem(0xda36, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb564, gbc.sp());
        EXPECT(0xda38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda36));
        EXPECT(0x4f, gbc.readMem(0xda37));
        // CB 4F 023D
        gbc.setState(0x5a89, 0x4b67, 0x4b30, 0xc1ca, 0x1949, 0xcbc9, 0x1, 0x0);
        gbc.writeMem(0x5a89, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4b67, gbc.sp());
        EXPECT(0x5a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 023E
        gbc.setState(0x6216, 0xd5dd, 0x9a90, 0xaf3e, 0x17c3, 0x765b, 0x1, 0x1);
        gbc.writeMem(0x6216, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd5dd, gbc.sp());
        EXPECT(0x6218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 023F
        gbc.setState(0x8429, 0x70d2, 0x3990, 0x1865, 0xcf37, 0x9fbf, 0x1, 0x1);
        gbc.writeMem(0x8429, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x70d2, gbc.sp());
        EXPECT(0x842b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8429));
        EXPECT(0x4f, gbc.readMem(0x842a));
        // CB 4F 0240
        gbc.setState(0x9c34, 0x8ef1, 0x1fb0, 0x1f6c, 0x94d, 0x83ac, 0x1, 0x0);
        gbc.writeMem(0x9c34, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8ef1, gbc.sp());
        EXPECT(0x9c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c34));
        EXPECT(0x4f, gbc.readMem(0x9c35));
        // CB 4F 0241
        gbc.setState(0x7df0, 0x4ae, 0x1600, 0x2bb5, 0x890f, 0x1228, 0x0, 0x0);
        gbc.writeMem(0x7df0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4ae, gbc.sp());
        EXPECT(0x7df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0242
        gbc.setState(0x412, 0x5ae3, 0x5210, 0xa495, 0x489e, 0x6821, 0x0, 0x0);
        gbc.writeMem(0x412, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5ae3, gbc.sp());
        EXPECT(0x414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0243
        gbc.setState(0x45be, 0x478c, 0x4770, 0x6fe7, 0x1700, 0xf16c, 0x0, 0x1);
        gbc.writeMem(0x45be, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x478c, gbc.sp());
        EXPECT(0x45c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0244
        gbc.setState(0x1f63, 0xd5e0, 0x4350, 0x1863, 0xe01e, 0xc90b, 0x1, 0x1);
        gbc.writeMem(0x1f63, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd5e0, gbc.sp());
        EXPECT(0x1f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0245
        gbc.setState(0xafab, 0x7c54, 0x7800, 0xa466, 0xc0c9, 0x52f, 0x1, 0x1);
        gbc.writeMem(0xafab, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c54, gbc.sp());
        EXPECT(0xafad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafab));
        EXPECT(0x4f, gbc.readMem(0xafac));
        // CB 4F 0246
        gbc.setState(0xb60, 0x89e7, 0x1b30, 0x8da4, 0x424b, 0xdff8, 0x0, 0x1);
        gbc.writeMem(0xb60, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x89e7, gbc.sp());
        EXPECT(0xb62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0247
        gbc.setState(0xa752, 0xb3d1, 0xba60, 0xd31f, 0x5e6, 0xe2e0, 0x0, 0x1);
        gbc.writeMem(0xa752, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb3d1, gbc.sp());
        EXPECT(0xa754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa752));
        EXPECT(0x4f, gbc.readMem(0xa753));
        // CB 4F 0248
        gbc.setState(0x399a, 0x5da7, 0x6c20, 0x8dac, 0x6d40, 0x1dd5, 0x1, 0x0);
        gbc.writeMem(0x399a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5da7, gbc.sp());
        EXPECT(0x399c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0249
        gbc.setState(0x6444, 0x31e4, 0x8460, 0x3a7c, 0xde23, 0xa7e3, 0x0, 0x0);
        gbc.writeMem(0x6444, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x31e4, gbc.sp());
        EXPECT(0x6446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 024A
        gbc.setState(0xc7e0, 0x745f, 0x67c0, 0x71bb, 0xbc09, 0xc47a, 0x0, 0x0);
        gbc.writeMem(0xc7e0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x745f, gbc.sp());
        EXPECT(0xc7e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e0));
        EXPECT(0x4f, gbc.readMem(0xc7e1));
        // CB 4F 024B
        gbc.setState(0x354f, 0xeb15, 0x3150, 0x9a3b, 0x5cba, 0x16b9, 0x1, 0x0);
        gbc.writeMem(0x354f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xeb15, gbc.sp());
        EXPECT(0x3551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 024C
        gbc.setState(0xd429, 0xb911, 0x1a50, 0x7bc5, 0xe9e6, 0x8a3c, 0x0, 0x1);
        gbc.writeMem(0xd429, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb911, gbc.sp());
        EXPECT(0xd42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd429));
        EXPECT(0x4f, gbc.readMem(0xd42a));
        // CB 4F 024D
        gbc.setState(0xada1, 0x30ed, 0x9ac0, 0x3258, 0xe294, 0xf431, 0x0, 0x0);
        gbc.writeMem(0xada1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x30ed, gbc.sp());
        EXPECT(0xada3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada1));
        EXPECT(0x4f, gbc.readMem(0xada2));
        // CB 4F 024E
        gbc.setState(0x5631, 0x2ab1, 0x8e50, 0xd12c, 0x8fed, 0x39e2, 0x1, 0x1);
        gbc.writeMem(0x5631, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2ab1, gbc.sp());
        EXPECT(0x5633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 024F
        gbc.setState(0xe7c5, 0x5ea2, 0xffc0, 0xb13b, 0xf658, 0x84d7, 0x1, 0x0);
        gbc.writeMem(0xe7c5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5ea2, gbc.sp());
        EXPECT(0xe7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c5));
        EXPECT(0x4f, gbc.readMem(0xe7c6));
        // CB 4F 0250
        gbc.setState(0x8a43, 0xaf34, 0x7df0, 0xcb1c, 0x3abd, 0xf33b, 0x0, 0x1);
        gbc.writeMem(0x8a43, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xaf34, gbc.sp());
        EXPECT(0x8a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a43));
        EXPECT(0x4f, gbc.readMem(0x8a44));
        // CB 4F 0251
        gbc.setState(0x9c15, 0xe0ba, 0xa6c0, 0x241e, 0x10b8, 0x44da, 0x1, 0x0);
        gbc.writeMem(0x9c15, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe0ba, gbc.sp());
        EXPECT(0x9c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c15));
        EXPECT(0x4f, gbc.readMem(0x9c16));
        // CB 4F 0252
        gbc.setState(0x6c7c, 0x4b4a, 0xe860, 0xad93, 0x4c1f, 0xe6d8, 0x1, 0x0);
        gbc.writeMem(0x6c7c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4b4a, gbc.sp());
        EXPECT(0x6c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0253
        gbc.setState(0x364, 0xa06d, 0x4f60, 0x38c, 0x3da0, 0xeae, 0x0, 0x1);
        gbc.writeMem(0x364, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa06d, gbc.sp());
        EXPECT(0x366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0254
        gbc.setState(0x18f5, 0x38a7, 0x4bc0, 0x50ab, 0xdc82, 0x3f2f, 0x1, 0x0);
        gbc.writeMem(0x18f5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x38a7, gbc.sp());
        EXPECT(0x18f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0255
        gbc.setState(0xbefa, 0xdab, 0x5a60, 0x72da, 0x809e, 0x470d, 0x0, 0x1);
        gbc.writeMem(0xbefa, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0xbefc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbefa));
        EXPECT(0x4f, gbc.readMem(0xbefb));
        // CB 4F 0256
        gbc.setState(0x5da8, 0xdabd, 0x6010, 0xd02d, 0x5068, 0x7b33, 0x0, 0x0);
        gbc.writeMem(0x5da8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdabd, gbc.sp());
        EXPECT(0x5daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0257
        gbc.setState(0xba01, 0xf7f7, 0xf3e0, 0xf722, 0x293b, 0x489c, 0x0, 0x0);
        gbc.writeMem(0xba01, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf7f7, gbc.sp());
        EXPECT(0xba03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba01));
        EXPECT(0x4f, gbc.readMem(0xba02));
        // CB 4F 0258
        gbc.setState(0x6dbe, 0x1e7, 0x5d0, 0x6, 0x8841, 0xca2b, 0x1, 0x1);
        gbc.writeMem(0x6dbe, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1e7, gbc.sp());
        EXPECT(0x6dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0259
        gbc.setState(0xe42, 0xa886, 0x20, 0xfd66, 0xc4ba, 0x3ac8, 0x1, 0x0);
        gbc.writeMem(0xe42, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa886, gbc.sp());
        EXPECT(0xe44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 025A
        gbc.setState(0xcb10, 0x9ed7, 0x1d90, 0x4ce6, 0xef7, 0xe376, 0x0, 0x0);
        gbc.writeMem(0xcb10, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9ed7, gbc.sp());
        EXPECT(0xcb12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb10));
        EXPECT(0x4f, gbc.readMem(0xcb11));
        // CB 4F 025B
        gbc.setState(0x27c0, 0xebaf, 0x47c0, 0x2106, 0x2d66, 0xde4e, 0x1, 0x1);
        gbc.writeMem(0x27c0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xebaf, gbc.sp());
        EXPECT(0x27c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 025C
        gbc.setState(0x5217, 0xb5f6, 0x6f40, 0xfe4c, 0x54a7, 0x7998, 0x1, 0x0);
        gbc.writeMem(0x5217, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb5f6, gbc.sp());
        EXPECT(0x5219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 025D
        gbc.setState(0xd2e3, 0x2a57, 0xdb30, 0xd2d6, 0x79d9, 0xfaa3, 0x0, 0x1);
        gbc.writeMem(0xd2e3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2a57, gbc.sp());
        EXPECT(0xd2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e3));
        EXPECT(0x4f, gbc.readMem(0xd2e4));
        // CB 4F 025E
        gbc.setState(0x448d, 0x55d2, 0x2250, 0x23f5, 0x5aac, 0xf828, 0x0, 0x1);
        gbc.writeMem(0x448d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x55d2, gbc.sp());
        EXPECT(0x448f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 025F
        gbc.setState(0x8ea, 0x358d, 0x8200, 0x61a8, 0x6d08, 0x826, 0x1, 0x1);
        gbc.writeMem(0x8ea, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x358d, gbc.sp());
        EXPECT(0x8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0260
        gbc.setState(0xb099, 0xd27, 0x2fb0, 0xe16a, 0xf198, 0x3456, 0x0, 0x0);
        gbc.writeMem(0xb099, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd27, gbc.sp());
        EXPECT(0xb09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb099));
        EXPECT(0x4f, gbc.readMem(0xb09a));
        // CB 4F 0261
        gbc.setState(0x4ac4, 0x34e3, 0x6000, 0xa813, 0x8452, 0x5e6e, 0x0, 0x1);
        gbc.writeMem(0x4ac4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x34e3, gbc.sp());
        EXPECT(0x4ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0263
        gbc.setState(0x5f84, 0x3993, 0x2480, 0x2190, 0xf64e, 0x91d7, 0x1, 0x1);
        gbc.writeMem(0x5f84, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3993, gbc.sp());
        EXPECT(0x5f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0264
        gbc.setState(0x1d80, 0x13f5, 0x8c40, 0xa7af, 0x5785, 0x13c3, 0x1, 0x1);
        gbc.writeMem(0x1d80, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x13f5, gbc.sp());
        EXPECT(0x1d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0265
        gbc.setState(0x3877, 0x41ad, 0xef40, 0x38b5, 0x5168, 0x8325, 0x1, 0x1);
        gbc.writeMem(0x3877, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x41ad, gbc.sp());
        EXPECT(0x3879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0267
        gbc.setState(0xe5ba, 0xcac8, 0x22b0, 0x30f5, 0xb655, 0xdd81, 0x1, 0x0);
        gbc.writeMem(0xe5ba, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0xe5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ba));
        EXPECT(0x4f, gbc.readMem(0xe5bb));
        // CB 4F 0268
        gbc.setState(0xc2bf, 0xe184, 0xca90, 0x453e, 0xa8b8, 0xe7a0, 0x1, 0x0);
        gbc.writeMem(0xc2bf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe184, gbc.sp());
        EXPECT(0xc2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bf));
        EXPECT(0x4f, gbc.readMem(0xc2c0));
        // CB 4F 0269
        gbc.setState(0x6e3b, 0x3735, 0x2920, 0x88a3, 0x1087, 0x689b, 0x1, 0x0);
        gbc.writeMem(0x6e3b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3735, gbc.sp());
        EXPECT(0x6e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 026A
        gbc.setState(0xdacf, 0xd1db, 0xcd80, 0x3728, 0x3c79, 0x94a2, 0x1, 0x0);
        gbc.writeMem(0xdacf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd1db, gbc.sp());
        EXPECT(0xdad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdacf));
        EXPECT(0x4f, gbc.readMem(0xdad0));
        // CB 4F 026C
        gbc.setState(0xaf7a, 0x5105, 0xf20, 0xc7be, 0xe501, 0xeab2, 0x0, 0x1);
        gbc.writeMem(0xaf7a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5105, gbc.sp());
        EXPECT(0xaf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7a));
        EXPECT(0x4f, gbc.readMem(0xaf7b));
        // CB 4F 026D
        gbc.setState(0xd784, 0x8f1c, 0xf860, 0xbc6, 0x7b6f, 0xd8e2, 0x0, 0x1);
        gbc.writeMem(0xd784, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8f1c, gbc.sp());
        EXPECT(0xd786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd784));
        EXPECT(0x4f, gbc.readMem(0xd785));
        // CB 4F 026E
        gbc.setState(0x3242, 0x9005, 0x62e0, 0x292a, 0xb90b, 0x29cf, 0x1, 0x1);
        gbc.writeMem(0x3242, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9005, gbc.sp());
        EXPECT(0x3244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 026F
        gbc.setState(0x2c42, 0x32cc, 0xb7a0, 0xb9b, 0xd174, 0x91e8, 0x1, 0x1);
        gbc.writeMem(0x2c42, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x32cc, gbc.sp());
        EXPECT(0x2c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0270
        gbc.setState(0xadc2, 0xb7e, 0x5670, 0x29d8, 0xd5c1, 0x4473, 0x0, 0x1);
        gbc.writeMem(0xadc2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb7e, gbc.sp());
        EXPECT(0xadc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc2));
        EXPECT(0x4f, gbc.readMem(0xadc3));
        // CB 4F 0271
        gbc.setState(0x1e7, 0x9e8a, 0x21c0, 0xc8bd, 0xf981, 0x4c81, 0x0, 0x0);
        gbc.writeMem(0x1e7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9e8a, gbc.sp());
        EXPECT(0x1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0272
        gbc.setState(0x4294, 0xf6f9, 0x6fa0, 0x699d, 0xddca, 0x5187, 0x0, 0x1);
        gbc.writeMem(0x4294, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf6f9, gbc.sp());
        EXPECT(0x4296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0273
        gbc.setState(0x947b, 0x1af6, 0x730, 0x9653, 0xf83c, 0x5736, 0x1, 0x0);
        gbc.writeMem(0x947b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1af6, gbc.sp());
        EXPECT(0x947d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947b));
        EXPECT(0x4f, gbc.readMem(0x947c));
        // CB 4F 0274
        gbc.setState(0xe55c, 0x17ea, 0xc100, 0xe636, 0x3bf7, 0xb44c, 0x0, 0x0);
        gbc.writeMem(0xe55c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x17ea, gbc.sp());
        EXPECT(0xe55e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55c));
        EXPECT(0x4f, gbc.readMem(0xe55d));
        // CB 4F 0275
        gbc.setState(0xed36, 0xb737, 0xbb40, 0xcd67, 0x5655, 0xd2fe, 0x0, 0x0);
        gbc.writeMem(0xed36, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb737, gbc.sp());
        EXPECT(0xed38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed36));
        EXPECT(0x4f, gbc.readMem(0xed37));
        // CB 4F 0276
        gbc.setState(0x2b5f, 0xe1a6, 0x3160, 0x1a74, 0xebff, 0x9f48, 0x1, 0x0);
        gbc.writeMem(0x2b5f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe1a6, gbc.sp());
        EXPECT(0x2b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0277
        gbc.setState(0x8d8a, 0x1663, 0xfbd0, 0xce99, 0x9d08, 0x824c, 0x0, 0x1);
        gbc.writeMem(0x8d8a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1663, gbc.sp());
        EXPECT(0x8d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8a));
        EXPECT(0x4f, gbc.readMem(0x8d8b));
        // CB 4F 0279
        gbc.setState(0x37c2, 0xd28d, 0x1860, 0xf7c1, 0xfbcd, 0xe5bf, 0x1, 0x1);
        gbc.writeMem(0x37c2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd28d, gbc.sp());
        EXPECT(0x37c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 027B
        gbc.setState(0x819a, 0x80f0, 0x8570, 0xc124, 0xa0d9, 0xb746, 0x0, 0x1);
        gbc.writeMem(0x819a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x80f0, gbc.sp());
        EXPECT(0x819c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x819a));
        EXPECT(0x4f, gbc.readMem(0x819b));
        // CB 4F 027C
        gbc.setState(0x92ac, 0xf336, 0x8670, 0xfa49, 0xb6ce, 0xe8b1, 0x0, 0x1);
        gbc.writeMem(0x92ac, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf336, gbc.sp());
        EXPECT(0x92ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ac));
        EXPECT(0x4f, gbc.readMem(0x92ad));
        // CB 4F 027D
        gbc.setState(0xd81a, 0xb776, 0xa290, 0xe839, 0x9c5e, 0x90a0, 0x1, 0x1);
        gbc.writeMem(0xd81a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb776, gbc.sp());
        EXPECT(0xd81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81a));
        EXPECT(0x4f, gbc.readMem(0xd81b));
        // CB 4F 027E
        gbc.setState(0x785, 0x6406, 0x8d60, 0x40e2, 0xfcda, 0xfe21, 0x1, 0x0);
        gbc.writeMem(0x785, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6406, gbc.sp());
        EXPECT(0x787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 027F
        gbc.setState(0x5771, 0x981b, 0xba80, 0xe687, 0x20a1, 0x4923, 0x0, 0x1);
        gbc.writeMem(0x5771, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x981b, gbc.sp());
        EXPECT(0x5773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0280
        gbc.setState(0xa45, 0x2f55, 0x1c30, 0xd793, 0x9b2b, 0x35a5, 0x0, 0x0);
        gbc.writeMem(0xa45, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2f55, gbc.sp());
        EXPECT(0xa47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0281
        gbc.setState(0x3b50, 0xe5da, 0x82b0, 0xca8a, 0x3925, 0x31de, 0x0, 0x1);
        gbc.writeMem(0x3b50, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe5da, gbc.sp());
        EXPECT(0x3b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0282
        gbc.setState(0x47e6, 0x2690, 0x4160, 0xfc40, 0xcbb4, 0x7410, 0x0, 0x0);
        gbc.writeMem(0x47e6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2690, gbc.sp());
        EXPECT(0x47e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0283
        gbc.setState(0x1f17, 0x7f96, 0xcb00, 0xeac0, 0x78d1, 0x7350, 0x1, 0x1);
        gbc.writeMem(0x1f17, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7f96, gbc.sp());
        EXPECT(0x1f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0284
        gbc.setState(0x7295, 0x4da2, 0x9080, 0x9700, 0x86e8, 0x2439, 0x0, 0x1);
        gbc.writeMem(0x7295, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4da2, gbc.sp());
        EXPECT(0x7297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0285
        gbc.setState(0xe2eb, 0x1ff4, 0xb730, 0x9d9a, 0xa6db, 0x1dfa, 0x1, 0x1);
        gbc.writeMem(0xe2eb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1ff4, gbc.sp());
        EXPECT(0xe2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2eb));
        EXPECT(0x4f, gbc.readMem(0xe2ec));
        // CB 4F 0286
        gbc.setState(0x9e1, 0xe0f0, 0x30e0, 0x31a5, 0x8540, 0x6621, 0x0, 0x0);
        gbc.writeMem(0x9e1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe0f0, gbc.sp());
        EXPECT(0x9e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0287
        gbc.setState(0xb7d9, 0x54fd, 0x5c50, 0x1cba, 0x43f9, 0x9489, 0x0, 0x1);
        gbc.writeMem(0xb7d9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x54fd, gbc.sp());
        EXPECT(0xb7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d9));
        EXPECT(0x4f, gbc.readMem(0xb7da));
        // CB 4F 0288
        gbc.setState(0x2753, 0x8366, 0x4640, 0x6006, 0xeb03, 0xf4df, 0x0, 0x0);
        gbc.writeMem(0x2753, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8366, gbc.sp());
        EXPECT(0x2755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0289
        gbc.setState(0x8d4b, 0xa199, 0x5890, 0x6432, 0x8bd1, 0x409a, 0x0, 0x0);
        gbc.writeMem(0x8d4b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa199, gbc.sp());
        EXPECT(0x8d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4b));
        EXPECT(0x4f, gbc.readMem(0x8d4c));
        // CB 4F 028A
        gbc.setState(0xc57b, 0xd01f, 0x3480, 0x614e, 0x99ec, 0xcf5a, 0x1, 0x0);
        gbc.writeMem(0xc57b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd01f, gbc.sp());
        EXPECT(0xc57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57b));
        EXPECT(0x4f, gbc.readMem(0xc57c));
        // CB 4F 028C
        gbc.setState(0xe0d7, 0xc528, 0x83a0, 0xb9e0, 0x280c, 0x4758, 0x1, 0x1);
        gbc.writeMem(0xe0d7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc528, gbc.sp());
        EXPECT(0xe0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d7));
        EXPECT(0x4f, gbc.readMem(0xe0d8));
        // CB 4F 028D
        gbc.setState(0x54cf, 0x978e, 0xacf0, 0xdbbe, 0x7c29, 0x7457, 0x0, 0x0);
        gbc.writeMem(0x54cf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x978e, gbc.sp());
        EXPECT(0x54d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 028E
        gbc.setState(0xb962, 0xbe7f, 0x3730, 0xd3a0, 0xdde5, 0x63f6, 0x1, 0x0);
        gbc.writeMem(0xb962, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbe7f, gbc.sp());
        EXPECT(0xb964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb962));
        EXPECT(0x4f, gbc.readMem(0xb963));
        // CB 4F 028F
        gbc.setState(0x579f, 0x13e2, 0xdc0, 0xea81, 0x2002, 0x3321, 0x0, 0x0);
        gbc.writeMem(0x579f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x13e2, gbc.sp());
        EXPECT(0x57a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0290
        gbc.setState(0xe161, 0xf89f, 0x5a70, 0xe5d1, 0xc56d, 0x6023, 0x1, 0x0);
        gbc.writeMem(0xe161, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf89f, gbc.sp());
        EXPECT(0xe163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe161));
        EXPECT(0x4f, gbc.readMem(0xe162));
        // CB 4F 0291
        gbc.setState(0x1395, 0x243e, 0x3670, 0x8240, 0x3a7d, 0x8449, 0x0, 0x1);
        gbc.writeMem(0x1395, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x243e, gbc.sp());
        EXPECT(0x1397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0292
        gbc.setState(0x9025, 0xcacf, 0x2400, 0x1344, 0xf741, 0xbc0e, 0x0, 0x0);
        gbc.writeMem(0x9025, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcacf, gbc.sp());
        EXPECT(0x9027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9025));
        EXPECT(0x4f, gbc.readMem(0x9026));
        // CB 4F 0293
        gbc.setState(0x39b6, 0xb3bd, 0xe210, 0xd63, 0xbce7, 0xf4b, 0x1, 0x1);
        gbc.writeMem(0x39b6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb3bd, gbc.sp());
        EXPECT(0x39b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0294
        gbc.setState(0x65c8, 0x7332, 0x3070, 0x2a8d, 0x915e, 0x9aac, 0x1, 0x1);
        gbc.writeMem(0x65c8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7332, gbc.sp());
        EXPECT(0x65ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0295
        gbc.setState(0x70b9, 0x8132, 0x1e80, 0x415f, 0x57b8, 0x33ad, 0x1, 0x0);
        gbc.writeMem(0x70b9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8132, gbc.sp());
        EXPECT(0x70bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0297
        gbc.setState(0x3636, 0x6631, 0xc70, 0x2dea, 0xc501, 0x6354, 0x1, 0x0);
        gbc.writeMem(0x3636, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6631, gbc.sp());
        EXPECT(0x3638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0298
        gbc.setState(0xad98, 0x8a6d, 0xe3e0, 0xe6fc, 0xba9a, 0xe2fe, 0x1, 0x1);
        gbc.writeMem(0xad98, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8a6d, gbc.sp());
        EXPECT(0xad9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad98));
        EXPECT(0x4f, gbc.readMem(0xad99));
        // CB 4F 0299
        gbc.setState(0x71dc, 0xbf68, 0x260, 0x959f, 0xc12f, 0xf062, 0x1, 0x0);
        gbc.writeMem(0x71dc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbf68, gbc.sp());
        EXPECT(0x71de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 029A
        gbc.setState(0x3119, 0x615, 0x8e30, 0xf9ec, 0x6c57, 0x68bc, 0x1, 0x0);
        gbc.writeMem(0x3119, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x615, gbc.sp());
        EXPECT(0x311b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 029B
        gbc.setState(0xc880, 0xc26f, 0x4330, 0x5e63, 0x6230, 0xf9f, 0x1, 0x1);
        gbc.writeMem(0xc880, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc26f, gbc.sp());
        EXPECT(0xc882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc880));
        EXPECT(0x4f, gbc.readMem(0xc881));
        // CB 4F 029C
        gbc.setState(0x6183, 0xc908, 0xcd90, 0x14b8, 0x7aa1, 0x1541, 0x0, 0x0);
        gbc.writeMem(0x6183, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc908, gbc.sp());
        EXPECT(0x6185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 029D
        gbc.setState(0x552, 0x8e99, 0x9320, 0xd5b0, 0x3edb, 0x1f0f, 0x1, 0x0);
        gbc.writeMem(0x552, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8e99, gbc.sp());
        EXPECT(0x554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 029E
        gbc.setState(0x8a08, 0x4b58, 0x6b30, 0x5715, 0x9062, 0xd4dc, 0x0, 0x0);
        gbc.writeMem(0x8a08, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4b58, gbc.sp());
        EXPECT(0x8a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a08));
        EXPECT(0x4f, gbc.readMem(0x8a09));
        // CB 4F 029F
        gbc.setState(0x7c9d, 0x6908, 0x5f30, 0x1770, 0xec3b, 0xa742, 0x0, 0x1);
        gbc.writeMem(0x7c9d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6908, gbc.sp());
        EXPECT(0x7c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02A0
        gbc.setState(0xc699, 0x44e4, 0x1f80, 0xf3cc, 0xd46f, 0x5412, 0x1, 0x1);
        gbc.writeMem(0xc699, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x44e4, gbc.sp());
        EXPECT(0xc69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc699));
        EXPECT(0x4f, gbc.readMem(0xc69a));
        // CB 4F 02A1
        gbc.setState(0x6686, 0x722a, 0xb270, 0xa523, 0xb529, 0x77d3, 0x0, 0x1);
        gbc.writeMem(0x6686, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x722a, gbc.sp());
        EXPECT(0x6688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02A2
        gbc.setState(0x8fb8, 0x2450, 0xf350, 0xac9d, 0x583d, 0x7788, 0x1, 0x0);
        gbc.writeMem(0x8fb8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2450, gbc.sp());
        EXPECT(0x8fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb8));
        EXPECT(0x4f, gbc.readMem(0x8fb9));
        // CB 4F 02A3
        gbc.setState(0x14b5, 0x18, 0xebb0, 0x27c1, 0x13be, 0x48ee, 0x1, 0x1);
        gbc.writeMem(0x14b5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x18, gbc.sp());
        EXPECT(0x14b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02A4
        gbc.setState(0x9f9b, 0xa3cd, 0x100, 0xc33e, 0x53fa, 0xde0e, 0x1, 0x1);
        gbc.writeMem(0x9f9b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa3cd, gbc.sp());
        EXPECT(0x9f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9b));
        EXPECT(0x4f, gbc.readMem(0x9f9c));
        // CB 4F 02A5
        gbc.setState(0xd3f2, 0x897d, 0x93d0, 0x4cb0, 0x4a, 0xbdce, 0x1, 0x0);
        gbc.writeMem(0xd3f2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x897d, gbc.sp());
        EXPECT(0xd3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f2));
        EXPECT(0x4f, gbc.readMem(0xd3f3));
        // CB 4F 02A6
        gbc.setState(0xcc8c, 0x42fc, 0xd9e0, 0xa155, 0x7722, 0xc7f3, 0x0, 0x0);
        gbc.writeMem(0xcc8c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x42fc, gbc.sp());
        EXPECT(0xcc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8c));
        EXPECT(0x4f, gbc.readMem(0xcc8d));
        // CB 4F 02A7
        gbc.setState(0x89d2, 0x8f9a, 0xef00, 0xa626, 0x711, 0xddd1, 0x1, 0x1);
        gbc.writeMem(0x89d2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8f9a, gbc.sp());
        EXPECT(0x89d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d2));
        EXPECT(0x4f, gbc.readMem(0x89d3));
        // CB 4F 02A8
        gbc.setState(0xd727, 0x5d74, 0x40d0, 0x228e, 0x27f5, 0x7fda, 0x1, 0x0);
        gbc.writeMem(0xd727, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5d74, gbc.sp());
        EXPECT(0xd729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd727));
        EXPECT(0x4f, gbc.readMem(0xd728));
        // CB 4F 02A9
        gbc.setState(0xddf0, 0x77b9, 0x92f0, 0x6a47, 0xc92d, 0x7247, 0x0, 0x0);
        gbc.writeMem(0xddf0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x77b9, gbc.sp());
        EXPECT(0xddf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf0));
        EXPECT(0x4f, gbc.readMem(0xddf1));
        // CB 4F 02AA
        gbc.setState(0xdeb, 0x3bb1, 0x88c0, 0xd14f, 0x449c, 0x38e5, 0x0, 0x0);
        gbc.writeMem(0xdeb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3bb1, gbc.sp());
        EXPECT(0xded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02AB
        gbc.setState(0x4780, 0x19da, 0xea0, 0x4053, 0x6c2, 0x4b65, 0x0, 0x0);
        gbc.writeMem(0x4780, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x19da, gbc.sp());
        EXPECT(0x4782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02AC
        gbc.setState(0x32ef, 0xc650, 0x5df0, 0x68d4, 0xcc4f, 0xf4d4, 0x1, 0x1);
        gbc.writeMem(0x32ef, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc650, gbc.sp());
        EXPECT(0x32f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02AD
        gbc.setState(0x3a3d, 0x86c6, 0xa890, 0xfb24, 0x167c, 0x40ac, 0x1, 0x0);
        gbc.writeMem(0x3a3d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x86c6, gbc.sp());
        EXPECT(0x3a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02AE
        gbc.setState(0xad35, 0x7261, 0xea60, 0x2fd5, 0x9e79, 0x259d, 0x1, 0x1);
        gbc.writeMem(0xad35, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7261, gbc.sp());
        EXPECT(0xad37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad35));
        EXPECT(0x4f, gbc.readMem(0xad36));
        // CB 4F 02AF
        gbc.setState(0x9925, 0xc84c, 0xcee0, 0x2210, 0x451e, 0xf68a, 0x0, 0x0);
        gbc.writeMem(0x9925, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc84c, gbc.sp());
        EXPECT(0x9927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9925));
        EXPECT(0x4f, gbc.readMem(0x9926));
        // CB 4F 02B0
        gbc.setState(0x6e05, 0x417a, 0xf4f0, 0xfca6, 0x6d0b, 0x8a3, 0x0, 0x1);
        gbc.writeMem(0x6e05, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x417a, gbc.sp());
        EXPECT(0x6e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02B1
        gbc.setState(0xa39d, 0x9281, 0xfb90, 0x34cb, 0xc121, 0x9182, 0x1, 0x1);
        gbc.writeMem(0xa39d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9281, gbc.sp());
        EXPECT(0xa39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39d));
        EXPECT(0x4f, gbc.readMem(0xa39e));
        // CB 4F 02B2
        gbc.setState(0x313b, 0xd6de, 0x2110, 0x4321, 0xfd9f, 0xc44, 0x0, 0x1);
        gbc.writeMem(0x313b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd6de, gbc.sp());
        EXPECT(0x313d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02B3
        gbc.setState(0xd07b, 0x90c2, 0x4ec0, 0xbbf5, 0x1d8d, 0xf8e7, 0x0, 0x0);
        gbc.writeMem(0xd07b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x90c2, gbc.sp());
        EXPECT(0xd07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07b));
        EXPECT(0x4f, gbc.readMem(0xd07c));
        // CB 4F 02B4
        gbc.setState(0x97dd, 0x5812, 0x3d90, 0xe26c, 0x7c0c, 0xf29c, 0x0, 0x1);
        gbc.writeMem(0x97dd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5812, gbc.sp());
        EXPECT(0x97df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97dd));
        EXPECT(0x4f, gbc.readMem(0x97de));
        // CB 4F 02B5
        gbc.setState(0xbfba, 0x1df0, 0xae90, 0xdc07, 0x6ccf, 0xa275, 0x1, 0x1);
        gbc.writeMem(0xbfba, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1df0, gbc.sp());
        EXPECT(0xbfbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfba));
        EXPECT(0x4f, gbc.readMem(0xbfbb));
        // CB 4F 02B6
        gbc.setState(0x62dc, 0xb6a8, 0xe0e0, 0xf149, 0x9e13, 0x816a, 0x0, 0x0);
        gbc.writeMem(0x62dc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb6a8, gbc.sp());
        EXPECT(0x62de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02B7
        gbc.setState(0x2763, 0x3ec5, 0xd720, 0x59c0, 0xa0d0, 0x2ad7, 0x0, 0x1);
        gbc.writeMem(0x2763, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3ec5, gbc.sp());
        EXPECT(0x2765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02B8
        gbc.setState(0x458b, 0xd8cf, 0x52e0, 0x2e64, 0x7d2f, 0xe0fb, 0x1, 0x0);
        gbc.writeMem(0x458b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd8cf, gbc.sp());
        EXPECT(0x458d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02B9
        gbc.setState(0x7d5a, 0xb42e, 0xd300, 0x8a5d, 0x8eae, 0xddd5, 0x1, 0x1);
        gbc.writeMem(0x7d5a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb42e, gbc.sp());
        EXPECT(0x7d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02BA
        gbc.setState(0x6f9a, 0x8405, 0xcb10, 0x2fa1, 0xf759, 0xb64e, 0x1, 0x1);
        gbc.writeMem(0x6f9a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8405, gbc.sp());
        EXPECT(0x6f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02BB
        gbc.setState(0x5c0b, 0xd1a, 0x4a70, 0x5011, 0x7e58, 0xcfb2, 0x1, 0x0);
        gbc.writeMem(0x5c0b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd1a, gbc.sp());
        EXPECT(0x5c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02BC
        gbc.setState(0x69c7, 0xcd5, 0xb400, 0xd5fe, 0xefdd, 0x272a, 0x1, 0x1);
        gbc.writeMem(0x69c7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcd5, gbc.sp());
        EXPECT(0x69c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02BD
        gbc.setState(0x435, 0x6ea3, 0x9780, 0x3a7b, 0xdfc3, 0x329, 0x0, 0x0);
        gbc.writeMem(0x435, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6ea3, gbc.sp());
        EXPECT(0x437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02BE
        gbc.setState(0x812f, 0x938e, 0x8d00, 0x5eab, 0xf796, 0x6344, 0x0, 0x0);
        gbc.writeMem(0x812f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x938e, gbc.sp());
        EXPECT(0x8131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812f));
        EXPECT(0x4f, gbc.readMem(0x8130));
        // CB 4F 02BF
        gbc.setState(0xb6f6, 0x4924, 0x28f0, 0xa152, 0x571f, 0xe56c, 0x0, 0x1);
        gbc.writeMem(0xb6f6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4924, gbc.sp());
        EXPECT(0xb6f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f6));
        EXPECT(0x4f, gbc.readMem(0xb6f7));
        // CB 4F 02C0
        gbc.setState(0x8714, 0x5a12, 0xc170, 0xdea8, 0x489, 0x55f8, 0x1, 0x0);
        gbc.writeMem(0x8714, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5a12, gbc.sp());
        EXPECT(0x8716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8714));
        EXPECT(0x4f, gbc.readMem(0x8715));
        // CB 4F 02C1
        gbc.setState(0xac2e, 0xc07f, 0x4650, 0x484b, 0x7959, 0x7a73, 0x1, 0x0);
        gbc.writeMem(0xac2e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc07f, gbc.sp());
        EXPECT(0xac30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2e));
        EXPECT(0x4f, gbc.readMem(0xac2f));
        // CB 4F 02C2
        gbc.setState(0xc2d, 0xe152, 0xd4a0, 0xeb44, 0xc95f, 0x847e, 0x0, 0x0);
        gbc.writeMem(0xc2d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe152, gbc.sp());
        EXPECT(0xc2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02C3
        gbc.setState(0xcd55, 0x1049, 0xe7c0, 0xe783, 0xb0e8, 0x223c, 0x0, 0x1);
        gbc.writeMem(0xcd55, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1049, gbc.sp());
        EXPECT(0xcd57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd55));
        EXPECT(0x4f, gbc.readMem(0xcd56));
        // CB 4F 02C4
        gbc.setState(0xd36a, 0x9f8c, 0xa4a0, 0xfca7, 0xa65b, 0x5759, 0x0, 0x0);
        gbc.writeMem(0xd36a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9f8c, gbc.sp());
        EXPECT(0xd36c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36a));
        EXPECT(0x4f, gbc.readMem(0xd36b));
        // CB 4F 02C5
        gbc.setState(0xdb09, 0x98, 0x62f0, 0x90d4, 0x2852, 0xdb6e, 0x1, 0x0);
        gbc.writeMem(0xdb09, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x98, gbc.sp());
        EXPECT(0xdb0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb09));
        EXPECT(0x4f, gbc.readMem(0xdb0a));
        // CB 4F 02C6
        gbc.setState(0xc935, 0xe3fc, 0x1e10, 0x4cf4, 0x8d48, 0x39d3, 0x0, 0x0);
        gbc.writeMem(0xc935, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe3fc, gbc.sp());
        EXPECT(0xc937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc935));
        EXPECT(0x4f, gbc.readMem(0xc936));
        // CB 4F 02C7
        gbc.setState(0x701a, 0xe42f, 0xa8d0, 0xde1a, 0x1172, 0x7a83, 0x1, 0x0);
        gbc.writeMem(0x701a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe42f, gbc.sp());
        EXPECT(0x701c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02C8
        gbc.setState(0xbfba, 0x38e2, 0x5c00, 0x3e8c, 0xb32, 0x545f, 0x1, 0x0);
        gbc.writeMem(0xbfba, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x38e2, gbc.sp());
        EXPECT(0xbfbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfba));
        EXPECT(0x4f, gbc.readMem(0xbfbb));
        // CB 4F 02C9
        gbc.setState(0x68c3, 0xa5bc, 0xd960, 0x37eb, 0xa939, 0x825d, 0x0, 0x1);
        gbc.writeMem(0x68c3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa5bc, gbc.sp());
        EXPECT(0x68c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02CA
        gbc.setState(0xee8c, 0x5e4d, 0x3c80, 0x44eb, 0x4e74, 0x4a58, 0x1, 0x0);
        gbc.writeMem(0xee8c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5e4d, gbc.sp());
        EXPECT(0xee8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8c));
        EXPECT(0x4f, gbc.readMem(0xee8d));
        // CB 4F 02CB
        gbc.setState(0xb3a6, 0x7798, 0xfef0, 0x1679, 0x4ecb, 0x519a, 0x1, 0x1);
        gbc.writeMem(0xb3a6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7798, gbc.sp());
        EXPECT(0xb3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a6));
        EXPECT(0x4f, gbc.readMem(0xb3a7));
        // CB 4F 02CC
        gbc.setState(0x7366, 0xda93, 0xd930, 0x57a0, 0xec94, 0x45cb, 0x0, 0x0);
        gbc.writeMem(0x7366, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xda93, gbc.sp());
        EXPECT(0x7368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02CD
        gbc.setState(0xd46e, 0x5dd, 0xbfd0, 0x65a8, 0xbf, 0xd403, 0x1, 0x0);
        gbc.writeMem(0xd46e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5dd, gbc.sp());
        EXPECT(0xd470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46e));
        EXPECT(0x4f, gbc.readMem(0xd46f));
        // CB 4F 02CE
        gbc.setState(0xc4ce, 0xbda9, 0xb2b0, 0x308d, 0xfbd1, 0x6c0b, 0x0, 0x1);
        gbc.writeMem(0xc4ce, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbda9, gbc.sp());
        EXPECT(0xc4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ce));
        EXPECT(0x4f, gbc.readMem(0xc4cf));
        // CB 4F 02CF
        gbc.setState(0x274b, 0x9f38, 0x4000, 0xb2a5, 0xd2a4, 0xf00d, 0x0, 0x1);
        gbc.writeMem(0x274b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9f38, gbc.sp());
        EXPECT(0x274d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02D0
        gbc.setState(0xe4e8, 0xd3d8, 0xf570, 0xf08c, 0xdaa3, 0xfe32, 0x1, 0x1);
        gbc.writeMem(0xe4e8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd3d8, gbc.sp());
        EXPECT(0xe4ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e8));
        EXPECT(0x4f, gbc.readMem(0xe4e9));
        // CB 4F 02D1
        gbc.setState(0xed38, 0xa48c, 0x8a00, 0xc40d, 0x379d, 0x7ce1, 0x1, 0x0);
        gbc.writeMem(0xed38, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa48c, gbc.sp());
        EXPECT(0xed3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed38));
        EXPECT(0x4f, gbc.readMem(0xed39));
        // CB 4F 02D2
        gbc.setState(0x5d58, 0x9bb, 0x8830, 0x7019, 0xfa5e, 0x945, 0x0, 0x0);
        gbc.writeMem(0x5d58, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9bb, gbc.sp());
        EXPECT(0x5d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02D3
        gbc.setState(0x9745, 0x7814, 0xecd0, 0x8c5b, 0xe21e, 0x91f0, 0x1, 0x1);
        gbc.writeMem(0x9745, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7814, gbc.sp());
        EXPECT(0x9747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9745));
        EXPECT(0x4f, gbc.readMem(0x9746));
        // CB 4F 02D5
        gbc.setState(0xae06, 0x6987, 0x6db0, 0x9773, 0x8897, 0xdeba, 0x1, 0x0);
        gbc.writeMem(0xae06, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6987, gbc.sp());
        EXPECT(0xae08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae06));
        EXPECT(0x4f, gbc.readMem(0xae07));
        // CB 4F 02D6
        gbc.setState(0x1ee0, 0x1dee, 0x1890, 0x5924, 0x8943, 0xdb58, 0x1, 0x1);
        gbc.writeMem(0x1ee0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1dee, gbc.sp());
        EXPECT(0x1ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02D7
        gbc.setState(0x9224, 0xe933, 0x4b00, 0x4fb3, 0xa063, 0xd8d7, 0x1, 0x0);
        gbc.writeMem(0x9224, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe933, gbc.sp());
        EXPECT(0x9226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9224));
        EXPECT(0x4f, gbc.readMem(0x9225));
        // CB 4F 02D8
        gbc.setState(0x3b1d, 0xa707, 0x3f0, 0xf60e, 0x2e90, 0x87b3, 0x1, 0x0);
        gbc.writeMem(0x3b1d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa707, gbc.sp());
        EXPECT(0x3b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02D9
        gbc.setState(0xa832, 0x37ac, 0xf200, 0x418, 0x2222, 0x4f05, 0x0, 0x1);
        gbc.writeMem(0xa832, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x37ac, gbc.sp());
        EXPECT(0xa834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa832));
        EXPECT(0x4f, gbc.readMem(0xa833));
        // CB 4F 02DA
        gbc.setState(0xe79c, 0xcc5c, 0x98c0, 0x7ab8, 0xb747, 0x31bd, 0x0, 0x0);
        gbc.writeMem(0xe79c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcc5c, gbc.sp());
        EXPECT(0xe79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79c));
        EXPECT(0x4f, gbc.readMem(0xe79d));
        // CB 4F 02DB
        gbc.setState(0x428d, 0x8958, 0xb1f0, 0x7534, 0xb89d, 0x169c, 0x1, 0x1);
        gbc.writeMem(0x428d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8958, gbc.sp());
        EXPECT(0x428f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02DC
        gbc.setState(0x36f5, 0x33a7, 0x11a0, 0xb6ee, 0x40d0, 0x838d, 0x1, 0x1);
        gbc.writeMem(0x36f5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x33a7, gbc.sp());
        EXPECT(0x36f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02DD
        gbc.setState(0x188b, 0xfca8, 0x80c0, 0xa3c0, 0x3f0f, 0xaefc, 0x1, 0x1);
        gbc.writeMem(0x188b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfca8, gbc.sp());
        EXPECT(0x188d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02DE
        gbc.setState(0xc344, 0xb607, 0x8a20, 0xf7ee, 0x96bc, 0xa062, 0x1, 0x0);
        gbc.writeMem(0xc344, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb607, gbc.sp());
        EXPECT(0xc346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc344));
        EXPECT(0x4f, gbc.readMem(0xc345));
        // CB 4F 02DF
        gbc.setState(0x8841, 0x2266, 0x55b0, 0x3523, 0xd412, 0xdff0, 0x0, 0x0);
        gbc.writeMem(0x8841, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2266, gbc.sp());
        EXPECT(0x8843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8841));
        EXPECT(0x4f, gbc.readMem(0x8842));
        // CB 4F 02E0
        gbc.setState(0xb62, 0x4842, 0x110, 0xbb1a, 0x60a5, 0x1751, 0x0, 0x0);
        gbc.writeMem(0xb62, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4842, gbc.sp());
        EXPECT(0xb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02E1
        gbc.setState(0x8ad6, 0x6b55, 0xa050, 0x75dc, 0x7ff7, 0xcbf7, 0x1, 0x1);
        gbc.writeMem(0x8ad6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6b55, gbc.sp());
        EXPECT(0x8ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad6));
        EXPECT(0x4f, gbc.readMem(0x8ad7));
        // CB 4F 02E2
        gbc.setState(0xe4c2, 0x6807, 0xf0b0, 0x7bb6, 0x9ba7, 0x78f7, 0x1, 0x0);
        gbc.writeMem(0xe4c2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6807, gbc.sp());
        EXPECT(0xe4c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c2));
        EXPECT(0x4f, gbc.readMem(0xe4c3));
        // CB 4F 02E3
        gbc.setState(0x1d85, 0x20a, 0xbc60, 0x2691, 0x4b62, 0xd104, 0x0, 0x1);
        gbc.writeMem(0x1d85, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x20a, gbc.sp());
        EXPECT(0x1d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02E4
        gbc.setState(0x6a1a, 0xf312, 0x3e00, 0x764e, 0x479b, 0x12f, 0x1, 0x1);
        gbc.writeMem(0x6a1a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf312, gbc.sp());
        EXPECT(0x6a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02E5
        gbc.setState(0x285, 0x3a30, 0xb480, 0xc9dc, 0x534, 0x55a5, 0x1, 0x1);
        gbc.writeMem(0x285, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3a30, gbc.sp());
        EXPECT(0x287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02E6
        gbc.setState(0xcef4, 0xc55c, 0xd580, 0x5bf8, 0x1eae, 0x26f6, 0x0, 0x1);
        gbc.writeMem(0xcef4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc55c, gbc.sp());
        EXPECT(0xcef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef4));
        EXPECT(0x4f, gbc.readMem(0xcef5));
        // CB 4F 02E7
        gbc.setState(0x116, 0x9d4a, 0x3fb0, 0xaaae, 0x68ef, 0x56bd, 0x0, 0x0);
        gbc.writeMem(0x116, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9d4a, gbc.sp());
        EXPECT(0x118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02E8
        gbc.setState(0x7c6c, 0x8528, 0x4a00, 0x96d9, 0x71eb, 0x7de1, 0x0, 0x1);
        gbc.writeMem(0x7c6c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8528, gbc.sp());
        EXPECT(0x7c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02E9
        gbc.setState(0xdfdc, 0x9deb, 0x5c20, 0x904b, 0x2e39, 0x2e66, 0x1, 0x0);
        gbc.writeMem(0xdfdc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9deb, gbc.sp());
        EXPECT(0xdfde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfdc));
        EXPECT(0x4f, gbc.readMem(0xdfdd));
        // CB 4F 02EA
        gbc.setState(0xa9d6, 0x896e, 0x38b0, 0xb4a2, 0x699d, 0x2ea9, 0x0, 0x1);
        gbc.writeMem(0xa9d6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x896e, gbc.sp());
        EXPECT(0xa9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d6));
        EXPECT(0x4f, gbc.readMem(0xa9d7));
        // CB 4F 02EB
        gbc.setState(0x6aed, 0x773e, 0xd280, 0x556c, 0x1849, 0x434a, 0x0, 0x1);
        gbc.writeMem(0x6aed, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x773e, gbc.sp());
        EXPECT(0x6aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02EC
        gbc.setState(0x7432, 0x3627, 0x7e20, 0x8cb1, 0x385c, 0xde28, 0x0, 0x0);
        gbc.writeMem(0x7432, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3627, gbc.sp());
        EXPECT(0x7434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02ED
        gbc.setState(0xaa10, 0x3661, 0x4470, 0x9ff1, 0xd721, 0x801f, 0x1, 0x0);
        gbc.writeMem(0xaa10, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3661, gbc.sp());
        EXPECT(0xaa12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa10));
        EXPECT(0x4f, gbc.readMem(0xaa11));
        // CB 4F 02EE
        gbc.setState(0x7bf9, 0x1d23, 0x9510, 0x359d, 0x87f, 0x277f, 0x1, 0x1);
        gbc.writeMem(0x7bf9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1d23, gbc.sp());
        EXPECT(0x7bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02EF
        gbc.setState(0x20ad, 0x6dd4, 0x5af0, 0x8577, 0x768f, 0x52a3, 0x0, 0x0);
        gbc.writeMem(0x20ad, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6dd4, gbc.sp());
        EXPECT(0x20af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02F0
        gbc.setState(0x42fd, 0x6ff8, 0x3220, 0xdf63, 0xad22, 0xec0c, 0x1, 0x0);
        gbc.writeMem(0x42fd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6ff8, gbc.sp());
        EXPECT(0x42ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02F1
        gbc.setState(0x8d8f, 0xfb06, 0x30d0, 0x112c, 0xa0e5, 0xdabf, 0x0, 0x1);
        gbc.writeMem(0x8d8f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfb06, gbc.sp());
        EXPECT(0x8d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8f));
        EXPECT(0x4f, gbc.readMem(0x8d90));
        // CB 4F 02F2
        gbc.setState(0xcd0a, 0xbdc8, 0xc5c0, 0xbb3e, 0xa935, 0xbcab, 0x1, 0x0);
        gbc.writeMem(0xcd0a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbdc8, gbc.sp());
        EXPECT(0xcd0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0a));
        EXPECT(0x4f, gbc.readMem(0xcd0b));
        // CB 4F 02F3
        gbc.setState(0xeebc, 0x8a08, 0xee70, 0x40f0, 0xafd1, 0xff36, 0x0, 0x1);
        gbc.writeMem(0xeebc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8a08, gbc.sp());
        EXPECT(0xeebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeebc));
        EXPECT(0x4f, gbc.readMem(0xeebd));
        // CB 4F 02F4
        gbc.setState(0x1286, 0xdfbb, 0x4830, 0x466, 0x3a0c, 0xf527, 0x1, 0x1);
        gbc.writeMem(0x1286, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdfbb, gbc.sp());
        EXPECT(0x1288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 02F5
        gbc.setState(0x81a4, 0x9230, 0x7e80, 0x1c0d, 0x8232, 0x28f, 0x0, 0x1);
        gbc.writeMem(0x81a4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9230, gbc.sp());
        EXPECT(0x81a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a4));
        EXPECT(0x4f, gbc.readMem(0x81a5));
        // CB 4F 02F6
        gbc.setState(0x9836, 0xb0fa, 0xdb30, 0xe769, 0xd2c9, 0x5946, 0x0, 0x0);
        gbc.writeMem(0x9836, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb0fa, gbc.sp());
        EXPECT(0x9838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9836));
        EXPECT(0x4f, gbc.readMem(0x9837));
        // CB 4F 02F7
        gbc.setState(0xc8df, 0x72ad, 0x13b0, 0xe7fb, 0xb9ee, 0xb87e, 0x1, 0x0);
        gbc.writeMem(0xc8df, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x72ad, gbc.sp());
        EXPECT(0xc8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8df));
        EXPECT(0x4f, gbc.readMem(0xc8e0));
        // CB 4F 02F9
        gbc.setState(0x138b, 0x1569, 0x1bc0, 0x2ac8, 0x502, 0xafce, 0x0, 0x0);
        gbc.writeMem(0x138b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1569, gbc.sp());
        EXPECT(0x138d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02FA
        gbc.setState(0x800c, 0x853d, 0xcc00, 0x45b4, 0xbd41, 0x4e03, 0x1, 0x0);
        gbc.writeMem(0x800c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x853d, gbc.sp());
        EXPECT(0x800e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800c));
        EXPECT(0x4f, gbc.readMem(0x800d));
        // CB 4F 02FB
        gbc.setState(0x854d, 0xa47b, 0xb480, 0xcf91, 0xf760, 0x27cc, 0x0, 0x1);
        gbc.writeMem(0x854d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa47b, gbc.sp());
        EXPECT(0x854f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854d));
        EXPECT(0x4f, gbc.readMem(0x854e));
        // CB 4F 02FC
        gbc.setState(0x56d6, 0x9a1e, 0x33c0, 0xfcfe, 0xaa05, 0xac5f, 0x0, 0x1);
        gbc.writeMem(0x56d6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9a1e, gbc.sp());
        EXPECT(0x56d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02FD
        gbc.setState(0x5e23, 0xe02a, 0xf9e0, 0x9d90, 0x2de, 0x132f, 0x1, 0x0);
        gbc.writeMem(0x5e23, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe02a, gbc.sp());
        EXPECT(0x5e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 02FE
        gbc.setState(0x83e8, 0xff10, 0x8d90, 0x8fbd, 0x441f, 0x2bea, 0x0, 0x1);
        gbc.writeMem(0x83e8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xff10, gbc.sp());
        EXPECT(0x83ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e8));
        EXPECT(0x4f, gbc.readMem(0x83e9));
        // CB 4F 02FF
        gbc.setState(0xbfbc, 0xf0e8, 0x9120, 0xa9b5, 0xa54f, 0x6141, 0x1, 0x0);
        gbc.writeMem(0xbfbc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf0e8, gbc.sp());
        EXPECT(0xbfbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfbc));
        EXPECT(0x4f, gbc.readMem(0xbfbd));
        // CB 4F 0300
        gbc.setState(0x6653, 0x4669, 0x81e0, 0x2b2, 0xb85d, 0xd4fb, 0x1, 0x1);
        gbc.writeMem(0x6653, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4669, gbc.sp());
        EXPECT(0x6655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0302
        gbc.setState(0xb48c, 0x2572, 0x5ae0, 0x7c66, 0xbea2, 0x3f9a, 0x0, 0x1);
        gbc.writeMem(0xb48c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2572, gbc.sp());
        EXPECT(0xb48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb48c));
        EXPECT(0x4f, gbc.readMem(0xb48d));
        // CB 4F 0303
        gbc.setState(0xe3f2, 0x3891, 0xaf90, 0x12ef, 0x3636, 0x35c6, 0x0, 0x1);
        gbc.writeMem(0xe3f2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3891, gbc.sp());
        EXPECT(0xe3f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f2));
        EXPECT(0x4f, gbc.readMem(0xe3f3));
        // CB 4F 0304
        gbc.setState(0x5758, 0x5d6c, 0xb1d0, 0xc804, 0x1f26, 0xb090, 0x1, 0x0);
        gbc.writeMem(0x5758, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5d6c, gbc.sp());
        EXPECT(0x575a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0305
        gbc.setState(0x6bdb, 0x1a97, 0x23f0, 0x1e1d, 0x33e3, 0xd898, 0x0, 0x0);
        gbc.writeMem(0x6bdb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1a97, gbc.sp());
        EXPECT(0x6bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0306
        gbc.setState(0xcc71, 0x7c6c, 0xa3c0, 0x11e8, 0xff0d, 0xe433, 0x0, 0x0);
        gbc.writeMem(0xcc71, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7c6c, gbc.sp());
        EXPECT(0xcc73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc71));
        EXPECT(0x4f, gbc.readMem(0xcc72));
        // CB 4F 0307
        gbc.setState(0x21a8, 0x448, 0x1770, 0xd131, 0x6795, 0x7a3e, 0x1, 0x0);
        gbc.writeMem(0x21a8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x448, gbc.sp());
        EXPECT(0x21aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0308
        gbc.setState(0x357d, 0x7a10, 0xb310, 0x9bd, 0x2510, 0xf3f2, 0x0, 0x1);
        gbc.writeMem(0x357d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7a10, gbc.sp());
        EXPECT(0x357f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0309
        gbc.setState(0x17b7, 0x839b, 0x87f0, 0xb8b9, 0x120a, 0xfc9e, 0x0, 0x0);
        gbc.writeMem(0x17b7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x839b, gbc.sp());
        EXPECT(0x17b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 030A
        gbc.setState(0x2712, 0x5878, 0xc660, 0x1532, 0x6bc5, 0xe1cb, 0x0, 0x1);
        gbc.writeMem(0x2712, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5878, gbc.sp());
        EXPECT(0x2714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 030B
        gbc.setState(0x6c73, 0x9a5e, 0xafd0, 0x8c0a, 0xeeb6, 0x90d6, 0x1, 0x1);
        gbc.writeMem(0x6c73, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9a5e, gbc.sp());
        EXPECT(0x6c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 030C
        gbc.setState(0x4a63, 0x7559, 0x2630, 0xbc56, 0xde15, 0xe929, 0x0, 0x1);
        gbc.writeMem(0x4a63, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7559, gbc.sp());
        EXPECT(0x4a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 030D
        gbc.setState(0x8ce8, 0x2d2c, 0xba70, 0xeceb, 0x304d, 0xe84f, 0x0, 0x1);
        gbc.writeMem(0x8ce8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2d2c, gbc.sp());
        EXPECT(0x8cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce8));
        EXPECT(0x4f, gbc.readMem(0x8ce9));
        // CB 4F 030E
        gbc.setState(0xdf04, 0x26f2, 0x1b60, 0xcb8d, 0xe3ff, 0xff9d, 0x0, 0x1);
        gbc.writeMem(0xdf04, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x26f2, gbc.sp());
        EXPECT(0xdf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf04));
        EXPECT(0x4f, gbc.readMem(0xdf05));
        // CB 4F 030F
        gbc.setState(0x7097, 0x9a34, 0x62e0, 0xcd83, 0x161b, 0xbcde, 0x0, 0x1);
        gbc.writeMem(0x7097, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9a34, gbc.sp());
        EXPECT(0x7099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0312
        gbc.setState(0x656c, 0xbf65, 0x2180, 0x5787, 0xb4b4, 0x1f89, 0x0, 0x0);
        gbc.writeMem(0x656c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbf65, gbc.sp());
        EXPECT(0x656e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0313
        gbc.setState(0xeb29, 0xda1a, 0x7540, 0xc1b5, 0x31d1, 0x2eee, 0x0, 0x1);
        gbc.writeMem(0xeb29, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xda1a, gbc.sp());
        EXPECT(0xeb2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb29));
        EXPECT(0x4f, gbc.readMem(0xeb2a));
        // CB 4F 0314
        gbc.setState(0xb11b, 0x2b90, 0x9240, 0x50e7, 0x8303, 0x2edb, 0x1, 0x1);
        gbc.writeMem(0xb11b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2b90, gbc.sp());
        EXPECT(0xb11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11b));
        EXPECT(0x4f, gbc.readMem(0xb11c));
        // CB 4F 0315
        gbc.setState(0x8cd3, 0x38b6, 0xe9c0, 0x4293, 0xcc67, 0x432, 0x1, 0x0);
        gbc.writeMem(0x8cd3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x38b6, gbc.sp());
        EXPECT(0x8cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd3));
        EXPECT(0x4f, gbc.readMem(0x8cd4));
        // CB 4F 0316
        gbc.setState(0xbe7b, 0x6f72, 0xedd0, 0x9cea, 0x8c51, 0x1877, 0x1, 0x0);
        gbc.writeMem(0xbe7b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6f72, gbc.sp());
        EXPECT(0xbe7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7b));
        EXPECT(0x4f, gbc.readMem(0xbe7c));
        // CB 4F 0317
        gbc.setState(0xbf72, 0x16d4, 0xf190, 0x5832, 0x2a3e, 0xf840, 0x1, 0x1);
        gbc.writeMem(0xbf72, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x16d4, gbc.sp());
        EXPECT(0xbf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf72));
        EXPECT(0x4f, gbc.readMem(0xbf73));
        // CB 4F 0318
        gbc.setState(0xd3fe, 0x72a6, 0x2740, 0xa310, 0xc835, 0x24ce, 0x1, 0x1);
        gbc.writeMem(0xd3fe, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x72a6, gbc.sp());
        EXPECT(0xd400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fe));
        EXPECT(0x4f, gbc.readMem(0xd3ff));
        // CB 4F 0319
        gbc.setState(0x24de, 0xb8eb, 0xf810, 0xf201, 0x90a8, 0xf3d, 0x1, 0x0);
        gbc.writeMem(0x24de, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb8eb, gbc.sp());
        EXPECT(0x24e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 031A
        gbc.setState(0xa55d, 0xf7e8, 0x1de0, 0x3300, 0x3188, 0x63dc, 0x1, 0x0);
        gbc.writeMem(0xa55d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf7e8, gbc.sp());
        EXPECT(0xa55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55d));
        EXPECT(0x4f, gbc.readMem(0xa55e));
        // CB 4F 031B
        gbc.setState(0x4d05, 0x80f9, 0xabf0, 0x4cbc, 0xf1e8, 0xe5b2, 0x0, 0x1);
        gbc.writeMem(0x4d05, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x80f9, gbc.sp());
        EXPECT(0x4d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 031C
        gbc.setState(0x6e8, 0x5746, 0x1c60, 0x2a43, 0xebe1, 0xb362, 0x0, 0x1);
        gbc.writeMem(0x6e8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5746, gbc.sp());
        EXPECT(0x6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 031D
        gbc.setState(0x57cf, 0xc05b, 0xc930, 0xaea1, 0x75af, 0xfba6, 0x0, 0x1);
        gbc.writeMem(0x57cf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc05b, gbc.sp());
        EXPECT(0x57d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 031E
        gbc.setState(0x827a, 0xef7b, 0x5e50, 0xb3fc, 0x163e, 0xf38c, 0x0, 0x0);
        gbc.writeMem(0x827a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xef7b, gbc.sp());
        EXPECT(0x827c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827a));
        EXPECT(0x4f, gbc.readMem(0x827b));
        // CB 4F 031F
        gbc.setState(0xc164, 0x43ea, 0x2b00, 0xf720, 0x55dc, 0x210, 0x0, 0x1);
        gbc.writeMem(0xc164, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x43ea, gbc.sp());
        EXPECT(0xc166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc164));
        EXPECT(0x4f, gbc.readMem(0xc165));
        // CB 4F 0320
        gbc.setState(0xa38a, 0x7228, 0xa0c0, 0x9619, 0xf399, 0xf667, 0x1, 0x1);
        gbc.writeMem(0xa38a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7228, gbc.sp());
        EXPECT(0xa38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38a));
        EXPECT(0x4f, gbc.readMem(0xa38b));
        // CB 4F 0321
        gbc.setState(0xbe4c, 0x6682, 0xcf70, 0xf87e, 0x199b, 0xd08, 0x0, 0x0);
        gbc.writeMem(0xbe4c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6682, gbc.sp());
        EXPECT(0xbe4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4c));
        EXPECT(0x4f, gbc.readMem(0xbe4d));
        // CB 4F 0322
        gbc.setState(0x194, 0xa605, 0x5930, 0x5467, 0x7b11, 0x126f, 0x1, 0x1);
        gbc.writeMem(0x194, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa605, gbc.sp());
        EXPECT(0x196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0323
        gbc.setState(0xa668, 0x689f, 0xe730, 0xaecd, 0x6a6, 0xad49, 0x0, 0x1);
        gbc.writeMem(0xa668, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x689f, gbc.sp());
        EXPECT(0xa66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa668));
        EXPECT(0x4f, gbc.readMem(0xa669));
        // CB 4F 0324
        gbc.setState(0x55bc, 0x50e8, 0x5f30, 0x7d45, 0x6403, 0xff4b, 0x1, 0x0);
        gbc.writeMem(0x55bc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x50e8, gbc.sp());
        EXPECT(0x55be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0325
        gbc.setState(0x11c3, 0xee55, 0xadf0, 0x93bf, 0x404e, 0x5ea, 0x0, 0x0);
        gbc.writeMem(0x11c3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xee55, gbc.sp());
        EXPECT(0x11c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0326
        gbc.setState(0x2a5e, 0xb761, 0x9440, 0x94a4, 0x671f, 0x8bfb, 0x0, 0x1);
        gbc.writeMem(0x2a5e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb761, gbc.sp());
        EXPECT(0x2a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0327
        gbc.setState(0xead7, 0x93d4, 0x7970, 0x9a90, 0x5ef8, 0xa1e2, 0x1, 0x0);
        gbc.writeMem(0xead7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x93d4, gbc.sp());
        EXPECT(0xead9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead7));
        EXPECT(0x4f, gbc.readMem(0xead8));
        // CB 4F 0328
        gbc.setState(0x789f, 0x773e, 0x8190, 0x1d83, 0xfe5e, 0x312e, 0x1, 0x0);
        gbc.writeMem(0x789f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x773e, gbc.sp());
        EXPECT(0x78a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0329
        gbc.setState(0x3fdc, 0xb1bc, 0xa9e0, 0x9882, 0x593b, 0x551b, 0x0, 0x0);
        gbc.writeMem(0x3fdc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb1bc, gbc.sp());
        EXPECT(0x3fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 032A
        gbc.setState(0xc68c, 0x6540, 0x61f0, 0xb16e, 0x65b9, 0x5ab9, 0x0, 0x0);
        gbc.writeMem(0xc68c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6540, gbc.sp());
        EXPECT(0xc68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68c));
        EXPECT(0x4f, gbc.readMem(0xc68d));
        // CB 4F 032B
        gbc.setState(0x1045, 0xa642, 0x88a0, 0xda05, 0x49e, 0x7611, 0x0, 0x1);
        gbc.writeMem(0x1045, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa642, gbc.sp());
        EXPECT(0x1047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 032C
        gbc.setState(0xb0d2, 0x69e3, 0x6290, 0x6691, 0x4360, 0xac10, 0x0, 0x0);
        gbc.writeMem(0xb0d2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x69e3, gbc.sp());
        EXPECT(0xb0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d2));
        EXPECT(0x4f, gbc.readMem(0xb0d3));
        // CB 4F 032D
        gbc.setState(0xdd93, 0x379d, 0x4310, 0x5da4, 0x1af6, 0x90f4, 0x0, 0x1);
        gbc.writeMem(0xdd93, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x379d, gbc.sp());
        EXPECT(0xdd95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd93));
        EXPECT(0x4f, gbc.readMem(0xdd94));
        // CB 4F 032E
        gbc.setState(0x66c0, 0x9513, 0x3830, 0x962c, 0xbef7, 0x9aac, 0x0, 0x0);
        gbc.writeMem(0x66c0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9513, gbc.sp());
        EXPECT(0x66c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 032F
        gbc.setState(0xd6ac, 0x7fe8, 0xde20, 0xe4dd, 0x317e, 0x657, 0x1, 0x0);
        gbc.writeMem(0xd6ac, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7fe8, gbc.sp());
        EXPECT(0xd6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ac));
        EXPECT(0x4f, gbc.readMem(0xd6ad));
        // CB 4F 0330
        gbc.setState(0xc6ac, 0x1c73, 0x4e70, 0x8f97, 0xb61d, 0xee6d, 0x1, 0x0);
        gbc.writeMem(0xc6ac, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1c73, gbc.sp());
        EXPECT(0xc6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ac));
        EXPECT(0x4f, gbc.readMem(0xc6ad));
        // CB 4F 0331
        gbc.setState(0x6600, 0xab81, 0xbfd0, 0x8a79, 0x437d, 0xf916, 0x1, 0x1);
        gbc.writeMem(0x6600, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xab81, gbc.sp());
        EXPECT(0x6602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0332
        gbc.setState(0x1814, 0x33b5, 0xfdb0, 0x6a99, 0xb638, 0xbe7d, 0x0, 0x0);
        gbc.writeMem(0x1814, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x33b5, gbc.sp());
        EXPECT(0x1816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0333
        gbc.setState(0x4f3a, 0x1ba2, 0xec70, 0xcbbe, 0xac4b, 0x1c41, 0x0, 0x1);
        gbc.writeMem(0x4f3a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1ba2, gbc.sp());
        EXPECT(0x4f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0334
        gbc.setState(0xa030, 0xa865, 0x95d0, 0x4915, 0xff13, 0xcec6, 0x0, 0x1);
        gbc.writeMem(0xa030, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa865, gbc.sp());
        EXPECT(0xa032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa030));
        EXPECT(0x4f, gbc.readMem(0xa031));
        // CB 4F 0335
        gbc.setState(0x1dd6, 0xbd85, 0x9cd0, 0x9073, 0xdf65, 0x1d2b, 0x1, 0x1);
        gbc.writeMem(0x1dd6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbd85, gbc.sp());
        EXPECT(0x1dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0336
        gbc.setState(0xb860, 0x4509, 0x72e0, 0xb675, 0x79e3, 0x3fa4, 0x1, 0x1);
        gbc.writeMem(0xb860, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4509, gbc.sp());
        EXPECT(0xb862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb860));
        EXPECT(0x4f, gbc.readMem(0xb861));
        // CB 4F 0337
        gbc.setState(0x78fb, 0xdc1c, 0xa1a0, 0xdbcb, 0xa793, 0xf4f2, 0x1, 0x1);
        gbc.writeMem(0x78fb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdc1c, gbc.sp());
        EXPECT(0x78fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0338
        gbc.setState(0x469e, 0x9f47, 0x2a20, 0x7ec9, 0x2ee5, 0x5561, 0x1, 0x1);
        gbc.writeMem(0x469e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9f47, gbc.sp());
        EXPECT(0x46a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0339
        gbc.setState(0x2be1, 0x4436, 0xe1a0, 0xc12d, 0x8516, 0xf594, 0x1, 0x1);
        gbc.writeMem(0x2be1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4436, gbc.sp());
        EXPECT(0x2be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 033A
        gbc.setState(0x8869, 0x2aba, 0x6560, 0xaf5e, 0x34a2, 0x2908, 0x1, 0x0);
        gbc.writeMem(0x8869, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2aba, gbc.sp());
        EXPECT(0x886b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8869));
        EXPECT(0x4f, gbc.readMem(0x886a));
        // CB 4F 033B
        gbc.setState(0x91ac, 0x892f, 0x3e30, 0x2b5f, 0x97ca, 0xd285, 0x1, 0x1);
        gbc.writeMem(0x91ac, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x892f, gbc.sp());
        EXPECT(0x91ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ac));
        EXPECT(0x4f, gbc.readMem(0x91ad));
        // CB 4F 033C
        gbc.setState(0xca53, 0x6734, 0x1280, 0x976b, 0x61df, 0xbe80, 0x1, 0x1);
        gbc.writeMem(0xca53, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6734, gbc.sp());
        EXPECT(0xca55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca53));
        EXPECT(0x4f, gbc.readMem(0xca54));
        // CB 4F 033D
        gbc.setState(0x4ead, 0xb3eb, 0x7a10, 0x7583, 0xd59a, 0x7ce1, 0x1, 0x0);
        gbc.writeMem(0x4ead, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb3eb, gbc.sp());
        EXPECT(0x4eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 033E
        gbc.setState(0x36b6, 0xfd4e, 0x3780, 0x46db, 0x9509, 0xf82c, 0x1, 0x1);
        gbc.writeMem(0x36b6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfd4e, gbc.sp());
        EXPECT(0x36b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 033F
        gbc.setState(0x4211, 0x2171, 0xb390, 0xb152, 0xf2da, 0xb54e, 0x0, 0x1);
        gbc.writeMem(0x4211, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2171, gbc.sp());
        EXPECT(0x4213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0341
        gbc.setState(0x544c, 0x91dc, 0x20a0, 0x92cf, 0x67b7, 0x370, 0x0, 0x0);
        gbc.writeMem(0x544c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x91dc, gbc.sp());
        EXPECT(0x544e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0342
        gbc.setState(0x7d30, 0xc4d0, 0xda90, 0x6f7, 0x3bde, 0xf2c6, 0x1, 0x1);
        gbc.writeMem(0x7d30, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc4d0, gbc.sp());
        EXPECT(0x7d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0343
        gbc.setState(0x5e6, 0xcdc1, 0x450, 0x51f0, 0x68c3, 0x6ad5, 0x0, 0x0);
        gbc.writeMem(0x5e6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcdc1, gbc.sp());
        EXPECT(0x5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0344
        gbc.setState(0xb4d, 0xe055, 0xed80, 0xc684, 0x8959, 0xdd8d, 0x0, 0x1);
        gbc.writeMem(0xb4d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe055, gbc.sp());
        EXPECT(0xb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0345
        gbc.setState(0xe708, 0xe65a, 0x2480, 0xe5e3, 0xb1ed, 0x8d49, 0x0, 0x0);
        gbc.writeMem(0xe708, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe65a, gbc.sp());
        EXPECT(0xe70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe708));
        EXPECT(0x4f, gbc.readMem(0xe709));
        // CB 4F 0346
        gbc.setState(0x1350, 0x8fba, 0xdc10, 0xbd02, 0x96d9, 0x9a6b, 0x1, 0x1);
        gbc.writeMem(0x1350, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8fba, gbc.sp());
        EXPECT(0x1352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0347
        gbc.setState(0x6f19, 0xa17f, 0xa4b0, 0xfbd8, 0x6154, 0x6682, 0x0, 0x0);
        gbc.writeMem(0x6f19, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa17f, gbc.sp());
        EXPECT(0x6f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0348
        gbc.setState(0x811d, 0xb50b, 0xf340, 0xb566, 0x53f3, 0x3652, 0x1, 0x0);
        gbc.writeMem(0x811d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb50b, gbc.sp());
        EXPECT(0x811f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811d));
        EXPECT(0x4f, gbc.readMem(0x811e));
        // CB 4F 0349
        gbc.setState(0x7f68, 0xc853, 0xadd0, 0xfb5b, 0xec7e, 0xc486, 0x1, 0x0);
        gbc.writeMem(0x7f68, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc853, gbc.sp());
        EXPECT(0x7f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 034B
        gbc.setState(0x815e, 0xc181, 0x8940, 0x586b, 0xaecd, 0xfc17, 0x1, 0x1);
        gbc.writeMem(0x815e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc181, gbc.sp());
        EXPECT(0x8160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815e));
        EXPECT(0x4f, gbc.readMem(0x815f));
        // CB 4F 034C
        gbc.setState(0x6017, 0xac7f, 0x2ec0, 0xc695, 0x1cca, 0xd5d9, 0x1, 0x1);
        gbc.writeMem(0x6017, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xac7f, gbc.sp());
        EXPECT(0x6019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 034D
        gbc.setState(0xd193, 0xdb8a, 0x7ab0, 0x9b67, 0xfbe5, 0xd6f3, 0x0, 0x1);
        gbc.writeMem(0xd193, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdb8a, gbc.sp());
        EXPECT(0xd195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd193));
        EXPECT(0x4f, gbc.readMem(0xd194));
        // CB 4F 034E
        gbc.setState(0xece2, 0x9059, 0xb270, 0x6912, 0x6864, 0xd149, 0x1, 0x0);
        gbc.writeMem(0xece2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9059, gbc.sp());
        EXPECT(0xece4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece2));
        EXPECT(0x4f, gbc.readMem(0xece3));
        // CB 4F 034F
        gbc.setState(0x920d, 0x28db, 0x4f20, 0x93e4, 0xe44c, 0x460d, 0x1, 0x1);
        gbc.writeMem(0x920d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x28db, gbc.sp());
        EXPECT(0x920f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x920d));
        EXPECT(0x4f, gbc.readMem(0x920e));
        // CB 4F 0350
        gbc.setState(0x486b, 0x301c, 0x1470, 0x4145, 0x2904, 0x58b8, 0x1, 0x0);
        gbc.writeMem(0x486b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x301c, gbc.sp());
        EXPECT(0x486d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0351
        gbc.setState(0xcf40, 0x7b72, 0x96b0, 0x3612, 0x3dcd, 0x52b8, 0x0, 0x1);
        gbc.writeMem(0xcf40, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7b72, gbc.sp());
        EXPECT(0xcf42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf40));
        EXPECT(0x4f, gbc.readMem(0xcf41));
        // CB 4F 0352
        gbc.setState(0x93bc, 0x6a5c, 0x1f00, 0xc6c0, 0xba58, 0x8390, 0x1, 0x0);
        gbc.writeMem(0x93bc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6a5c, gbc.sp());
        EXPECT(0x93be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bc));
        EXPECT(0x4f, gbc.readMem(0x93bd));
        // CB 4F 0353
        gbc.setState(0xb56a, 0x419c, 0x4f20, 0xf6f3, 0xeb9a, 0x2df0, 0x1, 0x1);
        gbc.writeMem(0xb56a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x419c, gbc.sp());
        EXPECT(0xb56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56a));
        EXPECT(0x4f, gbc.readMem(0xb56b));
        // CB 4F 0354
        gbc.setState(0xbe6e, 0x76c3, 0xce0, 0x6fc5, 0xc796, 0x2083, 0x0, 0x0);
        gbc.writeMem(0xbe6e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x76c3, gbc.sp());
        EXPECT(0xbe70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6e));
        EXPECT(0x4f, gbc.readMem(0xbe6f));
        // CB 4F 0355
        gbc.setState(0xd576, 0xbfa, 0x1740, 0x1cbf, 0x6a4d, 0x75c0, 0x0, 0x0);
        gbc.writeMem(0xd576, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbfa, gbc.sp());
        EXPECT(0xd578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd576));
        EXPECT(0x4f, gbc.readMem(0xd577));
        // CB 4F 0356
        gbc.setState(0x44bb, 0xf4d4, 0x59e0, 0xef2b, 0x7455, 0xa893, 0x1, 0x1);
        gbc.writeMem(0x44bb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf4d4, gbc.sp());
        EXPECT(0x44bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0357
        gbc.setState(0xf2a, 0xfdc6, 0xf8b0, 0x9c3a, 0xe0c6, 0x955e, 0x1, 0x0);
        gbc.writeMem(0xf2a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfdc6, gbc.sp());
        EXPECT(0xf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0359
        gbc.setState(0xde93, 0x640, 0x4190, 0x97ed, 0x2d88, 0xc700, 0x0, 0x0);
        gbc.writeMem(0xde93, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x640, gbc.sp());
        EXPECT(0xde95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde93));
        EXPECT(0x4f, gbc.readMem(0xde94));
        // CB 4F 035A
        gbc.setState(0xbdb4, 0xb431, 0x5eb0, 0x1d32, 0x800c, 0xbd1c, 0x1, 0x0);
        gbc.writeMem(0xbdb4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb431, gbc.sp());
        EXPECT(0xbdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb4));
        EXPECT(0x4f, gbc.readMem(0xbdb5));
        // CB 4F 035B
        gbc.setState(0x50a8, 0xa051, 0x9d60, 0x6cba, 0xf9aa, 0xccca, 0x1, 0x1);
        gbc.writeMem(0x50a8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa051, gbc.sp());
        EXPECT(0x50aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 035C
        gbc.setState(0x103, 0x82b, 0xf980, 0xcbe7, 0x8869, 0x93e8, 0x0, 0x1);
        gbc.writeMem(0x103, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x82b, gbc.sp());
        EXPECT(0x105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 035D
        gbc.setState(0x6389, 0xfa0f, 0x1350, 0x2a8, 0xf8fa, 0x3aa5, 0x0, 0x0);
        gbc.writeMem(0x6389, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfa0f, gbc.sp());
        EXPECT(0x638b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 035E
        gbc.setState(0xeb25, 0x179f, 0xd9d0, 0x8ae4, 0xd5d0, 0x57, 0x0, 0x1);
        gbc.writeMem(0xeb25, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x179f, gbc.sp());
        EXPECT(0xeb27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb25));
        EXPECT(0x4f, gbc.readMem(0xeb26));
        // CB 4F 035F
        gbc.setState(0x5347, 0xbeb2, 0x5ba0, 0x4600, 0x4158, 0x9bf0, 0x1, 0x1);
        gbc.writeMem(0x5347, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbeb2, gbc.sp());
        EXPECT(0x5349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0360
        gbc.setState(0xba5d, 0xf447, 0x39c0, 0xb81b, 0x4c88, 0x4797, 0x1, 0x1);
        gbc.writeMem(0xba5d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf447, gbc.sp());
        EXPECT(0xba5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5d));
        EXPECT(0x4f, gbc.readMem(0xba5e));
        // CB 4F 0361
        gbc.setState(0x1c99, 0xba29, 0xc710, 0xd7f1, 0xa91, 0xb99e, 0x0, 0x1);
        gbc.writeMem(0x1c99, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xba29, gbc.sp());
        EXPECT(0x1c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0362
        gbc.setState(0x5367, 0xfdee, 0x2be0, 0x1e22, 0x2a8b, 0x176, 0x0, 0x1);
        gbc.writeMem(0x5367, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfdee, gbc.sp());
        EXPECT(0x5369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0363
        gbc.setState(0x34ff, 0xb35a, 0xa000, 0xef93, 0xf961, 0x3aaa, 0x1, 0x0);
        gbc.writeMem(0x34ff, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb35a, gbc.sp());
        EXPECT(0x3501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0364
        gbc.setState(0x4f25, 0x56d2, 0xb2e0, 0x17ff, 0xe578, 0x433d, 0x1, 0x0);
        gbc.writeMem(0x4f25, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x56d2, gbc.sp());
        EXPECT(0x4f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0365
        gbc.setState(0xba1f, 0x24a8, 0xe770, 0x5984, 0xfee2, 0xc193, 0x0, 0x0);
        gbc.writeMem(0xba1f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x24a8, gbc.sp());
        EXPECT(0xba21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1f));
        EXPECT(0x4f, gbc.readMem(0xba20));
        // CB 4F 0366
        gbc.setState(0xc48, 0xb617, 0x99c0, 0xae63, 0x9d5f, 0xe30f, 0x0, 0x1);
        gbc.writeMem(0xc48, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb617, gbc.sp());
        EXPECT(0xc4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0367
        gbc.setState(0x3947, 0x6e8f, 0xb0f0, 0xb10d, 0x9d6, 0xfdf2, 0x1, 0x0);
        gbc.writeMem(0x3947, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6e8f, gbc.sp());
        EXPECT(0x3949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0368
        gbc.setState(0x588f, 0x69a2, 0x4ce0, 0xbb6c, 0x13c6, 0xac45, 0x0, 0x0);
        gbc.writeMem(0x588f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x69a2, gbc.sp());
        EXPECT(0x5891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0369
        gbc.setState(0xc65e, 0x5774, 0x7640, 0xac0a, 0xa9e1, 0xc15a, 0x1, 0x0);
        gbc.writeMem(0xc65e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5774, gbc.sp());
        EXPECT(0xc660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc65e));
        EXPECT(0x4f, gbc.readMem(0xc65f));
        // CB 4F 036A
        gbc.setState(0xecb2, 0x68d2, 0xeb00, 0x4ab4, 0xe3a3, 0xd4d6, 0x0, 0x0);
        gbc.writeMem(0xecb2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x68d2, gbc.sp());
        EXPECT(0xecb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb2));
        EXPECT(0x4f, gbc.readMem(0xecb3));
        // CB 4F 036B
        gbc.setState(0x9865, 0x8b3c, 0x78c0, 0xd3f0, 0x755b, 0xb0e6, 0x1, 0x0);
        gbc.writeMem(0x9865, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8b3c, gbc.sp());
        EXPECT(0x9867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9865));
        EXPECT(0x4f, gbc.readMem(0x9866));
        // CB 4F 036C
        gbc.setState(0xd15b, 0xc874, 0xc3a0, 0xaead, 0x736a, 0x7247, 0x1, 0x1);
        gbc.writeMem(0xd15b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc874, gbc.sp());
        EXPECT(0xd15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15b));
        EXPECT(0x4f, gbc.readMem(0xd15c));
        // CB 4F 036D
        gbc.setState(0xbfb7, 0x57ad, 0x5e40, 0x1f53, 0xc49e, 0x85b9, 0x0, 0x1);
        gbc.writeMem(0xbfb7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x57ad, gbc.sp());
        EXPECT(0xbfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb7));
        EXPECT(0x4f, gbc.readMem(0xbfb8));
        // CB 4F 036E
        gbc.setState(0xd24f, 0xba8f, 0x8970, 0xba1, 0x5396, 0xea99, 0x1, 0x0);
        gbc.writeMem(0xd24f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xba8f, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24f));
        EXPECT(0x4f, gbc.readMem(0xd250));
        // CB 4F 036F
        gbc.setState(0xaf4e, 0x36b7, 0x1510, 0xb6ba, 0xc797, 0x2dea, 0x1, 0x0);
        gbc.writeMem(0xaf4e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x36b7, gbc.sp());
        EXPECT(0xaf50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4e));
        EXPECT(0x4f, gbc.readMem(0xaf4f));
        // CB 4F 0370
        gbc.setState(0x34ec, 0xf386, 0xc130, 0x3ccc, 0xfba2, 0xaa53, 0x0, 0x1);
        gbc.writeMem(0x34ec, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf386, gbc.sp());
        EXPECT(0x34ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0371
        gbc.setState(0x9b20, 0x974d, 0x260, 0x363b, 0xe350, 0x10ef, 0x1, 0x1);
        gbc.writeMem(0x9b20, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x974d, gbc.sp());
        EXPECT(0x9b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b20));
        EXPECT(0x4f, gbc.readMem(0x9b21));
        // CB 4F 0372
        gbc.setState(0x9f5d, 0x9382, 0x25a0, 0xa6cb, 0xe8c9, 0x5157, 0x0, 0x1);
        gbc.writeMem(0x9f5d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9382, gbc.sp());
        EXPECT(0x9f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5d));
        EXPECT(0x4f, gbc.readMem(0x9f5e));
        // CB 4F 0373
        gbc.setState(0xeb4, 0xd8af, 0xb0e0, 0xac8c, 0x9721, 0x68e1, 0x1, 0x0);
        gbc.writeMem(0xeb4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd8af, gbc.sp());
        EXPECT(0xeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0375
        gbc.setState(0xd2e5, 0x5110, 0xce0, 0x931f, 0xf9c5, 0xe763, 0x0, 0x0);
        gbc.writeMem(0xd2e5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5110, gbc.sp());
        EXPECT(0xd2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e5));
        EXPECT(0x4f, gbc.readMem(0xd2e6));
        // CB 4F 0376
        gbc.setState(0xbf0, 0x4c, 0x54d0, 0x7c09, 0x5f0b, 0x74ef, 0x1, 0x1);
        gbc.writeMem(0xbf0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4c, gbc.sp());
        EXPECT(0xbf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0377
        gbc.setState(0x7f6e, 0x66df, 0xd550, 0x3e75, 0xdbb7, 0xa6d6, 0x0, 0x1);
        gbc.writeMem(0x7f6e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x66df, gbc.sp());
        EXPECT(0x7f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0379
        gbc.setState(0xbeff, 0xec26, 0xf520, 0xd1e, 0xe4aa, 0x1517, 0x0, 0x0);
        gbc.writeMem(0xbeff, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xec26, gbc.sp());
        EXPECT(0xbf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeff));
        EXPECT(0x4f, gbc.readMem(0xbf00));
        // CB 4F 037A
        gbc.setState(0x725c, 0x81ac, 0xb130, 0xcc4f, 0xe10c, 0x5d80, 0x0, 0x0);
        gbc.writeMem(0x725c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x81ac, gbc.sp());
        EXPECT(0x725e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 037B
        gbc.setState(0x9237, 0x43b2, 0xd590, 0xc9cd, 0x821f, 0x1cec, 0x0, 0x0);
        gbc.writeMem(0x9237, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x43b2, gbc.sp());
        EXPECT(0x9239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9237));
        EXPECT(0x4f, gbc.readMem(0x9238));
        // CB 4F 037C
        gbc.setState(0x4b08, 0xc039, 0xe2e0, 0xc4ff, 0xbe89, 0x5910, 0x0, 0x0);
        gbc.writeMem(0x4b08, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc039, gbc.sp());
        EXPECT(0x4b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 037D
        gbc.setState(0x6642, 0x7fd, 0x37c0, 0x8c21, 0x3bc5, 0x4ab5, 0x0, 0x1);
        gbc.writeMem(0x6642, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7fd, gbc.sp());
        EXPECT(0x6644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 037E
        gbc.setState(0xad38, 0xfd4d, 0xb0d0, 0x5202, 0x362d, 0xd70d, 0x1, 0x1);
        gbc.writeMem(0xad38, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfd4d, gbc.sp());
        EXPECT(0xad3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad38));
        EXPECT(0x4f, gbc.readMem(0xad39));
        // CB 4F 037F
        gbc.setState(0x9a5f, 0xbec0, 0x2da0, 0x5cfe, 0xcdb, 0x2582, 0x1, 0x1);
        gbc.writeMem(0x9a5f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbec0, gbc.sp());
        EXPECT(0x9a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5f));
        EXPECT(0x4f, gbc.readMem(0x9a60));
        // CB 4F 0380
        gbc.setState(0xb74f, 0x3595, 0x5030, 0xf628, 0xe4f1, 0xc280, 0x0, 0x0);
        gbc.writeMem(0xb74f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3595, gbc.sp());
        EXPECT(0xb751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74f));
        EXPECT(0x4f, gbc.readMem(0xb750));
        // CB 4F 0381
        gbc.setState(0x3d9b, 0xb8b8, 0x7120, 0x132b, 0x4de7, 0x93ac, 0x1, 0x1);
        gbc.writeMem(0x3d9b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb8b8, gbc.sp());
        EXPECT(0x3d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0382
        gbc.setState(0x3064, 0x4b66, 0x94b0, 0xfc8, 0x87aa, 0x48da, 0x1, 0x0);
        gbc.writeMem(0x3064, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4b66, gbc.sp());
        EXPECT(0x3066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0383
        gbc.setState(0x4b22, 0x80eb, 0x91d0, 0xe9e8, 0xdd04, 0x7811, 0x1, 0x1);
        gbc.writeMem(0x4b22, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x80eb, gbc.sp());
        EXPECT(0x4b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0384
        gbc.setState(0x9b6a, 0x6e92, 0x61d0, 0xafe2, 0x388a, 0x6487, 0x0, 0x1);
        gbc.writeMem(0x9b6a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6e92, gbc.sp());
        EXPECT(0x9b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b6a));
        EXPECT(0x4f, gbc.readMem(0x9b6b));
        // CB 4F 0385
        gbc.setState(0x784d, 0x9a04, 0x4870, 0x7e70, 0x35bd, 0x524d, 0x1, 0x0);
        gbc.writeMem(0x784d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9a04, gbc.sp());
        EXPECT(0x784f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0386
        gbc.setState(0xabcf, 0xa3e6, 0x6210, 0x9aa6, 0x339b, 0x8106, 0x1, 0x1);
        gbc.writeMem(0xabcf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa3e6, gbc.sp());
        EXPECT(0xabd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcf));
        EXPECT(0x4f, gbc.readMem(0xabd0));
        // CB 4F 0387
        gbc.setState(0x414c, 0x31c, 0x6100, 0x3d5e, 0x2fc6, 0x5704, 0x1, 0x1);
        gbc.writeMem(0x414c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x31c, gbc.sp());
        EXPECT(0x414e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0388
        gbc.setState(0x9a21, 0xc9a0, 0x3310, 0xbe1b, 0xe114, 0x9a1f, 0x0, 0x1);
        gbc.writeMem(0x9a21, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc9a0, gbc.sp());
        EXPECT(0x9a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a21));
        EXPECT(0x4f, gbc.readMem(0x9a22));
        // CB 4F 0389
        gbc.setState(0xcf2b, 0xa1c7, 0xbb30, 0xa430, 0x142, 0x342f, 0x1, 0x0);
        gbc.writeMem(0xcf2b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa1c7, gbc.sp());
        EXPECT(0xcf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2b));
        EXPECT(0x4f, gbc.readMem(0xcf2c));
        // CB 4F 038A
        gbc.setState(0x5479, 0x3233, 0x6ce0, 0x29bb, 0xcad0, 0xf238, 0x1, 0x0);
        gbc.writeMem(0x5479, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3233, gbc.sp());
        EXPECT(0x547b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 038B
        gbc.setState(0x5bfb, 0x56c8, 0x3110, 0x6d1c, 0xa54e, 0xf97b, 0x1, 0x1);
        gbc.writeMem(0x5bfb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x56c8, gbc.sp());
        EXPECT(0x5bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 038C
        gbc.setState(0x7a83, 0xd29b, 0xce90, 0xf89b, 0xe8a, 0x95db, 0x0, 0x1);
        gbc.writeMem(0x7a83, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd29b, gbc.sp());
        EXPECT(0x7a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 038E
        gbc.setState(0xcfd3, 0x4b08, 0x6040, 0x3723, 0xe66, 0x9e04, 0x0, 0x0);
        gbc.writeMem(0xcfd3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4b08, gbc.sp());
        EXPECT(0xcfd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd3));
        EXPECT(0x4f, gbc.readMem(0xcfd4));
        // CB 4F 0390
        gbc.setState(0x98eb, 0xb223, 0xf7b0, 0x326a, 0xa79f, 0x32e7, 0x0, 0x1);
        gbc.writeMem(0x98eb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb223, gbc.sp());
        EXPECT(0x98ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98eb));
        EXPECT(0x4f, gbc.readMem(0x98ec));
        // CB 4F 0391
        gbc.setState(0x98a1, 0xf9ce, 0xd640, 0xdd77, 0xfc3e, 0xc643, 0x0, 0x1);
        gbc.writeMem(0x98a1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf9ce, gbc.sp());
        EXPECT(0x98a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a1));
        EXPECT(0x4f, gbc.readMem(0x98a2));
        // CB 4F 0392
        gbc.setState(0x2529, 0x6d68, 0x7680, 0x8679, 0x23a3, 0x96ee, 0x0, 0x1);
        gbc.writeMem(0x2529, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6d68, gbc.sp());
        EXPECT(0x252b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 0393
        gbc.setState(0x3ba5, 0xbee2, 0xe010, 0xb4c6, 0x7279, 0xe202, 0x0, 0x1);
        gbc.writeMem(0x3ba5, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbee2, gbc.sp());
        EXPECT(0x3ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0394
        gbc.setState(0xa13a, 0x13de, 0x3bb0, 0x8b9d, 0x2bf5, 0x71de, 0x1, 0x0);
        gbc.writeMem(0xa13a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x13de, gbc.sp());
        EXPECT(0xa13c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13a));
        EXPECT(0x4f, gbc.readMem(0xa13b));
        // CB 4F 0395
        gbc.setState(0x690b, 0xbacd, 0xd0, 0x69bd, 0xb912, 0x74b4, 0x1, 0x1);
        gbc.writeMem(0x690b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbacd, gbc.sp());
        EXPECT(0x690d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0396
        gbc.setState(0x54e0, 0x4be, 0xf570, 0x5311, 0xb992, 0x3ee2, 0x0, 0x1);
        gbc.writeMem(0x54e0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4be, gbc.sp());
        EXPECT(0x54e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0397
        gbc.setState(0x5f41, 0xff90, 0x1f10, 0x25e5, 0x34f9, 0x270d, 0x1, 0x1);
        gbc.writeMem(0x5f41, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xff90, gbc.sp());
        EXPECT(0x5f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0398
        gbc.setState(0x64a3, 0x9c2d, 0x7270, 0xb8b4, 0xbfc6, 0x95da, 0x1, 0x0);
        gbc.writeMem(0x64a3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9c2d, gbc.sp());
        EXPECT(0x64a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 0399
        gbc.setState(0x8a76, 0x9504, 0x2860, 0xbc5d, 0xe706, 0x36b3, 0x0, 0x1);
        gbc.writeMem(0x8a76, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9504, gbc.sp());
        EXPECT(0x8a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a76));
        EXPECT(0x4f, gbc.readMem(0x8a77));
        // CB 4F 039B
        gbc.setState(0xae4c, 0x6332, 0xf790, 0x9633, 0x459a, 0x9f83, 0x0, 0x1);
        gbc.writeMem(0xae4c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6332, gbc.sp());
        EXPECT(0xae4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae4c));
        EXPECT(0x4f, gbc.readMem(0xae4d));
        // CB 4F 039C
        gbc.setState(0x86d4, 0xe5b7, 0x7c90, 0x7b62, 0xd8f8, 0xe0ed, 0x0, 0x0);
        gbc.writeMem(0x86d4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe5b7, gbc.sp());
        EXPECT(0x86d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d4));
        EXPECT(0x4f, gbc.readMem(0x86d5));
        // CB 4F 039D
        gbc.setState(0xd29c, 0x470c, 0xa310, 0x7bda, 0x70c5, 0x51b2, 0x1, 0x1);
        gbc.writeMem(0xd29c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x470c, gbc.sp());
        EXPECT(0xd29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29c));
        EXPECT(0x4f, gbc.readMem(0xd29d));
        // CB 4F 039E
        gbc.setState(0x52f8, 0xb323, 0x3060, 0x7f05, 0x465e, 0x177f, 0x1, 0x1);
        gbc.writeMem(0x52f8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb323, gbc.sp());
        EXPECT(0x52fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 039F
        gbc.setState(0x9d2c, 0x2365, 0x2b20, 0xf7e4, 0x76db, 0x6eef, 0x1, 0x1);
        gbc.writeMem(0x9d2c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2365, gbc.sp());
        EXPECT(0x9d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2c));
        EXPECT(0x4f, gbc.readMem(0x9d2d));
        // CB 4F 03A0
        gbc.setState(0x5fdd, 0xe5f8, 0x3140, 0x1117, 0xe8c0, 0x5add, 0x1, 0x1);
        gbc.writeMem(0x5fdd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe5f8, gbc.sp());
        EXPECT(0x5fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03A1
        gbc.setState(0x9d8d, 0xc78c, 0x45d0, 0xf408, 0xfd4, 0x80a5, 0x1, 0x1);
        gbc.writeMem(0x9d8d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc78c, gbc.sp());
        EXPECT(0x9d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8d));
        EXPECT(0x4f, gbc.readMem(0x9d8e));
        // CB 4F 03A2
        gbc.setState(0x7070, 0xb154, 0xf8e0, 0xd78, 0x45df, 0x4338, 0x1, 0x1);
        gbc.writeMem(0x7070, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb154, gbc.sp());
        EXPECT(0x7072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03A3
        gbc.setState(0x26af, 0x97e3, 0x2c50, 0x6cb9, 0xb087, 0x8009, 0x1, 0x0);
        gbc.writeMem(0x26af, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x97e3, gbc.sp());
        EXPECT(0x26b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03A4
        gbc.setState(0xd58d, 0x89f9, 0x58d0, 0xe685, 0x3e4f, 0xdb8e, 0x0, 0x1);
        gbc.writeMem(0xd58d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x89f9, gbc.sp());
        EXPECT(0xd58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58d));
        EXPECT(0x4f, gbc.readMem(0xd58e));
        // CB 4F 03A5
        gbc.setState(0x3646, 0x32e3, 0x5790, 0xf183, 0xe94, 0xb13c, 0x1, 0x1);
        gbc.writeMem(0x3646, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x32e3, gbc.sp());
        EXPECT(0x3648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03A7
        gbc.setState(0xeaa7, 0xc51b, 0x7bd0, 0xdc9a, 0xf00f, 0x7dee, 0x0, 0x1);
        gbc.writeMem(0xeaa7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc51b, gbc.sp());
        EXPECT(0xeaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa7));
        EXPECT(0x4f, gbc.readMem(0xeaa8));
        // CB 4F 03A8
        gbc.setState(0xa7c0, 0x3f68, 0x5dc0, 0x45fa, 0x12ce, 0x5806, 0x0, 0x1);
        gbc.writeMem(0xa7c0, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3f68, gbc.sp());
        EXPECT(0xa7c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c0));
        EXPECT(0x4f, gbc.readMem(0xa7c1));
        // CB 4F 03A9
        gbc.setState(0x4cd7, 0xa438, 0xb2f0, 0x66c0, 0xdabb, 0xa7c9, 0x1, 0x0);
        gbc.writeMem(0x4cd7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa438, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03AA
        gbc.setState(0x4fd8, 0x1b99, 0x66e0, 0xce4c, 0xbbe4, 0x890d, 0x1, 0x0);
        gbc.writeMem(0x4fd8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1b99, gbc.sp());
        EXPECT(0x4fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03AB
        gbc.setState(0xa3e4, 0x1a3a, 0x8900, 0x6798, 0x2f2e, 0xe4d9, 0x1, 0x1);
        gbc.writeMem(0xa3e4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1a3a, gbc.sp());
        EXPECT(0xa3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e4));
        EXPECT(0x4f, gbc.readMem(0xa3e5));
        // CB 4F 03AC
        gbc.setState(0x2efc, 0x80db, 0xf370, 0x54c7, 0xd138, 0xf7e5, 0x1, 0x0);
        gbc.writeMem(0x2efc, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x80db, gbc.sp());
        EXPECT(0x2efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03AD
        gbc.setState(0xa85, 0x4f24, 0xb010, 0x5ca1, 0xda8, 0x70cb, 0x1, 0x1);
        gbc.writeMem(0xa85, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4f24, gbc.sp());
        EXPECT(0xa87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03AE
        gbc.setState(0xc11d, 0x53f4, 0xbc50, 0x66fc, 0x460, 0x3810, 0x1, 0x0);
        gbc.writeMem(0xc11d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x53f4, gbc.sp());
        EXPECT(0xc11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11d));
        EXPECT(0x4f, gbc.readMem(0xc11e));
        // CB 4F 03AF
        gbc.setState(0x8800, 0x2639, 0xcba0, 0x1bf7, 0x50d3, 0x768d, 0x1, 0x0);
        gbc.writeMem(0x8800, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2639, gbc.sp());
        EXPECT(0x8802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8800));
        EXPECT(0x4f, gbc.readMem(0x8801));
        // CB 4F 03B0
        gbc.setState(0xb01e, 0xb079, 0x6e80, 0x873, 0x7b9d, 0x712d, 0x0, 0x1);
        gbc.writeMem(0xb01e, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb079, gbc.sp());
        EXPECT(0xb020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01e));
        EXPECT(0x4f, gbc.readMem(0xb01f));
        // CB 4F 03B1
        gbc.setState(0xc1b1, 0x1bd3, 0xc060, 0x7a5a, 0xe94f, 0xbd79, 0x0, 0x0);
        gbc.writeMem(0xc1b1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1bd3, gbc.sp());
        EXPECT(0xc1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b1));
        EXPECT(0x4f, gbc.readMem(0xc1b2));
        // CB 4F 03B2
        gbc.setState(0xafb2, 0xcfc9, 0xb840, 0xfa29, 0x9edd, 0x4b9f, 0x0, 0x1);
        gbc.writeMem(0xafb2, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcfc9, gbc.sp());
        EXPECT(0xafb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb2));
        EXPECT(0x4f, gbc.readMem(0xafb3));
        // CB 4F 03B3
        gbc.setState(0xebfd, 0x9c29, 0x7490, 0x22e1, 0xda4b, 0xecf2, 0x1, 0x1);
        gbc.writeMem(0xebfd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9c29, gbc.sp());
        EXPECT(0xebff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfd));
        EXPECT(0x4f, gbc.readMem(0xebfe));
        // CB 4F 03B4
        gbc.setState(0x926c, 0xfafa, 0xb170, 0xe620, 0x7b6b, 0xebeb, 0x0, 0x1);
        gbc.writeMem(0x926c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfafa, gbc.sp());
        EXPECT(0x926e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926c));
        EXPECT(0x4f, gbc.readMem(0x926d));
        // CB 4F 03B5
        gbc.setState(0x3d73, 0x2443, 0xcf80, 0x4ac8, 0x12ce, 0xe52e, 0x1, 0x0);
        gbc.writeMem(0x3d73, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2443, gbc.sp());
        EXPECT(0x3d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03B6
        gbc.setState(0x76d, 0x9fbb, 0xd3b0, 0x75e, 0x2035, 0x75cc, 0x0, 0x1);
        gbc.writeMem(0x76d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9fbb, gbc.sp());
        EXPECT(0x76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03B7
        gbc.setState(0xad89, 0x213c, 0xbfa0, 0x9439, 0x530e, 0xc9ca, 0x0, 0x0);
        gbc.writeMem(0xad89, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x213c, gbc.sp());
        EXPECT(0xad8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad89));
        EXPECT(0x4f, gbc.readMem(0xad8a));
        // CB 4F 03B8
        gbc.setState(0xcf50, 0x6189, 0xc100, 0xe9cd, 0x142, 0x4fb4, 0x0, 0x0);
        gbc.writeMem(0xcf50, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6189, gbc.sp());
        EXPECT(0xcf52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf50));
        EXPECT(0x4f, gbc.readMem(0xcf51));
        // CB 4F 03B9
        gbc.setState(0x2fa9, 0xbbc, 0x97f0, 0xea3d, 0x42a8, 0xf423, 0x1, 0x1);
        gbc.writeMem(0x2fa9, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbbc, gbc.sp());
        EXPECT(0x2fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03BA
        gbc.setState(0x8ca, 0x4b60, 0x1af0, 0xa8, 0xab33, 0x837f, 0x0, 0x1);
        gbc.writeMem(0x8ca, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4b60, gbc.sp());
        EXPECT(0x8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03BB
        gbc.setState(0x5779, 0xab86, 0x2600, 0x611d, 0xff78, 0xf99a, 0x1, 0x0);
        gbc.writeMem(0x5779, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xab86, gbc.sp());
        EXPECT(0x577b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03BC
        gbc.setState(0x4678, 0x409f, 0x2ba0, 0x2f6b, 0x5f4f, 0xad12, 0x0, 0x1);
        gbc.writeMem(0x4678, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x409f, gbc.sp());
        EXPECT(0x467a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03BD
        gbc.setState(0x3a8f, 0x54f6, 0x2490, 0x65ec, 0x201a, 0x7172, 0x0, 0x0);
        gbc.writeMem(0x3a8f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x54f6, gbc.sp());
        EXPECT(0x3a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03BE
        gbc.setState(0xfcd, 0x9d86, 0x8950, 0x3350, 0x25e5, 0x1317, 0x0, 0x1);
        gbc.writeMem(0xfcd, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9d86, gbc.sp());
        EXPECT(0xfcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03BF
        gbc.setState(0xd246, 0xfbc1, 0x4860, 0xb46b, 0xda7b, 0x3849, 0x0, 0x0);
        gbc.writeMem(0xd246, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfbc1, gbc.sp());
        EXPECT(0xd248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd246));
        EXPECT(0x4f, gbc.readMem(0xd247));
        // CB 4F 03C0
        gbc.setState(0xcbbb, 0xf0b, 0xaf00, 0x2164, 0x9dfb, 0xa248, 0x0, 0x0);
        gbc.writeMem(0xcbbb, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf0b, gbc.sp());
        EXPECT(0xcbbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbb));
        EXPECT(0x4f, gbc.readMem(0xcbbc));
        // CB 4F 03C1
        gbc.setState(0x6bed, 0xa5c7, 0xff20, 0xc203, 0x7d8, 0x1f4c, 0x0, 0x1);
        gbc.writeMem(0x6bed, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa5c7, gbc.sp());
        EXPECT(0x6bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03C2
        gbc.setState(0x3a7a, 0xb299, 0x5510, 0xb952, 0x7c75, 0x4044, 0x1, 0x0);
        gbc.writeMem(0x3a7a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb299, gbc.sp());
        EXPECT(0x3a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03C3
        gbc.setState(0x18c4, 0x3aaf, 0x4c60, 0x5a1f, 0xa768, 0xbfb7, 0x1, 0x0);
        gbc.writeMem(0x18c4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3aaf, gbc.sp());
        EXPECT(0x18c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03C4
        gbc.setState(0xd26c, 0x67e7, 0x9bc0, 0x4819, 0xbd7f, 0x59bd, 0x0, 0x0);
        gbc.writeMem(0xd26c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x67e7, gbc.sp());
        EXPECT(0xd26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26c));
        EXPECT(0x4f, gbc.readMem(0xd26d));
        // CB 4F 03C5
        gbc.setState(0x713c, 0x6318, 0xcba0, 0x711d, 0xfa81, 0x49f5, 0x0, 0x1);
        gbc.writeMem(0x713c, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6318, gbc.sp());
        EXPECT(0x713e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03C6
        gbc.setState(0x3f93, 0x59f4, 0x3700, 0xb9, 0x72a9, 0x3762, 0x1, 0x0);
        gbc.writeMem(0x3f93, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x59f4, gbc.sp());
        EXPECT(0x3f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03C7
        gbc.setState(0xbc22, 0x1411, 0x3410, 0x3d4b, 0xb334, 0x60f8, 0x0, 0x1);
        gbc.writeMem(0xbc22, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1411, gbc.sp());
        EXPECT(0xbc24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc22));
        EXPECT(0x4f, gbc.readMem(0xbc23));
        // CB 4F 03C8
        gbc.setState(0x22fa, 0x16f0, 0x3110, 0xd0ea, 0x9899, 0xe17a, 0x1, 0x1);
        gbc.writeMem(0x22fa, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x16f0, gbc.sp());
        EXPECT(0x22fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03C9
        gbc.setState(0x307a, 0x3a62, 0x5050, 0x9e1b, 0x8c7f, 0x286a, 0x0, 0x1);
        gbc.writeMem(0x307a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3a62, gbc.sp());
        EXPECT(0x307c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03CA
        gbc.setState(0x91f8, 0x2cc6, 0x3980, 0x3530, 0x8ffe, 0x5472, 0x1, 0x0);
        gbc.writeMem(0x91f8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2cc6, gbc.sp());
        EXPECT(0x91fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f8));
        EXPECT(0x4f, gbc.readMem(0x91f9));
        // CB 4F 03CB
        gbc.setState(0xd34a, 0x771d, 0x800, 0x4faa, 0xe5a, 0xa3d2, 0x0, 0x0);
        gbc.writeMem(0xd34a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x771d, gbc.sp());
        EXPECT(0xd34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd34a));
        EXPECT(0x4f, gbc.readMem(0xd34b));
        // CB 4F 03CC
        gbc.setState(0xab83, 0xa9b5, 0x2cc0, 0x6c0e, 0x416e, 0xa1a4, 0x0, 0x1);
        gbc.writeMem(0xab83, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa9b5, gbc.sp());
        EXPECT(0xab85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab83));
        EXPECT(0x4f, gbc.readMem(0xab84));
        // CB 4F 03CD
        gbc.setState(0x41de, 0x92a8, 0xea40, 0xeb0e, 0x6a76, 0x9339, 0x0, 0x1);
        gbc.writeMem(0x41de, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x92a8, gbc.sp());
        EXPECT(0x41e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03CE
        gbc.setState(0x43b6, 0x8040, 0x1400, 0xa777, 0xec88, 0x97c4, 0x1, 0x0);
        gbc.writeMem(0x43b6, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8040, gbc.sp());
        EXPECT(0x43b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03CF
        gbc.setState(0x4937, 0x824f, 0x7a00, 0xccb5, 0xa736, 0x7fae, 0x0, 0x0);
        gbc.writeMem(0x4937, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x824f, gbc.sp());
        EXPECT(0x4939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03D0
        gbc.setState(0xab0d, 0xffb, 0x77e0, 0xd355, 0x1c95, 0x60b6, 0x0, 0x0);
        gbc.writeMem(0xab0d, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xffb, gbc.sp());
        EXPECT(0xab0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0d));
        EXPECT(0x4f, gbc.readMem(0xab0e));
        // CB 4F 03D1
        gbc.setState(0x1a51, 0xafd1, 0xe660, 0x993d, 0xcb4e, 0x9d70, 0x1, 0x1);
        gbc.writeMem(0x1a51, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xafd1, gbc.sp());
        EXPECT(0x1a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03D2
        gbc.setState(0xbe97, 0x849f, 0x81d0, 0xeddd, 0x436b, 0x27cd, 0x1, 0x1);
        gbc.writeMem(0xbe97, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x849f, gbc.sp());
        EXPECT(0xbe99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe97));
        EXPECT(0x4f, gbc.readMem(0xbe98));
        // CB 4F 03D3
        gbc.setState(0x6aa7, 0x1db3, 0x4720, 0xd40, 0xff96, 0x24c4, 0x1, 0x1);
        gbc.writeMem(0x6aa7, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1db3, gbc.sp());
        EXPECT(0x6aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03D4
        gbc.setState(0xd02a, 0x6e55, 0x6970, 0xa36d, 0x40f7, 0xcc24, 0x1, 0x0);
        gbc.writeMem(0xd02a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6e55, gbc.sp());
        EXPECT(0xd02c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02a));
        EXPECT(0x4f, gbc.readMem(0xd02b));
        // CB 4F 03D5
        gbc.setState(0xdec4, 0xa390, 0x1610, 0x2921, 0xae4, 0x6ad9, 0x1, 0x1);
        gbc.writeMem(0xdec4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa390, gbc.sp());
        EXPECT(0xdec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec4));
        EXPECT(0x4f, gbc.readMem(0xdec5));
        // CB 4F 03D6
        gbc.setState(0x8a3f, 0x45c3, 0xdbd0, 0xbe8c, 0xd1f9, 0x9e5c, 0x1, 0x0);
        gbc.writeMem(0x8a3f, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x45c3, gbc.sp());
        EXPECT(0x8a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a3f));
        EXPECT(0x4f, gbc.readMem(0x8a40));
        // CB 4F 03D7
        gbc.setState(0xaf80, 0x46f5, 0x6250, 0x27e8, 0x4c36, 0x502b, 0x1, 0x1);
        gbc.writeMem(0xaf80, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x46f5, gbc.sp());
        EXPECT(0xaf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf80));
        EXPECT(0x4f, gbc.readMem(0xaf81));
        // CB 4F 03D8
        gbc.setState(0xae71, 0x23f8, 0xe010, 0x1361, 0x3d97, 0x1b65, 0x1, 0x1);
        gbc.writeMem(0xae71, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x23f8, gbc.sp());
        EXPECT(0xae73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae71));
        EXPECT(0x4f, gbc.readMem(0xae72));
        // CB 4F 03D9
        gbc.setState(0xc8b3, 0xb59, 0x5100, 0x642f, 0x9229, 0xe099, 0x1, 0x0);
        gbc.writeMem(0xc8b3, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb59, gbc.sp());
        EXPECT(0xc8b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b3));
        EXPECT(0x4f, gbc.readMem(0xc8b4));
        // CB 4F 03DA
        gbc.setState(0xbf33, 0xbc2d, 0x4c00, 0x8588, 0x77ee, 0x9b49, 0x0, 0x0);
        gbc.writeMem(0xbf33, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbc2d, gbc.sp());
        EXPECT(0xbf35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf33));
        EXPECT(0x4f, gbc.readMem(0xbf34));
        // CB 4F 03DB
        gbc.setState(0x78ea, 0xfa91, 0x84e0, 0xb091, 0x4036, 0x4900, 0x1, 0x0);
        gbc.writeMem(0x78ea, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfa91, gbc.sp());
        EXPECT(0x78ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03DC
        gbc.setState(0xe06a, 0xe63f, 0xdf10, 0x3096, 0xdfbc, 0x7cb, 0x0, 0x1);
        gbc.writeMem(0xe06a, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe63f, gbc.sp());
        EXPECT(0xe06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06a));
        EXPECT(0x4f, gbc.readMem(0xe06b));
        // CB 4F 03DD
        gbc.setState(0x5cf4, 0x978f, 0x5d70, 0x7c76, 0x5d00, 0x341d, 0x0, 0x0);
        gbc.writeMem(0x5cf4, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x978f, gbc.sp());
        EXPECT(0x5cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03DE
        gbc.setState(0xb167, 0x5815, 0xa080, 0xcb12, 0xb84a, 0xabaa, 0x1, 0x0);
        gbc.writeMem(0xb167, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5815, gbc.sp());
        EXPECT(0xb169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb167));
        EXPECT(0x4f, gbc.readMem(0xb168));
        // CB 4F 03DF
        gbc.setState(0x78b, 0x34ae, 0x2760, 0x4631, 0x5052, 0xd3cb, 0x0, 0x0);
        gbc.writeMem(0x78b, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x34ae, gbc.sp());
        EXPECT(0x78d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03E1
        gbc.setState(0xaeb1, 0x2bb1, 0xfcf0, 0xe848, 0xa9e9, 0xf2f1, 0x0, 0x0);
        gbc.writeMem(0xaeb1, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2bb1, gbc.sp());
        EXPECT(0xaeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb1));
        EXPECT(0x4f, gbc.readMem(0xaeb2));
        // CB 4F 03E2
        gbc.setState(0xa872, 0xed6c, 0xfb80, 0x6cd8, 0xa7d2, 0xf952, 0x1, 0x0);
        gbc.writeMem(0xa872, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xed6c, gbc.sp());
        EXPECT(0xa874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa872));
        EXPECT(0x4f, gbc.readMem(0xa873));
        // CB 4F 03E3
        gbc.setState(0x3fdf, 0xc80a, 0x72f0, 0x437, 0x6550, 0x68f4, 0x1, 0x1);
        gbc.writeMem(0x3fdf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc80a, gbc.sp());
        EXPECT(0x3fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03E4
        gbc.setState(0xba60, 0xf53b, 0xac50, 0xef1c, 0xdd78, 0x3008, 0x0, 0x0);
        gbc.writeMem(0xba60, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf53b, gbc.sp());
        EXPECT(0xba62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba60));
        EXPECT(0x4f, gbc.readMem(0xba61));
        // CB 4F 03E5
        gbc.setState(0xb12, 0xdef7, 0x7450, 0xcd9d, 0xa9d3, 0xeee0, 0x0, 0x0);
        gbc.writeMem(0xb12, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdef7, gbc.sp());
        EXPECT(0xb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4F 03E6
        gbc.setState(0x1d8, 0xc80, 0xa460, 0x272a, 0x88f8, 0x8ef6, 0x0, 0x0);
        gbc.writeMem(0x1d8, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc80, gbc.sp());
        EXPECT(0x1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4F 03E7
        gbc.setState(0xb5cf, 0xb51a, 0x2bf0, 0x624d, 0x26e6, 0x6b12, 0x1, 0x1);
        gbc.writeMem(0xb5cf, { 0xcb, 0x4f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb51a, gbc.sp());
        EXPECT(0xb5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5cf));
        EXPECT(0x4f, gbc.readMem(0xb5d0));
    }
