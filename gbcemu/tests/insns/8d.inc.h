    TEST(gbcemu, opcode_8d) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 8D 0000
        gbc.setState(0x23b2, 0x7cc6, 0x6ff0, 0x15b4, 0x3d, 0x193c, 0x0, 0x1);
        gbc.writeMem(0x23b2, { 0x8d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7cc6, gbc.sp());
        EXPECT(0x23b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0001
        gbc.setState(0x51d6, 0xf0aa, 0xdee0, 0x70e, 0x26de, 0x3fd6, 0x0, 0x0);
        gbc.writeMem(0x51d6, { 0x8d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf0aa, gbc.sp());
        EXPECT(0x51d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0002
        gbc.setState(0x20d3, 0x6c20, 0x9be0, 0x9e49, 0xf585, 0x8d05, 0x1, 0x0);
        gbc.writeMem(0x20d3, { 0x8d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6c20, gbc.sp());
        EXPECT(0x20d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0003
        gbc.setState(0xa9c9, 0x126e, 0x43e0, 0x2113, 0x320c, 0x3288, 0x1, 0x1);
        gbc.writeMem(0xa9c9, { 0x8d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x126e, gbc.sp());
        EXPECT(0xa9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa9c9));
        // 8D 0004
        gbc.setState(0x6a7, 0xbdfd, 0xf0d0, 0xa8b0, 0x12d4, 0x5fe2, 0x1, 0x0);
        gbc.writeMem(0x6a7, { 0x8d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbdfd, gbc.sp());
        EXPECT(0x6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0005
        gbc.setState(0x3188, 0xb080, 0xc8d0, 0x25a8, 0x779b, 0x432d, 0x1, 0x0);
        gbc.writeMem(0x3188, { 0x8d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb080, gbc.sp());
        EXPECT(0x3189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0006
        gbc.setState(0x84f1, 0xd688, 0x7660, 0x2361, 0xd4fe, 0x4d57, 0x1, 0x1);
        gbc.writeMem(0x84f1, { 0x8d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd688, gbc.sp());
        EXPECT(0x84f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x84f1));
        // 8D 0007
        gbc.setState(0xb73, 0x6453, 0x4770, 0x6eff, 0x9c6d, 0xff6e, 0x0, 0x1);
        gbc.writeMem(0xb73, { 0x8d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6453, gbc.sp());
        EXPECT(0xb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0008
        gbc.setState(0x501, 0x8b58, 0x61b0, 0xd67f, 0x3edc, 0xed66, 0x0, 0x1);
        gbc.writeMem(0x501, { 0x8d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8b58, gbc.sp());
        EXPECT(0x502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0009
        gbc.setState(0x116a, 0xf1c5, 0x1ef0, 0x3723, 0x918c, 0xd3f9, 0x1, 0x0);
        gbc.writeMem(0x116a, { 0x8d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf1c5, gbc.sp());
        EXPECT(0x116b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 000A
        gbc.setState(0x5844, 0x55c6, 0x4be0, 0x7977, 0xc7a3, 0xa294, 0x0, 0x0);
        gbc.writeMem(0x5844, { 0x8d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x55c6, gbc.sp());
        EXPECT(0x5845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 000B
        gbc.setState(0x9bed, 0x9d74, 0xeee0, 0x3187, 0x2a6b, 0x5c38, 0x0, 0x1);
        gbc.writeMem(0x9bed, { 0x8d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9d74, gbc.sp());
        EXPECT(0x9bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9bed));
        // 8D 000C
        gbc.setState(0x64ad, 0xcb8e, 0x27e0, 0x9cb9, 0x7217, 0x17d8, 0x1, 0x0);
        gbc.writeMem(0x64ad, { 0x8d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcb8e, gbc.sp());
        EXPECT(0x64ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 000F
        gbc.setState(0x7858, 0xa128, 0x2620, 0xb090, 0xc17c, 0x38a1, 0x0, 0x1);
        gbc.writeMem(0x7858, { 0x8d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa128, gbc.sp());
        EXPECT(0x7859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0010
        gbc.setState(0xc9f0, 0xa0ae, 0xe5a0, 0x97ef, 0xacdd, 0x3901, 0x0, 0x1);
        gbc.writeMem(0xc9f0, { 0x8d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa0ae, gbc.sp());
        EXPECT(0xc9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc9f0));
        // 8D 0011
        gbc.setState(0x6b4e, 0x145e, 0x29f0, 0xb3ee, 0x75af, 0x1a63, 0x0, 0x1);
        gbc.writeMem(0x6b4e, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x145e, gbc.sp());
        EXPECT(0x6b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0012
        gbc.setState(0x9c3f, 0x405a, 0x8160, 0x5c05, 0x9b51, 0xc144, 0x1, 0x0);
        gbc.writeMem(0x9c3f, { 0x8d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x405a, gbc.sp());
        EXPECT(0x9c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9c3f));
        // 8D 0013
        gbc.setState(0x7c60, 0x4f35, 0xe000, 0x4745, 0x4b67, 0x2378, 0x1, 0x0);
        gbc.writeMem(0x7c60, { 0x8d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4f35, gbc.sp());
        EXPECT(0x7c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0014
        gbc.setState(0x1a10, 0xc8c0, 0x680, 0x8dd2, 0x8226, 0x88ff, 0x0, 0x0);
        gbc.writeMem(0x1a10, { 0x8d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc8c0, gbc.sp());
        EXPECT(0x1a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0015
        gbc.setState(0xc017, 0x29ed, 0x4520, 0xd87, 0x4a82, 0xc903, 0x1, 0x0);
        gbc.writeMem(0xc017, { 0x8d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x29ed, gbc.sp());
        EXPECT(0xc018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc017));
        // 8D 0016
        gbc.setState(0x2851, 0x97ad, 0x63b0, 0x4fc0, 0xd842, 0x3afb, 0x0, 0x0);
        gbc.writeMem(0x2851, { 0x8d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x97ad, gbc.sp());
        EXPECT(0x2852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0017
        gbc.setState(0x1ac5, 0x7ad7, 0x10c0, 0x624f, 0xf1ee, 0xb292, 0x0, 0x1);
        gbc.writeMem(0x1ac5, { 0x8d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7ad7, gbc.sp());
        EXPECT(0x1ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0018
        gbc.setState(0xcd53, 0xa659, 0x350, 0x8578, 0xb17b, 0xe92b, 0x0, 0x0);
        gbc.writeMem(0xcd53, { 0x8d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa659, gbc.sp());
        EXPECT(0xcd54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcd53));
        // 8D 0019
        gbc.setState(0x317d, 0xebd7, 0x2370, 0xb6b3, 0x3d92, 0x5d51, 0x1, 0x0);
        gbc.writeMem(0x317d, { 0x8d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xebd7, gbc.sp());
        EXPECT(0x317e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 001A
        gbc.setState(0x2b87, 0x1444, 0x9e90, 0x2145, 0xa8a0, 0x3794, 0x0, 0x1);
        gbc.writeMem(0x2b87, { 0x8d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1444, gbc.sp());
        EXPECT(0x2b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 001B
        gbc.setState(0x117c, 0x1ad5, 0xd430, 0x3962, 0xb091, 0x3171, 0x0, 0x0);
        gbc.writeMem(0x117c, { 0x8d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1ad5, gbc.sp());
        EXPECT(0x117d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 001C
        gbc.setState(0x9f58, 0xaf27, 0x3040, 0xd0a7, 0x31f7, 0xad4, 0x1, 0x1);
        gbc.writeMem(0x9f58, { 0x8d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xaf27, gbc.sp());
        EXPECT(0x9f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9f58));
        // 8D 001D
        gbc.setState(0x240e, 0x2243, 0x39b0, 0x2a4a, 0xa1cd, 0x4778, 0x1, 0x1);
        gbc.writeMem(0x240e, { 0x8d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2243, gbc.sp());
        EXPECT(0x240f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 001E
        gbc.setState(0x19fb, 0x29ea, 0x5850, 0x29c7, 0x45da, 0x3080, 0x0, 0x0);
        gbc.writeMem(0x19fb, { 0x8d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x29ea, gbc.sp());
        EXPECT(0x19fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 001F
        gbc.setState(0xe39f, 0x997, 0x6400, 0xac91, 0xc2f0, 0xf622, 0x1, 0x1);
        gbc.writeMem(0xe39f, { 0x8d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x997, gbc.sp());
        EXPECT(0xe3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe39f));
        // 8D 0020
        gbc.setState(0xe9ba, 0x2f20, 0x2ed0, 0xdf38, 0xc922, 0x8a26, 0x0, 0x0);
        gbc.writeMem(0xe9ba, { 0x8d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2f20, gbc.sp());
        EXPECT(0xe9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe9ba));
        // 8D 0021
        gbc.setState(0x6dd, 0x1f26, 0xc2d0, 0xb9b1, 0x9146, 0x5ad0, 0x0, 0x0);
        gbc.writeMem(0x6dd, { 0x8d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1f26, gbc.sp());
        EXPECT(0x6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0022
        gbc.setState(0x9245, 0xb986, 0x1e70, 0x4223, 0x52f, 0xc8c1, 0x0, 0x0);
        gbc.writeMem(0x9245, { 0x8d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb986, gbc.sp());
        EXPECT(0x9246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9245));
        // 8D 0023
        gbc.setState(0x604e, 0xe144, 0x9620, 0x7de4, 0xdd95, 0x6c3e, 0x0, 0x0);
        gbc.writeMem(0x604e, { 0x8d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe144, gbc.sp());
        EXPECT(0x604f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0024
        gbc.setState(0x1d8e, 0x7254, 0x730, 0x913d, 0x8e6e, 0x527f, 0x1, 0x1);
        gbc.writeMem(0x1d8e, { 0x8d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7254, gbc.sp());
        EXPECT(0x1d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0026
        gbc.setState(0x8e4d, 0x6cad, 0x6f60, 0x683c, 0x5dae, 0xfcda, 0x0, 0x0);
        gbc.writeMem(0x8e4d, { 0x8d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6cad, gbc.sp());
        EXPECT(0x8e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8e4d));
        // 8D 0027
        gbc.setState(0x3754, 0x9a40, 0x2680, 0x1b34, 0xdcc8, 0xb80a, 0x1, 0x1);
        gbc.writeMem(0x3754, { 0x8d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9a40, gbc.sp());
        EXPECT(0x3755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0028
        gbc.setState(0x3ccb, 0x2498, 0x3030, 0x83b7, 0x58a3, 0xbfcf, 0x0, 0x0);
        gbc.writeMem(0x3ccb, { 0x8d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2498, gbc.sp());
        EXPECT(0x3ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0029
        gbc.setState(0xe7ea, 0x354b, 0x5800, 0xbc92, 0xe478, 0x173a, 0x0, 0x1);
        gbc.writeMem(0xe7ea, { 0x8d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x354b, gbc.sp());
        EXPECT(0xe7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe7ea));
        // 8D 002A
        gbc.setState(0xd606, 0x1bcf, 0x2220, 0x57f0, 0x66c1, 0x63b4, 0x0, 0x0);
        gbc.writeMem(0xd606, { 0x8d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1bcf, gbc.sp());
        EXPECT(0xd607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd606));
        // 8D 002B
        gbc.setState(0x85c7, 0xf7c, 0xbe90, 0x63d5, 0x500d, 0x42f9, 0x0, 0x0);
        gbc.writeMem(0x85c7, { 0x8d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf7c, gbc.sp());
        EXPECT(0x85c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x85c7));
        // 8D 002C
        gbc.setState(0xeedf, 0x45e2, 0x54a0, 0x872, 0x247f, 0xa085, 0x0, 0x0);
        gbc.writeMem(0xeedf, { 0x8d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x45e2, gbc.sp());
        EXPECT(0xeee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xeedf));
        // 8D 002D
        gbc.setState(0x17c2, 0x3675, 0x1f70, 0x8184, 0x3fd2, 0x1e86, 0x0, 0x0);
        gbc.writeMem(0x17c2, { 0x8d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3675, gbc.sp());
        EXPECT(0x17c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 002E
        gbc.setState(0x8439, 0xb282, 0x4300, 0xaa0f, 0xbfed, 0x8610, 0x1, 0x0);
        gbc.writeMem(0x8439, { 0x8d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb282, gbc.sp());
        EXPECT(0x843a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8439));
        // 8D 002F
        gbc.setState(0x66b2, 0xdd0e, 0x4470, 0x5f6f, 0x566c, 0x3903, 0x0, 0x1);
        gbc.writeMem(0x66b2, { 0x8d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdd0e, gbc.sp());
        EXPECT(0x66b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0030
        gbc.setState(0x1f2a, 0x8fd5, 0xac90, 0x90d0, 0xc9d8, 0xbdc8, 0x1, 0x0);
        gbc.writeMem(0x1f2a, { 0x8d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8fd5, gbc.sp());
        EXPECT(0x1f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0031
        gbc.setState(0x2a2d, 0xab70, 0x5380, 0xb315, 0xdd2c, 0x77a, 0x0, 0x0);
        gbc.writeMem(0x2a2d, { 0x8d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xab70, gbc.sp());
        EXPECT(0x2a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0032
        gbc.setState(0xac29, 0xebd8, 0x19a0, 0xad46, 0xfcb7, 0x753c, 0x0, 0x1);
        gbc.writeMem(0xac29, { 0x8d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xebd8, gbc.sp());
        EXPECT(0xac2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xac29));
        // 8D 0033
        gbc.setState(0x9894, 0x1748, 0xc630, 0xcbe1, 0xe7e, 0xab4f, 0x1, 0x0);
        gbc.writeMem(0x9894, { 0x8d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1748, gbc.sp());
        EXPECT(0x9895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9894));
        // 8D 0034
        gbc.setState(0x9d28, 0x8ab1, 0x6470, 0x4a35, 0x9805, 0x9dd8, 0x0, 0x0);
        gbc.writeMem(0x9d28, { 0x8d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8ab1, gbc.sp());
        EXPECT(0x9d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9d28));
        // 8D 0036
        gbc.setState(0x3abe, 0x5b11, 0x8350, 0x447, 0x2661, 0x40e9, 0x0, 0x0);
        gbc.writeMem(0x3abe, { 0x8d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5b11, gbc.sp());
        EXPECT(0x3abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0037
        gbc.setState(0x287b, 0x20a7, 0x3330, 0x8f7d, 0x6f7f, 0x6ee4, 0x1, 0x1);
        gbc.writeMem(0x287b, { 0x8d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x20a7, gbc.sp());
        EXPECT(0x287c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0039
        gbc.setState(0xdcb8, 0xd501, 0x79b0, 0x9757, 0x688c, 0xf2e0, 0x1, 0x1);
        gbc.writeMem(0xdcb8, { 0x8d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd501, gbc.sp());
        EXPECT(0xdcb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdcb8));
        // 8D 003A
        gbc.setState(0x9564, 0xf781, 0x1330, 0xfab1, 0x5b0e, 0x55ac, 0x0, 0x1);
        gbc.writeMem(0x9564, { 0x8d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf781, gbc.sp());
        EXPECT(0x9565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9564));
        // 8D 003B
        gbc.setState(0xdba4, 0x1028, 0x8820, 0x4474, 0x60b2, 0x224, 0x1, 0x0);
        gbc.writeMem(0xdba4, { 0x8d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1028, gbc.sp());
        EXPECT(0xdba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdba4));
        // 8D 003C
        gbc.setState(0x25dd, 0x2a98, 0x7fb0, 0x6e9c, 0x46de, 0xfad1, 0x0, 0x0);
        gbc.writeMem(0x25dd, { 0x8d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2a98, gbc.sp());
        EXPECT(0x25de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 003D
        gbc.setState(0x19a9, 0xbe4b, 0x74d0, 0xe1e2, 0x4f48, 0x77a5, 0x0, 0x1);
        gbc.writeMem(0x19a9, { 0x8d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbe4b, gbc.sp());
        EXPECT(0x19aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 003E
        gbc.setState(0x8257, 0xd28b, 0x2130, 0xc52b, 0xfc2a, 0xa616, 0x0, 0x1);
        gbc.writeMem(0x8257, { 0x8d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd28b, gbc.sp());
        EXPECT(0x8258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8257));
        // 8D 003F
        gbc.setState(0x4ca6, 0x53b6, 0x70f0, 0x7b6c, 0x1ef2, 0x5a01, 0x1, 0x1);
        gbc.writeMem(0x4ca6, { 0x8d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x53b6, gbc.sp());
        EXPECT(0x4ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0040
        gbc.setState(0xb4ba, 0x9485, 0xd6d0, 0xe433, 0x717b, 0x5101, 0x0, 0x1);
        gbc.writeMem(0xb4ba, { 0x8d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9485, gbc.sp());
        EXPECT(0xb4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb4ba));
        // 8D 0041
        gbc.setState(0xd9c4, 0x2366, 0x2330, 0x9e2d, 0x2b98, 0x6045, 0x0, 0x0);
        gbc.writeMem(0xd9c4, { 0x8d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2366, gbc.sp());
        EXPECT(0xd9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd9c4));
        // 8D 0043
        gbc.setState(0x7736, 0xb7c7, 0xf150, 0x3fc8, 0xc74d, 0xfa72, 0x0, 0x0);
        gbc.writeMem(0x7736, { 0x8d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb7c7, gbc.sp());
        EXPECT(0x7737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0044
        gbc.setState(0xac56, 0x9f5f, 0xff50, 0xd05e, 0x7bfb, 0x9c6f, 0x1, 0x1);
        gbc.writeMem(0xac56, { 0x8d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9f5f, gbc.sp());
        EXPECT(0xac57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xac56));
        // 8D 0045
        gbc.setState(0x2a7b, 0x9eb9, 0x1a10, 0x1cf8, 0x8a92, 0x5577, 0x1, 0x1);
        gbc.writeMem(0x2a7b, { 0x8d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9eb9, gbc.sp());
        EXPECT(0x2a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0046
        gbc.setState(0x86a5, 0x35fc, 0x6430, 0x4ba0, 0xa884, 0x293a, 0x1, 0x0);
        gbc.writeMem(0x86a5, { 0x8d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x35fc, gbc.sp());
        EXPECT(0x86a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x86a5));
        // 8D 0047
        gbc.setState(0xe0f8, 0x989a, 0x9510, 0x2d48, 0xbc88, 0x987a, 0x1, 0x0);
        gbc.writeMem(0xe0f8, { 0x8d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x989a, gbc.sp());
        EXPECT(0xe0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe0f8));
        // 8D 0048
        gbc.setState(0xb13c, 0x84f9, 0x7b10, 0xf43c, 0x4bdf, 0xab60, 0x0, 0x0);
        gbc.writeMem(0xb13c, { 0x8d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x84f9, gbc.sp());
        EXPECT(0xb13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb13c));
        // 8D 0049
        gbc.setState(0xafe8, 0xf3c0, 0x6560, 0x33ea, 0xe0d5, 0x48e3, 0x1, 0x1);
        gbc.writeMem(0xafe8, { 0x8d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf3c0, gbc.sp());
        EXPECT(0xafe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xafe8));
        // 8D 004A
        gbc.setState(0x14e3, 0xc147, 0x1e90, 0xf20f, 0x1a8b, 0xabd7, 0x1, 0x0);
        gbc.writeMem(0x14e3, { 0x8d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc147, gbc.sp());
        EXPECT(0x14e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 004B
        gbc.setState(0x86cf, 0x142a, 0x9470, 0x4d7a, 0x9f6a, 0xc3de, 0x0, 0x1);
        gbc.writeMem(0x86cf, { 0x8d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x142a, gbc.sp());
        EXPECT(0x86d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x86cf));
        // 8D 004C
        gbc.setState(0x245, 0xf7c0, 0x67c0, 0x8d9b, 0x1981, 0x3999, 0x1, 0x1);
        gbc.writeMem(0x245, { 0x8d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf7c0, gbc.sp());
        EXPECT(0x246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 004D
        gbc.setState(0xb4a8, 0xbcc4, 0x4660, 0x7a88, 0x1b91, 0x1ef4, 0x0, 0x1);
        gbc.writeMem(0xb4a8, { 0x8d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbcc4, gbc.sp());
        EXPECT(0xb4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb4a8));
        // 8D 004E
        gbc.setState(0x3df8, 0xcb44, 0x6210, 0x9c15, 0x30f5, 0x7dd5, 0x1, 0x1);
        gbc.writeMem(0x3df8, { 0x8d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcb44, gbc.sp());
        EXPECT(0x3df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 004F
        gbc.setState(0xb7ef, 0x5ffa, 0xa3a0, 0x5aa9, 0x7580, 0x5ca1, 0x1, 0x1);
        gbc.writeMem(0xb7ef, { 0x8d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5ffa, gbc.sp());
        EXPECT(0xb7f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb7ef));
        // 8D 0050
        gbc.setState(0x5cf8, 0x650e, 0x2940, 0x7aa2, 0x598b, 0x18cf, 0x0, 0x1);
        gbc.writeMem(0x5cf8, { 0x8d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x650e, gbc.sp());
        EXPECT(0x5cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0051
        gbc.setState(0xdeac, 0x133b, 0xab80, 0xc60b, 0xd9a9, 0x13a0, 0x0, 0x1);
        gbc.writeMem(0xdeac, { 0x8d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x133b, gbc.sp());
        EXPECT(0xdead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdeac));
        // 8D 0052
        gbc.setState(0xcd98, 0xf46e, 0xcf30, 0x3772, 0xe3ca, 0xdbbb, 0x1, 0x0);
        gbc.writeMem(0xcd98, { 0x8d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf46e, gbc.sp());
        EXPECT(0xcd99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcd98));
        // 8D 0053
        gbc.setState(0x2339, 0x8b07, 0xd090, 0xbc73, 0xee96, 0x71b9, 0x0, 0x1);
        gbc.writeMem(0x2339, { 0x8d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8b07, gbc.sp());
        EXPECT(0x233a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0054
        gbc.setState(0xea89, 0x6108, 0x4150, 0xbd5b, 0xdebe, 0x1191, 0x1, 0x0);
        gbc.writeMem(0xea89, { 0x8d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6108, gbc.sp());
        EXPECT(0xea8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xea89));
        // 8D 0055
        gbc.setState(0x7143, 0x15c7, 0x4510, 0x52fb, 0x957e, 0xecf8, 0x1, 0x0);
        gbc.writeMem(0x7143, { 0x8d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x15c7, gbc.sp());
        EXPECT(0x7144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0056
        gbc.setState(0xead4, 0x2686, 0x6230, 0x76cf, 0x972, 0x44fd, 0x1, 0x0);
        gbc.writeMem(0xead4, { 0x8d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2686, gbc.sp());
        EXPECT(0xead5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xead4));
        // 8D 0057
        gbc.setState(0xdea6, 0x85a4, 0x1ce0, 0x368b, 0xc3a5, 0xc143, 0x1, 0x0);
        gbc.writeMem(0xdea6, { 0x8d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x85a4, gbc.sp());
        EXPECT(0xdea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdea6));
        // 8D 0058
        gbc.setState(0xe4a6, 0x8fa2, 0x7ec0, 0x34d, 0x4dd7, 0x696e, 0x1, 0x0);
        gbc.writeMem(0xe4a6, { 0x8d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8fa2, gbc.sp());
        EXPECT(0xe4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe4a6));
        // 8D 0059
        gbc.setState(0xd0b0, 0x5e72, 0x5fc0, 0xfbc0, 0xae45, 0x2b67, 0x1, 0x0);
        gbc.writeMem(0xd0b0, { 0x8d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5e72, gbc.sp());
        EXPECT(0xd0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd0b0));
        // 8D 005A
        gbc.setState(0x2437, 0xecff, 0x66b0, 0x7546, 0x6a8b, 0xc9d4, 0x1, 0x0);
        gbc.writeMem(0x2437, { 0x8d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xecff, gbc.sp());
        EXPECT(0x2438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 005B
        gbc.setState(0x9f55, 0x464c, 0x75b0, 0x57da, 0x57e5, 0x396f, 0x0, 0x0);
        gbc.writeMem(0x9f55, { 0x8d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x464c, gbc.sp());
        EXPECT(0x9f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9f55));
        // 8D 005C
        gbc.setState(0x2dc8, 0x89e9, 0x29b0, 0x3147, 0xa34b, 0x7f0a, 0x1, 0x0);
        gbc.writeMem(0x2dc8, { 0x8d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x89e9, gbc.sp());
        EXPECT(0x2dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 005D
        gbc.setState(0x6aaf, 0x8547, 0xd1c0, 0x12ac, 0x9672, 0x76bd, 0x1, 0x0);
        gbc.writeMem(0x6aaf, { 0x8d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8547, gbc.sp());
        EXPECT(0x6ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 005E
        gbc.setState(0xe18a, 0xfed6, 0x3440, 0x3b90, 0xa045, 0x640a, 0x1, 0x1);
        gbc.writeMem(0xe18a, { 0x8d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfed6, gbc.sp());
        EXPECT(0xe18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe18a));
        // 8D 005F
        gbc.setState(0xe279, 0x701, 0x45e0, 0x32, 0x9d27, 0x9dd7, 0x0, 0x0);
        gbc.writeMem(0xe279, { 0x8d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x701, gbc.sp());
        EXPECT(0xe27a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe279));
        // 8D 0060
        gbc.setState(0x3e64, 0x9021, 0xce80, 0xd9e4, 0xf194, 0xd84e, 0x0, 0x1);
        gbc.writeMem(0x3e64, { 0x8d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9021, gbc.sp());
        EXPECT(0x3e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0061
        gbc.setState(0x87c8, 0x67c2, 0xbb40, 0xbce2, 0x3e9, 0xaeb9, 0x0, 0x1);
        gbc.writeMem(0x87c8, { 0x8d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x67c2, gbc.sp());
        EXPECT(0x87c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x87c8));
        // 8D 0062
        gbc.setState(0x14a3, 0x45bc, 0xbab0, 0x4b03, 0x559, 0x9217, 0x0, 0x0);
        gbc.writeMem(0x14a3, { 0x8d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x45bc, gbc.sp());
        EXPECT(0x14a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0063
        gbc.setState(0x56a0, 0xa4d3, 0xa490, 0xb127, 0x3088, 0x7839, 0x1, 0x1);
        gbc.writeMem(0x56a0, { 0x8d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa4d3, gbc.sp());
        EXPECT(0x56a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0064
        gbc.setState(0xc0d2, 0xae37, 0xe370, 0xfe9a, 0x4b13, 0xe003, 0x0, 0x0);
        gbc.writeMem(0xc0d2, { 0x8d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xae37, gbc.sp());
        EXPECT(0xc0d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc0d2));
        // 8D 0065
        gbc.setState(0x316f, 0x721f, 0xe3c0, 0xc2cf, 0x300e, 0x1e6f, 0x0, 0x0);
        gbc.writeMem(0x316f, { 0x8d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x721f, gbc.sp());
        EXPECT(0x3170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0066
        gbc.setState(0x9b77, 0xb800, 0x6ed0, 0xbdca, 0x7002, 0xc7e0, 0x0, 0x0);
        gbc.writeMem(0x9b77, { 0x8d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb800, gbc.sp());
        EXPECT(0x9b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9b77));
        // 8D 0067
        gbc.setState(0xb8d0, 0xdaa1, 0x9450, 0x976a, 0x5c2a, 0x1704, 0x0, 0x0);
        gbc.writeMem(0xb8d0, { 0x8d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdaa1, gbc.sp());
        EXPECT(0xb8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb8d0));
        // 8D 0069
        gbc.setState(0x91d0, 0x2377, 0xd6c0, 0xb67b, 0x6baf, 0xdcd5, 0x0, 0x0);
        gbc.writeMem(0x91d0, { 0x8d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2377, gbc.sp());
        EXPECT(0x91d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x91d0));
        // 8D 006A
        gbc.setState(0xefda, 0xf0fc, 0x3f80, 0x1acd, 0xa80, 0x3bc1, 0x1, 0x1);
        gbc.writeMem(0xefda, { 0x8d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf0fc, gbc.sp());
        EXPECT(0xefdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xefda));
        // 8D 006B
        gbc.setState(0x3834, 0xd773, 0xab20, 0x3845, 0xa6e3, 0x800a, 0x0, 0x0);
        gbc.writeMem(0x3834, { 0x8d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd773, gbc.sp());
        EXPECT(0x3835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 006C
        gbc.setState(0x1b2b, 0xab37, 0x74d0, 0x241e, 0x3428, 0xae1f, 0x0, 0x0);
        gbc.writeMem(0x1b2b, { 0x8d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xab37, gbc.sp());
        EXPECT(0x1b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 006D
        gbc.setState(0x56ef, 0xcc97, 0x6db0, 0xbcbf, 0xad47, 0xb3c5, 0x1, 0x0);
        gbc.writeMem(0x56ef, { 0x8d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcc97, gbc.sp());
        EXPECT(0x56f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 006E
        gbc.setState(0x4471, 0x2bc9, 0xd870, 0x2b6f, 0x2a5c, 0x2b71, 0x0, 0x0);
        gbc.writeMem(0x4471, { 0x8d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2bc9, gbc.sp());
        EXPECT(0x4472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 006F
        gbc.setState(0xa17b, 0x38cb, 0x4050, 0xa1cb, 0x717b, 0x3472, 0x1, 0x0);
        gbc.writeMem(0xa17b, { 0x8d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x38cb, gbc.sp());
        EXPECT(0xa17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa17b));
        // 8D 0070
        gbc.setState(0x12b1, 0xb414, 0xe230, 0xb6d2, 0x99ff, 0xa2a0, 0x0, 0x1);
        gbc.writeMem(0x12b1, { 0x8d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb414, gbc.sp());
        EXPECT(0x12b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0071
        gbc.setState(0xd8b8, 0xba56, 0xa0d0, 0xf1ff, 0x23ce, 0x2a19, 0x1, 0x0);
        gbc.writeMem(0xd8b8, { 0x8d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xba56, gbc.sp());
        EXPECT(0xd8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd8b8));
        // 8D 0072
        gbc.setState(0x83a4, 0x4b34, 0xb560, 0xbe54, 0xd45c, 0xa072, 0x0, 0x0);
        gbc.writeMem(0x83a4, { 0x8d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4b34, gbc.sp());
        EXPECT(0x83a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x83a4));
        // 8D 0073
        gbc.setState(0x88b1, 0x290d, 0xd8b0, 0xe939, 0x16e, 0xc5ce, 0x0, 0x1);
        gbc.writeMem(0x88b1, { 0x8d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x290d, gbc.sp());
        EXPECT(0x88b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x88b1));
        // 8D 0074
        gbc.setState(0xc9fb, 0x7cc4, 0xe70, 0x382, 0x34d1, 0x7680, 0x0, 0x1);
        gbc.writeMem(0xc9fb, { 0x8d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7cc4, gbc.sp());
        EXPECT(0xc9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc9fb));
        // 8D 0075
        gbc.setState(0xe0d3, 0x804e, 0x5740, 0x61d4, 0xd6f6, 0x5ea0, 0x0, 0x0);
        gbc.writeMem(0xe0d3, { 0x8d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x804e, gbc.sp());
        EXPECT(0xe0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe0d3));
        // 8D 0076
        gbc.setState(0x4b6b, 0x6d58, 0xe8c0, 0xa73d, 0x25d0, 0x6e8f, 0x0, 0x0);
        gbc.writeMem(0x4b6b, { 0x8d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6d58, gbc.sp());
        EXPECT(0x4b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0077
        gbc.setState(0x2821, 0x40f1, 0xbd0, 0xff11, 0x17f8, 0xcb03, 0x1, 0x1);
        gbc.writeMem(0x2821, { 0x8d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x40f1, gbc.sp());
        EXPECT(0x2822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0078
        gbc.setState(0x4f1e, 0x16a4, 0x7430, 0x859f, 0xa774, 0xb836, 0x1, 0x1);
        gbc.writeMem(0x4f1e, { 0x8d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x16a4, gbc.sp());
        EXPECT(0x4f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0079
        gbc.setState(0x9935, 0x4d25, 0x36c0, 0x99f5, 0x9008, 0x773b, 0x0, 0x0);
        gbc.writeMem(0x9935, { 0x8d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4d25, gbc.sp());
        EXPECT(0x9936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9935));
        // 8D 007A
        gbc.setState(0x4604, 0xa172, 0x330, 0x3ddc, 0xc312, 0xd4da, 0x1, 0x0);
        gbc.writeMem(0x4604, { 0x8d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa172, gbc.sp());
        EXPECT(0x4605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 007B
        gbc.setState(0xa4da, 0x752f, 0xda00, 0xf803, 0xd176, 0x51d5, 0x0, 0x0);
        gbc.writeMem(0xa4da, { 0x8d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x752f, gbc.sp());
        EXPECT(0xa4db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa4da));
        // 8D 007C
        gbc.setState(0x9c41, 0xdb01, 0xd4e0, 0x3451, 0xe7ad, 0x11b1, 0x0, 0x1);
        gbc.writeMem(0x9c41, { 0x8d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdb01, gbc.sp());
        EXPECT(0x9c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9c41));
        // 8D 007D
        gbc.setState(0x3549, 0x508a, 0x2360, 0xcf59, 0x6b4c, 0x4765, 0x1, 0x1);
        gbc.writeMem(0x3549, { 0x8d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x508a, gbc.sp());
        EXPECT(0x354a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 007E
        gbc.setState(0x586f, 0x5399, 0x18c0, 0xfc74, 0x9f5b, 0x3d78, 0x0, 0x1);
        gbc.writeMem(0x586f, { 0x8d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5399, gbc.sp());
        EXPECT(0x5870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 007F
        gbc.setState(0x851f, 0xce41, 0xcfc0, 0x32fc, 0x77c2, 0xf98d, 0x1, 0x1);
        gbc.writeMem(0x851f, { 0x8d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xce41, gbc.sp());
        EXPECT(0x8520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x851f));
        // 8D 0080
        gbc.setState(0x3091, 0x2026, 0x9050, 0x757, 0x9a20, 0x3ab2, 0x0, 0x1);
        gbc.writeMem(0x3091, { 0x8d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2026, gbc.sp());
        EXPECT(0x3092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0081
        gbc.setState(0xcdd6, 0xdf58, 0x3dc0, 0xbc0a, 0x1323, 0xe4d3, 0x1, 0x1);
        gbc.writeMem(0xcdd6, { 0x8d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdf58, gbc.sp());
        EXPECT(0xcdd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcdd6));
        // 8D 0082
        gbc.setState(0x8a5c, 0xab78, 0x330, 0x4552, 0xf1c4, 0x88a3, 0x0, 0x0);
        gbc.writeMem(0x8a5c, { 0x8d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xab78, gbc.sp());
        EXPECT(0x8a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8a5c));
        // 8D 0083
        gbc.setState(0x4746, 0x89de, 0x9c0, 0x979a, 0xd59c, 0xff25, 0x1, 0x0);
        gbc.writeMem(0x4746, { 0x8d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x89de, gbc.sp());
        EXPECT(0x4747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0084
        gbc.setState(0x814f, 0xc536, 0x4b0, 0xfd94, 0x3948, 0xc7d5, 0x0, 0x0);
        gbc.writeMem(0x814f, { 0x8d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc536, gbc.sp());
        EXPECT(0x8150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x814f));
        // 8D 0085
        gbc.setState(0xa8aa, 0xd14, 0x20b0, 0x29fd, 0x4ab7, 0x4eb1, 0x0, 0x0);
        gbc.writeMem(0xa8aa, { 0x8d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd14, gbc.sp());
        EXPECT(0xa8ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa8aa));
        // 8D 0086
        gbc.setState(0xafd7, 0x19e4, 0x5090, 0x9456, 0xa32c, 0xe5aa, 0x0, 0x0);
        gbc.writeMem(0xafd7, { 0x8d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x19e4, gbc.sp());
        EXPECT(0xafd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xafd7));
        // 8D 0087
        gbc.setState(0xf98, 0x3828, 0x8b60, 0x1cf9, 0x69c2, 0x7978, 0x1, 0x0);
        gbc.writeMem(0xf98, { 0x8d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3828, gbc.sp());
        EXPECT(0xf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0088
        gbc.setState(0x5069, 0xce33, 0x2000, 0x453d, 0xad85, 0xa525, 0x0, 0x1);
        gbc.writeMem(0x5069, { 0x8d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xce33, gbc.sp());
        EXPECT(0x506a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0089
        gbc.setState(0xe345, 0xb0bc, 0x5b50, 0x69d, 0xaa87, 0xf70, 0x0, 0x1);
        gbc.writeMem(0xe345, { 0x8d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb0bc, gbc.sp());
        EXPECT(0xe346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe345));
        // 8D 008A
        gbc.setState(0x56a2, 0xc039, 0x1a50, 0x74cc, 0xc0e0, 0x45f1, 0x0, 0x1);
        gbc.writeMem(0x56a2, { 0x8d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc039, gbc.sp());
        EXPECT(0x56a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 008B
        gbc.setState(0xd6f9, 0xf4f0, 0xf2c0, 0x50e0, 0x9994, 0x6b36, 0x0, 0x1);
        gbc.writeMem(0xd6f9, { 0x8d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf4f0, gbc.sp());
        EXPECT(0xd6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd6f9));
        // 8D 008C
        gbc.setState(0x6823, 0x8cbf, 0x3f0, 0x3c04, 0xa2f1, 0x2fd2, 0x1, 0x1);
        gbc.writeMem(0x6823, { 0x8d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8cbf, gbc.sp());
        EXPECT(0x6824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 008D
        gbc.setState(0x1e08, 0x6c87, 0xede0, 0x97d5, 0x43bb, 0xfe0c, 0x0, 0x1);
        gbc.writeMem(0x1e08, { 0x8d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6c87, gbc.sp());
        EXPECT(0x1e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 008E
        gbc.setState(0x2336, 0x1e4f, 0x1ad0, 0x47fb, 0xd82d, 0xfd52, 0x1, 0x0);
        gbc.writeMem(0x2336, { 0x8d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1e4f, gbc.sp());
        EXPECT(0x2337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 008F
        gbc.setState(0xedfa, 0x9b8d, 0x9e0, 0x4e02, 0xda5d, 0x8209, 0x1, 0x1);
        gbc.writeMem(0xedfa, { 0x8d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9b8d, gbc.sp());
        EXPECT(0xedfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xedfa));
        // 8D 0090
        gbc.setState(0x388c, 0xa9cf, 0xa350, 0x8808, 0x8f45, 0x2d2d, 0x1, 0x1);
        gbc.writeMem(0x388c, { 0x8d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa9cf, gbc.sp());
        EXPECT(0x388d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0091
        gbc.setState(0x42b7, 0x45a8, 0x5780, 0x47b4, 0x4ed7, 0x4b9a, 0x1, 0x1);
        gbc.writeMem(0x42b7, { 0x8d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x45a8, gbc.sp());
        EXPECT(0x42b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0092
        gbc.setState(0x5f09, 0x176c, 0xd090, 0x648f, 0x8154, 0xa3f2, 0x1, 0x0);
        gbc.writeMem(0x5f09, { 0x8d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x176c, gbc.sp());
        EXPECT(0x5f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0094
        gbc.setState(0x8af2, 0x1396, 0x78f0, 0x9d44, 0x3658, 0x876f, 0x1, 0x0);
        gbc.writeMem(0x8af2, { 0x8d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0x8af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8af2));
        // 8D 0095
        gbc.setState(0x8058, 0xbd55, 0x1cd0, 0x12ff, 0x350b, 0x28f6, 0x1, 0x0);
        gbc.writeMem(0x8058, { 0x8d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbd55, gbc.sp());
        EXPECT(0x8059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8058));
        // 8D 0096
        gbc.setState(0x4b00, 0x63e6, 0x2f80, 0xca00, 0x281c, 0x5a8f, 0x1, 0x0);
        gbc.writeMem(0x4b00, { 0x8d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x63e6, gbc.sp());
        EXPECT(0x4b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0097
        gbc.setState(0xab80, 0x898c, 0x4a50, 0xc9c, 0x58d5, 0x962e, 0x0, 0x0);
        gbc.writeMem(0xab80, { 0x8d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x898c, gbc.sp());
        EXPECT(0xab81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xab80));
        // 8D 009A
        gbc.setState(0x403b, 0xfb02, 0x1b70, 0xab53, 0x26d7, 0x97d9, 0x1, 0x1);
        gbc.writeMem(0x403b, { 0x8d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfb02, gbc.sp());
        EXPECT(0x403c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 009B
        gbc.setState(0x39e8, 0xd97d, 0x6ae0, 0x793b, 0x9304, 0x4543, 0x0, 0x1);
        gbc.writeMem(0x39e8, { 0x8d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd97d, gbc.sp());
        EXPECT(0x39e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 009C
        gbc.setState(0x1379, 0x260b, 0x1390, 0x34ed, 0xbf70, 0xb573, 0x1, 0x0);
        gbc.writeMem(0x1379, { 0x8d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x260b, gbc.sp());
        EXPECT(0x137a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 009D
        gbc.setState(0x936c, 0x8414, 0x9800, 0x33da, 0x168b, 0x7cb0, 0x1, 0x1);
        gbc.writeMem(0x936c, { 0x8d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8414, gbc.sp());
        EXPECT(0x936d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x936c));
        // 8D 009E
        gbc.setState(0x879f, 0x2086, 0x4e30, 0x7de6, 0x5d53, 0x973, 0x1, 0x0);
        gbc.writeMem(0x879f, { 0x8d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2086, gbc.sp());
        EXPECT(0x87a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x879f));
        // 8D 009F
        gbc.setState(0x5fb3, 0x72bc, 0xdc0, 0xa145, 0xc500, 0xe2ef, 0x0, 0x1);
        gbc.writeMem(0x5fb3, { 0x8d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x72bc, gbc.sp());
        EXPECT(0x5fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00A0
        gbc.setState(0x3c9c, 0x6f16, 0xd3c0, 0x46, 0x1cae, 0x7ed4, 0x0, 0x0);
        gbc.writeMem(0x3c9c, { 0x8d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6f16, gbc.sp());
        EXPECT(0x3c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00A1
        gbc.setState(0x644d, 0x9089, 0x1580, 0xf44a, 0xc6c8, 0x62b7, 0x0, 0x0);
        gbc.writeMem(0x644d, { 0x8d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9089, gbc.sp());
        EXPECT(0x644e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00A2
        gbc.setState(0x27c6, 0xa22b, 0xf170, 0xafeb, 0x8f9d, 0xcafe, 0x0, 0x1);
        gbc.writeMem(0x27c6, { 0x8d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa22b, gbc.sp());
        EXPECT(0x27c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00A3
        gbc.setState(0x965e, 0xdc35, 0x6fd0, 0xac29, 0xda53, 0xb700, 0x0, 0x1);
        gbc.writeMem(0x965e, { 0x8d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdc35, gbc.sp());
        EXPECT(0x965f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x965e));
        // 8D 00A4
        gbc.setState(0xa530, 0x13c4, 0xc570, 0xfba7, 0xce24, 0xab25, 0x1, 0x1);
        gbc.writeMem(0xa530, { 0x8d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x13c4, gbc.sp());
        EXPECT(0xa531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa530));
        // 8D 00A5
        gbc.setState(0x9399, 0x4bf0, 0x4c00, 0x988d, 0x8b89, 0x451e, 0x0, 0x0);
        gbc.writeMem(0x9399, { 0x8d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4bf0, gbc.sp());
        EXPECT(0x939a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9399));
        // 8D 00A6
        gbc.setState(0x325d, 0x4a8, 0x7950, 0x7538, 0x9928, 0xdc09, 0x1, 0x1);
        gbc.writeMem(0x325d, { 0x8d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4a8, gbc.sp());
        EXPECT(0x325e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00A7
        gbc.setState(0xa9, 0x817d, 0xc40, 0x9917, 0x7bc6, 0xf464, 0x1, 0x1);
        gbc.writeMem(0xa9, { 0x8d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x817d, gbc.sp());
        EXPECT(0xaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00A8
        gbc.setState(0xc53f, 0x88f0, 0x8db0, 0xf687, 0x34b7, 0x4001, 0x0, 0x1);
        gbc.writeMem(0xc53f, { 0x8d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x88f0, gbc.sp());
        EXPECT(0xc540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc53f));
        // 8D 00A9
        gbc.setState(0x59ea, 0x16d2, 0x33e0, 0x358, 0x270a, 0xa44f, 0x1, 0x1);
        gbc.writeMem(0x59ea, { 0x8d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x16d2, gbc.sp());
        EXPECT(0x59eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00AA
        gbc.setState(0x9bc8, 0x32c7, 0xa200, 0x17f, 0x6e6d, 0x674a, 0x1, 0x1);
        gbc.writeMem(0x9bc8, { 0x8d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x32c7, gbc.sp());
        EXPECT(0x9bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9bc8));
        // 8D 00AB
        gbc.setState(0x8c25, 0x91b4, 0xf160, 0x7e73, 0x8214, 0x395, 0x0, 0x1);
        gbc.writeMem(0x8c25, { 0x8d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x91b4, gbc.sp());
        EXPECT(0x8c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8c25));
        // 8D 00AC
        gbc.setState(0x2926, 0x522f, 0xb8e0, 0xee0, 0x3d16, 0x72eb, 0x1, 0x0);
        gbc.writeMem(0x2926, { 0x8d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x522f, gbc.sp());
        EXPECT(0x2927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00AD
        gbc.setState(0x3bf3, 0x207e, 0xf720, 0x8827, 0x8cf, 0x3dcf, 0x1, 0x1);
        gbc.writeMem(0x3bf3, { 0x8d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x207e, gbc.sp());
        EXPECT(0x3bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00AE
        gbc.setState(0x6798, 0x600, 0xd7e0, 0xb8c, 0x7611, 0xa1b0, 0x1, 0x1);
        gbc.writeMem(0x6798, { 0x8d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x600, gbc.sp());
        EXPECT(0x6799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00AF
        gbc.setState(0x88e4, 0x6c71, 0xcac0, 0xd8dd, 0x35a0, 0x561d, 0x0, 0x1);
        gbc.writeMem(0x88e4, { 0x8d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6c71, gbc.sp());
        EXPECT(0x88e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x88e4));
        // 8D 00B0
        gbc.setState(0x26f7, 0x34a1, 0x9590, 0x4105, 0x8631, 0x64be, 0x0, 0x1);
        gbc.writeMem(0x26f7, { 0x8d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x34a1, gbc.sp());
        EXPECT(0x26f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00B2
        gbc.setState(0x47fd, 0xf7a8, 0x35d0, 0xb1c1, 0xcca8, 0x37e7, 0x1, 0x0);
        gbc.writeMem(0x47fd, { 0x8d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf7a8, gbc.sp());
        EXPECT(0x47fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00B3
        gbc.setState(0x6f1a, 0xa9f0, 0xad70, 0x47f5, 0xa397, 0x91d8, 0x1, 0x1);
        gbc.writeMem(0x6f1a, { 0x8d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa9f0, gbc.sp());
        EXPECT(0x6f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00B4
        gbc.setState(0x38d6, 0xab55, 0xdb00, 0xaffc, 0x85f1, 0x6bd0, 0x0, 0x1);
        gbc.writeMem(0x38d6, { 0x8d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xab55, gbc.sp());
        EXPECT(0x38d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00B5
        gbc.setState(0xd062, 0xbbe9, 0x1bf0, 0x491c, 0x9fe2, 0x9a22, 0x0, 0x1);
        gbc.writeMem(0xd062, { 0x8d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbbe9, gbc.sp());
        EXPECT(0xd063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd062));
        // 8D 00B6
        gbc.setState(0x51a3, 0x1b3a, 0xf5d0, 0xb0db, 0x23a1, 0x66ba, 0x0, 0x1);
        gbc.writeMem(0x51a3, { 0x8d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1b3a, gbc.sp());
        EXPECT(0x51a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00B7
        gbc.setState(0x1d36, 0xb036, 0x9610, 0x3363, 0x86d0, 0x5447, 0x1, 0x1);
        gbc.writeMem(0x1d36, { 0x8d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb036, gbc.sp());
        EXPECT(0x1d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00B8
        gbc.setState(0x1d14, 0xf950, 0x8550, 0x572d, 0xbd4c, 0x78e, 0x0, 0x0);
        gbc.writeMem(0x1d14, { 0x8d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf950, gbc.sp());
        EXPECT(0x1d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00B9
        gbc.setState(0xeb0, 0x1bbc, 0xcc40, 0xda9e, 0x8175, 0xf225, 0x0, 0x0);
        gbc.writeMem(0xeb0, { 0x8d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1bbc, gbc.sp());
        EXPECT(0xeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00BA
        gbc.setState(0x6b0f, 0x583d, 0x69b0, 0x454d, 0x1542, 0x7663, 0x0, 0x0);
        gbc.writeMem(0x6b0f, { 0x8d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x583d, gbc.sp());
        EXPECT(0x6b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00BB
        gbc.setState(0x139, 0xf229, 0x4370, 0x2372, 0x8dda, 0x7ad5, 0x1, 0x1);
        gbc.writeMem(0x139, { 0x8d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf229, gbc.sp());
        EXPECT(0x13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00BC
        gbc.setState(0x1ea3, 0x2a3b, 0x40b0, 0x4c82, 0xe5cc, 0x5fbb, 0x0, 0x0);
        gbc.writeMem(0x1ea3, { 0x8d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2a3b, gbc.sp());
        EXPECT(0x1ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00BD
        gbc.setState(0x6aa0, 0x7e3c, 0x91b0, 0x5b8b, 0x3cc4, 0xb97d, 0x1, 0x1);
        gbc.writeMem(0x6aa0, { 0x8d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7e3c, gbc.sp());
        EXPECT(0x6aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00BE
        gbc.setState(0x331d, 0xc165, 0xc270, 0x783, 0x9c17, 0x81e, 0x1, 0x0);
        gbc.writeMem(0x331d, { 0x8d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc165, gbc.sp());
        EXPECT(0x331e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00BF
        gbc.setState(0xec20, 0xc008, 0x3860, 0xa354, 0x29a, 0x6028, 0x1, 0x1);
        gbc.writeMem(0xec20, { 0x8d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc008, gbc.sp());
        EXPECT(0xec21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xec20));
        // 8D 00C0
        gbc.setState(0x1fcc, 0x9186, 0xa130, 0x6a8e, 0x7476, 0x636f, 0x1, 0x0);
        gbc.writeMem(0x1fcc, { 0x8d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9186, gbc.sp());
        EXPECT(0x1fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00C1
        gbc.setState(0x3d54, 0x9c00, 0x9980, 0x99c7, 0xf0c2, 0x9f50, 0x1, 0x1);
        gbc.writeMem(0x3d54, { 0x8d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9c00, gbc.sp());
        EXPECT(0x3d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00C2
        gbc.setState(0xaec4, 0x1e9d, 0xa4a0, 0x1ab9, 0xe49f, 0xd414, 0x0, 0x0);
        gbc.writeMem(0xaec4, { 0x8d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1e9d, gbc.sp());
        EXPECT(0xaec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xaec4));
        // 8D 00C3
        gbc.setState(0x5901, 0xf0a1, 0xcf80, 0x9197, 0x879c, 0x87c9, 0x0, 0x1);
        gbc.writeMem(0x5901, { 0x8d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf0a1, gbc.sp());
        EXPECT(0x5902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00C4
        gbc.setState(0x5761, 0x3563, 0x13c0, 0x56fd, 0xd140, 0x3de6, 0x1, 0x1);
        gbc.writeMem(0x5761, { 0x8d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3563, gbc.sp());
        EXPECT(0x5762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00C5
        gbc.setState(0xb6e5, 0xea5, 0xa3c0, 0xb042, 0x31f1, 0xba6b, 0x0, 0x0);
        gbc.writeMem(0xb6e5, { 0x8d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xea5, gbc.sp());
        EXPECT(0xb6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb6e5));
        // 8D 00C6
        gbc.setState(0x487e, 0xba25, 0xeb90, 0x381a, 0x74d0, 0xeb8f, 0x1, 0x1);
        gbc.writeMem(0x487e, { 0x8d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xba25, gbc.sp());
        EXPECT(0x487f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00C7
        gbc.setState(0xeeaa, 0x8216, 0xaed0, 0x14d8, 0xfe2b, 0xb395, 0x0, 0x1);
        gbc.writeMem(0xeeaa, { 0x8d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8216, gbc.sp());
        EXPECT(0xeeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xeeaa));
        // 8D 00C8
        gbc.setState(0x7408, 0xe70a, 0x6620, 0x7f42, 0xfa7f, 0xdac6, 0x0, 0x0);
        gbc.writeMem(0x7408, { 0x8d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe70a, gbc.sp());
        EXPECT(0x7409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00C9
        gbc.setState(0x845, 0x64c3, 0xad20, 0x6ea8, 0x23a1, 0xcca9, 0x1, 0x0);
        gbc.writeMem(0x845, { 0x8d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x64c3, gbc.sp());
        EXPECT(0x846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00CA
        gbc.setState(0x1c51, 0x689a, 0x8dd0, 0x3d0c, 0xd82f, 0x851c, 0x1, 0x0);
        gbc.writeMem(0x1c51, { 0x8d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x689a, gbc.sp());
        EXPECT(0x1c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00CB
        gbc.setState(0x5a9e, 0x924a, 0x3910, 0x35c6, 0x6fd6, 0xf90c, 0x0, 0x0);
        gbc.writeMem(0x5a9e, { 0x8d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x924a, gbc.sp());
        EXPECT(0x5a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00CC
        gbc.setState(0x8523, 0x855f, 0x9e20, 0x5d3c, 0x83a1, 0x3684, 0x0, 0x1);
        gbc.writeMem(0x8523, { 0x8d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x855f, gbc.sp());
        EXPECT(0x8524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8523));
        // 8D 00CD
        gbc.setState(0xe663, 0x609f, 0xaae0, 0xb734, 0x289d, 0xb90f, 0x0, 0x0);
        gbc.writeMem(0xe663, { 0x8d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x609f, gbc.sp());
        EXPECT(0xe664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe663));
        // 8D 00CE
        gbc.setState(0xbb72, 0x530a, 0xdf40, 0xbf7e, 0xa364, 0xfc7, 0x0, 0x0);
        gbc.writeMem(0xbb72, { 0x8d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x530a, gbc.sp());
        EXPECT(0xbb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbb72));
        // 8D 00D0
        gbc.setState(0x93db, 0x54ed, 0x2c00, 0xb8bb, 0xfc43, 0x2b88, 0x1, 0x1);
        gbc.writeMem(0x93db, { 0x8d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x54ed, gbc.sp());
        EXPECT(0x93dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x93db));
        // 8D 00D1
        gbc.setState(0x2dc2, 0xc2cc, 0x90d0, 0xd040, 0x6ca3, 0x711e, 0x1, 0x0);
        gbc.writeMem(0x2dc2, { 0x8d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc2cc, gbc.sp());
        EXPECT(0x2dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00D2
        gbc.setState(0x8a1f, 0x4187, 0x5d50, 0x2881, 0xa122, 0x5b28, 0x1, 0x0);
        gbc.writeMem(0x8a1f, { 0x8d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4187, gbc.sp());
        EXPECT(0x8a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8a1f));
        // 8D 00D3
        gbc.setState(0xda1a, 0x5f7, 0xaf60, 0x20cd, 0x9563, 0xebc4, 0x1, 0x0);
        gbc.writeMem(0xda1a, { 0x8d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5f7, gbc.sp());
        EXPECT(0xda1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xda1a));
        // 8D 00D4
        gbc.setState(0x84d3, 0x1efb, 0xcd70, 0xf976, 0xaeb7, 0x8eb6, 0x1, 0x1);
        gbc.writeMem(0x84d3, { 0x8d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1efb, gbc.sp());
        EXPECT(0x84d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x84d3));
        // 8D 00D5
        gbc.setState(0xcd0e, 0xcef4, 0xd160, 0x4bbf, 0x1011, 0x2564, 0x0, 0x0);
        gbc.writeMem(0xcd0e, { 0x8d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcef4, gbc.sp());
        EXPECT(0xcd0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcd0e));
        // 8D 00D6
        gbc.setState(0x31bb, 0xa870, 0x7080, 0xd036, 0x6833, 0xac71, 0x0, 0x1);
        gbc.writeMem(0x31bb, { 0x8d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa870, gbc.sp());
        EXPECT(0x31bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00DA
        gbc.setState(0x59c6, 0x6614, 0x4650, 0x73c5, 0x36c5, 0x78d3, 0x1, 0x1);
        gbc.writeMem(0x59c6, { 0x8d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6614, gbc.sp());
        EXPECT(0x59c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00DB
        gbc.setState(0x95aa, 0xf98b, 0x34d0, 0xa941, 0xd2a9, 0xb5df, 0x0, 0x0);
        gbc.writeMem(0x95aa, { 0x8d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf98b, gbc.sp());
        EXPECT(0x95ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x95aa));
        // 8D 00DC
        gbc.setState(0x561a, 0x317c, 0xea80, 0xd264, 0x9720, 0xff61, 0x0, 0x0);
        gbc.writeMem(0x561a, { 0x8d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x317c, gbc.sp());
        EXPECT(0x561b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00DD
        gbc.setState(0x7a4e, 0x831c, 0x1d20, 0x2db3, 0x87a7, 0x668f, 0x1, 0x1);
        gbc.writeMem(0x7a4e, { 0x8d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x831c, gbc.sp());
        EXPECT(0x7a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00DE
        gbc.setState(0x51e5, 0xb812, 0xe50, 0x48f, 0xab1a, 0x3df1, 0x1, 0x1);
        gbc.writeMem(0x51e5, { 0x8d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb812, gbc.sp());
        EXPECT(0x51e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00DF
        gbc.setState(0x2780, 0x970, 0x83b0, 0x810c, 0x5c77, 0xc32f, 0x0, 0x0);
        gbc.writeMem(0x2780, { 0x8d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x970, gbc.sp());
        EXPECT(0x2781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00E0
        gbc.setState(0xe711, 0x23ff, 0x6d10, 0xc15e, 0x8bd2, 0x1720, 0x1, 0x1);
        gbc.writeMem(0xe711, { 0x8d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x23ff, gbc.sp());
        EXPECT(0xe712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe711));
        // 8D 00E1
        gbc.setState(0xe579, 0xe95e, 0xa820, 0xbb63, 0xa7e4, 0xe49a, 0x1, 0x1);
        gbc.writeMem(0xe579, { 0x8d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe95e, gbc.sp());
        EXPECT(0xe57a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe579));
        // 8D 00E2
        gbc.setState(0x87e2, 0xfb9c, 0xb990, 0x30fe, 0xde91, 0x7b8c, 0x1, 0x0);
        gbc.writeMem(0x87e2, { 0x8d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfb9c, gbc.sp());
        EXPECT(0x87e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x87e2));
        // 8D 00E3
        gbc.setState(0x5f5b, 0x8070, 0xba80, 0x41b5, 0xd77f, 0xa2ee, 0x1, 0x0);
        gbc.writeMem(0x5f5b, { 0x8d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8070, gbc.sp());
        EXPECT(0x5f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00E4
        gbc.setState(0x3ed9, 0x486e, 0xe7d0, 0x2bf1, 0x570e, 0xba26, 0x1, 0x0);
        gbc.writeMem(0x3ed9, { 0x8d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x486e, gbc.sp());
        EXPECT(0x3eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00E5
        gbc.setState(0xcb05, 0x5bd6, 0xf7d0, 0xaf16, 0xfd5d, 0xdd5a, 0x1, 0x1);
        gbc.writeMem(0xcb05, { 0x8d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5bd6, gbc.sp());
        EXPECT(0xcb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcb05));
        // 8D 00E6
        gbc.setState(0xad04, 0xbe1f, 0x6b00, 0xf0ad, 0x728f, 0xd781, 0x0, 0x0);
        gbc.writeMem(0xad04, { 0x8d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbe1f, gbc.sp());
        EXPECT(0xad05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xad04));
        // 8D 00E7
        gbc.setState(0x710c, 0x9556, 0x5a20, 0x8f51, 0x5d11, 0x7ea0, 0x0, 0x0);
        gbc.writeMem(0x710c, { 0x8d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9556, gbc.sp());
        EXPECT(0x710d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00E8
        gbc.setState(0xdf65, 0x6548, 0x88c0, 0x59ab, 0xf2b7, 0xb8cc, 0x1, 0x1);
        gbc.writeMem(0xdf65, { 0x8d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6548, gbc.sp());
        EXPECT(0xdf66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdf65));
        // 8D 00E9
        gbc.setState(0x51a8, 0x861d, 0xd0e0, 0x2d14, 0x83fb, 0x3f3b, 0x1, 0x1);
        gbc.writeMem(0x51a8, { 0x8d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x861d, gbc.sp());
        EXPECT(0x51a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00EA
        gbc.setState(0x9671, 0xae61, 0xeb80, 0x56f6, 0xa647, 0x1291, 0x0, 0x1);
        gbc.writeMem(0x9671, { 0x8d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xae61, gbc.sp());
        EXPECT(0x9672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9671));
        // 8D 00EB
        gbc.setState(0xc6bf, 0x2fa9, 0x1c40, 0x2efe, 0x4d31, 0xfba2, 0x1, 0x0);
        gbc.writeMem(0xc6bf, { 0x8d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2fa9, gbc.sp());
        EXPECT(0xc6c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc6bf));
        // 8D 00ED
        gbc.setState(0x4c4, 0xbbf4, 0x6050, 0xc6c5, 0x50a1, 0x416c, 0x1, 0x1);
        gbc.writeMem(0x4c4, { 0x8d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbbf4, gbc.sp());
        EXPECT(0x4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00EE
        gbc.setState(0xa9c3, 0x25e1, 0x4240, 0x9e79, 0x7ff7, 0x47b, 0x1, 0x0);
        gbc.writeMem(0xa9c3, { 0x8d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x25e1, gbc.sp());
        EXPECT(0xa9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa9c3));
        // 8D 00EF
        gbc.setState(0xd1c1, 0x5bf, 0x6fd0, 0x7492, 0xb6f9, 0x1d46, 0x1, 0x1);
        gbc.writeMem(0xd1c1, { 0x8d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5bf, gbc.sp());
        EXPECT(0xd1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd1c1));
        // 8D 00F0
        gbc.setState(0xe8a9, 0x58b9, 0xaef0, 0x6bcc, 0x6299, 0x7eaf, 0x1, 0x0);
        gbc.writeMem(0xe8a9, { 0x8d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x58b9, gbc.sp());
        EXPECT(0xe8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe8a9));
        // 8D 00F1
        gbc.setState(0xd618, 0x60cd, 0x1ae0, 0xf19f, 0x20b7, 0xd5ac, 0x0, 0x0);
        gbc.writeMem(0xd618, { 0x8d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x60cd, gbc.sp());
        EXPECT(0xd619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd618));
        // 8D 00F2
        gbc.setState(0x74e7, 0x5fb2, 0x5530, 0xce14, 0x3008, 0x6cf6, 0x0, 0x1);
        gbc.writeMem(0x74e7, { 0x8d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5fb2, gbc.sp());
        EXPECT(0x74e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00F3
        gbc.setState(0xcc7, 0x1b4f, 0xeb0, 0xa0fa, 0x42f5, 0x71, 0x0, 0x0);
        gbc.writeMem(0xcc7, { 0x8d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1b4f, gbc.sp());
        EXPECT(0xcc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00F4
        gbc.setState(0x2120, 0x3260, 0xe10, 0x1d12, 0x677e, 0xc818, 0x0, 0x0);
        gbc.writeMem(0x2120, { 0x8d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0x2121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00F5
        gbc.setState(0x82c7, 0x5f16, 0x1890, 0xee08, 0x3b02, 0x3e62, 0x1, 0x1);
        gbc.writeMem(0x82c7, { 0x8d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5f16, gbc.sp());
        EXPECT(0x82c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x82c7));
        // 8D 00F6
        gbc.setState(0x3d1c, 0x3dd3, 0x8010, 0x964d, 0x4c40, 0x651d, 0x0, 0x1);
        gbc.writeMem(0x3d1c, { 0x8d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3dd3, gbc.sp());
        EXPECT(0x3d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00F7
        gbc.setState(0xb6ae, 0xf7ce, 0x1190, 0x6f46, 0xcc51, 0x9044, 0x0, 0x1);
        gbc.writeMem(0xb6ae, { 0x8d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf7ce, gbc.sp());
        EXPECT(0xb6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb6ae));
        // 8D 00F8
        gbc.setState(0xcd33, 0xce2a, 0xf030, 0x1858, 0xcacd, 0xd9ad, 0x0, 0x1);
        gbc.writeMem(0xcd33, { 0x8d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xce2a, gbc.sp());
        EXPECT(0xcd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcd33));
        // 8D 00F9
        gbc.setState(0x1d5f, 0xdd08, 0xb370, 0xcb50, 0xabac, 0x3042, 0x0, 0x1);
        gbc.writeMem(0x1d5f, { 0x8d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdd08, gbc.sp());
        EXPECT(0x1d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00FA
        gbc.setState(0x2dc9, 0x327, 0x24b0, 0x4e4c, 0xa498, 0xca55, 0x1, 0x0);
        gbc.writeMem(0x2dc9, { 0x8d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x327, gbc.sp());
        EXPECT(0x2dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 00FB
        gbc.setState(0xd631, 0xb2a4, 0x2e70, 0x5f74, 0x4b5b, 0x79ca, 0x0, 0x1);
        gbc.writeMem(0xd631, { 0x8d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb2a4, gbc.sp());
        EXPECT(0xd632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd631));
        // 8D 00FC
        gbc.setState(0x193b, 0x2c0a, 0x89f0, 0x8ec8, 0xd476, 0xfd0, 0x0, 0x0);
        gbc.writeMem(0x193b, { 0x8d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2c0a, gbc.sp());
        EXPECT(0x193c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00FD
        gbc.setState(0x1bbb, 0x83b7, 0xe620, 0xb26c, 0x6e6d, 0x5ee6, 0x0, 0x1);
        gbc.writeMem(0x1bbb, { 0x8d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x83b7, gbc.sp());
        EXPECT(0x1bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 00FE
        gbc.setState(0xeb9e, 0x5215, 0x7b20, 0xb70b, 0x80ac, 0xee1c, 0x1, 0x0);
        gbc.writeMem(0xeb9e, { 0x8d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5215, gbc.sp());
        EXPECT(0xeb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xeb9e));
        // 8D 00FF
        gbc.setState(0xde0, 0xd78b, 0xeec0, 0xeeb, 0x6066, 0xc064, 0x1, 0x0);
        gbc.writeMem(0xde0, { 0x8d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd78b, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0100
        gbc.setState(0x2eb8, 0x7789, 0xefd0, 0x4043, 0x8519, 0xeab1, 0x0, 0x1);
        gbc.writeMem(0x2eb8, { 0x8d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7789, gbc.sp());
        EXPECT(0x2eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0101
        gbc.setState(0x37c4, 0xba2c, 0xe00, 0xf959, 0x724, 0x78, 0x1, 0x1);
        gbc.writeMem(0x37c4, { 0x8d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xba2c, gbc.sp());
        EXPECT(0x37c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0102
        gbc.setState(0x5830, 0xd162, 0xf560, 0xb05b, 0xb3c4, 0xb525, 0x1, 0x0);
        gbc.writeMem(0x5830, { 0x8d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd162, gbc.sp());
        EXPECT(0x5831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0103
        gbc.setState(0x53da, 0xa13b, 0x79f0, 0xcb2d, 0xd00e, 0x9b4d, 0x1, 0x1);
        gbc.writeMem(0x53da, { 0x8d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa13b, gbc.sp());
        EXPECT(0x53db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0104
        gbc.setState(0x2dd9, 0xe182, 0x14d0, 0x3509, 0x5dfa, 0xb25e, 0x1, 0x0);
        gbc.writeMem(0x2dd9, { 0x8d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe182, gbc.sp());
        EXPECT(0x2dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0105
        gbc.setState(0xe333, 0x5309, 0x6d40, 0x603, 0x3e40, 0xff61, 0x1, 0x1);
        gbc.writeMem(0xe333, { 0x8d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5309, gbc.sp());
        EXPECT(0xe334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe333));
        // 8D 0106
        gbc.setState(0x128, 0xb941, 0xea60, 0xa35c, 0xbef8, 0x5b8f, 0x0, 0x0);
        gbc.writeMem(0x128, { 0x8d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb941, gbc.sp());
        EXPECT(0x129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0107
        gbc.setState(0x32a5, 0x36ea, 0x32d0, 0x1671, 0xbeb, 0xb5e5, 0x0, 0x0);
        gbc.writeMem(0x32a5, { 0x8d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x36ea, gbc.sp());
        EXPECT(0x32a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0108
        gbc.setState(0xc297, 0x8796, 0xd30, 0xb5b8, 0xef66, 0x732d, 0x1, 0x0);
        gbc.writeMem(0xc297, { 0x8d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8796, gbc.sp());
        EXPECT(0xc298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc297));
        // 8D 0109
        gbc.setState(0x8684, 0x52fc, 0x27b0, 0x8300, 0x2fba, 0x61b3, 0x0, 0x0);
        gbc.writeMem(0x8684, { 0x8d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x52fc, gbc.sp());
        EXPECT(0x8685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8684));
        // 8D 010A
        gbc.setState(0xbc9d, 0xd31b, 0xb9c0, 0xf4c1, 0xb024, 0x4911, 0x0, 0x0);
        gbc.writeMem(0xbc9d, { 0x8d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd31b, gbc.sp());
        EXPECT(0xbc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbc9d));
        // 8D 010B
        gbc.setState(0x39fd, 0x5f8e, 0x1610, 0x653c, 0x5733, 0x3a7b, 0x0, 0x0);
        gbc.writeMem(0x39fd, { 0x8d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5f8e, gbc.sp());
        EXPECT(0x39fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 010D
        gbc.setState(0x5151, 0xdbf0, 0x8b80, 0xe6f4, 0x4fc1, 0xd34e, 0x1, 0x1);
        gbc.writeMem(0x5151, { 0x8d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdbf0, gbc.sp());
        EXPECT(0x5152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 010E
        gbc.setState(0x306f, 0x91c6, 0xefc0, 0x4b2, 0x4f9e, 0x560e, 0x1, 0x0);
        gbc.writeMem(0x306f, { 0x8d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x91c6, gbc.sp());
        EXPECT(0x3070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 010F
        gbc.setState(0x47b8, 0xac1, 0x11e0, 0xc0b, 0x8bea, 0x9e78, 0x0, 0x1);
        gbc.writeMem(0x47b8, { 0x8d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xac1, gbc.sp());
        EXPECT(0x47b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0110
        gbc.setState(0x5b77, 0x9de4, 0x9d0, 0xc727, 0xad1e, 0x3684, 0x1, 0x0);
        gbc.writeMem(0x5b77, { 0x8d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9de4, gbc.sp());
        EXPECT(0x5b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0111
        gbc.setState(0xb742, 0xb093, 0x83b0, 0x1097, 0x6edd, 0x5078, 0x0, 0x1);
        gbc.writeMem(0xb742, { 0x8d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb093, gbc.sp());
        EXPECT(0xb743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb742));
        // 8D 0113
        gbc.setState(0xa60d, 0xc277, 0x9cd0, 0x7190, 0x99aa, 0xe318, 0x0, 0x0);
        gbc.writeMem(0xa60d, { 0x8d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc277, gbc.sp());
        EXPECT(0xa60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa60d));
        // 8D 0114
        gbc.setState(0xe8f3, 0xa7d7, 0xdd0, 0xfb4f, 0xb459, 0xa486, 0x1, 0x1);
        gbc.writeMem(0xe8f3, { 0x8d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa7d7, gbc.sp());
        EXPECT(0xe8f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe8f3));
        // 8D 0115
        gbc.setState(0x3657, 0xefa4, 0x4400, 0xcfc7, 0xb28b, 0xe21b, 0x0, 0x0);
        gbc.writeMem(0x3657, { 0x8d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xefa4, gbc.sp());
        EXPECT(0x3658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0116
        gbc.setState(0x861c, 0x5257, 0x93d0, 0x437d, 0x5b8d, 0x2d0d, 0x0, 0x0);
        gbc.writeMem(0x861c, { 0x8d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5257, gbc.sp());
        EXPECT(0x861d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x861c));
        // 8D 0117
        gbc.setState(0xb44f, 0xdb62, 0x5370, 0x32ac, 0x974f, 0xac25, 0x1, 0x0);
        gbc.writeMem(0xb44f, { 0x8d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdb62, gbc.sp());
        EXPECT(0xb450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb44f));
        // 8D 0118
        gbc.setState(0x8deb, 0xdd64, 0xc80, 0x327b, 0x120e, 0xf8ac, 0x0, 0x1);
        gbc.writeMem(0x8deb, { 0x8d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdd64, gbc.sp());
        EXPECT(0x8dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8deb));
        // 8D 0119
        gbc.setState(0x2c9f, 0x5d5d, 0xb640, 0xbd97, 0xbbd6, 0xcf25, 0x0, 0x1);
        gbc.writeMem(0x2c9f, { 0x8d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5d5d, gbc.sp());
        EXPECT(0x2ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 011A
        gbc.setState(0x1ed8, 0x23a9, 0x3130, 0x3a6c, 0xdfda, 0xc617, 0x1, 0x1);
        gbc.writeMem(0x1ed8, { 0x8d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x23a9, gbc.sp());
        EXPECT(0x1ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 011B
        gbc.setState(0x7efc, 0xf78c, 0x9590, 0xdbfa, 0xa353, 0x1747, 0x0, 0x1);
        gbc.writeMem(0x7efc, { 0x8d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf78c, gbc.sp());
        EXPECT(0x7efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 011C
        gbc.setState(0x2cc8, 0xb89c, 0x8d80, 0x6881, 0x1a6d, 0x2a4, 0x0, 0x0);
        gbc.writeMem(0x2cc8, { 0x8d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb89c, gbc.sp());
        EXPECT(0x2cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 011D
        gbc.setState(0x7d24, 0x9648, 0xb770, 0x3275, 0x15a0, 0x7489, 0x1, 0x0);
        gbc.writeMem(0x7d24, { 0x8d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9648, gbc.sp());
        EXPECT(0x7d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 011E
        gbc.setState(0x206a, 0x1bf9, 0x7f00, 0x518b, 0xa63, 0xd9ac, 0x1, 0x0);
        gbc.writeMem(0x206a, { 0x8d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1bf9, gbc.sp());
        EXPECT(0x206b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 011F
        gbc.setState(0xbe9a, 0x1010, 0xee80, 0xf1dc, 0x7895, 0xf219, 0x0, 0x1);
        gbc.writeMem(0xbe9a, { 0x8d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1010, gbc.sp());
        EXPECT(0xbe9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbe9a));
        // 8D 0120
        gbc.setState(0x3c0b, 0xa5f9, 0x610, 0x34e3, 0x69bc, 0x5e88, 0x1, 0x0);
        gbc.writeMem(0x3c0b, { 0x8d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa5f9, gbc.sp());
        EXPECT(0x3c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0121
        gbc.setState(0x273d, 0xfbf5, 0xcec0, 0xcd1c, 0xfe61, 0x2629, 0x1, 0x0);
        gbc.writeMem(0x273d, { 0x8d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfbf5, gbc.sp());
        EXPECT(0x273e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0122
        gbc.setState(0xbc9e, 0x6c1a, 0xa600, 0x28f7, 0x65d, 0xa15c, 0x1, 0x1);
        gbc.writeMem(0xbc9e, { 0x8d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6c1a, gbc.sp());
        EXPECT(0xbc9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbc9e));
        // 8D 0123
        gbc.setState(0x904a, 0xefdc, 0xaf60, 0xe814, 0x9a67, 0x9f7c, 0x0, 0x1);
        gbc.writeMem(0x904a, { 0x8d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xefdc, gbc.sp());
        EXPECT(0x904b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x904a));
        // 8D 0124
        gbc.setState(0xc637, 0xeeb4, 0xac10, 0x4e67, 0xff28, 0x6706, 0x0, 0x0);
        gbc.writeMem(0xc637, { 0x8d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xeeb4, gbc.sp());
        EXPECT(0xc638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc637));
        // 8D 0125
        gbc.setState(0x62f5, 0xa1b6, 0x8200, 0xa4ee, 0xe1bd, 0xd1ee, 0x1, 0x0);
        gbc.writeMem(0x62f5, { 0x8d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa1b6, gbc.sp());
        EXPECT(0x62f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0126
        gbc.setState(0x3a31, 0xda5f, 0x11d0, 0xf735, 0x922a, 0x6227, 0x0, 0x0);
        gbc.writeMem(0x3a31, { 0x8d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xda5f, gbc.sp());
        EXPECT(0x3a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0127
        gbc.setState(0x2562, 0x6a21, 0xd170, 0x2a9c, 0x6c14, 0x83bd, 0x0, 0x1);
        gbc.writeMem(0x2562, { 0x8d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6a21, gbc.sp());
        EXPECT(0x2563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0128
        gbc.setState(0x95b2, 0x5280, 0xa080, 0xf382, 0x5f1d, 0xd1ab, 0x1, 0x1);
        gbc.writeMem(0x95b2, { 0x8d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5280, gbc.sp());
        EXPECT(0x95b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x95b2));
        // 8D 012A
        gbc.setState(0x57b8, 0x65f5, 0x6e50, 0x3291, 0x366a, 0x731c, 0x1, 0x0);
        gbc.writeMem(0x57b8, { 0x8d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x65f5, gbc.sp());
        EXPECT(0x57b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 012B
        gbc.setState(0xa3b, 0x22a0, 0x12c0, 0xefd4, 0xcfe9, 0xec0, 0x0, 0x0);
        gbc.writeMem(0xa3b, { 0x8d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x22a0, gbc.sp());
        EXPECT(0xa3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 012C
        gbc.setState(0x1913, 0x4e27, 0x4e10, 0xd700, 0x8ca, 0xaab3, 0x1, 0x0);
        gbc.writeMem(0x1913, { 0x8d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4e27, gbc.sp());
        EXPECT(0x1914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 012D
        gbc.setState(0xdbfd, 0xdfc3, 0x2ba0, 0x3132, 0xeb27, 0x29d8, 0x0, 0x1);
        gbc.writeMem(0xdbfd, { 0x8d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdfc3, gbc.sp());
        EXPECT(0xdbfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdbfd));
        // 8D 012E
        gbc.setState(0x5926, 0x95f4, 0x7b70, 0xeb02, 0xd6cd, 0xc8bc, 0x1, 0x0);
        gbc.writeMem(0x5926, { 0x8d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x95f4, gbc.sp());
        EXPECT(0x5927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 012F
        gbc.setState(0x610f, 0xada4, 0x830, 0x7846, 0x1dbe, 0xf70d, 0x1, 0x1);
        gbc.writeMem(0x610f, { 0x8d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xada4, gbc.sp());
        EXPECT(0x6110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0130
        gbc.setState(0xb60c, 0x4d5e, 0x5f40, 0x4865, 0x4893, 0x4a48, 0x0, 0x0);
        gbc.writeMem(0xb60c, { 0x8d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4d5e, gbc.sp());
        EXPECT(0xb60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb60c));
        // 8D 0131
        gbc.setState(0x51c5, 0xd7e8, 0xd830, 0x8bae, 0xd154, 0x31a0, 0x1, 0x1);
        gbc.writeMem(0x51c5, { 0x8d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd7e8, gbc.sp());
        EXPECT(0x51c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0132
        gbc.setState(0xd5c6, 0x78e8, 0xfac0, 0x825e, 0x54ef, 0xe868, 0x0, 0x0);
        gbc.writeMem(0xd5c6, { 0x8d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x78e8, gbc.sp());
        EXPECT(0xd5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd5c6));
        // 8D 0133
        gbc.setState(0x6ac6, 0x2686, 0x2f0, 0x6f0c, 0xba54, 0x820d, 0x1, 0x1);
        gbc.writeMem(0x6ac6, { 0x8d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2686, gbc.sp());
        EXPECT(0x6ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0134
        gbc.setState(0x75fb, 0xea83, 0xa600, 0x73a8, 0x2f85, 0x6032, 0x0, 0x1);
        gbc.writeMem(0x75fb, { 0x8d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xea83, gbc.sp());
        EXPECT(0x75fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0135
        gbc.setState(0xce9e, 0x3410, 0xc7d0, 0xcd, 0x81b7, 0x7277, 0x0, 0x1);
        gbc.writeMem(0xce9e, { 0x8d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3410, gbc.sp());
        EXPECT(0xce9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xce9e));
        // 8D 0136
        gbc.setState(0x8729, 0x6678, 0x1740, 0xb43b, 0xa511, 0x9913, 0x1, 0x1);
        gbc.writeMem(0x8729, { 0x8d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6678, gbc.sp());
        EXPECT(0x872a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8729));
        // 8D 0137
        gbc.setState(0xea94, 0x822e, 0x80d0, 0xcb6b, 0xabe8, 0x156b, 0x0, 0x1);
        gbc.writeMem(0xea94, { 0x8d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x822e, gbc.sp());
        EXPECT(0xea95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xea94));
        // 8D 0138
        gbc.setState(0x754a, 0x9583, 0x4000, 0xc757, 0xd3f6, 0x6f8f, 0x1, 0x0);
        gbc.writeMem(0x754a, { 0x8d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9583, gbc.sp());
        EXPECT(0x754b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0139
        gbc.setState(0x6916, 0xcf51, 0x4720, 0x3034, 0x653a, 0xe999, 0x0, 0x1);
        gbc.writeMem(0x6916, { 0x8d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcf51, gbc.sp());
        EXPECT(0x6917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 013A
        gbc.setState(0x625f, 0xb393, 0xca10, 0x5c2c, 0xa368, 0x99c, 0x0, 0x1);
        gbc.writeMem(0x625f, { 0x8d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb393, gbc.sp());
        EXPECT(0x6260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 013B
        gbc.setState(0xe56b, 0xadf8, 0x1be0, 0xa662, 0xbf87, 0xd513, 0x1, 0x0);
        gbc.writeMem(0xe56b, { 0x8d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xadf8, gbc.sp());
        EXPECT(0xe56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe56b));
        // 8D 013C
        gbc.setState(0xe3e8, 0x2310, 0x7060, 0xe71d, 0xbb2f, 0xb7f9, 0x0, 0x1);
        gbc.writeMem(0xe3e8, { 0x8d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2310, gbc.sp());
        EXPECT(0xe3e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe3e8));
        // 8D 013D
        gbc.setState(0x54a2, 0x5917, 0x8e80, 0xf249, 0x6a28, 0x3183, 0x0, 0x1);
        gbc.writeMem(0x54a2, { 0x8d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5917, gbc.sp());
        EXPECT(0x54a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 013E
        gbc.setState(0xea39, 0x6e17, 0xa7f0, 0xb891, 0x73a7, 0x4328, 0x0, 0x0);
        gbc.writeMem(0xea39, { 0x8d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6e17, gbc.sp());
        EXPECT(0xea3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xea39));
        // 8D 013F
        gbc.setState(0x9719, 0xc7a8, 0xbeb0, 0x5d75, 0xddc8, 0x2bca, 0x0, 0x0);
        gbc.writeMem(0x9719, { 0x8d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc7a8, gbc.sp());
        EXPECT(0x971a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9719));
        // 8D 0140
        gbc.setState(0xcc07, 0xbee6, 0x4dc0, 0xef5c, 0x9f33, 0x73e5, 0x1, 0x1);
        gbc.writeMem(0xcc07, { 0x8d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbee6, gbc.sp());
        EXPECT(0xcc08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcc07));
        // 8D 0143
        gbc.setState(0xb3b6, 0x3afa, 0xa20, 0xfeb, 0xe39c, 0x6965, 0x1, 0x0);
        gbc.writeMem(0xb3b6, { 0x8d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3afa, gbc.sp());
        EXPECT(0xb3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb3b6));
        // 8D 0144
        gbc.setState(0xac5e, 0xfc4d, 0x1b50, 0xc43c, 0xc6cc, 0x9fbf, 0x1, 0x1);
        gbc.writeMem(0xac5e, { 0x8d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfc4d, gbc.sp());
        EXPECT(0xac5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xac5e));
        // 8D 0146
        gbc.setState(0x909f, 0x5f09, 0x9720, 0x5d6a, 0xac02, 0x8ddd, 0x1, 0x1);
        gbc.writeMem(0x909f, { 0x8d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5f09, gbc.sp());
        EXPECT(0x90a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x909f));
        // 8D 0147
        gbc.setState(0xaf41, 0x995a, 0xd4c0, 0x63cf, 0x4bb2, 0xa07, 0x1, 0x1);
        gbc.writeMem(0xaf41, { 0x8d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x995a, gbc.sp());
        EXPECT(0xaf42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xaf41));
        // 8D 0148
        gbc.setState(0x6806, 0x8388, 0x8f50, 0xcbc, 0x7b99, 0x1c1c, 0x0, 0x1);
        gbc.writeMem(0x6806, { 0x8d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8388, gbc.sp());
        EXPECT(0x6807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0149
        gbc.setState(0xec49, 0xabcd, 0xe710, 0xba54, 0x6f83, 0x4efe, 0x1, 0x1);
        gbc.writeMem(0xec49, { 0x8d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xabcd, gbc.sp());
        EXPECT(0xec4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xec49));
        // 8D 014A
        gbc.setState(0x8f10, 0x3287, 0x5a80, 0x3143, 0xa176, 0x3e40, 0x0, 0x0);
        gbc.writeMem(0x8f10, { 0x8d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3287, gbc.sp());
        EXPECT(0x8f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8f10));
        // 8D 014B
        gbc.setState(0xe451, 0xcf7d, 0x23e0, 0x46f7, 0xc5db, 0x3992, 0x0, 0x1);
        gbc.writeMem(0xe451, { 0x8d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcf7d, gbc.sp());
        EXPECT(0xe452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe451));
        // 8D 014C
        gbc.setState(0x7d55, 0x5208, 0x2a30, 0x85b3, 0x68fa, 0x4e53, 0x0, 0x1);
        gbc.writeMem(0x7d55, { 0x8d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5208, gbc.sp());
        EXPECT(0x7d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 014D
        gbc.setState(0x451c, 0x1916, 0x7b90, 0x459c, 0xccd6, 0xce89, 0x1, 0x0);
        gbc.writeMem(0x451c, { 0x8d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1916, gbc.sp());
        EXPECT(0x451d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 014E
        gbc.setState(0x7166, 0xaf10, 0x6010, 0xb924, 0xb255, 0x7774, 0x0, 0x1);
        gbc.writeMem(0x7166, { 0x8d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xaf10, gbc.sp());
        EXPECT(0x7167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 014F
        gbc.setState(0xaaf2, 0x7f3c, 0xec70, 0x850f, 0x2503, 0x8c87, 0x0, 0x1);
        gbc.writeMem(0xaaf2, { 0x8d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7f3c, gbc.sp());
        EXPECT(0xaaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xaaf2));
        // 8D 0151
        gbc.setState(0x19bb, 0x13c7, 0x1110, 0x8b75, 0x1022, 0x1ef3, 0x1, 0x1);
        gbc.writeMem(0x19bb, { 0x8d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x13c7, gbc.sp());
        EXPECT(0x19bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0152
        gbc.setState(0x4a09, 0x64fb, 0xb40, 0x32d0, 0xa9c7, 0x566, 0x1, 0x1);
        gbc.writeMem(0x4a09, { 0x8d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x64fb, gbc.sp());
        EXPECT(0x4a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0153
        gbc.setState(0x4db3, 0xbf29, 0x6ca0, 0x80cd, 0x618, 0xf4d6, 0x0, 0x0);
        gbc.writeMem(0x4db3, { 0x8d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbf29, gbc.sp());
        EXPECT(0x4db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0154
        gbc.setState(0x7687, 0xe9e8, 0xe10, 0xcaae, 0x738b, 0x7129, 0x0, 0x0);
        gbc.writeMem(0x7687, { 0x8d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe9e8, gbc.sp());
        EXPECT(0x7688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0155
        gbc.setState(0x5ddc, 0xa684, 0xe1b0, 0x4732, 0x6e1b, 0x245c, 0x1, 0x0);
        gbc.writeMem(0x5ddc, { 0x8d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa684, gbc.sp());
        EXPECT(0x5ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0156
        gbc.setState(0x5a69, 0xd9db, 0x5d50, 0xa0dd, 0x4e68, 0x5dc9, 0x1, 0x1);
        gbc.writeMem(0x5a69, { 0x8d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd9db, gbc.sp());
        EXPECT(0x5a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0159
        gbc.setState(0x362e, 0xe67, 0x6f0, 0xb777, 0xe8e0, 0x7d14, 0x0, 0x1);
        gbc.writeMem(0x362e, { 0x8d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe67, gbc.sp());
        EXPECT(0x362f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 015A
        gbc.setState(0x7a8e, 0x713c, 0x4ff0, 0xbf13, 0xc6fb, 0xe389, 0x1, 0x1);
        gbc.writeMem(0x7a8e, { 0x8d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x713c, gbc.sp());
        EXPECT(0x7a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 015B
        gbc.setState(0x483a, 0xa0a4, 0xf2b0, 0xb999, 0x3929, 0x5f72, 0x1, 0x0);
        gbc.writeMem(0x483a, { 0x8d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa0a4, gbc.sp());
        EXPECT(0x483b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 015C
        gbc.setState(0x5795, 0xd45c, 0x1b10, 0x539a, 0x586, 0x7046, 0x0, 0x1);
        gbc.writeMem(0x5795, { 0x8d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd45c, gbc.sp());
        EXPECT(0x5796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 015D
        gbc.setState(0x479b, 0x7559, 0xda00, 0x2e4a, 0xf9d6, 0x39f6, 0x1, 0x1);
        gbc.writeMem(0x479b, { 0x8d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7559, gbc.sp());
        EXPECT(0x479c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 015E
        gbc.setState(0x75e, 0x4079, 0x6b20, 0xb068, 0x1540, 0x6521, 0x1, 0x1);
        gbc.writeMem(0x75e, { 0x8d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4079, gbc.sp());
        EXPECT(0x75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 015F
        gbc.setState(0x3d6, 0x32b0, 0xabd0, 0x81db, 0x5ec7, 0x5c87, 0x1, 0x1);
        gbc.writeMem(0x3d6, { 0x8d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x32b0, gbc.sp());
        EXPECT(0x3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0161
        gbc.setState(0xe3a5, 0x29a, 0xf8c0, 0xa7f9, 0xfdbd, 0x28ad, 0x1, 0x1);
        gbc.writeMem(0xe3a5, { 0x8d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x29a, gbc.sp());
        EXPECT(0xe3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe3a5));
        // 8D 0162
        gbc.setState(0x34d4, 0x8378, 0xc830, 0x3f92, 0x77f, 0xa956, 0x0, 0x1);
        gbc.writeMem(0x34d4, { 0x8d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8378, gbc.sp());
        EXPECT(0x34d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0163
        gbc.setState(0xccc0, 0x37dc, 0xd990, 0x6a7, 0xdeb9, 0x9081, 0x0, 0x0);
        gbc.writeMem(0xccc0, { 0x8d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x37dc, gbc.sp());
        EXPECT(0xccc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xccc0));
        // 8D 0164
        gbc.setState(0x9a6d, 0xa5a9, 0x8600, 0xc040, 0xefb9, 0x4f61, 0x0, 0x1);
        gbc.writeMem(0x9a6d, { 0x8d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa5a9, gbc.sp());
        EXPECT(0x9a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9a6d));
        // 8D 0165
        gbc.setState(0xc457, 0x4af1, 0x3440, 0xd4c8, 0xd01d, 0x6a3d, 0x0, 0x0);
        gbc.writeMem(0xc457, { 0x8d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4af1, gbc.sp());
        EXPECT(0xc458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc457));
        // 8D 0166
        gbc.setState(0x728, 0x99e2, 0xb960, 0x6fbc, 0xbcd1, 0x67f1, 0x1, 0x0);
        gbc.writeMem(0x728, { 0x8d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x99e2, gbc.sp());
        EXPECT(0x729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0167
        gbc.setState(0xba62, 0xc4a3, 0x240, 0xcf4, 0x653, 0xe532, 0x0, 0x1);
        gbc.writeMem(0xba62, { 0x8d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc4a3, gbc.sp());
        EXPECT(0xba63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xba62));
        // 8D 0168
        gbc.setState(0xdfb9, 0x6b32, 0xc560, 0x5b60, 0x7d6e, 0x764b, 0x1, 0x0);
        gbc.writeMem(0xdfb9, { 0x8d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6b32, gbc.sp());
        EXPECT(0xdfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdfb9));
        // 8D 0169
        gbc.setState(0xd5cb, 0x76d2, 0x41e0, 0x8d0b, 0x8f5b, 0xdd3d, 0x1, 0x1);
        gbc.writeMem(0xd5cb, { 0x8d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x76d2, gbc.sp());
        EXPECT(0xd5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd5cb));
        // 8D 016A
        gbc.setState(0x9002, 0x6615, 0x1a10, 0x281b, 0xe9b4, 0x574d, 0x0, 0x1);
        gbc.writeMem(0x9002, { 0x8d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6615, gbc.sp());
        EXPECT(0x9003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9002));
        // 8D 016B
        gbc.setState(0xca6b, 0xa035, 0x6530, 0xbec4, 0x3618, 0xa9df, 0x1, 0x0);
        gbc.writeMem(0xca6b, { 0x8d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa035, gbc.sp());
        EXPECT(0xca6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xca6b));
        // 8D 016C
        gbc.setState(0x1156, 0x3612, 0x3f80, 0x6a34, 0x9708, 0xe202, 0x1, 0x0);
        gbc.writeMem(0x1156, { 0x8d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3612, gbc.sp());
        EXPECT(0x1157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 016D
        gbc.setState(0xa50a, 0xd632, 0x6bb0, 0x7043, 0xd45f, 0x4e37, 0x1, 0x0);
        gbc.writeMem(0xa50a, { 0x8d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd632, gbc.sp());
        EXPECT(0xa50b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa50a));
        // 8D 016E
        gbc.setState(0xe90d, 0x7cd1, 0x5cf0, 0x2036, 0xfee3, 0xe989, 0x0, 0x0);
        gbc.writeMem(0xe90d, { 0x8d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7cd1, gbc.sp());
        EXPECT(0xe90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe90d));
        // 8D 016F
        gbc.setState(0x558c, 0xb7b1, 0x5fb0, 0xd36, 0xfaa0, 0x499d, 0x0, 0x1);
        gbc.writeMem(0x558c, { 0x8d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb7b1, gbc.sp());
        EXPECT(0x558d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0170
        gbc.setState(0x653, 0x4092, 0x56e0, 0x5dc9, 0x80c8, 0x2014, 0x0, 0x1);
        gbc.writeMem(0x653, { 0x8d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4092, gbc.sp());
        EXPECT(0x654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0172
        gbc.setState(0x37ae, 0x3ab9, 0xe890, 0xac7e, 0x8bf5, 0xce71, 0x0, 0x1);
        gbc.writeMem(0x37ae, { 0x8d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3ab9, gbc.sp());
        EXPECT(0x37af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0173
        gbc.setState(0x7738, 0x512b, 0xbce0, 0x266b, 0x6140, 0xea74, 0x0, 0x0);
        gbc.writeMem(0x7738, { 0x8d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x512b, gbc.sp());
        EXPECT(0x7739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0174
        gbc.setState(0x74, 0x625d, 0x2c70, 0xc85b, 0x55fd, 0xb5bb, 0x1, 0x0);
        gbc.writeMem(0x74, { 0x8d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x625d, gbc.sp());
        EXPECT(0x75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0175
        gbc.setState(0x59c5, 0x5b0d, 0x4490, 0xe68e, 0x105b, 0x1f56, 0x0, 0x1);
        gbc.writeMem(0x59c5, { 0x8d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5b0d, gbc.sp());
        EXPECT(0x59c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0178
        gbc.setState(0x945, 0x2ae0, 0x3d90, 0xa001, 0xac93, 0x1b69, 0x1, 0x1);
        gbc.writeMem(0x945, { 0x8d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2ae0, gbc.sp());
        EXPECT(0x946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0179
        gbc.setState(0x4a74, 0x34fb, 0xb930, 0x7389, 0xbae5, 0x103, 0x1, 0x0);
        gbc.writeMem(0x4a74, { 0x8d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x34fb, gbc.sp());
        EXPECT(0x4a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 017A
        gbc.setState(0xbbc5, 0xdc55, 0xa320, 0x631d, 0x8e02, 0xc559, 0x1, 0x1);
        gbc.writeMem(0xbbc5, { 0x8d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdc55, gbc.sp());
        EXPECT(0xbbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbbc5));
        // 8D 017B
        gbc.setState(0xbd2b, 0x3c2e, 0xfd90, 0x12cc, 0x59af, 0x83d6, 0x1, 0x0);
        gbc.writeMem(0xbd2b, { 0x8d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3c2e, gbc.sp());
        EXPECT(0xbd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbd2b));
        // 8D 017C
        gbc.setState(0x77ea, 0x2e2c, 0xf120, 0x77dd, 0x8924, 0x445a, 0x1, 0x0);
        gbc.writeMem(0x77ea, { 0x8d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2e2c, gbc.sp());
        EXPECT(0x77eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 017D
        gbc.setState(0xfa, 0x8c26, 0x3590, 0xa48a, 0x49af, 0x23c2, 0x0, 0x1);
        gbc.writeMem(0xfa, { 0x8d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8c26, gbc.sp());
        EXPECT(0xfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 017F
        gbc.setState(0x3e1a, 0x3915, 0xf060, 0x5a4f, 0x394d, 0x8387, 0x1, 0x0);
        gbc.writeMem(0x3e1a, { 0x8d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3915, gbc.sp());
        EXPECT(0x3e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0180
        gbc.setState(0xdd58, 0x372d, 0x4de0, 0x34ed, 0xb0c4, 0x3658, 0x1, 0x0);
        gbc.writeMem(0xdd58, { 0x8d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x372d, gbc.sp());
        EXPECT(0xdd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdd58));
        // 8D 0181
        gbc.setState(0xb4c2, 0xe5b2, 0xc8e0, 0x7231, 0xf4d3, 0xdb2a, 0x0, 0x1);
        gbc.writeMem(0xb4c2, { 0x8d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe5b2, gbc.sp());
        EXPECT(0xb4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb4c2));
        // 8D 0182
        gbc.setState(0x8c3e, 0xe81b, 0x15b0, 0x8cae, 0x8fdb, 0x1e4e, 0x0, 0x1);
        gbc.writeMem(0x8c3e, { 0x8d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe81b, gbc.sp());
        EXPECT(0x8c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8c3e));
        // 8D 0183
        gbc.setState(0x8636, 0x3186, 0x7840, 0x97e0, 0x9e24, 0xaf51, 0x1, 0x1);
        gbc.writeMem(0x8636, { 0x8d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3186, gbc.sp());
        EXPECT(0x8637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8636));
        // 8D 0184
        gbc.setState(0x4030, 0xefc9, 0x5260, 0xd20, 0xed12, 0xb268, 0x0, 0x0);
        gbc.writeMem(0x4030, { 0x8d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xefc9, gbc.sp());
        EXPECT(0x4031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0186
        gbc.setState(0x4497, 0x18cc, 0x8ed0, 0x6d1e, 0x3e7, 0x26fa, 0x0, 0x0);
        gbc.writeMem(0x4497, { 0x8d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x18cc, gbc.sp());
        EXPECT(0x4498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0187
        gbc.setState(0x25c5, 0x1035, 0xd7c0, 0x293f, 0x4ff2, 0xa4eb, 0x0, 0x0);
        gbc.writeMem(0x25c5, { 0x8d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1035, gbc.sp());
        EXPECT(0x25c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0189
        gbc.setState(0x5cda, 0x27c9, 0x2950, 0xd7a9, 0x6ca2, 0x590a, 0x1, 0x1);
        gbc.writeMem(0x5cda, { 0x8d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x27c9, gbc.sp());
        EXPECT(0x5cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 018B
        gbc.setState(0x3e78, 0x24bd, 0xaa80, 0x9252, 0x2df2, 0x9c91, 0x1, 0x1);
        gbc.writeMem(0x3e78, { 0x8d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x24bd, gbc.sp());
        EXPECT(0x3e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 018C
        gbc.setState(0xd336, 0x244c, 0x97d0, 0xeed1, 0xb2fa, 0x54ed, 0x1, 0x1);
        gbc.writeMem(0xd336, { 0x8d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x244c, gbc.sp());
        EXPECT(0xd337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd336));
        // 8D 018D
        gbc.setState(0x1099, 0x91b7, 0x4080, 0xf516, 0x810c, 0xde4, 0x0, 0x0);
        gbc.writeMem(0x1099, { 0x8d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x91b7, gbc.sp());
        EXPECT(0x109a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 018E
        gbc.setState(0xc77, 0xdea, 0xaf10, 0x18bb, 0x8ad9, 0xacc5, 0x1, 0x0);
        gbc.writeMem(0xc77, { 0x8d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdea, gbc.sp());
        EXPECT(0xc78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 018F
        gbc.setState(0x8fe3, 0x52a4, 0x7c40, 0xa510, 0xf5ea, 0xcc2a, 0x0, 0x0);
        gbc.writeMem(0x8fe3, { 0x8d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x52a4, gbc.sp());
        EXPECT(0x8fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8fe3));
        // 8D 0190
        gbc.setState(0x38e6, 0xfb6f, 0x5350, 0xc2b5, 0x20cc, 0x5884, 0x1, 0x0);
        gbc.writeMem(0x38e6, { 0x8d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfb6f, gbc.sp());
        EXPECT(0x38e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0191
        gbc.setState(0x124d, 0xb3cc, 0x5d00, 0xdbe0, 0x84d9, 0xed83, 0x0, 0x0);
        gbc.writeMem(0x124d, { 0x8d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb3cc, gbc.sp());
        EXPECT(0x124e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0192
        gbc.setState(0xcc2a, 0xea5e, 0xe20, 0x64d0, 0x1add, 0xec47, 0x0, 0x1);
        gbc.writeMem(0xcc2a, { 0x8d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xea5e, gbc.sp());
        EXPECT(0xcc2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcc2a));
        // 8D 0194
        gbc.setState(0xc2fb, 0x9b57, 0x61b0, 0x6dee, 0x26f4, 0x9344, 0x1, 0x0);
        gbc.writeMem(0xc2fb, { 0x8d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9b57, gbc.sp());
        EXPECT(0xc2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc2fb));
        // 8D 0195
        gbc.setState(0x666c, 0x88f1, 0xe0b0, 0xf15e, 0xeec2, 0x5e3c, 0x0, 0x1);
        gbc.writeMem(0x666c, { 0x8d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x88f1, gbc.sp());
        EXPECT(0x666d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0196
        gbc.setState(0xd4ed, 0x677d, 0x59c0, 0x46d, 0x7f07, 0x1f36, 0x1, 0x0);
        gbc.writeMem(0xd4ed, { 0x8d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x677d, gbc.sp());
        EXPECT(0xd4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd4ed));
        // 8D 0197
        gbc.setState(0x6103, 0xadff, 0xd2e0, 0x33ab, 0xd07f, 0xfe69, 0x0, 0x1);
        gbc.writeMem(0x6103, { 0x8d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xadff, gbc.sp());
        EXPECT(0x6104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0198
        gbc.setState(0x1c67, 0x30b3, 0x2280, 0x299b, 0x7120, 0x3b4, 0x0, 0x0);
        gbc.writeMem(0x1c67, { 0x8d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x30b3, gbc.sp());
        EXPECT(0x1c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0199
        gbc.setState(0x6025, 0xf1f8, 0x3420, 0xa3d0, 0xa655, 0xf71, 0x0, 0x0);
        gbc.writeMem(0x6025, { 0x8d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf1f8, gbc.sp());
        EXPECT(0x6026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 019A
        gbc.setState(0x61cf, 0xd145, 0xc80, 0x6ea7, 0x1cea, 0xdd6b, 0x1, 0x1);
        gbc.writeMem(0x61cf, { 0x8d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd145, gbc.sp());
        EXPECT(0x61d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 019B
        gbc.setState(0x72a0, 0xf90e, 0xcba0, 0xa78d, 0x76a3, 0xbb32, 0x1, 0x0);
        gbc.writeMem(0x72a0, { 0x8d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf90e, gbc.sp());
        EXPECT(0x72a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 019C
        gbc.setState(0x3115, 0x3d74, 0x12b0, 0xacbe, 0xba32, 0x352d, 0x0, 0x0);
        gbc.writeMem(0x3115, { 0x8d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3d74, gbc.sp());
        EXPECT(0x3116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 019D
        gbc.setState(0x82c9, 0x3aa3, 0xaed0, 0x4dbb, 0xca23, 0x1174, 0x1, 0x1);
        gbc.writeMem(0x82c9, { 0x8d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3aa3, gbc.sp());
        EXPECT(0x82ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x82c9));
        // 8D 019E
        gbc.setState(0x721d, 0x2067, 0xf70, 0x40ea, 0x455b, 0xf7a0, 0x1, 0x1);
        gbc.writeMem(0x721d, { 0x8d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2067, gbc.sp());
        EXPECT(0x721e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 019F
        gbc.setState(0x49fe, 0x8a83, 0xbc40, 0xd081, 0x508a, 0x65ed, 0x0, 0x1);
        gbc.writeMem(0x49fe, { 0x8d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8a83, gbc.sp());
        EXPECT(0x49ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01A0
        gbc.setState(0x5eff, 0xfde0, 0x9540, 0x1ecd, 0x19fc, 0x44be, 0x1, 0x1);
        gbc.writeMem(0x5eff, { 0x8d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfde0, gbc.sp());
        EXPECT(0x5f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01A1
        gbc.setState(0x138d, 0xfd46, 0x5e00, 0x868e, 0xc652, 0xac8f, 0x1, 0x0);
        gbc.writeMem(0x138d, { 0x8d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfd46, gbc.sp());
        EXPECT(0x138e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01A2
        gbc.setState(0xd26a, 0x4aac, 0xd8a0, 0xdbda, 0x4011, 0x8983, 0x0, 0x1);
        gbc.writeMem(0xd26a, { 0x8d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4aac, gbc.sp());
        EXPECT(0xd26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd26a));
        // 8D 01A3
        gbc.setState(0x5b98, 0x74f3, 0x70e0, 0x83dc, 0xaae1, 0x424c, 0x0, 0x1);
        gbc.writeMem(0x5b98, { 0x8d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x74f3, gbc.sp());
        EXPECT(0x5b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01A4
        gbc.setState(0xeecc, 0xd4ae, 0x3850, 0x35bc, 0x7780, 0x9e0b, 0x1, 0x0);
        gbc.writeMem(0xeecc, { 0x8d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd4ae, gbc.sp());
        EXPECT(0xeecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xeecc));
        // 8D 01A5
        gbc.setState(0xcd7d, 0x338d, 0x16f0, 0x823f, 0x13e2, 0xa024, 0x1, 0x0);
        gbc.writeMem(0xcd7d, { 0x8d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x338d, gbc.sp());
        EXPECT(0xcd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcd7d));
        // 8D 01A6
        gbc.setState(0xbda8, 0x3819, 0x69a0, 0x8894, 0x94fc, 0xe77, 0x0, 0x0);
        gbc.writeMem(0xbda8, { 0x8d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3819, gbc.sp());
        EXPECT(0xbda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbda8));
        // 8D 01A7
        gbc.setState(0xc8bf, 0xfdff, 0x9910, 0x172b, 0xaced, 0x601b, 0x1, 0x1);
        gbc.writeMem(0xc8bf, { 0x8d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfdff, gbc.sp());
        EXPECT(0xc8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc8bf));
        // 8D 01A8
        gbc.setState(0x25fc, 0x8fee, 0xc310, 0x78c2, 0x538c, 0x896f, 0x0, 0x1);
        gbc.writeMem(0x25fc, { 0x8d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8fee, gbc.sp());
        EXPECT(0x25fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01A9
        gbc.setState(0x19e2, 0xa005, 0x9e90, 0x7e20, 0x1b50, 0xb355, 0x1, 0x1);
        gbc.writeMem(0x19e2, { 0x8d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa005, gbc.sp());
        EXPECT(0x19e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01AA
        gbc.setState(0xe0a9, 0xb020, 0x2f0, 0x88e0, 0x300c, 0xf215, 0x1, 0x0);
        gbc.writeMem(0xe0a9, { 0x8d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb020, gbc.sp());
        EXPECT(0xe0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe0a9));
        // 8D 01AB
        gbc.setState(0x6116, 0x62d7, 0x2b0, 0xa4fd, 0xb15b, 0x4db9, 0x0, 0x0);
        gbc.writeMem(0x6116, { 0x8d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x62d7, gbc.sp());
        EXPECT(0x6117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01AC
        gbc.setState(0x2f71, 0xb6aa, 0x8560, 0x365, 0xe546, 0x7659, 0x1, 0x1);
        gbc.writeMem(0x2f71, { 0x8d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb6aa, gbc.sp());
        EXPECT(0x2f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01AD
        gbc.setState(0xa40a, 0x79e1, 0x17a0, 0x88d9, 0xe996, 0x4bc4, 0x1, 0x0);
        gbc.writeMem(0xa40a, { 0x8d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x79e1, gbc.sp());
        EXPECT(0xa40b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa40a));
        // 8D 01AE
        gbc.setState(0x3f8d, 0xf4df, 0xb8e0, 0xaf2d, 0x30b2, 0x6b3, 0x1, 0x1);
        gbc.writeMem(0x3f8d, { 0x8d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf4df, gbc.sp());
        EXPECT(0x3f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01AF
        gbc.setState(0xe1b3, 0xc743, 0xbe40, 0xe153, 0x5182, 0x1c43, 0x0, 0x0);
        gbc.writeMem(0xe1b3, { 0x8d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc743, gbc.sp());
        EXPECT(0xe1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe1b3));
        // 8D 01B0
        gbc.setState(0xddc8, 0x780, 0x8e10, 0x76c9, 0x8ec1, 0x8785, 0x0, 0x0);
        gbc.writeMem(0xddc8, { 0x8d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x780, gbc.sp());
        EXPECT(0xddc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xddc8));
        // 8D 01B1
        gbc.setState(0x63d, 0xd8, 0xe2c0, 0xea71, 0x7854, 0x4340, 0x1, 0x0);
        gbc.writeMem(0x63d, { 0x8d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd8, gbc.sp());
        EXPECT(0x63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01B2
        gbc.setState(0x22e8, 0x2151, 0x40a0, 0x3ab0, 0x34d, 0x7e8f, 0x0, 0x0);
        gbc.writeMem(0x22e8, { 0x8d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2151, gbc.sp());
        EXPECT(0x22e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01B3
        gbc.setState(0xb632, 0x9139, 0xb70, 0xc9cd, 0xdd88, 0x7d9d, 0x1, 0x0);
        gbc.writeMem(0xb632, { 0x8d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9139, gbc.sp());
        EXPECT(0xb633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb632));
        // 8D 01B4
        gbc.setState(0x862b, 0x5747, 0x15e0, 0xd65f, 0xc0ef, 0xc74d, 0x1, 0x0);
        gbc.writeMem(0x862b, { 0x8d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5747, gbc.sp());
        EXPECT(0x862c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x862b));
        // 8D 01B5
        gbc.setState(0x785e, 0x9b7f, 0x6c20, 0xf248, 0x1970, 0x2d36, 0x0, 0x1);
        gbc.writeMem(0x785e, { 0x8d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9b7f, gbc.sp());
        EXPECT(0x785f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01B6
        gbc.setState(0x8a37, 0x9dbe, 0x1f90, 0xe9c5, 0x19bc, 0xc58d, 0x1, 0x0);
        gbc.writeMem(0x8a37, { 0x8d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9dbe, gbc.sp());
        EXPECT(0x8a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8a37));
        // 8D 01B7
        gbc.setState(0xc377, 0x69b8, 0x6e70, 0x1022, 0x7d8d, 0x9153, 0x0, 0x1);
        gbc.writeMem(0xc377, { 0x8d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x69b8, gbc.sp());
        EXPECT(0xc378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc377));
        // 8D 01B8
        gbc.setState(0xc4d6, 0x604b, 0xac60, 0xf6ff, 0xaefa, 0x6b80, 0x0, 0x1);
        gbc.writeMem(0xc4d6, { 0x8d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x604b, gbc.sp());
        EXPECT(0xc4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc4d6));
        // 8D 01B9
        gbc.setState(0x499e, 0x2584, 0xc9c0, 0x9423, 0x84af, 0xe853, 0x0, 0x1);
        gbc.writeMem(0x499e, { 0x8d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2584, gbc.sp());
        EXPECT(0x499f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01BA
        gbc.setState(0x303a, 0x15fb, 0xfba0, 0xe79a, 0x9fd5, 0xa449, 0x0, 0x0);
        gbc.writeMem(0x303a, { 0x8d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x15fb, gbc.sp());
        EXPECT(0x303b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01BB
        gbc.setState(0x9e26, 0xc6ef, 0x530, 0x6975, 0xdd27, 0x79f0, 0x0, 0x0);
        gbc.writeMem(0x9e26, { 0x8d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc6ef, gbc.sp());
        EXPECT(0x9e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9e26));
        // 8D 01BC
        gbc.setState(0xd729, 0x744a, 0xcd80, 0x5986, 0xbbcf, 0xaea0, 0x1, 0x1);
        gbc.writeMem(0xd729, { 0x8d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x744a, gbc.sp());
        EXPECT(0xd72a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd729));
        // 8D 01BD
        gbc.setState(0x3a3d, 0x66b0, 0xe0b0, 0x5ba5, 0x4605, 0xdfc, 0x0, 0x0);
        gbc.writeMem(0x3a3d, { 0x8d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x66b0, gbc.sp());
        EXPECT(0x3a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01BE
        gbc.setState(0x3a01, 0x1147, 0x71e0, 0xa30d, 0x1379, 0xbb1, 0x0, 0x1);
        gbc.writeMem(0x3a01, { 0x8d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1147, gbc.sp());
        EXPECT(0x3a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01BF
        gbc.setState(0x3cc2, 0x7d66, 0x97e0, 0xe43, 0x7999, 0xc212, 0x0, 0x1);
        gbc.writeMem(0x3cc2, { 0x8d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7d66, gbc.sp());
        EXPECT(0x3cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01C0
        gbc.setState(0x3755, 0xd166, 0x7b00, 0xf4f3, 0xbefb, 0xac0a, 0x1, 0x0);
        gbc.writeMem(0x3755, { 0x8d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd166, gbc.sp());
        EXPECT(0x3756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01C1
        gbc.setState(0xa7b4, 0xc2bd, 0xa030, 0xe2b4, 0x37fe, 0x3f27, 0x0, 0x0);
        gbc.writeMem(0xa7b4, { 0x8d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc2bd, gbc.sp());
        EXPECT(0xa7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa7b4));
        // 8D 01C2
        gbc.setState(0x18d0, 0x6bbc, 0x1950, 0x3bf9, 0xfd52, 0x864d, 0x1, 0x1);
        gbc.writeMem(0x18d0, { 0x8d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6bbc, gbc.sp());
        EXPECT(0x18d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01C3
        gbc.setState(0x5d9, 0x748a, 0x28d0, 0x44e3, 0x1eef, 0x3047, 0x0, 0x0);
        gbc.writeMem(0x5d9, { 0x8d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x748a, gbc.sp());
        EXPECT(0x5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01C4
        gbc.setState(0xebfb, 0xad36, 0x8d00, 0x1d79, 0x8e6f, 0xd2d4, 0x1, 0x1);
        gbc.writeMem(0xebfb, { 0x8d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xad36, gbc.sp());
        EXPECT(0xebfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xebfb));
        // 8D 01C5
        gbc.setState(0x6637, 0xf0c, 0x1700, 0x43c2, 0xfb78, 0xb67c, 0x0, 0x0);
        gbc.writeMem(0x6637, { 0x8d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf0c, gbc.sp());
        EXPECT(0x6638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01C6
        gbc.setState(0x4fcd, 0x2632, 0x9860, 0x18b4, 0x79c6, 0xbdf, 0x0, 0x0);
        gbc.writeMem(0x4fcd, { 0x8d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2632, gbc.sp());
        EXPECT(0x4fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01C7
        gbc.setState(0x729d, 0xc368, 0x5580, 0x7265, 0x537e, 0x62b7, 0x0, 0x1);
        gbc.writeMem(0x729d, { 0x8d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc368, gbc.sp());
        EXPECT(0x729e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01C8
        gbc.setState(0x5f6b, 0x85d9, 0x9600, 0xdf1, 0x5505, 0x809a, 0x1, 0x1);
        gbc.writeMem(0x5f6b, { 0x8d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x85d9, gbc.sp());
        EXPECT(0x5f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01C9
        gbc.setState(0xbe0e, 0x9304, 0x2c70, 0xfa9c, 0xfd1c, 0x6d08, 0x1, 0x0);
        gbc.writeMem(0xbe0e, { 0x8d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9304, gbc.sp());
        EXPECT(0xbe0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbe0e));
        // 8D 01CA
        gbc.setState(0x5e28, 0xe2c8, 0xfba0, 0x4587, 0x162b, 0x6776, 0x0, 0x1);
        gbc.writeMem(0x5e28, { 0x8d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe2c8, gbc.sp());
        EXPECT(0x5e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01CB
        gbc.setState(0xc55e, 0xd36c, 0xb870, 0x60ec, 0x1047, 0x65dc, 0x0, 0x1);
        gbc.writeMem(0xc55e, { 0x8d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd36c, gbc.sp());
        EXPECT(0xc55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc55e));
        // 8D 01CC
        gbc.setState(0xbd03, 0x33ff, 0x47d0, 0x1fa, 0xd1ee, 0xa067, 0x1, 0x1);
        gbc.writeMem(0xbd03, { 0x8d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x33ff, gbc.sp());
        EXPECT(0xbd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbd03));
        // 8D 01CD
        gbc.setState(0x1de9, 0x1a37, 0x8980, 0x5858, 0xfde4, 0xfb88, 0x1, 0x1);
        gbc.writeMem(0x1de9, { 0x8d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1a37, gbc.sp());
        EXPECT(0x1dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01CE
        gbc.setState(0xdfde, 0xbf0f, 0xded0, 0xe943, 0x381b, 0x6d8d, 0x0, 0x0);
        gbc.writeMem(0xdfde, { 0x8d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbf0f, gbc.sp());
        EXPECT(0xdfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdfde));
        // 8D 01CF
        gbc.setState(0x4e92, 0x911a, 0x68a0, 0x3671, 0x48da, 0x8f7f, 0x0, 0x0);
        gbc.writeMem(0x4e92, { 0x8d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x911a, gbc.sp());
        EXPECT(0x4e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01D0
        gbc.setState(0xe34a, 0xffc2, 0x6960, 0x2781, 0xb1f2, 0xa4d7, 0x1, 0x0);
        gbc.writeMem(0xe34a, { 0x8d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xffc2, gbc.sp());
        EXPECT(0xe34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe34a));
        // 8D 01D1
        gbc.setState(0x4c36, 0x3970, 0xdb50, 0x2115, 0xf167, 0xad75, 0x1, 0x1);
        gbc.writeMem(0x4c36, { 0x8d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3970, gbc.sp());
        EXPECT(0x4c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01D2
        gbc.setState(0xd4fd, 0xc6b6, 0x11b0, 0x2052, 0xf377, 0xf8f0, 0x1, 0x0);
        gbc.writeMem(0xd4fd, { 0x8d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc6b6, gbc.sp());
        EXPECT(0xd4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd4fd));
        // 8D 01D4
        gbc.setState(0x69ab, 0x777a, 0xa790, 0xbb0f, 0x377a, 0xeb8a, 0x0, 0x0);
        gbc.writeMem(0x69ab, { 0x8d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x777a, gbc.sp());
        EXPECT(0x69ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01D5
        gbc.setState(0x3596, 0xa748, 0x5a80, 0x6f7b, 0x90ac, 0x33a4, 0x0, 0x0);
        gbc.writeMem(0x3596, { 0x8d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa748, gbc.sp());
        EXPECT(0x3597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01D6
        gbc.setState(0x167, 0x520e, 0xe0e0, 0x2f69, 0x3098, 0x1004, 0x0, 0x1);
        gbc.writeMem(0x167, { 0x8d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x520e, gbc.sp());
        EXPECT(0x168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01D7
        gbc.setState(0x95a7, 0x200b, 0x5b30, 0x1f03, 0x6daa, 0x52ed, 0x1, 0x0);
        gbc.writeMem(0x95a7, { 0x8d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x200b, gbc.sp());
        EXPECT(0x95a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x95a7));
        // 8D 01D8
        gbc.setState(0xa8f2, 0xcfaa, 0x86f0, 0x795b, 0x6204, 0x1f4e, 0x0, 0x1);
        gbc.writeMem(0xa8f2, { 0x8d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcfaa, gbc.sp());
        EXPECT(0xa8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa8f2));
        // 8D 01D9
        gbc.setState(0x6c21, 0xc489, 0x9f0, 0xe24f, 0x3764, 0xcb10, 0x0, 0x1);
        gbc.writeMem(0x6c21, { 0x8d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc489, gbc.sp());
        EXPECT(0x6c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01DA
        gbc.setState(0xeb8f, 0xa647, 0x3400, 0xc76c, 0xbadf, 0x3150, 0x1, 0x1);
        gbc.writeMem(0xeb8f, { 0x8d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa647, gbc.sp());
        EXPECT(0xeb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xeb8f));
        // 8D 01DB
        gbc.setState(0x6991, 0x3e46, 0x8c90, 0xa2e4, 0x15f3, 0xef9d, 0x1, 0x1);
        gbc.writeMem(0x6991, { 0x8d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3e46, gbc.sp());
        EXPECT(0x6992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01DC
        gbc.setState(0x548f, 0xa832, 0xfd40, 0x236, 0x7272, 0x86d5, 0x0, 0x0);
        gbc.writeMem(0x548f, { 0x8d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa832, gbc.sp());
        EXPECT(0x5490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01DD
        gbc.setState(0x89e, 0xdd2e, 0x8fe0, 0x6220, 0xae0f, 0xcc69, 0x1, 0x0);
        gbc.writeMem(0x89e, { 0x8d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdd2e, gbc.sp());
        EXPECT(0x89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01DE
        gbc.setState(0x4cdf, 0xd062, 0x9870, 0x169f, 0x7e4b, 0x72d8, 0x0, 0x1);
        gbc.writeMem(0x4cdf, { 0x8d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd062, gbc.sp());
        EXPECT(0x4ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01DF
        gbc.setState(0x25c7, 0xe93d, 0xc90, 0xa0ff, 0xf068, 0x7fe, 0x0, 0x1);
        gbc.writeMem(0x25c7, { 0x8d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe93d, gbc.sp());
        EXPECT(0x25c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01E0
        gbc.setState(0x1dff, 0x7196, 0xaee0, 0xfa73, 0x6b4, 0xa9a0, 0x0, 0x0);
        gbc.writeMem(0x1dff, { 0x8d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7196, gbc.sp());
        EXPECT(0x1e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01E1
        gbc.setState(0x5ccf, 0xa65, 0xebe0, 0x9550, 0xe011, 0x42fd, 0x0, 0x0);
        gbc.writeMem(0x5ccf, { 0x8d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa65, gbc.sp());
        EXPECT(0x5cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01E2
        gbc.setState(0xcb70, 0x3701, 0x2c0, 0xfa00, 0x1829, 0x3054, 0x1, 0x1);
        gbc.writeMem(0xcb70, { 0x8d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3701, gbc.sp());
        EXPECT(0xcb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcb70));
        // 8D 01E3
        gbc.setState(0x9730, 0x84fa, 0xbb60, 0x684a, 0x3fde, 0x5ed5, 0x0, 0x0);
        gbc.writeMem(0x9730, { 0x8d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x84fa, gbc.sp());
        EXPECT(0x9731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9730));
        // 8D 01E5
        gbc.setState(0x6ae4, 0x15a1, 0xe0c0, 0x23ce, 0xa18, 0xbfd1, 0x0, 0x0);
        gbc.writeMem(0x6ae4, { 0x8d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x15a1, gbc.sp());
        EXPECT(0x6ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01E6
        gbc.setState(0xb5d1, 0x55da, 0xfb30, 0xfaa8, 0x3640, 0x13f, 0x0, 0x1);
        gbc.writeMem(0xb5d1, { 0x8d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x55da, gbc.sp());
        EXPECT(0xb5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb5d1));
        // 8D 01E7
        gbc.setState(0xdbe4, 0xfb51, 0x9f90, 0x998e, 0x1ca6, 0x1560, 0x0, 0x0);
        gbc.writeMem(0xdbe4, { 0x8d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfb51, gbc.sp());
        EXPECT(0xdbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdbe4));
        // 8D 01E8
        gbc.setState(0xe1e2, 0x4468, 0xf600, 0x3050, 0xb205, 0xdb39, 0x0, 0x1);
        gbc.writeMem(0xe1e2, { 0x8d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4468, gbc.sp());
        EXPECT(0xe1e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe1e2));
        // 8D 01E9
        gbc.setState(0xafc7, 0x7685, 0x8f60, 0x10c2, 0x28c6, 0xc6ca, 0x1, 0x0);
        gbc.writeMem(0xafc7, { 0x8d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7685, gbc.sp());
        EXPECT(0xafc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xafc7));
        // 8D 01EA
        gbc.setState(0x49c5, 0x3ed1, 0x9320, 0xb7a7, 0x1937, 0x52a7, 0x1, 0x1);
        gbc.writeMem(0x49c5, { 0x8d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3ed1, gbc.sp());
        EXPECT(0x49c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01EB
        gbc.setState(0xdbce, 0xec6e, 0xbbb0, 0xfb2e, 0x4e17, 0x6fa7, 0x0, 0x1);
        gbc.writeMem(0xdbce, { 0x8d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xec6e, gbc.sp());
        EXPECT(0xdbcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdbce));
        // 8D 01EC
        gbc.setState(0x3a1, 0xbf51, 0x4d70, 0x5e1b, 0x23f, 0x8a48, 0x1, 0x1);
        gbc.writeMem(0x3a1, { 0x8d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbf51, gbc.sp());
        EXPECT(0x3a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01ED
        gbc.setState(0x4a78, 0x3cef, 0x99d0, 0xf73a, 0x1caf, 0xfe55, 0x0, 0x0);
        gbc.writeMem(0x4a78, { 0x8d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3cef, gbc.sp());
        EXPECT(0x4a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01EE
        gbc.setState(0xdf4b, 0x84aa, 0x7f50, 0x846e, 0x6b92, 0x2a4c, 0x1, 0x0);
        gbc.writeMem(0xdf4b, { 0x8d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x84aa, gbc.sp());
        EXPECT(0xdf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdf4b));
        // 8D 01EF
        gbc.setState(0x6372, 0xeefc, 0x10, 0x680c, 0x1a64, 0xaf3d, 0x1, 0x0);
        gbc.writeMem(0x6372, { 0x8d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xeefc, gbc.sp());
        EXPECT(0x6373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01F0
        gbc.setState(0x9f5c, 0x309c, 0xb130, 0x33fe, 0x5aea, 0x3fbd, 0x0, 0x0);
        gbc.writeMem(0x9f5c, { 0x8d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x309c, gbc.sp());
        EXPECT(0x9f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9f5c));
        // 8D 01F2
        gbc.setState(0xe77e, 0x3cab, 0x2350, 0x1e54, 0x641a, 0xe464, 0x1, 0x0);
        gbc.writeMem(0xe77e, { 0x8d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3cab, gbc.sp());
        EXPECT(0xe77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe77e));
        // 8D 01F3
        gbc.setState(0x1f49, 0x89b8, 0x7100, 0x1d75, 0x1b85, 0x6a8b, 0x1, 0x0);
        gbc.writeMem(0x1f49, { 0x8d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x89b8, gbc.sp());
        EXPECT(0x1f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01F4
        gbc.setState(0x11de, 0x4c17, 0xf2a0, 0x9042, 0x63b0, 0x6ed, 0x1, 0x1);
        gbc.writeMem(0x11de, { 0x8d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4c17, gbc.sp());
        EXPECT(0x11df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01F5
        gbc.setState(0xcccb, 0xa47, 0x3b10, 0xed6f, 0x95bd, 0x16a, 0x1, 0x1);
        gbc.writeMem(0xcccb, { 0x8d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa47, gbc.sp());
        EXPECT(0xcccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcccb));
        // 8D 01F6
        gbc.setState(0x1dd2, 0xb55d, 0x5e0, 0xcde, 0x1b8c, 0x38de, 0x0, 0x1);
        gbc.writeMem(0x1dd2, { 0x8d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb55d, gbc.sp());
        EXPECT(0x1dd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01F7
        gbc.setState(0x22f0, 0x303f, 0x5670, 0xdccd, 0x88ea, 0xa8b5, 0x1, 0x1);
        gbc.writeMem(0x22f0, { 0x8d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x303f, gbc.sp());
        EXPECT(0x22f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01F8
        gbc.setState(0x45bf, 0x6acc, 0x70a0, 0xd219, 0x8727, 0x2116, 0x0, 0x0);
        gbc.writeMem(0x45bf, { 0x8d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6acc, gbc.sp());
        EXPECT(0x45c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01F9
        gbc.setState(0x913, 0xd9dd, 0x81f0, 0xd326, 0xc2ca, 0xf553, 0x0, 0x1);
        gbc.writeMem(0x913, { 0x8d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd9dd, gbc.sp());
        EXPECT(0x914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 01FA
        gbc.setState(0x2d46, 0xd5c6, 0xddf0, 0x3841, 0x2ae1, 0xb0ff, 0x0, 0x0);
        gbc.writeMem(0x2d46, { 0x8d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd5c6, gbc.sp());
        EXPECT(0x2d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01FB
        gbc.setState(0x6625, 0x8d7f, 0xd730, 0x2d48, 0xa38e, 0x28bf, 0x0, 0x0);
        gbc.writeMem(0x6625, { 0x8d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8d7f, gbc.sp());
        EXPECT(0x6626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 01FC
        gbc.setState(0x9d4f, 0x89f6, 0x2450, 0xd26c, 0xbfb6, 0xf937, 0x0, 0x1);
        gbc.writeMem(0x9d4f, { 0x8d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x89f6, gbc.sp());
        EXPECT(0x9d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9d4f));
        // 8D 01FD
        gbc.setState(0x8e4a, 0x5bda, 0xf040, 0x67a5, 0x8fbe, 0xbff, 0x0, 0x1);
        gbc.writeMem(0x8e4a, { 0x8d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5bda, gbc.sp());
        EXPECT(0x8e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8e4a));
        // 8D 01FE
        gbc.setState(0xaa5a, 0x28, 0xd1b0, 0xfd7b, 0x3df, 0x5fa4, 0x1, 0x1);
        gbc.writeMem(0xaa5a, { 0x8d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x28, gbc.sp());
        EXPECT(0xaa5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xaa5a));
        // 8D 01FF
        gbc.setState(0x1b28, 0xa8fe, 0x7330, 0xf1f7, 0x7280, 0x810, 0x1, 0x0);
        gbc.writeMem(0x1b28, { 0x8d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa8fe, gbc.sp());
        EXPECT(0x1b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0200
        gbc.setState(0xc937, 0x3b06, 0xdfe0, 0x7b75, 0xbb2e, 0xb1be, 0x0, 0x1);
        gbc.writeMem(0xc937, { 0x8d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3b06, gbc.sp());
        EXPECT(0xc938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc937));
        // 8D 0201
        gbc.setState(0xba95, 0x2aa5, 0xb630, 0x5e2, 0x1cc5, 0x3f1c, 0x0, 0x0);
        gbc.writeMem(0xba95, { 0x8d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2aa5, gbc.sp());
        EXPECT(0xba96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xba95));
        // 8D 0202
        gbc.setState(0xe4b8, 0x6f7d, 0x7250, 0x8a57, 0xc523, 0x90e3, 0x0, 0x1);
        gbc.writeMem(0xe4b8, { 0x8d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6f7d, gbc.sp());
        EXPECT(0xe4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe4b8));
        // 8D 0203
        gbc.setState(0x5c01, 0x949e, 0x4650, 0x7faf, 0xc97d, 0xe4f8, 0x1, 0x1);
        gbc.writeMem(0x5c01, { 0x8d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x949e, gbc.sp());
        EXPECT(0x5c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0204
        gbc.setState(0x9189, 0x7614, 0x4eb0, 0x62e3, 0x8e16, 0x6fa2, 0x0, 0x1);
        gbc.writeMem(0x9189, { 0x8d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7614, gbc.sp());
        EXPECT(0x918a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9189));
        // 8D 0205
        gbc.setState(0x8cb7, 0x32bf, 0xd830, 0x3595, 0x1d, 0x6cdf, 0x1, 0x1);
        gbc.writeMem(0x8cb7, { 0x8d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x32bf, gbc.sp());
        EXPECT(0x8cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8cb7));
        // 8D 0206
        gbc.setState(0xda50, 0xb0ad, 0x4ad0, 0x90e5, 0xf672, 0x3edd, 0x0, 0x1);
        gbc.writeMem(0xda50, { 0x8d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb0ad, gbc.sp());
        EXPECT(0xda51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xda50));
        // 8D 0207
        gbc.setState(0xb57e, 0xad9a, 0x94b0, 0xb449, 0x84f3, 0x2464, 0x1, 0x0);
        gbc.writeMem(0xb57e, { 0x8d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xad9a, gbc.sp());
        EXPECT(0xb57f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb57e));
        // 8D 0208
        gbc.setState(0x5b09, 0xda85, 0xe4a0, 0xc844, 0x8b1e, 0x14f8, 0x1, 0x1);
        gbc.writeMem(0x5b09, { 0x8d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xda85, gbc.sp());
        EXPECT(0x5b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0209
        gbc.setState(0xb2db, 0x53d3, 0xf40, 0xcd0, 0x28e6, 0x8f58, 0x0, 0x0);
        gbc.writeMem(0xb2db, { 0x8d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x53d3, gbc.sp());
        EXPECT(0xb2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb2db));
        // 8D 020A
        gbc.setState(0x6356, 0x9fa5, 0xa670, 0xe5cc, 0xbb11, 0xe487, 0x0, 0x0);
        gbc.writeMem(0x6356, { 0x8d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9fa5, gbc.sp());
        EXPECT(0x6357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 020C
        gbc.setState(0x5951, 0x6fc0, 0xe200, 0x136e, 0x325, 0x4562, 0x0, 0x1);
        gbc.writeMem(0x5951, { 0x8d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6fc0, gbc.sp());
        EXPECT(0x5952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 020D
        gbc.setState(0xd7e6, 0x61eb, 0x2c30, 0xb441, 0xefaf, 0xccea, 0x0, 0x0);
        gbc.writeMem(0xd7e6, { 0x8d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x61eb, gbc.sp());
        EXPECT(0xd7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd7e6));
        // 8D 020E
        gbc.setState(0xb4a3, 0xa899, 0xc480, 0x9c1c, 0xfb03, 0xaef7, 0x0, 0x0);
        gbc.writeMem(0xb4a3, { 0x8d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa899, gbc.sp());
        EXPECT(0xb4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb4a3));
        // 8D 020F
        gbc.setState(0x7f08, 0xf253, 0x7f50, 0x3e69, 0x8fe3, 0xf9cb, 0x1, 0x1);
        gbc.writeMem(0x7f08, { 0x8d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf253, gbc.sp());
        EXPECT(0x7f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0210
        gbc.setState(0x5a2, 0xf598, 0xef90, 0xbe50, 0xce6a, 0x9532, 0x1, 0x0);
        gbc.writeMem(0x5a2, { 0x8d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf598, gbc.sp());
        EXPECT(0x5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0212
        gbc.setState(0x1aa2, 0x2977, 0x2ae0, 0xfb8f, 0x12f, 0x11ff, 0x0, 0x0);
        gbc.writeMem(0x1aa2, { 0x8d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2977, gbc.sp());
        EXPECT(0x1aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0213
        gbc.setState(0x9ace, 0xaf22, 0xbf80, 0x2891, 0xdc4c, 0x37c9, 0x0, 0x0);
        gbc.writeMem(0x9ace, { 0x8d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xaf22, gbc.sp());
        EXPECT(0x9acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9ace));
        // 8D 0214
        gbc.setState(0x4858, 0xc81, 0x84d0, 0xc1bb, 0xb8ca, 0xe15a, 0x0, 0x1);
        gbc.writeMem(0x4858, { 0x8d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc81, gbc.sp());
        EXPECT(0x4859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0215
        gbc.setState(0x75ea, 0x50a6, 0x4f40, 0xc489, 0x3415, 0xa230, 0x0, 0x0);
        gbc.writeMem(0x75ea, { 0x8d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x50a6, gbc.sp());
        EXPECT(0x75eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0216
        gbc.setState(0x83fc, 0xbaa, 0xf340, 0xad82, 0x4dc6, 0x1c9a, 0x0, 0x1);
        gbc.writeMem(0x83fc, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbaa, gbc.sp());
        EXPECT(0x83fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x83fc));
        // 8D 0217
        gbc.setState(0x8567, 0x4e19, 0xbc80, 0x744, 0x8def, 0x837a, 0x1, 0x0);
        gbc.writeMem(0x8567, { 0x8d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4e19, gbc.sp());
        EXPECT(0x8568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8567));
        // 8D 0218
        gbc.setState(0x8038, 0xdc7a, 0x23d0, 0x8ad0, 0xbb76, 0x90bb, 0x1, 0x0);
        gbc.writeMem(0x8038, { 0x8d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdc7a, gbc.sp());
        EXPECT(0x8039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8038));
        // 8D 0219
        gbc.setState(0xd22c, 0x16ec, 0xf0a0, 0x1af2, 0x92c5, 0x261d, 0x1, 0x1);
        gbc.writeMem(0xd22c, { 0x8d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x16ec, gbc.sp());
        EXPECT(0xd22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd22c));
        // 8D 021A
        gbc.setState(0x52bc, 0xb03, 0xcb80, 0xeb64, 0xf223, 0x512e, 0x1, 0x0);
        gbc.writeMem(0x52bc, { 0x8d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb03, gbc.sp());
        EXPECT(0x52bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 021B
        gbc.setState(0xaf78, 0x6e4d, 0xe720, 0xce7f, 0x2fab, 0xaaf0, 0x1, 0x1);
        gbc.writeMem(0xaf78, { 0x8d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6e4d, gbc.sp());
        EXPECT(0xaf79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xaf78));
        // 8D 021C
        gbc.setState(0x8938, 0xfbdf, 0x4110, 0x7c3e, 0xce88, 0x6488, 0x0, 0x0);
        gbc.writeMem(0x8938, { 0x8d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfbdf, gbc.sp());
        EXPECT(0x8939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8938));
        // 8D 021D
        gbc.setState(0x6d7f, 0x64e2, 0xeeb0, 0xe046, 0x5f4e, 0x234e, 0x0, 0x0);
        gbc.writeMem(0x6d7f, { 0x8d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x64e2, gbc.sp());
        EXPECT(0x6d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 021E
        gbc.setState(0x598b, 0xb2c5, 0xac10, 0x6608, 0x529f, 0xbd96, 0x1, 0x1);
        gbc.writeMem(0x598b, { 0x8d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb2c5, gbc.sp());
        EXPECT(0x598c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 021F
        gbc.setState(0x526f, 0xbbf1, 0xdea0, 0x95f0, 0x28f1, 0x4591, 0x0, 0x1);
        gbc.writeMem(0x526f, { 0x8d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbbf1, gbc.sp());
        EXPECT(0x5270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0220
        gbc.setState(0x5c4a, 0x270a, 0x5690, 0xec06, 0xf023, 0xf69d, 0x1, 0x1);
        gbc.writeMem(0x5c4a, { 0x8d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x270a, gbc.sp());
        EXPECT(0x5c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0221
        gbc.setState(0x4694, 0x6bc0, 0xa550, 0xb507, 0xa00c, 0x8208, 0x0, 0x1);
        gbc.writeMem(0x4694, { 0x8d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6bc0, gbc.sp());
        EXPECT(0x4695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0222
        gbc.setState(0xa046, 0x5c15, 0x5f40, 0x4317, 0x4031, 0x94d6, 0x0, 0x0);
        gbc.writeMem(0xa046, { 0x8d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5c15, gbc.sp());
        EXPECT(0xa047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa046));
        // 8D 0223
        gbc.setState(0xa077, 0x3dc5, 0xf510, 0xaeeb, 0xa70c, 0x4a82, 0x1, 0x0);
        gbc.writeMem(0xa077, { 0x8d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3dc5, gbc.sp());
        EXPECT(0xa078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa077));
        // 8D 0224
        gbc.setState(0x81e, 0x9b3d, 0x970, 0x595f, 0xf7c8, 0xa5ca, 0x0, 0x0);
        gbc.writeMem(0x81e, { 0x8d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9b3d, gbc.sp());
        EXPECT(0x81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0225
        gbc.setState(0xc705, 0xb352, 0xf230, 0x5207, 0x698a, 0x19a, 0x1, 0x0);
        gbc.writeMem(0xc705, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb352, gbc.sp());
        EXPECT(0xc706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc705));
        // 8D 0226
        gbc.setState(0x88d1, 0xe55a, 0x6f10, 0xc328, 0xf0ba, 0x9345, 0x0, 0x0);
        gbc.writeMem(0x88d1, { 0x8d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe55a, gbc.sp());
        EXPECT(0x88d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x88d1));
        // 8D 0227
        gbc.setState(0x9052, 0xdd35, 0x9fc0, 0xe0ec, 0x6eff, 0x53bd, 0x0, 0x0);
        gbc.writeMem(0x9052, { 0x8d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdd35, gbc.sp());
        EXPECT(0x9053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9052));
        // 8D 0228
        gbc.setState(0xd5fd, 0xa114, 0xb550, 0x917f, 0xba88, 0x556c, 0x0, 0x1);
        gbc.writeMem(0xd5fd, { 0x8d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa114, gbc.sp());
        EXPECT(0xd5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd5fd));
        // 8D 0229
        gbc.setState(0x3fc7, 0x9e45, 0xe410, 0x668d, 0x8a04, 0x6a7e, 0x0, 0x0);
        gbc.writeMem(0x3fc7, { 0x8d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9e45, gbc.sp());
        EXPECT(0x3fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 022A
        gbc.setState(0x29ae, 0x237c, 0x4610, 0xba37, 0xe50b, 0x925c, 0x1, 0x0);
        gbc.writeMem(0x29ae, { 0x8d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x237c, gbc.sp());
        EXPECT(0x29af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 022B
        gbc.setState(0xafc3, 0xb261, 0xa050, 0xec75, 0xda37, 0x3c6a, 0x0, 0x1);
        gbc.writeMem(0xafc3, { 0x8d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb261, gbc.sp());
        EXPECT(0xafc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xafc3));
        // 8D 022C
        gbc.setState(0xde55, 0xe118, 0x7d30, 0xc3f5, 0x96f7, 0x5b2e, 0x0, 0x0);
        gbc.writeMem(0xde55, { 0x8d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe118, gbc.sp());
        EXPECT(0xde56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xde55));
        // 8D 022D
        gbc.setState(0x6512, 0xc75, 0x25b0, 0x4cd9, 0xf09, 0x12f7, 0x0, 0x0);
        gbc.writeMem(0x6512, { 0x8d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc75, gbc.sp());
        EXPECT(0x6513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 022E
        gbc.setState(0xcc87, 0xe090, 0x2c70, 0xb559, 0xb8dc, 0x61b5, 0x0, 0x1);
        gbc.writeMem(0xcc87, { 0x8d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe090, gbc.sp());
        EXPECT(0xcc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcc87));
        // 8D 022F
        gbc.setState(0x9fb3, 0x9c62, 0xa220, 0xcb0, 0xe4a5, 0xe8e7, 0x1, 0x1);
        gbc.writeMem(0x9fb3, { 0x8d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9c62, gbc.sp());
        EXPECT(0x9fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9fb3));
        // 8D 0230
        gbc.setState(0xed68, 0xf42f, 0x90c0, 0x684d, 0x2b0c, 0x5f12, 0x1, 0x1);
        gbc.writeMem(0xed68, { 0x8d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf42f, gbc.sp());
        EXPECT(0xed69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xed68));
        // 8D 0231
        gbc.setState(0xde0c, 0x11c0, 0xca10, 0xf2ad, 0x3a59, 0x44fc, 0x1, 0x0);
        gbc.writeMem(0xde0c, { 0x8d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x11c0, gbc.sp());
        EXPECT(0xde0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xde0c));
        // 8D 0232
        gbc.setState(0x9d9e, 0xed70, 0x3ab0, 0xea65, 0xaf1a, 0x8e21, 0x0, 0x1);
        gbc.writeMem(0x9d9e, { 0x8d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xed70, gbc.sp());
        EXPECT(0x9d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9d9e));
        // 8D 0233
        gbc.setState(0x4bdc, 0x8b99, 0x7790, 0x7041, 0x5d3f, 0x873d, 0x0, 0x1);
        gbc.writeMem(0x4bdc, { 0x8d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8b99, gbc.sp());
        EXPECT(0x4bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0234
        gbc.setState(0x552, 0xff5a, 0xa280, 0xcce5, 0x84ee, 0xcad8, 0x0, 0x0);
        gbc.writeMem(0x552, { 0x8d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xff5a, gbc.sp());
        EXPECT(0x553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0235
        gbc.setState(0x1cbf, 0x8b69, 0xbd60, 0x89bd, 0xdf05, 0x7b10, 0x1, 0x0);
        gbc.writeMem(0x1cbf, { 0x8d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8b69, gbc.sp());
        EXPECT(0x1cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0236
        gbc.setState(0xc076, 0x813f, 0xec40, 0xabf7, 0xa1d2, 0xbbf, 0x1, 0x0);
        gbc.writeMem(0xc076, { 0x8d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x813f, gbc.sp());
        EXPECT(0xc077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc076));
        // 8D 0237
        gbc.setState(0x9389, 0x17a, 0x830, 0x7625, 0x9e81, 0x7884, 0x1, 0x0);
        gbc.writeMem(0x9389, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x17a, gbc.sp());
        EXPECT(0x938a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9389));
        // 8D 0238
        gbc.setState(0xbfc0, 0x4e14, 0x55a0, 0x94d4, 0x289b, 0x271c, 0x1, 0x0);
        gbc.writeMem(0xbfc0, { 0x8d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4e14, gbc.sp());
        EXPECT(0xbfc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbfc0));
        // 8D 0239
        gbc.setState(0xd5b5, 0x7676, 0x7b30, 0x32, 0x4dd4, 0x1f9f, 0x1, 0x1);
        gbc.writeMem(0xd5b5, { 0x8d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7676, gbc.sp());
        EXPECT(0xd5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd5b5));
        // 8D 023A
        gbc.setState(0xb86d, 0x4a7, 0xe6f0, 0x6e59, 0xcda0, 0x8707, 0x1, 0x0);
        gbc.writeMem(0xb86d, { 0x8d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4a7, gbc.sp());
        EXPECT(0xb86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb86d));
        // 8D 023B
        gbc.setState(0xc727, 0xc33c, 0x8a80, 0x1df3, 0x675a, 0x28b0, 0x1, 0x0);
        gbc.writeMem(0xc727, { 0x8d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc33c, gbc.sp());
        EXPECT(0xc728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc727));
        // 8D 023C
        gbc.setState(0x6a61, 0x5bc8, 0xe9b0, 0x962d, 0xba20, 0x470d, 0x0, 0x1);
        gbc.writeMem(0x6a61, { 0x8d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5bc8, gbc.sp());
        EXPECT(0x6a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 023E
        gbc.setState(0x9758, 0xac5f, 0x6950, 0xffc7, 0xeee1, 0x3199, 0x0, 0x0);
        gbc.writeMem(0x9758, { 0x8d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xac5f, gbc.sp());
        EXPECT(0x9759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9758));
        // 8D 023F
        gbc.setState(0xc221, 0xd0cf, 0xef60, 0xfbc4, 0xdc17, 0x490c, 0x1, 0x1);
        gbc.writeMem(0xc221, { 0x8d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd0cf, gbc.sp());
        EXPECT(0xc222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc221));
        // 8D 0240
        gbc.setState(0xa17, 0x5b11, 0x53f0, 0x38f, 0xdcbc, 0xe660, 0x1, 0x0);
        gbc.writeMem(0xa17, { 0x8d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5b11, gbc.sp());
        EXPECT(0xa18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0241
        gbc.setState(0x621f, 0x1771, 0x7d70, 0xaaec, 0xa1f2, 0x1eac, 0x1, 0x0);
        gbc.writeMem(0x621f, { 0x8d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1771, gbc.sp());
        EXPECT(0x6220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0242
        gbc.setState(0x2fe5, 0x5c24, 0xa730, 0xc50c, 0x486d, 0xfdde, 0x0, 0x1);
        gbc.writeMem(0x2fe5, { 0x8d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5c24, gbc.sp());
        EXPECT(0x2fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0243
        gbc.setState(0xca8c, 0x1385, 0x7b20, 0xb1e0, 0x962a, 0x4997, 0x0, 0x1);
        gbc.writeMem(0xca8c, { 0x8d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1385, gbc.sp());
        EXPECT(0xca8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xca8c));
        // 8D 0244
        gbc.setState(0xb6f4, 0xca13, 0x4110, 0xaffe, 0x628c, 0x90cf, 0x0, 0x1);
        gbc.writeMem(0xb6f4, { 0x8d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xca13, gbc.sp());
        EXPECT(0xb6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb6f4));
        // 8D 0245
        gbc.setState(0x1d78, 0x73f7, 0xd7c0, 0xf631, 0x8aa4, 0x9d5b, 0x0, 0x1);
        gbc.writeMem(0x1d78, { 0x8d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x73f7, gbc.sp());
        EXPECT(0x1d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0246
        gbc.setState(0xa997, 0xe102, 0x31e0, 0x5247, 0x9ea1, 0x4667, 0x0, 0x0);
        gbc.writeMem(0xa997, { 0x8d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe102, gbc.sp());
        EXPECT(0xa998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa997));
        // 8D 0247
        gbc.setState(0xe79e, 0x5bd9, 0x4320, 0x44d7, 0x30b6, 0xa747, 0x1, 0x1);
        gbc.writeMem(0xe79e, { 0x8d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5bd9, gbc.sp());
        EXPECT(0xe79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe79e));
        // 8D 0248
        gbc.setState(0x9034, 0x14fc, 0x6c20, 0x6c83, 0xf455, 0xe9ec, 0x0, 0x1);
        gbc.writeMem(0x9034, { 0x8d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x14fc, gbc.sp());
        EXPECT(0x9035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9034));
        // 8D 0249
        gbc.setState(0xcac9, 0xa4c, 0x2520, 0xaa68, 0x2c40, 0x389c, 0x1, 0x0);
        gbc.writeMem(0xcac9, { 0x8d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa4c, gbc.sp());
        EXPECT(0xcaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcac9));
        // 8D 024A
        gbc.setState(0x7d10, 0x74fa, 0xb070, 0x788f, 0x2bb8, 0x1229, 0x0, 0x0);
        gbc.writeMem(0x7d10, { 0x8d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x74fa, gbc.sp());
        EXPECT(0x7d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 024B
        gbc.setState(0xbf0b, 0x2f40, 0x26a0, 0xa5d6, 0xf9c1, 0x3d01, 0x1, 0x1);
        gbc.writeMem(0xbf0b, { 0x8d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2f40, gbc.sp());
        EXPECT(0xbf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbf0b));
        // 8D 024C
        gbc.setState(0x757d, 0xbfa0, 0xbc10, 0xd7d4, 0x9881, 0x65f6, 0x1, 0x0);
        gbc.writeMem(0x757d, { 0x8d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbfa0, gbc.sp());
        EXPECT(0x757e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 024E
        gbc.setState(0xd2d3, 0xf2a9, 0x5170, 0x92f8, 0xccb1, 0x2603, 0x1, 0x1);
        gbc.writeMem(0xd2d3, { 0x8d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf2a9, gbc.sp());
        EXPECT(0xd2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd2d3));
        // 8D 024F
        gbc.setState(0xaadf, 0x85b7, 0x3540, 0x7b23, 0x1316, 0x9845, 0x0, 0x1);
        gbc.writeMem(0xaadf, { 0x8d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x85b7, gbc.sp());
        EXPECT(0xaae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xaadf));
        // 8D 0250
        gbc.setState(0xaddb, 0xb971, 0x1670, 0xa760, 0x2cc1, 0x71f, 0x0, 0x0);
        gbc.writeMem(0xaddb, { 0x8d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb971, gbc.sp());
        EXPECT(0xaddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xaddb));
        // 8D 0251
        gbc.setState(0xa4c8, 0x8477, 0xfa00, 0xabb4, 0x348, 0x3b32, 0x1, 0x0);
        gbc.writeMem(0xa4c8, { 0x8d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8477, gbc.sp());
        EXPECT(0xa4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa4c8));
        // 8D 0252
        gbc.setState(0x6473, 0x41b7, 0x8b00, 0xe628, 0xda26, 0xc1e8, 0x1, 0x0);
        gbc.writeMem(0x6473, { 0x8d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x41b7, gbc.sp());
        EXPECT(0x6474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0253
        gbc.setState(0xdaf2, 0xa300, 0x4190, 0x9e70, 0x4f4d, 0xe45f, 0x1, 0x1);
        gbc.writeMem(0xdaf2, { 0x8d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa300, gbc.sp());
        EXPECT(0xdaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdaf2));
        // 8D 0254
        gbc.setState(0xace, 0xf556, 0xf800, 0xa972, 0x951, 0x2a1e, 0x1, 0x0);
        gbc.writeMem(0xace, { 0x8d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf556, gbc.sp());
        EXPECT(0xacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0255
        gbc.setState(0x83c9, 0x9e6, 0x2a0, 0xd76a, 0xf3ab, 0x7873, 0x1, 0x1);
        gbc.writeMem(0x83c9, { 0x8d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9e6, gbc.sp());
        EXPECT(0x83ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x83c9));
        // 8D 0257
        gbc.setState(0x5615, 0xd6be, 0xd3f0, 0x3016, 0x8414, 0xfb05, 0x0, 0x1);
        gbc.writeMem(0x5615, { 0x8d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd6be, gbc.sp());
        EXPECT(0x5616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0258
        gbc.setState(0x454a, 0x5f30, 0xfab0, 0xcddf, 0xd9c0, 0x9a33, 0x0, 0x0);
        gbc.writeMem(0x454a, { 0x8d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5f30, gbc.sp());
        EXPECT(0x454b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0259
        gbc.setState(0x329c, 0x4895, 0x28c0, 0x4678, 0xe1e8, 0xc719, 0x1, 0x0);
        gbc.writeMem(0x329c, { 0x8d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4895, gbc.sp());
        EXPECT(0x329d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 025A
        gbc.setState(0x69c5, 0x4cd0, 0x870, 0xb8f9, 0xa3a3, 0x538f, 0x0, 0x1);
        gbc.writeMem(0x69c5, { 0x8d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4cd0, gbc.sp());
        EXPECT(0x69c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 025B
        gbc.setState(0x12a8, 0x525c, 0x4760, 0x4493, 0xf2ac, 0x6a11, 0x0, 0x1);
        gbc.writeMem(0x12a8, { 0x8d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x525c, gbc.sp());
        EXPECT(0x12a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 025C
        gbc.setState(0x793, 0x155d, 0xb490, 0xeaf5, 0x9f28, 0xbfbb, 0x1, 0x1);
        gbc.writeMem(0x793, { 0x8d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x155d, gbc.sp());
        EXPECT(0x794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 025D
        gbc.setState(0x54d6, 0x30f3, 0x4050, 0x9813, 0xfa20, 0x7cbe, 0x0, 0x0);
        gbc.writeMem(0x54d6, { 0x8d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x30f3, gbc.sp());
        EXPECT(0x54d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 025E
        gbc.setState(0x94f0, 0x765b, 0xee70, 0xd946, 0x241b, 0xa36a, 0x1, 0x0);
        gbc.writeMem(0x94f0, { 0x8d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x765b, gbc.sp());
        EXPECT(0x94f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x94f0));
        // 8D 025F
        gbc.setState(0x6199, 0x6310, 0x8250, 0x2276, 0x459a, 0x8084, 0x0, 0x1);
        gbc.writeMem(0x6199, { 0x8d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6310, gbc.sp());
        EXPECT(0x619a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0260
        gbc.setState(0x72b9, 0x7227, 0x5610, 0x3f01, 0x451f, 0xcdcb, 0x1, 0x0);
        gbc.writeMem(0x72b9, { 0x8d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7227, gbc.sp());
        EXPECT(0x72ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0261
        gbc.setState(0x433f, 0x5c2d, 0x6000, 0xa9e6, 0x452d, 0x9a50, 0x1, 0x1);
        gbc.writeMem(0x433f, { 0x8d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5c2d, gbc.sp());
        EXPECT(0x4340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0262
        gbc.setState(0xc42a, 0x4000, 0xc360, 0xc224, 0x2051, 0x19af, 0x0, 0x1);
        gbc.writeMem(0xc42a, { 0x8d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4000, gbc.sp());
        EXPECT(0xc42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc42a));
        // 8D 0263
        gbc.setState(0x4362, 0xf871, 0xa850, 0x5d75, 0x285c, 0xa1d0, 0x1, 0x1);
        gbc.writeMem(0x4362, { 0x8d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf871, gbc.sp());
        EXPECT(0x4363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0264
        gbc.setState(0x267c, 0x7b21, 0x3700, 0x6148, 0xa53f, 0xeae5, 0x1, 0x1);
        gbc.writeMem(0x267c, { 0x8d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7b21, gbc.sp());
        EXPECT(0x267d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0266
        gbc.setState(0xd603, 0x4794, 0xa880, 0x970a, 0x40e2, 0xa761, 0x0, 0x0);
        gbc.writeMem(0xd603, { 0x8d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4794, gbc.sp());
        EXPECT(0xd604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd603));
        // 8D 0267
        gbc.setState(0xda1c, 0xc667, 0xeeb0, 0x394b, 0x9a4f, 0xb580, 0x0, 0x1);
        gbc.writeMem(0xda1c, { 0x8d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc667, gbc.sp());
        EXPECT(0xda1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xda1c));
        // 8D 0269
        gbc.setState(0x413c, 0xca81, 0xe2b0, 0x55d4, 0xb094, 0x70d, 0x0, 0x0);
        gbc.writeMem(0x413c, { 0x8d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xca81, gbc.sp());
        EXPECT(0x413d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 026A
        gbc.setState(0x75ca, 0x9237, 0xa880, 0xbf9e, 0x1f80, 0xa314, 0x1, 0x1);
        gbc.writeMem(0x75ca, { 0x8d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9237, gbc.sp());
        EXPECT(0x75cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 026B
        gbc.setState(0xd12e, 0x205c, 0x4460, 0xae73, 0x4e0b, 0x4935, 0x0, 0x1);
        gbc.writeMem(0xd12e, { 0x8d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x205c, gbc.sp());
        EXPECT(0xd12f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd12e));
        // 8D 026D
        gbc.setState(0xa611, 0x3f4e, 0x7b50, 0x9950, 0x4171, 0x48e1, 0x0, 0x0);
        gbc.writeMem(0xa611, { 0x8d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3f4e, gbc.sp());
        EXPECT(0xa612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa611));
        // 8D 026E
        gbc.setState(0xdabd, 0x2f82, 0xd1e0, 0x9488, 0x58e, 0x7df6, 0x0, 0x1);
        gbc.writeMem(0xdabd, { 0x8d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2f82, gbc.sp());
        EXPECT(0xdabe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdabd));
        // 8D 026F
        gbc.setState(0x1fba, 0xdae, 0xeac0, 0xfc81, 0x7985, 0xd7f, 0x0, 0x1);
        gbc.writeMem(0x1fba, { 0x8d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdae, gbc.sp());
        EXPECT(0x1fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0270
        gbc.setState(0x935a, 0x2562, 0xa9e0, 0x474b, 0x8b6, 0x8921, 0x0, 0x0);
        gbc.writeMem(0x935a, { 0x8d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2562, gbc.sp());
        EXPECT(0x935b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x935a));
        // 8D 0271
        gbc.setState(0xaee4, 0xb6aa, 0xe9f0, 0x2da8, 0xdb30, 0x3498, 0x1, 0x0);
        gbc.writeMem(0xaee4, { 0x8d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb6aa, gbc.sp());
        EXPECT(0xaee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xaee4));
        // 8D 0272
        gbc.setState(0x8e8d, 0x673e, 0x2e20, 0xde18, 0x5f34, 0xff6b, 0x1, 0x0);
        gbc.writeMem(0x8e8d, { 0x8d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x673e, gbc.sp());
        EXPECT(0x8e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8e8d));
        // 8D 0273
        gbc.setState(0x2a43, 0x63ce, 0xa740, 0x5399, 0x58b1, 0xe475, 0x1, 0x1);
        gbc.writeMem(0x2a43, { 0x8d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x63ce, gbc.sp());
        EXPECT(0x2a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0274
        gbc.setState(0x186, 0xe13e, 0xed50, 0x5e40, 0x7b03, 0x8e2c, 0x0, 0x0);
        gbc.writeMem(0x186, { 0x8d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0x187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0275
        gbc.setState(0xdcf, 0xc0be, 0x3770, 0x2600, 0x173e, 0x30b0, 0x1, 0x1);
        gbc.writeMem(0xdcf, { 0x8d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc0be, gbc.sp());
        EXPECT(0xdd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0276
        gbc.setState(0x5179, 0xc46c, 0xf8d0, 0x48ea, 0x6150, 0x5758, 0x1, 0x0);
        gbc.writeMem(0x5179, { 0x8d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc46c, gbc.sp());
        EXPECT(0x517a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0277
        gbc.setState(0x57a4, 0x11f3, 0xbc20, 0xe5a5, 0xf1, 0xea5b, 0x0, 0x1);
        gbc.writeMem(0x57a4, { 0x8d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x11f3, gbc.sp());
        EXPECT(0x57a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0278
        gbc.setState(0xc4c6, 0xa0a5, 0xa710, 0x1ea3, 0x3aab, 0xd7fb, 0x0, 0x1);
        gbc.writeMem(0xc4c6, { 0x8d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa0a5, gbc.sp());
        EXPECT(0xc4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc4c6));
        // 8D 0279
        gbc.setState(0x4f45, 0x4c5f, 0xfd50, 0x47dd, 0xbc4a, 0x52e3, 0x0, 0x1);
        gbc.writeMem(0x4f45, { 0x8d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4c5f, gbc.sp());
        EXPECT(0x4f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 027C
        gbc.setState(0x8a4a, 0x9c5a, 0x68b0, 0x627e, 0xa36e, 0xe9ce, 0x1, 0x1);
        gbc.writeMem(0x8a4a, { 0x8d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9c5a, gbc.sp());
        EXPECT(0x8a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8a4a));
        // 8D 027D
        gbc.setState(0x5d5d, 0x39d4, 0x7ca0, 0x502c, 0x3393, 0xc5ce, 0x1, 0x1);
        gbc.writeMem(0x5d5d, { 0x8d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x39d4, gbc.sp());
        EXPECT(0x5d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 027E
        gbc.setState(0x3cb1, 0xbbfa, 0xfdf0, 0x1437, 0x68b4, 0xec3, 0x1, 0x1);
        gbc.writeMem(0x3cb1, { 0x8d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbbfa, gbc.sp());
        EXPECT(0x3cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 027F
        gbc.setState(0x8a25, 0x3187, 0x88d0, 0xb86e, 0xd9ac, 0x10bf, 0x0, 0x1);
        gbc.writeMem(0x8a25, { 0x8d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3187, gbc.sp());
        EXPECT(0x8a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8a25));
        // 8D 0281
        gbc.setState(0xd985, 0xa3fa, 0xedc0, 0xf5f7, 0x865d, 0x8db9, 0x1, 0x1);
        gbc.writeMem(0xd985, { 0x8d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa3fa, gbc.sp());
        EXPECT(0xd986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd985));
        // 8D 0282
        gbc.setState(0xcfe0, 0xa2bd, 0x38a0, 0x9283, 0x9f94, 0xc02, 0x0, 0x1);
        gbc.writeMem(0xcfe0, { 0x8d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa2bd, gbc.sp());
        EXPECT(0xcfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcfe0));
        // 8D 0283
        gbc.setState(0x3eaa, 0xd4e1, 0x2ca0, 0xc4fb, 0x3c8f, 0xc2fb, 0x1, 0x0);
        gbc.writeMem(0x3eaa, { 0x8d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd4e1, gbc.sp());
        EXPECT(0x3eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0284
        gbc.setState(0xb139, 0x9a7a, 0x8800, 0x68b2, 0x11bb, 0x8dff, 0x0, 0x1);
        gbc.writeMem(0xb139, { 0x8d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9a7a, gbc.sp());
        EXPECT(0xb13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb139));
        // 8D 0285
        gbc.setState(0x6504, 0x833b, 0x410, 0x1b9f, 0x94ed, 0xb378, 0x1, 0x0);
        gbc.writeMem(0x6504, { 0x8d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x833b, gbc.sp());
        EXPECT(0x6505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0286
        gbc.setState(0xd992, 0x5934, 0x6a90, 0x1012, 0x6594, 0x46fe, 0x1, 0x1);
        gbc.writeMem(0xd992, { 0x8d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5934, gbc.sp());
        EXPECT(0xd993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd992));
        // 8D 0287
        gbc.setState(0xc7ad, 0x76a9, 0xef60, 0xcd26, 0x3a4f, 0x7a8d, 0x0, 0x0);
        gbc.writeMem(0xc7ad, { 0x8d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x76a9, gbc.sp());
        EXPECT(0xc7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc7ad));
        // 8D 0288
        gbc.setState(0xedfe, 0x8c8c, 0x1f20, 0xb688, 0xa04b, 0xa84e, 0x0, 0x0);
        gbc.writeMem(0xedfe, { 0x8d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8c8c, gbc.sp());
        EXPECT(0xedff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xedfe));
        // 8D 0289
        gbc.setState(0x8b4d, 0xdbef, 0x84e0, 0xbdf7, 0xb4cc, 0xf51c, 0x1, 0x1);
        gbc.writeMem(0x8b4d, { 0x8d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdbef, gbc.sp());
        EXPECT(0x8b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8b4d));
        // 8D 028A
        gbc.setState(0xee31, 0x4392, 0x8060, 0x26d7, 0x6a9d, 0x9796, 0x0, 0x1);
        gbc.writeMem(0xee31, { 0x8d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4392, gbc.sp());
        EXPECT(0xee32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xee31));
        // 8D 028B
        gbc.setState(0x97e4, 0xb579, 0x7360, 0x5951, 0xc437, 0xc2a8, 0x1, 0x1);
        gbc.writeMem(0x97e4, { 0x8d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb579, gbc.sp());
        EXPECT(0x97e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x97e4));
        // 8D 028C
        gbc.setState(0x530d, 0x779b, 0x7f20, 0xd373, 0xa88a, 0x6b18, 0x0, 0x0);
        gbc.writeMem(0x530d, { 0x8d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x779b, gbc.sp());
        EXPECT(0x530e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 028D
        gbc.setState(0x9e56, 0x5652, 0xf3f0, 0xc441, 0x5cf4, 0xecce, 0x1, 0x0);
        gbc.writeMem(0x9e56, { 0x8d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5652, gbc.sp());
        EXPECT(0x9e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9e56));
        // 8D 028E
        gbc.setState(0x2331, 0xd375, 0x130, 0x35ad, 0x39c4, 0x9947, 0x1, 0x0);
        gbc.writeMem(0x2331, { 0x8d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd375, gbc.sp());
        EXPECT(0x2332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 028F
        gbc.setState(0x8ce3, 0xe3a5, 0xe2f0, 0x923d, 0x9, 0xb11a, 0x0, 0x1);
        gbc.writeMem(0x8ce3, { 0x8d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe3a5, gbc.sp());
        EXPECT(0x8ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8ce3));
        // 8D 0290
        gbc.setState(0xb0b1, 0x610d, 0x5210, 0x61bb, 0x1156, 0x4504, 0x0, 0x1);
        gbc.writeMem(0xb0b1, { 0x8d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x610d, gbc.sp());
        EXPECT(0xb0b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb0b1));
        // 8D 0291
        gbc.setState(0x822a, 0x19b7, 0x39a0, 0x56e3, 0x2658, 0x7b5, 0x0, 0x1);
        gbc.writeMem(0x822a, { 0x8d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x19b7, gbc.sp());
        EXPECT(0x822b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x822a));
        // 8D 0292
        gbc.setState(0xc47b, 0xfa3c, 0xcaf0, 0x68fa, 0x39cd, 0x8ea3, 0x0, 0x1);
        gbc.writeMem(0xc47b, { 0x8d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfa3c, gbc.sp());
        EXPECT(0xc47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc47b));
        // 8D 0293
        gbc.setState(0x70bb, 0xdb44, 0xbaf0, 0x91d6, 0x3b06, 0x8090, 0x0, 0x0);
        gbc.writeMem(0x70bb, { 0x8d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdb44, gbc.sp());
        EXPECT(0x70bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0294
        gbc.setState(0x59ec, 0x9c91, 0x7ff0, 0xd328, 0x79d9, 0xbc76, 0x0, 0x1);
        gbc.writeMem(0x59ec, { 0x8d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9c91, gbc.sp());
        EXPECT(0x59ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0295
        gbc.setState(0xd9b7, 0xf500, 0xa630, 0xb8f1, 0x8ac0, 0x1ffe, 0x0, 0x1);
        gbc.writeMem(0xd9b7, { 0x8d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf500, gbc.sp());
        EXPECT(0xd9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd9b7));
        // 8D 0296
        gbc.setState(0x4ebf, 0xc9aa, 0xb6b0, 0x6ca9, 0x5524, 0xc825, 0x0, 0x0);
        gbc.writeMem(0x4ebf, { 0x8d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc9aa, gbc.sp());
        EXPECT(0x4ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0297
        gbc.setState(0xc07f, 0x4200, 0xef10, 0xfd5c, 0xf99e, 0xe1c0, 0x1, 0x0);
        gbc.writeMem(0xc07f, { 0x8d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4200, gbc.sp());
        EXPECT(0xc080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc07f));
        // 8D 0298
        gbc.setState(0x6445, 0x192f, 0x8550, 0x4f36, 0xc916, 0x663c, 0x1, 0x0);
        gbc.writeMem(0x6445, { 0x8d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x192f, gbc.sp());
        EXPECT(0x6446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0299
        gbc.setState(0xec67, 0x5de5, 0xe4f0, 0x658b, 0x8700, 0xb61e, 0x0, 0x0);
        gbc.writeMem(0xec67, { 0x8d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5de5, gbc.sp());
        EXPECT(0xec68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xec67));
        // 8D 029A
        gbc.setState(0x7e77, 0x397a, 0x8b40, 0xaf10, 0xd246, 0xb271, 0x0, 0x1);
        gbc.writeMem(0x7e77, { 0x8d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x397a, gbc.sp());
        EXPECT(0x7e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 029B
        gbc.setState(0x8071, 0x318a, 0xc1c0, 0xb90, 0xb71f, 0xa3c7, 0x0, 0x1);
        gbc.writeMem(0x8071, { 0x8d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x318a, gbc.sp());
        EXPECT(0x8072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8071));
        // 8D 029C
        gbc.setState(0x99ed, 0x1b4e, 0x8940, 0x587c, 0x9cf5, 0xb473, 0x0, 0x1);
        gbc.writeMem(0x99ed, { 0x8d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1b4e, gbc.sp());
        EXPECT(0x99ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x99ed));
        // 8D 029D
        gbc.setState(0xc6e8, 0xf1b9, 0xaf30, 0xe177, 0xac9f, 0xf34f, 0x0, 0x0);
        gbc.writeMem(0xc6e8, { 0x8d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf1b9, gbc.sp());
        EXPECT(0xc6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc6e8));
        // 8D 029E
        gbc.setState(0x4487, 0xcc17, 0x2500, 0xcdb2, 0x748d, 0x87df, 0x1, 0x0);
        gbc.writeMem(0x4487, { 0x8d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcc17, gbc.sp());
        EXPECT(0x4488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 029F
        gbc.setState(0xc896, 0xc2f3, 0xad20, 0xdd6b, 0xbe6a, 0x627, 0x1, 0x0);
        gbc.writeMem(0xc896, { 0x8d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc2f3, gbc.sp());
        EXPECT(0xc897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc896));
        // 8D 02A0
        gbc.setState(0x6d24, 0xaeb3, 0x9760, 0xe549, 0xeeb1, 0x88df, 0x1, 0x1);
        gbc.writeMem(0x6d24, { 0x8d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xaeb3, gbc.sp());
        EXPECT(0x6d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02A1
        gbc.setState(0x7dd0, 0xc180, 0xe6e0, 0x72a5, 0x423c, 0x60df, 0x0, 0x0);
        gbc.writeMem(0x7dd0, { 0x8d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc180, gbc.sp());
        EXPECT(0x7dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02A2
        gbc.setState(0x6d91, 0x43cd, 0x9b90, 0x1a87, 0x674c, 0xfe5, 0x1, 0x0);
        gbc.writeMem(0x6d91, { 0x8d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x43cd, gbc.sp());
        EXPECT(0x6d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02A3
        gbc.setState(0x48a7, 0x59e4, 0x46b0, 0xb42c, 0x99be, 0xdc66, 0x1, 0x1);
        gbc.writeMem(0x48a7, { 0x8d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x59e4, gbc.sp());
        EXPECT(0x48a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02A4
        gbc.setState(0x5a7d, 0x8a16, 0x9a60, 0x3fbb, 0xb38d, 0x93bd, 0x0, 0x0);
        gbc.writeMem(0x5a7d, { 0x8d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8a16, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02A5
        gbc.setState(0xc7fc, 0xd59c, 0xc0c0, 0xfbd0, 0x2d1c, 0x8a21, 0x1, 0x1);
        gbc.writeMem(0xc7fc, { 0x8d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd59c, gbc.sp());
        EXPECT(0xc7fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc7fc));
        // 8D 02A6
        gbc.setState(0x57bc, 0x4d9a, 0xdba0, 0xa83a, 0x7de9, 0xe68e, 0x1, 0x0);
        gbc.writeMem(0x57bc, { 0x8d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4d9a, gbc.sp());
        EXPECT(0x57bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02A7
        gbc.setState(0x34e1, 0x4cf6, 0xdce0, 0xd3ca, 0xf040, 0x9302, 0x1, 0x1);
        gbc.writeMem(0x34e1, { 0x8d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4cf6, gbc.sp());
        EXPECT(0x34e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02A8
        gbc.setState(0x76da, 0x350d, 0x4cf0, 0x6a3c, 0x2613, 0x6c53, 0x1, 0x0);
        gbc.writeMem(0x76da, { 0x8d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x350d, gbc.sp());
        EXPECT(0x76db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02A9
        gbc.setState(0xb61d, 0xb04e, 0x980, 0xb9d7, 0x6df5, 0xc315, 0x0, 0x1);
        gbc.writeMem(0xb61d, { 0x8d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb04e, gbc.sp());
        EXPECT(0xb61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb61d));
        // 8D 02AA
        gbc.setState(0x42b7, 0xac4f, 0x1880, 0x8d04, 0xb439, 0xcc74, 0x1, 0x0);
        gbc.writeMem(0x42b7, { 0x8d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xac4f, gbc.sp());
        EXPECT(0x42b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02AC
        gbc.setState(0x9714, 0x56c0, 0x9e20, 0xc911, 0x1f83, 0x434d, 0x0, 0x1);
        gbc.writeMem(0x9714, { 0x8d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x56c0, gbc.sp());
        EXPECT(0x9715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9714));
        // 8D 02AD
        gbc.setState(0x588, 0xb24e, 0xf630, 0xacf3, 0xff0f, 0xe664, 0x1, 0x0);
        gbc.writeMem(0x588, { 0x8d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb24e, gbc.sp());
        EXPECT(0x589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02AE
        gbc.setState(0x6f48, 0xa728, 0x2d40, 0xea49, 0x574b, 0x4f91, 0x1, 0x0);
        gbc.writeMem(0x6f48, { 0x8d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa728, gbc.sp());
        EXPECT(0x6f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02AF
        gbc.setState(0xedae, 0x8a1b, 0xe320, 0x9aae, 0xa14d, 0x9396, 0x1, 0x1);
        gbc.writeMem(0xedae, { 0x8d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8a1b, gbc.sp());
        EXPECT(0xedaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xedae));
        // 8D 02B0
        gbc.setState(0xe952, 0xad5a, 0x55a0, 0x1858, 0x3ef9, 0x8d1e, 0x1, 0x0);
        gbc.writeMem(0xe952, { 0x8d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xad5a, gbc.sp());
        EXPECT(0xe953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe952));
        // 8D 02B1
        gbc.setState(0x40a2, 0x557c, 0x9b40, 0xc072, 0xeed2, 0xbb6f, 0x0, 0x1);
        gbc.writeMem(0x40a2, { 0x8d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x557c, gbc.sp());
        EXPECT(0x40a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02B2
        gbc.setState(0x2127, 0xc51f, 0xfb90, 0xb061, 0x89e3, 0x119, 0x1, 0x1);
        gbc.writeMem(0x2127, { 0x8d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc51f, gbc.sp());
        EXPECT(0x2128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02B3
        gbc.setState(0x14ab, 0x6ae1, 0x60, 0xd8d7, 0x2630, 0x363a, 0x0, 0x0);
        gbc.writeMem(0x14ab, { 0x8d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6ae1, gbc.sp());
        EXPECT(0x14ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02B4
        gbc.setState(0x2a26, 0xad5, 0xdff0, 0xf603, 0x5398, 0xf028, 0x0, 0x0);
        gbc.writeMem(0x2a26, { 0x8d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xad5, gbc.sp());
        EXPECT(0x2a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02B5
        gbc.setState(0x6c9f, 0xf347, 0x7620, 0xcec8, 0x8a97, 0xba1c, 0x0, 0x1);
        gbc.writeMem(0x6c9f, { 0x8d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf347, gbc.sp());
        EXPECT(0x6ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02B6
        gbc.setState(0xd70c, 0x4fd8, 0xc0c0, 0x906d, 0x4c7f, 0xff07, 0x1, 0x0);
        gbc.writeMem(0xd70c, { 0x8d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4fd8, gbc.sp());
        EXPECT(0xd70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd70c));
        // 8D 02B8
        gbc.setState(0x1f48, 0xf71b, 0x4840, 0x3848, 0x874, 0x330d, 0x1, 0x1);
        gbc.writeMem(0x1f48, { 0x8d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf71b, gbc.sp());
        EXPECT(0x1f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02B9
        gbc.setState(0x487e, 0xe0, 0x7230, 0x68ed, 0x3fc6, 0x6914, 0x1, 0x0);
        gbc.writeMem(0x487e, { 0x8d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe0, gbc.sp());
        EXPECT(0x487f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02BA
        gbc.setState(0xca1f, 0xb3d, 0x3640, 0x4971, 0x39f4, 0xa536, 0x0, 0x1);
        gbc.writeMem(0xca1f, { 0x8d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb3d, gbc.sp());
        EXPECT(0xca20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xca1f));
        // 8D 02BB
        gbc.setState(0x3089, 0x433f, 0x370, 0x9c96, 0xf93b, 0xacdd, 0x0, 0x0);
        gbc.writeMem(0x3089, { 0x8d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x433f, gbc.sp());
        EXPECT(0x308a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02BC
        gbc.setState(0x9d07, 0xa57, 0x5cd0, 0x12bd, 0x57bc, 0x4514, 0x1, 0x1);
        gbc.writeMem(0x9d07, { 0x8d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa57, gbc.sp());
        EXPECT(0x9d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9d07));
        // 8D 02BD
        gbc.setState(0x40db, 0x791f, 0x9250, 0xac66, 0x2cdb, 0xd222, 0x1, 0x1);
        gbc.writeMem(0x40db, { 0x8d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x791f, gbc.sp());
        EXPECT(0x40dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02BE
        gbc.setState(0xabb5, 0x64e2, 0xd870, 0x23e7, 0x3950, 0x838e, 0x0, 0x0);
        gbc.writeMem(0xabb5, { 0x8d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x64e2, gbc.sp());
        EXPECT(0xabb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xabb5));
        // 8D 02BF
        gbc.setState(0x5e84, 0xdb10, 0xac50, 0x7066, 0x88fe, 0xdc40, 0x0, 0x0);
        gbc.writeMem(0x5e84, { 0x8d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdb10, gbc.sp());
        EXPECT(0x5e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02C0
        gbc.setState(0x94b5, 0x1513, 0xa260, 0xe606, 0xd108, 0x9140, 0x0, 0x1);
        gbc.writeMem(0x94b5, { 0x8d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1513, gbc.sp());
        EXPECT(0x94b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x94b5));
        // 8D 02C1
        gbc.setState(0x1ad, 0xb454, 0x9960, 0x21b2, 0x9fbf, 0xaf79, 0x1, 0x1);
        gbc.writeMem(0x1ad, { 0x8d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb454, gbc.sp());
        EXPECT(0x1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02C3
        gbc.setState(0x386, 0xbdba, 0xaa20, 0x3893, 0x9232, 0x9e5f, 0x0, 0x0);
        gbc.writeMem(0x386, { 0x8d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbdba, gbc.sp());
        EXPECT(0x387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02C4
        gbc.setState(0xe482, 0x3368, 0xcc90, 0x5490, 0x3e2b, 0x1621, 0x0, 0x0);
        gbc.writeMem(0xe482, { 0x8d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3368, gbc.sp());
        EXPECT(0xe483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe482));
        // 8D 02C5
        gbc.setState(0xba80, 0xf098, 0xd1b0, 0xa9e1, 0x528b, 0xd62, 0x0, 0x1);
        gbc.writeMem(0xba80, { 0x8d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf098, gbc.sp());
        EXPECT(0xba81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xba80));
        // 8D 02C6
        gbc.setState(0x7d9, 0x4657, 0x1fa0, 0xa411, 0xc0b2, 0x507b, 0x0, 0x1);
        gbc.writeMem(0x7d9, { 0x8d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4657, gbc.sp());
        EXPECT(0x7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02C7
        gbc.setState(0xa2ea, 0x9a13, 0xff00, 0xabe, 0xcaa5, 0x24df, 0x0, 0x1);
        gbc.writeMem(0xa2ea, { 0x8d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9a13, gbc.sp());
        EXPECT(0xa2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa2ea));
        // 8D 02C8
        gbc.setState(0x5d90, 0xd2ef, 0x8210, 0x2f33, 0x1c04, 0x3b15, 0x0, 0x1);
        gbc.writeMem(0x5d90, { 0x8d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd2ef, gbc.sp());
        EXPECT(0x5d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02C9
        gbc.setState(0xd66f, 0x3e35, 0x2b60, 0xb597, 0x1429, 0x72fa, 0x1, 0x0);
        gbc.writeMem(0xd66f, { 0x8d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3e35, gbc.sp());
        EXPECT(0xd670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd66f));
        // 8D 02CA
        gbc.setState(0xc609, 0x6062, 0xec60, 0xee7b, 0xaf70, 0xaf49, 0x1, 0x0);
        gbc.writeMem(0xc609, { 0x8d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6062, gbc.sp());
        EXPECT(0xc60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc609));
        // 8D 02CB
        gbc.setState(0xb4a4, 0x24cb, 0xd9e0, 0x91a, 0x98d3, 0xf833, 0x1, 0x0);
        gbc.writeMem(0xb4a4, { 0x8d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x24cb, gbc.sp());
        EXPECT(0xb4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb4a4));
        // 8D 02CC
        gbc.setState(0x2752, 0x4b0a, 0xcdd0, 0xb810, 0x91fa, 0x9afd, 0x0, 0x0);
        gbc.writeMem(0x2752, { 0x8d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4b0a, gbc.sp());
        EXPECT(0x2753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02CD
        gbc.setState(0x86d6, 0x4a10, 0x4770, 0xbb35, 0x4920, 0x7a52, 0x1, 0x1);
        gbc.writeMem(0x86d6, { 0x8d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4a10, gbc.sp());
        EXPECT(0x86d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x86d6));
        // 8D 02CE
        gbc.setState(0xd7d7, 0xcbb3, 0x35c0, 0xc201, 0x432e, 0xeace, 0x0, 0x1);
        gbc.writeMem(0xd7d7, { 0x8d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcbb3, gbc.sp());
        EXPECT(0xd7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd7d7));
        // 8D 02CF
        gbc.setState(0xa139, 0x54b8, 0x1bc0, 0xa447, 0xfb77, 0xc712, 0x0, 0x0);
        gbc.writeMem(0xa139, { 0x8d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x54b8, gbc.sp());
        EXPECT(0xa13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa139));
        // 8D 02D0
        gbc.setState(0x4ff5, 0x58ec, 0x8880, 0xdfb5, 0xae6f, 0x11e, 0x0, 0x1);
        gbc.writeMem(0x4ff5, { 0x8d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x58ec, gbc.sp());
        EXPECT(0x4ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02D1
        gbc.setState(0x9261, 0x9b98, 0xb5d0, 0x1173, 0xd873, 0x6bd9, 0x1, 0x1);
        gbc.writeMem(0x9261, { 0x8d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9b98, gbc.sp());
        EXPECT(0x9262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9261));
        // 8D 02D2
        gbc.setState(0xd1c2, 0x87bb, 0xd320, 0x38b7, 0xc741, 0xc996, 0x0, 0x1);
        gbc.writeMem(0xd1c2, { 0x8d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x87bb, gbc.sp());
        EXPECT(0xd1c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd1c2));
        // 8D 02D3
        gbc.setState(0xe7ea, 0xa13a, 0x4f60, 0x7370, 0x57b1, 0x7183, 0x1, 0x1);
        gbc.writeMem(0xe7ea, { 0x8d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa13a, gbc.sp());
        EXPECT(0xe7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe7ea));
        // 8D 02D4
        gbc.setState(0x4468, 0x8b3e, 0xa0a0, 0x264b, 0x90fb, 0xd63d, 0x0, 0x1);
        gbc.writeMem(0x4468, { 0x8d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8b3e, gbc.sp());
        EXPECT(0x4469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02D6
        gbc.setState(0xb143, 0xf142, 0xada0, 0xe132, 0x79c4, 0xe82c, 0x1, 0x1);
        gbc.writeMem(0xb143, { 0x8d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf142, gbc.sp());
        EXPECT(0xb144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb143));
        // 8D 02D7
        gbc.setState(0x34f5, 0x70aa, 0x4020, 0x2752, 0xb4f1, 0x9625, 0x1, 0x1);
        gbc.writeMem(0x34f5, { 0x8d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x70aa, gbc.sp());
        EXPECT(0x34f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02D8
        gbc.setState(0x7584, 0xfe6a, 0xa8e0, 0x2142, 0xcd2e, 0xb9b7, 0x0, 0x0);
        gbc.writeMem(0x7584, { 0x8d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfe6a, gbc.sp());
        EXPECT(0x7585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02D9
        gbc.setState(0x3a69, 0x73b1, 0x7950, 0xf42, 0x3a4d, 0xb5e7, 0x0, 0x1);
        gbc.writeMem(0x3a69, { 0x8d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x73b1, gbc.sp());
        EXPECT(0x3a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02DA
        gbc.setState(0x9177, 0xadeb, 0xd0, 0x3acc, 0x31e7, 0x257a, 0x0, 0x1);
        gbc.writeMem(0x9177, { 0x8d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xadeb, gbc.sp());
        EXPECT(0x9178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9177));
        // 8D 02DB
        gbc.setState(0x2222, 0xb442, 0x6180, 0xc311, 0x5417, 0x3b47, 0x1, 0x1);
        gbc.writeMem(0x2222, { 0x8d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb442, gbc.sp());
        EXPECT(0x2223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02DC
        gbc.setState(0x54fe, 0x3107, 0xda90, 0xeae9, 0x3e32, 0x2f49, 0x0, 0x0);
        gbc.writeMem(0x54fe, { 0x8d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3107, gbc.sp());
        EXPECT(0x54ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02DD
        gbc.setState(0xa023, 0x48cb, 0x3040, 0xd3cd, 0x4f80, 0x5536, 0x0, 0x0);
        gbc.writeMem(0xa023, { 0x8d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x48cb, gbc.sp());
        EXPECT(0xa024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa023));
        // 8D 02DE
        gbc.setState(0xba60, 0xb414, 0x3120, 0xe919, 0x5997, 0xe609, 0x1, 0x1);
        gbc.writeMem(0xba60, { 0x8d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb414, gbc.sp());
        EXPECT(0xba61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xba60));
        // 8D 02DF
        gbc.setState(0xe364, 0xc8ff, 0xe570, 0x13f7, 0x6318, 0xe5c5, 0x1, 0x1);
        gbc.writeMem(0xe364, { 0x8d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc8ff, gbc.sp());
        EXPECT(0xe365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe364));
        // 8D 02E0
        gbc.setState(0x83bb, 0xc025, 0xe0, 0x71d9, 0xd91e, 0xd47b, 0x0, 0x0);
        gbc.writeMem(0x83bb, { 0x8d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc025, gbc.sp());
        EXPECT(0x83bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x83bb));
        // 8D 02E1
        gbc.setState(0x7cd6, 0x498b, 0x6500, 0xc926, 0xc692, 0xa41d, 0x0, 0x0);
        gbc.writeMem(0x7cd6, { 0x8d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x498b, gbc.sp());
        EXPECT(0x7cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02E2
        gbc.setState(0x8798, 0x84a6, 0xa520, 0xbfae, 0x167f, 0x194a, 0x0, 0x1);
        gbc.writeMem(0x8798, { 0x8d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x84a6, gbc.sp());
        EXPECT(0x8799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8798));
        // 8D 02E3
        gbc.setState(0x635c, 0xa259, 0x4e50, 0xc06f, 0xf28e, 0xb029, 0x1, 0x0);
        gbc.writeMem(0x635c, { 0x8d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa259, gbc.sp());
        EXPECT(0x635d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02E4
        gbc.setState(0x35d8, 0x5020, 0x9df0, 0x63d, 0x6c78, 0xbf1d, 0x0, 0x1);
        gbc.writeMem(0x35d8, { 0x8d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5020, gbc.sp());
        EXPECT(0x35d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02E5
        gbc.setState(0x7bd6, 0xe76a, 0x1c40, 0xadbd, 0xec90, 0xaeaa, 0x1, 0x1);
        gbc.writeMem(0x7bd6, { 0x8d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe76a, gbc.sp());
        EXPECT(0x7bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02E6
        gbc.setState(0x10e5, 0xbde0, 0x4850, 0x2021, 0x2ea5, 0xb390, 0x1, 0x1);
        gbc.writeMem(0x10e5, { 0x8d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbde0, gbc.sp());
        EXPECT(0x10e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02E7
        gbc.setState(0x36d5, 0x7ba2, 0xef70, 0x384, 0x37ec, 0x51ab, 0x1, 0x0);
        gbc.writeMem(0x36d5, { 0x8d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7ba2, gbc.sp());
        EXPECT(0x36d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02E8
        gbc.setState(0xa131, 0x3836, 0x8c50, 0x4616, 0xb008, 0x6987, 0x0, 0x1);
        gbc.writeMem(0xa131, { 0x8d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3836, gbc.sp());
        EXPECT(0xa132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa131));
        // 8D 02E9
        gbc.setState(0xa8c6, 0x87f8, 0xb050, 0x7b82, 0x2e03, 0x9e96, 0x0, 0x1);
        gbc.writeMem(0xa8c6, { 0x8d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x87f8, gbc.sp());
        EXPECT(0xa8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa8c6));
        // 8D 02EA
        gbc.setState(0x46c8, 0x9075, 0x98e0, 0x9d57, 0xe389, 0xc4c, 0x0, 0x1);
        gbc.writeMem(0x46c8, { 0x8d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9075, gbc.sp());
        EXPECT(0x46c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02EB
        gbc.setState(0x85f8, 0xbb99, 0x97c0, 0xc2cb, 0x18da, 0xed80, 0x0, 0x1);
        gbc.writeMem(0x85f8, { 0x8d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbb99, gbc.sp());
        EXPECT(0x85f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x85f8));
        // 8D 02EC
        gbc.setState(0x9c6c, 0xc8bb, 0x2e60, 0xe29f, 0x549e, 0x41e9, 0x0, 0x1);
        gbc.writeMem(0x9c6c, { 0x8d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc8bb, gbc.sp());
        EXPECT(0x9c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9c6c));
        // 8D 02ED
        gbc.setState(0x54f7, 0x9436, 0x81a0, 0x479d, 0x8ebe, 0x4295, 0x0, 0x1);
        gbc.writeMem(0x54f7, { 0x8d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9436, gbc.sp());
        EXPECT(0x54f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02EE
        gbc.setState(0x4b51, 0x3d21, 0x87e0, 0x7c05, 0x4d79, 0xb7, 0x1, 0x0);
        gbc.writeMem(0x4b51, { 0x8d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3d21, gbc.sp());
        EXPECT(0x4b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02EF
        gbc.setState(0x59e3, 0xd226, 0xa2c0, 0xa05c, 0x71f8, 0xea4a, 0x1, 0x1);
        gbc.writeMem(0x59e3, { 0x8d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd226, gbc.sp());
        EXPECT(0x59e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02F0
        gbc.setState(0x10f2, 0x6678, 0xdcb0, 0xeb11, 0xa2eb, 0x790b, 0x0, 0x1);
        gbc.writeMem(0x10f2, { 0x8d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6678, gbc.sp());
        EXPECT(0x10f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02F1
        gbc.setState(0x563e, 0x5986, 0xbb60, 0xa550, 0x2c20, 0xb99a, 0x1, 0x1);
        gbc.writeMem(0x563e, { 0x8d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5986, gbc.sp());
        EXPECT(0x563f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02F2
        gbc.setState(0xd4d2, 0xec06, 0x47b0, 0xebe8, 0x4f19, 0x1b6c, 0x1, 0x1);
        gbc.writeMem(0xd4d2, { 0x8d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xec06, gbc.sp());
        EXPECT(0xd4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd4d2));
        // 8D 02F3
        gbc.setState(0x4024, 0x7daf, 0xc710, 0xfdb8, 0x6bed, 0x519, 0x0, 0x1);
        gbc.writeMem(0x4024, { 0x8d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7daf, gbc.sp());
        EXPECT(0x4025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02F4
        gbc.setState(0x2577, 0xb5a6, 0x1d60, 0x735, 0xf9c0, 0xd281, 0x1, 0x0);
        gbc.writeMem(0x2577, { 0x8d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb5a6, gbc.sp());
        EXPECT(0x2578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02F5
        gbc.setState(0x8ce4, 0x7bab, 0x98c0, 0x9745, 0x9429, 0xeeff, 0x1, 0x0);
        gbc.writeMem(0x8ce4, { 0x8d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7bab, gbc.sp());
        EXPECT(0x8ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8ce4));
        // 8D 02F6
        gbc.setState(0x1c31, 0x25ef, 0x6810, 0x255, 0x885d, 0x5906, 0x1, 0x1);
        gbc.writeMem(0x1c31, { 0x8d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x25ef, gbc.sp());
        EXPECT(0x1c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02F7
        gbc.setState(0x5ac8, 0xbc2c, 0xee20, 0xea4d, 0x91d5, 0x54b3, 0x0, 0x0);
        gbc.writeMem(0x5ac8, { 0x8d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbc2c, gbc.sp());
        EXPECT(0x5ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02F8
        gbc.setState(0xb06c, 0x70a0, 0xeaf0, 0x28b7, 0xc8ce, 0x110f, 0x0, 0x0);
        gbc.writeMem(0xb06c, { 0x8d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x70a0, gbc.sp());
        EXPECT(0xb06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb06c));
        // 8D 02F9
        gbc.setState(0x3043, 0x27c4, 0x9380, 0x908b, 0x3ad4, 0x10fe, 0x0, 0x1);
        gbc.writeMem(0x3043, { 0x8d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x27c4, gbc.sp());
        EXPECT(0x3044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02FA
        gbc.setState(0x3041, 0x1232, 0xbc70, 0x1705, 0xee22, 0x6507, 0x0, 0x1);
        gbc.writeMem(0x3041, { 0x8d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1232, gbc.sp());
        EXPECT(0x3042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02FB
        gbc.setState(0x950, 0xed8a, 0xffe0, 0x91c8, 0xa777, 0xab11, 0x0, 0x1);
        gbc.writeMem(0x950, { 0x8d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xed8a, gbc.sp());
        EXPECT(0x951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 02FC
        gbc.setState(0xc52b, 0x9690, 0xa0a0, 0xadca, 0x41bd, 0xc77f, 0x1, 0x1);
        gbc.writeMem(0xc52b, { 0x8d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9690, gbc.sp());
        EXPECT(0xc52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc52b));
        // 8D 02FD
        gbc.setState(0x74d0, 0x78a5, 0xd0, 0xbb3e, 0x95b6, 0xf522, 0x0, 0x0);
        gbc.writeMem(0x74d0, { 0x8d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x78a5, gbc.sp());
        EXPECT(0x74d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 02FE
        gbc.setState(0xcd47, 0x5935, 0x520, 0xc99e, 0x1257, 0x5446, 0x1, 0x1);
        gbc.writeMem(0xcd47, { 0x8d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5935, gbc.sp());
        EXPECT(0xcd48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcd47));
        // 8D 02FF
        gbc.setState(0xcbc, 0x10db, 0xcf40, 0x81d5, 0x6afe, 0xc151, 0x1, 0x1);
        gbc.writeMem(0xcbc, { 0x8d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x10db, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0300
        gbc.setState(0x97de, 0x6da1, 0x3bc0, 0xa0e4, 0x73b1, 0xa948, 0x1, 0x0);
        gbc.writeMem(0x97de, { 0x8d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6da1, gbc.sp());
        EXPECT(0x97df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x97de));
        // 8D 0301
        gbc.setState(0x96f5, 0x109f, 0xf070, 0xa714, 0x3a03, 0x9017, 0x1, 0x1);
        gbc.writeMem(0x96f5, { 0x8d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x109f, gbc.sp());
        EXPECT(0x96f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x96f5));
        // 8D 0302
        gbc.setState(0x3ef5, 0x3362, 0x6800, 0xb678, 0x7bbf, 0xb731, 0x1, 0x1);
        gbc.writeMem(0x3ef5, { 0x8d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3362, gbc.sp());
        EXPECT(0x3ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0303
        gbc.setState(0x7abe, 0xb7b0, 0x4520, 0xf6a, 0x81c8, 0x6b90, 0x0, 0x0);
        gbc.writeMem(0x7abe, { 0x8d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb7b0, gbc.sp());
        EXPECT(0x7abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0304
        gbc.setState(0xb965, 0xd269, 0x92f0, 0xd97f, 0x53ad, 0x6c6c, 0x1, 0x0);
        gbc.writeMem(0xb965, { 0x8d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd269, gbc.sp());
        EXPECT(0xb966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb965));
        // 8D 0305
        gbc.setState(0x6481, 0x7823, 0xec70, 0x1271, 0xefeb, 0x40d, 0x0, 0x0);
        gbc.writeMem(0x6481, { 0x8d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7823, gbc.sp());
        EXPECT(0x6482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0306
        gbc.setState(0x38f2, 0xdf1d, 0xce80, 0xa279, 0xa6d, 0xbc7f, 0x1, 0x0);
        gbc.writeMem(0x38f2, { 0x8d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdf1d, gbc.sp());
        EXPECT(0x38f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0308
        gbc.setState(0xb4ba, 0xfe29, 0xc740, 0xb801, 0x57a9, 0x19de, 0x1, 0x0);
        gbc.writeMem(0xb4ba, { 0x8d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfe29, gbc.sp());
        EXPECT(0xb4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb4ba));
        // 8D 0309
        gbc.setState(0x5419, 0x9c7e, 0xf450, 0xe1ad, 0xb888, 0xa45f, 0x1, 0x1);
        gbc.writeMem(0x5419, { 0x8d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9c7e, gbc.sp());
        EXPECT(0x541a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 030A
        gbc.setState(0x5cde, 0x9b89, 0x1a90, 0x835, 0xf818, 0x42b1, 0x1, 0x1);
        gbc.writeMem(0x5cde, { 0x8d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9b89, gbc.sp());
        EXPECT(0x5cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 030B
        gbc.setState(0x2f67, 0x6811, 0x57b0, 0x6dd7, 0x6e7, 0x23ed, 0x0, 0x0);
        gbc.writeMem(0x2f67, { 0x8d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6811, gbc.sp());
        EXPECT(0x2f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 030C
        gbc.setState(0x9baf, 0x99a8, 0xfa60, 0x313f, 0x5c59, 0x47a9, 0x0, 0x1);
        gbc.writeMem(0x9baf, { 0x8d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x99a8, gbc.sp());
        EXPECT(0x9bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9baf));
        // 8D 030D
        gbc.setState(0x5a7, 0x5908, 0xe150, 0x9219, 0x21ce, 0xe9dd, 0x1, 0x0);
        gbc.writeMem(0x5a7, { 0x8d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5908, gbc.sp());
        EXPECT(0x5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 030E
        gbc.setState(0xd113, 0x9c2e, 0x94e0, 0xc70c, 0xa6a8, 0xd782, 0x0, 0x1);
        gbc.writeMem(0xd113, { 0x8d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9c2e, gbc.sp());
        EXPECT(0xd114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd113));
        // 8D 030F
        gbc.setState(0xd47d, 0xd889, 0xf800, 0x3633, 0xd155, 0xe5cf, 0x0, 0x1);
        gbc.writeMem(0xd47d, { 0x8d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd889, gbc.sp());
        EXPECT(0xd47e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd47d));
        // 8D 0310
        gbc.setState(0x1cb9, 0xc53, 0xcab0, 0xa1f7, 0xbae, 0xa854, 0x1, 0x1);
        gbc.writeMem(0x1cb9, { 0x8d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc53, gbc.sp());
        EXPECT(0x1cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0311
        gbc.setState(0x9fde, 0x5e6a, 0x4bc0, 0x36de, 0x9ac7, 0x59fb, 0x1, 0x0);
        gbc.writeMem(0x9fde, { 0x8d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5e6a, gbc.sp());
        EXPECT(0x9fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9fde));
        // 8D 0312
        gbc.setState(0x2f07, 0x29e2, 0x9dd0, 0x3a9f, 0x5cb0, 0x1fb9, 0x0, 0x0);
        gbc.writeMem(0x2f07, { 0x8d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x29e2, gbc.sp());
        EXPECT(0x2f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0313
        gbc.setState(0x202d, 0xe238, 0xbcc0, 0x575b, 0x9a85, 0x441, 0x0, 0x0);
        gbc.writeMem(0x202d, { 0x8d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe238, gbc.sp());
        EXPECT(0x202e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0314
        gbc.setState(0x3a93, 0xf992, 0x9dc0, 0x38ed, 0x343a, 0xe102, 0x1, 0x0);
        gbc.writeMem(0x3a93, { 0x8d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf992, gbc.sp());
        EXPECT(0x3a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0315
        gbc.setState(0x90ea, 0x1a01, 0xf740, 0x80ae, 0x2c98, 0xfbe4, 0x1, 0x1);
        gbc.writeMem(0x90ea, { 0x8d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1a01, gbc.sp());
        EXPECT(0x90eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x90ea));
        // 8D 0316
        gbc.setState(0x4721, 0x88d6, 0x67f0, 0x8f15, 0xccc8, 0x60bd, 0x0, 0x1);
        gbc.writeMem(0x4721, { 0x8d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x88d6, gbc.sp());
        EXPECT(0x4722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0317
        gbc.setState(0xe6f4, 0x1b14, 0xbe10, 0x6721, 0x91f4, 0xad62, 0x1, 0x0);
        gbc.writeMem(0xe6f4, { 0x8d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1b14, gbc.sp());
        EXPECT(0xe6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe6f4));
        // 8D 0318
        gbc.setState(0x26c, 0xd662, 0x7e40, 0x184b, 0x17dd, 0xe41c, 0x1, 0x0);
        gbc.writeMem(0x26c, { 0x8d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd662, gbc.sp());
        EXPECT(0x26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0319
        gbc.setState(0xb340, 0x6812, 0x86f0, 0xdd4c, 0xda58, 0xdcd8, 0x1, 0x1);
        gbc.writeMem(0xb340, { 0x8d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6812, gbc.sp());
        EXPECT(0xb341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb340));
        // 8D 031A
        gbc.setState(0x3b28, 0xf215, 0x3570, 0x5e54, 0x29b5, 0xf838, 0x1, 0x1);
        gbc.writeMem(0x3b28, { 0x8d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf215, gbc.sp());
        EXPECT(0x3b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 031B
        gbc.setState(0xfce, 0x67e3, 0xe440, 0xc13d, 0x8661, 0x3dab, 0x1, 0x0);
        gbc.writeMem(0xfce, { 0x8d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x67e3, gbc.sp());
        EXPECT(0xfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 031C
        gbc.setState(0x3a8a, 0xbed, 0x8c30, 0x3470, 0x19d1, 0x8e50, 0x0, 0x0);
        gbc.writeMem(0x3a8a, { 0x8d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbed, gbc.sp());
        EXPECT(0x3a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 031D
        gbc.setState(0x660b, 0x4c6e, 0xb9b0, 0xcebc, 0x4d81, 0xd558, 0x0, 0x1);
        gbc.writeMem(0x660b, { 0x8d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4c6e, gbc.sp());
        EXPECT(0x660c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 031E
        gbc.setState(0xdf51, 0x9708, 0xb80, 0xf577, 0xfbfe, 0x98c3, 0x1, 0x0);
        gbc.writeMem(0xdf51, { 0x8d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9708, gbc.sp());
        EXPECT(0xdf52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdf51));
        // 8D 031F
        gbc.setState(0x9aa9, 0x17c4, 0xfcd0, 0xa0db, 0x1e2d, 0x8667, 0x0, 0x0);
        gbc.writeMem(0x9aa9, { 0x8d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x17c4, gbc.sp());
        EXPECT(0x9aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9aa9));
        // 8D 0320
        gbc.setState(0x6ecd, 0x888, 0x35e0, 0xb419, 0x45e3, 0x7919, 0x0, 0x0);
        gbc.writeMem(0x6ecd, { 0x8d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x888, gbc.sp());
        EXPECT(0x6ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0322
        gbc.setState(0x2af, 0xdf47, 0xd570, 0xa2e2, 0x116, 0x58a4, 0x0, 0x1);
        gbc.writeMem(0x2af, { 0x8d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdf47, gbc.sp());
        EXPECT(0x2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0323
        gbc.setState(0x9d64, 0xe80f, 0xe4f0, 0x8039, 0x9cd2, 0xd24c, 0x0, 0x1);
        gbc.writeMem(0x9d64, { 0x8d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe80f, gbc.sp());
        EXPECT(0x9d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9d64));
        // 8D 0324
        gbc.setState(0xe465, 0xdc6b, 0x6140, 0x994e, 0x4b0d, 0x3899, 0x1, 0x1);
        gbc.writeMem(0xe465, { 0x8d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdc6b, gbc.sp());
        EXPECT(0xe466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe465));
        // 8D 0325
        gbc.setState(0x3324, 0xd8f5, 0xe8a0, 0x7b59, 0x1c5b, 0x502c, 0x0, 0x0);
        gbc.writeMem(0x3324, { 0x8d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd8f5, gbc.sp());
        EXPECT(0x3325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0326
        gbc.setState(0x8253, 0x5592, 0x3cc0, 0xe339, 0xb11, 0x97af, 0x1, 0x0);
        gbc.writeMem(0x8253, { 0x8d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5592, gbc.sp());
        EXPECT(0x8254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8253));
        // 8D 0327
        gbc.setState(0x1f01, 0xab2, 0x5040, 0x935b, 0xcdec, 0x8535, 0x1, 0x0);
        gbc.writeMem(0x1f01, { 0x8d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xab2, gbc.sp());
        EXPECT(0x1f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0328
        gbc.setState(0x32a7, 0x5a8e, 0x2ea0, 0xedab, 0xcf8a, 0xd31c, 0x0, 0x1);
        gbc.writeMem(0x32a7, { 0x8d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5a8e, gbc.sp());
        EXPECT(0x32a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0329
        gbc.setState(0xc94f, 0x6876, 0x7f20, 0x7da, 0xf7aa, 0x4a6c, 0x1, 0x0);
        gbc.writeMem(0xc94f, { 0x8d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6876, gbc.sp());
        EXPECT(0xc950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc94f));
        // 8D 032A
        gbc.setState(0xa1f5, 0x8b4e, 0x9030, 0x5073, 0xc4b7, 0x145b, 0x1, 0x0);
        gbc.writeMem(0xa1f5, { 0x8d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8b4e, gbc.sp());
        EXPECT(0xa1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa1f5));
        // 8D 032B
        gbc.setState(0xc854, 0x8d94, 0x2710, 0xefdd, 0xc054, 0xb941, 0x1, 0x0);
        gbc.writeMem(0xc854, { 0x8d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8d94, gbc.sp());
        EXPECT(0xc855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc854));
        // 8D 032C
        gbc.setState(0xdfb5, 0x90f8, 0xd10, 0x1b1b, 0x2a3d, 0xb122, 0x1, 0x0);
        gbc.writeMem(0xdfb5, { 0x8d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x90f8, gbc.sp());
        EXPECT(0xdfb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdfb5));
        // 8D 032D
        gbc.setState(0x17a7, 0x418f, 0x1390, 0xf91a, 0xed7b, 0xb395, 0x0, 0x1);
        gbc.writeMem(0x17a7, { 0x8d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x418f, gbc.sp());
        EXPECT(0x17a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 032E
        gbc.setState(0x677c, 0x64, 0x6f0, 0x97d6, 0x7d6a, 0x4bc4, 0x1, 0x0);
        gbc.writeMem(0x677c, { 0x8d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x64, gbc.sp());
        EXPECT(0x677d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 032F
        gbc.setState(0x4ca, 0x3ece, 0x65d0, 0x4223, 0x3e4b, 0xd08c, 0x0, 0x0);
        gbc.writeMem(0x4ca, { 0x8d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3ece, gbc.sp());
        EXPECT(0x4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0330
        gbc.setState(0xbe3e, 0xe652, 0x3030, 0xb120, 0x5d3, 0x8f4e, 0x1, 0x0);
        gbc.writeMem(0xbe3e, { 0x8d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe652, gbc.sp());
        EXPECT(0xbe3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbe3e));
        // 8D 0331
        gbc.setState(0xe781, 0x260e, 0xf6d0, 0x9aa1, 0xcb08, 0xede1, 0x1, 0x1);
        gbc.writeMem(0xe781, { 0x8d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x260e, gbc.sp());
        EXPECT(0xe782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe781));
        // 8D 0333
        gbc.setState(0x4ab6, 0x8670, 0x2c70, 0xc9, 0x7a75, 0x2cf7, 0x1, 0x0);
        gbc.writeMem(0x4ab6, { 0x8d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8670, gbc.sp());
        EXPECT(0x4ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0334
        gbc.setState(0x135e, 0xc267, 0x2460, 0x3fd7, 0xf25a, 0x5a11, 0x0, 0x1);
        gbc.writeMem(0x135e, { 0x8d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc267, gbc.sp());
        EXPECT(0x135f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0335
        gbc.setState(0xb7c4, 0x55e7, 0x9d20, 0x9f2d, 0x1dd1, 0xb2c7, 0x0, 0x0);
        gbc.writeMem(0xb7c4, { 0x8d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x55e7, gbc.sp());
        EXPECT(0xb7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb7c4));
        // 8D 0336
        gbc.setState(0x571c, 0xc9dd, 0x94a0, 0xc2ad, 0x52fd, 0x90db, 0x0, 0x0);
        gbc.writeMem(0x571c, { 0x8d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc9dd, gbc.sp());
        EXPECT(0x571d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0337
        gbc.setState(0x69d2, 0x911e, 0xdd00, 0xa6e4, 0x1856, 0x4fc9, 0x0, 0x0);
        gbc.writeMem(0x69d2, { 0x8d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x911e, gbc.sp());
        EXPECT(0x69d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0338
        gbc.setState(0xe0ab, 0x3f0, 0xa080, 0xada6, 0xbc2b, 0x685c, 0x1, 0x0);
        gbc.writeMem(0xe0ab, { 0x8d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3f0, gbc.sp());
        EXPECT(0xe0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe0ab));
        // 8D 0339
        gbc.setState(0xa6c6, 0x2322, 0x3e60, 0xc5d3, 0x1785, 0xd3ef, 0x0, 0x1);
        gbc.writeMem(0xa6c6, { 0x8d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2322, gbc.sp());
        EXPECT(0xa6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa6c6));
        // 8D 033A
        gbc.setState(0x6d83, 0x183b, 0xf890, 0x37b3, 0xa6c2, 0xef5a, 0x1, 0x1);
        gbc.writeMem(0x6d83, { 0x8d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x183b, gbc.sp());
        EXPECT(0x6d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 033B
        gbc.setState(0xc328, 0x70c8, 0xead0, 0x6807, 0x499e, 0xa955, 0x0, 0x1);
        gbc.writeMem(0xc328, { 0x8d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x70c8, gbc.sp());
        EXPECT(0xc329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc328));
        // 8D 033D
        gbc.setState(0xbd61, 0xbb14, 0x1050, 0xe1de, 0xbc0e, 0x3cfd, 0x0, 0x1);
        gbc.writeMem(0xbd61, { 0x8d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbb14, gbc.sp());
        EXPECT(0xbd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbd61));
        // 8D 033E
        gbc.setState(0x221, 0x1961, 0x21e0, 0x6896, 0x1441, 0x3e3d, 0x1, 0x0);
        gbc.writeMem(0x221, { 0x8d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1961, gbc.sp());
        EXPECT(0x222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 033F
        gbc.setState(0x2ae, 0xacf5, 0x8fb0, 0x83f9, 0x1453, 0xf3d5, 0x1, 0x1);
        gbc.writeMem(0x2ae, { 0x8d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xacf5, gbc.sp());
        EXPECT(0x2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0340
        gbc.setState(0x2dfc, 0x6a26, 0xc800, 0x2929, 0xdd91, 0x144c, 0x0, 0x1);
        gbc.writeMem(0x2dfc, { 0x8d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6a26, gbc.sp());
        EXPECT(0x2dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0341
        gbc.setState(0xdda3, 0xb3f7, 0x1420, 0x44df, 0x5b2, 0x2a6, 0x0, 0x1);
        gbc.writeMem(0xdda3, { 0x8d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb3f7, gbc.sp());
        EXPECT(0xdda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdda3));
        // 8D 0342
        gbc.setState(0x4213, 0x5bea, 0xc510, 0xdb4b, 0x9e96, 0x25de, 0x0, 0x1);
        gbc.writeMem(0x4213, { 0x8d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5bea, gbc.sp());
        EXPECT(0x4214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0343
        gbc.setState(0x48c9, 0x1a5e, 0xaec0, 0x74a6, 0xe87c, 0x4923, 0x1, 0x0);
        gbc.writeMem(0x48c9, { 0x8d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1a5e, gbc.sp());
        EXPECT(0x48ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0344
        gbc.setState(0x1d7a, 0x11b9, 0x9130, 0xa350, 0x6f1a, 0x8418, 0x1, 0x0);
        gbc.writeMem(0x1d7a, { 0x8d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x11b9, gbc.sp());
        EXPECT(0x1d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0345
        gbc.setState(0x2101, 0xe4a7, 0x92a0, 0xecb4, 0xa577, 0x25b9, 0x0, 0x1);
        gbc.writeMem(0x2101, { 0x8d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe4a7, gbc.sp());
        EXPECT(0x2102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0346
        gbc.setState(0x918d, 0x9c8b, 0x85e0, 0xc4cc, 0x4ed6, 0xc595, 0x1, 0x1);
        gbc.writeMem(0x918d, { 0x8d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9c8b, gbc.sp());
        EXPECT(0x918e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x918d));
        // 8D 0347
        gbc.setState(0xc6a9, 0xc897, 0x92e0, 0xaf21, 0xd4c6, 0x9b12, 0x1, 0x0);
        gbc.writeMem(0xc6a9, { 0x8d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc897, gbc.sp());
        EXPECT(0xc6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc6a9));
        // 8D 0348
        gbc.setState(0x3e26, 0x5e17, 0xf1a0, 0xd4a7, 0xd0e6, 0xc213, 0x0, 0x0);
        gbc.writeMem(0x3e26, { 0x8d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5e17, gbc.sp());
        EXPECT(0x3e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0349
        gbc.setState(0x6f83, 0x4e5b, 0xfa60, 0x418e, 0x6f12, 0x197a, 0x1, 0x0);
        gbc.writeMem(0x6f83, { 0x8d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4e5b, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 034B
        gbc.setState(0x5917, 0xd8af, 0x6ea0, 0x7170, 0xdd14, 0x7f84, 0x0, 0x1);
        gbc.writeMem(0x5917, { 0x8d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd8af, gbc.sp());
        EXPECT(0x5918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 034C
        gbc.setState(0x836e, 0x1ef2, 0xa8d0, 0x8e5, 0x7657, 0x2258, 0x1, 0x0);
        gbc.writeMem(0x836e, { 0x8d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1ef2, gbc.sp());
        EXPECT(0x836f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x836e));
        // 8D 034D
        gbc.setState(0x9151, 0x80db, 0x44b0, 0x6485, 0x9c69, 0x251e, 0x0, 0x0);
        gbc.writeMem(0x9151, { 0x8d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x80db, gbc.sp());
        EXPECT(0x9152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9151));
        // 8D 034E
        gbc.setState(0xc66, 0x78e9, 0x4820, 0x64fe, 0x405c, 0x223d, 0x0, 0x1);
        gbc.writeMem(0xc66, { 0x8d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x78e9, gbc.sp());
        EXPECT(0xc67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 034F
        gbc.setState(0x4036, 0xc9da, 0x3050, 0x815, 0x3b2a, 0xa90d, 0x0, 0x0);
        gbc.writeMem(0x4036, { 0x8d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc9da, gbc.sp());
        EXPECT(0x4037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0350
        gbc.setState(0x87a0, 0xea09, 0x8df0, 0xbe93, 0x2b10, 0xf89f, 0x1, 0x0);
        gbc.writeMem(0x87a0, { 0x8d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xea09, gbc.sp());
        EXPECT(0x87a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x87a0));
        // 8D 0351
        gbc.setState(0x3a14, 0xc7a6, 0x6a50, 0xa648, 0x8a0, 0x11da, 0x1, 0x0);
        gbc.writeMem(0x3a14, { 0x8d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc7a6, gbc.sp());
        EXPECT(0x3a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0352
        gbc.setState(0xb4f5, 0x6b1d, 0x87b0, 0xb4e9, 0xb3c3, 0xc1d0, 0x1, 0x1);
        gbc.writeMem(0xb4f5, { 0x8d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6b1d, gbc.sp());
        EXPECT(0xb4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb4f5));
        // 8D 0354
        gbc.setState(0xed7d, 0xbd5d, 0x2c0, 0x92c5, 0xd302, 0x5503, 0x0, 0x1);
        gbc.writeMem(0xed7d, { 0x8d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbd5d, gbc.sp());
        EXPECT(0xed7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xed7d));
        // 8D 0355
        gbc.setState(0x964b, 0xfff1, 0x120, 0x4d84, 0xd92b, 0x3cb, 0x1, 0x1);
        gbc.writeMem(0x964b, { 0x8d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfff1, gbc.sp());
        EXPECT(0x964c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x964b));
        // 8D 0356
        gbc.setState(0x3037, 0x7ec2, 0xbac0, 0xb56a, 0x36c3, 0x5239, 0x1, 0x0);
        gbc.writeMem(0x3037, { 0x8d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7ec2, gbc.sp());
        EXPECT(0x3038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0358
        gbc.setState(0x740f, 0xee33, 0x16b0, 0x315f, 0x30c9, 0x20a4, 0x0, 0x1);
        gbc.writeMem(0x740f, { 0x8d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xee33, gbc.sp());
        EXPECT(0x7410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0359
        gbc.setState(0xdb33, 0xb85a, 0xf5d0, 0x1519, 0x1937, 0x703a, 0x1, 0x1);
        gbc.writeMem(0xdb33, { 0x8d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb85a, gbc.sp());
        EXPECT(0xdb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdb33));
        // 8D 035A
        gbc.setState(0x714a, 0x1f3a, 0xbf50, 0x8455, 0xfc79, 0x1970, 0x1, 0x1);
        gbc.writeMem(0x714a, { 0x8d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1f3a, gbc.sp());
        EXPECT(0x714b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 035C
        gbc.setState(0xb3e5, 0x9c95, 0x400, 0xc802, 0xdf63, 0xf0af, 0x0, 0x0);
        gbc.writeMem(0xb3e5, { 0x8d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9c95, gbc.sp());
        EXPECT(0xb3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb3e5));
        // 8D 035D
        gbc.setState(0x5e83, 0x4383, 0xadd0, 0xf4c3, 0xc648, 0x6c03, 0x0, 0x1);
        gbc.writeMem(0x5e83, { 0x8d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4383, gbc.sp());
        EXPECT(0x5e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 035E
        gbc.setState(0xb22e, 0xa399, 0x54b0, 0x6654, 0x8ff0, 0xba8f, 0x0, 0x0);
        gbc.writeMem(0xb22e, { 0x8d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa399, gbc.sp());
        EXPECT(0xb22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb22e));
        // 8D 035F
        gbc.setState(0x1e0c, 0xdf3d, 0x60b0, 0x3897, 0xd23d, 0x7da8, 0x0, 0x0);
        gbc.writeMem(0x1e0c, { 0x8d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdf3d, gbc.sp());
        EXPECT(0x1e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0360
        gbc.setState(0xe78b, 0x6e78, 0x35f0, 0xa886, 0x56b1, 0x9e97, 0x0, 0x0);
        gbc.writeMem(0xe78b, { 0x8d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6e78, gbc.sp());
        EXPECT(0xe78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe78b));
        // 8D 0361
        gbc.setState(0x41dd, 0x25b7, 0x850, 0x8907, 0xe97e, 0x849a, 0x0, 0x0);
        gbc.writeMem(0x41dd, { 0x8d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x25b7, gbc.sp());
        EXPECT(0x41de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0362
        gbc.setState(0xa19b, 0x5bff, 0x57a0, 0x4a7c, 0xc5b3, 0xa29e, 0x1, 0x1);
        gbc.writeMem(0xa19b, { 0x8d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5bff, gbc.sp());
        EXPECT(0xa19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa19b));
        // 8D 0363
        gbc.setState(0x916c, 0x7c, 0xbd90, 0xf2c3, 0x8ce8, 0x6902, 0x1, 0x0);
        gbc.writeMem(0x916c, { 0x8d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7c, gbc.sp());
        EXPECT(0x916d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x916c));
        // 8D 0364
        gbc.setState(0x972e, 0xe875, 0xa480, 0xf9eb, 0xa59, 0x6cc3, 0x0, 0x0);
        gbc.writeMem(0x972e, { 0x8d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe875, gbc.sp());
        EXPECT(0x972f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x972e));
        // 8D 0365
        gbc.setState(0x1484, 0xf684, 0xe220, 0xf8c, 0xa557, 0x91bf, 0x0, 0x1);
        gbc.writeMem(0x1484, { 0x8d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf684, gbc.sp());
        EXPECT(0x1485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0366
        gbc.setState(0x3d6d, 0x8b98, 0x5df0, 0x7dfe, 0x3b7b, 0xb170, 0x1, 0x0);
        gbc.writeMem(0x3d6d, { 0x8d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8b98, gbc.sp());
        EXPECT(0x3d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0367
        gbc.setState(0x9379, 0x6647, 0x2930, 0x671f, 0xe180, 0xe336, 0x1, 0x0);
        gbc.writeMem(0x9379, { 0x8d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6647, gbc.sp());
        EXPECT(0x937a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9379));
        // 8D 0368
        gbc.setState(0xeb07, 0x4d15, 0xe700, 0x7888, 0x9c09, 0xfe8d, 0x0, 0x0);
        gbc.writeMem(0xeb07, { 0x8d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4d15, gbc.sp());
        EXPECT(0xeb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xeb07));
        // 8D 0369
        gbc.setState(0xd7e, 0x295b, 0x1320, 0xdbb, 0xc667, 0xfd6, 0x0, 0x0);
        gbc.writeMem(0xd7e, { 0x8d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x295b, gbc.sp());
        EXPECT(0xd7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 036A
        gbc.setState(0x5f0c, 0x7b4b, 0x4e0, 0x9ca0, 0x71d5, 0xb98c, 0x0, 0x0);
        gbc.writeMem(0x5f0c, { 0x8d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7b4b, gbc.sp());
        EXPECT(0x5f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 036B
        gbc.setState(0x79f7, 0x17b4, 0xe660, 0x2822, 0x637c, 0x39fd, 0x1, 0x1);
        gbc.writeMem(0x79f7, { 0x8d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x17b4, gbc.sp());
        EXPECT(0x79f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 036C
        gbc.setState(0x7f3e, 0x7bf, 0x6e40, 0xf299, 0x21de, 0x9a3e, 0x1, 0x0);
        gbc.writeMem(0x7f3e, { 0x8d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7bf, gbc.sp());
        EXPECT(0x7f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 036D
        gbc.setState(0xa9a7, 0x2445, 0x6510, 0x7028, 0x24af, 0xdf98, 0x0, 0x0);
        gbc.writeMem(0xa9a7, { 0x8d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2445, gbc.sp());
        EXPECT(0xa9a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa9a7));
        // 8D 036E
        gbc.setState(0x70a6, 0xb0fd, 0xbd50, 0x679e, 0x765b, 0xaa7f, 0x0, 0x0);
        gbc.writeMem(0x70a6, { 0x8d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb0fd, gbc.sp());
        EXPECT(0x70a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 036F
        gbc.setState(0x8bcd, 0x5b3f, 0x9cb0, 0x6dd8, 0x6f74, 0xba68, 0x0, 0x0);
        gbc.writeMem(0x8bcd, { 0x8d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5b3f, gbc.sp());
        EXPECT(0x8bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8bcd));
        // 8D 0370
        gbc.setState(0xa36, 0x4aa, 0x5720, 0x630c, 0x8486, 0x678c, 0x1, 0x1);
        gbc.writeMem(0xa36, { 0x8d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4aa, gbc.sp());
        EXPECT(0xa37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0372
        gbc.setState(0x438e, 0x4860, 0xe260, 0x2981, 0x8c6, 0x811e, 0x0, 0x1);
        gbc.writeMem(0x438e, { 0x8d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4860, gbc.sp());
        EXPECT(0x438f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0373
        gbc.setState(0x5ff3, 0x8bc6, 0xa0c0, 0xa561, 0xd6d8, 0xd1c8, 0x0, 0x1);
        gbc.writeMem(0x5ff3, { 0x8d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8bc6, gbc.sp());
        EXPECT(0x5ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0374
        gbc.setState(0x4dbc, 0xff84, 0x4b30, 0xa866, 0x5fc4, 0x6b92, 0x0, 0x0);
        gbc.writeMem(0x4dbc, { 0x8d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xff84, gbc.sp());
        EXPECT(0x4dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0375
        gbc.setState(0xc819, 0xfaa1, 0x9960, 0xb739, 0x4d90, 0x272e, 0x0, 0x1);
        gbc.writeMem(0xc819, { 0x8d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfaa1, gbc.sp());
        EXPECT(0xc81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc819));
        // 8D 0376
        gbc.setState(0x9dea, 0xfdd9, 0xef70, 0x8634, 0x1d9d, 0x850f, 0x0, 0x0);
        gbc.writeMem(0x9dea, { 0x8d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfdd9, gbc.sp());
        EXPECT(0x9deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9dea));
        // 8D 0377
        gbc.setState(0x70c3, 0x45cb, 0x3f70, 0xc6be, 0xcef9, 0x6992, 0x0, 0x0);
        gbc.writeMem(0x70c3, { 0x8d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x45cb, gbc.sp());
        EXPECT(0x70c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0378
        gbc.setState(0x2eaf, 0xd5c6, 0x5ac0, 0x2e48, 0xfbed, 0xde4, 0x1, 0x1);
        gbc.writeMem(0x2eaf, { 0x8d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd5c6, gbc.sp());
        EXPECT(0x2eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0379
        gbc.setState(0x3cb6, 0xc8b4, 0x27b0, 0x24f7, 0x3224, 0xc144, 0x0, 0x1);
        gbc.writeMem(0x3cb6, { 0x8d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc8b4, gbc.sp());
        EXPECT(0x3cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 037A
        gbc.setState(0x182c, 0x9c6d, 0x3a0, 0x69d5, 0xbebf, 0x9335, 0x0, 0x0);
        gbc.writeMem(0x182c, { 0x8d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9c6d, gbc.sp());
        EXPECT(0x182d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 037B
        gbc.setState(0x547a, 0x3a98, 0x10a0, 0xf2a5, 0xc960, 0xe3bf, 0x1, 0x0);
        gbc.writeMem(0x547a, { 0x8d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3a98, gbc.sp());
        EXPECT(0x547b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 037C
        gbc.setState(0xa58e, 0x62b7, 0x3d60, 0x8932, 0x6086, 0xce9d, 0x0, 0x1);
        gbc.writeMem(0xa58e, { 0x8d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x62b7, gbc.sp());
        EXPECT(0xa58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa58e));
        // 8D 037D
        gbc.setState(0x84cf, 0x1c8, 0xc810, 0x7b6d, 0xd475, 0x32e5, 0x1, 0x0);
        gbc.writeMem(0x84cf, { 0x8d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1c8, gbc.sp());
        EXPECT(0x84d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x84cf));
        // 8D 037E
        gbc.setState(0x46ff, 0xa2b, 0x3b60, 0xa250, 0x467e, 0xcd2c, 0x0, 0x1);
        gbc.writeMem(0x46ff, { 0x8d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa2b, gbc.sp());
        EXPECT(0x4700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 037F
        gbc.setState(0xd982, 0x7b93, 0x73c0, 0x2219, 0xba99, 0x34b3, 0x1, 0x1);
        gbc.writeMem(0xd982, { 0x8d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7b93, gbc.sp());
        EXPECT(0xd983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd982));
        // 8D 0380
        gbc.setState(0xca45, 0x36c0, 0x9aa0, 0x20c4, 0x1459, 0xbc01, 0x0, 0x0);
        gbc.writeMem(0xca45, { 0x8d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x36c0, gbc.sp());
        EXPECT(0xca46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xca45));
        // 8D 0381
        gbc.setState(0x740d, 0xbeb5, 0xc6d0, 0x443f, 0x48f9, 0x1366, 0x0, 0x0);
        gbc.writeMem(0x740d, { 0x8d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbeb5, gbc.sp());
        EXPECT(0x740e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0382
        gbc.setState(0xdbf8, 0x33bf, 0x4510, 0x4c57, 0xdb25, 0x5e09, 0x1, 0x1);
        gbc.writeMem(0xdbf8, { 0x8d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x33bf, gbc.sp());
        EXPECT(0xdbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdbf8));
        // 8D 0383
        gbc.setState(0x336f, 0xc53f, 0xde20, 0xc546, 0xaf31, 0xb009, 0x1, 0x1);
        gbc.writeMem(0x336f, { 0x8d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc53f, gbc.sp());
        EXPECT(0x3370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0384
        gbc.setState(0xdd18, 0x573a, 0xbce0, 0xcd85, 0x53f8, 0x4233, 0x1, 0x1);
        gbc.writeMem(0xdd18, { 0x8d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x573a, gbc.sp());
        EXPECT(0xdd19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdd18));
        // 8D 0385
        gbc.setState(0x2839, 0x9969, 0xac90, 0x3b5e, 0xab41, 0x8e36, 0x0, 0x1);
        gbc.writeMem(0x2839, { 0x8d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9969, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0386
        gbc.setState(0xc519, 0x32eb, 0xa260, 0xafe2, 0xd99b, 0xda23, 0x0, 0x0);
        gbc.writeMem(0xc519, { 0x8d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x32eb, gbc.sp());
        EXPECT(0xc51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc519));
        // 8D 0387
        gbc.setState(0xb733, 0x56c0, 0x8750, 0xadae, 0x4bfa, 0xeb7c, 0x0, 0x1);
        gbc.writeMem(0xb733, { 0x8d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x56c0, gbc.sp());
        EXPECT(0xb734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb733));
        // 8D 0388
        gbc.setState(0xafc7, 0x78d, 0xdd50, 0xe06e, 0xdd35, 0xcace, 0x1, 0x0);
        gbc.writeMem(0xafc7, { 0x8d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x78d, gbc.sp());
        EXPECT(0xafc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xafc7));
        // 8D 0389
        gbc.setState(0x2ac9, 0x5446, 0xd450, 0xd20f, 0xa5d0, 0x21fb, 0x0, 0x0);
        gbc.writeMem(0x2ac9, { 0x8d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5446, gbc.sp());
        EXPECT(0x2aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 038A
        gbc.setState(0x423d, 0x39ff, 0x370, 0xf89, 0x9aa5, 0xdc61, 0x0, 0x0);
        gbc.writeMem(0x423d, { 0x8d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x39ff, gbc.sp());
        EXPECT(0x423e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 038C
        gbc.setState(0xdda7, 0xf2af, 0x5680, 0x31e5, 0xffea, 0x4471, 0x0, 0x1);
        gbc.writeMem(0xdda7, { 0x8d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf2af, gbc.sp());
        EXPECT(0xdda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdda7));
        // 8D 038D
        gbc.setState(0xca90, 0xf202, 0x93c0, 0x63ec, 0x1e91, 0x9ed, 0x0, 0x1);
        gbc.writeMem(0xca90, { 0x8d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf202, gbc.sp());
        EXPECT(0xca91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xca90));
        // 8D 038E
        gbc.setState(0xa4ef, 0xc5c0, 0x2090, 0x27c4, 0x2887, 0x9bc7, 0x0, 0x1);
        gbc.writeMem(0xa4ef, { 0x8d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc5c0, gbc.sp());
        EXPECT(0xa4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa4ef));
        // 8D 038F
        gbc.setState(0x646, 0x17ab, 0x3230, 0xeec6, 0x1e9b, 0x5436, 0x0, 0x0);
        gbc.writeMem(0x646, { 0x8d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x17ab, gbc.sp());
        EXPECT(0x647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0390
        gbc.setState(0x4eec, 0x4d26, 0x3e10, 0xff57, 0x79d2, 0x6433, 0x1, 0x0);
        gbc.writeMem(0x4eec, { 0x8d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4d26, gbc.sp());
        EXPECT(0x4eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0391
        gbc.setState(0xb8cb, 0x6ae6, 0x7e60, 0xeda4, 0x5fed, 0xf802, 0x1, 0x1);
        gbc.writeMem(0xb8cb, { 0x8d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6ae6, gbc.sp());
        EXPECT(0xb8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb8cb));
        // 8D 0392
        gbc.setState(0x97ba, 0x5c84, 0x75b0, 0x952a, 0xa29c, 0xb7d, 0x0, 0x1);
        gbc.writeMem(0x97ba, { 0x8d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5c84, gbc.sp());
        EXPECT(0x97bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x97ba));
        // 8D 0393
        gbc.setState(0x371a, 0x964e, 0x83d0, 0x2b30, 0x273c, 0xe476, 0x0, 0x0);
        gbc.writeMem(0x371a, { 0x8d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x964e, gbc.sp());
        EXPECT(0x371b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0394
        gbc.setState(0xeed6, 0xe0f1, 0xd900, 0x3b55, 0x1665, 0xe091, 0x0, 0x1);
        gbc.writeMem(0xeed6, { 0x8d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe0f1, gbc.sp());
        EXPECT(0xeed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xeed6));
        // 8D 0395
        gbc.setState(0xb54f, 0x7a18, 0x1e90, 0x3937, 0x9d77, 0x8ebc, 0x0, 0x0);
        gbc.writeMem(0xb54f, { 0x8d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7a18, gbc.sp());
        EXPECT(0xb550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb54f));
        // 8D 0396
        gbc.setState(0x1781, 0xef27, 0xd1c0, 0x8bec, 0x6b9d, 0xb5f1, 0x1, 0x0);
        gbc.writeMem(0x1781, { 0x8d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xef27, gbc.sp());
        EXPECT(0x1782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0397
        gbc.setState(0x205b, 0x82d0, 0x7e40, 0x5c71, 0x744, 0xb963, 0x1, 0x1);
        gbc.writeMem(0x205b, { 0x8d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x82d0, gbc.sp());
        EXPECT(0x205c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 0398
        gbc.setState(0x2507, 0xfc60, 0x86c0, 0x181c, 0xfe94, 0xa5d1, 0x0, 0x0);
        gbc.writeMem(0x2507, { 0x8d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfc60, gbc.sp());
        EXPECT(0x2508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 0399
        gbc.setState(0x4e6d, 0x839f, 0xb580, 0xdab5, 0x4193, 0x2219, 0x0, 0x1);
        gbc.writeMem(0x4e6d, { 0x8d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x839f, gbc.sp());
        EXPECT(0x4e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 039A
        gbc.setState(0x3164, 0x830a, 0x8ec0, 0x59f1, 0xeb54, 0xaaf0, 0x1, 0x1);
        gbc.writeMem(0x3164, { 0x8d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x830a, gbc.sp());
        EXPECT(0x3165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 039B
        gbc.setState(0x20f7, 0x9df0, 0x82d0, 0x9a4f, 0x72c0, 0x37ac, 0x1, 0x0);
        gbc.writeMem(0x20f7, { 0x8d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9df0, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 039C
        gbc.setState(0x4636, 0x394e, 0xc8e0, 0x8fd, 0xc0de, 0xf4a, 0x1, 0x1);
        gbc.writeMem(0x4636, { 0x8d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x394e, gbc.sp());
        EXPECT(0x4637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 039D
        gbc.setState(0xa069, 0xb700, 0x36e0, 0xc0f7, 0xded9, 0x8726, 0x1, 0x0);
        gbc.writeMem(0xa069, { 0x8d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb700, gbc.sp());
        EXPECT(0xa06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa069));
        // 8D 039E
        gbc.setState(0x33ae, 0x4d87, 0x7a40, 0xa88a, 0x4b9c, 0x7bc7, 0x1, 0x1);
        gbc.writeMem(0x33ae, { 0x8d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4d87, gbc.sp());
        EXPECT(0x33af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 039F
        gbc.setState(0x8acb, 0x5d9d, 0x1570, 0x9f0d, 0x970c, 0x44ad, 0x0, 0x1);
        gbc.writeMem(0x8acb, { 0x8d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5d9d, gbc.sp());
        EXPECT(0x8acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8acb));
        // 8D 03A0
        gbc.setState(0x8800, 0x1486, 0x2c20, 0x17b8, 0xf904, 0xfbe, 0x0, 0x0);
        gbc.writeMem(0x8800, { 0x8d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1486, gbc.sp());
        EXPECT(0x8801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8800));
        // 8D 03A1
        gbc.setState(0x5ef3, 0x5117, 0x7d50, 0x3066, 0x87a9, 0x2533, 0x1, 0x0);
        gbc.writeMem(0x5ef3, { 0x8d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5117, gbc.sp());
        EXPECT(0x5ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03A2
        gbc.setState(0x5a63, 0xc4c9, 0x9290, 0x19a7, 0x1f22, 0x6cfd, 0x0, 0x0);
        gbc.writeMem(0x5a63, { 0x8d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc4c9, gbc.sp());
        EXPECT(0x5a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03A3
        gbc.setState(0x3567, 0x167e, 0x3270, 0x1f34, 0x5c7a, 0xbf30, 0x1, 0x1);
        gbc.writeMem(0x3567, { 0x8d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x167e, gbc.sp());
        EXPECT(0x3568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03A4
        gbc.setState(0x49c5, 0x4b78, 0x4e80, 0x76ef, 0xda7a, 0xce4c, 0x0, 0x0);
        gbc.writeMem(0x49c5, { 0x8d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4b78, gbc.sp());
        EXPECT(0x49c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03A5
        gbc.setState(0xb9d9, 0xd9df, 0x41b0, 0x7cb1, 0xa893, 0x6a05, 0x1, 0x1);
        gbc.writeMem(0xb9d9, { 0x8d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd9df, gbc.sp());
        EXPECT(0xb9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb9d9));
        // 8D 03A6
        gbc.setState(0x240a, 0xcc6c, 0x9770, 0xccae, 0xb20d, 0xae6b, 0x0, 0x1);
        gbc.writeMem(0x240a, { 0x8d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcc6c, gbc.sp());
        EXPECT(0x240b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03A7
        gbc.setState(0x66ba, 0x55e4, 0x730, 0x8523, 0x45d8, 0x8b4b, 0x0, 0x1);
        gbc.writeMem(0x66ba, { 0x8d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x55e4, gbc.sp());
        EXPECT(0x66bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03A8
        gbc.setState(0x10c9, 0x768e, 0x35a0, 0xbf23, 0xe5c6, 0xbb23, 0x1, 0x1);
        gbc.writeMem(0x10c9, { 0x8d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x768e, gbc.sp());
        EXPECT(0x10ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03A9
        gbc.setState(0x42a5, 0x2fa8, 0xba30, 0xb8b2, 0x26c0, 0x6350, 0x1, 0x0);
        gbc.writeMem(0x42a5, { 0x8d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2fa8, gbc.sp());
        EXPECT(0x42a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03AA
        gbc.setState(0x96e5, 0x77f0, 0xffd0, 0xbd1c, 0xaa3d, 0x3cc1, 0x0, 0x1);
        gbc.writeMem(0x96e5, { 0x8d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x77f0, gbc.sp());
        EXPECT(0x96e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x96e5));
        // 8D 03AB
        gbc.setState(0x3b8a, 0xb7d9, 0x3900, 0x998d, 0xb382, 0x3940, 0x0, 0x0);
        gbc.writeMem(0x3b8a, { 0x8d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb7d9, gbc.sp());
        EXPECT(0x3b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03AC
        gbc.setState(0xca30, 0x6a6e, 0x8f90, 0x78b3, 0x2bce, 0x68e9, 0x1, 0x0);
        gbc.writeMem(0xca30, { 0x8d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6a6e, gbc.sp());
        EXPECT(0xca31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xca30));
        // 8D 03AD
        gbc.setState(0xac9c, 0xa040, 0x2d60, 0x443e, 0x8508, 0xc295, 0x0, 0x0);
        gbc.writeMem(0xac9c, { 0x8d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa040, gbc.sp());
        EXPECT(0xac9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xac9c));
        // 8D 03AE
        gbc.setState(0x5d8d, 0xfe49, 0x7300, 0x7577, 0x758d, 0xdf07, 0x0, 0x0);
        gbc.writeMem(0x5d8d, { 0x8d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfe49, gbc.sp());
        EXPECT(0x5d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03AF
        gbc.setState(0xad69, 0x2899, 0x70d0, 0x7dd5, 0x5167, 0x1cf6, 0x0, 0x1);
        gbc.writeMem(0xad69, { 0x8d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2899, gbc.sp());
        EXPECT(0xad6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xad69));
        // 8D 03B0
        gbc.setState(0xad1f, 0xbd35, 0xc6a0, 0xac98, 0x955d, 0x1d9e, 0x1, 0x0);
        gbc.writeMem(0xad1f, { 0x8d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0xad20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xad1f));
        // 8D 03B1
        gbc.setState(0xee9b, 0xfcc4, 0xe550, 0x3b4c, 0xb049, 0xf8fb, 0x0, 0x0);
        gbc.writeMem(0xee9b, { 0x8d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfcc4, gbc.sp());
        EXPECT(0xee9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xee9b));
        // 8D 03B2
        gbc.setState(0x59f0, 0xe3a7, 0x1710, 0x8e7, 0x80ba, 0x5a65, 0x0, 0x1);
        gbc.writeMem(0x59f0, { 0x8d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe3a7, gbc.sp());
        EXPECT(0x59f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03B3
        gbc.setState(0x15bd, 0xaead, 0x5410, 0x36f3, 0xe8c, 0x618f, 0x0, 0x1);
        gbc.writeMem(0x15bd, { 0x8d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaead, gbc.sp());
        EXPECT(0x15be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03B4
        gbc.setState(0x7d25, 0xd278, 0x5700, 0xf816, 0x70ea, 0x914e, 0x1, 0x1);
        gbc.writeMem(0x7d25, { 0x8d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd278, gbc.sp());
        EXPECT(0x7d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03B5
        gbc.setState(0xed68, 0xdceb, 0xea90, 0xa4ad, 0xb440, 0x45aa, 0x0, 0x0);
        gbc.writeMem(0xed68, { 0x8d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdceb, gbc.sp());
        EXPECT(0xed69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xed68));
        // 8D 03B6
        gbc.setState(0xe79e, 0x19d2, 0x9680, 0xa620, 0x948f, 0xda9c, 0x0, 0x1);
        gbc.writeMem(0xe79e, { 0x8d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x19d2, gbc.sp());
        EXPECT(0xe79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe79e));
        // 8D 03B7
        gbc.setState(0x3d8e, 0xb53d, 0x64f0, 0x9741, 0x4c87, 0xd08d, 0x0, 0x0);
        gbc.writeMem(0x3d8e, { 0x8d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb53d, gbc.sp());
        EXPECT(0x3d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03B8
        gbc.setState(0x69ea, 0xb15f, 0xc720, 0xf019, 0xdd64, 0x7288, 0x0, 0x1);
        gbc.writeMem(0x69ea, { 0x8d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb15f, gbc.sp());
        EXPECT(0x69eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03B9
        gbc.setState(0x1cd0, 0xaca7, 0xf660, 0xd9f6, 0xaceb, 0x323f, 0x1, 0x1);
        gbc.writeMem(0x1cd0, { 0x8d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaca7, gbc.sp());
        EXPECT(0x1cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03BA
        gbc.setState(0x7d98, 0x9c72, 0x15f0, 0x17c, 0x3280, 0x8e55, 0x1, 0x0);
        gbc.writeMem(0x7d98, { 0x8d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9c72, gbc.sp());
        EXPECT(0x7d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03BB
        gbc.setState(0x2369, 0x5de, 0xb8b0, 0x22cd, 0x70b2, 0x2318, 0x1, 0x0);
        gbc.writeMem(0x2369, { 0x8d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5de, gbc.sp());
        EXPECT(0x236a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03BC
        gbc.setState(0xa04c, 0xaebb, 0xde30, 0x9b73, 0x729c, 0x9948, 0x0, 0x1);
        gbc.writeMem(0xa04c, { 0x8d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaebb, gbc.sp());
        EXPECT(0xa04d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa04c));
        // 8D 03BD
        gbc.setState(0x6a67, 0x3119, 0xdae0, 0x6228, 0x5740, 0x1470, 0x1, 0x1);
        gbc.writeMem(0x6a67, { 0x8d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3119, gbc.sp());
        EXPECT(0x6a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03BE
        gbc.setState(0xe25e, 0x9e15, 0x3c10, 0x1497, 0x937c, 0x4fd9, 0x1, 0x0);
        gbc.writeMem(0xe25e, { 0x8d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9e15, gbc.sp());
        EXPECT(0xe25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe25e));
        // 8D 03BF
        gbc.setState(0xa904, 0x40f6, 0xc340, 0xd54e, 0xbb96, 0x85c5, 0x0, 0x0);
        gbc.writeMem(0xa904, { 0x8d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x40f6, gbc.sp());
        EXPECT(0xa905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa904));
        // 8D 03C0
        gbc.setState(0xcce, 0x9727, 0xd180, 0xea1, 0xcdc5, 0xe532, 0x0, 0x0);
        gbc.writeMem(0xcce, { 0x8d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9727, gbc.sp());
        EXPECT(0xccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03C1
        gbc.setState(0x286a, 0x79e7, 0x8100, 0x1997, 0x6cd4, 0x57f6, 0x0, 0x0);
        gbc.writeMem(0x286a, { 0x8d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x79e7, gbc.sp());
        EXPECT(0x286b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03C2
        gbc.setState(0xec42, 0x7863, 0xfed0, 0x1945, 0x4fff, 0x120, 0x1, 0x1);
        gbc.writeMem(0xec42, { 0x8d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7863, gbc.sp());
        EXPECT(0xec43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xec42));
        // 8D 03C3
        gbc.setState(0xdbe2, 0x412d, 0xb590, 0x51, 0x2990, 0xc6ce, 0x0, 0x1);
        gbc.writeMem(0xdbe2, { 0x8d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x412d, gbc.sp());
        EXPECT(0xdbe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdbe2));
        // 8D 03C4
        gbc.setState(0xd142, 0xef48, 0x5b70, 0x5cb0, 0xb4aa, 0x5814, 0x1, 0x0);
        gbc.writeMem(0xd142, { 0x8d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xef48, gbc.sp());
        EXPECT(0xd143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd142));
        // 8D 03C5
        gbc.setState(0x735c, 0xeffd, 0x9ce0, 0x4d29, 0x962e, 0x2568, 0x0, 0x0);
        gbc.writeMem(0x735c, { 0x8d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xeffd, gbc.sp());
        EXPECT(0x735d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03C6
        gbc.setState(0x1c77, 0x72fd, 0xb560, 0xc644, 0xb63d, 0x699e, 0x0, 0x0);
        gbc.writeMem(0x1c77, { 0x8d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x72fd, gbc.sp());
        EXPECT(0x1c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03C8
        gbc.setState(0x18eb, 0xad33, 0x5b50, 0x543b, 0x4171, 0x7754, 0x1, 0x0);
        gbc.writeMem(0x18eb, { 0x8d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xad33, gbc.sp());
        EXPECT(0x18ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03C9
        gbc.setState(0x6587, 0xce6f, 0x3c80, 0xd75c, 0x8edf, 0xcdc3, 0x1, 0x1);
        gbc.writeMem(0x6587, { 0x8d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xce6f, gbc.sp());
        EXPECT(0x6588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03CA
        gbc.setState(0x9637, 0x4e44, 0x3200, 0x83a, 0x6ebe, 0xcf26, 0x1, 0x0);
        gbc.writeMem(0x9637, { 0x8d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4e44, gbc.sp());
        EXPECT(0x9638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9637));
        // 8D 03CB
        gbc.setState(0x1fec, 0x4ab8, 0x22f0, 0x4ebc, 0xad72, 0x6f57, 0x1, 0x1);
        gbc.writeMem(0x1fec, { 0x8d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4ab8, gbc.sp());
        EXPECT(0x1fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03CC
        gbc.setState(0x479f, 0xc9af, 0x4c30, 0x55b, 0x4238, 0x78ba, 0x1, 0x1);
        gbc.writeMem(0x479f, { 0x8d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc9af, gbc.sp());
        EXPECT(0x47a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03CD
        gbc.setState(0x6cb, 0x8739, 0x9210, 0x3002, 0x4b9e, 0xbf0d, 0x1, 0x1);
        gbc.writeMem(0x6cb, { 0x8d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8739, gbc.sp());
        EXPECT(0x6cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03CE
        gbc.setState(0x411f, 0xb0f0, 0x2ae0, 0xbea6, 0x6bbe, 0xc4e7, 0x0, 0x0);
        gbc.writeMem(0x411f, { 0x8d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb0f0, gbc.sp());
        EXPECT(0x4120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03CF
        gbc.setState(0x2ac8, 0x34f4, 0x6ed0, 0x2b73, 0x79f0, 0x51ca, 0x1, 0x1);
        gbc.writeMem(0x2ac8, { 0x8d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x34f4, gbc.sp());
        EXPECT(0x2ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03D0
        gbc.setState(0x8379, 0x3b58, 0x2e80, 0xb60, 0x578, 0xabb4, 0x0, 0x1);
        gbc.writeMem(0x8379, { 0x8d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3b58, gbc.sp());
        EXPECT(0x837a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8379));
        // 8D 03D1
        gbc.setState(0xeedd, 0x3538, 0xed70, 0xbbe4, 0x7b4b, 0xf246, 0x0, 0x0);
        gbc.writeMem(0xeedd, { 0x8d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3538, gbc.sp());
        EXPECT(0xeede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xeedd));
        // 8D 03D2
        gbc.setState(0x3c46, 0x26d1, 0x5f20, 0xa89c, 0xdea1, 0xbc7, 0x1, 0x1);
        gbc.writeMem(0x3c46, { 0x8d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x26d1, gbc.sp());
        EXPECT(0x3c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03D3
        gbc.setState(0xd121, 0x5b57, 0xda30, 0xcbb4, 0x516d, 0x62d8, 0x0, 0x1);
        gbc.writeMem(0xd121, { 0x8d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5b57, gbc.sp());
        EXPECT(0xd122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd121));
        // 8D 03D4
        gbc.setState(0x4ab5, 0x6e0f, 0xe7c0, 0x2c5f, 0xb0e, 0xe24a, 0x1, 0x0);
        gbc.writeMem(0x4ab5, { 0x8d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6e0f, gbc.sp());
        EXPECT(0x4ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03D5
        gbc.setState(0xace4, 0xd213, 0xb570, 0x3cf, 0x906c, 0xa0f0, 0x0, 0x0);
        gbc.writeMem(0xace4, { 0x8d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd213, gbc.sp());
        EXPECT(0xace5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xace4));
        // 8D 03D6
        gbc.setState(0xd2f, 0x2877, 0x7f40, 0x9abf, 0x267d, 0xded, 0x1, 0x0);
        gbc.writeMem(0xd2f, { 0x8d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2877, gbc.sp());
        EXPECT(0xd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03D7
        gbc.setState(0x7304, 0xbe5, 0xd8b0, 0xf3d, 0xd3a1, 0x905d, 0x0, 0x0);
        gbc.writeMem(0x7304, { 0x8d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbe5, gbc.sp());
        EXPECT(0x7305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03D8
        gbc.setState(0xbf57, 0x95e9, 0x4aa0, 0x666d, 0x8ba1, 0x47af, 0x1, 0x1);
        gbc.writeMem(0xbf57, { 0x8d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x95e9, gbc.sp());
        EXPECT(0xbf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbf57));
        // 8D 03D9
        gbc.setState(0x3193, 0xc192, 0x9550, 0xc36f, 0x63eb, 0x139f, 0x0, 0x1);
        gbc.writeMem(0x3193, { 0x8d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc192, gbc.sp());
        EXPECT(0x3194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03DA
        gbc.setState(0x6242, 0xc4f4, 0xb7a0, 0x7461, 0x540b, 0xc7a6, 0x0, 0x1);
        gbc.writeMem(0x6242, { 0x8d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc4f4, gbc.sp());
        EXPECT(0x6243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03DB
        gbc.setState(0x5198, 0x70b5, 0x20b0, 0xe3f5, 0x4227, 0x25fd, 0x0, 0x0);
        gbc.writeMem(0x5198, { 0x8d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x70b5, gbc.sp());
        EXPECT(0x5199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03DC
        gbc.setState(0x2e0, 0xe0ae, 0xe4e0, 0x8437, 0xc321, 0x1488, 0x1, 0x1);
        gbc.writeMem(0x2e0, { 0x8d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe0ae, gbc.sp());
        EXPECT(0x2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03DD
        gbc.setState(0xdf76, 0x9ad, 0xcf50, 0x9ba2, 0x454c, 0x1287, 0x1, 0x1);
        gbc.writeMem(0xdf76, { 0x8d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9ad, gbc.sp());
        EXPECT(0xdf77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdf76));
        // 8D 03DE
        gbc.setState(0xe8d7, 0x2585, 0x1270, 0x573c, 0xbc57, 0xba8c, 0x1, 0x1);
        gbc.writeMem(0xe8d7, { 0x8d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2585, gbc.sp());
        EXPECT(0xe8d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe8d7));
        // 8D 03DF
        gbc.setState(0x28a8, 0x77f7, 0xf230, 0x8ed5, 0x463d, 0xc38, 0x0, 0x1);
        gbc.writeMem(0x28a8, { 0x8d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x77f7, gbc.sp());
        EXPECT(0x28a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03E0
        gbc.setState(0xbc7f, 0x7438, 0xf70, 0x355e, 0xe447, 0xaca0, 0x0, 0x1);
        gbc.writeMem(0xbc7f, { 0x8d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7438, gbc.sp());
        EXPECT(0xbc80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbc7f));
        // 8D 03E1
        gbc.setState(0x705a, 0xf8a1, 0xe6b0, 0x853, 0x8d99, 0x2efa, 0x1, 0x0);
        gbc.writeMem(0x705a, { 0x8d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf8a1, gbc.sp());
        EXPECT(0x705b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03E3
        gbc.setState(0x55ea, 0xc168, 0xce20, 0xc328, 0x8185, 0x7b0e, 0x1, 0x0);
        gbc.writeMem(0x55ea, { 0x8d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc168, gbc.sp());
        EXPECT(0x55eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03E4
        gbc.setState(0xa4d7, 0xec86, 0xa5b0, 0xa0ca, 0x8a0e, 0xaf4e, 0x0, 0x0);
        gbc.writeMem(0xa4d7, { 0x8d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xec86, gbc.sp());
        EXPECT(0xa4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa4d7));
        // 8D 03E5
        gbc.setState(0x4bb5, 0x2212, 0x54c0, 0x8ff6, 0xbc66, 0x2d62, 0x1, 0x0);
        gbc.writeMem(0x4bb5, { 0x8d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2212, gbc.sp());
        EXPECT(0x4bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8D 03E6
        gbc.setState(0x7e43, 0xbc2f, 0xbcc0, 0x3732, 0xfbad, 0xb4e5, 0x1, 0x0);
        gbc.writeMem(0x7e43, { 0x8d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbc2f, gbc.sp());
        EXPECT(0x7e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8D 03E7
        gbc.setState(0x7fed, 0xe7d3, 0x3390, 0x6e52, 0x60c1, 0xfad7, 0x1, 0x1);
        gbc.writeMem(0x7fed, { 0x8d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe7d3, gbc.sp());
        EXPECT(0x7fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
