    TEST(gbcemu, opcode_d0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // D0 0000
        gbc.setState(0x5fd9, 0x108a, 0x4e80, 0xbc97, 0xedbc, 0x4b69, 0x0, 0x1);
        gbc.writeMem(0x108a, { 0x82, 0x14 });
        gbc.writeMem(0x5fd9, { 0xd0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x108c, gbc.sp());
        EXPECT(0x1482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0001
        gbc.setState(0x29be, 0xcf58, 0x2e30, 0x8041, 0xc94c, 0x8db4, 0x0, 0x0);
        gbc.writeMem(0x29be, { 0xd0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcf58, gbc.sp());
        EXPECT(0x29bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0003
        gbc.setState(0x3ea3, 0xa076, 0x1550, 0x447d, 0xc9b8, 0x37f4, 0x0, 0x0);
        gbc.writeMem(0x3ea3, { 0xd0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa076, gbc.sp());
        EXPECT(0x3ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0004
        gbc.setState(0x53bd, 0x9b61, 0xb900, 0x16b8, 0xeb69, 0xc5da, 0x1, 0x0);
        gbc.writeMem(0x53bd, { 0xd0 });
        gbc.writeMem(0x9b61, { 0xec, 0x95 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9b63, gbc.sp());
        EXPECT(0x95ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9b61));
        EXPECT(0x95, gbc.readMem(0x9b62));
        // D0 0005
        gbc.setState(0x56d7, 0xc45f, 0xbcf0, 0x97bf, 0x4059, 0xa1e8, 0x0, 0x0);
        gbc.writeMem(0x56d7, { 0xd0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc45f, gbc.sp());
        EXPECT(0x56d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0007
        gbc.setState(0x49c0, 0x921, 0x2f40, 0x34f7, 0x8098, 0x87f3, 0x0, 0x0);
        gbc.writeMem(0x921, { 0x4f, 0x35 });
        gbc.writeMem(0x49c0, { 0xd0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x923, gbc.sp());
        EXPECT(0x354f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0008
        gbc.setState(0x4a17, 0x5ad7, 0xfd20, 0x5ef, 0x51a2, 0xe20f, 0x0, 0x0);
        gbc.writeMem(0x4a17, { 0xd0 });
        gbc.writeMem(0x5ad7, { 0x52, 0x6a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5ad9, gbc.sp());
        EXPECT(0x6a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0009
        gbc.setState(0x6292, 0xdef2, 0xf2a0, 0xbab0, 0x3576, 0xe12b, 0x1, 0x1);
        gbc.writeMem(0x6292, { 0xd0 });
        gbc.writeMem(0xdef2, { 0x3e, 0x10 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdef4, gbc.sp());
        EXPECT(0x103e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdef2));
        EXPECT(0x10, gbc.readMem(0xdef3));
        // D0 000A
        gbc.setState(0xb748, 0x21a7, 0xe60, 0x3175, 0x7ae0, 0xf2e0, 0x1, 0x1);
        gbc.writeMem(0x21a7, { 0xb3, 0xf1 });
        gbc.writeMem(0xb748, { 0xd0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x21a9, gbc.sp());
        EXPECT(0xf1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb748));
        // D0 000B
        gbc.setState(0x41e3, 0xb53f, 0xcc40, 0x61e5, 0x57c5, 0xe06f, 0x1, 0x1);
        gbc.writeMem(0x41e3, { 0xd0 });
        gbc.writeMem(0xb53f, { 0x33, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb541, gbc.sp());
        EXPECT(0xcc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb53f));
        EXPECT(0xcc, gbc.readMem(0xb540));
        // D0 000C
        gbc.setState(0x8313, 0xde53, 0x2a0, 0x3126, 0x1efc, 0xdebd, 0x0, 0x1);
        gbc.writeMem(0x8313, { 0xd0 });
        gbc.writeMem(0xde53, { 0xa4, 0x47 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xde55, gbc.sp());
        EXPECT(0x47a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8313));
        EXPECT(0xa4, gbc.readMem(0xde53));
        EXPECT(0x47, gbc.readMem(0xde54));
        // D0 000D
        gbc.setState(0xcc09, 0x4b8d, 0x5270, 0xc330, 0x20b5, 0x7d3e, 0x0, 0x0);
        gbc.writeMem(0xcc09, { 0xd0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4b8d, gbc.sp());
        EXPECT(0xcc0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcc09));
        // D0 000E
        gbc.setState(0x250b, 0xdcaa, 0x3480, 0x413d, 0x2e36, 0x5912, 0x1, 0x1);
        gbc.writeMem(0x250b, { 0xd0 });
        gbc.writeMem(0xdcaa, { 0x24, 0xee });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdcac, gbc.sp());
        EXPECT(0xee24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xdcaa));
        EXPECT(0xee, gbc.readMem(0xdcab));
        // D0 000F
        gbc.setState(0x1260, 0x653f, 0x2e0, 0x359, 0xff3d, 0xa74f, 0x1, 0x0);
        gbc.writeMem(0x1260, { 0xd0 });
        gbc.writeMem(0x653f, { 0x58, 0x64 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6541, gbc.sp());
        EXPECT(0x6458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0010
        gbc.setState(0x897e, 0x9806, 0x7b40, 0x8819, 0xbc2c, 0x684a, 0x1, 0x0);
        gbc.writeMem(0x897e, { 0xd0 });
        gbc.writeMem(0x9806, { 0xb1, 0xc1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9808, gbc.sp());
        EXPECT(0xc1b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x897e));
        EXPECT(0xb1, gbc.readMem(0x9806));
        EXPECT(0xc1, gbc.readMem(0x9807));
        // D0 0011
        gbc.setState(0x713f, 0x153, 0xc790, 0x7a85, 0x4c7, 0x55ba, 0x1, 0x0);
        gbc.writeMem(0x713f, { 0xd0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x153, gbc.sp());
        EXPECT(0x7140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0012
        gbc.setState(0xde3, 0x10e9, 0x72f0, 0x9ce6, 0x117d, 0x273b, 0x1, 0x0);
        gbc.writeMem(0xde3, { 0xd0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x10e9, gbc.sp());
        EXPECT(0xde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0013
        gbc.setState(0xdd65, 0xc43f, 0x6460, 0x8bec, 0xd192, 0xb903, 0x1, 0x0);
        gbc.writeMem(0xc43f, { 0x84, 0x3c });
        gbc.writeMem(0xdd65, { 0xd0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc441, gbc.sp());
        EXPECT(0x3c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xc43f));
        EXPECT(0x3c, gbc.readMem(0xc440));
        EXPECT(0xd0, gbc.readMem(0xdd65));
        // D0 0014
        gbc.setState(0xc630, 0x7688, 0x6780, 0x5e5e, 0x19a2, 0x80ce, 0x1, 0x1);
        gbc.writeMem(0x7688, { 0xa1, 0xac });
        gbc.writeMem(0xc630, { 0xd0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x768a, gbc.sp());
        EXPECT(0xaca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc630));
        // D0 0015
        gbc.setState(0x1822, 0x36bb, 0xf630, 0x58, 0xbea, 0x7c65, 0x0, 0x1);
        gbc.writeMem(0x1822, { 0xd0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x36bb, gbc.sp());
        EXPECT(0x1823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0016
        gbc.setState(0x12dd, 0x4c87, 0xdf10, 0xf140, 0x5e2c, 0x83ae, 0x0, 0x0);
        gbc.writeMem(0x12dd, { 0xd0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4c87, gbc.sp());
        EXPECT(0x12de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0017
        gbc.setState(0x7939, 0x960f, 0x4f60, 0x92ba, 0x2dc9, 0x810d, 0x0, 0x1);
        gbc.writeMem(0x7939, { 0xd0 });
        gbc.writeMem(0x960f, { 0x58, 0x37 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9611, gbc.sp());
        EXPECT(0x3758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x960f));
        EXPECT(0x37, gbc.readMem(0x9610));
        // D0 0018
        gbc.setState(0xe023, 0xb74f, 0x6da0, 0xe6d, 0x3f13, 0x5593, 0x1, 0x1);
        gbc.writeMem(0xb74f, { 0xb1, 0x48 });
        gbc.writeMem(0xe023, { 0xd0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb751, gbc.sp());
        EXPECT(0x48b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xb74f));
        EXPECT(0x48, gbc.readMem(0xb750));
        EXPECT(0xd0, gbc.readMem(0xe023));
        // D0 0019
        gbc.setState(0xb1b, 0x9c9d, 0x1a0, 0x8c19, 0xa532, 0x7f9f, 0x0, 0x0);
        gbc.writeMem(0xb1b, { 0xd0 });
        gbc.writeMem(0x9c9d, { 0x7a, 0x21 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9c9f, gbc.sp());
        EXPECT(0x217a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9c9d));
        EXPECT(0x21, gbc.readMem(0x9c9e));
        // D0 001A
        gbc.setState(0x86d4, 0xbfe7, 0x7260, 0xa795, 0xb377, 0xa4d4, 0x1, 0x1);
        gbc.writeMem(0x86d4, { 0xd0 });
        gbc.writeMem(0xbfe7, { 0x24, 0xee });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbfe9, gbc.sp());
        EXPECT(0xee24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x86d4));
        EXPECT(0x24, gbc.readMem(0xbfe7));
        EXPECT(0xee, gbc.readMem(0xbfe8));
        // D0 001B
        gbc.setState(0xe69, 0x8737, 0x1b10, 0x30fc, 0x3b7c, 0x282, 0x1, 0x1);
        gbc.writeMem(0xe69, { 0xd0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8737, gbc.sp());
        EXPECT(0xe6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 001C
        gbc.setState(0x176d, 0x2cd5, 0x3270, 0x3918, 0xa410, 0x7c6f, 0x0, 0x1);
        gbc.writeMem(0x176d, { 0xd0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2cd5, gbc.sp());
        EXPECT(0x176e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 001D
        gbc.setState(0xe71c, 0x2d59, 0x8930, 0x9c44, 0x2fdc, 0x316f, 0x0, 0x1);
        gbc.writeMem(0xe71c, { 0xd0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2d59, gbc.sp());
        EXPECT(0xe71d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe71c));
        // D0 001E
        gbc.setState(0x8eaa, 0x75e4, 0xcad0, 0x1dfe, 0x70e0, 0x8ed1, 0x1, 0x1);
        gbc.writeMem(0x8eaa, { 0xd0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x75e4, gbc.sp());
        EXPECT(0x8eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8eaa));
        // D0 001F
        gbc.setState(0xc6fc, 0xf92c, 0xf850, 0xec6f, 0xc231, 0x264a, 0x1, 0x1);
        gbc.writeMem(0xc6fc, { 0xd0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf92c, gbc.sp());
        EXPECT(0xc6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc6fc));
        // D0 0020
        gbc.setState(0x3688, 0x7170, 0x3a00, 0xc0d0, 0x50, 0x4c11, 0x1, 0x0);
        gbc.writeMem(0x3688, { 0xd0 });
        gbc.writeMem(0x7170, { 0x26, 0x6d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7172, gbc.sp());
        EXPECT(0x6d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0021
        gbc.setState(0xeb14, 0x4355, 0x92c0, 0x131a, 0x61b9, 0xd4c9, 0x0, 0x0);
        gbc.writeMem(0x4355, { 0xfa, 0xc6 });
        gbc.writeMem(0xeb14, { 0xd0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4357, gbc.sp());
        EXPECT(0xc6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xeb14));
        // D0 0022
        gbc.setState(0x6053, 0xc481, 0x1d60, 0x4c3f, 0x43e7, 0x6148, 0x0, 0x0);
        gbc.writeMem(0x6053, { 0xd0 });
        gbc.writeMem(0xc481, { 0xf9, 0x9f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc483, gbc.sp());
        EXPECT(0x9ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xc481));
        EXPECT(0x9f, gbc.readMem(0xc482));
        // D0 0023
        gbc.setState(0xc908, 0xba17, 0xb6a0, 0xab8f, 0x8777, 0xafec, 0x1, 0x1);
        gbc.writeMem(0xba17, { 0xac, 0x6f });
        gbc.writeMem(0xc908, { 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xba19, gbc.sp());
        EXPECT(0x6fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xba17));
        EXPECT(0x6f, gbc.readMem(0xba18));
        EXPECT(0xd0, gbc.readMem(0xc908));
        // D0 0024
        gbc.setState(0x7a74, 0xa324, 0x3e00, 0x78f3, 0x5fb6, 0xb288, 0x1, 0x1);
        gbc.writeMem(0x7a74, { 0xd0 });
        gbc.writeMem(0xa324, { 0x2f, 0x60 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa326, gbc.sp());
        EXPECT(0x602f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa324));
        EXPECT(0x60, gbc.readMem(0xa325));
        // D0 0026
        gbc.setState(0x7e49, 0xcef4, 0x4150, 0xdebb, 0xd934, 0x23e1, 0x1, 0x0);
        gbc.writeMem(0x7e49, { 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcef4, gbc.sp());
        EXPECT(0x7e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0027
        gbc.setState(0xe4b8, 0xdb0f, 0x45b0, 0x480c, 0x107f, 0x7841, 0x0, 0x0);
        gbc.writeMem(0xe4b8, { 0xd0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdb0f, gbc.sp());
        EXPECT(0xe4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe4b8));
        // D0 0028
        gbc.setState(0xd7cf, 0xf6a8, 0xdc30, 0x782c, 0xc808, 0x83bc, 0x0, 0x0);
        gbc.writeMem(0xd7cf, { 0xd0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf6a8, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd7cf));
        // D0 0029
        gbc.setState(0x5cc0, 0xcf90, 0x9820, 0x35d9, 0x8e2b, 0x5f98, 0x0, 0x1);
        gbc.writeMem(0x5cc0, { 0xd0 });
        gbc.writeMem(0xcf90, { 0xcf, 0x13 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcf92, gbc.sp());
        EXPECT(0x13cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xcf90));
        EXPECT(0x13, gbc.readMem(0xcf91));
        // D0 002A
        gbc.setState(0xe187, 0xaeb8, 0x8560, 0xa894, 0x82c1, 0x1015, 0x1, 0x1);
        gbc.writeMem(0xaeb8, { 0x68, 0x25 });
        gbc.writeMem(0xe187, { 0xd0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xaeba, gbc.sp());
        EXPECT(0x2568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xaeb8));
        EXPECT(0x25, gbc.readMem(0xaeb9));
        EXPECT(0xd0, gbc.readMem(0xe187));
        // D0 002B
        gbc.setState(0xe4bc, 0x661f, 0x63d0, 0xb193, 0x97a2, 0xec35, 0x1, 0x1);
        gbc.writeMem(0xe4bc, { 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x661f, gbc.sp());
        EXPECT(0xe4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe4bc));
        // D0 002D
        gbc.setState(0x528e, 0x4fdc, 0x3900, 0xb734, 0xe5bf, 0x380f, 0x0, 0x0);
        gbc.writeMem(0x4fdc, { 0x3c, 0x33 });
        gbc.writeMem(0x528e, { 0xd0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4fde, gbc.sp());
        EXPECT(0x333c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 002E
        gbc.setState(0xdaee, 0x73ba, 0xac70, 0x1500, 0x1ca0, 0xa599, 0x0, 0x0);
        gbc.writeMem(0xdaee, { 0xd0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x73ba, gbc.sp());
        EXPECT(0xdaef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdaee));
        // D0 002F
        gbc.setState(0x300d, 0x770e, 0xcce0, 0x55ea, 0xb2ad, 0xfd7e, 0x0, 0x1);
        gbc.writeMem(0x300d, { 0xd0 });
        gbc.writeMem(0x770e, { 0x2a, 0x6c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7710, gbc.sp());
        EXPECT(0x6c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0030
        gbc.setState(0x1443, 0xf764, 0xe220, 0x23b8, 0x2b84, 0x9a83, 0x0, 0x1);
        gbc.writeMem(0x1443, { 0xd0 });
        gbc.writeMem(0xf764, { 0x97, 0xf5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf766, gbc.sp());
        EXPECT(0xf597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xf764));
        EXPECT(0xf5, gbc.readMem(0xf765));
        // D0 0031
        gbc.setState(0x5a5b, 0xc430, 0x1010, 0x945a, 0x4bbf, 0xbd2, 0x0, 0x0);
        gbc.writeMem(0x5a5b, { 0xd0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc430, gbc.sp());
        EXPECT(0x5a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0032
        gbc.setState(0xb794, 0x8a0, 0xce90, 0x4275, 0xb809, 0xdb12, 0x0, 0x0);
        gbc.writeMem(0xb794, { 0xd0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8a0, gbc.sp());
        EXPECT(0xb795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb794));
        // D0 0033
        gbc.setState(0x6ba2, 0x8136, 0x2e20, 0x3ea1, 0xc496, 0x4266, 0x0, 0x1);
        gbc.writeMem(0x6ba2, { 0xd0 });
        gbc.writeMem(0x8136, { 0x9d, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8138, gbc.sp());
        EXPECT(0x9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8136));
        EXPECT(0x0, gbc.readMem(0x8137));
        // D0 0034
        gbc.setState(0xcc4d, 0xf14f, 0x27f0, 0x5ace, 0xac7d, 0xdff2, 0x0, 0x1);
        gbc.writeMem(0xcc4d, { 0xd0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf14f, gbc.sp());
        EXPECT(0xcc4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcc4d));
        // D0 0035
        gbc.setState(0x18a7, 0x4a3c, 0xe180, 0xff89, 0x712f, 0x969c, 0x1, 0x1);
        gbc.writeMem(0x18a7, { 0xd0 });
        gbc.writeMem(0x4a3c, { 0x47, 0x1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4a3e, gbc.sp());
        EXPECT(0x147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0036
        gbc.setState(0xa6d2, 0xcc79, 0x48c0, 0x30c7, 0x63ba, 0x2283, 0x1, 0x1);
        gbc.writeMem(0xa6d2, { 0xd0 });
        gbc.writeMem(0xcc79, { 0x30, 0xcc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcc7b, gbc.sp());
        EXPECT(0xcc30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa6d2));
        EXPECT(0x30, gbc.readMem(0xcc79));
        EXPECT(0xcc, gbc.readMem(0xcc7a));
        // D0 0037
        gbc.setState(0x220f, 0x5e17, 0xd020, 0x7ac9, 0x9c03, 0x3afd, 0x0, 0x0);
        gbc.writeMem(0x220f, { 0xd0 });
        gbc.writeMem(0x5e17, { 0x2b, 0x23 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5e19, gbc.sp());
        EXPECT(0x232b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0038
        gbc.setState(0x173c, 0x84e0, 0xf340, 0x7c93, 0xa7a8, 0x89bd, 0x0, 0x1);
        gbc.writeMem(0x173c, { 0xd0 });
        gbc.writeMem(0x84e0, { 0x35, 0xaa });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x84e2, gbc.sp());
        EXPECT(0xaa35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x84e0));
        EXPECT(0xaa, gbc.readMem(0x84e1));
        // D0 0039
        gbc.setState(0xcfe6, 0x4bbd, 0xf080, 0x2077, 0x886b, 0x1a7d, 0x1, 0x1);
        gbc.writeMem(0x4bbd, { 0x68, 0xeb });
        gbc.writeMem(0xcfe6, { 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4bbf, gbc.sp());
        EXPECT(0xeb68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcfe6));
        // D0 003A
        gbc.setState(0x2173, 0x6882, 0x9d30, 0xbc58, 0x9d9f, 0x5ce5, 0x1, 0x1);
        gbc.writeMem(0x2173, { 0xd0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6882, gbc.sp());
        EXPECT(0x2174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 003B
        gbc.setState(0x8cab, 0x580d, 0x8f80, 0x1b85, 0x2a51, 0x837d, 0x0, 0x0);
        gbc.writeMem(0x580d, { 0x40, 0x24 });
        gbc.writeMem(0x8cab, { 0xd0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x580f, gbc.sp());
        EXPECT(0x2440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8cab));
        // D0 003C
        gbc.setState(0x85da, 0x6dec, 0xe990, 0x57b5, 0xdcbb, 0x592b, 0x1, 0x0);
        gbc.writeMem(0x85da, { 0xd0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6dec, gbc.sp());
        EXPECT(0x85db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x85da));
        // D0 003D
        gbc.setState(0x87df, 0xb272, 0xfb80, 0xc296, 0x270b, 0xc544, 0x1, 0x0);
        gbc.writeMem(0x87df, { 0xd0 });
        gbc.writeMem(0xb272, { 0x45, 0x30 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb274, gbc.sp());
        EXPECT(0x3045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x87df));
        EXPECT(0x45, gbc.readMem(0xb272));
        EXPECT(0x30, gbc.readMem(0xb273));
        // D0 003E
        gbc.setState(0x2d99, 0x8128, 0xe3b0, 0x6239, 0x1592, 0x8c53, 0x0, 0x0);
        gbc.writeMem(0x2d99, { 0xd0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8128, gbc.sp());
        EXPECT(0x2d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 003F
        gbc.setState(0x6d0f, 0x5ccb, 0x9fe0, 0xf455, 0xf6f8, 0x733, 0x1, 0x1);
        gbc.writeMem(0x5ccb, { 0x33, 0xae });
        gbc.writeMem(0x6d0f, { 0xd0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5ccd, gbc.sp());
        EXPECT(0xae33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0040
        gbc.setState(0x4813, 0x855e, 0x9380, 0x456d, 0x16e8, 0x7ef, 0x0, 0x0);
        gbc.writeMem(0x4813, { 0xd0 });
        gbc.writeMem(0x855e, { 0xd4, 0xac });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8560, gbc.sp());
        EXPECT(0xacd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x855e));
        EXPECT(0xac, gbc.readMem(0x855f));
        // D0 0041
        gbc.setState(0x698e, 0x735a, 0x83a0, 0x43be, 0x2e, 0x5c41, 0x0, 0x1);
        gbc.writeMem(0x698e, { 0xd0 });
        gbc.writeMem(0x735a, { 0xd8, 0x58 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x735c, gbc.sp());
        EXPECT(0x58d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0043
        gbc.setState(0x5abc, 0x5bd7, 0xa40, 0xe1f7, 0x7124, 0x72c3, 0x0, 0x1);
        gbc.writeMem(0x5abc, { 0xd0 });
        gbc.writeMem(0x5bd7, { 0x4a, 0x7d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5bd9, gbc.sp());
        EXPECT(0x7d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0044
        gbc.setState(0x4857, 0xeb4d, 0xb6a0, 0xfc31, 0xdad7, 0x41ca, 0x0, 0x0);
        gbc.writeMem(0x4857, { 0xd0 });
        gbc.writeMem(0xeb4d, { 0xd, 0xa5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xeb4f, gbc.sp());
        EXPECT(0xa50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xeb4d));
        EXPECT(0xa5, gbc.readMem(0xeb4e));
        // D0 0045
        gbc.setState(0xe3b9, 0xb51c, 0x4230, 0xde23, 0x13aa, 0xa893, 0x0, 0x0);
        gbc.writeMem(0xe3b9, { 0xd0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb51c, gbc.sp());
        EXPECT(0xe3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe3b9));
        // D0 0046
        gbc.setState(0x9c49, 0xe524, 0xa40, 0x6429, 0x933, 0x9eab, 0x1, 0x0);
        gbc.writeMem(0x9c49, { 0xd0 });
        gbc.writeMem(0xe524, { 0x5b, 0xbd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe526, gbc.sp());
        EXPECT(0xbd5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9c49));
        EXPECT(0x5b, gbc.readMem(0xe524));
        EXPECT(0xbd, gbc.readMem(0xe525));
        // D0 0047
        gbc.setState(0xe062, 0x4bde, 0x8740, 0xd546, 0x6654, 0xa397, 0x0, 0x1);
        gbc.writeMem(0x4bde, { 0x76, 0x44 });
        gbc.writeMem(0xe062, { 0xd0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4be0, gbc.sp());
        EXPECT(0x4476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe062));
        // D0 0048
        gbc.setState(0x1b08, 0xa755, 0x4a80, 0xf31d, 0xc95e, 0x7dc0, 0x0, 0x1);
        gbc.writeMem(0x1b08, { 0xd0 });
        gbc.writeMem(0xa755, { 0x9b, 0xb4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa757, gbc.sp());
        EXPECT(0xb49b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa755));
        EXPECT(0xb4, gbc.readMem(0xa756));
        // D0 0049
        gbc.setState(0x5090, 0x25d3, 0x4d90, 0x4d7e, 0x33be, 0x2b7c, 0x0, 0x1);
        gbc.writeMem(0x5090, { 0xd0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x25d3, gbc.sp());
        EXPECT(0x5091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 004A
        gbc.setState(0x3a9a, 0xd66e, 0x1b10, 0x165b, 0x528e, 0x3c7, 0x0, 0x0);
        gbc.writeMem(0x3a9a, { 0xd0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd66e, gbc.sp());
        EXPECT(0x3a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 004B
        gbc.setState(0xb001, 0x8cce, 0x6950, 0x16cb, 0xd97a, 0x33eb, 0x1, 0x0);
        gbc.writeMem(0xb001, { 0xd0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8cce, gbc.sp());
        EXPECT(0xb002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb001));
        // D0 004C
        gbc.setState(0xe63c, 0xe490, 0x1d40, 0x6150, 0x3a24, 0x3b74, 0x0, 0x0);
        gbc.writeMem(0xe490, { 0x5c, 0x58 });
        gbc.writeMem(0xe63c, { 0xd0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe492, gbc.sp());
        EXPECT(0x585c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xe490));
        EXPECT(0x58, gbc.readMem(0xe491));
        EXPECT(0xd0, gbc.readMem(0xe63c));
        // D0 004D
        gbc.setState(0x561d, 0x8f3a, 0xf9a0, 0x7902, 0xc02e, 0xaafa, 0x0, 0x1);
        gbc.writeMem(0x561d, { 0xd0 });
        gbc.writeMem(0x8f3a, { 0xef, 0xfa });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8f3c, gbc.sp());
        EXPECT(0xfaef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x8f3a));
        EXPECT(0xfa, gbc.readMem(0x8f3b));
        // D0 004E
        gbc.setState(0xa940, 0x7e85, 0x5560, 0x95a0, 0x82d7, 0x61ca, 0x1, 0x0);
        gbc.writeMem(0x7e85, { 0x85, 0x52 });
        gbc.writeMem(0xa940, { 0xd0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7e87, gbc.sp());
        EXPECT(0x5285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa940));
        // D0 004F
        gbc.setState(0x9375, 0x90f3, 0x33c0, 0xb1d2, 0xc024, 0x3e0a, 0x0, 0x0);
        gbc.writeMem(0x90f3, { 0xef, 0x9a });
        gbc.writeMem(0x9375, { 0xd0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x90f5, gbc.sp());
        EXPECT(0x9aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x90f3));
        EXPECT(0x9a, gbc.readMem(0x90f4));
        EXPECT(0xd0, gbc.readMem(0x9375));
        // D0 0050
        gbc.setState(0x1b3f, 0x1d9d, 0x1630, 0xf8e, 0xc083, 0x3349, 0x1, 0x0);
        gbc.writeMem(0x1b3f, { 0xd0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1d9d, gbc.sp());
        EXPECT(0x1b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0051
        gbc.setState(0x7341, 0x3520, 0x5650, 0x4b8a, 0x6def, 0x6fa6, 0x0, 0x1);
        gbc.writeMem(0x7341, { 0xd0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3520, gbc.sp());
        EXPECT(0x7342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0052
        gbc.setState(0x6771, 0x2c64, 0x820, 0x87b1, 0xd1d6, 0x14b4, 0x0, 0x0);
        gbc.writeMem(0x2c64, { 0x24, 0x5e });
        gbc.writeMem(0x6771, { 0xd0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2c66, gbc.sp());
        EXPECT(0x5e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0053
        gbc.setState(0x9f23, 0x2bea, 0xea40, 0x509d, 0x858c, 0x7e8f, 0x0, 0x0);
        gbc.writeMem(0x2bea, { 0xda, 0x19 });
        gbc.writeMem(0x9f23, { 0xd0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2bec, gbc.sp());
        EXPECT(0x19da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9f23));
        // D0 0054
        gbc.setState(0xa0ee, 0x6344, 0xef80, 0xfd58, 0xb814, 0x5b06, 0x1, 0x1);
        gbc.writeMem(0x6344, { 0x92, 0xbd });
        gbc.writeMem(0xa0ee, { 0xd0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6346, gbc.sp());
        EXPECT(0xbd92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa0ee));
        // D0 0055
        gbc.setState(0x3bcb, 0x3bcb, 0x3fa0, 0x4546, 0x52c5, 0x98e8, 0x1, 0x1);
        gbc.writeMem(0x3bcb, { 0xd0, 0x68 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3bcd, gbc.sp());
        EXPECT(0x68d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0056
        gbc.setState(0x394b, 0x364, 0xa490, 0x1ad8, 0xb47d, 0xe4d5, 0x0, 0x1);
        gbc.writeMem(0x394b, { 0xd0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x364, gbc.sp());
        EXPECT(0x394c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0057
        gbc.setState(0x826a, 0x3bbf, 0xfac0, 0xd490, 0xec7b, 0x49e6, 0x0, 0x1);
        gbc.writeMem(0x3bbf, { 0xdb, 0x5b });
        gbc.writeMem(0x826a, { 0xd0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3bc1, gbc.sp());
        EXPECT(0x5bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x826a));
        // D0 0058
        gbc.setState(0xecee, 0xda45, 0x6680, 0xd79, 0x1a41, 0xe790, 0x0, 0x0);
        gbc.writeMem(0xda45, { 0x71, 0xcd });
        gbc.writeMem(0xecee, { 0xd0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xda47, gbc.sp());
        EXPECT(0xcd71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xda45));
        EXPECT(0xcd, gbc.readMem(0xda46));
        EXPECT(0xd0, gbc.readMem(0xecee));
        // D0 0059
        gbc.setState(0x534e, 0x4a59, 0x9cd0, 0x21e5, 0xbd28, 0x59df, 0x1, 0x0);
        gbc.writeMem(0x534e, { 0xd0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4a59, gbc.sp());
        EXPECT(0x534f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 005A
        gbc.setState(0xbb8a, 0xbec9, 0xf710, 0xfd5c, 0xf865, 0x98f5, 0x0, 0x0);
        gbc.writeMem(0xbb8a, { 0xd0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbec9, gbc.sp());
        EXPECT(0xbb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbb8a));
        // D0 005B
        gbc.setState(0x139a, 0x9de, 0x3660, 0x9b50, 0xf1c5, 0xf9b6, 0x0, 0x1);
        gbc.writeMem(0x9de, { 0x81, 0x14 });
        gbc.writeMem(0x139a, { 0xd0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9e0, gbc.sp());
        EXPECT(0x1481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 005C
        gbc.setState(0x4884, 0x7a6d, 0x7e0, 0xa200, 0x962d, 0x1d05, 0x0, 0x1);
        gbc.writeMem(0x4884, { 0xd0 });
        gbc.writeMem(0x7a6d, { 0xda, 0x10 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7a6f, gbc.sp());
        EXPECT(0x10da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 005D
        gbc.setState(0x7510, 0x4b7c, 0xe370, 0xf865, 0xd9e3, 0x16f6, 0x1, 0x1);
        gbc.writeMem(0x7510, { 0xd0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4b7c, gbc.sp());
        EXPECT(0x7511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 005E
        gbc.setState(0x94bf, 0xf8b2, 0xe480, 0xa81d, 0xdf32, 0x65a9, 0x0, 0x1);
        gbc.writeMem(0x94bf, { 0xd0 });
        gbc.writeMem(0xf8b2, { 0xe5, 0x22 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf8b4, gbc.sp());
        EXPECT(0x22e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x94bf));
        EXPECT(0xe5, gbc.readMem(0xf8b2));
        EXPECT(0x22, gbc.readMem(0xf8b3));
        // D0 005F
        gbc.setState(0xc045, 0x17c9, 0x6b80, 0x748a, 0x42d8, 0x5eee, 0x1, 0x0);
        gbc.writeMem(0x17c9, { 0xdf, 0x1b });
        gbc.writeMem(0xc045, { 0xd0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x17cb, gbc.sp());
        EXPECT(0x1bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc045));
        // D0 0060
        gbc.setState(0x87fc, 0xb5cb, 0x69f0, 0xfc61, 0xeacb, 0xea9b, 0x0, 0x1);
        gbc.writeMem(0x87fc, { 0xd0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb5cb, gbc.sp());
        EXPECT(0x87fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x87fc));
        // D0 0061
        gbc.setState(0x5e3e, 0x2c3a, 0xa130, 0x46e4, 0x8a16, 0x8b32, 0x1, 0x1);
        gbc.writeMem(0x5e3e, { 0xd0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2c3a, gbc.sp());
        EXPECT(0x5e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0062
        gbc.setState(0x9db9, 0x5472, 0x94b0, 0xb904, 0xf971, 0xf80c, 0x1, 0x0);
        gbc.writeMem(0x9db9, { 0xd0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0x9dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9db9));
        // D0 0063
        gbc.setState(0xbe1, 0x18a, 0xddf0, 0x8ee2, 0xad45, 0xa028, 0x1, 0x0);
        gbc.writeMem(0xbe1, { 0xd0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x18a, gbc.sp());
        EXPECT(0xbe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0064
        gbc.setState(0x971e, 0xf6a, 0x2380, 0x98b4, 0x21f8, 0xb8d8, 0x1, 0x1);
        gbc.writeMem(0xf6a, { 0xf6, 0x91 });
        gbc.writeMem(0x971e, { 0xd0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf6c, gbc.sp());
        EXPECT(0x91f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x971e));
        // D0 0065
        gbc.setState(0x9035, 0x3eb1, 0x6450, 0x358d, 0x56a7, 0x43a0, 0x1, 0x0);
        gbc.writeMem(0x9035, { 0xd0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3eb1, gbc.sp());
        EXPECT(0x9036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9035));
        // D0 0066
        gbc.setState(0x9424, 0xb314, 0xe7e0, 0xe931, 0x929f, 0x54a1, 0x0, 0x1);
        gbc.writeMem(0x9424, { 0xd0 });
        gbc.writeMem(0xb314, { 0xc9, 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb316, gbc.sp());
        EXPECT(0x85c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9424));
        EXPECT(0xc9, gbc.readMem(0xb314));
        EXPECT(0x85, gbc.readMem(0xb315));
        // D0 0067
        gbc.setState(0x6f1d, 0x972, 0xe2f0, 0x2846, 0xd4, 0xb5a, 0x0, 0x0);
        gbc.writeMem(0x6f1d, { 0xd0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x972, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0068
        gbc.setState(0x1692, 0x8d40, 0x2480, 0x37e9, 0x4f06, 0xa690, 0x0, 0x0);
        gbc.writeMem(0x1692, { 0xd0 });
        gbc.writeMem(0x8d40, { 0x23, 0xed });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8d42, gbc.sp());
        EXPECT(0xed23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8d40));
        EXPECT(0xed, gbc.readMem(0x8d41));
        // D0 0069
        gbc.setState(0xae88, 0x479f, 0x6e20, 0x1b08, 0x7959, 0x2dcf, 0x0, 0x0);
        gbc.writeMem(0x479f, { 0xcc, 0xaa });
        gbc.writeMem(0xae88, { 0xd0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x47a1, gbc.sp());
        EXPECT(0xaacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xae88));
        // D0 006A
        gbc.setState(0xb6f5, 0x2000, 0x4630, 0xa242, 0xf2f5, 0xaf43, 0x1, 0x0);
        gbc.writeMem(0xb6f5, { 0xd0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2000, gbc.sp());
        EXPECT(0xb6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb6f5));
        // D0 006B
        gbc.setState(0x7321, 0x386e, 0xe820, 0xf53a, 0xad77, 0x31ca, 0x1, 0x0);
        gbc.writeMem(0x386e, { 0x2e, 0x35 });
        gbc.writeMem(0x7321, { 0xd0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3870, gbc.sp());
        EXPECT(0x352e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 006C
        gbc.setState(0xf96, 0xed9c, 0x4a20, 0x8a29, 0xea7d, 0xabd0, 0x1, 0x1);
        gbc.writeMem(0xf96, { 0xd0 });
        gbc.writeMem(0xed9c, { 0xa2, 0x49 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xed9e, gbc.sp());
        EXPECT(0x49a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xed9c));
        EXPECT(0x49, gbc.readMem(0xed9d));
        // D0 006D
        gbc.setState(0x93df, 0x9b7b, 0x7f00, 0x87d9, 0x7b1a, 0x611f, 0x1, 0x1);
        gbc.writeMem(0x93df, { 0xd0 });
        gbc.writeMem(0x9b7b, { 0xda, 0x8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9b7d, gbc.sp());
        EXPECT(0x8da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x93df));
        EXPECT(0xda, gbc.readMem(0x9b7b));
        EXPECT(0x8, gbc.readMem(0x9b7c));
        // D0 006E
        gbc.setState(0x8336, 0x9661, 0xf0f0, 0x26dd, 0x1be6, 0x3df9, 0x0, 0x0);
        gbc.writeMem(0x8336, { 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9661, gbc.sp());
        EXPECT(0x8337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8336));
        // D0 006F
        gbc.setState(0x96f1, 0x8069, 0x8480, 0x755d, 0xe2b6, 0x34c1, 0x0, 0x1);
        gbc.writeMem(0x8069, { 0x88, 0xb });
        gbc.writeMem(0x96f1, { 0xd0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x806b, gbc.sp());
        EXPECT(0xb88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8069));
        EXPECT(0xb, gbc.readMem(0x806a));
        EXPECT(0xd0, gbc.readMem(0x96f1));
        // D0 0070
        gbc.setState(0xd065, 0xac93, 0x37a0, 0xb77f, 0xf3c4, 0x7ab7, 0x0, 0x0);
        gbc.writeMem(0xac93, { 0x12, 0x3d });
        gbc.writeMem(0xd065, { 0xd0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xac95, gbc.sp());
        EXPECT(0x3d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xac93));
        EXPECT(0x3d, gbc.readMem(0xac94));
        EXPECT(0xd0, gbc.readMem(0xd065));
        // D0 0071
        gbc.setState(0xb884, 0x61e3, 0x8510, 0xd1a5, 0x5cad, 0x87b1, 0x1, 0x1);
        gbc.writeMem(0xb884, { 0xd0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x61e3, gbc.sp());
        EXPECT(0xb885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb884));
        // D0 0072
        gbc.setState(0x41a9, 0xc412, 0x49a0, 0x26f5, 0xf83f, 0xb8d8, 0x0, 0x1);
        gbc.writeMem(0x41a9, { 0xd0 });
        gbc.writeMem(0xc412, { 0xa4, 0xbb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc414, gbc.sp());
        EXPECT(0xbba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc412));
        EXPECT(0xbb, gbc.readMem(0xc413));
        // D0 0073
        gbc.setState(0x3b2a, 0x2d0e, 0x8390, 0xb142, 0x6a67, 0xde4a, 0x1, 0x0);
        gbc.writeMem(0x3b2a, { 0xd0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2d0e, gbc.sp());
        EXPECT(0x3b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0075
        gbc.setState(0xbcbc, 0x718d, 0x29f0, 0xbfec, 0xc1c4, 0x9c50, 0x0, 0x1);
        gbc.writeMem(0xbcbc, { 0xd0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x718d, gbc.sp());
        EXPECT(0xbcbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbcbc));
        // D0 0076
        gbc.setState(0x7298, 0xa513, 0x8900, 0x1654, 0x6125, 0xf304, 0x0, 0x0);
        gbc.writeMem(0x7298, { 0xd0 });
        gbc.writeMem(0xa513, { 0xb2, 0xdf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa515, gbc.sp());
        EXPECT(0xdfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa513));
        EXPECT(0xdf, gbc.readMem(0xa514));
        // D0 0078
        gbc.setState(0xc9cd, 0x7dc5, 0xd6b0, 0x869e, 0x1ad4, 0x3f25, 0x0, 0x0);
        gbc.writeMem(0xc9cd, { 0xd0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7dc5, gbc.sp());
        EXPECT(0xc9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc9cd));
        // D0 0079
        gbc.setState(0x8acf, 0xa5e8, 0x6c90, 0xcee2, 0x1c46, 0xbad5, 0x1, 0x0);
        gbc.writeMem(0x8acf, { 0xd0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa5e8, gbc.sp());
        EXPECT(0x8ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8acf));
        // D0 007B
        gbc.setState(0xb87b, 0x3910, 0x45d0, 0x1024, 0xb8e2, 0xc707, 0x0, 0x1);
        gbc.writeMem(0xb87b, { 0xd0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3910, gbc.sp());
        EXPECT(0xb87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb87b));
        // D0 007C
        gbc.setState(0x4a14, 0xb9e1, 0xefc0, 0xeb05, 0x75c1, 0xf1fb, 0x1, 0x0);
        gbc.writeMem(0x4a14, { 0xd0 });
        gbc.writeMem(0xb9e1, { 0x17, 0x89 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb9e3, gbc.sp());
        EXPECT(0x8917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xb9e1));
        EXPECT(0x89, gbc.readMem(0xb9e2));
        // D0 007D
        gbc.setState(0x4e22, 0xcc4, 0x1130, 0xaa2a, 0xdc26, 0x8355, 0x1, 0x0);
        gbc.writeMem(0x4e22, { 0xd0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcc4, gbc.sp());
        EXPECT(0x4e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 007E
        gbc.setState(0xd4fa, 0xbd16, 0x5d10, 0x2859, 0xa6b1, 0xe31a, 0x0, 0x0);
        gbc.writeMem(0xd4fa, { 0xd0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbd16, gbc.sp());
        EXPECT(0xd4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd4fa));
        // D0 007F
        gbc.setState(0xbe23, 0x8909, 0x1230, 0x1b11, 0xd911, 0x9da1, 0x1, 0x1);
        gbc.writeMem(0xbe23, { 0xd0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8909, gbc.sp());
        EXPECT(0xbe24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbe23));
        // D0 0080
        gbc.setState(0xc76b, 0x39c4, 0x7ae0, 0x886c, 0x721e, 0x663a, 0x0, 0x1);
        gbc.writeMem(0x39c4, { 0xe0, 0xb4 });
        gbc.writeMem(0xc76b, { 0xd0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x39c6, gbc.sp());
        EXPECT(0xb4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc76b));
        // D0 0081
        gbc.setState(0x7883, 0xac25, 0xc50, 0x6b41, 0x1557, 0xab54, 0x1, 0x0);
        gbc.writeMem(0x7883, { 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0x7884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0083
        gbc.setState(0xbe0, 0xa540, 0x7b70, 0xf0a4, 0x437d, 0x465b, 0x1, 0x0);
        gbc.writeMem(0xbe0, { 0xd0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa540, gbc.sp());
        EXPECT(0xbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0084
        gbc.setState(0x904f, 0x6822, 0x7070, 0xf544, 0xbf37, 0xc5a2, 0x0, 0x0);
        gbc.writeMem(0x904f, { 0xd0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6822, gbc.sp());
        EXPECT(0x9050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x904f));
        // D0 0085
        gbc.setState(0xd192, 0xcd2b, 0x20e0, 0x9dcb, 0xe057, 0x13de, 0x1, 0x1);
        gbc.writeMem(0xcd2b, { 0xe2, 0xe9 });
        gbc.writeMem(0xd192, { 0xd0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcd2d, gbc.sp());
        EXPECT(0xe9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcd2b));
        EXPECT(0xe9, gbc.readMem(0xcd2c));
        EXPECT(0xd0, gbc.readMem(0xd192));
        // D0 0086
        gbc.setState(0x921d, 0xad77, 0xe1a0, 0x1dbe, 0x939f, 0x51a, 0x0, 0x0);
        gbc.writeMem(0x921d, { 0xd0 });
        gbc.writeMem(0xad77, { 0x4d, 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xad79, gbc.sp());
        EXPECT(0x944d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x921d));
        EXPECT(0x4d, gbc.readMem(0xad77));
        EXPECT(0x94, gbc.readMem(0xad78));
        // D0 0087
        gbc.setState(0x9949, 0x8a07, 0x8ce0, 0x17fd, 0xae97, 0xf721, 0x0, 0x0);
        gbc.writeMem(0x8a07, { 0xba, 0xf8 });
        gbc.writeMem(0x9949, { 0xd0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8a09, gbc.sp());
        EXPECT(0xf8ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8a07));
        EXPECT(0xf8, gbc.readMem(0x8a08));
        EXPECT(0xd0, gbc.readMem(0x9949));
        // D0 0088
        gbc.setState(0x81e6, 0xf68e, 0x8150, 0x7d08, 0xadfb, 0xdfd2, 0x1, 0x0);
        gbc.writeMem(0x81e6, { 0xd0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf68e, gbc.sp());
        EXPECT(0x81e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x81e6));
        // D0 0089
        gbc.setState(0xec30, 0xc6d, 0x4b90, 0x40df, 0x6cbb, 0x603b, 0x1, 0x0);
        gbc.writeMem(0xec30, { 0xd0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc6d, gbc.sp());
        EXPECT(0xec31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xec30));
        // D0 008A
        gbc.setState(0x750f, 0xd13, 0xb440, 0x63, 0xf7f6, 0xded6, 0x0, 0x0);
        gbc.writeMem(0xd13, { 0x8a, 0x74 });
        gbc.writeMem(0x750f, { 0xd0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd15, gbc.sp());
        EXPECT(0x748a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 008B
        gbc.setState(0xd28c, 0x3b05, 0x8c30, 0xc4ab, 0x3ccd, 0x664f, 0x1, 0x0);
        gbc.writeMem(0xd28c, { 0xd0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3b05, gbc.sp());
        EXPECT(0xd28d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd28c));
        // D0 008C
        gbc.setState(0xb6cf, 0xd226, 0x9a30, 0x1640, 0x2c10, 0xecd1, 0x1, 0x0);
        gbc.writeMem(0xb6cf, { 0xd0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd226, gbc.sp());
        EXPECT(0xb6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb6cf));
        // D0 008D
        gbc.setState(0x2a60, 0xba1c, 0xbd40, 0xf962, 0x8646, 0x4070, 0x1, 0x0);
        gbc.writeMem(0x2a60, { 0xd0 });
        gbc.writeMem(0xba1c, { 0x88, 0x93 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xba1e, gbc.sp());
        EXPECT(0x9388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xba1c));
        EXPECT(0x93, gbc.readMem(0xba1d));
        // D0 008E
        gbc.setState(0x5951, 0x94fd, 0x9e80, 0x4bdb, 0x9ae5, 0xb241, 0x1, 0x1);
        gbc.writeMem(0x5951, { 0xd0 });
        gbc.writeMem(0x94fd, { 0x45, 0xe3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x94ff, gbc.sp());
        EXPECT(0xe345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x94fd));
        EXPECT(0xe3, gbc.readMem(0x94fe));
        // D0 008F
        gbc.setState(0xbbd0, 0xc8eb, 0xd660, 0xf317, 0x44e, 0x38b3, 0x1, 0x1);
        gbc.writeMem(0xbbd0, { 0xd0 });
        gbc.writeMem(0xc8eb, { 0x63, 0xc7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc8ed, gbc.sp());
        EXPECT(0xc763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbbd0));
        EXPECT(0x63, gbc.readMem(0xc8eb));
        EXPECT(0xc7, gbc.readMem(0xc8ec));
        // D0 0090
        gbc.setState(0x4cc4, 0xe410, 0xf550, 0x1d78, 0xc4fb, 0xa45, 0x1, 0x1);
        gbc.writeMem(0x4cc4, { 0xd0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe410, gbc.sp());
        EXPECT(0x4cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0091
        gbc.setState(0xaa7, 0xd9e5, 0xdc90, 0x8d35, 0x5a35, 0x9d6c, 0x1, 0x0);
        gbc.writeMem(0xaa7, { 0xd0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd9e5, gbc.sp());
        EXPECT(0xaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0092
        gbc.setState(0xdf59, 0x4130, 0xa950, 0x7bb4, 0xaff0, 0x740d, 0x0, 0x0);
        gbc.writeMem(0xdf59, { 0xd0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4130, gbc.sp());
        EXPECT(0xdf5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdf59));
        // D0 0093
        gbc.setState(0x7348, 0xd7a3, 0xf890, 0x329b, 0x626, 0x70f4, 0x0, 0x0);
        gbc.writeMem(0x7348, { 0xd0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd7a3, gbc.sp());
        EXPECT(0x7349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0094
        gbc.setState(0x4c07, 0xa247, 0xe5a0, 0x74be, 0x7c10, 0x774b, 0x1, 0x0);
        gbc.writeMem(0x4c07, { 0xd0 });
        gbc.writeMem(0xa247, { 0x47, 0xbd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa249, gbc.sp());
        EXPECT(0xbd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa247));
        EXPECT(0xbd, gbc.readMem(0xa248));
        // D0 0095
        gbc.setState(0xe7af, 0x83ca, 0x7a60, 0x20fc, 0xe976, 0x3d09, 0x1, 0x0);
        gbc.writeMem(0x83ca, { 0xd8, 0x97 });
        gbc.writeMem(0xe7af, { 0xd0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x83cc, gbc.sp());
        EXPECT(0x97d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x83ca));
        EXPECT(0x97, gbc.readMem(0x83cb));
        EXPECT(0xd0, gbc.readMem(0xe7af));
        // D0 0096
        gbc.setState(0x3f51, 0x9259, 0xdb30, 0xab90, 0xb4fe, 0xa175, 0x1, 0x0);
        gbc.writeMem(0x3f51, { 0xd0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9259, gbc.sp());
        EXPECT(0x3f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0097
        gbc.setState(0x4479, 0x83f4, 0xce60, 0xaa55, 0xc85f, 0xee50, 0x0, 0x1);
        gbc.writeMem(0x4479, { 0xd0 });
        gbc.writeMem(0x83f4, { 0x60, 0x34 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x83f6, gbc.sp());
        EXPECT(0x3460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x83f4));
        EXPECT(0x34, gbc.readMem(0x83f5));
        // D0 0098
        gbc.setState(0xe7cd, 0x15d3, 0xba30, 0x191e, 0x1feb, 0x1ba9, 0x0, 0x0);
        gbc.writeMem(0xe7cd, { 0xd0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x15d3, gbc.sp());
        EXPECT(0xe7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe7cd));
        // D0 0099
        gbc.setState(0x2fe1, 0x855a, 0xd110, 0x1a8e, 0x7a3, 0x7a0, 0x0, 0x1);
        gbc.writeMem(0x2fe1, { 0xd0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x855a, gbc.sp());
        EXPECT(0x2fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 009A
        gbc.setState(0xb383, 0x9407, 0x3200, 0xd08, 0x565a, 0x6a95, 0x1, 0x0);
        gbc.writeMem(0x9407, { 0x2c, 0x43 });
        gbc.writeMem(0xb383, { 0xd0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9409, gbc.sp());
        EXPECT(0x432c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9407));
        EXPECT(0x43, gbc.readMem(0x9408));
        EXPECT(0xd0, gbc.readMem(0xb383));
        // D0 009B
        gbc.setState(0xe24f, 0xe4ef, 0xb990, 0xa50, 0x4625, 0xfc20, 0x0, 0x1);
        gbc.writeMem(0xe24f, { 0xd0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe4ef, gbc.sp());
        EXPECT(0xe250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe24f));
        // D0 009C
        gbc.setState(0xc287, 0x1a34, 0xf360, 0xc541, 0xe30a, 0xe3e4, 0x0, 0x0);
        gbc.writeMem(0x1a34, { 0xd9, 0x14 });
        gbc.writeMem(0xc287, { 0xd0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1a36, gbc.sp());
        EXPECT(0x14d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc287));
        // D0 009E
        gbc.setState(0x1ca5, 0x6954, 0x8770, 0xa51, 0x4dd4, 0xd576, 0x1, 0x1);
        gbc.writeMem(0x1ca5, { 0xd0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6954, gbc.sp());
        EXPECT(0x1ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 009F
        gbc.setState(0x124a, 0xd1a2, 0x5e90, 0x6b8c, 0xfc7d, 0xe60f, 0x0, 0x0);
        gbc.writeMem(0x124a, { 0xd0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd1a2, gbc.sp());
        EXPECT(0x124b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00A0
        gbc.setState(0x4e85, 0xbba7, 0xc660, 0xdbb, 0x8ee4, 0x15a2, 0x0, 0x1);
        gbc.writeMem(0x4e85, { 0xd0 });
        gbc.writeMem(0xbba7, { 0x98, 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbba9, gbc.sp());
        EXPECT(0x2c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbba7));
        EXPECT(0x2c, gbc.readMem(0xbba8));
        // D0 00A1
        gbc.setState(0x7201, 0xe087, 0x640, 0xc891, 0x7383, 0x68e1, 0x0, 0x0);
        gbc.writeMem(0x7201, { 0xd0 });
        gbc.writeMem(0xe087, { 0x96, 0xe2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe089, gbc.sp());
        EXPECT(0xe296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xe087));
        EXPECT(0xe2, gbc.readMem(0xe088));
        // D0 00A2
        gbc.setState(0x45e8, 0x33b4, 0x7600, 0x149b, 0x91e6, 0xf1e, 0x1, 0x0);
        gbc.writeMem(0x33b4, { 0x8, 0xc2 });
        gbc.writeMem(0x45e8, { 0xd0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x33b6, gbc.sp());
        EXPECT(0xc208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00A3
        gbc.setState(0x7d36, 0x4f5d, 0x7c20, 0x1253, 0x5936, 0xc8f1, 0x1, 0x1);
        gbc.writeMem(0x4f5d, { 0x4b, 0xfc });
        gbc.writeMem(0x7d36, { 0xd0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4f5f, gbc.sp());
        EXPECT(0xfc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00A4
        gbc.setState(0x9b79, 0x92d4, 0x3a30, 0xb1e8, 0x8b10, 0xb32c, 0x0, 0x0);
        gbc.writeMem(0x9b79, { 0xd0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x92d4, gbc.sp());
        EXPECT(0x9b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9b79));
        // D0 00A5
        gbc.setState(0x3298, 0x9d31, 0xed00, 0x668f, 0xc088, 0xbc6d, 0x0, 0x1);
        gbc.writeMem(0x3298, { 0xd0 });
        gbc.writeMem(0x9d31, { 0x6b, 0xf9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9d33, gbc.sp());
        EXPECT(0xf96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x9d31));
        EXPECT(0xf9, gbc.readMem(0x9d32));
        // D0 00A6
        gbc.setState(0x2c32, 0x9f45, 0xd160, 0x115c, 0x17e7, 0x9f73, 0x1, 0x1);
        gbc.writeMem(0x2c32, { 0xd0 });
        gbc.writeMem(0x9f45, { 0xa2, 0xa2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9f47, gbc.sp());
        EXPECT(0xa2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9f45));
        EXPECT(0xa2, gbc.readMem(0x9f46));
        // D0 00A7
        gbc.setState(0x3562, 0xfcb5, 0x6760, 0xa821, 0x8b20, 0xeffc, 0x1, 0x0);
        gbc.writeMem(0x3562, { 0xd0 });
        gbc.writeMem(0xfcb5, { 0xf7, 0x45 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfcb7, gbc.sp());
        EXPECT(0x45f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xfcb5));
        EXPECT(0x45, gbc.readMem(0xfcb6));
        // D0 00A8
        gbc.setState(0x6d81, 0xd13f, 0x29c0, 0xc62, 0x782d, 0x5447, 0x1, 0x0);
        gbc.writeMem(0x6d81, { 0xd0 });
        gbc.writeMem(0xd13f, { 0x8d, 0xb1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd141, gbc.sp());
        EXPECT(0xb18d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd13f));
        EXPECT(0xb1, gbc.readMem(0xd140));
        // D0 00A9
        gbc.setState(0x81a7, 0xce8c, 0x1e60, 0x3e8d, 0x6095, 0xc3aa, 0x0, 0x1);
        gbc.writeMem(0x81a7, { 0xd0 });
        gbc.writeMem(0xce8c, { 0xe7, 0x6a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xce8e, gbc.sp());
        EXPECT(0x6ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x81a7));
        EXPECT(0xe7, gbc.readMem(0xce8c));
        EXPECT(0x6a, gbc.readMem(0xce8d));
        // D0 00AA
        gbc.setState(0x5416, 0x313f, 0x81b0, 0x87a3, 0x9952, 0x321c, 0x1, 0x0);
        gbc.writeMem(0x5416, { 0xd0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x313f, gbc.sp());
        EXPECT(0x5417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00AB
        gbc.setState(0x816b, 0x52b2, 0xc360, 0x4545, 0x9863, 0xbc61, 0x1, 0x0);
        gbc.writeMem(0x52b2, { 0x6e, 0x5f });
        gbc.writeMem(0x816b, { 0xd0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x52b4, gbc.sp());
        EXPECT(0x5f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x816b));
        // D0 00AC
        gbc.setState(0x1fda, 0xeac3, 0x5570, 0xbef9, 0x221, 0x30c6, 0x1, 0x1);
        gbc.writeMem(0x1fda, { 0xd0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xeac3, gbc.sp());
        EXPECT(0x1fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00AD
        gbc.setState(0xa8e2, 0x167c, 0x7090, 0x5fb9, 0x837e, 0x839c, 0x0, 0x0);
        gbc.writeMem(0xa8e2, { 0xd0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x167c, gbc.sp());
        EXPECT(0xa8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa8e2));
        // D0 00AE
        gbc.setState(0x3453, 0x66ae, 0x4080, 0xb747, 0x4522, 0xcb0d, 0x0, 0x0);
        gbc.writeMem(0x3453, { 0xd0 });
        gbc.writeMem(0x66ae, { 0x44, 0xc9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x66b0, gbc.sp());
        EXPECT(0xc944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00AF
        gbc.setState(0x9dce, 0xabc7, 0x3f60, 0x4f2c, 0x8c10, 0xd68b, 0x1, 0x1);
        gbc.writeMem(0x9dce, { 0xd0 });
        gbc.writeMem(0xabc7, { 0xc8, 0x7a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xabc9, gbc.sp());
        EXPECT(0x7ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9dce));
        EXPECT(0xc8, gbc.readMem(0xabc7));
        EXPECT(0x7a, gbc.readMem(0xabc8));
        // D0 00B0
        gbc.setState(0x7ecd, 0xd80d, 0xf5c0, 0x6fce, 0xf18f, 0x35b9, 0x0, 0x1);
        gbc.writeMem(0x7ecd, { 0xd0 });
        gbc.writeMem(0xd80d, { 0xf6, 0xf9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd80f, gbc.sp());
        EXPECT(0xf9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xd80d));
        EXPECT(0xf9, gbc.readMem(0xd80e));
        // D0 00B1
        gbc.setState(0x20, 0xa406, 0xb900, 0xc349, 0x690d, 0x5463, 0x0, 0x1);
        gbc.writeMem(0x20, { 0xd0 });
        gbc.writeMem(0xa406, { 0xf8, 0x90 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa408, gbc.sp());
        EXPECT(0x90f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa406));
        EXPECT(0x90, gbc.readMem(0xa407));
        // D0 00B2
        gbc.setState(0xdac5, 0x1279, 0x18c0, 0x9cf1, 0x6301, 0xf5cd, 0x1, 0x1);
        gbc.writeMem(0x1279, { 0xc1, 0x50 });
        gbc.writeMem(0xdac5, { 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x127b, gbc.sp());
        EXPECT(0x50c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdac5));
        // D0 00B3
        gbc.setState(0x950a, 0xcfa1, 0xb980, 0xa3b6, 0xf1a9, 0x8d66, 0x1, 0x1);
        gbc.writeMem(0x950a, { 0xd0 });
        gbc.writeMem(0xcfa1, { 0x62, 0x63 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcfa3, gbc.sp());
        EXPECT(0x6362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x950a));
        EXPECT(0x62, gbc.readMem(0xcfa1));
        EXPECT(0x63, gbc.readMem(0xcfa2));
        // D0 00B4
        gbc.setState(0x3188, 0x9c83, 0xbf40, 0xf50f, 0xc0d9, 0xb457, 0x1, 0x1);
        gbc.writeMem(0x3188, { 0xd0 });
        gbc.writeMem(0x9c83, { 0x85, 0x16 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9c85, gbc.sp());
        EXPECT(0x1685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9c83));
        EXPECT(0x16, gbc.readMem(0x9c84));
        // D0 00B5
        gbc.setState(0x8e21, 0x9570, 0x3750, 0x6c95, 0x1c5c, 0xea3b, 0x0, 0x0);
        gbc.writeMem(0x8e21, { 0xd0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9570, gbc.sp());
        EXPECT(0x8e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8e21));
        // D0 00B6
        gbc.setState(0x2ba7, 0x1363, 0xd010, 0x81b7, 0xfa25, 0xabba, 0x0, 0x0);
        gbc.writeMem(0x2ba7, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1363, gbc.sp());
        EXPECT(0x2ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00B7
        gbc.setState(0x5ed6, 0x1c83, 0xa150, 0x51a6, 0x46b9, 0xc56b, 0x1, 0x0);
        gbc.writeMem(0x5ed6, { 0xd0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1c83, gbc.sp());
        EXPECT(0x5ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00B8
        gbc.setState(0x9b88, 0x80b5, 0xb640, 0xb79e, 0xde17, 0x66f6, 0x0, 0x1);
        gbc.writeMem(0x80b5, { 0x2c, 0x65 });
        gbc.writeMem(0x9b88, { 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x80b7, gbc.sp());
        EXPECT(0x652c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x80b5));
        EXPECT(0x65, gbc.readMem(0x80b6));
        EXPECT(0xd0, gbc.readMem(0x9b88));
        // D0 00B9
        gbc.setState(0x3f87, 0x2919, 0x3a80, 0x27e2, 0xfcfe, 0xccff, 0x1, 0x0);
        gbc.writeMem(0x2919, { 0xd3, 0x8f });
        gbc.writeMem(0x3f87, { 0xd0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x291b, gbc.sp());
        EXPECT(0x8fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00BA
        gbc.setState(0x70e6, 0x2de1, 0x25a0, 0xf65, 0x8b54, 0x5fa0, 0x1, 0x0);
        gbc.writeMem(0x2de1, { 0x6b, 0x57 });
        gbc.writeMem(0x70e6, { 0xd0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2de3, gbc.sp());
        EXPECT(0x576b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00BB
        gbc.setState(0xb468, 0x4824, 0xbdb0, 0xb791, 0xf88a, 0x358c, 0x0, 0x1);
        gbc.writeMem(0xb468, { 0xd0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4824, gbc.sp());
        EXPECT(0xb469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb468));
        // D0 00BC
        gbc.setState(0x2c4d, 0xeb61, 0xb630, 0xcf5f, 0x52d9, 0x910f, 0x1, 0x0);
        gbc.writeMem(0x2c4d, { 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xeb61, gbc.sp());
        EXPECT(0x2c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00BD
        gbc.setState(0x23b0, 0x933, 0xaf30, 0x3f32, 0xb581, 0x6164, 0x1, 0x1);
        gbc.writeMem(0x23b0, { 0xd0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x933, gbc.sp());
        EXPECT(0x23b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00BE
        gbc.setState(0x5fc9, 0xdf7f, 0x9870, 0xc220, 0xa434, 0x334b, 0x0, 0x1);
        gbc.writeMem(0x5fc9, { 0xd0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdf7f, gbc.sp());
        EXPECT(0x5fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00BF
        gbc.setState(0x5a82, 0xe0f2, 0x65a0, 0xca0a, 0x42b5, 0xad2c, 0x0, 0x0);
        gbc.writeMem(0x5a82, { 0xd0 });
        gbc.writeMem(0xe0f2, { 0x8b, 0xee });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe0f4, gbc.sp());
        EXPECT(0xee8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xe0f2));
        EXPECT(0xee, gbc.readMem(0xe0f3));
        // D0 00C0
        gbc.setState(0xa00b, 0x6cca, 0x99d0, 0x2edc, 0xd31e, 0xf1e0, 0x0, 0x1);
        gbc.writeMem(0xa00b, { 0xd0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6cca, gbc.sp());
        EXPECT(0xa00c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa00b));
        // D0 00C1
        gbc.setState(0x95b8, 0xdd0c, 0x1030, 0x7af8, 0xec8f, 0x7e2c, 0x0, 0x1);
        gbc.writeMem(0x95b8, { 0xd0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdd0c, gbc.sp());
        EXPECT(0x95b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x95b8));
        // D0 00C2
        gbc.setState(0xcccb, 0x99f0, 0x82b0, 0x2d49, 0x6e5f, 0x1808, 0x1, 0x1);
        gbc.writeMem(0xcccb, { 0xd0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x99f0, gbc.sp());
        EXPECT(0xcccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcccb));
        // D0 00C3
        gbc.setState(0x1fe1, 0xdc4, 0x7590, 0x12fb, 0xcd32, 0x9ee1, 0x1, 0x0);
        gbc.writeMem(0x1fe1, { 0xd0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdc4, gbc.sp());
        EXPECT(0x1fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00C4
        gbc.setState(0x9721, 0xbf68, 0x7520, 0x1609, 0x9670, 0xd515, 0x1, 0x1);
        gbc.writeMem(0x9721, { 0xd0 });
        gbc.writeMem(0xbf68, { 0xe3, 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbf6a, gbc.sp());
        EXPECT(0x75e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9721));
        EXPECT(0xe3, gbc.readMem(0xbf68));
        EXPECT(0x75, gbc.readMem(0xbf69));
        // D0 00C5
        gbc.setState(0x8cbc, 0x6597, 0xfe80, 0xb814, 0xc787, 0x633f, 0x0, 0x1);
        gbc.writeMem(0x6597, { 0xd4, 0x66 });
        gbc.writeMem(0x8cbc, { 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6599, gbc.sp());
        EXPECT(0x66d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8cbc));
        // D0 00C6
        gbc.setState(0x21c7, 0xf373, 0x3170, 0x8ef1, 0x1785, 0xfd4e, 0x0, 0x0);
        gbc.writeMem(0x21c7, { 0xd0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf373, gbc.sp());
        EXPECT(0x21c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00C7
        gbc.setState(0x33ea, 0x4197, 0x7530, 0x569b, 0xb961, 0x2120, 0x0, 0x0);
        gbc.writeMem(0x33ea, { 0xd0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4197, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00C8
        gbc.setState(0x154d, 0xb642, 0x7450, 0x9074, 0x82ae, 0x8805, 0x1, 0x1);
        gbc.writeMem(0x154d, { 0xd0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb642, gbc.sp());
        EXPECT(0x154e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00C9
        gbc.setState(0x7406, 0x6f53, 0xbe50, 0xdd90, 0x9a6b, 0x902f, 0x0, 0x0);
        gbc.writeMem(0x7406, { 0xd0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6f53, gbc.sp());
        EXPECT(0x7407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00CA
        gbc.setState(0xc024, 0xa038, 0xcd60, 0x85f4, 0xef3e, 0x37f2, 0x0, 0x0);
        gbc.writeMem(0xa038, { 0x35, 0x4e });
        gbc.writeMem(0xc024, { 0xd0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa03a, gbc.sp());
        EXPECT(0x4e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa038));
        EXPECT(0x4e, gbc.readMem(0xa039));
        EXPECT(0xd0, gbc.readMem(0xc024));
        // D0 00CB
        gbc.setState(0x1598, 0xd059, 0xb940, 0x9ef1, 0xdddd, 0x3b63, 0x1, 0x1);
        gbc.writeMem(0x1598, { 0xd0 });
        gbc.writeMem(0xd059, { 0x77, 0x5d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd05b, gbc.sp());
        EXPECT(0x5d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd059));
        EXPECT(0x5d, gbc.readMem(0xd05a));
        // D0 00CC
        gbc.setState(0x68b4, 0x1083, 0xa070, 0x48bd, 0xb1ec, 0x380, 0x0, 0x0);
        gbc.writeMem(0x68b4, { 0xd0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1083, gbc.sp());
        EXPECT(0x68b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00CD
        gbc.setState(0x40b6, 0xba65, 0x5560, 0xedaf, 0x180e, 0x9a70, 0x0, 0x0);
        gbc.writeMem(0x40b6, { 0xd0 });
        gbc.writeMem(0xba65, { 0xd2, 0x5d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xba67, gbc.sp());
        EXPECT(0x5dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xba65));
        EXPECT(0x5d, gbc.readMem(0xba66));
        // D0 00CE
        gbc.setState(0x21ff, 0x7a6, 0x7420, 0xce0, 0x2c81, 0xf24, 0x1, 0x0);
        gbc.writeMem(0x7a6, { 0x6e, 0x47 });
        gbc.writeMem(0x21ff, { 0xd0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7a8, gbc.sp());
        EXPECT(0x476e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00CF
        gbc.setState(0x1216, 0xc9ce, 0xe890, 0xd565, 0x54ff, 0x2c70, 0x1, 0x0);
        gbc.writeMem(0x1216, { 0xd0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc9ce, gbc.sp());
        EXPECT(0x1217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00D0
        gbc.setState(0xebdb, 0x8a7f, 0xa2c0, 0x1607, 0xa68f, 0xa96c, 0x1, 0x0);
        gbc.writeMem(0x8a7f, { 0x9b, 0x9a });
        gbc.writeMem(0xebdb, { 0xd0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8a81, gbc.sp());
        EXPECT(0x9a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8a7f));
        EXPECT(0x9a, gbc.readMem(0x8a80));
        EXPECT(0xd0, gbc.readMem(0xebdb));
        // D0 00D1
        gbc.setState(0x346b, 0x26fd, 0x9840, 0x98b7, 0xaa37, 0x2676, 0x0, 0x1);
        gbc.writeMem(0x26fd, { 0xf8, 0x88 });
        gbc.writeMem(0x346b, { 0xd0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x26ff, gbc.sp());
        EXPECT(0x88f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00D2
        gbc.setState(0x7efb, 0x6d56, 0xe10, 0x7fcd, 0x7f55, 0xe201, 0x1, 0x1);
        gbc.writeMem(0x7efb, { 0xd0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6d56, gbc.sp());
        EXPECT(0x7efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00D3
        gbc.setState(0x6a8c, 0x644f, 0x60f0, 0x3f68, 0xcd01, 0xea3, 0x1, 0x0);
        gbc.writeMem(0x6a8c, { 0xd0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x644f, gbc.sp());
        EXPECT(0x6a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00D5
        gbc.setState(0x51f6, 0x6c78, 0x12d0, 0x48dc, 0xa575, 0x3a97, 0x1, 0x0);
        gbc.writeMem(0x51f6, { 0xd0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6c78, gbc.sp());
        EXPECT(0x51f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00D6
        gbc.setState(0x60cc, 0x4985, 0xdc00, 0x9096, 0xca33, 0xe108, 0x1, 0x1);
        gbc.writeMem(0x4985, { 0x58, 0xf0 });
        gbc.writeMem(0x60cc, { 0xd0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4987, gbc.sp());
        EXPECT(0xf058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00D7
        gbc.setState(0x1149, 0x7111, 0x1700, 0xe159, 0x341e, 0xfc55, 0x1, 0x0);
        gbc.writeMem(0x1149, { 0xd0 });
        gbc.writeMem(0x7111, { 0xb1, 0x8e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7113, gbc.sp());
        EXPECT(0x8eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00D8
        gbc.setState(0xc638, 0xb493, 0x22f0, 0xae4, 0xc664, 0x4127, 0x1, 0x1);
        gbc.writeMem(0xc638, { 0xd0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb493, gbc.sp());
        EXPECT(0xc639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc638));
        // D0 00DA
        gbc.setState(0x2264, 0xfcbd, 0x2150, 0x6699, 0x2be9, 0xc6e7, 0x0, 0x1);
        gbc.writeMem(0x2264, { 0xd0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfcbd, gbc.sp());
        EXPECT(0x2265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00DB
        gbc.setState(0x7eb, 0x18a4, 0x1180, 0xc4f4, 0xff0a, 0xb4b7, 0x0, 0x0);
        gbc.writeMem(0x7eb, { 0xd0 });
        gbc.writeMem(0x18a4, { 0x20, 0xf4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x18a6, gbc.sp());
        EXPECT(0xf420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00DC
        gbc.setState(0x3454, 0x1541, 0x49a0, 0x151d, 0xdcfd, 0x656e, 0x0, 0x0);
        gbc.writeMem(0x1541, { 0xb0, 0x4a });
        gbc.writeMem(0x3454, { 0xd0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1543, gbc.sp());
        EXPECT(0x4ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00DD
        gbc.setState(0x8277, 0x8371, 0xb110, 0x3843, 0xf484, 0xc648, 0x1, 0x0);
        gbc.writeMem(0x8277, { 0xd0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8371, gbc.sp());
        EXPECT(0x8278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8277));
        // D0 00DE
        gbc.setState(0xa345, 0x1526, 0x4340, 0xf5e, 0xd71, 0x3d43, 0x0, 0x0);
        gbc.writeMem(0x1526, { 0xf, 0xf4 });
        gbc.writeMem(0xa345, { 0xd0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1528, gbc.sp());
        EXPECT(0xf40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa345));
        // D0 00DF
        gbc.setState(0x5915, 0xb024, 0x8550, 0x1b52, 0xf8ef, 0x84b2, 0x1, 0x1);
        gbc.writeMem(0x5915, { 0xd0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb024, gbc.sp());
        EXPECT(0x5916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00E0
        gbc.setState(0x45a7, 0x7673, 0xa9e0, 0xd69c, 0x186f, 0x77ab, 0x0, 0x1);
        gbc.writeMem(0x45a7, { 0xd0 });
        gbc.writeMem(0x7673, { 0x29, 0xac });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7675, gbc.sp());
        EXPECT(0xac29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00E1
        gbc.setState(0x6a81, 0xdf31, 0xa0, 0xc1a, 0xa635, 0x5477, 0x1, 0x0);
        gbc.writeMem(0x6a81, { 0xd0 });
        gbc.writeMem(0xdf31, { 0x7c, 0x1c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdf33, gbc.sp());
        EXPECT(0x1c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xdf31));
        EXPECT(0x1c, gbc.readMem(0xdf32));
        // D0 00E2
        gbc.setState(0x4016, 0x89fb, 0xbaa0, 0x9ec7, 0x6599, 0x695f, 0x1, 0x1);
        gbc.writeMem(0x4016, { 0xd0 });
        gbc.writeMem(0x89fb, { 0xb7, 0x9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x89fd, gbc.sp());
        EXPECT(0x9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x89fb));
        EXPECT(0x9, gbc.readMem(0x89fc));
        // D0 00E4
        gbc.setState(0xb22e, 0xd6f7, 0x33f0, 0x29fc, 0x5e86, 0x3b8a, 0x0, 0x1);
        gbc.writeMem(0xb22e, { 0xd0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd6f7, gbc.sp());
        EXPECT(0xb22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb22e));
        // D0 00E5
        gbc.setState(0x7c6b, 0xba1e, 0x3fa0, 0x6b4e, 0x2e6c, 0x6cb8, 0x0, 0x0);
        gbc.writeMem(0x7c6b, { 0xd0 });
        gbc.writeMem(0xba1e, { 0x8a, 0x4d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xba20, gbc.sp());
        EXPECT(0x4d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xba1e));
        EXPECT(0x4d, gbc.readMem(0xba1f));
        // D0 00E6
        gbc.setState(0x1dd0, 0xf2ba, 0x8850, 0x1ce7, 0x192b, 0x9a68, 0x1, 0x1);
        gbc.writeMem(0x1dd0, { 0xd0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf2ba, gbc.sp());
        EXPECT(0x1dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00E7
        gbc.setState(0x856d, 0x7cb6, 0x8320, 0x5cd8, 0x2b03, 0xde55, 0x0, 0x0);
        gbc.writeMem(0x7cb6, { 0x73, 0x28 });
        gbc.writeMem(0x856d, { 0xd0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7cb8, gbc.sp());
        EXPECT(0x2873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x856d));
        // D0 00E8
        gbc.setState(0xeca5, 0xd17d, 0xd760, 0x5a66, 0xb42d, 0x3d8c, 0x0, 0x1);
        gbc.writeMem(0xd17d, { 0xfd, 0xb7 });
        gbc.writeMem(0xeca5, { 0xd0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd17f, gbc.sp());
        EXPECT(0xb7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xd17d));
        EXPECT(0xb7, gbc.readMem(0xd17e));
        EXPECT(0xd0, gbc.readMem(0xeca5));
        // D0 00E9
        gbc.setState(0x4c02, 0xbc27, 0xb120, 0xd851, 0xc693, 0xe913, 0x0, 0x0);
        gbc.writeMem(0x4c02, { 0xd0 });
        gbc.writeMem(0xbc27, { 0xb9, 0x8a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbc29, gbc.sp());
        EXPECT(0x8ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbc27));
        EXPECT(0x8a, gbc.readMem(0xbc28));
        // D0 00EA
        gbc.setState(0x8916, 0xbaa0, 0xa820, 0xe51a, 0x7bf9, 0x3ef6, 0x0, 0x0);
        gbc.writeMem(0x8916, { 0xd0 });
        gbc.writeMem(0xbaa0, { 0xbf, 0xf7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbaa2, gbc.sp());
        EXPECT(0xf7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8916));
        EXPECT(0xbf, gbc.readMem(0xbaa0));
        EXPECT(0xf7, gbc.readMem(0xbaa1));
        // D0 00EB
        gbc.setState(0x82fb, 0x1006, 0xca0, 0xe95f, 0xc6a, 0x530d, 0x1, 0x1);
        gbc.writeMem(0x1006, { 0xb3, 0x88 });
        gbc.writeMem(0x82fb, { 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1008, gbc.sp());
        EXPECT(0x88b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x82fb));
        // D0 00EC
        gbc.setState(0x7b45, 0x297a, 0x18f0, 0x48a8, 0x5d9e, 0x6cd8, 0x1, 0x1);
        gbc.writeMem(0x7b45, { 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x297a, gbc.sp());
        EXPECT(0x7b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00ED
        gbc.setState(0x945f, 0xfd60, 0x58a0, 0x4a21, 0x48fa, 0xfd16, 0x0, 0x1);
        gbc.writeMem(0x945f, { 0xd0 });
        gbc.writeMem(0xfd60, { 0x8b, 0x7f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfd62, gbc.sp());
        EXPECT(0x7f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x945f));
        EXPECT(0x8b, gbc.readMem(0xfd60));
        EXPECT(0x7f, gbc.readMem(0xfd61));
        // D0 00EE
        gbc.setState(0xa6d9, 0x2b0b, 0xaeb0, 0x2937, 0x741b, 0x1f1b, 0x0, 0x1);
        gbc.writeMem(0xa6d9, { 0xd0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2b0b, gbc.sp());
        EXPECT(0xa6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa6d9));
        // D0 00EF
        gbc.setState(0x47b5, 0xa01d, 0x7520, 0x57ef, 0x9754, 0x6466, 0x0, 0x0);
        gbc.writeMem(0x47b5, { 0xd0 });
        gbc.writeMem(0xa01d, { 0xec, 0xd1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa01f, gbc.sp());
        EXPECT(0xd1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa01d));
        EXPECT(0xd1, gbc.readMem(0xa01e));
        // D0 00F0
        gbc.setState(0x2329, 0xea9d, 0x27b0, 0xfcf6, 0x6a90, 0x81b2, 0x0, 0x1);
        gbc.writeMem(0x2329, { 0xd0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xea9d, gbc.sp());
        EXPECT(0x232a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00F1
        gbc.setState(0x3ab6, 0xb632, 0x320, 0x5b8b, 0x1d0a, 0xda46, 0x1, 0x0);
        gbc.writeMem(0x3ab6, { 0xd0 });
        gbc.writeMem(0xb632, { 0xfb, 0x2c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb634, gbc.sp());
        EXPECT(0x2cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xb632));
        EXPECT(0x2c, gbc.readMem(0xb633));
        // D0 00F2
        gbc.setState(0x170d, 0xe757, 0xe340, 0xdfd1, 0x492f, 0xc4ce, 0x0, 0x1);
        gbc.writeMem(0x170d, { 0xd0 });
        gbc.writeMem(0xe757, { 0xa1, 0xaa });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe759, gbc.sp());
        EXPECT(0xaaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe757));
        EXPECT(0xaa, gbc.readMem(0xe758));
        // D0 00F3
        gbc.setState(0x8e18, 0x2a71, 0x35c0, 0x697d, 0x9a1c, 0x90c5, 0x1, 0x1);
        gbc.writeMem(0x2a71, { 0x86, 0x1a });
        gbc.writeMem(0x8e18, { 0xd0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2a73, gbc.sp());
        EXPECT(0x1a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8e18));
        // D0 00F4
        gbc.setState(0x738c, 0x33c9, 0x6910, 0x70ff, 0xa857, 0x745a, 0x1, 0x0);
        gbc.writeMem(0x738c, { 0xd0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x33c9, gbc.sp());
        EXPECT(0x738d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00F5
        gbc.setState(0x52f8, 0x60c1, 0xcc40, 0xbc1d, 0x9411, 0xc3cf, 0x0, 0x1);
        gbc.writeMem(0x52f8, { 0xd0 });
        gbc.writeMem(0x60c1, { 0xd1, 0x90 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x60c3, gbc.sp());
        EXPECT(0x90d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00F6
        gbc.setState(0x7059, 0xb2a1, 0x90, 0xd0d6, 0x5e86, 0x87fb, 0x1, 0x0);
        gbc.writeMem(0x7059, { 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb2a1, gbc.sp());
        EXPECT(0x705a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00F7
        gbc.setState(0x9720, 0x8ee2, 0x230, 0x5fb, 0x18f8, 0xbfe2, 0x1, 0x0);
        gbc.writeMem(0x9720, { 0xd0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8ee2, gbc.sp());
        EXPECT(0x9721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9720));
        // D0 00F8
        gbc.setState(0xedaa, 0x172, 0x1330, 0x3b34, 0xd523, 0xe5e3, 0x0, 0x0);
        gbc.writeMem(0xedaa, { 0xd0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x172, gbc.sp());
        EXPECT(0xedab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xedaa));
        // D0 00F9
        gbc.setState(0x10c4, 0x2e05, 0x1dc0, 0xd1b2, 0xdbbc, 0x15a6, 0x0, 0x0);
        gbc.writeMem(0x10c4, { 0xd0 });
        gbc.writeMem(0x2e05, { 0x8a, 0x33 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2e07, gbc.sp());
        EXPECT(0x338a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 00FA
        gbc.setState(0x31ce, 0x43fa, 0xd6b0, 0x367a, 0xfd7c, 0xeb40, 0x0, 0x0);
        gbc.writeMem(0x31ce, { 0xd0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x43fa, gbc.sp());
        EXPECT(0x31cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00FB
        gbc.setState(0x5562, 0xe919, 0xcba0, 0x8ad3, 0x168e, 0x73b2, 0x0, 0x0);
        gbc.writeMem(0x5562, { 0xd0 });
        gbc.writeMem(0xe919, { 0x3, 0x78 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe91b, gbc.sp());
        EXPECT(0x7803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe919));
        EXPECT(0x78, gbc.readMem(0xe91a));
        // D0 00FC
        gbc.setState(0x4bef, 0x9cdf, 0x7a10, 0x66f2, 0x5b10, 0x210c, 0x1, 0x1);
        gbc.writeMem(0x4bef, { 0xd0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9cdf, gbc.sp());
        EXPECT(0x4bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00FD
        gbc.setState(0x78ab, 0x4d3a, 0xeb50, 0x3453, 0xb3f4, 0x93b1, 0x1, 0x0);
        gbc.writeMem(0x78ab, { 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4d3a, gbc.sp());
        EXPECT(0x78ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00FE
        gbc.setState(0x4829, 0xb7c5, 0xe50, 0x4ffd, 0x1074, 0x8365, 0x1, 0x1);
        gbc.writeMem(0x4829, { 0xd0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb7c5, gbc.sp());
        EXPECT(0x482a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 00FF
        gbc.setState(0x2d5c, 0x8a9f, 0xa300, 0x3404, 0xfb24, 0xfc60, 0x0, 0x1);
        gbc.writeMem(0x2d5c, { 0xd0 });
        gbc.writeMem(0x8a9f, { 0xcd, 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8aa1, gbc.sp());
        EXPECT(0x2dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x8a9f));
        EXPECT(0x2d, gbc.readMem(0x8aa0));
        // D0 0100
        gbc.setState(0x89ff, 0x3166, 0xdee0, 0x8ad3, 0xeeb4, 0x5181, 0x0, 0x0);
        gbc.writeMem(0x3166, { 0x5a, 0x3b });
        gbc.writeMem(0x89ff, { 0xd0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3168, gbc.sp());
        EXPECT(0x3b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x89ff));
        // D0 0101
        gbc.setState(0x85ea, 0x37f1, 0x91c0, 0x73e5, 0x6da3, 0xb88f, 0x1, 0x0);
        gbc.writeMem(0x37f1, { 0x82, 0xe0 });
        gbc.writeMem(0x85ea, { 0xd0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x37f3, gbc.sp());
        EXPECT(0xe082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x85ea));
        // D0 0102
        gbc.setState(0x5cd3, 0x995a, 0x7ea0, 0xa5dd, 0xbced, 0xe27d, 0x1, 0x1);
        gbc.writeMem(0x5cd3, { 0xd0 });
        gbc.writeMem(0x995a, { 0xbe, 0x40 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x995c, gbc.sp());
        EXPECT(0x40be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x995a));
        EXPECT(0x40, gbc.readMem(0x995b));
        // D0 0103
        gbc.setState(0xd979, 0x1b0, 0xe260, 0x1e84, 0x6f79, 0x9f3f, 0x1, 0x1);
        gbc.writeMem(0x1b0, { 0x5f, 0xcd });
        gbc.writeMem(0xd979, { 0xd0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1b2, gbc.sp());
        EXPECT(0xcd5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd979));
        // D0 0105
        gbc.setState(0xc314, 0x4aee, 0xa4e0, 0x8eef, 0x1a47, 0xa66e, 0x0, 0x1);
        gbc.writeMem(0x4aee, { 0x4f, 0x30 });
        gbc.writeMem(0xc314, { 0xd0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4af0, gbc.sp());
        EXPECT(0x304f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc314));
        // D0 0106
        gbc.setState(0x7c31, 0x1661, 0x1510, 0xadba, 0xeb44, 0xc5d3, 0x0, 0x1);
        gbc.writeMem(0x7c31, { 0xd0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1661, gbc.sp());
        EXPECT(0x7c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0107
        gbc.setState(0x80c4, 0x6bf0, 0x8da0, 0xc86d, 0xe036, 0x94aa, 0x1, 0x0);
        gbc.writeMem(0x6bf0, { 0x6a, 0x57 });
        gbc.writeMem(0x80c4, { 0xd0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6bf2, gbc.sp());
        EXPECT(0x576a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x80c4));
        // D0 0108
        gbc.setState(0xaaf0, 0x14a8, 0x57a0, 0xab8a, 0x467, 0x8e1, 0x1, 0x0);
        gbc.writeMem(0x14a8, { 0x4a, 0xe8 });
        gbc.writeMem(0xaaf0, { 0xd0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x14aa, gbc.sp());
        EXPECT(0xe84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xaaf0));
        // D0 0109
        gbc.setState(0x8413, 0x61e0, 0xa770, 0x15c2, 0x7cda, 0x69db, 0x1, 0x1);
        gbc.writeMem(0x8413, { 0xd0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x61e0, gbc.sp());
        EXPECT(0x8414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8413));
        // D0 010A
        gbc.setState(0x49ad, 0x37fe, 0x2970, 0xa2e4, 0xf385, 0xd249, 0x0, 0x1);
        gbc.writeMem(0x49ad, { 0xd0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x37fe, gbc.sp());
        EXPECT(0x49ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 010B
        gbc.setState(0x20fd, 0xc45f, 0x5fe0, 0x6261, 0x7b16, 0x91be, 0x0, 0x0);
        gbc.writeMem(0x20fd, { 0xd0 });
        gbc.writeMem(0xc45f, { 0x82, 0xed });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc461, gbc.sp());
        EXPECT(0xed82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc45f));
        EXPECT(0xed, gbc.readMem(0xc460));
        // D0 010C
        gbc.setState(0x1d52, 0x5997, 0x9780, 0xd7e9, 0x73c7, 0x794, 0x0, 0x1);
        gbc.writeMem(0x1d52, { 0xd0 });
        gbc.writeMem(0x5997, { 0xe2, 0xb1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5999, gbc.sp());
        EXPECT(0xb1e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 010D
        gbc.setState(0x7ae, 0xdb66, 0x2b00, 0x7698, 0x619e, 0xa890, 0x1, 0x0);
        gbc.writeMem(0x7ae, { 0xd0 });
        gbc.writeMem(0xdb66, { 0xd0, 0xfd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdb68, gbc.sp());
        EXPECT(0xfdd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdb66));
        EXPECT(0xfd, gbc.readMem(0xdb67));
        // D0 010F
        gbc.setState(0x6ba5, 0x3077, 0x7d90, 0xc8ef, 0xe78b, 0xbd58, 0x1, 0x0);
        gbc.writeMem(0x6ba5, { 0xd0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3077, gbc.sp());
        EXPECT(0x6ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0111
        gbc.setState(0x7c25, 0x78e9, 0x4400, 0xc404, 0x8399, 0xc1b, 0x1, 0x1);
        gbc.writeMem(0x78e9, { 0xae, 0xac });
        gbc.writeMem(0x7c25, { 0xd0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x78eb, gbc.sp());
        EXPECT(0xacae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0112
        gbc.setState(0xe29f, 0x88d7, 0x5830, 0x60f7, 0x8c5a, 0x2164, 0x1, 0x1);
        gbc.writeMem(0xe29f, { 0xd0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x88d7, gbc.sp());
        EXPECT(0xe2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe29f));
        // D0 0113
        gbc.setState(0x9f63, 0xfea3, 0x7af0, 0x4376, 0xa6b2, 0x63b0, 0x0, 0x1);
        gbc.writeMem(0x9f63, { 0xd0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfea3, gbc.sp());
        EXPECT(0x9f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9f63));
        // D0 0115
        gbc.setState(0x14b6, 0x688a, 0xc9f0, 0x7430, 0x53a2, 0xa39f, 0x0, 0x0);
        gbc.writeMem(0x14b6, { 0xd0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x688a, gbc.sp());
        EXPECT(0x14b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0116
        gbc.setState(0x2b37, 0x4bad, 0xc9c0, 0x9c0e, 0xbe73, 0xeb79, 0x1, 0x0);
        gbc.writeMem(0x2b37, { 0xd0 });
        gbc.writeMem(0x4bad, { 0xc3, 0x85 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0x85c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0118
        gbc.setState(0x5b63, 0x87de, 0xe610, 0x9b93, 0x18e8, 0x378f, 0x0, 0x1);
        gbc.writeMem(0x5b63, { 0xd0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x87de, gbc.sp());
        EXPECT(0x5b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0119
        gbc.setState(0xd973, 0xc853, 0x6860, 0x62b6, 0xa370, 0x78e8, 0x1, 0x1);
        gbc.writeMem(0xc853, { 0x83, 0xad });
        gbc.writeMem(0xd973, { 0xd0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc855, gbc.sp());
        EXPECT(0xad83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xc853));
        EXPECT(0xad, gbc.readMem(0xc854));
        EXPECT(0xd0, gbc.readMem(0xd973));
        // D0 011A
        gbc.setState(0x87fa, 0xa8f3, 0x7e20, 0x95a2, 0xaf2d, 0x94af, 0x1, 0x0);
        gbc.writeMem(0x87fa, { 0xd0 });
        gbc.writeMem(0xa8f3, { 0x98, 0xc8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa8f5, gbc.sp());
        EXPECT(0xc898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x87fa));
        EXPECT(0x98, gbc.readMem(0xa8f3));
        EXPECT(0xc8, gbc.readMem(0xa8f4));
        // D0 011C
        gbc.setState(0xa25, 0xeb02, 0xea20, 0x5b65, 0x22a, 0xf01a, 0x0, 0x1);
        gbc.writeMem(0xa25, { 0xd0 });
        gbc.writeMem(0xeb02, { 0xd7, 0x6e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xeb04, gbc.sp());
        EXPECT(0x6ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xeb02));
        EXPECT(0x6e, gbc.readMem(0xeb03));
        // D0 011D
        gbc.setState(0xb3a, 0x1b67, 0x6210, 0xbb28, 0x3166, 0xc216, 0x0, 0x0);
        gbc.writeMem(0xb3a, { 0xd0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1b67, gbc.sp());
        EXPECT(0xb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 011E
        gbc.setState(0x747, 0x14fc, 0xcce0, 0x6c1f, 0x7f1f, 0xfa03, 0x1, 0x0);
        gbc.writeMem(0x747, { 0xd0 });
        gbc.writeMem(0x14fc, { 0x78, 0xc1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x14fe, gbc.sp());
        EXPECT(0xc178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 011F
        gbc.setState(0xacc3, 0xc09a, 0xfc70, 0x9b12, 0x1fca, 0x1bc6, 0x0, 0x1);
        gbc.writeMem(0xacc3, { 0xd0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc09a, gbc.sp());
        EXPECT(0xacc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xacc3));
        // D0 0120
        gbc.setState(0x56e9, 0x7e52, 0xb5b0, 0x5975, 0x9720, 0x5174, 0x1, 0x0);
        gbc.writeMem(0x56e9, { 0xd0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7e52, gbc.sp());
        EXPECT(0x56ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0121
        gbc.setState(0x74af, 0xb30a, 0x12a0, 0xab0f, 0x3f8f, 0x61c7, 0x0, 0x0);
        gbc.writeMem(0x74af, { 0xd0 });
        gbc.writeMem(0xb30a, { 0xea, 0xe5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb30c, gbc.sp());
        EXPECT(0xe5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xb30a));
        EXPECT(0xe5, gbc.readMem(0xb30b));
        // D0 0122
        gbc.setState(0xc820, 0xdb87, 0x4cc0, 0xd92d, 0x848d, 0xba05, 0x0, 0x0);
        gbc.writeMem(0xc820, { 0xd0 });
        gbc.writeMem(0xdb87, { 0x3e, 0xcc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdb89, gbc.sp());
        EXPECT(0xcc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc820));
        EXPECT(0x3e, gbc.readMem(0xdb87));
        EXPECT(0xcc, gbc.readMem(0xdb88));
        // D0 0123
        gbc.setState(0x319f, 0x998b, 0x1690, 0xbb2c, 0x69f3, 0x3092, 0x1, 0x1);
        gbc.writeMem(0x319f, { 0xd0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x998b, gbc.sp());
        EXPECT(0x31a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0124
        gbc.setState(0xbc, 0xee9, 0xa5c0, 0xbadb, 0xbd85, 0xfb55, 0x0, 0x0);
        gbc.writeMem(0xbc, { 0xd0 });
        gbc.writeMem(0xee9, { 0xef, 0x2f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xeeb, gbc.sp());
        EXPECT(0x2fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0125
        gbc.setState(0x9d2b, 0x7547, 0x65a0, 0x6b3e, 0x3e66, 0x8ed3, 0x0, 0x1);
        gbc.writeMem(0x7547, { 0xed, 0xfc });
        gbc.writeMem(0x9d2b, { 0xd0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7549, gbc.sp());
        EXPECT(0xfced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9d2b));
        // D0 0126
        gbc.setState(0x2429, 0xffc5, 0x4910, 0xc441, 0xced3, 0x9e91, 0x0, 0x1);
        gbc.writeMem(0x2429, { 0xd0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xffc5, gbc.sp());
        EXPECT(0x242a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0127
        gbc.setState(0x4e97, 0x297b, 0x6ac0, 0xc697, 0xbd32, 0x918f, 0x0, 0x0);
        gbc.writeMem(0x297b, { 0xfc, 0xea });
        gbc.writeMem(0x4e97, { 0xd0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x297d, gbc.sp());
        EXPECT(0xeafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0128
        gbc.setState(0x3a98, 0x3f98, 0xa350, 0x4d77, 0xe2b4, 0x8e50, 0x1, 0x0);
        gbc.writeMem(0x3a98, { 0xd0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3f98, gbc.sp());
        EXPECT(0x3a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0129
        gbc.setState(0x1e2c, 0x60d1, 0x8bf0, 0xec81, 0xc31f, 0xc6ff, 0x0, 0x0);
        gbc.writeMem(0x1e2c, { 0xd0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x60d1, gbc.sp());
        EXPECT(0x1e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 012A
        gbc.setState(0x4228, 0x8dca, 0x6170, 0x5fd8, 0xd0b8, 0x4adc, 0x0, 0x1);
        gbc.writeMem(0x4228, { 0xd0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8dca, gbc.sp());
        EXPECT(0x4229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 012B
        gbc.setState(0xce03, 0xdc3, 0xb240, 0x4346, 0xdd4a, 0x8a0b, 0x1, 0x0);
        gbc.writeMem(0xdc3, { 0x4, 0xea });
        gbc.writeMem(0xce03, { 0xd0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdc5, gbc.sp());
        EXPECT(0xea04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xce03));
        // D0 012C
        gbc.setState(0xd6e2, 0x70c8, 0xc7d0, 0x7df1, 0xf225, 0xa713, 0x0, 0x1);
        gbc.writeMem(0xd6e2, { 0xd0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x70c8, gbc.sp());
        EXPECT(0xd6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd6e2));
        // D0 012D
        gbc.setState(0x722, 0x8fa4, 0xd6f0, 0xd6e0, 0x72a6, 0x1e2e, 0x0, 0x0);
        gbc.writeMem(0x722, { 0xd0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8fa4, gbc.sp());
        EXPECT(0x723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 012E
        gbc.setState(0xe7cb, 0xc032, 0x9bb0, 0x29c5, 0x7ac6, 0xd42, 0x1, 0x0);
        gbc.writeMem(0xe7cb, { 0xd0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc032, gbc.sp());
        EXPECT(0xe7cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe7cb));
        // D0 012F
        gbc.setState(0xea66, 0x5459, 0xceb0, 0xa32e, 0xd8b5, 0x2f64, 0x0, 0x0);
        gbc.writeMem(0xea66, { 0xd0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5459, gbc.sp());
        EXPECT(0xea67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xea66));
        // D0 0130
        gbc.setState(0x1f75, 0x6694, 0x2620, 0xcf46, 0x9b5e, 0xf24f, 0x0, 0x1);
        gbc.writeMem(0x1f75, { 0xd0 });
        gbc.writeMem(0x6694, { 0x67, 0xe5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6696, gbc.sp());
        EXPECT(0xe567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0131
        gbc.setState(0xee1b, 0x2784, 0x34e0, 0xad0b, 0x6fcb, 0x27f0, 0x1, 0x1);
        gbc.writeMem(0x2784, { 0x5b, 0x74 });
        gbc.writeMem(0xee1b, { 0xd0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2786, gbc.sp());
        EXPECT(0x745b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xee1b));
        // D0 0132
        gbc.setState(0xd130, 0xd64b, 0x7ad0, 0x991e, 0xacd9, 0xd3f3, 0x0, 0x1);
        gbc.writeMem(0xd130, { 0xd0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd64b, gbc.sp());
        EXPECT(0xd131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd130));
        // D0 0133
        gbc.setState(0x48c6, 0x222, 0xc170, 0xcd41, 0x3d06, 0x7177, 0x0, 0x1);
        gbc.writeMem(0x48c6, { 0xd0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x222, gbc.sp());
        EXPECT(0x48c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0134
        gbc.setState(0x919f, 0x1aab, 0x6300, 0x487f, 0xfa34, 0x7519, 0x0, 0x0);
        gbc.writeMem(0x1aab, { 0x63, 0xbe });
        gbc.writeMem(0x919f, { 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1aad, gbc.sp());
        EXPECT(0xbe63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x919f));
        // D0 0135
        gbc.setState(0x2f20, 0xcae4, 0x1ef0, 0xc304, 0xafc4, 0x2516, 0x1, 0x1);
        gbc.writeMem(0x2f20, { 0xd0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcae4, gbc.sp());
        EXPECT(0x2f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0136
        gbc.setState(0xba1, 0xd4ac, 0x5010, 0x32a7, 0xd821, 0x466, 0x0, 0x1);
        gbc.writeMem(0xba1, { 0xd0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd4ac, gbc.sp());
        EXPECT(0xba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0137
        gbc.setState(0x3ed1, 0x4772, 0xcf00, 0xe7b0, 0x20b0, 0x801d, 0x1, 0x1);
        gbc.writeMem(0x3ed1, { 0xd0 });
        gbc.writeMem(0x4772, { 0x9e, 0x2b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4774, gbc.sp());
        EXPECT(0x2b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0138
        gbc.setState(0x8e09, 0xff27, 0xb740, 0xe616, 0x2e2a, 0xf05, 0x0, 0x1);
        gbc.writeMem(0x8e09, { 0xd0 });
        gbc.writeMem(0xff27, { 0x3c, 0x95 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xff29, gbc.sp());
        EXPECT(0x953c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8e09));
        EXPECT(0x3c, gbc.readMem(0xff27));
        EXPECT(0x95, gbc.readMem(0xff28));
        // D0 0139
        gbc.setState(0xec3, 0x2a, 0x7d0, 0x596e, 0x7955, 0xfdc7, 0x0, 0x1);
        gbc.writeMem(0xec3, { 0xd0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2a, gbc.sp());
        EXPECT(0xec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 013A
        gbc.setState(0x607c, 0x34ec, 0x3140, 0x4271, 0x6672, 0x1fa2, 0x1, 0x0);
        gbc.writeMem(0x34ec, { 0x84, 0x1c });
        gbc.writeMem(0x607c, { 0xd0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x34ee, gbc.sp());
        EXPECT(0x1c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 013B
        gbc.setState(0x7ccc, 0x4797, 0xe020, 0x30da, 0xe698, 0xaec6, 0x0, 0x0);
        gbc.writeMem(0x4797, { 0x14, 0x81 });
        gbc.writeMem(0x7ccc, { 0xd0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4799, gbc.sp());
        EXPECT(0x8114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 013C
        gbc.setState(0x5319, 0x86d8, 0x5a00, 0xec0b, 0x713c, 0x32b8, 0x1, 0x1);
        gbc.writeMem(0x5319, { 0xd0 });
        gbc.writeMem(0x86d8, { 0x9b, 0xf6 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x86da, gbc.sp());
        EXPECT(0xf69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x86d8));
        EXPECT(0xf6, gbc.readMem(0x86d9));
        // D0 013D
        gbc.setState(0x4015, 0xfb86, 0x6960, 0x128b, 0x20d8, 0x11b9, 0x1, 0x1);
        gbc.writeMem(0x4015, { 0xd0 });
        gbc.writeMem(0xfb86, { 0xdf, 0x17 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfb88, gbc.sp());
        EXPECT(0x17df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xfb86));
        EXPECT(0x17, gbc.readMem(0xfb87));
        // D0 013E
        gbc.setState(0x1a11, 0x4e24, 0x74d0, 0xf088, 0xa342, 0xad67, 0x0, 0x1);
        gbc.writeMem(0x1a11, { 0xd0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4e24, gbc.sp());
        EXPECT(0x1a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 013F
        gbc.setState(0xdcae, 0xc221, 0x9d90, 0xaf22, 0xc33d, 0xbced, 0x0, 0x0);
        gbc.writeMem(0xdcae, { 0xd0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc221, gbc.sp());
        EXPECT(0xdcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdcae));
        // D0 0140
        gbc.setState(0xa953, 0x5460, 0xe290, 0x1039, 0xbdf0, 0x6818, 0x0, 0x1);
        gbc.writeMem(0xa953, { 0xd0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5460, gbc.sp());
        EXPECT(0xa954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa953));
        // D0 0141
        gbc.setState(0x444e, 0xb78d, 0x5020, 0xa5be, 0x9cfb, 0xdf5e, 0x0, 0x0);
        gbc.writeMem(0x444e, { 0xd0 });
        gbc.writeMem(0xb78d, { 0x96, 0xf });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb78f, gbc.sp());
        EXPECT(0xf96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xb78d));
        EXPECT(0xf, gbc.readMem(0xb78e));
        // D0 0142
        gbc.setState(0x9984, 0xb862, 0x8db0, 0x68fc, 0x974d, 0xcbee, 0x1, 0x0);
        gbc.writeMem(0x9984, { 0xd0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb862, gbc.sp());
        EXPECT(0x9985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9984));
        // D0 0143
        gbc.setState(0xcbf3, 0x1d5c, 0x2d00, 0x1ab, 0x9221, 0x4920, 0x0, 0x1);
        gbc.writeMem(0x1d5c, { 0xfb, 0x84 });
        gbc.writeMem(0xcbf3, { 0xd0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1d5e, gbc.sp());
        EXPECT(0x84fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcbf3));
        // D0 0144
        gbc.setState(0x4d83, 0x35d2, 0xb790, 0x836c, 0xf059, 0xeaf6, 0x0, 0x0);
        gbc.writeMem(0x4d83, { 0xd0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x35d2, gbc.sp());
        EXPECT(0x4d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0146
        gbc.setState(0x98d2, 0xe8a2, 0x420, 0xafde, 0xbfba, 0xab12, 0x1, 0x1);
        gbc.writeMem(0x98d2, { 0xd0 });
        gbc.writeMem(0xe8a2, { 0xe2, 0x61 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe8a4, gbc.sp());
        EXPECT(0x61e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x98d2));
        EXPECT(0xe2, gbc.readMem(0xe8a2));
        EXPECT(0x61, gbc.readMem(0xe8a3));
        // D0 0147
        gbc.setState(0xc4e8, 0x6254, 0x5920, 0x2dbf, 0x5410, 0x9b0, 0x1, 0x1);
        gbc.writeMem(0x6254, { 0xca, 0x62 });
        gbc.writeMem(0xc4e8, { 0xd0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6256, gbc.sp());
        EXPECT(0x62ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc4e8));
        // D0 0148
        gbc.setState(0x14c7, 0x21f3, 0xa840, 0x213d, 0x4432, 0xad23, 0x1, 0x0);
        gbc.writeMem(0x14c7, { 0xd0 });
        gbc.writeMem(0x21f3, { 0x30, 0xdc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x21f5, gbc.sp());
        EXPECT(0xdc30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0149
        gbc.setState(0xbd6c, 0x8032, 0xcb90, 0x9272, 0x8861, 0x73b1, 0x1, 0x1);
        gbc.writeMem(0xbd6c, { 0xd0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8032, gbc.sp());
        EXPECT(0xbd6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbd6c));
        // D0 014B
        gbc.setState(0x4e06, 0x60f9, 0xf0a0, 0xde52, 0x32bb, 0x464f, 0x1, 0x0);
        gbc.writeMem(0x4e06, { 0xd0 });
        gbc.writeMem(0x60f9, { 0xf, 0x6c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x60fb, gbc.sp());
        EXPECT(0x6c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 014C
        gbc.setState(0x5509, 0x5d93, 0xc190, 0x326b, 0x184e, 0x607b, 0x0, 0x1);
        gbc.writeMem(0x5509, { 0xd0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5d93, gbc.sp());
        EXPECT(0x550a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 014D
        gbc.setState(0x7d9c, 0xb84c, 0x9530, 0xd6b4, 0xd9d5, 0x5c1c, 0x0, 0x0);
        gbc.writeMem(0x7d9c, { 0xd0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb84c, gbc.sp());
        EXPECT(0x7d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 014E
        gbc.setState(0x4c22, 0xd197, 0x6f00, 0x8eea, 0xff9d, 0xc3c, 0x1, 0x1);
        gbc.writeMem(0x4c22, { 0xd0 });
        gbc.writeMem(0xd197, { 0x7e, 0x55 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd199, gbc.sp());
        EXPECT(0x557e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd197));
        EXPECT(0x55, gbc.readMem(0xd198));
        // D0 014F
        gbc.setState(0x6b79, 0xde80, 0x8d30, 0x6e96, 0x2026, 0xa4c4, 0x1, 0x1);
        gbc.writeMem(0x6b79, { 0xd0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xde80, gbc.sp());
        EXPECT(0x6b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0150
        gbc.setState(0x97a6, 0x4fe9, 0x43e0, 0xcd1b, 0x910a, 0x8959, 0x1, 0x1);
        gbc.writeMem(0x4fe9, { 0x94, 0x43 });
        gbc.writeMem(0x97a6, { 0xd0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4feb, gbc.sp());
        EXPECT(0x4394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x97a6));
        // D0 0151
        gbc.setState(0x34ce, 0x86b8, 0x3f0, 0xadf0, 0x7e0, 0x158, 0x1, 0x1);
        gbc.writeMem(0x34ce, { 0xd0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x86b8, gbc.sp());
        EXPECT(0x34cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0152
        gbc.setState(0x4c0e, 0xbb9f, 0x9d0, 0x443a, 0x6483, 0xf73e, 0x1, 0x1);
        gbc.writeMem(0x4c0e, { 0xd0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbb9f, gbc.sp());
        EXPECT(0x4c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0153
        gbc.setState(0xa19, 0x901d, 0xfe80, 0xc22c, 0x611d, 0x31df, 0x0, 0x0);
        gbc.writeMem(0xa19, { 0xd0 });
        gbc.writeMem(0x901d, { 0x90, 0x14 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x901f, gbc.sp());
        EXPECT(0x1490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x901d));
        EXPECT(0x14, gbc.readMem(0x901e));
        // D0 0154
        gbc.setState(0xeb01, 0x8fa2, 0x14c0, 0x3465, 0xbf7a, 0x52e3, 0x1, 0x1);
        gbc.writeMem(0x8fa2, { 0x4d, 0xf9 });
        gbc.writeMem(0xeb01, { 0xd0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8fa4, gbc.sp());
        EXPECT(0xf94d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8fa2));
        EXPECT(0xf9, gbc.readMem(0x8fa3));
        EXPECT(0xd0, gbc.readMem(0xeb01));
        // D0 0155
        gbc.setState(0x490e, 0xd2d5, 0xb350, 0x3e58, 0xbc, 0xf8ee, 0x1, 0x0);
        gbc.writeMem(0x490e, { 0xd0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd2d5, gbc.sp());
        EXPECT(0x490f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0156
        gbc.setState(0xd88a, 0x2ab8, 0xa5e0, 0x498b, 0x6453, 0xb26c, 0x1, 0x1);
        gbc.writeMem(0x2ab8, { 0xae, 0x2 });
        gbc.writeMem(0xd88a, { 0xd0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2aba, gbc.sp());
        EXPECT(0x2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd88a));
        // D0 0157
        gbc.setState(0x5cb4, 0x5df6, 0x3c70, 0x5ffa, 0x7d7d, 0x7536, 0x1, 0x1);
        gbc.writeMem(0x5cb4, { 0xd0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5df6, gbc.sp());
        EXPECT(0x5cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0158
        gbc.setState(0xc4a4, 0x6f6f, 0x65c0, 0x48c2, 0xb787, 0xf65e, 0x1, 0x1);
        gbc.writeMem(0x6f6f, { 0x24, 0xc2 });
        gbc.writeMem(0xc4a4, { 0xd0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6f71, gbc.sp());
        EXPECT(0xc224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc4a4));
        // D0 0159
        gbc.setState(0x3686, 0xe359, 0x1300, 0xe3da, 0x30d3, 0x9c39, 0x1, 0x1);
        gbc.writeMem(0x3686, { 0xd0 });
        gbc.writeMem(0xe359, { 0x68, 0x67 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe35b, gbc.sp());
        EXPECT(0x6768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe359));
        EXPECT(0x67, gbc.readMem(0xe35a));
        // D0 015A
        gbc.setState(0x8645, 0x2cc9, 0xc00, 0x1670, 0x363, 0x769, 0x0, 0x1);
        gbc.writeMem(0x2cc9, { 0x50, 0x2f });
        gbc.writeMem(0x8645, { 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2ccb, gbc.sp());
        EXPECT(0x2f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8645));
        // D0 015B
        gbc.setState(0x4ca8, 0xf631, 0x7d40, 0x19c, 0xcee5, 0x931c, 0x0, 0x1);
        gbc.writeMem(0x4ca8, { 0xd0 });
        gbc.writeMem(0xf631, { 0xfd, 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf633, gbc.sp());
        EXPECT(0x7dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xf631));
        EXPECT(0x7d, gbc.readMem(0xf632));
        // D0 015C
        gbc.setState(0x46ba, 0x7889, 0x4730, 0xbe80, 0x3878, 0x207, 0x1, 0x0);
        gbc.writeMem(0x46ba, { 0xd0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7889, gbc.sp());
        EXPECT(0x46bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 015D
        gbc.setState(0xac18, 0xc116, 0x97c0, 0x7ed5, 0xddda, 0x5550, 0x1, 0x1);
        gbc.writeMem(0xac18, { 0xd0 });
        gbc.writeMem(0xc116, { 0x8e, 0xee });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc118, gbc.sp());
        EXPECT(0xee8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xac18));
        EXPECT(0x8e, gbc.readMem(0xc116));
        EXPECT(0xee, gbc.readMem(0xc117));
        // D0 015E
        gbc.setState(0x2db8, 0x5822, 0xb8f0, 0x2d3, 0xcd22, 0xbe4d, 0x0, 0x0);
        gbc.writeMem(0x2db8, { 0xd0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5822, gbc.sp());
        EXPECT(0x2db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 015F
        gbc.setState(0x50b1, 0x4d92, 0x37c0, 0xffce, 0x7a40, 0x448, 0x0, 0x1);
        gbc.writeMem(0x4d92, { 0x7d, 0x78 });
        gbc.writeMem(0x50b1, { 0xd0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4d94, gbc.sp());
        EXPECT(0x787d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0160
        gbc.setState(0xb77d, 0xea68, 0xf900, 0xf665, 0xf8fb, 0xa3f5, 0x1, 0x0);
        gbc.writeMem(0xb77d, { 0xd0 });
        gbc.writeMem(0xea68, { 0x3b, 0xe9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xea6a, gbc.sp());
        EXPECT(0xe93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb77d));
        EXPECT(0x3b, gbc.readMem(0xea68));
        EXPECT(0xe9, gbc.readMem(0xea69));
        // D0 0161
        gbc.setState(0x4c42, 0x2b82, 0x18e0, 0x7681, 0xb6ca, 0x60a, 0x0, 0x0);
        gbc.writeMem(0x2b82, { 0xc2, 0xe7 });
        gbc.writeMem(0x4c42, { 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2b84, gbc.sp());
        EXPECT(0xe7c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0162
        gbc.setState(0x30dc, 0x2668, 0x22a0, 0x824a, 0xe413, 0xdda9, 0x1, 0x0);
        gbc.writeMem(0x2668, { 0x10, 0xe7 });
        gbc.writeMem(0x30dc, { 0xd0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x266a, gbc.sp());
        EXPECT(0xe710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0163
        gbc.setState(0x2529, 0x22d4, 0xf2d0, 0x1a88, 0x34c9, 0xe430, 0x0, 0x1);
        gbc.writeMem(0x2529, { 0xd0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x22d4, gbc.sp());
        EXPECT(0x252a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0164
        gbc.setState(0xbf30, 0x72cb, 0x94b0, 0xad88, 0xab63, 0x9af8, 0x1, 0x0);
        gbc.writeMem(0xbf30, { 0xd0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x72cb, gbc.sp());
        EXPECT(0xbf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbf30));
        // D0 0165
        gbc.setState(0xce2f, 0x1289, 0xa9f0, 0x577e, 0xd9fe, 0x19e1, 0x0, 0x0);
        gbc.writeMem(0xce2f, { 0xd0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1289, gbc.sp());
        EXPECT(0xce30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xce2f));
        // D0 0166
        gbc.setState(0x38a4, 0x7aef, 0x77f0, 0x7b5f, 0x8f0c, 0xfadd, 0x1, 0x0);
        gbc.writeMem(0x38a4, { 0xd0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7aef, gbc.sp());
        EXPECT(0x38a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0167
        gbc.setState(0xdd9c, 0xf6e7, 0x4e0, 0x928a, 0x446b, 0x15f5, 0x0, 0x1);
        gbc.writeMem(0xdd9c, { 0xd0 });
        gbc.writeMem(0xf6e7, { 0x8a, 0xa6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf6e9, gbc.sp());
        EXPECT(0xa68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdd9c));
        EXPECT(0x8a, gbc.readMem(0xf6e7));
        EXPECT(0xa6, gbc.readMem(0xf6e8));
        // D0 0168
        gbc.setState(0xd419, 0xae2a, 0xe670, 0x6b30, 0xbcad, 0x85b7, 0x1, 0x1);
        gbc.writeMem(0xd419, { 0xd0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xae2a, gbc.sp());
        EXPECT(0xd41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd419));
        // D0 0169
        gbc.setState(0x6766, 0x339a, 0x48c0, 0x6329, 0x17bf, 0x60c9, 0x1, 0x1);
        gbc.writeMem(0x339a, { 0x58, 0x42 });
        gbc.writeMem(0x6766, { 0xd0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x339c, gbc.sp());
        EXPECT(0x4258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 016A
        gbc.setState(0x6f9e, 0x6e85, 0xbce0, 0x5754, 0x759, 0x1495, 0x0, 0x1);
        gbc.writeMem(0x6e85, { 0x8d, 0xba });
        gbc.writeMem(0x6f9e, { 0xd0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6e87, gbc.sp());
        EXPECT(0xba8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 016B
        gbc.setState(0x835c, 0x6aaf, 0xe480, 0x85c2, 0x660b, 0x5ef1, 0x0, 0x1);
        gbc.writeMem(0x6aaf, { 0xb7, 0x57 });
        gbc.writeMem(0x835c, { 0xd0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6ab1, gbc.sp());
        EXPECT(0x57b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x835c));
        // D0 016C
        gbc.setState(0x8b57, 0x2498, 0xea60, 0x3f81, 0x4417, 0x1e50, 0x1, 0x1);
        gbc.writeMem(0x2498, { 0x86, 0xb7 });
        gbc.writeMem(0x8b57, { 0xd0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x249a, gbc.sp());
        EXPECT(0xb786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8b57));
        // D0 016D
        gbc.setState(0x89a8, 0x3bf9, 0xd6e0, 0xc795, 0x2dc0, 0xd836, 0x0, 0x0);
        gbc.writeMem(0x3bf9, { 0x69, 0x75 });
        gbc.writeMem(0x89a8, { 0xd0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3bfb, gbc.sp());
        EXPECT(0x7569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x89a8));
        // D0 016E
        gbc.setState(0x2c0, 0x3250, 0x7bd0, 0x6f7f, 0xcec0, 0x7dcf, 0x1, 0x1);
        gbc.writeMem(0x2c0, { 0xd0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3250, gbc.sp());
        EXPECT(0x2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 016F
        gbc.setState(0xb5d2, 0x3593, 0x4710, 0x2687, 0xf658, 0x175, 0x0, 0x1);
        gbc.writeMem(0xb5d2, { 0xd0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3593, gbc.sp());
        EXPECT(0xb5d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb5d2));
        // D0 0170
        gbc.setState(0x2349, 0x166, 0xb750, 0xb018, 0x35e3, 0xc8a7, 0x1, 0x0);
        gbc.writeMem(0x2349, { 0xd0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x166, gbc.sp());
        EXPECT(0x234a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0171
        gbc.setState(0xf49, 0xba98, 0xeab0, 0x4bfc, 0xe156, 0x887f, 0x0, 0x1);
        gbc.writeMem(0xf49, { 0xd0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xba98, gbc.sp());
        EXPECT(0xf4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0172
        gbc.setState(0x7ba4, 0x8e5f, 0xb9d0, 0xe639, 0xc4a6, 0x2de7, 0x0, 0x0);
        gbc.writeMem(0x7ba4, { 0xd0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8e5f, gbc.sp());
        EXPECT(0x7ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0173
        gbc.setState(0x9ddd, 0xf7f7, 0x4200, 0xa695, 0xd02e, 0x39fb, 0x0, 0x1);
        gbc.writeMem(0x9ddd, { 0xd0 });
        gbc.writeMem(0xf7f7, { 0x50, 0xd1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf7f9, gbc.sp());
        EXPECT(0xd150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9ddd));
        EXPECT(0x50, gbc.readMem(0xf7f7));
        EXPECT(0xd1, gbc.readMem(0xf7f8));
        // D0 0174
        gbc.setState(0x1054, 0x3a83, 0xa050, 0xdf07, 0x395d, 0xa145, 0x1, 0x1);
        gbc.writeMem(0x1054, { 0xd0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3a83, gbc.sp());
        EXPECT(0x1055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0175
        gbc.setState(0xb8a8, 0x62ad, 0xa6b0, 0x6215, 0xfea, 0x867c, 0x0, 0x0);
        gbc.writeMem(0xb8a8, { 0xd0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x62ad, gbc.sp());
        EXPECT(0xb8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb8a8));
        // D0 0176
        gbc.setState(0x4784, 0xbae3, 0xb80, 0x86ec, 0x600e, 0x7c04, 0x1, 0x1);
        gbc.writeMem(0x4784, { 0xd0 });
        gbc.writeMem(0xbae3, { 0x18, 0xed });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbae5, gbc.sp());
        EXPECT(0xed18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xbae3));
        EXPECT(0xed, gbc.readMem(0xbae4));
        // D0 0177
        gbc.setState(0x8deb, 0x9e3, 0x33b0, 0xeb8c, 0x6775, 0xaa58, 0x1, 0x0);
        gbc.writeMem(0x8deb, { 0xd0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9e3, gbc.sp());
        EXPECT(0x8dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8deb));
        // D0 0178
        gbc.setState(0x782, 0x8c6e, 0xe4a0, 0xb698, 0x87fb, 0xdc78, 0x0, 0x0);
        gbc.writeMem(0x782, { 0xd0 });
        gbc.writeMem(0x8c6e, { 0xa3, 0x12 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8c70, gbc.sp());
        EXPECT(0x12a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8c6e));
        EXPECT(0x12, gbc.readMem(0x8c6f));
        // D0 0179
        gbc.setState(0x33c6, 0xe53d, 0x7660, 0x98e0, 0x764, 0x5335, 0x1, 0x1);
        gbc.writeMem(0x33c6, { 0xd0 });
        gbc.writeMem(0xe53d, { 0xe8, 0xbf });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe53f, gbc.sp());
        EXPECT(0xbfe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xe53d));
        EXPECT(0xbf, gbc.readMem(0xe53e));
        // D0 017A
        gbc.setState(0x86fd, 0x6079, 0xc0, 0xc8aa, 0x501f, 0x2778, 0x1, 0x0);
        gbc.writeMem(0x6079, { 0xfb, 0xbe });
        gbc.writeMem(0x86fd, { 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x607b, gbc.sp());
        EXPECT(0xbefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x86fd));
        // D0 017B
        gbc.setState(0x8919, 0xf958, 0x78d0, 0xcea4, 0xde0e, 0xb21b, 0x1, 0x0);
        gbc.writeMem(0x8919, { 0xd0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf958, gbc.sp());
        EXPECT(0x891a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8919));
        // D0 017C
        gbc.setState(0x48b9, 0xd31b, 0x1d10, 0x11d6, 0x23a6, 0x22b, 0x1, 0x1);
        gbc.writeMem(0x48b9, { 0xd0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd31b, gbc.sp());
        EXPECT(0x48ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 017D
        gbc.setState(0x5370, 0x9bd, 0x5e0, 0x3b97, 0xf923, 0xb225, 0x0, 0x1);
        gbc.writeMem(0x9bd, { 0x90, 0x2d });
        gbc.writeMem(0x5370, { 0xd0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9bf, gbc.sp());
        EXPECT(0x2d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 017E
        gbc.setState(0x1aed, 0xd75a, 0x65d0, 0xf006, 0xe431, 0xcb6d, 0x1, 0x1);
        gbc.writeMem(0x1aed, { 0xd0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd75a, gbc.sp());
        EXPECT(0x1aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 017F
        gbc.setState(0x4cb1, 0xa6b5, 0x7490, 0x63ba, 0x31c8, 0x186f, 0x1, 0x1);
        gbc.writeMem(0x4cb1, { 0xd0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa6b5, gbc.sp());
        EXPECT(0x4cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0180
        gbc.setState(0x2fd4, 0x87b8, 0xe80, 0xb37f, 0x7c70, 0x48c0, 0x1, 0x1);
        gbc.writeMem(0x2fd4, { 0xd0 });
        gbc.writeMem(0x87b8, { 0x8c, 0xa6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x87ba, gbc.sp());
        EXPECT(0xa68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x87b8));
        EXPECT(0xa6, gbc.readMem(0x87b9));
        // D0 0181
        gbc.setState(0x79ad, 0x39e9, 0xe2a0, 0xf7ee, 0xb2b, 0x1a31, 0x1, 0x1);
        gbc.writeMem(0x39e9, { 0x1c, 0x7f });
        gbc.writeMem(0x79ad, { 0xd0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x39eb, gbc.sp());
        EXPECT(0x7f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0182
        gbc.setState(0x77c8, 0x62f9, 0x3a90, 0xa88d, 0x6b, 0x2347, 0x1, 0x1);
        gbc.writeMem(0x77c8, { 0xd0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x62f9, gbc.sp());
        EXPECT(0x77c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0183
        gbc.setState(0x9f3e, 0xc8a1, 0xed30, 0xd260, 0x91cf, 0x7e43, 0x0, 0x1);
        gbc.writeMem(0x9f3e, { 0xd0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc8a1, gbc.sp());
        EXPECT(0x9f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9f3e));
        // D0 0184
        gbc.setState(0x6a23, 0x2163, 0x35c0, 0x10c0, 0x1b3f, 0xee73, 0x1, 0x1);
        gbc.writeMem(0x2163, { 0xeb, 0x50 });
        gbc.writeMem(0x6a23, { 0xd0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2165, gbc.sp());
        EXPECT(0x50eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0185
        gbc.setState(0x587a, 0x71c0, 0x2f90, 0xe928, 0xa9c5, 0x2190, 0x1, 0x1);
        gbc.writeMem(0x587a, { 0xd0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x71c0, gbc.sp());
        EXPECT(0x587b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0186
        gbc.setState(0xd2c0, 0x896b, 0xcc00, 0x72a5, 0xe06a, 0x2a8a, 0x0, 0x0);
        gbc.writeMem(0x896b, { 0x43, 0xe7 });
        gbc.writeMem(0xd2c0, { 0xd0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x896d, gbc.sp());
        EXPECT(0xe743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x896b));
        EXPECT(0xe7, gbc.readMem(0x896c));
        EXPECT(0xd0, gbc.readMem(0xd2c0));
        // D0 0187
        gbc.setState(0xd8f3, 0x9c5e, 0xaf60, 0xf7d, 0xb92f, 0xbeff, 0x0, 0x1);
        gbc.writeMem(0x9c5e, { 0xeb, 0x8 });
        gbc.writeMem(0xd8f3, { 0xd0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9c60, gbc.sp());
        EXPECT(0x8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9c5e));
        EXPECT(0x8, gbc.readMem(0x9c5f));
        EXPECT(0xd0, gbc.readMem(0xd8f3));
        // D0 0188
        gbc.setState(0x41de, 0xf669, 0xbcd0, 0x4b91, 0x5ef5, 0x238a, 0x1, 0x1);
        gbc.writeMem(0x41de, { 0xd0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf669, gbc.sp());
        EXPECT(0x41df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0189
        gbc.setState(0x1f1b, 0x165f, 0xc030, 0x7e86, 0x6eb9, 0x4da7, 0x1, 0x1);
        gbc.writeMem(0x1f1b, { 0xd0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x165f, gbc.sp());
        EXPECT(0x1f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 018A
        gbc.setState(0xc255, 0xa20, 0x2bc0, 0x83b7, 0xa0d3, 0x59a2, 0x0, 0x0);
        gbc.writeMem(0xa20, { 0xb5, 0xd5 });
        gbc.writeMem(0xc255, { 0xd0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa22, gbc.sp());
        EXPECT(0xd5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc255));
        // D0 018B
        gbc.setState(0x6453, 0xd3c8, 0x2a60, 0xc046, 0xccb, 0x2082, 0x1, 0x0);
        gbc.writeMem(0x6453, { 0xd0 });
        gbc.writeMem(0xd3c8, { 0xe2, 0xd9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd3ca, gbc.sp());
        EXPECT(0xd9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd3c8));
        EXPECT(0xd9, gbc.readMem(0xd3c9));
        // D0 018C
        gbc.setState(0xc5df, 0xd0bf, 0xb5d0, 0x57ee, 0x9f02, 0x3205, 0x0, 0x1);
        gbc.writeMem(0xc5df, { 0xd0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd0bf, gbc.sp());
        EXPECT(0xc5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc5df));
        // D0 018D
        gbc.setState(0x13a1, 0x8a18, 0xfbf0, 0x5f1a, 0x8068, 0xdb1, 0x1, 0x1);
        gbc.writeMem(0x13a1, { 0xd0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8a18, gbc.sp());
        EXPECT(0x13a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 018E
        gbc.setState(0x3b, 0xd8db, 0x2c00, 0xbf12, 0x3326, 0x138c, 0x1, 0x1);
        gbc.writeMem(0x3b, { 0xd0 });
        gbc.writeMem(0xd8db, { 0x71, 0x9d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd8dd, gbc.sp());
        EXPECT(0x9d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd8db));
        EXPECT(0x9d, gbc.readMem(0xd8dc));
        // D0 018F
        gbc.setState(0x9ed5, 0x5292, 0x95c0, 0xa124, 0x2e9d, 0xb96, 0x1, 0x1);
        gbc.writeMem(0x5292, { 0x50, 0x48 });
        gbc.writeMem(0x9ed5, { 0xd0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5294, gbc.sp());
        EXPECT(0x4850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9ed5));
        // D0 0190
        gbc.setState(0xcb5a, 0xe797, 0x8950, 0x4fd2, 0x3953, 0xbd52, 0x0, 0x1);
        gbc.writeMem(0xcb5a, { 0xd0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe797, gbc.sp());
        EXPECT(0xcb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcb5a));
        // D0 0191
        gbc.setState(0x4cbb, 0x3cc5, 0xd4f0, 0xafd4, 0xff6, 0x93bc, 0x1, 0x1);
        gbc.writeMem(0x4cbb, { 0xd0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3cc5, gbc.sp());
        EXPECT(0x4cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0192
        gbc.setState(0xba7, 0xd4db, 0x81b0, 0x9a3c, 0xec94, 0x4c29, 0x1, 0x1);
        gbc.writeMem(0xba7, { 0xd0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd4db, gbc.sp());
        EXPECT(0xba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0193
        gbc.setState(0xdee8, 0x5bae, 0xca50, 0xd887, 0xfe9d, 0xa3e2, 0x0, 0x1);
        gbc.writeMem(0xdee8, { 0xd0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5bae, gbc.sp());
        EXPECT(0xdee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdee8));
        // D0 0194
        gbc.setState(0x68b3, 0xe9dc, 0xfb0, 0x2b1c, 0x1996, 0x234e, 0x0, 0x0);
        gbc.writeMem(0x68b3, { 0xd0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe9dc, gbc.sp());
        EXPECT(0x68b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0195
        gbc.setState(0xc661, 0xbd37, 0x4980, 0xb2e7, 0xd001, 0x8336, 0x1, 0x1);
        gbc.writeMem(0xbd37, { 0xc2, 0xf9 });
        gbc.writeMem(0xc661, { 0xd0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbd39, gbc.sp());
        EXPECT(0xf9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbd37));
        EXPECT(0xf9, gbc.readMem(0xbd38));
        EXPECT(0xd0, gbc.readMem(0xc661));
        // D0 0196
        gbc.setState(0xa674, 0xc777, 0xd930, 0x7380, 0x6885, 0x94a2, 0x0, 0x1);
        gbc.writeMem(0xa674, { 0xd0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc777, gbc.sp());
        EXPECT(0xa675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa674));
        // D0 0197
        gbc.setState(0x18d4, 0x3850, 0x9360, 0x962e, 0xcede, 0x26ca, 0x0, 0x1);
        gbc.writeMem(0x18d4, { 0xd0 });
        gbc.writeMem(0x3850, { 0x18, 0xef });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3852, gbc.sp());
        EXPECT(0xef18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0198
        gbc.setState(0x4c58, 0x21da, 0x4600, 0x75bc, 0x8151, 0xdb6b, 0x1, 0x1);
        gbc.writeMem(0x21da, { 0x88, 0x2e });
        gbc.writeMem(0x4c58, { 0xd0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x21dc, gbc.sp());
        EXPECT(0x2e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0199
        gbc.setState(0xcfe4, 0xd67f, 0xb300, 0x81d4, 0xfc7e, 0xaa82, 0x0, 0x1);
        gbc.writeMem(0xcfe4, { 0xd0 });
        gbc.writeMem(0xd67f, { 0xdc, 0xc2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd681, gbc.sp());
        EXPECT(0xc2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcfe4));
        EXPECT(0xdc, gbc.readMem(0xd67f));
        EXPECT(0xc2, gbc.readMem(0xd680));
        // D0 019A
        gbc.setState(0x7bfa, 0xe1f8, 0x2d40, 0x1c34, 0x8dd8, 0x5271, 0x0, 0x0);
        gbc.writeMem(0x7bfa, { 0xd0 });
        gbc.writeMem(0xe1f8, { 0x5e, 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe1fa, gbc.sp());
        EXPECT(0x1a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe1f8));
        EXPECT(0x1a, gbc.readMem(0xe1f9));
        // D0 019B
        gbc.setState(0x1e2e, 0x58b6, 0x2480, 0x4fd4, 0xbf09, 0xdaee, 0x0, 0x1);
        gbc.writeMem(0x1e2e, { 0xd0 });
        gbc.writeMem(0x58b6, { 0xd5, 0x41 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x58b8, gbc.sp());
        EXPECT(0x41d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 019D
        gbc.setState(0x477b, 0xa0f8, 0xf60, 0xd82f, 0x8936, 0xd625, 0x1, 0x0);
        gbc.writeMem(0x477b, { 0xd0 });
        gbc.writeMem(0xa0f8, { 0x46, 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa0fa, gbc.sp());
        EXPECT(0x8a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xa0f8));
        EXPECT(0x8a, gbc.readMem(0xa0f9));
        // D0 019E
        gbc.setState(0xa14e, 0xbaa3, 0x4a10, 0xeb0e, 0x11af, 0xce8b, 0x1, 0x1);
        gbc.writeMem(0xa14e, { 0xd0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbaa3, gbc.sp());
        EXPECT(0xa14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa14e));
        // D0 019F
        gbc.setState(0x398e, 0x4fc6, 0xe4a0, 0x4516, 0x718c, 0x69cb, 0x1, 0x1);
        gbc.writeMem(0x398e, { 0xd0 });
        gbc.writeMem(0x4fc6, { 0x27, 0xfd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4fc8, gbc.sp());
        EXPECT(0xfd27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01A0
        gbc.setState(0x128a, 0xc9cd, 0x9b30, 0x525a, 0xe814, 0x1be1, 0x0, 0x1);
        gbc.writeMem(0x128a, { 0xd0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc9cd, gbc.sp());
        EXPECT(0x128b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01A1
        gbc.setState(0x573b, 0xdb06, 0x5af0, 0x7b26, 0xc9f1, 0x8b85, 0x0, 0x1);
        gbc.writeMem(0x573b, { 0xd0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdb06, gbc.sp());
        EXPECT(0x573c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01A2
        gbc.setState(0x2aa3, 0xab34, 0x6080, 0xfca8, 0x3ec7, 0xee34, 0x1, 0x1);
        gbc.writeMem(0x2aa3, { 0xd0 });
        gbc.writeMem(0xab34, { 0x61, 0x20 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xab36, gbc.sp());
        EXPECT(0x2061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xab34));
        EXPECT(0x20, gbc.readMem(0xab35));
        // D0 01A3
        gbc.setState(0x3848, 0x8994, 0xa440, 0x6341, 0x1649, 0x4210, 0x1, 0x0);
        gbc.writeMem(0x3848, { 0xd0 });
        gbc.writeMem(0x8994, { 0x3, 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8996, gbc.sp());
        EXPECT(0x9b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8994));
        EXPECT(0x9b, gbc.readMem(0x8995));
        // D0 01A4
        gbc.setState(0x3ec2, 0x1a38, 0x4590, 0xfb55, 0x28e5, 0x6b5a, 0x1, 0x1);
        gbc.writeMem(0x3ec2, { 0xd0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1a38, gbc.sp());
        EXPECT(0x3ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01A5
        gbc.setState(0x38e6, 0x5a08, 0x2c30, 0xd6ee, 0xfafc, 0xe761, 0x1, 0x0);
        gbc.writeMem(0x38e6, { 0xd0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5a08, gbc.sp());
        EXPECT(0x38e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01A6
        gbc.setState(0x1f35, 0x3d57, 0x5440, 0x3c3c, 0x1c99, 0xba0, 0x1, 0x1);
        gbc.writeMem(0x1f35, { 0xd0 });
        gbc.writeMem(0x3d57, { 0xef, 0xb2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3d59, gbc.sp());
        EXPECT(0xb2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01A7
        gbc.setState(0x8a49, 0x7e6c, 0xde50, 0x7c6b, 0x9da0, 0x5c4e, 0x0, 0x0);
        gbc.writeMem(0x8a49, { 0xd0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7e6c, gbc.sp());
        EXPECT(0x8a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8a49));
        // D0 01A8
        gbc.setState(0x338b, 0x8ff1, 0xdbd0, 0x4b5b, 0x847, 0x6223, 0x1, 0x0);
        gbc.writeMem(0x338b, { 0xd0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8ff1, gbc.sp());
        EXPECT(0x338c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01A9
        gbc.setState(0x81ba, 0x268e, 0xf460, 0xff8b, 0xc725, 0xb963, 0x1, 0x0);
        gbc.writeMem(0x268e, { 0x51, 0x8e });
        gbc.writeMem(0x81ba, { 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2690, gbc.sp());
        EXPECT(0x8e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x81ba));
        // D0 01AA
        gbc.setState(0x5094, 0xefac, 0xa660, 0xaa4f, 0x3ae6, 0x97ad, 0x1, 0x1);
        gbc.writeMem(0x5094, { 0xd0 });
        gbc.writeMem(0xefac, { 0xa, 0x5c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xefae, gbc.sp());
        EXPECT(0x5c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xefac));
        EXPECT(0x5c, gbc.readMem(0xefad));
        // D0 01AB
        gbc.setState(0xa0db, 0x7a98, 0x94c0, 0xd545, 0xcb25, 0x919b, 0x0, 0x0);
        gbc.writeMem(0x7a98, { 0x83, 0xf });
        gbc.writeMem(0xa0db, { 0xd0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7a9a, gbc.sp());
        EXPECT(0xf83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa0db));
        // D0 01AC
        gbc.setState(0x7239, 0x239c, 0x7190, 0x2dca, 0x81dd, 0x2a17, 0x0, 0x1);
        gbc.writeMem(0x7239, { 0xd0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x239c, gbc.sp());
        EXPECT(0x723a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01AD
        gbc.setState(0x3814, 0x2d0c, 0x1c30, 0x3f5, 0x8980, 0xb86a, 0x1, 0x0);
        gbc.writeMem(0x3814, { 0xd0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2d0c, gbc.sp());
        EXPECT(0x3815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01AF
        gbc.setState(0x9da9, 0xfd58, 0x1d10, 0xf0f9, 0x89d7, 0x8ffc, 0x1, 0x1);
        gbc.writeMem(0x9da9, { 0xd0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfd58, gbc.sp());
        EXPECT(0x9daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9da9));
        // D0 01B1
        gbc.setState(0x962c, 0xa68c, 0x5ee0, 0x9cb9, 0xdc5e, 0xee, 0x0, 0x0);
        gbc.writeMem(0x962c, { 0xd0 });
        gbc.writeMem(0xa68c, { 0xd7, 0x41 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa68e, gbc.sp());
        EXPECT(0x41d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x962c));
        EXPECT(0xd7, gbc.readMem(0xa68c));
        EXPECT(0x41, gbc.readMem(0xa68d));
        // D0 01B2
        gbc.setState(0x3010, 0x3db2, 0xf5e0, 0x95d4, 0x6168, 0x8ede, 0x0, 0x0);
        gbc.writeMem(0x3010, { 0xd0 });
        gbc.writeMem(0x3db2, { 0xa1, 0x31 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3db4, gbc.sp());
        EXPECT(0x31a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01B3
        gbc.setState(0xcdee, 0xa395, 0x46b0, 0x7b1, 0x812a, 0x4fbd, 0x1, 0x1);
        gbc.writeMem(0xcdee, { 0xd0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa395, gbc.sp());
        EXPECT(0xcdef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcdee));
        // D0 01B4
        gbc.setState(0x1930, 0xbe19, 0x4c0, 0xb5f4, 0xeb1e, 0xff11, 0x0, 0x0);
        gbc.writeMem(0x1930, { 0xd0 });
        gbc.writeMem(0xbe19, { 0x35, 0x6e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbe1b, gbc.sp());
        EXPECT(0x6e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbe19));
        EXPECT(0x6e, gbc.readMem(0xbe1a));
        // D0 01B5
        gbc.setState(0xe9c0, 0xc2ae, 0xa0d0, 0xf67b, 0xdf05, 0x75b2, 0x1, 0x0);
        gbc.writeMem(0xe9c0, { 0xd0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc2ae, gbc.sp());
        EXPECT(0xe9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe9c0));
        // D0 01B6
        gbc.setState(0x9db3, 0x1bdc, 0x5de0, 0xea5a, 0x7eca, 0xb370, 0x0, 0x0);
        gbc.writeMem(0x1bdc, { 0xd5, 0xd0 });
        gbc.writeMem(0x9db3, { 0xd0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1bde, gbc.sp());
        EXPECT(0xd0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9db3));
        // D0 01B7
        gbc.setState(0x219b, 0x8095, 0xadf0, 0x151f, 0xb97d, 0xee7b, 0x0, 0x1);
        gbc.writeMem(0x219b, { 0xd0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8095, gbc.sp());
        EXPECT(0x219c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01B8
        gbc.setState(0x76f0, 0x61d0, 0x4450, 0xc172, 0x22cb, 0xe0a9, 0x1, 0x1);
        gbc.writeMem(0x76f0, { 0xd0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x61d0, gbc.sp());
        EXPECT(0x76f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01B9
        gbc.setState(0x5bd1, 0xb9e7, 0xa0a0, 0xe95b, 0xf9e3, 0x930c, 0x1, 0x0);
        gbc.writeMem(0x5bd1, { 0xd0 });
        gbc.writeMem(0xb9e7, { 0xb6, 0xf5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb9e9, gbc.sp());
        EXPECT(0xf5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb9e7));
        EXPECT(0xf5, gbc.readMem(0xb9e8));
        // D0 01BA
        gbc.setState(0x3b9f, 0xcb17, 0xb050, 0x4510, 0x14a7, 0xd9e7, 0x1, 0x1);
        gbc.writeMem(0x3b9f, { 0xd0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcb17, gbc.sp());
        EXPECT(0x3ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01BB
        gbc.setState(0x1a69, 0x2bf0, 0x2390, 0x53b4, 0xe509, 0x8e45, 0x0, 0x1);
        gbc.writeMem(0x1a69, { 0xd0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2bf0, gbc.sp());
        EXPECT(0x1a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01BC
        gbc.setState(0x18c5, 0xb24f, 0x8360, 0x68a, 0xf81a, 0xae7, 0x1, 0x0);
        gbc.writeMem(0x18c5, { 0xd0 });
        gbc.writeMem(0xb24f, { 0xe7, 0xa6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb251, gbc.sp());
        EXPECT(0xa6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb24f));
        EXPECT(0xa6, gbc.readMem(0xb250));
        // D0 01BD
        gbc.setState(0x6e7e, 0x1b0b, 0x2bf0, 0x43ee, 0x788a, 0x7c5a, 0x1, 0x0);
        gbc.writeMem(0x6e7e, { 0xd0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1b0b, gbc.sp());
        EXPECT(0x6e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01BE
        gbc.setState(0x61b9, 0x2ac6, 0xc5e0, 0xa060, 0xdf5d, 0xdb31, 0x1, 0x1);
        gbc.writeMem(0x2ac6, { 0xdf, 0x36 });
        gbc.writeMem(0x61b9, { 0xd0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2ac8, gbc.sp());
        EXPECT(0x36df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01BF
        gbc.setState(0xc1b1, 0xf7a, 0xc150, 0x5db4, 0xfacd, 0xad56, 0x1, 0x0);
        gbc.writeMem(0xc1b1, { 0xd0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf7a, gbc.sp());
        EXPECT(0xc1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc1b1));
        // D0 01C1
        gbc.setState(0x4cda, 0xa41c, 0x7590, 0x5b96, 0x9821, 0x5a4d, 0x1, 0x0);
        gbc.writeMem(0x4cda, { 0xd0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa41c, gbc.sp());
        EXPECT(0x4cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01C2
        gbc.setState(0x2dcb, 0xf34, 0x8b30, 0x989d, 0xbaf1, 0x2581, 0x1, 0x1);
        gbc.writeMem(0x2dcb, { 0xd0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf34, gbc.sp());
        EXPECT(0x2dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01C3
        gbc.setState(0xc8a6, 0xbd1b, 0xef30, 0x16d6, 0x298, 0x7f8a, 0x0, 0x1);
        gbc.writeMem(0xc8a6, { 0xd0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbd1b, gbc.sp());
        EXPECT(0xc8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc8a6));
        // D0 01C4
        gbc.setState(0x9fe8, 0xaa17, 0x7710, 0xa1ec, 0x1d1f, 0xd634, 0x1, 0x1);
        gbc.writeMem(0x9fe8, { 0xd0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaa17, gbc.sp());
        EXPECT(0x9fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9fe8));
        // D0 01C5
        gbc.setState(0xa18a, 0xb7b1, 0xe780, 0x538b, 0x9af2, 0x5b51, 0x1, 0x0);
        gbc.writeMem(0xa18a, { 0xd0 });
        gbc.writeMem(0xb7b1, { 0xde, 0xb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb7b3, gbc.sp());
        EXPECT(0xbde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa18a));
        EXPECT(0xde, gbc.readMem(0xb7b1));
        EXPECT(0xb, gbc.readMem(0xb7b2));
        // D0 01C6
        gbc.setState(0xe1a6, 0xf9e1, 0x7510, 0x1e0a, 0x8f83, 0xb781, 0x0, 0x1);
        gbc.writeMem(0xe1a6, { 0xd0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf9e1, gbc.sp());
        EXPECT(0xe1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe1a6));
        // D0 01C7
        gbc.setState(0x381c, 0x8a14, 0x4020, 0x4396, 0x9490, 0x776f, 0x1, 0x1);
        gbc.writeMem(0x381c, { 0xd0 });
        gbc.writeMem(0x8a14, { 0x96, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8a16, gbc.sp());
        EXPECT(0xea96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8a14));
        EXPECT(0xea, gbc.readMem(0x8a15));
        // D0 01C8
        gbc.setState(0x32ca, 0x2bbc, 0xc450, 0x547a, 0x6e01, 0xce9c, 0x1, 0x0);
        gbc.writeMem(0x32ca, { 0xd0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2bbc, gbc.sp());
        EXPECT(0x32cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01C9
        gbc.setState(0xdec7, 0xcd41, 0xaa00, 0x82d2, 0x7f1c, 0x7fc3, 0x0, 0x0);
        gbc.writeMem(0xcd41, { 0xb, 0xfb });
        gbc.writeMem(0xdec7, { 0xd0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcd43, gbc.sp());
        EXPECT(0xfb0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xcd41));
        EXPECT(0xfb, gbc.readMem(0xcd42));
        EXPECT(0xd0, gbc.readMem(0xdec7));
        // D0 01CA
        gbc.setState(0xb651, 0xdd61, 0x73b0, 0x7951, 0x611c, 0xfc0a, 0x1, 0x0);
        gbc.writeMem(0xb651, { 0xd0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdd61, gbc.sp());
        EXPECT(0xb652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb651));
        // D0 01CB
        gbc.setState(0xb8ee, 0x4cd0, 0x120, 0x1d2b, 0x3383, 0x8f18, 0x1, 0x1);
        gbc.writeMem(0x4cd0, { 0x53, 0xa6 });
        gbc.writeMem(0xb8ee, { 0xd0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4cd2, gbc.sp());
        EXPECT(0xa653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb8ee));
        // D0 01CC
        gbc.setState(0x2113, 0x294a, 0xf820, 0xebb5, 0xb0d3, 0xc33a, 0x1, 0x0);
        gbc.writeMem(0x2113, { 0xd0 });
        gbc.writeMem(0x294a, { 0xb4, 0xf9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x294c, gbc.sp());
        EXPECT(0xf9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01CD
        gbc.setState(0x9ce5, 0xdc98, 0xffa0, 0xeffa, 0x39d3, 0xf1b9, 0x1, 0x0);
        gbc.writeMem(0x9ce5, { 0xd0 });
        gbc.writeMem(0xdc98, { 0x9e, 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdc9a, gbc.sp());
        EXPECT(0x7a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9ce5));
        EXPECT(0x9e, gbc.readMem(0xdc98));
        EXPECT(0x7a, gbc.readMem(0xdc99));
        // D0 01CF
        gbc.setState(0x56ea, 0xbf5b, 0x44d0, 0x56e, 0xfee5, 0xb422, 0x1, 0x0);
        gbc.writeMem(0x56ea, { 0xd0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbf5b, gbc.sp());
        EXPECT(0x56eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01D0
        gbc.setState(0x8bf5, 0xbdb5, 0xc270, 0xa079, 0x6a30, 0x10a9, 0x0, 0x0);
        gbc.writeMem(0x8bf5, { 0xd0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbdb5, gbc.sp());
        EXPECT(0x8bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8bf5));
        // D0 01D1
        gbc.setState(0x48e1, 0xadfd, 0x2480, 0xbede, 0x5e, 0x930e, 0x1, 0x0);
        gbc.writeMem(0x48e1, { 0xd0 });
        gbc.writeMem(0xadfd, { 0xb9, 0xd1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xadff, gbc.sp());
        EXPECT(0xd1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xadfd));
        EXPECT(0xd1, gbc.readMem(0xadfe));
        // D0 01D2
        gbc.setState(0xd826, 0x3ebb, 0x9b20, 0x8a88, 0x504, 0x6d4d, 0x1, 0x1);
        gbc.writeMem(0x3ebb, { 0x80, 0x6e });
        gbc.writeMem(0xd826, { 0xd0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3ebd, gbc.sp());
        EXPECT(0x6e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd826));
        // D0 01D3
        gbc.setState(0xc5a6, 0x8e02, 0x1030, 0x1c3d, 0xcc77, 0x94d1, 0x1, 0x1);
        gbc.writeMem(0xc5a6, { 0xd0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8e02, gbc.sp());
        EXPECT(0xc5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc5a6));
        // D0 01D4
        gbc.setState(0xd567, 0xd6ff, 0xff20, 0x3013, 0x6532, 0xceea, 0x1, 0x1);
        gbc.writeMem(0xd567, { 0xd0 });
        gbc.writeMem(0xd6ff, { 0xd0, 0x48 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd701, gbc.sp());
        EXPECT(0x48d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd567));
        EXPECT(0xd0, gbc.readMem(0xd6ff));
        EXPECT(0x48, gbc.readMem(0xd700));
        // D0 01D5
        gbc.setState(0x1ebf, 0x3896, 0xc5c0, 0x12a4, 0xc669, 0x96a0, 0x0, 0x0);
        gbc.writeMem(0x1ebf, { 0xd0 });
        gbc.writeMem(0x3896, { 0x95, 0x29 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3898, gbc.sp());
        EXPECT(0x2995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01D6
        gbc.setState(0xb695, 0x7b82, 0xb750, 0xa8e9, 0x1139, 0x18a8, 0x0, 0x0);
        gbc.writeMem(0xb695, { 0xd0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7b82, gbc.sp());
        EXPECT(0xb696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb695));
        // D0 01D7
        gbc.setState(0xcb41, 0xcf31, 0x21c0, 0x320b, 0x3586, 0x8a70, 0x0, 0x1);
        gbc.writeMem(0xcb41, { 0xd0 });
        gbc.writeMem(0xcf31, { 0xcd, 0x1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcf33, gbc.sp());
        EXPECT(0x1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcb41));
        EXPECT(0xcd, gbc.readMem(0xcf31));
        EXPECT(0x1, gbc.readMem(0xcf32));
        // D0 01D8
        gbc.setState(0x4e6c, 0x5456, 0xd760, 0x87e9, 0x639, 0xcae6, 0x0, 0x1);
        gbc.writeMem(0x4e6c, { 0xd0 });
        gbc.writeMem(0x5456, { 0xe2, 0x7a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5458, gbc.sp());
        EXPECT(0x7ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01D9
        gbc.setState(0x2be8, 0x5d59, 0x68a0, 0xa573, 0x1c97, 0xf950, 0x0, 0x1);
        gbc.writeMem(0x2be8, { 0xd0 });
        gbc.writeMem(0x5d59, { 0x63, 0x40 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5d5b, gbc.sp());
        EXPECT(0x4063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01DA
        gbc.setState(0x2935, 0x895e, 0x7130, 0x8741, 0x85a2, 0xd6, 0x0, 0x0);
        gbc.writeMem(0x2935, { 0xd0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x895e, gbc.sp());
        EXPECT(0x2936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01DB
        gbc.setState(0xcd0f, 0x675b, 0x5370, 0x892b, 0xa87e, 0x3a87, 0x0, 0x0);
        gbc.writeMem(0xcd0f, { 0xd0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x675b, gbc.sp());
        EXPECT(0xcd10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcd0f));
        // D0 01DC
        gbc.setState(0x1cac, 0xac0c, 0x4aa0, 0x647d, 0xa1e8, 0x4b41, 0x0, 0x0);
        gbc.writeMem(0x1cac, { 0xd0 });
        gbc.writeMem(0xac0c, { 0x6, 0x8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xac0e, gbc.sp());
        EXPECT(0x806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xac0c));
        EXPECT(0x8, gbc.readMem(0xac0d));
        // D0 01DD
        gbc.setState(0x25a3, 0xdd, 0xebd0, 0x8310, 0x6b9f, 0x580b, 0x0, 0x1);
        gbc.writeMem(0x25a3, { 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdd, gbc.sp());
        EXPECT(0x25a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01DE
        gbc.setState(0xbf02, 0x11f5, 0x7c0, 0xaa75, 0xb7a3, 0xf092, 0x0, 0x1);
        gbc.writeMem(0x11f5, { 0xd1, 0x8e });
        gbc.writeMem(0xbf02, { 0xd0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x11f7, gbc.sp());
        EXPECT(0x8ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbf02));
        // D0 01DF
        gbc.setState(0x8065, 0xfcfb, 0x97d0, 0xd83, 0xc911, 0x95ac, 0x0, 0x1);
        gbc.writeMem(0x8065, { 0xd0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfcfb, gbc.sp());
        EXPECT(0x8066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8065));
        // D0 01E0
        gbc.setState(0x348, 0x6e07, 0x5500, 0x6d6, 0xf75d, 0x295, 0x0, 0x1);
        gbc.writeMem(0x348, { 0xd0 });
        gbc.writeMem(0x6e07, { 0x49, 0xf4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6e09, gbc.sp());
        EXPECT(0xf449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01E1
        gbc.setState(0x7bf4, 0x7c85, 0x9350, 0xe67d, 0x69d1, 0xaa46, 0x1, 0x1);
        gbc.writeMem(0x7bf4, { 0xd0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7c85, gbc.sp());
        EXPECT(0x7bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01E3
        gbc.setState(0xda2, 0xc116, 0x5890, 0xfd28, 0xc59, 0xa2f1, 0x0, 0x0);
        gbc.writeMem(0xda2, { 0xd0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc116, gbc.sp());
        EXPECT(0xda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01E4
        gbc.setState(0xb94e, 0x382, 0xed70, 0xd3ae, 0xa16, 0x6868, 0x0, 0x0);
        gbc.writeMem(0xb94e, { 0xd0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x382, gbc.sp());
        EXPECT(0xb94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb94e));
        // D0 01E5
        gbc.setState(0xea07, 0x37c4, 0x7320, 0x97a7, 0x7a3a, 0x9fbf, 0x0, 0x1);
        gbc.writeMem(0x37c4, { 0x7, 0x1c });
        gbc.writeMem(0xea07, { 0xd0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x37c6, gbc.sp());
        EXPECT(0x1c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xea07));
        // D0 01E6
        gbc.setState(0x8de, 0x89fe, 0xfbc0, 0xcef8, 0xf321, 0xe0ad, 0x1, 0x0);
        gbc.writeMem(0x8de, { 0xd0 });
        gbc.writeMem(0x89fe, { 0x82, 0x7e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8a00, gbc.sp());
        EXPECT(0x7e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x89fe));
        EXPECT(0x7e, gbc.readMem(0x89ff));
        // D0 01E7
        gbc.setState(0x433, 0x4e4a, 0x8b20, 0x719b, 0x837, 0x74a8, 0x1, 0x1);
        gbc.writeMem(0x433, { 0xd0 });
        gbc.writeMem(0x4e4a, { 0x36, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4e4c, gbc.sp());
        EXPECT(0x36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01E8
        gbc.setState(0xc964, 0x1307, 0x9e50, 0xc459, 0x9e27, 0x448b, 0x1, 0x1);
        gbc.writeMem(0xc964, { 0xd0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1307, gbc.sp());
        EXPECT(0xc965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc964));
        // D0 01E9
        gbc.setState(0x8132, 0x4da4, 0x5380, 0x707a, 0xd6fc, 0x9f91, 0x0, 0x0);
        gbc.writeMem(0x4da4, { 0xec, 0x55 });
        gbc.writeMem(0x8132, { 0xd0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4da6, gbc.sp());
        EXPECT(0x55ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8132));
        // D0 01EA
        gbc.setState(0x1cb8, 0x84d4, 0x53c0, 0x8c14, 0x8a14, 0x8171, 0x0, 0x0);
        gbc.writeMem(0x1cb8, { 0xd0 });
        gbc.writeMem(0x84d4, { 0x7d, 0xb0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x84d6, gbc.sp());
        EXPECT(0xb07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x84d4));
        EXPECT(0xb0, gbc.readMem(0x84d5));
        // D0 01EB
        gbc.setState(0x6aea, 0x3a03, 0x19c0, 0x14d, 0xca0b, 0xbea7, 0x1, 0x1);
        gbc.writeMem(0x3a03, { 0xef, 0x26 });
        gbc.writeMem(0x6aea, { 0xd0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3a05, gbc.sp());
        EXPECT(0x26ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01EC
        gbc.setState(0x896f, 0x168d, 0xf0b0, 0xb196, 0x8067, 0x8ed0, 0x1, 0x1);
        gbc.writeMem(0x896f, { 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x168d, gbc.sp());
        EXPECT(0x8970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x896f));
        // D0 01ED
        gbc.setState(0x7180, 0x63d3, 0xfd80, 0x68bb, 0x6125, 0x5b7c, 0x0, 0x1);
        gbc.writeMem(0x63d3, { 0xb3, 0x61 });
        gbc.writeMem(0x7180, { 0xd0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x63d5, gbc.sp());
        EXPECT(0x61b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01EE
        gbc.setState(0x7584, 0x49cc, 0xdf50, 0x60fe, 0x7e16, 0x6894, 0x1, 0x1);
        gbc.writeMem(0x7584, { 0xd0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x49cc, gbc.sp());
        EXPECT(0x7585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01EF
        gbc.setState(0x433d, 0x5208, 0x3a0, 0x2054, 0xd0ec, 0xb40a, 0x0, 0x1);
        gbc.writeMem(0x433d, { 0xd0 });
        gbc.writeMem(0x5208, { 0x12, 0x2c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x520a, gbc.sp());
        EXPECT(0x2c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01F0
        gbc.setState(0xc41f, 0x15b5, 0x6340, 0x2ef, 0xf2a7, 0x73ca, 0x1, 0x1);
        gbc.writeMem(0x15b5, { 0x4a, 0xf2 });
        gbc.writeMem(0xc41f, { 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x15b7, gbc.sp());
        EXPECT(0xf24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc41f));
        // D0 01F1
        gbc.setState(0xccd3, 0x24c9, 0x1740, 0x5ac8, 0x813b, 0xe8e, 0x1, 0x1);
        gbc.writeMem(0x24c9, { 0x2c, 0x1c });
        gbc.writeMem(0xccd3, { 0xd0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x24cb, gbc.sp());
        EXPECT(0x1c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xccd3));
        // D0 01F2
        gbc.setState(0x41c9, 0x4be7, 0xada0, 0xd52a, 0xeb69, 0x9717, 0x1, 0x0);
        gbc.writeMem(0x41c9, { 0xd0 });
        gbc.writeMem(0x4be7, { 0xca, 0xb2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4be9, gbc.sp());
        EXPECT(0xb2ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01F3
        gbc.setState(0x5464, 0x7851, 0xc410, 0x113d, 0xbd3, 0x6c48, 0x0, 0x1);
        gbc.writeMem(0x5464, { 0xd0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7851, gbc.sp());
        EXPECT(0x5465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01F4
        gbc.setState(0xd086, 0xe36b, 0x7ab0, 0x58ee, 0x2715, 0x1b10, 0x1, 0x1);
        gbc.writeMem(0xd086, { 0xd0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe36b, gbc.sp());
        EXPECT(0xd087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd086));
        // D0 01F5
        gbc.setState(0x7f08, 0x1349, 0x5000, 0x8587, 0x3f87, 0xebf3, 0x0, 0x0);
        gbc.writeMem(0x1349, { 0x14, 0x24 });
        gbc.writeMem(0x7f08, { 0xd0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x134b, gbc.sp());
        EXPECT(0x2414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01F6
        gbc.setState(0x54bf, 0x789b, 0xaf50, 0x4d00, 0x2946, 0x2c33, 0x0, 0x0);
        gbc.writeMem(0x54bf, { 0xd0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x789b, gbc.sp());
        EXPECT(0x54c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01F7
        gbc.setState(0x2111, 0x1c95, 0xf240, 0x714e, 0x922d, 0xe9d8, 0x1, 0x0);
        gbc.writeMem(0x1c95, { 0xc, 0xe6 });
        gbc.writeMem(0x2111, { 0xd0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1c97, gbc.sp());
        EXPECT(0xe60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 01F8
        gbc.setState(0x64e5, 0xe1dd, 0xbc60, 0xab01, 0xd7fa, 0xe0b4, 0x1, 0x1);
        gbc.writeMem(0x64e5, { 0xd0 });
        gbc.writeMem(0xe1dd, { 0xe1, 0x46 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe1df, gbc.sp());
        EXPECT(0x46e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe1dd));
        EXPECT(0x46, gbc.readMem(0xe1de));
        // D0 01FA
        gbc.setState(0x14fb, 0x2300, 0xdb30, 0x7d5, 0xfc7f, 0x1ff9, 0x0, 0x1);
        gbc.writeMem(0x14fb, { 0xd0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2300, gbc.sp());
        EXPECT(0x14fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01FB
        gbc.setState(0xe071, 0x5145, 0x9fc0, 0xe869, 0x3dc4, 0xe05b, 0x1, 0x0);
        gbc.writeMem(0x5145, { 0x77, 0x71 });
        gbc.writeMem(0xe071, { 0xd0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5147, gbc.sp());
        EXPECT(0x7177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe071));
        // D0 01FD
        gbc.setState(0x39a6, 0xfc2, 0xe350, 0x4f42, 0xfa11, 0x6c72, 0x1, 0x0);
        gbc.writeMem(0x39a6, { 0xd0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfc2, gbc.sp());
        EXPECT(0x39a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01FE
        gbc.setState(0x6ddd, 0xf86f, 0x12d0, 0xe839, 0x9284, 0x6a1c, 0x1, 0x0);
        gbc.writeMem(0x6ddd, { 0xd0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf86f, gbc.sp());
        EXPECT(0x6dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 01FF
        gbc.setState(0x3fd6, 0x3c8f, 0x4010, 0xed94, 0xda87, 0x34d8, 0x1, 0x1);
        gbc.writeMem(0x3fd6, { 0xd0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3c8f, gbc.sp());
        EXPECT(0x3fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0200
        gbc.setState(0x78c0, 0x42f2, 0x6220, 0xca78, 0x8993, 0x188e, 0x0, 0x0);
        gbc.writeMem(0x42f2, { 0x70, 0x96 });
        gbc.writeMem(0x78c0, { 0xd0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x42f4, gbc.sp());
        EXPECT(0x9670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0201
        gbc.setState(0x66d5, 0x9c3f, 0xeb20, 0x7bf5, 0xfbca, 0xa5fe, 0x1, 0x1);
        gbc.writeMem(0x66d5, { 0xd0 });
        gbc.writeMem(0x9c3f, { 0x1c, 0x7e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9c41, gbc.sp());
        EXPECT(0x7e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9c3f));
        EXPECT(0x7e, gbc.readMem(0x9c40));
        // D0 0202
        gbc.setState(0x2c5c, 0x94bc, 0xbbe0, 0x1faa, 0x52be, 0x219c, 0x0, 0x0);
        gbc.writeMem(0x2c5c, { 0xd0 });
        gbc.writeMem(0x94bc, { 0x3, 0xd0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x94be, gbc.sp());
        EXPECT(0xd003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x94bc));
        EXPECT(0xd0, gbc.readMem(0x94bd));
        // D0 0203
        gbc.setState(0x4964, 0x53f2, 0x8390, 0x5e06, 0x65d2, 0xe83c, 0x0, 0x0);
        gbc.writeMem(0x4964, { 0xd0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x53f2, gbc.sp());
        EXPECT(0x4965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0204
        gbc.setState(0x740f, 0x63e5, 0x51f0, 0xf01a, 0xd8be, 0xa05d, 0x0, 0x1);
        gbc.writeMem(0x740f, { 0xd0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x63e5, gbc.sp());
        EXPECT(0x7410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0205
        gbc.setState(0xdcca, 0x7640, 0xb60, 0x3599, 0x747a, 0x4182, 0x0, 0x0);
        gbc.writeMem(0x7640, { 0xb5, 0x5f });
        gbc.writeMem(0xdcca, { 0xd0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7642, gbc.sp());
        EXPECT(0x5fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdcca));
        // D0 0206
        gbc.setState(0x3878, 0xab3c, 0xda80, 0xc400, 0x3b9b, 0xc6b3, 0x1, 0x0);
        gbc.writeMem(0x3878, { 0xd0 });
        gbc.writeMem(0xab3c, { 0xce, 0x33 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xab3e, gbc.sp());
        EXPECT(0x33ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xab3c));
        EXPECT(0x33, gbc.readMem(0xab3d));
        // D0 0207
        gbc.setState(0x92d0, 0x778e, 0x9c10, 0x2af2, 0x30a0, 0x2645, 0x0, 0x0);
        gbc.writeMem(0x92d0, { 0xd0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x778e, gbc.sp());
        EXPECT(0x92d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x92d0));
        // D0 0209
        gbc.setState(0xe1d9, 0x2bfd, 0x3c90, 0x38ba, 0xa304, 0x2bf5, 0x0, 0x0);
        gbc.writeMem(0xe1d9, { 0xd0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2bfd, gbc.sp());
        EXPECT(0xe1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe1d9));
        // D0 020A
        gbc.setState(0x8de6, 0xe389, 0x26b0, 0xd5ef, 0xbe95, 0x164a, 0x0, 0x1);
        gbc.writeMem(0x8de6, { 0xd0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe389, gbc.sp());
        EXPECT(0x8de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8de6));
        // D0 020B
        gbc.setState(0x33bf, 0x9efd, 0xd80, 0x5e19, 0x7257, 0xb99f, 0x1, 0x1);
        gbc.writeMem(0x33bf, { 0xd0 });
        gbc.writeMem(0x9efd, { 0x35, 0x97 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9eff, gbc.sp());
        EXPECT(0x9735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9efd));
        EXPECT(0x97, gbc.readMem(0x9efe));
        // D0 020C
        gbc.setState(0x1949, 0x23b3, 0xbea0, 0x3034, 0xd3de, 0xe7e0, 0x1, 0x0);
        gbc.writeMem(0x1949, { 0xd0 });
        gbc.writeMem(0x23b3, { 0xeb, 0xf7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x23b5, gbc.sp());
        EXPECT(0xf7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 020D
        gbc.setState(0x8e15, 0x62b2, 0xe970, 0x3f11, 0x33b9, 0xfdb, 0x0, 0x0);
        gbc.writeMem(0x8e15, { 0xd0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x62b2, gbc.sp());
        EXPECT(0x8e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8e15));
        // D0 020E
        gbc.setState(0x5678, 0x7e69, 0x150, 0x1863, 0x737b, 0x83c8, 0x0, 0x0);
        gbc.writeMem(0x5678, { 0xd0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7e69, gbc.sp());
        EXPECT(0x5679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 020F
        gbc.setState(0xecb2, 0xf2f5, 0xbf60, 0x292c, 0x1ea9, 0x680, 0x0, 0x1);
        gbc.writeMem(0xecb2, { 0xd0 });
        gbc.writeMem(0xf2f5, { 0x9b, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf2f7, gbc.sp());
        EXPECT(0xd79b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xecb2));
        EXPECT(0x9b, gbc.readMem(0xf2f5));
        EXPECT(0xd7, gbc.readMem(0xf2f6));
        // D0 0210
        gbc.setState(0x6141, 0xfed2, 0x1f20, 0x255, 0x9452, 0x9790, 0x1, 0x1);
        gbc.writeMem(0x6141, { 0xd0 });
        gbc.writeMem(0xfed2, { 0xad, 0x3e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfed4, gbc.sp());
        EXPECT(0x3ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xfed2));
        EXPECT(0x3e, gbc.readMem(0xfed3));
        // D0 0211
        gbc.setState(0xe62f, 0xae0e, 0xbc50, 0x9c46, 0xc0d6, 0xb48a, 0x0, 0x0);
        gbc.writeMem(0xe62f, { 0xd0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xae0e, gbc.sp());
        EXPECT(0xe630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe62f));
        // D0 0212
        gbc.setState(0x22b7, 0x486c, 0x2480, 0x44df, 0xec89, 0x8a2d, 0x0, 0x0);
        gbc.writeMem(0x22b7, { 0xd0 });
        gbc.writeMem(0x486c, { 0xf0, 0xaa });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x486e, gbc.sp());
        EXPECT(0xaaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0213
        gbc.setState(0x7d1d, 0x48c0, 0xf6f0, 0x5cc5, 0xe326, 0x7243, 0x0, 0x0);
        gbc.writeMem(0x7d1d, { 0xd0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x48c0, gbc.sp());
        EXPECT(0x7d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0215
        gbc.setState(0x613c, 0xb29, 0x3bf0, 0x3659, 0x5d00, 0xa55b, 0x1, 0x1);
        gbc.writeMem(0x613c, { 0xd0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb29, gbc.sp());
        EXPECT(0x613d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0216
        gbc.setState(0x4760, 0x3bc4, 0x3b90, 0x27d0, 0x58f, 0xe2c3, 0x1, 0x1);
        gbc.writeMem(0x4760, { 0xd0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3bc4, gbc.sp());
        EXPECT(0x4761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0217
        gbc.setState(0xbaac, 0x18ee, 0xe880, 0x5d88, 0x6976, 0x1979, 0x0, 0x1);
        gbc.writeMem(0x18ee, { 0x1, 0x59 });
        gbc.writeMem(0xbaac, { 0xd0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x18f0, gbc.sp());
        EXPECT(0x5901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbaac));
        // D0 0218
        gbc.setState(0xbc4f, 0xa4a, 0x9820, 0x5f11, 0xe92f, 0x66e7, 0x1, 0x0);
        gbc.writeMem(0xa4a, { 0xf4, 0xe3 });
        gbc.writeMem(0xbc4f, { 0xd0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa4c, gbc.sp());
        EXPECT(0xe3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbc4f));
        // D0 0219
        gbc.setState(0x123e, 0xdce5, 0xe670, 0x2256, 0xa758, 0x3593, 0x0, 0x0);
        gbc.writeMem(0x123e, { 0xd0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdce5, gbc.sp());
        EXPECT(0x123f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 021A
        gbc.setState(0xcd54, 0x574, 0xc4e0, 0x18d3, 0x6a5a, 0x512d, 0x0, 0x0);
        gbc.writeMem(0x574, { 0xea, 0xe8 });
        gbc.writeMem(0xcd54, { 0xd0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x576, gbc.sp());
        EXPECT(0xe8ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcd54));
        // D0 021B
        gbc.setState(0xd222, 0x63a, 0x6510, 0x3bc8, 0xaa93, 0x8247, 0x0, 0x0);
        gbc.writeMem(0xd222, { 0xd0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x63a, gbc.sp());
        EXPECT(0xd223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd222));
        // D0 021D
        gbc.setState(0x497, 0x95d6, 0xd270, 0xcb42, 0x53e7, 0x238f, 0x0, 0x0);
        gbc.writeMem(0x497, { 0xd0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x95d6, gbc.sp());
        EXPECT(0x498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 021E
        gbc.setState(0xbde6, 0x50, 0x7ef0, 0xb321, 0x504d, 0x4e17, 0x0, 0x1);
        gbc.writeMem(0xbde6, { 0xd0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x50, gbc.sp());
        EXPECT(0xbde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbde6));
        // D0 021F
        gbc.setState(0x58e9, 0x51ae, 0x6820, 0xc906, 0x4f41, 0x3aff, 0x0, 0x1);
        gbc.writeMem(0x51ae, { 0xf9, 0x6a });
        gbc.writeMem(0x58e9, { 0xd0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x51b0, gbc.sp());
        EXPECT(0x6af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0220
        gbc.setState(0x68d9, 0xb9a0, 0xa140, 0x5b17, 0xcba1, 0x4a1b, 0x0, 0x1);
        gbc.writeMem(0x68d9, { 0xd0 });
        gbc.writeMem(0xb9a0, { 0x1a, 0xcb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb9a2, gbc.sp());
        EXPECT(0xcb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb9a0));
        EXPECT(0xcb, gbc.readMem(0xb9a1));
        // D0 0221
        gbc.setState(0x5c37, 0xe50c, 0xd9c0, 0x860a, 0x4ea9, 0x834f, 0x1, 0x1);
        gbc.writeMem(0x5c37, { 0xd0 });
        gbc.writeMem(0xe50c, { 0x77, 0xcb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe50e, gbc.sp());
        EXPECT(0xcb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xe50c));
        EXPECT(0xcb, gbc.readMem(0xe50d));
        // D0 0222
        gbc.setState(0x54bc, 0xce62, 0xefc0, 0xeb0d, 0xc110, 0xa799, 0x1, 0x1);
        gbc.writeMem(0x54bc, { 0xd0 });
        gbc.writeMem(0xce62, { 0xfd, 0xa0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xce64, gbc.sp());
        EXPECT(0xa0fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xce62));
        EXPECT(0xa0, gbc.readMem(0xce63));
        // D0 0223
        gbc.setState(0x7c5d, 0x88ec, 0x4d00, 0xb0df, 0x7355, 0xd3e6, 0x1, 0x1);
        gbc.writeMem(0x7c5d, { 0xd0 });
        gbc.writeMem(0x88ec, { 0xb, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x88ee, gbc.sp());
        EXPECT(0xb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x88ec));
        EXPECT(0x0, gbc.readMem(0x88ed));
        // D0 0224
        gbc.setState(0xdbb0, 0x8e51, 0x3e10, 0xdce, 0x48a5, 0x7e1a, 0x0, 0x0);
        gbc.writeMem(0xdbb0, { 0xd0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8e51, gbc.sp());
        EXPECT(0xdbb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdbb0));
        // D0 0225
        gbc.setState(0xe56d, 0x1c27, 0xfb30, 0x2a67, 0xfa3f, 0xe4c1, 0x0, 0x0);
        gbc.writeMem(0xe56d, { 0xd0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1c27, gbc.sp());
        EXPECT(0xe56e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe56d));
        // D0 0226
        gbc.setState(0x6e09, 0x39e1, 0x6340, 0x1dee, 0xd162, 0x8364, 0x0, 0x0);
        gbc.writeMem(0x39e1, { 0x99, 0xa1 });
        gbc.writeMem(0x6e09, { 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x39e3, gbc.sp());
        EXPECT(0xa199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0227
        gbc.setState(0xe423, 0xada6, 0xbf60, 0x25cd, 0x38c6, 0x4a0c, 0x1, 0x0);
        gbc.writeMem(0xada6, { 0x4a, 0x72 });
        gbc.writeMem(0xe423, { 0xd0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xada8, gbc.sp());
        EXPECT(0x724a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xada6));
        EXPECT(0x72, gbc.readMem(0xada7));
        EXPECT(0xd0, gbc.readMem(0xe423));
        // D0 0228
        gbc.setState(0xbbf1, 0x288b, 0x45c0, 0xf98e, 0x1a36, 0x8fad, 0x0, 0x1);
        gbc.writeMem(0x288b, { 0xc1, 0xb5 });
        gbc.writeMem(0xbbf1, { 0xd0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x288d, gbc.sp());
        EXPECT(0xb5c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbbf1));
        // D0 0229
        gbc.setState(0x7c66, 0xe953, 0xa4e0, 0x164f, 0x49fa, 0x186c, 0x1, 0x0);
        gbc.writeMem(0x7c66, { 0xd0 });
        gbc.writeMem(0xe953, { 0x5d, 0xe0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe955, gbc.sp());
        EXPECT(0xe05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe953));
        EXPECT(0xe0, gbc.readMem(0xe954));
        // D0 022A
        gbc.setState(0xac1d, 0x8b19, 0xb640, 0x818a, 0xbe63, 0xacef, 0x0, 0x1);
        gbc.writeMem(0x8b19, { 0x2f, 0xe2 });
        gbc.writeMem(0xac1d, { 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8b1b, gbc.sp());
        EXPECT(0xe22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8b19));
        EXPECT(0xe2, gbc.readMem(0x8b1a));
        EXPECT(0xd0, gbc.readMem(0xac1d));
        // D0 022B
        gbc.setState(0x8051, 0x88f3, 0x2a80, 0xd86e, 0x9c6f, 0x4199, 0x0, 0x0);
        gbc.writeMem(0x8051, { 0xd0 });
        gbc.writeMem(0x88f3, { 0x6d, 0xa6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x88f5, gbc.sp());
        EXPECT(0xa66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8051));
        EXPECT(0x6d, gbc.readMem(0x88f3));
        EXPECT(0xa6, gbc.readMem(0x88f4));
        // D0 022C
        gbc.setState(0x74b1, 0x9265, 0x89a0, 0x9483, 0x246c, 0x86c7, 0x0, 0x0);
        gbc.writeMem(0x74b1, { 0xd0 });
        gbc.writeMem(0x9265, { 0x88, 0xb5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9267, gbc.sp());
        EXPECT(0xb588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9265));
        EXPECT(0xb5, gbc.readMem(0x9266));
        // D0 022D
        gbc.setState(0xb3c0, 0xdc1c, 0x73b0, 0x5e5e, 0x60b6, 0x4f63, 0x0, 0x0);
        gbc.writeMem(0xb3c0, { 0xd0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdc1c, gbc.sp());
        EXPECT(0xb3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb3c0));
        // D0 022E
        gbc.setState(0xd280, 0x8465, 0xf3e0, 0x13df, 0xa112, 0xf3cb, 0x1, 0x0);
        gbc.writeMem(0x8465, { 0xef, 0xbd });
        gbc.writeMem(0xd280, { 0xd0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8467, gbc.sp());
        EXPECT(0xbdef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x8465));
        EXPECT(0xbd, gbc.readMem(0x8466));
        EXPECT(0xd0, gbc.readMem(0xd280));
        // D0 022F
        gbc.setState(0xb603, 0xd9f6, 0x9db0, 0x2e9c, 0xd5f9, 0xdbc9, 0x1, 0x1);
        gbc.writeMem(0xb603, { 0xd0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd9f6, gbc.sp());
        EXPECT(0xb604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb603));
        // D0 0230
        gbc.setState(0xcfbf, 0x2d42, 0xae00, 0xfc9a, 0x9d64, 0xd460, 0x1, 0x0);
        gbc.writeMem(0x2d42, { 0xd7, 0xf7 });
        gbc.writeMem(0xcfbf, { 0xd0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2d44, gbc.sp());
        EXPECT(0xf7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcfbf));
        // D0 0231
        gbc.setState(0xce68, 0x31e6, 0xdd80, 0xb7f2, 0x4de1, 0x30cb, 0x1, 0x1);
        gbc.writeMem(0x31e6, { 0x62, 0x50 });
        gbc.writeMem(0xce68, { 0xd0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x31e8, gbc.sp());
        EXPECT(0x5062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xce68));
        // D0 0232
        gbc.setState(0xe574, 0x5324, 0xdaa0, 0x5b8f, 0xfb47, 0xc892, 0x1, 0x0);
        gbc.writeMem(0x5324, { 0x2d, 0x85 });
        gbc.writeMem(0xe574, { 0xd0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5326, gbc.sp());
        EXPECT(0x852d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe574));
        // D0 0233
        gbc.setState(0xa732, 0xbc87, 0x4550, 0x78b4, 0x81bb, 0x146a, 0x1, 0x1);
        gbc.writeMem(0xa732, { 0xd0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbc87, gbc.sp());
        EXPECT(0xa733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa732));
        // D0 0234
        gbc.setState(0xe1be, 0xeef6, 0xfdd0, 0xcb1, 0xc2b5, 0x83ca, 0x0, 0x0);
        gbc.writeMem(0xe1be, { 0xd0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xeef6, gbc.sp());
        EXPECT(0xe1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe1be));
        // D0 0235
        gbc.setState(0x26de, 0x99b3, 0x8f30, 0xc621, 0x36b8, 0xbb55, 0x1, 0x0);
        gbc.writeMem(0x26de, { 0xd0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x99b3, gbc.sp());
        EXPECT(0x26df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0236
        gbc.setState(0xe16d, 0x275, 0xd5b0, 0x706c, 0xe62d, 0xbf69, 0x0, 0x1);
        gbc.writeMem(0xe16d, { 0xd0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x275, gbc.sp());
        EXPECT(0xe16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe16d));
        // D0 0237
        gbc.setState(0x69e8, 0x25e1, 0xf800, 0xc609, 0xefe3, 0x19e6, 0x0, 0x1);
        gbc.writeMem(0x25e1, { 0xdf, 0x7 });
        gbc.writeMem(0x69e8, { 0xd0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x25e3, gbc.sp());
        EXPECT(0x7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0238
        gbc.setState(0xed00, 0x7971, 0x8ef0, 0x59b5, 0x321e, 0x4a0c, 0x1, 0x1);
        gbc.writeMem(0xed00, { 0xd0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7971, gbc.sp());
        EXPECT(0xed01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xed00));
        // D0 0239
        gbc.setState(0x17c2, 0xbd26, 0x5270, 0xb18a, 0x77e1, 0xf02f, 0x0, 0x0);
        gbc.writeMem(0x17c2, { 0xd0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbd26, gbc.sp());
        EXPECT(0x17c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 023A
        gbc.setState(0xce37, 0x6ed6, 0xfb00, 0x52b6, 0xe07e, 0x408d, 0x1, 0x1);
        gbc.writeMem(0x6ed6, { 0xa8, 0x70 });
        gbc.writeMem(0xce37, { 0xd0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6ed8, gbc.sp());
        EXPECT(0x70a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xce37));
        // D0 023B
        gbc.setState(0xbd73, 0xa9f5, 0x9700, 0x36aa, 0x747b, 0x3ac5, 0x1, 0x1);
        gbc.writeMem(0xa9f5, { 0x38, 0xe5 });
        gbc.writeMem(0xbd73, { 0xd0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa9f7, gbc.sp());
        EXPECT(0xe538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa9f5));
        EXPECT(0xe5, gbc.readMem(0xa9f6));
        EXPECT(0xd0, gbc.readMem(0xbd73));
        // D0 023D
        gbc.setState(0x9cf, 0x913f, 0x3f60, 0x6045, 0xa75, 0x6b63, 0x0, 0x0);
        gbc.writeMem(0x9cf, { 0xd0 });
        gbc.writeMem(0x913f, { 0xa8, 0x16 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9141, gbc.sp());
        EXPECT(0x16a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x913f));
        EXPECT(0x16, gbc.readMem(0x9140));
        // D0 023E
        gbc.setState(0x2f0, 0xfeb8, 0x3ea0, 0xc04b, 0x161f, 0x105d, 0x1, 0x0);
        gbc.writeMem(0x2f0, { 0xd0 });
        gbc.writeMem(0xfeb8, { 0x43, 0x5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfeba, gbc.sp());
        EXPECT(0x543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xfeb8));
        EXPECT(0x5, gbc.readMem(0xfeb9));
        // D0 023F
        gbc.setState(0x4fa4, 0xa603, 0xef70, 0xc5e0, 0xc722, 0x4b47, 0x0, 0x1);
        gbc.writeMem(0x4fa4, { 0xd0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa603, gbc.sp());
        EXPECT(0x4fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0240
        gbc.setState(0x3b10, 0xa943, 0x29d0, 0xc103, 0xd6c8, 0xe967, 0x1, 0x0);
        gbc.writeMem(0x3b10, { 0xd0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa943, gbc.sp());
        EXPECT(0x3b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0241
        gbc.setState(0x912f, 0x4575, 0x5000, 0x8d6c, 0xee03, 0xca0f, 0x0, 0x0);
        gbc.writeMem(0x4575, { 0x52, 0xfb });
        gbc.writeMem(0x912f, { 0xd0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4577, gbc.sp());
        EXPECT(0xfb52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x912f));
        // D0 0242
        gbc.setState(0xb8a, 0x31b0, 0xcfe0, 0x2d2e, 0xccac, 0x79b0, 0x1, 0x1);
        gbc.writeMem(0xb8a, { 0xd0 });
        gbc.writeMem(0x31b0, { 0x6f, 0x7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x31b2, gbc.sp());
        EXPECT(0x76f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0243
        gbc.setState(0x41bf, 0xa6c3, 0x4d90, 0xd6d1, 0xf79a, 0x19bf, 0x1, 0x0);
        gbc.writeMem(0x41bf, { 0xd0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa6c3, gbc.sp());
        EXPECT(0x41c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0244
        gbc.setState(0x11d3, 0xf882, 0x6610, 0xb91e, 0xde41, 0x8617, 0x0, 0x0);
        gbc.writeMem(0x11d3, { 0xd0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf882, gbc.sp());
        EXPECT(0x11d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0245
        gbc.setState(0x4b51, 0x3f25, 0xca20, 0xf1f6, 0xd8e3, 0x6050, 0x1, 0x1);
        gbc.writeMem(0x3f25, { 0xb3, 0x60 });
        gbc.writeMem(0x4b51, { 0xd0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3f27, gbc.sp());
        EXPECT(0x60b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0246
        gbc.setState(0x91f9, 0x1daf, 0xe210, 0xa24a, 0x16d, 0x2035, 0x0, 0x1);
        gbc.writeMem(0x91f9, { 0xd0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1daf, gbc.sp());
        EXPECT(0x91fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x91f9));
        // D0 0247
        gbc.setState(0xed0f, 0x2021, 0x9d90, 0xdb05, 0x9126, 0xfd70, 0x1, 0x0);
        gbc.writeMem(0xed0f, { 0xd0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2021, gbc.sp());
        EXPECT(0xed10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xed0f));
        // D0 0248
        gbc.setState(0x184d, 0x3d1b, 0x3a10, 0xc81a, 0x421a, 0xfc6a, 0x1, 0x1);
        gbc.writeMem(0x184d, { 0xd0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3d1b, gbc.sp());
        EXPECT(0x184e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0249
        gbc.setState(0x7783, 0x1438, 0xb5c0, 0xe8d4, 0x8d7d, 0x34e9, 0x0, 0x1);
        gbc.writeMem(0x1438, { 0x74, 0x64 });
        gbc.writeMem(0x7783, { 0xd0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x143a, gbc.sp());
        EXPECT(0x6474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 024A
        gbc.setState(0x2481, 0x9d33, 0x4360, 0xc82e, 0xc955, 0x500a, 0x1, 0x0);
        gbc.writeMem(0x2481, { 0xd0 });
        gbc.writeMem(0x9d33, { 0x4b, 0x30 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9d35, gbc.sp());
        EXPECT(0x304b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9d33));
        EXPECT(0x30, gbc.readMem(0x9d34));
        // D0 024B
        gbc.setState(0xe40d, 0x6804, 0xd000, 0x5ec4, 0x1e25, 0x7478, 0x1, 0x1);
        gbc.writeMem(0x6804, { 0xc1, 0x12 });
        gbc.writeMem(0xe40d, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6806, gbc.sp());
        EXPECT(0x12c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe40d));
        // D0 024C
        gbc.setState(0x384f, 0x44c3, 0x96b0, 0x4f58, 0x95ee, 0x9fcb, 0x0, 0x0);
        gbc.writeMem(0x384f, { 0xd0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x44c3, gbc.sp());
        EXPECT(0x3850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 024D
        gbc.setState(0xe860, 0xccf0, 0xc210, 0x347, 0xb7b0, 0xb54a, 0x1, 0x0);
        gbc.writeMem(0xe860, { 0xd0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xccf0, gbc.sp());
        EXPECT(0xe861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe860));
        // D0 024E
        gbc.setState(0x2379, 0x8b36, 0x30b0, 0x1225, 0x5b47, 0x50e0, 0x0, 0x0);
        gbc.writeMem(0x2379, { 0xd0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8b36, gbc.sp());
        EXPECT(0x237a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 024F
        gbc.setState(0x73a5, 0x2c09, 0x190, 0x2294, 0xd3e, 0xa2f4, 0x0, 0x0);
        gbc.writeMem(0x73a5, { 0xd0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2c09, gbc.sp());
        EXPECT(0x73a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0250
        gbc.setState(0xe1, 0x8efd, 0x7730, 0xee64, 0x1aaa, 0xf200, 0x0, 0x0);
        gbc.writeMem(0xe1, { 0xd0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8efd, gbc.sp());
        EXPECT(0xe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0251
        gbc.setState(0x43c, 0x9422, 0x72c0, 0xa957, 0xc18f, 0xd010, 0x1, 0x0);
        gbc.writeMem(0x43c, { 0xd0 });
        gbc.writeMem(0x9422, { 0xc9, 0x38 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9424, gbc.sp());
        EXPECT(0x38c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9422));
        EXPECT(0x38, gbc.readMem(0x9423));
        // D0 0252
        gbc.setState(0x35b6, 0xec96, 0xf0b0, 0x1579, 0x8156, 0x5a02, 0x0, 0x1);
        gbc.writeMem(0x35b6, { 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xec96, gbc.sp());
        EXPECT(0x35b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0253
        gbc.setState(0x93be, 0x1dc3, 0x7b70, 0xad99, 0x8ac3, 0x4d11, 0x1, 0x1);
        gbc.writeMem(0x93be, { 0xd0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1dc3, gbc.sp());
        EXPECT(0x93bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x93be));
        // D0 0254
        gbc.setState(0x4d19, 0x39b7, 0x5d50, 0x56e2, 0x5564, 0x35ec, 0x0, 0x1);
        gbc.writeMem(0x4d19, { 0xd0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x39b7, gbc.sp());
        EXPECT(0x4d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0255
        gbc.setState(0xc136, 0x8dfb, 0x7b40, 0x4907, 0x2d4a, 0xbde7, 0x0, 0x1);
        gbc.writeMem(0x8dfb, { 0x39, 0xa7 });
        gbc.writeMem(0xc136, { 0xd0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8dfd, gbc.sp());
        EXPECT(0xa739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8dfb));
        EXPECT(0xa7, gbc.readMem(0x8dfc));
        EXPECT(0xd0, gbc.readMem(0xc136));
        // D0 0256
        gbc.setState(0xaf1e, 0xa64c, 0x4f0, 0x1213, 0x4fae, 0x94e9, 0x1, 0x0);
        gbc.writeMem(0xaf1e, { 0xd0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa64c, gbc.sp());
        EXPECT(0xaf1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xaf1e));
        // D0 0257
        gbc.setState(0xc52a, 0x166f, 0x9220, 0x566c, 0x423b, 0x68ff, 0x0, 0x0);
        gbc.writeMem(0x166f, { 0x1e, 0x84 });
        gbc.writeMem(0xc52a, { 0xd0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1671, gbc.sp());
        EXPECT(0x841e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc52a));
        // D0 0258
        gbc.setState(0x90f4, 0x8474, 0x66d0, 0xa6e2, 0xe498, 0xe646, 0x1, 0x0);
        gbc.writeMem(0x90f4, { 0xd0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8474, gbc.sp());
        EXPECT(0x90f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x90f4));
        // D0 0259
        gbc.setState(0x5982, 0x2e26, 0x1520, 0x2db3, 0x50d1, 0x638, 0x0, 0x0);
        gbc.writeMem(0x2e26, { 0x90, 0xb9 });
        gbc.writeMem(0x5982, { 0xd0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2e28, gbc.sp());
        EXPECT(0xb990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 025A
        gbc.setState(0xd23f, 0xd52a, 0x30b0, 0x1cd5, 0x7e21, 0x940, 0x1, 0x0);
        gbc.writeMem(0xd23f, { 0xd0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd52a, gbc.sp());
        EXPECT(0xd240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd23f));
        // D0 025B
        gbc.setState(0xd65, 0x4276, 0x18d0, 0xf3d6, 0x4b9, 0xbbae, 0x1, 0x0);
        gbc.writeMem(0xd65, { 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4276, gbc.sp());
        EXPECT(0xd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 025C
        gbc.setState(0x4977, 0x2154, 0xd010, 0x15a4, 0x4fdb, 0xac98, 0x1, 0x0);
        gbc.writeMem(0x4977, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2154, gbc.sp());
        EXPECT(0x4978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 025D
        gbc.setState(0xd4c5, 0x33d3, 0x4c20, 0x2b54, 0xaad8, 0xa035, 0x0, 0x0);
        gbc.writeMem(0x33d3, { 0x9, 0xf9 });
        gbc.writeMem(0xd4c5, { 0xd0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x33d5, gbc.sp());
        EXPECT(0xf909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd4c5));
        // D0 025E
        gbc.setState(0x32a, 0x6e3d, 0x35e0, 0x2f24, 0xa28, 0xd69, 0x1, 0x1);
        gbc.writeMem(0x32a, { 0xd0 });
        gbc.writeMem(0x6e3d, { 0x5d, 0x18 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6e3f, gbc.sp());
        EXPECT(0x185d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 025F
        gbc.setState(0x77b8, 0x1ec3, 0x17a0, 0x419c, 0x8774, 0xd757, 0x0, 0x1);
        gbc.writeMem(0x1ec3, { 0x5c, 0x1d });
        gbc.writeMem(0x77b8, { 0xd0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1ec5, gbc.sp());
        EXPECT(0x1d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0260
        gbc.setState(0x61cf, 0xe930, 0x4910, 0x552a, 0x132d, 0x3375, 0x0, 0x1);
        gbc.writeMem(0x61cf, { 0xd0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe930, gbc.sp());
        EXPECT(0x61d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0261
        gbc.setState(0x6e83, 0x25bf, 0x6310, 0x4ba2, 0x26b3, 0x3a3d, 0x1, 0x0);
        gbc.writeMem(0x6e83, { 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x25bf, gbc.sp());
        EXPECT(0x6e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0262
        gbc.setState(0x9c3e, 0xd326, 0xf670, 0xcb12, 0xb0ab, 0xc20c, 0x0, 0x1);
        gbc.writeMem(0x9c3e, { 0xd0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd326, gbc.sp());
        EXPECT(0x9c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9c3e));
        // D0 0263
        gbc.setState(0x5964, 0x7e73, 0x1e20, 0x124, 0x1f12, 0x9d4b, 0x1, 0x0);
        gbc.writeMem(0x5964, { 0xd0 });
        gbc.writeMem(0x7e73, { 0xae, 0x62 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7e75, gbc.sp());
        EXPECT(0x62ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0264
        gbc.setState(0xb81, 0x706, 0x32f0, 0xec4b, 0xd958, 0x35ef, 0x1, 0x1);
        gbc.writeMem(0xb81, { 0xd0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x706, gbc.sp());
        EXPECT(0xb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0265
        gbc.setState(0x36cb, 0xfb13, 0xb270, 0x5f20, 0xc0a9, 0x2dd8, 0x1, 0x0);
        gbc.writeMem(0x36cb, { 0xd0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfb13, gbc.sp());
        EXPECT(0x36cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0266
        gbc.setState(0xc40a, 0xa478, 0x5c20, 0x8ee4, 0x78b0, 0x6b7, 0x1, 0x1);
        gbc.writeMem(0xa478, { 0xa0, 0x6e });
        gbc.writeMem(0xc40a, { 0xd0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0x6ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa478));
        EXPECT(0x6e, gbc.readMem(0xa479));
        EXPECT(0xd0, gbc.readMem(0xc40a));
        // D0 0267
        gbc.setState(0xde24, 0x229c, 0x39b0, 0xc25c, 0xf66b, 0xa191, 0x1, 0x1);
        gbc.writeMem(0xde24, { 0xd0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x229c, gbc.sp());
        EXPECT(0xde25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xde24));
        // D0 0268
        gbc.setState(0xefc5, 0xfad, 0x380, 0x459e, 0x47df, 0xb347, 0x0, 0x0);
        gbc.writeMem(0xfad, { 0xd6, 0x48 });
        gbc.writeMem(0xefc5, { 0xd0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfaf, gbc.sp());
        EXPECT(0x48d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xefc5));
        // D0 0269
        gbc.setState(0xa8db, 0x8fad, 0xe640, 0x8853, 0xd2b5, 0x3a1b, 0x1, 0x1);
        gbc.writeMem(0x8fad, { 0x79, 0xb6 });
        gbc.writeMem(0xa8db, { 0xd0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8faf, gbc.sp());
        EXPECT(0xb679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8fad));
        EXPECT(0xb6, gbc.readMem(0x8fae));
        EXPECT(0xd0, gbc.readMem(0xa8db));
        // D0 026A
        gbc.setState(0xe7b6, 0x8caa, 0xdb40, 0xb2b, 0xd4e9, 0xcb7b, 0x0, 0x0);
        gbc.writeMem(0x8caa, { 0x3, 0xc5 });
        gbc.writeMem(0xe7b6, { 0xd0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8cac, gbc.sp());
        EXPECT(0xc503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8caa));
        EXPECT(0xc5, gbc.readMem(0x8cab));
        EXPECT(0xd0, gbc.readMem(0xe7b6));
        // D0 026B
        gbc.setState(0x7c6e, 0xab3b, 0x9b60, 0x48d, 0xa47e, 0xa72d, 0x1, 0x1);
        gbc.writeMem(0x7c6e, { 0xd0 });
        gbc.writeMem(0xab3b, { 0xe7, 0xce });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xab3d, gbc.sp());
        EXPECT(0xcee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xab3b));
        EXPECT(0xce, gbc.readMem(0xab3c));
        // D0 026C
        gbc.setState(0x9dec, 0xaa76, 0x3400, 0xc5a, 0xf6e, 0x917e, 0x1, 0x0);
        gbc.writeMem(0x9dec, { 0xd0 });
        gbc.writeMem(0xaa76, { 0x2b, 0x70 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaa78, gbc.sp());
        EXPECT(0x702b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9dec));
        EXPECT(0x2b, gbc.readMem(0xaa76));
        EXPECT(0x70, gbc.readMem(0xaa77));
        // D0 026D
        gbc.setState(0x7ebc, 0xd9d2, 0x1c10, 0x8d95, 0x12bf, 0xae09, 0x0, 0x1);
        gbc.writeMem(0x7ebc, { 0xd0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd9d2, gbc.sp());
        EXPECT(0x7ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 026E
        gbc.setState(0x3cfc, 0x6f78, 0x1840, 0xeaa9, 0xf05f, 0xe25a, 0x1, 0x0);
        gbc.writeMem(0x3cfc, { 0xd0 });
        gbc.writeMem(0x6f78, { 0x14, 0x35 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6f7a, gbc.sp());
        EXPECT(0x3514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 026F
        gbc.setState(0xe4a4, 0x6240, 0xc970, 0xa8dc, 0xc1f3, 0x5e4c, 0x0, 0x1);
        gbc.writeMem(0xe4a4, { 0xd0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6240, gbc.sp());
        EXPECT(0xe4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe4a4));
        // D0 0270
        gbc.setState(0x3231, 0x32a0, 0xf070, 0x7ee2, 0xf26c, 0xbb17, 0x1, 0x0);
        gbc.writeMem(0x3231, { 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x32a0, gbc.sp());
        EXPECT(0x3232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0271
        gbc.setState(0x3477, 0x1ce2, 0xe730, 0x5603, 0x4a87, 0x3751, 0x0, 0x1);
        gbc.writeMem(0x3477, { 0xd0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1ce2, gbc.sp());
        EXPECT(0x3478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0272
        gbc.setState(0x26c3, 0xf1a0, 0xd80, 0xe764, 0x6f77, 0x2436, 0x0, 0x1);
        gbc.writeMem(0x26c3, { 0xd0 });
        gbc.writeMem(0xf1a0, { 0x33, 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf1a2, gbc.sp());
        EXPECT(0xd33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xf1a0));
        EXPECT(0xd, gbc.readMem(0xf1a1));
        // D0 0273
        gbc.setState(0xd42a, 0xbe46, 0xa090, 0x9ef6, 0xd9cb, 0x8d4b, 0x1, 0x1);
        gbc.writeMem(0xd42a, { 0xd0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbe46, gbc.sp());
        EXPECT(0xd42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd42a));
        // D0 0274
        gbc.setState(0x1bf6, 0x4be4, 0x9280, 0x155a, 0x44fe, 0x3926, 0x1, 0x1);
        gbc.writeMem(0x1bf6, { 0xd0 });
        gbc.writeMem(0x4be4, { 0xfd, 0xe6 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4be6, gbc.sp());
        EXPECT(0xe6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0276
        gbc.setState(0xf2a, 0x3a54, 0x8450, 0x2a52, 0x14ba, 0x5ab2, 0x1, 0x0);
        gbc.writeMem(0xf2a, { 0xd0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3a54, gbc.sp());
        EXPECT(0xf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0277
        gbc.setState(0xdb00, 0x2ba9, 0xcde0, 0x87c6, 0x5723, 0x88c5, 0x1, 0x1);
        gbc.writeMem(0x2ba9, { 0x52, 0x2a });
        gbc.writeMem(0xdb00, { 0xd0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2bab, gbc.sp());
        EXPECT(0x2a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdb00));
        // D0 0278
        gbc.setState(0x8caa, 0x4ef5, 0x67a0, 0x4d89, 0x111e, 0x2d21, 0x1, 0x1);
        gbc.writeMem(0x4ef5, { 0xfc, 0xb5 });
        gbc.writeMem(0x8caa, { 0xd0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4ef7, gbc.sp());
        EXPECT(0xb5fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8caa));
        // D0 0279
        gbc.setState(0xad76, 0x3f67, 0xa9d0, 0x9779, 0xb6b1, 0x62b2, 0x1, 0x1);
        gbc.writeMem(0xad76, { 0xd0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3f67, gbc.sp());
        EXPECT(0xad77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xad76));
        // D0 027B
        gbc.setState(0x158b, 0x4912, 0xc5f0, 0x7167, 0xd761, 0x28d3, 0x0, 0x1);
        gbc.writeMem(0x158b, { 0xd0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4912, gbc.sp());
        EXPECT(0x158c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 027C
        gbc.setState(0x95e3, 0x50a6, 0x8470, 0x427e, 0xb715, 0xcab5, 0x1, 0x1);
        gbc.writeMem(0x95e3, { 0xd0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x50a6, gbc.sp());
        EXPECT(0x95e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x95e3));
        // D0 027D
        gbc.setState(0x318f, 0xd23e, 0x5870, 0x7838, 0x5d2f, 0xcb91, 0x0, 0x1);
        gbc.writeMem(0x318f, { 0xd0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd23e, gbc.sp());
        EXPECT(0x3190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 027E
        gbc.setState(0xedcb, 0x3cb2, 0xd850, 0xbd8e, 0x9d83, 0xbfb8, 0x1, 0x1);
        gbc.writeMem(0xedcb, { 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3cb2, gbc.sp());
        EXPECT(0xedcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xedcb));
        // D0 027F
        gbc.setState(0x15f, 0x6b84, 0x62b0, 0x9aea, 0xc8fd, 0xa623, 0x1, 0x0);
        gbc.writeMem(0x15f, { 0xd0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6b84, gbc.sp());
        EXPECT(0x160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0280
        gbc.setState(0x5791, 0x2cc2, 0x1580, 0xee26, 0x35d3, 0x140f, 0x0, 0x0);
        gbc.writeMem(0x2cc2, { 0x28, 0xe2 });
        gbc.writeMem(0x5791, { 0xd0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2cc4, gbc.sp());
        EXPECT(0xe228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0281
        gbc.setState(0x3d21, 0x10d9, 0xfd30, 0x9c49, 0xfd4b, 0x6653, 0x0, 0x1);
        gbc.writeMem(0x3d21, { 0xd0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x10d9, gbc.sp());
        EXPECT(0x3d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0282
        gbc.setState(0x4e26, 0x5995, 0x9400, 0x3825, 0x7ece, 0x9cf5, 0x1, 0x0);
        gbc.writeMem(0x4e26, { 0xd0 });
        gbc.writeMem(0x5995, { 0x10, 0x77 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5997, gbc.sp());
        EXPECT(0x7710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0283
        gbc.setState(0x82c0, 0xc8a9, 0xc4d0, 0x851b, 0xf21d, 0x7ef3, 0x0, 0x1);
        gbc.writeMem(0x82c0, { 0xd0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc8a9, gbc.sp());
        EXPECT(0x82c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x82c0));
        // D0 0284
        gbc.setState(0xe4cc, 0xbf5e, 0x56d0, 0xf1d8, 0xaee1, 0x33ae, 0x1, 0x0);
        gbc.writeMem(0xe4cc, { 0xd0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbf5e, gbc.sp());
        EXPECT(0xe4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe4cc));
        // D0 0285
        gbc.setState(0x9701, 0xf4e, 0xcdb0, 0x5c20, 0xdb94, 0x9c87, 0x1, 0x1);
        gbc.writeMem(0x9701, { 0xd0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf4e, gbc.sp());
        EXPECT(0x9702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9701));
        // D0 0287
        gbc.setState(0x58e8, 0x4f65, 0x5260, 0xfcc2, 0xbe4b, 0x9524, 0x0, 0x0);
        gbc.writeMem(0x4f65, { 0x31, 0x24 });
        gbc.writeMem(0x58e8, { 0xd0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4f67, gbc.sp());
        EXPECT(0x2431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0288
        gbc.setState(0xd6ec, 0x8426, 0x28c0, 0xbe25, 0xd47e, 0x604e, 0x1, 0x0);
        gbc.writeMem(0x8426, { 0x46, 0x5b });
        gbc.writeMem(0xd6ec, { 0xd0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8428, gbc.sp());
        EXPECT(0x5b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x8426));
        EXPECT(0x5b, gbc.readMem(0x8427));
        EXPECT(0xd0, gbc.readMem(0xd6ec));
        // D0 0289
        gbc.setState(0x7565, 0x1444, 0x50f0, 0xed5f, 0xf5a7, 0xb87e, 0x1, 0x0);
        gbc.writeMem(0x7565, { 0xd0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1444, gbc.sp());
        EXPECT(0x7566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 028A
        gbc.setState(0xa68c, 0x4912, 0x2ee0, 0x8b70, 0x5d4, 0xd1c, 0x1, 0x1);
        gbc.writeMem(0x4912, { 0xad, 0xe9 });
        gbc.writeMem(0xa68c, { 0xd0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4914, gbc.sp());
        EXPECT(0xe9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa68c));
        // D0 028B
        gbc.setState(0x58d, 0x2a61, 0xbd30, 0xcd86, 0x7b86, 0x7a29, 0x1, 0x0);
        gbc.writeMem(0x58d, { 0xd0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2a61, gbc.sp());
        EXPECT(0x58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 028C
        gbc.setState(0xc53a, 0x3165, 0xbff0, 0x75eb, 0xbb02, 0x9f45, 0x1, 0x1);
        gbc.writeMem(0xc53a, { 0xd0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3165, gbc.sp());
        EXPECT(0xc53b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc53a));
        // D0 028D
        gbc.setState(0x9eb3, 0xeb8, 0x5fe0, 0x5d9a, 0xb0db, 0xbe71, 0x0, 0x1);
        gbc.writeMem(0xeb8, { 0x3a, 0x71 });
        gbc.writeMem(0x9eb3, { 0xd0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeba, gbc.sp());
        EXPECT(0x713a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9eb3));
        // D0 028E
        gbc.setState(0x7b5, 0xd0a8, 0xa080, 0xc7e5, 0x175c, 0xb3a1, 0x1, 0x0);
        gbc.writeMem(0x7b5, { 0xd0 });
        gbc.writeMem(0xd0a8, { 0x38, 0x8b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd0aa, gbc.sp());
        EXPECT(0x8b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd0a8));
        EXPECT(0x8b, gbc.readMem(0xd0a9));
        // D0 028F
        gbc.setState(0x1e21, 0xd63b, 0x1700, 0x5ead, 0x5cf2, 0xfbbf, 0x1, 0x0);
        gbc.writeMem(0x1e21, { 0xd0 });
        gbc.writeMem(0xd63b, { 0x6c, 0x9a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd63d, gbc.sp());
        EXPECT(0x9a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd63b));
        EXPECT(0x9a, gbc.readMem(0xd63c));
        // D0 0290
        gbc.setState(0x6a4f, 0x8c8f, 0xabb0, 0x55d8, 0x1061, 0x7b33, 0x0, 0x1);
        gbc.writeMem(0x6a4f, { 0xd0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8c8f, gbc.sp());
        EXPECT(0x6a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0291
        gbc.setState(0x5a23, 0xa77, 0x7db0, 0x7f40, 0xac60, 0xaee5, 0x0, 0x0);
        gbc.writeMem(0x5a23, { 0xd0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa77, gbc.sp());
        EXPECT(0x5a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0292
        gbc.setState(0x260f, 0xc0ae, 0xcdc0, 0xa474, 0x8365, 0x6d1a, 0x0, 0x0);
        gbc.writeMem(0x260f, { 0xd0 });
        gbc.writeMem(0xc0ae, { 0x2f, 0x57 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc0b0, gbc.sp());
        EXPECT(0x572f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc0ae));
        EXPECT(0x57, gbc.readMem(0xc0af));
        // D0 0293
        gbc.setState(0xed32, 0x9fd0, 0x6390, 0xf00e, 0x6256, 0xd465, 0x0, 0x0);
        gbc.writeMem(0xed32, { 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9fd0, gbc.sp());
        EXPECT(0xed33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xed32));
        // D0 0294
        gbc.setState(0xb7b3, 0xa5ce, 0xd220, 0x7ac, 0x567, 0x6f35, 0x0, 0x0);
        gbc.writeMem(0xa5ce, { 0xfd, 0xff });
        gbc.writeMem(0xb7b3, { 0xd0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa5d0, gbc.sp());
        EXPECT(0xfffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xa5ce));
        EXPECT(0xff, gbc.readMem(0xa5cf));
        EXPECT(0xd0, gbc.readMem(0xb7b3));
        // D0 0295
        gbc.setState(0xe65d, 0x1446, 0x8150, 0x8548, 0xa11b, 0x4168, 0x0, 0x1);
        gbc.writeMem(0xe65d, { 0xd0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1446, gbc.sp());
        EXPECT(0xe65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe65d));
        // D0 0296
        gbc.setState(0xc12b, 0x7f5e, 0x8220, 0xf148, 0xad33, 0x13a2, 0x1, 0x0);
        gbc.writeMem(0x7f5e, { 0x6, 0xb2 });
        gbc.writeMem(0xc12b, { 0xd0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7f60, gbc.sp());
        EXPECT(0xb206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc12b));
        // D0 0297
        gbc.setState(0x4385, 0xf4bb, 0x1390, 0xb708, 0xd00a, 0xefd8, 0x0, 0x1);
        gbc.writeMem(0x4385, { 0xd0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf4bb, gbc.sp());
        EXPECT(0x4386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0298
        gbc.setState(0xc29c, 0xc72a, 0x50, 0x2d69, 0x164e, 0x5069, 0x0, 0x1);
        gbc.writeMem(0xc29c, { 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc72a, gbc.sp());
        EXPECT(0xc29d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc29c));
        // D0 0299
        gbc.setState(0x6b7d, 0xba87, 0x9db0, 0xfe05, 0xd8a9, 0x4f60, 0x0, 0x1);
        gbc.writeMem(0x6b7d, { 0xd0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xba87, gbc.sp());
        EXPECT(0x6b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 029A
        gbc.setState(0x5240, 0x98e6, 0xac40, 0xaee1, 0xdd8e, 0xb7f, 0x1, 0x0);
        gbc.writeMem(0x5240, { 0xd0 });
        gbc.writeMem(0x98e6, { 0x77, 0xbd });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x98e8, gbc.sp());
        EXPECT(0xbd77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x98e6));
        EXPECT(0xbd, gbc.readMem(0x98e7));
        // D0 029B
        gbc.setState(0x374d, 0xbec1, 0xff90, 0xa858, 0xf6a8, 0x29fa, 0x1, 0x1);
        gbc.writeMem(0x374d, { 0xd0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbec1, gbc.sp());
        EXPECT(0x374e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 029C
        gbc.setState(0xb65b, 0x54de, 0x5a80, 0xc42e, 0x6f5a, 0x5795, 0x0, 0x0);
        gbc.writeMem(0x54de, { 0xfc, 0x4b });
        gbc.writeMem(0xb65b, { 0xd0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x54e0, gbc.sp());
        EXPECT(0x4bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb65b));
        // D0 029D
        gbc.setState(0x47d8, 0xb4d9, 0xc120, 0x7228, 0xda6, 0x2455, 0x1, 0x1);
        gbc.writeMem(0x47d8, { 0xd0 });
        gbc.writeMem(0xb4d9, { 0x7a, 0xef });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb4db, gbc.sp());
        EXPECT(0xef7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb4d9));
        EXPECT(0xef, gbc.readMem(0xb4da));
        // D0 029E
        gbc.setState(0xaaf6, 0xa97d, 0xe050, 0x1720, 0x8108, 0x9775, 0x0, 0x0);
        gbc.writeMem(0xaaf6, { 0xd0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa97d, gbc.sp());
        EXPECT(0xaaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xaaf6));
        // D0 029F
        gbc.setState(0x6b75, 0x1610, 0xa240, 0x54b8, 0xdf48, 0x88b, 0x0, 0x1);
        gbc.writeMem(0x1610, { 0x86, 0x36 });
        gbc.writeMem(0x6b75, { 0xd0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1612, gbc.sp());
        EXPECT(0x3686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02A0
        gbc.setState(0xbbba, 0xd56d, 0x3f60, 0xb5e1, 0x593a, 0xf753, 0x0, 0x0);
        gbc.writeMem(0xbbba, { 0xd0 });
        gbc.writeMem(0xd56d, { 0x20, 0x5b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd56f, gbc.sp());
        EXPECT(0x5b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbbba));
        EXPECT(0x20, gbc.readMem(0xd56d));
        EXPECT(0x5b, gbc.readMem(0xd56e));
        // D0 02A1
        gbc.setState(0x3e60, 0x66a9, 0x5600, 0x9cc8, 0x29bd, 0xb7f6, 0x1, 0x1);
        gbc.writeMem(0x3e60, { 0xd0 });
        gbc.writeMem(0x66a9, { 0x9, 0x4f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x66ab, gbc.sp());
        EXPECT(0x4f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02A2
        gbc.setState(0x616, 0xd2be, 0xc2b0, 0x669c, 0xedc0, 0xfa9b, 0x0, 0x0);
        gbc.writeMem(0x616, { 0xd0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd2be, gbc.sp());
        EXPECT(0x617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02A3
        gbc.setState(0x417f, 0x9700, 0x95b0, 0xe87, 0x682b, 0xec6d, 0x1, 0x0);
        gbc.writeMem(0x417f, { 0xd0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9700, gbc.sp());
        EXPECT(0x4180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02A4
        gbc.setState(0xbe82, 0xce21, 0xbd60, 0x2173, 0x7c7b, 0xa50b, 0x1, 0x1);
        gbc.writeMem(0xbe82, { 0xd0 });
        gbc.writeMem(0xce21, { 0x11, 0xbf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xce23, gbc.sp());
        EXPECT(0xbf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbe82));
        EXPECT(0x11, gbc.readMem(0xce21));
        EXPECT(0xbf, gbc.readMem(0xce22));
        // D0 02A5
        gbc.setState(0x637e, 0xda60, 0xffc0, 0x5c02, 0xbf4e, 0x251c, 0x1, 0x1);
        gbc.writeMem(0x637e, { 0xd0 });
        gbc.writeMem(0xda60, { 0xaa, 0x21 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xda62, gbc.sp());
        EXPECT(0x21aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xda60));
        EXPECT(0x21, gbc.readMem(0xda61));
        // D0 02A6
        gbc.setState(0x6bac, 0x64a3, 0x38c0, 0xffe3, 0xb89e, 0xf23d, 0x1, 0x1);
        gbc.writeMem(0x64a3, { 0xfa, 0xfb });
        gbc.writeMem(0x6bac, { 0xd0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x64a5, gbc.sp());
        EXPECT(0xfbfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02A7
        gbc.setState(0xb308, 0x4e3c, 0x7870, 0x9ec0, 0x31fc, 0xbddd, 0x0, 0x0);
        gbc.writeMem(0xb308, { 0xd0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4e3c, gbc.sp());
        EXPECT(0xb309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb308));
        // D0 02A8
        gbc.setState(0x4, 0xb337, 0x5f40, 0x9857, 0xb0cb, 0x98ed, 0x1, 0x1);
        gbc.writeMem(0x4, { 0xd0 });
        gbc.writeMem(0xb337, { 0x4d, 0x34 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb339, gbc.sp());
        EXPECT(0x344d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb337));
        EXPECT(0x34, gbc.readMem(0xb338));
        // D0 02A9
        gbc.setState(0x58dd, 0x2293, 0xfe20, 0xf2b1, 0x7fb0, 0xa3c4, 0x0, 0x1);
        gbc.writeMem(0x2293, { 0x74, 0xc3 });
        gbc.writeMem(0x58dd, { 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2295, gbc.sp());
        EXPECT(0xc374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02AA
        gbc.setState(0xd1f2, 0x4f1b, 0x2280, 0x3b55, 0x54eb, 0xb9bb, 0x1, 0x0);
        gbc.writeMem(0x4f1b, { 0x80, 0x13 });
        gbc.writeMem(0xd1f2, { 0xd0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4f1d, gbc.sp());
        EXPECT(0x1380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd1f2));
        // D0 02AB
        gbc.setState(0xefd, 0xe9f1, 0xef0, 0xae3b, 0x5520, 0x430, 0x1, 0x0);
        gbc.writeMem(0xefd, { 0xd0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe9f1, gbc.sp());
        EXPECT(0xefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02AC
        gbc.setState(0x6061, 0x60a6, 0x8d20, 0x21ea, 0x997a, 0xbfe0, 0x1, 0x1);
        gbc.writeMem(0x6061, { 0xd0 });
        gbc.writeMem(0x60a6, { 0xca, 0x6c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x60a8, gbc.sp());
        EXPECT(0x6cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02AD
        gbc.setState(0xabab, 0x3bc9, 0x4ba0, 0xeb9e, 0x6679, 0x9066, 0x0, 0x0);
        gbc.writeMem(0x3bc9, { 0xf, 0x1c });
        gbc.writeMem(0xabab, { 0xd0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3bcb, gbc.sp());
        EXPECT(0x1c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xabab));
        // D0 02AE
        gbc.setState(0x7443, 0x94ae, 0x5f50, 0xf80f, 0x541b, 0x9c86, 0x0, 0x0);
        gbc.writeMem(0x7443, { 0xd0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x94ae, gbc.sp());
        EXPECT(0x7444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02AF
        gbc.setState(0x449f, 0xd4d8, 0xebb0, 0xa087, 0x248b, 0xa932, 0x0, 0x0);
        gbc.writeMem(0x449f, { 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd4d8, gbc.sp());
        EXPECT(0x44a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02B0
        gbc.setState(0x14d, 0x7249, 0x1f00, 0x8939, 0x84ee, 0xb42d, 0x1, 0x0);
        gbc.writeMem(0x14d, { 0xd0 });
        gbc.writeMem(0x7249, { 0xca, 0xd4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x724b, gbc.sp());
        EXPECT(0xd4ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02B1
        gbc.setState(0xd255, 0x6a40, 0x5a30, 0x29fb, 0x28d1, 0x7acb, 0x0, 0x1);
        gbc.writeMem(0xd255, { 0xd0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6a40, gbc.sp());
        EXPECT(0xd256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd255));
        // D0 02B2
        gbc.setState(0x35db, 0x9cdb, 0xa1b0, 0xc710, 0xaf85, 0x3d45, 0x1, 0x1);
        gbc.writeMem(0x35db, { 0xd0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9cdb, gbc.sp());
        EXPECT(0x35dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02B3
        gbc.setState(0x6270, 0x5f48, 0xaee0, 0x52d0, 0xe88a, 0x42b, 0x0, 0x0);
        gbc.writeMem(0x5f48, { 0x1b, 0x1e });
        gbc.writeMem(0x6270, { 0xd0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5f4a, gbc.sp());
        EXPECT(0x1e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02B4
        gbc.setState(0x3932, 0x1b50, 0xa0f0, 0x2b5e, 0xf45f, 0x68ac, 0x0, 0x0);
        gbc.writeMem(0x3932, { 0xd0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1b50, gbc.sp());
        EXPECT(0x3933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02B5
        gbc.setState(0x1d1e, 0xf29f, 0x6ac0, 0x4a7f, 0x1e1f, 0xd754, 0x0, 0x1);
        gbc.writeMem(0x1d1e, { 0xd0 });
        gbc.writeMem(0xf29f, { 0x5c, 0x7b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf2a1, gbc.sp());
        EXPECT(0x7b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xf29f));
        EXPECT(0x7b, gbc.readMem(0xf2a0));
        // D0 02B6
        gbc.setState(0x100e, 0x7ce9, 0x690, 0x4205, 0x41e, 0xcf80, 0x1, 0x0);
        gbc.writeMem(0x100e, { 0xd0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7ce9, gbc.sp());
        EXPECT(0x100f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02B7
        gbc.setState(0x62a7, 0xaf31, 0x6c80, 0xf600, 0xc50c, 0x2ead, 0x1, 0x1);
        gbc.writeMem(0x62a7, { 0xd0 });
        gbc.writeMem(0xaf31, { 0x7a, 0xc6 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xaf33, gbc.sp());
        EXPECT(0xc67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xaf31));
        EXPECT(0xc6, gbc.readMem(0xaf32));
        // D0 02B8
        gbc.setState(0x17d9, 0x1639, 0x7930, 0xe907, 0x1496, 0x8dd0, 0x1, 0x0);
        gbc.writeMem(0x17d9, { 0xd0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1639, gbc.sp());
        EXPECT(0x17da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02B9
        gbc.setState(0x8ba7, 0xc30a, 0x5d00, 0x9982, 0x6454, 0xdc58, 0x1, 0x1);
        gbc.writeMem(0x8ba7, { 0xd0 });
        gbc.writeMem(0xc30a, { 0x10, 0x5c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc30c, gbc.sp());
        EXPECT(0x5c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8ba7));
        EXPECT(0x10, gbc.readMem(0xc30a));
        EXPECT(0x5c, gbc.readMem(0xc30b));
        // D0 02BA
        gbc.setState(0x5429, 0x6c8, 0x5160, 0xa8b3, 0x4e81, 0xb9bd, 0x1, 0x0);
        gbc.writeMem(0x6c8, { 0x9, 0x72 });
        gbc.writeMem(0x5429, { 0xd0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6ca, gbc.sp());
        EXPECT(0x7209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02BB
        gbc.setState(0x8949, 0x8d2f, 0xf800, 0x2a53, 0x344f, 0x1c8e, 0x1, 0x0);
        gbc.writeMem(0x8949, { 0xd0 });
        gbc.writeMem(0x8d2f, { 0x23, 0xb9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8d31, gbc.sp());
        EXPECT(0xb923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8949));
        EXPECT(0x23, gbc.readMem(0x8d2f));
        EXPECT(0xb9, gbc.readMem(0x8d30));
        // D0 02BC
        gbc.setState(0x150a, 0xf44b, 0x8610, 0x39d, 0x238c, 0x2651, 0x0, 0x0);
        gbc.writeMem(0x150a, { 0xd0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf44b, gbc.sp());
        EXPECT(0x150b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02BD
        gbc.setState(0x457a, 0x6fea, 0x4f20, 0x9c91, 0xdcbe, 0xdf39, 0x1, 0x0);
        gbc.writeMem(0x457a, { 0xd0 });
        gbc.writeMem(0x6fea, { 0x51, 0x45 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6fec, gbc.sp());
        EXPECT(0x4551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02BE
        gbc.setState(0x2ffd, 0xd5da, 0x1880, 0x842b, 0xf8c0, 0x3529, 0x1, 0x0);
        gbc.writeMem(0x2ffd, { 0xd0 });
        gbc.writeMem(0xd5da, { 0x54, 0x7c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd5dc, gbc.sp());
        EXPECT(0x7c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xd5da));
        EXPECT(0x7c, gbc.readMem(0xd5db));
        // D0 02BF
        gbc.setState(0xe7fa, 0xf808, 0xefe0, 0xb1cb, 0x8341, 0xeb70, 0x0, 0x1);
        gbc.writeMem(0xe7fa, { 0xd0 });
        gbc.writeMem(0xf808, { 0x3c, 0xc9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf80a, gbc.sp());
        EXPECT(0xc93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe7fa));
        EXPECT(0x3c, gbc.readMem(0xf808));
        EXPECT(0xc9, gbc.readMem(0xf809));
        // D0 02C0
        gbc.setState(0x914a, 0xa8aa, 0x5660, 0xe7f0, 0xa419, 0x8397, 0x1, 0x0);
        gbc.writeMem(0x914a, { 0xd0 });
        gbc.writeMem(0xa8aa, { 0x21, 0xbc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa8ac, gbc.sp());
        EXPECT(0xbc21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x914a));
        EXPECT(0x21, gbc.readMem(0xa8aa));
        EXPECT(0xbc, gbc.readMem(0xa8ab));
        // D0 02C1
        gbc.setState(0x31b, 0x8ebc, 0xb10, 0xfe10, 0xcb4d, 0xffd, 0x1, 0x1);
        gbc.writeMem(0x31b, { 0xd0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8ebc, gbc.sp());
        EXPECT(0x31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02C2
        gbc.setState(0x9d5b, 0xd031, 0xd510, 0xf557, 0x170e, 0x8401, 0x1, 0x0);
        gbc.writeMem(0x9d5b, { 0xd0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd031, gbc.sp());
        EXPECT(0x9d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9d5b));
        // D0 02C3
        gbc.setState(0x3bb2, 0x34ff, 0x94a0, 0xa5d9, 0x90d1, 0x38a, 0x1, 0x0);
        gbc.writeMem(0x34ff, { 0xda, 0x33 });
        gbc.writeMem(0x3bb2, { 0xd0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3501, gbc.sp());
        EXPECT(0x33da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02C4
        gbc.setState(0x239c, 0xa010, 0xf7a0, 0xb1eb, 0x5634, 0xd20e, 0x1, 0x0);
        gbc.writeMem(0x239c, { 0xd0 });
        gbc.writeMem(0xa010, { 0x68, 0x9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa012, gbc.sp());
        EXPECT(0x968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa010));
        EXPECT(0x9, gbc.readMem(0xa011));
        // D0 02C5
        gbc.setState(0x1c3e, 0x19d8, 0xc710, 0x975c, 0xd4a9, 0x58e3, 0x0, 0x1);
        gbc.writeMem(0x1c3e, { 0xd0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x19d8, gbc.sp());
        EXPECT(0x1c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02C7
        gbc.setState(0x64a5, 0x4eb2, 0x17b0, 0x8949, 0x1b0f, 0xf2eb, 0x1, 0x0);
        gbc.writeMem(0x64a5, { 0xd0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4eb2, gbc.sp());
        EXPECT(0x64a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02C8
        gbc.setState(0xb14d, 0x8eb7, 0x59a0, 0x789a, 0xdf7b, 0x1d91, 0x1, 0x1);
        gbc.writeMem(0x8eb7, { 0xf5, 0x8d });
        gbc.writeMem(0xb14d, { 0xd0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8eb9, gbc.sp());
        EXPECT(0x8df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8eb7));
        EXPECT(0x8d, gbc.readMem(0x8eb8));
        EXPECT(0xd0, gbc.readMem(0xb14d));
        // D0 02C9
        gbc.setState(0x3cb7, 0xde4e, 0x1ef0, 0x93c9, 0x7f67, 0x2c50, 0x1, 0x1);
        gbc.writeMem(0x3cb7, { 0xd0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xde4e, gbc.sp());
        EXPECT(0x3cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02CA
        gbc.setState(0x53b0, 0x87e9, 0xb6a0, 0x2b05, 0xbc48, 0xc5e0, 0x1, 0x0);
        gbc.writeMem(0x53b0, { 0xd0 });
        gbc.writeMem(0x87e9, { 0xf7, 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x87eb, gbc.sp());
        EXPECT(0x5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x87e9));
        EXPECT(0x5, gbc.readMem(0x87ea));
        // D0 02CB
        gbc.setState(0x6dc3, 0xe782, 0x6660, 0x453c, 0x59ac, 0xb476, 0x1, 0x0);
        gbc.writeMem(0x6dc3, { 0xd0 });
        gbc.writeMem(0xe782, { 0x1e, 0xa9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe784, gbc.sp());
        EXPECT(0xa91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xe782));
        EXPECT(0xa9, gbc.readMem(0xe783));
        // D0 02CC
        gbc.setState(0x64a4, 0xcd3c, 0x5870, 0xff93, 0x5b47, 0xdd3c, 0x1, 0x1);
        gbc.writeMem(0x64a4, { 0xd0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcd3c, gbc.sp());
        EXPECT(0x64a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02CD
        gbc.setState(0x45b8, 0xa9c4, 0xcb0, 0x96ce, 0xdfa8, 0x7a9d, 0x1, 0x1);
        gbc.writeMem(0x45b8, { 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa9c4, gbc.sp());
        EXPECT(0x45b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02CE
        gbc.setState(0xc344, 0xa4c1, 0xbea0, 0x500b, 0x9696, 0xf1af, 0x1, 0x1);
        gbc.writeMem(0xa4c1, { 0x30, 0xe5 });
        gbc.writeMem(0xc344, { 0xd0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa4c3, gbc.sp());
        EXPECT(0xe530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xa4c1));
        EXPECT(0xe5, gbc.readMem(0xa4c2));
        EXPECT(0xd0, gbc.readMem(0xc344));
        // D0 02CF
        gbc.setState(0x97f, 0x7803, 0xfca0, 0xaff8, 0xc830, 0xedda, 0x0, 0x1);
        gbc.writeMem(0x97f, { 0xd0 });
        gbc.writeMem(0x7803, { 0x30, 0x4e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7805, gbc.sp());
        EXPECT(0x4e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02D1
        gbc.setState(0x8be4, 0x5c2f, 0xd840, 0x968a, 0x8fbd, 0x3d3b, 0x1, 0x1);
        gbc.writeMem(0x5c2f, { 0x95, 0x4b });
        gbc.writeMem(0x8be4, { 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5c31, gbc.sp());
        EXPECT(0x4b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8be4));
        // D0 02D2
        gbc.setState(0x3472, 0x3fa5, 0x21f0, 0xe909, 0xc8dc, 0xd7a5, 0x0, 0x0);
        gbc.writeMem(0x3472, { 0xd0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3fa5, gbc.sp());
        EXPECT(0x3473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02D3
        gbc.setState(0xeff9, 0x5114, 0x31d0, 0xb4b1, 0x182f, 0xf8f0, 0x1, 0x0);
        gbc.writeMem(0xeff9, { 0xd0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5114, gbc.sp());
        EXPECT(0xeffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xeff9));
        // D0 02D4
        gbc.setState(0x433f, 0x4322, 0xabd0, 0xac9c, 0x240a, 0xb2fe, 0x1, 0x1);
        gbc.writeMem(0x433f, { 0xd0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4322, gbc.sp());
        EXPECT(0x4340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02D5
        gbc.setState(0x3f95, 0xc57d, 0x6e00, 0xd9f5, 0x1f1b, 0x92a8, 0x1, 0x1);
        gbc.writeMem(0x3f95, { 0xd0 });
        gbc.writeMem(0xc57d, { 0x20, 0xde });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc57f, gbc.sp());
        EXPECT(0xde20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc57d));
        EXPECT(0xde, gbc.readMem(0xc57e));
        // D0 02D6
        gbc.setState(0x7524, 0xb8db, 0xb170, 0x9951, 0x3594, 0xdc3e, 0x0, 0x0);
        gbc.writeMem(0x7524, { 0xd0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb8db, gbc.sp());
        EXPECT(0x7525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02D7
        gbc.setState(0x2ba7, 0xfea5, 0x2fc0, 0xf478, 0x6ae, 0xf7, 0x0, 0x1);
        gbc.writeMem(0x2ba7, { 0xd0 });
        gbc.writeMem(0xfea5, { 0xd, 0x38 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfea7, gbc.sp());
        EXPECT(0x380d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xfea5));
        EXPECT(0x38, gbc.readMem(0xfea6));
        // D0 02D8
        gbc.setState(0xc8b5, 0xde, 0xf270, 0xc571, 0xe9d9, 0x6ea8, 0x0, 0x0);
        gbc.writeMem(0xc8b5, { 0xd0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xde, gbc.sp());
        EXPECT(0xc8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc8b5));
        // D0 02D9
        gbc.setState(0xca67, 0x1ff6, 0xee00, 0x3c1a, 0xe312, 0xbba8, 0x0, 0x0);
        gbc.writeMem(0x1ff6, { 0x35, 0x84 });
        gbc.writeMem(0xca67, { 0xd0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1ff8, gbc.sp());
        EXPECT(0x8435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xca67));
        // D0 02DA
        gbc.setState(0x2a82, 0x6155, 0xc360, 0xcca1, 0x376e, 0xdd2d, 0x1, 0x1);
        gbc.writeMem(0x2a82, { 0xd0 });
        gbc.writeMem(0x6155, { 0x8e, 0x96 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6157, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02DB
        gbc.setState(0xb4d, 0x4c2e, 0x7640, 0x14c0, 0xfd79, 0x253d, 0x0, 0x0);
        gbc.writeMem(0xb4d, { 0xd0 });
        gbc.writeMem(0x4c2e, { 0x18, 0xa1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4c30, gbc.sp());
        EXPECT(0xa118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02DC
        gbc.setState(0xe070, 0xcefb, 0x1960, 0x6807, 0x6972, 0xe03d, 0x0, 0x1);
        gbc.writeMem(0xcefb, { 0x3a, 0x4 });
        gbc.writeMem(0xe070, { 0xd0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcefd, gbc.sp());
        EXPECT(0x43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xcefb));
        EXPECT(0x4, gbc.readMem(0xcefc));
        EXPECT(0xd0, gbc.readMem(0xe070));
        // D0 02DD
        gbc.setState(0x6229, 0xe13b, 0xc0, 0x93e3, 0x3101, 0x9e8, 0x1, 0x1);
        gbc.writeMem(0x6229, { 0xd0 });
        gbc.writeMem(0xe13b, { 0xc8, 0x46 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe13d, gbc.sp());
        EXPECT(0x46c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe13b));
        EXPECT(0x46, gbc.readMem(0xe13c));
        // D0 02DE
        gbc.setState(0x8ad, 0xf30c, 0x2b70, 0x12e8, 0x8c83, 0x1a8, 0x0, 0x1);
        gbc.writeMem(0x8ad, { 0xd0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf30c, gbc.sp());
        EXPECT(0x8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02DF
        gbc.setState(0xbbca, 0x9189, 0x5380, 0x9812, 0x367d, 0x7f0e, 0x1, 0x1);
        gbc.writeMem(0x9189, { 0xb3, 0x58 });
        gbc.writeMem(0xbbca, { 0xd0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x918b, gbc.sp());
        EXPECT(0x58b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9189));
        EXPECT(0x58, gbc.readMem(0x918a));
        EXPECT(0xd0, gbc.readMem(0xbbca));
        // D0 02E0
        gbc.setState(0x56b3, 0x5e1, 0x6740, 0xe86, 0x637f, 0xb314, 0x0, 0x0);
        gbc.writeMem(0x5e1, { 0xf5, 0xe1 });
        gbc.writeMem(0x56b3, { 0xd0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5e3, gbc.sp());
        EXPECT(0xe1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02E1
        gbc.setState(0xebc, 0x2e63, 0x6670, 0xfcdc, 0x1118, 0x127e, 0x0, 0x1);
        gbc.writeMem(0xebc, { 0xd0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2e63, gbc.sp());
        EXPECT(0xebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02E2
        gbc.setState(0xad9d, 0x6d96, 0xc100, 0xbf2c, 0x766a, 0xdefb, 0x0, 0x0);
        gbc.writeMem(0x6d96, { 0xad, 0x8a });
        gbc.writeMem(0xad9d, { 0xd0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6d98, gbc.sp());
        EXPECT(0x8aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xad9d));
        // D0 02E3
        gbc.setState(0x10f, 0x7c04, 0xb500, 0x4b90, 0x2265, 0x2859, 0x0, 0x1);
        gbc.writeMem(0x10f, { 0xd0 });
        gbc.writeMem(0x7c04, { 0x49, 0xa });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7c06, gbc.sp());
        EXPECT(0xa49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02E4
        gbc.setState(0xb090, 0x1217, 0xf7c0, 0xc2f6, 0x8613, 0xb2d2, 0x0, 0x1);
        gbc.writeMem(0x1217, { 0xef, 0x2e });
        gbc.writeMem(0xb090, { 0xd0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1219, gbc.sp());
        EXPECT(0x2eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb090));
        // D0 02E5
        gbc.setState(0x1151, 0x1ec4, 0xa220, 0x9316, 0x9f70, 0x467d, 0x1, 0x1);
        gbc.writeMem(0x1151, { 0xd0 });
        gbc.writeMem(0x1ec4, { 0x1d, 0x94 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1ec6, gbc.sp());
        EXPECT(0x941d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02E6
        gbc.setState(0x9087, 0xf23d, 0xcc30, 0xaf9, 0xd675, 0xd19b, 0x1, 0x0);
        gbc.writeMem(0x9087, { 0xd0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf23d, gbc.sp());
        EXPECT(0x9088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9087));
        // D0 02E7
        gbc.setState(0xfd3, 0x501e, 0x9670, 0x5666, 0xa44f, 0xa8c4, 0x0, 0x0);
        gbc.writeMem(0xfd3, { 0xd0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x501e, gbc.sp());
        EXPECT(0xfd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02E8
        gbc.setState(0x1655, 0x47c5, 0xadd0, 0x5efb, 0x5e4e, 0x87ed, 0x0, 0x1);
        gbc.writeMem(0x1655, { 0xd0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x47c5, gbc.sp());
        EXPECT(0x1656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02E9
        gbc.setState(0xc750, 0x4fe3, 0x8d20, 0xb992, 0x6179, 0x2433, 0x0, 0x1);
        gbc.writeMem(0x4fe3, { 0x2c, 0x4c });
        gbc.writeMem(0xc750, { 0xd0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4fe5, gbc.sp());
        EXPECT(0x4c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc750));
        // D0 02EA
        gbc.setState(0x893a, 0xc4d2, 0xd140, 0xcd0b, 0x4adc, 0x7abd, 0x1, 0x0);
        gbc.writeMem(0x893a, { 0xd0 });
        gbc.writeMem(0xc4d2, { 0x46, 0xc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc4d4, gbc.sp());
        EXPECT(0xc46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x893a));
        EXPECT(0x46, gbc.readMem(0xc4d2));
        EXPECT(0xc, gbc.readMem(0xc4d3));
        // D0 02EB
        gbc.setState(0x708a, 0x2aa5, 0x1f10, 0xf33c, 0x364d, 0xf9fd, 0x1, 0x0);
        gbc.writeMem(0x708a, { 0xd0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2aa5, gbc.sp());
        EXPECT(0x708b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02EC
        gbc.setState(0xb1e6, 0xec57, 0x5260, 0xd2f7, 0x8a96, 0xa713, 0x0, 0x0);
        gbc.writeMem(0xb1e6, { 0xd0 });
        gbc.writeMem(0xec57, { 0xa8, 0x2a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xec59, gbc.sp());
        EXPECT(0x2aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb1e6));
        EXPECT(0xa8, gbc.readMem(0xec57));
        EXPECT(0x2a, gbc.readMem(0xec58));
        // D0 02ED
        gbc.setState(0x7c42, 0x6751, 0x11a0, 0xbd21, 0x1770, 0x85db, 0x0, 0x0);
        gbc.writeMem(0x6751, { 0xd2, 0x14 });
        gbc.writeMem(0x7c42, { 0xd0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6753, gbc.sp());
        EXPECT(0x14d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02EE
        gbc.setState(0xc20d, 0xb5aa, 0x6e10, 0x146b, 0xd0dd, 0x1b25, 0x1, 0x0);
        gbc.writeMem(0xc20d, { 0xd0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb5aa, gbc.sp());
        EXPECT(0xc20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc20d));
        // D0 02EF
        gbc.setState(0xa81b, 0x6a8e, 0x8ed0, 0xfd13, 0x72da, 0x363, 0x1, 0x1);
        gbc.writeMem(0xa81b, { 0xd0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6a8e, gbc.sp());
        EXPECT(0xa81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa81b));
        // D0 02F0
        gbc.setState(0x4470, 0xccd8, 0xf000, 0xfe1b, 0x8f47, 0xbcba, 0x1, 0x0);
        gbc.writeMem(0x4470, { 0xd0 });
        gbc.writeMem(0xccd8, { 0xbb, 0x4e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xccda, gbc.sp());
        EXPECT(0x4ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xccd8));
        EXPECT(0x4e, gbc.readMem(0xccd9));
        // D0 02F1
        gbc.setState(0x7f48, 0x4604, 0x6300, 0x6b5e, 0xef0b, 0x52a6, 0x1, 0x0);
        gbc.writeMem(0x4604, { 0x41, 0xf7 });
        gbc.writeMem(0x7f48, { 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4606, gbc.sp());
        EXPECT(0xf741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02F2
        gbc.setState(0x1bda, 0xa75, 0xb500, 0xcab9, 0xdbc1, 0x1dc8, 0x0, 0x0);
        gbc.writeMem(0xa75, { 0xba, 0x28 });
        gbc.writeMem(0x1bda, { 0xd0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa77, gbc.sp());
        EXPECT(0x28ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 02F5
        gbc.setState(0x97c2, 0x4c18, 0xec40, 0xcfea, 0xe08f, 0x68c, 0x0, 0x1);
        gbc.writeMem(0x4c18, { 0xea, 0xcc });
        gbc.writeMem(0x97c2, { 0xd0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4c1a, gbc.sp());
        EXPECT(0xccea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x97c2));
        // D0 02F6
        gbc.setState(0x57ff, 0x8248, 0x22e0, 0x17f4, 0x36cd, 0x9de0, 0x0, 0x0);
        gbc.writeMem(0x57ff, { 0xd0 });
        gbc.writeMem(0x8248, { 0x4e, 0x9b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x824a, gbc.sp());
        EXPECT(0x9b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8248));
        EXPECT(0x9b, gbc.readMem(0x8249));
        // D0 02F7
        gbc.setState(0x4822, 0xaab6, 0xd2f0, 0xf06d, 0xe724, 0xd63b, 0x0, 0x1);
        gbc.writeMem(0x4822, { 0xd0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xaab6, gbc.sp());
        EXPECT(0x4823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02F8
        gbc.setState(0x66d8, 0x2578, 0xe130, 0xc865, 0xb2c5, 0xba4d, 0x1, 0x1);
        gbc.writeMem(0x66d8, { 0xd0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2578, gbc.sp());
        EXPECT(0x66d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02F9
        gbc.setState(0x6e8c, 0xfdb7, 0x5530, 0xa96a, 0xa028, 0x533c, 0x1, 0x0);
        gbc.writeMem(0x6e8c, { 0xd0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfdb7, gbc.sp());
        EXPECT(0x6e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 02FA
        gbc.setState(0x92df, 0x91a6, 0x2710, 0x7733, 0x7d6c, 0x6a37, 0x1, 0x0);
        gbc.writeMem(0x92df, { 0xd0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x91a6, gbc.sp());
        EXPECT(0x92e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x92df));
        // D0 02FB
        gbc.setState(0xb7b1, 0xc83a, 0xf440, 0x8056, 0x66f9, 0x3d73, 0x1, 0x0);
        gbc.writeMem(0xb7b1, { 0xd0 });
        gbc.writeMem(0xc83a, { 0xc, 0x8c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc83c, gbc.sp());
        EXPECT(0x8c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb7b1));
        EXPECT(0xc, gbc.readMem(0xc83a));
        EXPECT(0x8c, gbc.readMem(0xc83b));
        // D0 02FC
        gbc.setState(0xdb85, 0xc9ac, 0xc020, 0x647b, 0xefc2, 0xc4ab, 0x1, 0x0);
        gbc.writeMem(0xc9ac, { 0x7a, 0x30 });
        gbc.writeMem(0xdb85, { 0xd0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc9ae, gbc.sp());
        EXPECT(0x307a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc9ac));
        EXPECT(0x30, gbc.readMem(0xc9ad));
        EXPECT(0xd0, gbc.readMem(0xdb85));
        // D0 02FD
        gbc.setState(0xe63d, 0xf92e, 0x7ed0, 0x211c, 0x53c7, 0xecfe, 0x0, 0x0);
        gbc.writeMem(0xe63d, { 0xd0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf92e, gbc.sp());
        EXPECT(0xe63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe63d));
        // D0 02FE
        gbc.setState(0x5ee3, 0x845c, 0x9560, 0xb5f4, 0x1c0c, 0x1ffa, 0x0, 0x1);
        gbc.writeMem(0x5ee3, { 0xd0 });
        gbc.writeMem(0x845c, { 0x7, 0x59 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x845e, gbc.sp());
        EXPECT(0x5907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x845c));
        EXPECT(0x59, gbc.readMem(0x845d));
        // D0 02FF
        gbc.setState(0x679c, 0x2270, 0x1280, 0xf8f8, 0xb5ad, 0x433, 0x1, 0x1);
        gbc.writeMem(0x2270, { 0xbc, 0xa3 });
        gbc.writeMem(0x679c, { 0xd0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2272, gbc.sp());
        EXPECT(0xa3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0300
        gbc.setState(0x844f, 0x11c1, 0xb750, 0x3a38, 0x6d4d, 0xd5cb, 0x0, 0x1);
        gbc.writeMem(0x844f, { 0xd0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x11c1, gbc.sp());
        EXPECT(0x8450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x844f));
        // D0 0301
        gbc.setState(0x202d, 0x5f8e, 0xc070, 0x9c16, 0x896f, 0xe2a9, 0x0, 0x0);
        gbc.writeMem(0x202d, { 0xd0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5f8e, gbc.sp());
        EXPECT(0x202e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0302
        gbc.setState(0xd793, 0x702, 0x8f70, 0x7cdd, 0x10a, 0x705, 0x1, 0x1);
        gbc.writeMem(0xd793, { 0xd0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x702, gbc.sp());
        EXPECT(0xd794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd793));
        // D0 0303
        gbc.setState(0x1465, 0x23be, 0x56c0, 0x644f, 0xd2b4, 0xbf35, 0x0, 0x1);
        gbc.writeMem(0x1465, { 0xd0 });
        gbc.writeMem(0x23be, { 0x17, 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x23c0, gbc.sp());
        EXPECT(0x6417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0304
        gbc.setState(0xea42, 0x2efa, 0x8f50, 0x7f14, 0x9edb, 0x5819, 0x0, 0x0);
        gbc.writeMem(0xea42, { 0xd0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2efa, gbc.sp());
        EXPECT(0xea43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xea42));
        // D0 0305
        gbc.setState(0x7e71, 0xf781, 0x5f0, 0x2607, 0x9d9b, 0xa641, 0x0, 0x0);
        gbc.writeMem(0x7e71, { 0xd0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf781, gbc.sp());
        EXPECT(0x7e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0306
        gbc.setState(0x828e, 0x8013, 0x5570, 0xf3b, 0x68a3, 0x76b1, 0x0, 0x1);
        gbc.writeMem(0x828e, { 0xd0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8013, gbc.sp());
        EXPECT(0x828f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x828e));
        // D0 0307
        gbc.setState(0xc9bb, 0x3682, 0x88d0, 0x996d, 0x738, 0x73d, 0x1, 0x1);
        gbc.writeMem(0xc9bb, { 0xd0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3682, gbc.sp());
        EXPECT(0xc9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc9bb));
        // D0 0308
        gbc.setState(0x535a, 0xca89, 0x9aa0, 0xea96, 0x38c4, 0x7849, 0x0, 0x1);
        gbc.writeMem(0x535a, { 0xd0 });
        gbc.writeMem(0xca89, { 0x40, 0x9b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xca8b, gbc.sp());
        EXPECT(0x9b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xca89));
        EXPECT(0x9b, gbc.readMem(0xca8a));
        // D0 0309
        gbc.setState(0x15c8, 0xd62a, 0x3500, 0xea65, 0x7c61, 0x96da, 0x0, 0x1);
        gbc.writeMem(0x15c8, { 0xd0 });
        gbc.writeMem(0xd62a, { 0x97, 0xfa });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd62c, gbc.sp());
        EXPECT(0xfa97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd62a));
        EXPECT(0xfa, gbc.readMem(0xd62b));
        // D0 030A
        gbc.setState(0xc746, 0x987b, 0xed70, 0xc4f6, 0xb2e8, 0x5951, 0x1, 0x1);
        gbc.writeMem(0xc746, { 0xd0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x987b, gbc.sp());
        EXPECT(0xc747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc746));
        // D0 030B
        gbc.setState(0xe2c0, 0x345a, 0x8b0, 0x1d62, 0xacbd, 0x6da, 0x0, 0x0);
        gbc.writeMem(0xe2c0, { 0xd0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x345a, gbc.sp());
        EXPECT(0xe2c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe2c0));
        // D0 030C
        gbc.setState(0xbd09, 0x84f8, 0x2330, 0xbff0, 0x8fd9, 0x139f, 0x1, 0x0);
        gbc.writeMem(0xbd09, { 0xd0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x84f8, gbc.sp());
        EXPECT(0xbd0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbd09));
        // D0 030D
        gbc.setState(0x516a, 0x9cc2, 0x1420, 0x628e, 0x2d9d, 0x2839, 0x1, 0x0);
        gbc.writeMem(0x516a, { 0xd0 });
        gbc.writeMem(0x9cc2, { 0x9d, 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9cc4, gbc.sp());
        EXPECT(0xc99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9cc2));
        EXPECT(0xc9, gbc.readMem(0x9cc3));
        // D0 030E
        gbc.setState(0x5715, 0x7389, 0x4e90, 0x8a40, 0x533e, 0x4c13, 0x0, 0x1);
        gbc.writeMem(0x5715, { 0xd0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7389, gbc.sp());
        EXPECT(0x5716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 030F
        gbc.setState(0xa685, 0xd36e, 0xccd0, 0x7387, 0x14f0, 0xaadb, 0x0, 0x0);
        gbc.writeMem(0xa685, { 0xd0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd36e, gbc.sp());
        EXPECT(0xa686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa685));
        // D0 0310
        gbc.setState(0x10e2, 0xb7b2, 0xf300, 0x71d8, 0xa885, 0x5cd6, 0x0, 0x0);
        gbc.writeMem(0x10e2, { 0xd0 });
        gbc.writeMem(0xb7b2, { 0xb, 0x2d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb7b4, gbc.sp());
        EXPECT(0x2d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb7b2));
        EXPECT(0x2d, gbc.readMem(0xb7b3));
        // D0 0312
        gbc.setState(0x6b1b, 0x4ac6, 0xfe80, 0xb4ad, 0xe8e6, 0xd687, 0x1, 0x0);
        gbc.writeMem(0x4ac6, { 0xe9, 0x6b });
        gbc.writeMem(0x6b1b, { 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4ac8, gbc.sp());
        EXPECT(0x6be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0313
        gbc.setState(0x6a7e, 0x6be4, 0xcfa0, 0x9c07, 0xe366, 0xca8f, 0x1, 0x0);
        gbc.writeMem(0x6a7e, { 0xd0 });
        gbc.writeMem(0x6be4, { 0x52, 0xfe });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6be6, gbc.sp());
        EXPECT(0xfe52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0314
        gbc.setState(0x5f75, 0x9b22, 0x7f0, 0xd17a, 0x52c0, 0x38fa, 0x0, 0x0);
        gbc.writeMem(0x5f75, { 0xd0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9b22, gbc.sp());
        EXPECT(0x5f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0316
        gbc.setState(0xa22c, 0xd6bd, 0x9570, 0x6c7b, 0x8283, 0x4b49, 0x1, 0x0);
        gbc.writeMem(0xa22c, { 0xd0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd6bd, gbc.sp());
        EXPECT(0xa22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa22c));
        // D0 0317
        gbc.setState(0xc2db, 0xf05b, 0xed80, 0x3b85, 0x4aad, 0x9d59, 0x1, 0x1);
        gbc.writeMem(0xc2db, { 0xd0 });
        gbc.writeMem(0xf05b, { 0xb2, 0x30 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf05d, gbc.sp());
        EXPECT(0x30b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc2db));
        EXPECT(0xb2, gbc.readMem(0xf05b));
        EXPECT(0x30, gbc.readMem(0xf05c));
        // D0 0318
        gbc.setState(0xa732, 0xa814, 0x6910, 0x2b89, 0xb853, 0x1139, 0x1, 0x0);
        gbc.writeMem(0xa732, { 0xd0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa814, gbc.sp());
        EXPECT(0xa733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa732));
        // D0 0319
        gbc.setState(0xa83d, 0xac62, 0xcc50, 0x883d, 0xa25f, 0x37b4, 0x0, 0x0);
        gbc.writeMem(0xa83d, { 0xd0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xac62, gbc.sp());
        EXPECT(0xa83e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa83d));
        // D0 031A
        gbc.setState(0x7694, 0x56a7, 0x7220, 0x85c7, 0x520e, 0x6995, 0x0, 0x1);
        gbc.writeMem(0x56a7, { 0xd8, 0xf5 });
        gbc.writeMem(0x7694, { 0xd0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x56a9, gbc.sp());
        EXPECT(0xf5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 031B
        gbc.setState(0x4d0a, 0xfa26, 0x9e40, 0x5006, 0xf87e, 0xee85, 0x0, 0x0);
        gbc.writeMem(0x4d0a, { 0xd0 });
        gbc.writeMem(0xfa26, { 0x8a, 0xa1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfa28, gbc.sp());
        EXPECT(0xa18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xfa26));
        EXPECT(0xa1, gbc.readMem(0xfa27));
        // D0 031C
        gbc.setState(0x316b, 0x23a6, 0x1a60, 0x7bf6, 0xc14d, 0x1b6a, 0x0, 0x0);
        gbc.writeMem(0x23a6, { 0x59, 0xea });
        gbc.writeMem(0x316b, { 0xd0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x23a8, gbc.sp());
        EXPECT(0xea59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 031D
        gbc.setState(0x6786, 0x68ca, 0xfb0, 0xb8a6, 0xe496, 0xa78, 0x0, 0x0);
        gbc.writeMem(0x6786, { 0xd0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x68ca, gbc.sp());
        EXPECT(0x6787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 031E
        gbc.setState(0x4522, 0x7884, 0xe000, 0xb939, 0xdf8, 0x3336, 0x0, 0x1);
        gbc.writeMem(0x4522, { 0xd0 });
        gbc.writeMem(0x7884, { 0x8, 0x4a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7886, gbc.sp());
        EXPECT(0x4a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 031F
        gbc.setState(0x5c08, 0x1c59, 0xbe00, 0xfc85, 0x5463, 0xf13b, 0x0, 0x1);
        gbc.writeMem(0x1c59, { 0x1d, 0x9e });
        gbc.writeMem(0x5c08, { 0xd0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1c5b, gbc.sp());
        EXPECT(0x9e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0320
        gbc.setState(0x26eb, 0xf790, 0x41d0, 0x1d7c, 0x338c, 0xa6e8, 0x0, 0x1);
        gbc.writeMem(0x26eb, { 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf790, gbc.sp());
        EXPECT(0x26ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0321
        gbc.setState(0x3bc1, 0x5661, 0xf170, 0xa8b3, 0x9ab4, 0x6c39, 0x1, 0x0);
        gbc.writeMem(0x3bc1, { 0xd0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5661, gbc.sp());
        EXPECT(0x3bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0322
        gbc.setState(0x45eb, 0x17dd, 0xbaa0, 0x113, 0xad40, 0xc9c7, 0x0, 0x0);
        gbc.writeMem(0x17dd, { 0x1e, 0xd3 });
        gbc.writeMem(0x45eb, { 0xd0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0xd31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0323
        gbc.setState(0xc57a, 0x5070, 0xb6e0, 0x45d1, 0xed76, 0xcdaf, 0x1, 0x0);
        gbc.writeMem(0x5070, { 0x64, 0x73 });
        gbc.writeMem(0xc57a, { 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5072, gbc.sp());
        EXPECT(0x7364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc57a));
        // D0 0324
        gbc.setState(0x5d72, 0xc2fc, 0x8f60, 0x6e63, 0x25a5, 0x495b, 0x0, 0x0);
        gbc.writeMem(0x5d72, { 0xd0 });
        gbc.writeMem(0xc2fc, { 0xb2, 0xdb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc2fe, gbc.sp());
        EXPECT(0xdbb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc2fc));
        EXPECT(0xdb, gbc.readMem(0xc2fd));
        // D0 0325
        gbc.setState(0x755a, 0x9606, 0x1340, 0x46ee, 0x76ca, 0x56, 0x1, 0x1);
        gbc.writeMem(0x755a, { 0xd0 });
        gbc.writeMem(0x9606, { 0x84, 0x2a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9608, gbc.sp());
        EXPECT(0x2a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x9606));
        EXPECT(0x2a, gbc.readMem(0x9607));
        // D0 0326
        gbc.setState(0xcd12, 0x67b5, 0xd7e0, 0x7def, 0x6ba, 0x2a94, 0x0, 0x0);
        gbc.writeMem(0x67b5, { 0x88, 0xba });
        gbc.writeMem(0xcd12, { 0xd0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x67b7, gbc.sp());
        EXPECT(0xba88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcd12));
        // D0 0328
        gbc.setState(0xb519, 0x40e6, 0x8a80, 0x241b, 0x76f8, 0x3271, 0x1, 0x0);
        gbc.writeMem(0x40e6, { 0x80, 0x6a });
        gbc.writeMem(0xb519, { 0xd0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x40e8, gbc.sp());
        EXPECT(0x6a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb519));
        // D0 0329
        gbc.setState(0x9ca6, 0xf949, 0x59e0, 0xb742, 0xc17f, 0x885a, 0x1, 0x1);
        gbc.writeMem(0x9ca6, { 0xd0 });
        gbc.writeMem(0xf949, { 0x92, 0x5c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0x5c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9ca6));
        EXPECT(0x92, gbc.readMem(0xf949));
        EXPECT(0x5c, gbc.readMem(0xf94a));
        // D0 032A
        gbc.setState(0x744, 0x1df2, 0x4920, 0xdaef, 0x83ff, 0xcc84, 0x0, 0x1);
        gbc.writeMem(0x744, { 0xd0 });
        gbc.writeMem(0x1df2, { 0xea, 0x30 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1df4, gbc.sp());
        EXPECT(0x30ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 032C
        gbc.setState(0x8f40, 0x114b, 0xdf20, 0x690f, 0x1456, 0xa74a, 0x1, 0x0);
        gbc.writeMem(0x114b, { 0x9a, 0xbe });
        gbc.writeMem(0x8f40, { 0xd0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x114d, gbc.sp());
        EXPECT(0xbe9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8f40));
        // D0 032D
        gbc.setState(0x3e5a, 0x9959, 0x6bb0, 0xa97d, 0xdf, 0x6a45, 0x0, 0x1);
        gbc.writeMem(0x3e5a, { 0xd0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9959, gbc.sp());
        EXPECT(0x3e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 032E
        gbc.setState(0xa21c, 0xe40a, 0x63e0, 0x6231, 0xd4f3, 0x1482, 0x1, 0x0);
        gbc.writeMem(0xa21c, { 0xd0 });
        gbc.writeMem(0xe40a, { 0xda, 0x4d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe40c, gbc.sp());
        EXPECT(0x4dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa21c));
        EXPECT(0xda, gbc.readMem(0xe40a));
        EXPECT(0x4d, gbc.readMem(0xe40b));
        // D0 032F
        gbc.setState(0xdd74, 0xc019, 0x67b0, 0x38a1, 0xde4a, 0xc77e, 0x0, 0x1);
        gbc.writeMem(0xdd74, { 0xd0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc019, gbc.sp());
        EXPECT(0xdd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdd74));
        // D0 0330
        gbc.setState(0x15aa, 0x6db1, 0x42d0, 0x3e1d, 0xc752, 0x6a90, 0x1, 0x0);
        gbc.writeMem(0x15aa, { 0xd0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6db1, gbc.sp());
        EXPECT(0x15ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0331
        gbc.setState(0x435c, 0x8a36, 0x6a20, 0xb9ec, 0x1cdc, 0xde78, 0x1, 0x1);
        gbc.writeMem(0x435c, { 0xd0 });
        gbc.writeMem(0x8a36, { 0x87, 0x83 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8a38, gbc.sp());
        EXPECT(0x8387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8a36));
        EXPECT(0x83, gbc.readMem(0x8a37));
        // D0 0332
        gbc.setState(0x590c, 0x518, 0xfa80, 0x8653, 0x18a7, 0xf2e4, 0x1, 0x1);
        gbc.writeMem(0x518, { 0xc4, 0x4d });
        gbc.writeMem(0x590c, { 0xd0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x51a, gbc.sp());
        EXPECT(0x4dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0333
        gbc.setState(0x4df6, 0xa1b9, 0x8660, 0xc2e, 0xa5a4, 0xf79f, 0x1, 0x0);
        gbc.writeMem(0x4df6, { 0xd0 });
        gbc.writeMem(0xa1b9, { 0x54, 0x1c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa1bb, gbc.sp());
        EXPECT(0x1c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xa1b9));
        EXPECT(0x1c, gbc.readMem(0xa1ba));
        // D0 0334
        gbc.setState(0xc43f, 0x82a4, 0x160, 0x989e, 0x58b8, 0xebdc, 0x1, 0x0);
        gbc.writeMem(0x82a4, { 0x7e, 0x10 });
        gbc.writeMem(0xc43f, { 0xd0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x82a6, gbc.sp());
        EXPECT(0x107e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x82a4));
        EXPECT(0x10, gbc.readMem(0x82a5));
        EXPECT(0xd0, gbc.readMem(0xc43f));
        // D0 0335
        gbc.setState(0x1582, 0xe21, 0x46d0, 0x1bce, 0x3a06, 0x18b0, 0x1, 0x0);
        gbc.writeMem(0x1582, { 0xd0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe21, gbc.sp());
        EXPECT(0x1583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0337
        gbc.setState(0x94e7, 0x1fda, 0x9400, 0xe951, 0x6013, 0xcdd3, 0x0, 0x0);
        gbc.writeMem(0x1fda, { 0x67, 0xd5 });
        gbc.writeMem(0x94e7, { 0xd0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1fdc, gbc.sp());
        EXPECT(0xd567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x94e7));
        // D0 0338
        gbc.setState(0xbf4a, 0x299e, 0x220, 0x7cbb, 0x2b3, 0xff6c, 0x0, 0x0);
        gbc.writeMem(0x299e, { 0xf5, 0x6e });
        gbc.writeMem(0xbf4a, { 0xd0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x29a0, gbc.sp());
        EXPECT(0x6ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbf4a));
        // D0 0339
        gbc.setState(0x1820, 0x2f21, 0x5df0, 0xcb39, 0x2f8b, 0xf9f0, 0x0, 0x0);
        gbc.writeMem(0x1820, { 0xd0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2f21, gbc.sp());
        EXPECT(0x1821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 033A
        gbc.setState(0x8dcb, 0x2d26, 0xe480, 0x3528, 0x6f92, 0xe5a0, 0x1, 0x0);
        gbc.writeMem(0x2d26, { 0x7a, 0x1b });
        gbc.writeMem(0x8dcb, { 0xd0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2d28, gbc.sp());
        EXPECT(0x1b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8dcb));
        // D0 033B
        gbc.setState(0x481a, 0x884d, 0x7e10, 0x3b15, 0x4704, 0x1cb4, 0x1, 0x1);
        gbc.writeMem(0x481a, { 0xd0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x884d, gbc.sp());
        EXPECT(0x481b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 033C
        gbc.setState(0x12fd, 0x150c, 0x3250, 0xc700, 0x770f, 0xa910, 0x0, 0x0);
        gbc.writeMem(0x12fd, { 0xd0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x150c, gbc.sp());
        EXPECT(0x12fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 033E
        gbc.setState(0x1cf, 0xd4ca, 0x6390, 0x67ea, 0x1175, 0x9f71, 0x1, 0x1);
        gbc.writeMem(0x1cf, { 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd4ca, gbc.sp());
        EXPECT(0x1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 033F
        gbc.setState(0xbbb4, 0xc72f, 0x4110, 0x497, 0xcd9b, 0x54b2, 0x1, 0x0);
        gbc.writeMem(0xbbb4, { 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc72f, gbc.sp());
        EXPECT(0xbbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbbb4));
        // D0 0340
        gbc.setState(0xa103, 0x2d9c, 0x7560, 0x4079, 0xfc0a, 0xab45, 0x0, 0x0);
        gbc.writeMem(0x2d9c, { 0xeb, 0xf0 });
        gbc.writeMem(0xa103, { 0xd0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2d9e, gbc.sp());
        EXPECT(0xf0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa103));
        // D0 0342
        gbc.setState(0x689d, 0x4445, 0x34c0, 0x7273, 0x9c52, 0x49c2, 0x1, 0x0);
        gbc.writeMem(0x4445, { 0x6e, 0xad });
        gbc.writeMem(0x689d, { 0xd0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4447, gbc.sp());
        EXPECT(0xad6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0343
        gbc.setState(0x4f39, 0xb726, 0x65b0, 0x701d, 0x6070, 0x4725, 0x1, 0x0);
        gbc.writeMem(0x4f39, { 0xd0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb726, gbc.sp());
        EXPECT(0x4f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0344
        gbc.setState(0x6aaf, 0xa600, 0xa830, 0x5e3e, 0xd15f, 0x6ffb, 0x0, 0x0);
        gbc.writeMem(0x6aaf, { 0xd0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa600, gbc.sp());
        EXPECT(0x6ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0346
        gbc.setState(0x4e76, 0x749, 0x1e40, 0xe02a, 0x77e1, 0x1f63, 0x0, 0x0);
        gbc.writeMem(0x749, { 0xc4, 0x35 });
        gbc.writeMem(0x4e76, { 0xd0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x74b, gbc.sp());
        EXPECT(0x35c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0347
        gbc.setState(0x49a6, 0xf8bf, 0x6280, 0x28fb, 0x8893, 0x1bd8, 0x1, 0x0);
        gbc.writeMem(0x49a6, { 0xd0 });
        gbc.writeMem(0xf8bf, { 0xdc, 0xd2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf8c1, gbc.sp());
        EXPECT(0xd2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xf8bf));
        EXPECT(0xd2, gbc.readMem(0xf8c0));
        // D0 0348
        gbc.setState(0x50fe, 0xcccd, 0x1510, 0x53dc, 0x626, 0xa1ad, 0x1, 0x0);
        gbc.writeMem(0x50fe, { 0xd0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcccd, gbc.sp());
        EXPECT(0x50ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0349
        gbc.setState(0x8f18, 0xaaa6, 0x53b0, 0xfbf4, 0x620e, 0x41d0, 0x0, 0x1);
        gbc.writeMem(0x8f18, { 0xd0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xaaa6, gbc.sp());
        EXPECT(0x8f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8f18));
        // D0 034A
        gbc.setState(0x6c06, 0x32c3, 0x7640, 0x7c49, 0x4834, 0x6456, 0x1, 0x0);
        gbc.writeMem(0x32c3, { 0x70, 0x58 });
        gbc.writeMem(0x6c06, { 0xd0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x32c5, gbc.sp());
        EXPECT(0x5870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 034C
        gbc.setState(0x3bb7, 0x9236, 0x1620, 0x75e1, 0x8c81, 0x6bab, 0x1, 0x0);
        gbc.writeMem(0x3bb7, { 0xd0 });
        gbc.writeMem(0x9236, { 0x4, 0x52 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9238, gbc.sp());
        EXPECT(0x5204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9236));
        EXPECT(0x52, gbc.readMem(0x9237));
        // D0 034D
        gbc.setState(0x35e8, 0x578c, 0x5730, 0x519d, 0xdc, 0x53a, 0x0, 0x1);
        gbc.writeMem(0x35e8, { 0xd0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x578c, gbc.sp());
        EXPECT(0x35e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 034E
        gbc.setState(0xbcc6, 0x5427, 0x9520, 0x647f, 0x3444, 0x1fb3, 0x1, 0x1);
        gbc.writeMem(0x5427, { 0x1f, 0xea });
        gbc.writeMem(0xbcc6, { 0xd0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5429, gbc.sp());
        EXPECT(0xea1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbcc6));
        // D0 034F
        gbc.setState(0xd648, 0xd8ff, 0xfed0, 0xe1c, 0x121a, 0x5ac0, 0x1, 0x0);
        gbc.writeMem(0xd648, { 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd8ff, gbc.sp());
        EXPECT(0xd649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd648));
        // D0 0350
        gbc.setState(0x2a50, 0x6087, 0xef10, 0x22fd, 0xb2d, 0xce24, 0x1, 0x1);
        gbc.writeMem(0x2a50, { 0xd0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6087, gbc.sp());
        EXPECT(0x2a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0351
        gbc.setState(0x2ab0, 0x4a35, 0xe540, 0xf0c3, 0x21dd, 0xfda0, 0x0, 0x1);
        gbc.writeMem(0x2ab0, { 0xd0 });
        gbc.writeMem(0x4a35, { 0x32, 0xef });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4a37, gbc.sp());
        EXPECT(0xef32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0352
        gbc.setState(0x4266, 0x128d, 0x42b0, 0xbf39, 0x3639, 0x4669, 0x1, 0x0);
        gbc.writeMem(0x4266, { 0xd0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x128d, gbc.sp());
        EXPECT(0x4267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0353
        gbc.setState(0x264, 0xf394, 0xb720, 0x5ba2, 0x36e5, 0x1e33, 0x0, 0x0);
        gbc.writeMem(0x264, { 0xd0 });
        gbc.writeMem(0xf394, { 0xa5, 0xc0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf396, gbc.sp());
        EXPECT(0xc0a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xf394));
        EXPECT(0xc0, gbc.readMem(0xf395));
        // D0 0354
        gbc.setState(0x9ed7, 0x7a08, 0x8ad0, 0x8b88, 0x1c4c, 0x816f, 0x1, 0x0);
        gbc.writeMem(0x9ed7, { 0xd0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7a08, gbc.sp());
        EXPECT(0x9ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9ed7));
        // D0 0355
        gbc.setState(0x739b, 0x1418, 0x2740, 0xd5b2, 0x7bd, 0xc09a, 0x1, 0x0);
        gbc.writeMem(0x1418, { 0xc, 0xcb });
        gbc.writeMem(0x739b, { 0xd0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x141a, gbc.sp());
        EXPECT(0xcb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0356
        gbc.setState(0xcd2b, 0xd143, 0xd5b0, 0x5e71, 0x29f3, 0x34be, 0x1, 0x0);
        gbc.writeMem(0xcd2b, { 0xd0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd143, gbc.sp());
        EXPECT(0xcd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcd2b));
        // D0 0357
        gbc.setState(0x27e3, 0xb02, 0x8240, 0xa18d, 0xe90c, 0x8123, 0x0, 0x0);
        gbc.writeMem(0xb02, { 0x9a, 0x5c });
        gbc.writeMem(0x27e3, { 0xd0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb04, gbc.sp());
        EXPECT(0x5c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0358
        gbc.setState(0xb9ca, 0xcd21, 0xa6c0, 0xe6d4, 0xb11b, 0x8a14, 0x1, 0x1);
        gbc.writeMem(0xb9ca, { 0xd0 });
        gbc.writeMem(0xcd21, { 0xb6, 0xaa });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcd23, gbc.sp());
        EXPECT(0xaab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb9ca));
        EXPECT(0xb6, gbc.readMem(0xcd21));
        EXPECT(0xaa, gbc.readMem(0xcd22));
        // D0 0359
        gbc.setState(0x511c, 0xb645, 0xee20, 0x7be0, 0x8e9, 0x1eb0, 0x0, 0x1);
        gbc.writeMem(0x511c, { 0xd0 });
        gbc.writeMem(0xb645, { 0x4e, 0x82 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb647, gbc.sp());
        EXPECT(0x824e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb645));
        EXPECT(0x82, gbc.readMem(0xb646));
        // D0 035A
        gbc.setState(0x4430, 0x67d6, 0xde50, 0x9d46, 0x8b7d, 0x5508, 0x1, 0x0);
        gbc.writeMem(0x4430, { 0xd0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x67d6, gbc.sp());
        EXPECT(0x4431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 035B
        gbc.setState(0xc523, 0x8986, 0x31c0, 0xbc8b, 0x884, 0x12ca, 0x1, 0x0);
        gbc.writeMem(0x8986, { 0xea, 0x2d });
        gbc.writeMem(0xc523, { 0xd0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8988, gbc.sp());
        EXPECT(0x2dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x8986));
        EXPECT(0x2d, gbc.readMem(0x8987));
        EXPECT(0xd0, gbc.readMem(0xc523));
        // D0 035C
        gbc.setState(0xc776, 0x75a7, 0x47c0, 0x3792, 0x1f00, 0xd3ee, 0x1, 0x1);
        gbc.writeMem(0x75a7, { 0xd9, 0xb6 });
        gbc.writeMem(0xc776, { 0xd0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x75a9, gbc.sp());
        EXPECT(0xb6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc776));
        // D0 035D
        gbc.setState(0x6bff, 0x625f, 0xfb50, 0xb5f2, 0xb54a, 0xdd52, 0x0, 0x1);
        gbc.writeMem(0x6bff, { 0xd0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x625f, gbc.sp());
        EXPECT(0x6c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 035E
        gbc.setState(0x9be1, 0x1288, 0xe780, 0xa13, 0x5076, 0x2e7, 0x1, 0x0);
        gbc.writeMem(0x1288, { 0x54, 0xa2 });
        gbc.writeMem(0x9be1, { 0xd0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x128a, gbc.sp());
        EXPECT(0xa254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9be1));
        // D0 035F
        gbc.setState(0x2909, 0x1221, 0x2000, 0x3494, 0x184e, 0x2c91, 0x0, 0x0);
        gbc.writeMem(0x1221, { 0x36, 0x6 });
        gbc.writeMem(0x2909, { 0xd0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1223, gbc.sp());
        EXPECT(0x636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0360
        gbc.setState(0x8276, 0x41e6, 0x7c70, 0x41cc, 0xf099, 0xf785, 0x0, 0x0);
        gbc.writeMem(0x8276, { 0xd0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x41e6, gbc.sp());
        EXPECT(0x8277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8276));
        // D0 0361
        gbc.setState(0xa8ae, 0x94e4, 0x1370, 0xa6ff, 0x7202, 0x4b4f, 0x0, 0x0);
        gbc.writeMem(0xa8ae, { 0xd0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x94e4, gbc.sp());
        EXPECT(0xa8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa8ae));
        // D0 0362
        gbc.setState(0xaec3, 0x2e3c, 0xe520, 0x965d, 0xfb21, 0x8763, 0x1, 0x0);
        gbc.writeMem(0x2e3c, { 0xa8, 0x43 });
        gbc.writeMem(0xaec3, { 0xd0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2e3e, gbc.sp());
        EXPECT(0x43a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xaec3));
        // D0 0363
        gbc.setState(0xbc74, 0xcbdd, 0x3ff0, 0x2972, 0xb5b0, 0x6078, 0x1, 0x0);
        gbc.writeMem(0xbc74, { 0xd0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcbdd, gbc.sp());
        EXPECT(0xbc75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbc74));
        // D0 0365
        gbc.setState(0x3e08, 0xb46d, 0xe000, 0x18fb, 0x8e0f, 0x43aa, 0x1, 0x0);
        gbc.writeMem(0x3e08, { 0xd0 });
        gbc.writeMem(0xb46d, { 0x4, 0x99 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb46f, gbc.sp());
        EXPECT(0x9904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb46d));
        EXPECT(0x99, gbc.readMem(0xb46e));
        // D0 0366
        gbc.setState(0x50a, 0xc42a, 0xfd70, 0x77c8, 0x8833, 0x1627, 0x0, 0x0);
        gbc.writeMem(0x50a, { 0xd0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc42a, gbc.sp());
        EXPECT(0x50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0367
        gbc.setState(0xa4fd, 0x5557, 0xa250, 0x3037, 0x428b, 0xf1bc, 0x0, 0x1);
        gbc.writeMem(0xa4fd, { 0xd0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5557, gbc.sp());
        EXPECT(0xa4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa4fd));
        // D0 0368
        gbc.setState(0x1a32, 0x7ba7, 0x3880, 0x4bf, 0x67a6, 0x9d43, 0x1, 0x1);
        gbc.writeMem(0x1a32, { 0xd0 });
        gbc.writeMem(0x7ba7, { 0x39, 0xe1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7ba9, gbc.sp());
        EXPECT(0xe139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0369
        gbc.setState(0x281b, 0x7349, 0xf60, 0xc146, 0x56be, 0x4b6f, 0x0, 0x1);
        gbc.writeMem(0x281b, { 0xd0 });
        gbc.writeMem(0x7349, { 0xff, 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x734b, gbc.sp());
        EXPECT(0xfff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 036A
        gbc.setState(0x83d3, 0x943, 0x3a90, 0xb60f, 0xaa2c, 0x3cbe, 0x1, 0x0);
        gbc.writeMem(0x83d3, { 0xd0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x943, gbc.sp());
        EXPECT(0x83d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x83d3));
        // D0 036B
        gbc.setState(0xbee2, 0x3777, 0x3160, 0x621c, 0xd345, 0x5e5e, 0x1, 0x0);
        gbc.writeMem(0x3777, { 0x3, 0x33 });
        gbc.writeMem(0xbee2, { 0xd0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3779, gbc.sp());
        EXPECT(0x3303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbee2));
        // D0 036C
        gbc.setState(0x9b60, 0x7ef3, 0xbe20, 0xb428, 0x17e8, 0x4902, 0x0, 0x0);
        gbc.writeMem(0x7ef3, { 0x94, 0x48 });
        gbc.writeMem(0x9b60, { 0xd0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7ef5, gbc.sp());
        EXPECT(0x4894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9b60));
        // D0 036D
        gbc.setState(0x2d24, 0xe9db, 0xb1a0, 0x4cc, 0xce4f, 0xe28e, 0x1, 0x0);
        gbc.writeMem(0x2d24, { 0xd0 });
        gbc.writeMem(0xe9db, { 0xd5, 0xf9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe9dd, gbc.sp());
        EXPECT(0xf9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xe9db));
        EXPECT(0xf9, gbc.readMem(0xe9dc));
        // D0 036E
        gbc.setState(0x82ba, 0x390d, 0xc950, 0xd0fb, 0x2047, 0xe32a, 0x0, 0x1);
        gbc.writeMem(0x82ba, { 0xd0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x390d, gbc.sp());
        EXPECT(0x82bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x82ba));
        // D0 036F
        gbc.setState(0x4cb3, 0x97a2, 0x25f0, 0xfa83, 0xc956, 0xf0e0, 0x0, 0x1);
        gbc.writeMem(0x4cb3, { 0xd0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x97a2, gbc.sp());
        EXPECT(0x4cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0371
        gbc.setState(0x3390, 0x6784, 0x8ec0, 0x8143, 0xb8a8, 0x52af, 0x0, 0x1);
        gbc.writeMem(0x3390, { 0xd0 });
        gbc.writeMem(0x6784, { 0x79, 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6786, gbc.sp());
        EXPECT(0xa779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0373
        gbc.setState(0x263a, 0x4fff, 0x4b10, 0x63b1, 0xc4f, 0xd77b, 0x1, 0x1);
        gbc.writeMem(0x263a, { 0xd0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4fff, gbc.sp());
        EXPECT(0x263b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0374
        gbc.setState(0xb632, 0xf745, 0x57e0, 0xb07b, 0x2d25, 0xa92c, 0x0, 0x1);
        gbc.writeMem(0xb632, { 0xd0 });
        gbc.writeMem(0xf745, { 0x41, 0xa6 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf747, gbc.sp());
        EXPECT(0xa641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb632));
        EXPECT(0x41, gbc.readMem(0xf745));
        EXPECT(0xa6, gbc.readMem(0xf746));
        // D0 0375
        gbc.setState(0x83ae, 0xa41c, 0x6ac0, 0xd223, 0x8cbb, 0x3210, 0x0, 0x1);
        gbc.writeMem(0x83ae, { 0xd0 });
        gbc.writeMem(0xa41c, { 0x65, 0xf7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa41e, gbc.sp());
        EXPECT(0xf765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x83ae));
        EXPECT(0x65, gbc.readMem(0xa41c));
        EXPECT(0xf7, gbc.readMem(0xa41d));
        // D0 0376
        gbc.setState(0xcb70, 0xd86a, 0xb680, 0xf905, 0x474a, 0xb50b, 0x0, 0x0);
        gbc.writeMem(0xcb70, { 0xd0 });
        gbc.writeMem(0xd86a, { 0x36, 0x91 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd86c, gbc.sp());
        EXPECT(0x9136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcb70));
        EXPECT(0x36, gbc.readMem(0xd86a));
        EXPECT(0x91, gbc.readMem(0xd86b));
        // D0 0377
        gbc.setState(0xa2b9, 0xb3a6, 0xe050, 0x93d8, 0x42df, 0x6748, 0x1, 0x1);
        gbc.writeMem(0xa2b9, { 0xd0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb3a6, gbc.sp());
        EXPECT(0xa2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa2b9));
        // D0 0378
        gbc.setState(0x79b5, 0xf393, 0x8f50, 0xec70, 0x70c2, 0x98d2, 0x0, 0x1);
        gbc.writeMem(0x79b5, { 0xd0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf393, gbc.sp());
        EXPECT(0x79b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0379
        gbc.setState(0x63b6, 0xe32e, 0x6330, 0xccf8, 0x82fb, 0xa9c7, 0x1, 0x0);
        gbc.writeMem(0x63b6, { 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe32e, gbc.sp());
        EXPECT(0x63b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 037A
        gbc.setState(0x52cf, 0xc9ce, 0xce10, 0xd6d0, 0xf92a, 0x73ab, 0x0, 0x0);
        gbc.writeMem(0x52cf, { 0xd0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc9ce, gbc.sp());
        EXPECT(0x52d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 037B
        gbc.setState(0x5b96, 0xe859, 0x9660, 0xefc9, 0x959c, 0xca22, 0x1, 0x1);
        gbc.writeMem(0x5b96, { 0xd0 });
        gbc.writeMem(0xe859, { 0x7c, 0x37 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe85b, gbc.sp());
        EXPECT(0x377c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xe859));
        EXPECT(0x37, gbc.readMem(0xe85a));
        // D0 037C
        gbc.setState(0xa60b, 0x543e, 0x4d80, 0xe3df, 0x7436, 0x68bc, 0x0, 0x0);
        gbc.writeMem(0x543e, { 0x24, 0x37 });
        gbc.writeMem(0xa60b, { 0xd0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5440, gbc.sp());
        EXPECT(0x3724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa60b));
        // D0 037D
        gbc.setState(0x7fae, 0xd6ba, 0xfdc0, 0x2fcd, 0x49b2, 0x86c8, 0x0, 0x1);
        gbc.writeMem(0x7fae, { 0xd0 });
        gbc.writeMem(0xd6ba, { 0x77, 0xd9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd6bc, gbc.sp());
        EXPECT(0xd977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd6ba));
        EXPECT(0xd9, gbc.readMem(0xd6bb));
        // D0 037E
        gbc.setState(0x7f7b, 0xbb01, 0xb7c0, 0xc43, 0x20ec, 0x5059, 0x0, 0x1);
        gbc.writeMem(0x7f7b, { 0xd0 });
        gbc.writeMem(0xbb01, { 0x45, 0x1c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbb03, gbc.sp());
        EXPECT(0x1c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xbb01));
        EXPECT(0x1c, gbc.readMem(0xbb02));
        // D0 037F
        gbc.setState(0x9c1a, 0xc811, 0xe820, 0xf403, 0x1310, 0xdd3c, 0x1, 0x1);
        gbc.writeMem(0x9c1a, { 0xd0 });
        gbc.writeMem(0xc811, { 0x13, 0x73 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc813, gbc.sp());
        EXPECT(0x7313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9c1a));
        EXPECT(0x13, gbc.readMem(0xc811));
        EXPECT(0x73, gbc.readMem(0xc812));
        // D0 0380
        gbc.setState(0xbaca, 0x9c06, 0x8c70, 0xd68f, 0x5933, 0xaf54, 0x1, 0x0);
        gbc.writeMem(0xbaca, { 0xd0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9c06, gbc.sp());
        EXPECT(0xbacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbaca));
        // D0 0381
        gbc.setState(0xef82, 0x34bd, 0xfef0, 0xf007, 0xde28, 0x584e, 0x0, 0x1);
        gbc.writeMem(0xef82, { 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x34bd, gbc.sp());
        EXPECT(0xef83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xef82));
        // D0 0382
        gbc.setState(0xc91f, 0xce53, 0x5060, 0xd0ac, 0xfa44, 0x3bc6, 0x1, 0x0);
        gbc.writeMem(0xc91f, { 0xd0 });
        gbc.writeMem(0xce53, { 0x9d, 0xa9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xce55, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc91f));
        EXPECT(0x9d, gbc.readMem(0xce53));
        EXPECT(0xa9, gbc.readMem(0xce54));
        // D0 0384
        gbc.setState(0x84e2, 0xd3c0, 0x7160, 0xf02c, 0x97aa, 0x111d, 0x1, 0x1);
        gbc.writeMem(0x84e2, { 0xd0 });
        gbc.writeMem(0xd3c0, { 0x14, 0xd0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd3c2, gbc.sp());
        EXPECT(0xd014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x84e2));
        EXPECT(0x14, gbc.readMem(0xd3c0));
        EXPECT(0xd0, gbc.readMem(0xd3c1));
        // D0 0385
        gbc.setState(0xc07a, 0x8c22, 0xb680, 0x7658, 0x261d, 0xbc54, 0x1, 0x1);
        gbc.writeMem(0x8c22, { 0xa, 0xae });
        gbc.writeMem(0xc07a, { 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8c24, gbc.sp());
        EXPECT(0xae0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8c22));
        EXPECT(0xae, gbc.readMem(0x8c23));
        EXPECT(0xd0, gbc.readMem(0xc07a));
        // D0 0386
        gbc.setState(0x6b37, 0xa411, 0x4830, 0xaab7, 0xd09, 0xc6e2, 0x1, 0x1);
        gbc.writeMem(0x6b37, { 0xd0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa411, gbc.sp());
        EXPECT(0x6b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0387
        gbc.setState(0xc017, 0xb744, 0xee60, 0x4eb0, 0xf9c, 0xb412, 0x1, 0x0);
        gbc.writeMem(0xb744, { 0xdb, 0xd5 });
        gbc.writeMem(0xc017, { 0xd0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb746, gbc.sp());
        EXPECT(0xd5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xb744));
        EXPECT(0xd5, gbc.readMem(0xb745));
        EXPECT(0xd0, gbc.readMem(0xc017));
        // D0 0388
        gbc.setState(0xb51b, 0x2d7f, 0x2fc0, 0x5af4, 0x28a1, 0xba0b, 0x1, 0x1);
        gbc.writeMem(0x2d7f, { 0xb9, 0x6b });
        gbc.writeMem(0xb51b, { 0xd0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2d81, gbc.sp());
        EXPECT(0x6bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb51b));
        // D0 0389
        gbc.setState(0x63aa, 0xb7cb, 0x41e0, 0x78a, 0xedd4, 0x1173, 0x0, 0x1);
        gbc.writeMem(0x63aa, { 0xd0 });
        gbc.writeMem(0xb7cb, { 0x93, 0xc0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb7cd, gbc.sp());
        EXPECT(0xc093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb7cb));
        EXPECT(0xc0, gbc.readMem(0xb7cc));
        // D0 038A
        gbc.setState(0x480e, 0x19d6, 0x18c0, 0x290, 0xbbcd, 0x41c4, 0x1, 0x1);
        gbc.writeMem(0x19d6, { 0x48, 0xbe });
        gbc.writeMem(0x480e, { 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x19d8, gbc.sp());
        EXPECT(0xbe48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 038B
        gbc.setState(0x1dbc, 0xfa96, 0xdc20, 0xcfd5, 0x6b3e, 0x2f07, 0x0, 0x1);
        gbc.writeMem(0x1dbc, { 0xd0 });
        gbc.writeMem(0xfa96, { 0xa2, 0x3a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfa98, gbc.sp());
        EXPECT(0x3aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xfa96));
        EXPECT(0x3a, gbc.readMem(0xfa97));
        // D0 038C
        gbc.setState(0xf18, 0xc2a8, 0x9610, 0x8677, 0xd62a, 0x93dc, 0x0, 0x0);
        gbc.writeMem(0xf18, { 0xd0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc2a8, gbc.sp());
        EXPECT(0xf19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 038D
        gbc.setState(0x236f, 0xc1be, 0xf4e0, 0xbd03, 0xc904, 0xf04d, 0x1, 0x0);
        gbc.writeMem(0x236f, { 0xd0 });
        gbc.writeMem(0xc1be, { 0x95, 0x97 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc1c0, gbc.sp());
        EXPECT(0x9795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc1be));
        EXPECT(0x97, gbc.readMem(0xc1bf));
        // D0 038E
        gbc.setState(0x5698, 0xac31, 0xad80, 0xf9ba, 0x3350, 0x50e, 0x0, 0x0);
        gbc.writeMem(0x5698, { 0xd0 });
        gbc.writeMem(0xac31, { 0x95, 0x76 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xac33, gbc.sp());
        EXPECT(0x7695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xac31));
        EXPECT(0x76, gbc.readMem(0xac32));
        // D0 038F
        gbc.setState(0x4093, 0x831, 0xfbb0, 0x1943, 0x262, 0x361, 0x1, 0x0);
        gbc.writeMem(0x4093, { 0xd0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x831, gbc.sp());
        EXPECT(0x4094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 0390
        gbc.setState(0x31f5, 0xb967, 0xddc0, 0x60c7, 0x211e, 0x392, 0x0, 0x1);
        gbc.writeMem(0x31f5, { 0xd0 });
        gbc.writeMem(0xb967, { 0x55, 0x5d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb969, gbc.sp());
        EXPECT(0x5d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb967));
        EXPECT(0x5d, gbc.readMem(0xb968));
        // D0 0391
        gbc.setState(0xae2d, 0x9da5, 0x3e60, 0x84bb, 0xa394, 0x1a0d, 0x1, 0x1);
        gbc.writeMem(0x9da5, { 0x41, 0x3a });
        gbc.writeMem(0xae2d, { 0xd0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9da7, gbc.sp());
        EXPECT(0x3a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x9da5));
        EXPECT(0x3a, gbc.readMem(0x9da6));
        EXPECT(0xd0, gbc.readMem(0xae2d));
        // D0 0392
        gbc.setState(0x2cf, 0x35c9, 0x19a0, 0xec0e, 0x9c9b, 0x7787, 0x1, 0x1);
        gbc.writeMem(0x2cf, { 0xd0 });
        gbc.writeMem(0x35c9, { 0x80, 0xe6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x35cb, gbc.sp());
        EXPECT(0xe680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 0393
        gbc.setState(0x4aeb, 0x931d, 0xf360, 0x1e88, 0x11a4, 0x962e, 0x0, 0x0);
        gbc.writeMem(0x4aeb, { 0xd0 });
        gbc.writeMem(0x931d, { 0x50, 0x15 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x931f, gbc.sp());
        EXPECT(0x1550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x931d));
        EXPECT(0x15, gbc.readMem(0x931e));
        // D0 0394
        gbc.setState(0x7ed9, 0x88e7, 0xd6a0, 0x5e0b, 0x535, 0x33a3, 0x0, 0x0);
        gbc.writeMem(0x7ed9, { 0xd0 });
        gbc.writeMem(0x88e7, { 0xd0, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x88e7));
        EXPECT(0xd7, gbc.readMem(0x88e8));
        // D0 0395
        gbc.setState(0x4727, 0xfbea, 0x9520, 0x8db9, 0x6aa7, 0xbe2f, 0x1, 0x1);
        gbc.writeMem(0x4727, { 0xd0 });
        gbc.writeMem(0xfbea, { 0x71, 0x5f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfbec, gbc.sp());
        EXPECT(0x5f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xfbea));
        EXPECT(0x5f, gbc.readMem(0xfbeb));
        // D0 0396
        gbc.setState(0x88ec, 0x5771, 0x1090, 0xf4a1, 0x16a4, 0x876e, 0x1, 0x1);
        gbc.writeMem(0x88ec, { 0xd0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5771, gbc.sp());
        EXPECT(0x88ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x88ec));
        // D0 0397
        gbc.setState(0xe82e, 0x230d, 0xb110, 0x93b2, 0x3ac3, 0xa8a7, 0x0, 0x1);
        gbc.writeMem(0xe82e, { 0xd0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x230d, gbc.sp());
        EXPECT(0xe82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe82e));
        // D0 0398
        gbc.setState(0x7aec, 0xbef2, 0xa5e0, 0xec5f, 0xa851, 0xa23, 0x1, 0x0);
        gbc.writeMem(0x7aec, { 0xd0 });
        gbc.writeMem(0xbef2, { 0x78, 0xb5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbef4, gbc.sp());
        EXPECT(0xb578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbef2));
        EXPECT(0xb5, gbc.readMem(0xbef3));
        // D0 0399
        gbc.setState(0x9b7e, 0x4058, 0x7900, 0x8031, 0xb9e8, 0xdd6, 0x1, 0x1);
        gbc.writeMem(0x4058, { 0x6c, 0xfe });
        gbc.writeMem(0x9b7e, { 0xd0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x405a, gbc.sp());
        EXPECT(0xfe6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9b7e));
        // D0 039A
        gbc.setState(0x851a, 0x6dc6, 0x2900, 0x83d2, 0xa329, 0xe162, 0x1, 0x0);
        gbc.writeMem(0x6dc6, { 0xc, 0xfa });
        gbc.writeMem(0x851a, { 0xd0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6dc8, gbc.sp());
        EXPECT(0xfa0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x851a));
        // D0 039B
        gbc.setState(0xa016, 0xdc01, 0x76c0, 0x7791, 0x6338, 0x8b3a, 0x0, 0x0);
        gbc.writeMem(0xa016, { 0xd0 });
        gbc.writeMem(0xdc01, { 0xf0, 0x37 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdc03, gbc.sp());
        EXPECT(0x37f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa016));
        EXPECT(0xf0, gbc.readMem(0xdc01));
        EXPECT(0x37, gbc.readMem(0xdc02));
        // D0 039C
        gbc.setState(0x4a89, 0x4598, 0xce00, 0x2df2, 0xdea4, 0xa1a6, 0x1, 0x0);
        gbc.writeMem(0x4598, { 0x97, 0x55 });
        gbc.writeMem(0x4a89, { 0xd0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x459a, gbc.sp());
        EXPECT(0x5597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 039D
        gbc.setState(0x6375, 0x4eaf, 0x2c70, 0x3f7e, 0x7a51, 0x7c0c, 0x1, 0x0);
        gbc.writeMem(0x6375, { 0xd0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4eaf, gbc.sp());
        EXPECT(0x6376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 039E
        gbc.setState(0x6074, 0x8c67, 0x7cc0, 0x3051, 0x43a4, 0xd1c2, 0x1, 0x0);
        gbc.writeMem(0x6074, { 0xd0 });
        gbc.writeMem(0x8c67, { 0x5f, 0x4c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8c69, gbc.sp());
        EXPECT(0x4c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x8c67));
        EXPECT(0x4c, gbc.readMem(0x8c68));
        // D0 039F
        gbc.setState(0x7b9f, 0xd47, 0xf2b0, 0x4bda, 0x26d0, 0x86c5, 0x0, 0x0);
        gbc.writeMem(0x7b9f, { 0xd0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd47, gbc.sp());
        EXPECT(0x7ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03A0
        gbc.setState(0xd934, 0x59b1, 0xbde0, 0x52fc, 0x647e, 0x6d24, 0x0, 0x0);
        gbc.writeMem(0x59b1, { 0xc, 0x90 });
        gbc.writeMem(0xd934, { 0xd0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x59b3, gbc.sp());
        EXPECT(0x900c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd934));
        // D0 03A1
        gbc.setState(0x2519, 0x5a12, 0x3d30, 0xdb5f, 0xa95f, 0x685a, 0x0, 0x1);
        gbc.writeMem(0x2519, { 0xd0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5a12, gbc.sp());
        EXPECT(0x251a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03A2
        gbc.setState(0x504, 0x19d6, 0xb450, 0x5762, 0x74b3, 0x56b6, 0x1, 0x0);
        gbc.writeMem(0x504, { 0xd0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x19d6, gbc.sp());
        EXPECT(0x505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03A3
        gbc.setState(0xe739, 0xbba2, 0x45a0, 0x9baf, 0xd67e, 0x1f70, 0x1, 0x0);
        gbc.writeMem(0xbba2, { 0x47, 0xae });
        gbc.writeMem(0xe739, { 0xd0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbba4, gbc.sp());
        EXPECT(0xae47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbba2));
        EXPECT(0xae, gbc.readMem(0xbba3));
        EXPECT(0xd0, gbc.readMem(0xe739));
        // D0 03A4
        gbc.setState(0x31f, 0x45d5, 0x5c70, 0x70de, 0xfe32, 0xeaed, 0x1, 0x1);
        gbc.writeMem(0x31f, { 0xd0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x45d5, gbc.sp());
        EXPECT(0x320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03A5
        gbc.setState(0x8153, 0xa5d9, 0x2ec0, 0xed47, 0x2536, 0xe2cd, 0x1, 0x0);
        gbc.writeMem(0x8153, { 0xd0 });
        gbc.writeMem(0xa5d9, { 0x16, 0x72 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa5db, gbc.sp());
        EXPECT(0x7216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8153));
        EXPECT(0x16, gbc.readMem(0xa5d9));
        EXPECT(0x72, gbc.readMem(0xa5da));
        // D0 03A6
        gbc.setState(0x9659, 0xec22, 0xc090, 0x39a6, 0x4aa9, 0xfe29, 0x1, 0x1);
        gbc.writeMem(0x9659, { 0xd0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xec22, gbc.sp());
        EXPECT(0x965a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9659));
        // D0 03A8
        gbc.setState(0xc81, 0x14b1, 0x2270, 0x6efd, 0x9a10, 0x7a17, 0x1, 0x0);
        gbc.writeMem(0xc81, { 0xd0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x14b1, gbc.sp());
        EXPECT(0xc82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03A9
        gbc.setState(0x126e, 0xc87c, 0x9920, 0xa8a7, 0xdfce, 0xa0fb, 0x1, 0x0);
        gbc.writeMem(0x126e, { 0xd0 });
        gbc.writeMem(0xc87c, { 0xc9, 0x70 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc87e, gbc.sp());
        EXPECT(0x70c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc87c));
        EXPECT(0x70, gbc.readMem(0xc87d));
        // D0 03AA
        gbc.setState(0x9328, 0xb88, 0xd140, 0xc81f, 0x7e0f, 0xc119, 0x1, 0x1);
        gbc.writeMem(0xb88, { 0xf1, 0x1d });
        gbc.writeMem(0x9328, { 0xd0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb8a, gbc.sp());
        EXPECT(0x1df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9328));
        // D0 03AB
        gbc.setState(0x6d76, 0x11ac, 0x7d40, 0xb5e3, 0x5e3f, 0xe56a, 0x0, 0x1);
        gbc.writeMem(0x11ac, { 0xb, 0xc7 });
        gbc.writeMem(0x6d76, { 0xd0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x11ae, gbc.sp());
        EXPECT(0xc70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 03AC
        gbc.setState(0xde77, 0xe262, 0x9d30, 0x9eb9, 0xfad6, 0xf354, 0x1, 0x0);
        gbc.writeMem(0xde77, { 0xd0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe262, gbc.sp());
        EXPECT(0xde78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xde77));
        // D0 03AD
        gbc.setState(0xcc26, 0xc7b2, 0xc050, 0x369d, 0x1be6, 0x541d, 0x0, 0x0);
        gbc.writeMem(0xcc26, { 0xd0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc7b2, gbc.sp());
        EXPECT(0xcc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcc26));
        // D0 03AE
        gbc.setState(0xc68f, 0x2ef8, 0x2c40, 0x584f, 0x3d9b, 0xa6f1, 0x1, 0x0);
        gbc.writeMem(0x2ef8, { 0x27, 0xa6 });
        gbc.writeMem(0xc68f, { 0xd0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2efa, gbc.sp());
        EXPECT(0xa627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc68f));
        // D0 03AF
        gbc.setState(0x8257, 0x2bf8, 0xa800, 0x4fa5, 0xc56b, 0x16f4, 0x0, 0x1);
        gbc.writeMem(0x2bf8, { 0x85, 0xa });
        gbc.writeMem(0x8257, { 0xd0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2bfa, gbc.sp());
        EXPECT(0xa85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8257));
        // D0 03B0
        gbc.setState(0xcaac, 0xbf47, 0x2330, 0x478, 0xa969, 0xe92c, 0x0, 0x1);
        gbc.writeMem(0xcaac, { 0xd0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbf47, gbc.sp());
        EXPECT(0xcaad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcaac));
        // D0 03B1
        gbc.setState(0x3116, 0x3a01, 0x4e50, 0x690a, 0xc64b, 0x1a89, 0x0, 0x1);
        gbc.writeMem(0x3116, { 0xd0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3a01, gbc.sp());
        EXPECT(0x3117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03B2
        gbc.setState(0xcaaf, 0x3da9, 0xecc0, 0xeb20, 0xa229, 0x77b9, 0x1, 0x0);
        gbc.writeMem(0x3da9, { 0xbe, 0x7a });
        gbc.writeMem(0xcaaf, { 0xd0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3dab, gbc.sp());
        EXPECT(0x7abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcaaf));
        // D0 03B3
        gbc.setState(0x831e, 0xaf98, 0xe6c0, 0x4fe1, 0x47a6, 0x858b, 0x1, 0x0);
        gbc.writeMem(0x831e, { 0xd0 });
        gbc.writeMem(0xaf98, { 0xed, 0x26 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaf9a, gbc.sp());
        EXPECT(0x26ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x831e));
        EXPECT(0xed, gbc.readMem(0xaf98));
        EXPECT(0x26, gbc.readMem(0xaf99));
        // D0 03B4
        gbc.setState(0xbda, 0x521e, 0x8dd0, 0x8fd8, 0x7b50, 0x8de9, 0x0, 0x1);
        gbc.writeMem(0xbda, { 0xd0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x521e, gbc.sp());
        EXPECT(0xbdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03B5
        gbc.setState(0x5990, 0xcb8c, 0xf4b0, 0x742b, 0xcad6, 0x3e74, 0x0, 0x1);
        gbc.writeMem(0x5990, { 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcb8c, gbc.sp());
        EXPECT(0x5991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03B6
        gbc.setState(0xcd14, 0x903c, 0x4110, 0xf863, 0xbb07, 0xfdf4, 0x0, 0x0);
        gbc.writeMem(0xcd14, { 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x903c, gbc.sp());
        EXPECT(0xcd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcd14));
        // D0 03B7
        gbc.setState(0x9a6a, 0xd4ea, 0x81c0, 0x27db, 0xdbf0, 0x76db, 0x1, 0x0);
        gbc.writeMem(0x9a6a, { 0xd0 });
        gbc.writeMem(0xd4ea, { 0x78, 0xa2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd4ec, gbc.sp());
        EXPECT(0xa278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9a6a));
        EXPECT(0x78, gbc.readMem(0xd4ea));
        EXPECT(0xa2, gbc.readMem(0xd4eb));
        // D0 03B9
        gbc.setState(0x908e, 0x42ce, 0x11b0, 0x8d67, 0x9d05, 0xaba8, 0x1, 0x1);
        gbc.writeMem(0x908e, { 0xd0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x42ce, gbc.sp());
        EXPECT(0x908f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x908e));
        // D0 03BA
        gbc.setState(0x8b53, 0x7cc3, 0x60a0, 0xb849, 0xf307, 0x3951, 0x0, 0x1);
        gbc.writeMem(0x7cc3, { 0xe4, 0x6f });
        gbc.writeMem(0x8b53, { 0xd0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7cc5, gbc.sp());
        EXPECT(0x6fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8b53));
        // D0 03BB
        gbc.setState(0x1b7e, 0x67fb, 0x7600, 0xff46, 0x92c, 0xd68, 0x1, 0x1);
        gbc.writeMem(0x1b7e, { 0xd0 });
        gbc.writeMem(0x67fb, { 0xa, 0xb3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x67fd, gbc.sp());
        EXPECT(0xb30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 03BC
        gbc.setState(0xb4db, 0x3143, 0x43e0, 0x4ecd, 0x39b3, 0x4d0c, 0x1, 0x0);
        gbc.writeMem(0x3143, { 0xaa, 0x32 });
        gbc.writeMem(0xb4db, { 0xd0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3145, gbc.sp());
        EXPECT(0x32aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb4db));
        // D0 03BD
        gbc.setState(0x2709, 0x556b, 0xd810, 0xb69f, 0xadfb, 0xd1a5, 0x0, 0x0);
        gbc.writeMem(0x2709, { 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x556b, gbc.sp());
        EXPECT(0x270a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03BE
        gbc.setState(0x9040, 0x626f, 0xde40, 0xb2ab, 0x6755, 0xdab5, 0x0, 0x1);
        gbc.writeMem(0x626f, { 0x76, 0x30 });
        gbc.writeMem(0x9040, { 0xd0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6271, gbc.sp());
        EXPECT(0x3076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9040));
        // D0 03BF
        gbc.setState(0x7ce9, 0x766c, 0xc6d0, 0x9d43, 0x2c4e, 0x758b, 0x1, 0x0);
        gbc.writeMem(0x7ce9, { 0xd0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x766c, gbc.sp());
        EXPECT(0x7cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03C0
        gbc.setState(0xc4a2, 0xab0e, 0xd8d0, 0xa262, 0xa7db, 0x1fd9, 0x1, 0x0);
        gbc.writeMem(0xc4a2, { 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xab0e, gbc.sp());
        EXPECT(0xc4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc4a2));
        // D0 03C1
        gbc.setState(0x44ad, 0x97df, 0xdbc0, 0x91d2, 0x2d94, 0xf8c1, 0x0, 0x0);
        gbc.writeMem(0x44ad, { 0xd0 });
        gbc.writeMem(0x97df, { 0xb4, 0xb6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x97e1, gbc.sp());
        EXPECT(0xb6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x97df));
        EXPECT(0xb6, gbc.readMem(0x97e0));
        // D0 03C2
        gbc.setState(0xb4f3, 0x1c9f, 0xbb90, 0xd5ed, 0x8342, 0x4481, 0x1, 0x1);
        gbc.writeMem(0xb4f3, { 0xd0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1c9f, gbc.sp());
        EXPECT(0xb4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb4f3));
        // D0 03C3
        gbc.setState(0xa32b, 0x6d24, 0x5b00, 0x8381, 0x2851, 0xd37f, 0x1, 0x0);
        gbc.writeMem(0x6d24, { 0x81, 0xb3 });
        gbc.writeMem(0xa32b, { 0xd0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6d26, gbc.sp());
        EXPECT(0xb381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa32b));
        // D0 03C4
        gbc.setState(0x637f, 0xf209, 0x4220, 0x5873, 0x9b4d, 0xe176, 0x0, 0x0);
        gbc.writeMem(0x637f, { 0xd0 });
        gbc.writeMem(0xf209, { 0xe0, 0x44 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf20b, gbc.sp());
        EXPECT(0x44e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xf209));
        EXPECT(0x44, gbc.readMem(0xf20a));
        // D0 03C5
        gbc.setState(0x417c, 0x8637, 0xd0b0, 0xd8cc, 0x5ce, 0x1d22, 0x1, 0x1);
        gbc.writeMem(0x417c, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8637, gbc.sp());
        EXPECT(0x417d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03C8
        gbc.setState(0x3fa9, 0x710a, 0xc270, 0x152a, 0x8178, 0x1b4c, 0x0, 0x0);
        gbc.writeMem(0x3fa9, { 0xd0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x710a, gbc.sp());
        EXPECT(0x3faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03C9
        gbc.setState(0xaae, 0xf946, 0x6d50, 0x1b17, 0xa059, 0xea21, 0x1, 0x0);
        gbc.writeMem(0xaae, { 0xd0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf946, gbc.sp());
        EXPECT(0xaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03CA
        gbc.setState(0x5b65, 0xc698, 0xd730, 0xa87f, 0x7ee5, 0x59b4, 0x1, 0x1);
        gbc.writeMem(0x5b65, { 0xd0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc698, gbc.sp());
        EXPECT(0x5b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03CB
        gbc.setState(0x8398, 0x2258, 0x6ba0, 0xaf79, 0xbeae, 0x18bd, 0x1, 0x1);
        gbc.writeMem(0x2258, { 0x6f, 0x55 });
        gbc.writeMem(0x8398, { 0xd0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x225a, gbc.sp());
        EXPECT(0x556f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8398));
        // D0 03CD
        gbc.setState(0x96e4, 0x273f, 0xd6d0, 0xd920, 0x33e0, 0xab21, 0x0, 0x1);
        gbc.writeMem(0x96e4, { 0xd0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x273f, gbc.sp());
        EXPECT(0x96e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x96e4));
        // D0 03CE
        gbc.setState(0xd3b8, 0xd0a, 0x87a0, 0xc426, 0x3b41, 0x7ba9, 0x1, 0x0);
        gbc.writeMem(0xd0a, { 0xc6, 0x1a });
        gbc.writeMem(0xd3b8, { 0xd0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd0c, gbc.sp());
        EXPECT(0x1ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd3b8));
        // D0 03CF
        gbc.setState(0xe90c, 0x52ef, 0x4fc0, 0xc503, 0x3586, 0x8128, 0x0, 0x1);
        gbc.writeMem(0x52ef, { 0xf0, 0x2f });
        gbc.writeMem(0xe90c, { 0xd0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x52f1, gbc.sp());
        EXPECT(0x2ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe90c));
        // D0 03D0
        gbc.setState(0xbbc7, 0xbbcb, 0x3630, 0x8004, 0xa914, 0x14e9, 0x1, 0x1);
        gbc.writeMem(0xbbc7, { 0xd0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbbcb, gbc.sp());
        EXPECT(0xbbc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbbc7));
        // D0 03D1
        gbc.setState(0x46c1, 0x3732, 0x8b70, 0xc2de, 0x4cd8, 0x1f95, 0x0, 0x1);
        gbc.writeMem(0x46c1, { 0xd0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3732, gbc.sp());
        EXPECT(0x46c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03D2
        gbc.setState(0xeab9, 0xc73, 0x9b40, 0xc894, 0xd83a, 0x7c27, 0x1, 0x1);
        gbc.writeMem(0xc73, { 0xf3, 0x32 });
        gbc.writeMem(0xeab9, { 0xd0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc75, gbc.sp());
        EXPECT(0x32f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xeab9));
        // D0 03D3
        gbc.setState(0x7a9b, 0xd957, 0x78c0, 0x189b, 0xdf6, 0x4241, 0x1, 0x0);
        gbc.writeMem(0x7a9b, { 0xd0 });
        gbc.writeMem(0xd957, { 0xd9, 0xaa });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd959, gbc.sp());
        EXPECT(0xaad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd957));
        EXPECT(0xaa, gbc.readMem(0xd958));
        // D0 03D4
        gbc.setState(0xcf5b, 0xe2df, 0xf320, 0x9223, 0xf578, 0xcf8b, 0x0, 0x1);
        gbc.writeMem(0xcf5b, { 0xd0 });
        gbc.writeMem(0xe2df, { 0x69, 0xdb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe2e1, gbc.sp());
        EXPECT(0xdb69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcf5b));
        EXPECT(0x69, gbc.readMem(0xe2df));
        EXPECT(0xdb, gbc.readMem(0xe2e0));
        // D0 03D5
        gbc.setState(0x6000, 0xf614, 0x5f10, 0xa58d, 0x6538, 0xf31a, 0x1, 0x1);
        gbc.writeMem(0x6000, { 0xd0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf614, gbc.sp());
        EXPECT(0x6001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03D7
        gbc.setState(0xeb99, 0xd216, 0x8a30, 0x4cd3, 0x56b8, 0xc43b, 0x0, 0x1);
        gbc.writeMem(0xeb99, { 0xd0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd216, gbc.sp());
        EXPECT(0xeb9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xeb99));
        // D0 03D8
        gbc.setState(0xb6c8, 0xa537, 0x94f0, 0x578c, 0x71b, 0xe5a2, 0x1, 0x0);
        gbc.writeMem(0xb6c8, { 0xd0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa537, gbc.sp());
        EXPECT(0xb6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb6c8));
        // D0 03D9
        gbc.setState(0x813a, 0x5c63, 0x3270, 0x96b7, 0x63b5, 0x6bc, 0x0, 0x0);
        gbc.writeMem(0x813a, { 0xd0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5c63, gbc.sp());
        EXPECT(0x813b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x813a));
        // D0 03DB
        gbc.setState(0xd3b3, 0x253, 0x4ad0, 0x2165, 0xbd99, 0xd0a8, 0x0, 0x1);
        gbc.writeMem(0xd3b3, { 0xd0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x253, gbc.sp());
        EXPECT(0xd3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd3b3));
        // D0 03DC
        gbc.setState(0xe7da, 0x4e01, 0xf050, 0xc8b0, 0x1359, 0xa181, 0x1, 0x1);
        gbc.writeMem(0xe7da, { 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4e01, gbc.sp());
        EXPECT(0xe7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe7da));
        // D0 03DD
        gbc.setState(0x36b4, 0xdd4d, 0x7a60, 0x8649, 0x45ec, 0x6bac, 0x0, 0x0);
        gbc.writeMem(0x36b4, { 0xd0 });
        gbc.writeMem(0xdd4d, { 0x4, 0xa });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdd4f, gbc.sp());
        EXPECT(0xa04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdd4d));
        EXPECT(0xa, gbc.readMem(0xdd4e));
        // D0 03DE
        gbc.setState(0x9bcf, 0x5616, 0xa030, 0xa8b, 0x4fcb, 0x1223, 0x1, 0x1);
        gbc.writeMem(0x9bcf, { 0xd0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5616, gbc.sp());
        EXPECT(0x9bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9bcf));
        // D0 03DF
        gbc.setState(0x5ce0, 0xba1f, 0x6dc0, 0x3c42, 0xd5f4, 0xa635, 0x1, 0x1);
        gbc.writeMem(0x5ce0, { 0xd0 });
        gbc.writeMem(0xba1f, { 0x4d, 0xad });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xba21, gbc.sp());
        EXPECT(0xad4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xba1f));
        EXPECT(0xad, gbc.readMem(0xba20));
        // D0 03E0
        gbc.setState(0x972c, 0x5db6, 0xdd00, 0x9697, 0x808c, 0x3777, 0x0, 0x1);
        gbc.writeMem(0x5db6, { 0x1e, 0xfa });
        gbc.writeMem(0x972c, { 0xd0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5db8, gbc.sp());
        EXPECT(0xfa1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x972c));
        // D0 03E1
        gbc.setState(0x6c31, 0x28a1, 0x5230, 0x70a9, 0x46e, 0x99b6, 0x0, 0x0);
        gbc.writeMem(0x6c31, { 0xd0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x28a1, gbc.sp());
        EXPECT(0x6c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03E2
        gbc.setState(0x5444, 0xd6b0, 0x75d0, 0xaa76, 0x4e8, 0x4797, 0x0, 0x1);
        gbc.writeMem(0x5444, { 0xd0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd6b0, gbc.sp());
        EXPECT(0x5445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03E3
        gbc.setState(0xd77, 0x6ae6, 0xd250, 0x72c4, 0x3e14, 0xfc65, 0x0, 0x1);
        gbc.writeMem(0xd77, { 0xd0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6ae6, gbc.sp());
        EXPECT(0xd78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D0 03E4
        gbc.setState(0x13c6, 0xebf8, 0xc0a0, 0x68fd, 0xcfc9, 0x8011, 0x1, 0x1);
        gbc.writeMem(0x13c6, { 0xd0 });
        gbc.writeMem(0xebf8, { 0x5d, 0xfc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xebfa, gbc.sp());
        EXPECT(0xfc5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xebf8));
        EXPECT(0xfc, gbc.readMem(0xebf9));
        // D0 03E5
        gbc.setState(0xc770, 0xe4ae, 0x6bc0, 0xbbac, 0x68a5, 0x778d, 0x1, 0x0);
        gbc.writeMem(0xc770, { 0xd0 });
        gbc.writeMem(0xe4ae, { 0x4c, 0x8f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe4b0, gbc.sp());
        EXPECT(0x8f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc770));
        EXPECT(0x4c, gbc.readMem(0xe4ae));
        EXPECT(0x8f, gbc.readMem(0xe4af));
        // D0 03E6
        gbc.setState(0x1e89, 0x5e38, 0xf760, 0x3fb9, 0xa0dd, 0x7d38, 0x1, 0x1);
        gbc.writeMem(0x1e89, { 0xd0 });
        gbc.writeMem(0x5e38, { 0xaf, 0x8f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5e3a, gbc.sp());
        EXPECT(0x8faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D0 03E7
        gbc.setState(0xaeb0, 0x53df, 0x7060, 0x54aa, 0x4227, 0x1d63, 0x0, 0x0);
        gbc.writeMem(0x53df, { 0xa4, 0xa7 });
        gbc.writeMem(0xaeb0, { 0xd0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x53e1, gbc.sp());
        EXPECT(0xa7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xaeb0));
    }
